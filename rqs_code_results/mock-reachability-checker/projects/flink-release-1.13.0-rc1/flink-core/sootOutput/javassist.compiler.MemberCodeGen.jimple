public class javassist.compiler.MemberCodeGen extends javassist.compiler.CodeGen
{
    protected javassist.compiler.MemberResolver resolver;
    protected javassist.CtClass thisClass;
    protected javassist.bytecode.MethodInfo thisMethod;
    protected boolean resultStatic;

    public void <init>(javassist.bytecode.Bytecode, javassist.CtClass, javassist.ClassPool)
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.bytecode.Bytecode r1;
        javassist.CtClass r2;
        javassist.ClassPool r3;
        javassist.compiler.MemberResolver $r4;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.bytecode.Bytecode;

        r2 := @parameter1: javassist.CtClass;

        r3 := @parameter2: javassist.ClassPool;

        specialinvoke r0.<javassist.compiler.CodeGen: void <init>(javassist.bytecode.Bytecode)>(r1);

        $r4 = new javassist.compiler.MemberResolver;

        specialinvoke $r4.<javassist.compiler.MemberResolver: void <init>(javassist.ClassPool)>(r3);

        r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver> = $r4;

        r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass> = r2;

        r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.MethodInfo thisMethod> = null;

        return;
    }

    public int getMajorVersion()
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.bytecode.ClassFile r1;
        javassist.CtClass $r2;
        int $i0, $i1;

        r0 := @this: javassist.compiler.MemberCodeGen;

        $r2 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        r1 = virtualinvoke $r2.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile2()>();

        if r1 != null goto label1;

        $i1 = <javassist.bytecode.ClassFile: int MAJOR_VERSION>;

        return $i1;

     label1:
        $i0 = virtualinvoke r1.<javassist.bytecode.ClassFile: int getMajorVersion()>();

        return $i0;
    }

    public void setThisMethod(javassist.CtMethod)
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.CtMethod r1;
        javassist.bytecode.MethodInfo $r2, $r4;
        javassist.compiler.TypeChecker $r3, $r5;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.CtMethod;

        $r2 = virtualinvoke r1.<javassist.CtMethod: javassist.bytecode.MethodInfo getMethodInfo2()>();

        r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.MethodInfo thisMethod> = $r2;

        $r3 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.TypeChecker typeChecker>;

        if $r3 == null goto label1;

        $r5 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.TypeChecker typeChecker>;

        $r4 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.MethodInfo thisMethod>;

        virtualinvoke $r5.<javassist.compiler.TypeChecker: void setThisMethod(javassist.bytecode.MethodInfo)>($r4);

     label1:
        return;
    }

    public javassist.CtClass getThisClass()
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.CtClass $r1;

        r0 := @this: javassist.compiler.MemberCodeGen;

        $r1 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        return $r1;
    }

    protected java.lang.String getThisName()
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.CtClass $r1;
        java.lang.String $r2, $r3;

        r0 := @this: javassist.compiler.MemberCodeGen;

        $r1 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        $r2 = virtualinvoke $r1.<javassist.CtClass: java.lang.String getName()>();

        $r3 = staticinvoke <javassist.compiler.MemberResolver: java.lang.String javaToJvmName(java.lang.String)>($r2);

        return $r3;
    }

    protected java.lang.String getSuperName() throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.CtClass $r1, $r2;
        java.lang.String $r3, $r4;

        r0 := @this: javassist.compiler.MemberCodeGen;

        $r1 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        $r2 = staticinvoke <javassist.compiler.MemberResolver: javassist.CtClass getSuperclass(javassist.CtClass)>($r1);

        $r3 = virtualinvoke $r2.<javassist.CtClass: java.lang.String getName()>();

        $r4 = staticinvoke <javassist.compiler.MemberResolver: java.lang.String javaToJvmName(java.lang.String)>($r3);

        return $r4;
    }

    protected void insertDefaultSuperCall() throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.bytecode.Bytecode $r1, $r3;
        javassist.CtClass $r2, $r4;

        r0 := @this: javassist.compiler.MemberCodeGen;

        $r1 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r1.<javassist.bytecode.Bytecode: void addAload(int)>(0);

        $r3 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r2 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        $r4 = staticinvoke <javassist.compiler.MemberResolver: javassist.CtClass getSuperclass(javassist.CtClass)>($r2);

        virtualinvoke $r3.<javassist.bytecode.Bytecode: void addInvokespecial(javassist.CtClass,java.lang.String,java.lang.String)>($r4, "<init>", "()V");

        return;
    }

    protected void atTryStmnt(javassist.compiler.ast.Stmnt) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.Stmnt r1, r3, r4, r7;
        javassist.bytecode.Bytecode r2;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7;
        javassist.compiler.ast.Declarator r6;
        javassist.CtClass r8;
        javassist.compiler.ast.ASTree $r9, $r10, $r11, $r12, $r13, $r14, $r18, $r19, $r20;
        java.util.ArrayList $r15;
        boolean $z0, $z1, $z2, $z5, z6, $z7;
        java.util.List $r17;
        javassist.compiler.MemberResolver $r21;
        java.lang.String $r22, $r23, $r24;
        java.lang.Integer $r25, $r26;
        javassist.compiler.CompileError $r27;
        javassist.compiler.MemberCodeGen$JsrHook $r28, r30;
        javassist.compiler.ast.ASTList r29;
        javassist.compiler.ast.Pair r31;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.Stmnt;

        r2 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r9 = virtualinvoke r1.<javassist.compiler.ast.Stmnt: javassist.compiler.ast.ASTree getLeft()>();

        r3 = (javassist.compiler.ast.Stmnt) $r9;

        if r3 != null goto label01;

        return;

     label01:
        $r10 = virtualinvoke r1.<javassist.compiler.ast.Stmnt: javassist.compiler.ast.ASTree getRight()>();

        $r11 = virtualinvoke $r10.<javassist.compiler.ast.ASTree: javassist.compiler.ast.ASTree getLeft()>();

        r29 = (javassist.compiler.ast.ASTList) $r11;

        $r12 = virtualinvoke r1.<javassist.compiler.ast.Stmnt: javassist.compiler.ast.ASTree getRight()>();

        $r13 = virtualinvoke $r12.<javassist.compiler.ast.ASTree: javassist.compiler.ast.ASTree getRight()>();

        $r14 = virtualinvoke $r13.<javassist.compiler.ast.ASTree: javassist.compiler.ast.ASTree getLeft()>();

        r4 = (javassist.compiler.ast.Stmnt) $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r30 = null;

        if r4 == null goto label02;

        $r28 = new javassist.compiler.MemberCodeGen$JsrHook;

        specialinvoke $r28.<javassist.compiler.MemberCodeGen$JsrHook: void <init>(javassist.compiler.CodeGen)>(r0);

        r30 = $r28;

     label02:
        i0 = virtualinvoke r2.<javassist.bytecode.Bytecode: int currentPc()>();

        virtualinvoke r3.<javassist.compiler.ast.Stmnt: void accept(javassist.compiler.ast.Visitor)>(r0);

        i1 = virtualinvoke r2.<javassist.bytecode.Bytecode: int currentPc()>();

        if i0 != i1 goto label03;

        $r27 = new javassist.compiler.CompileError;

        specialinvoke $r27.<javassist.compiler.CompileError: void <init>(java.lang.String)>("empty try block");

        throw $r27;

     label03:
        $z0 = r0.<javassist.compiler.MemberCodeGen: boolean hasReturned>;

        if $z0 != 0 goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        z6 = $z5;

        if $z5 == 0 goto label06;

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addOpcode(int)>(167);

        $i5 = virtualinvoke r2.<javassist.bytecode.Bytecode: int currentPc()>();

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r26);

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addIndex(int)>(0);

     label06:
        i2 = virtualinvoke r0.<javassist.compiler.MemberCodeGen: int getMaxLocals()>();

        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void incMaxLocals(int)>(1);

     label07:
        if r29 == null goto label10;

        $r18 = virtualinvoke r29.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        r31 = (javassist.compiler.ast.Pair) $r18;

        r29 = virtualinvoke r29.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        $r19 = virtualinvoke r31.<javassist.compiler.ast.Pair: javassist.compiler.ast.ASTree getLeft()>();

        r6 = (javassist.compiler.ast.Declarator) $r19;

        $r20 = virtualinvoke r31.<javassist.compiler.ast.Pair: javassist.compiler.ast.ASTree getRight()>();

        r7 = (javassist.compiler.ast.Stmnt) $r20;

        virtualinvoke r6.<javassist.compiler.ast.Declarator: void setLocalVar(int)>(i2);

        $r21 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        $r22 = virtualinvoke r6.<javassist.compiler.ast.Declarator: java.lang.String getClassName()>();

        r8 = virtualinvoke $r21.<javassist.compiler.MemberResolver: javassist.CtClass lookupClassByJvmName(java.lang.String)>($r22);

        $r23 = virtualinvoke r8.<javassist.CtClass: java.lang.String getName()>();

        $r24 = staticinvoke <javassist.compiler.MemberResolver: java.lang.String javaToJvmName(java.lang.String)>($r23);

        virtualinvoke r6.<javassist.compiler.ast.Declarator: void setClassName(java.lang.String)>($r24);

        $i3 = virtualinvoke r2.<javassist.bytecode.Bytecode: int currentPc()>();

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addExceptionHandler(int,int,int,javassist.CtClass)>(i0, i1, $i3, r8);

        virtualinvoke r2.<javassist.bytecode.Bytecode: void growStack(int)>(1);

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addAstore(int)>(i2);

        r0.<javassist.compiler.MemberCodeGen: boolean hasReturned> = 0;

        if r7 == null goto label08;

        virtualinvoke r7.<javassist.compiler.ast.Stmnt: void accept(javassist.compiler.ast.Visitor)>(r0);

     label08:
        $z2 = r0.<javassist.compiler.MemberCodeGen: boolean hasReturned>;

        if $z2 != 0 goto label09;

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addOpcode(int)>(167);

        $i4 = virtualinvoke r2.<javassist.bytecode.Bytecode: int currentPc()>();

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r25);

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addIndex(int)>(0);

        z6 = 1;

     label09:
        goto label07;

     label10:
        if r4 == null goto label12;

        virtualinvoke r30.<javassist.compiler.MemberCodeGen$JsrHook: void remove(javassist.compiler.CodeGen)>(r0);

        i6 = virtualinvoke r2.<javassist.bytecode.Bytecode: int currentPc()>();

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addExceptionHandler(int,int,int,int)>(i0, i6, i6, 0);

        virtualinvoke r2.<javassist.bytecode.Bytecode: void growStack(int)>(1);

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addAstore(int)>(i2);

        r0.<javassist.compiler.MemberCodeGen: boolean hasReturned> = 0;

        virtualinvoke r4.<javassist.compiler.ast.Stmnt: void accept(javassist.compiler.ast.Visitor)>(r0);

        $z1 = r0.<javassist.compiler.MemberCodeGen: boolean hasReturned>;

        if $z1 != 0 goto label11;

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addAload(int)>(i2);

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addOpcode(int)>(191);

     label11:
        $r17 = r30.<javassist.compiler.MemberCodeGen$JsrHook: java.util.List jsrList>;

        specialinvoke r0.<javassist.compiler.MemberCodeGen: void addFinally(java.util.List,javassist.compiler.ast.Stmnt)>($r17, r4);

     label12:
        i7 = virtualinvoke r2.<javassist.bytecode.Bytecode: int currentPc()>();

        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void patchGoto(java.util.List,int)>($r15, i7);

        if z6 != 0 goto label13;

        $z7 = 1;

        goto label14;

     label13:
        $z7 = 0;

     label14:
        r0.<javassist.compiler.MemberCodeGen: boolean hasReturned> = $z7;

        if r4 == null goto label15;

        if z6 == 0 goto label15;

        virtualinvoke r4.<javassist.compiler.ast.Stmnt: void accept(javassist.compiler.ast.Visitor)>(r0);

     label15:
        return;
    }

    private void addFinally(java.util.List, javassist.compiler.ast.Stmnt) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        java.util.List r1;
        javassist.compiler.ast.Stmnt r2;
        javassist.bytecode.Bytecode r3;
        java.util.Iterator r4;
        int[] r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        javassist.compiler.MemberCodeGen$JsrHook2 $r8;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: javassist.compiler.ast.Stmnt;

        r3 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (int[]) $r7;

        i0 = r5[0];

        $i1 = virtualinvoke r3.<javassist.bytecode.Bytecode: int currentPc()>();

        $i2 = $i1 - i0;

        $i3 = $i2 + 1;

        virtualinvoke r3.<javassist.bytecode.Bytecode: void write16bit(int,int)>(i0, $i3);

        $r8 = new javassist.compiler.MemberCodeGen$JsrHook2;

        specialinvoke $r8.<javassist.compiler.MemberCodeGen$JsrHook2: void <init>(javassist.compiler.CodeGen,int[])>(r0, r5);

        virtualinvoke r2.<javassist.compiler.ast.Stmnt: void accept(javassist.compiler.ast.Visitor)>(r0);

        virtualinvoke $r8.<javassist.compiler.CodeGen$ReturnHook: void remove(javassist.compiler.CodeGen)>(r0);

        $z1 = r0.<javassist.compiler.MemberCodeGen: boolean hasReturned>;

        if $z1 != 0 goto label2;

        virtualinvoke r3.<javassist.bytecode.Bytecode: void addOpcode(int)>(167);

        $i4 = i0 + 3;

        $i5 = virtualinvoke r3.<javassist.bytecode.Bytecode: int currentPc()>();

        $i6 = $i4 - $i5;

        virtualinvoke r3.<javassist.bytecode.Bytecode: void addIndex(int)>($i6);

     label2:
        goto label1;

     label3:
        return;
    }

    public void atNewExpr(javassist.compiler.ast.NewExpr) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.NewExpr r1;
        javassist.CtClass r2;
        java.lang.String r3, $r9;
        javassist.compiler.ast.ASTList r4, $r6;
        boolean $z0;
        javassist.compiler.MemberResolver $r5;
        javassist.bytecode.Bytecode $r7, $r8;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.NewExpr;

        $z0 = virtualinvoke r1.<javassist.compiler.ast.NewExpr: boolean isArray()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void atNewArrayExpr(javassist.compiler.ast.NewExpr)>(r1);

        goto label2;

     label1:
        $r5 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        $r6 = virtualinvoke r1.<javassist.compiler.ast.NewExpr: javassist.compiler.ast.ASTList getClassName()>();

        r2 = virtualinvoke $r5.<javassist.compiler.MemberResolver: javassist.CtClass lookupClassByName(javassist.compiler.ast.ASTList)>($r6);

        r3 = virtualinvoke r2.<javassist.CtClass: java.lang.String getName()>();

        r4 = virtualinvoke r1.<javassist.compiler.ast.NewExpr: javassist.compiler.ast.ASTList getArguments()>();

        $r7 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r7.<javassist.bytecode.Bytecode: void addNew(java.lang.String)>(r3);

        $r8 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r8.<javassist.bytecode.Bytecode: void addOpcode(int)>(89);

        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void atMethodCallCore(javassist.CtClass,java.lang.String,javassist.compiler.ast.ASTList,boolean,boolean,int,javassist.compiler.MemberResolver$Method)>(r2, "<init>", r4, 0, 1, -1, null);

        r0.<javassist.compiler.MemberCodeGen: int exprType> = 307;

        r0.<javassist.compiler.MemberCodeGen: int arrayDim> = 0;

        $r9 = staticinvoke <javassist.compiler.MemberResolver: java.lang.String javaToJvmName(java.lang.String)>(r3);

        r0.<javassist.compiler.MemberCodeGen: java.lang.String className> = $r9;

     label2:
        return;
    }

    public void atNewArrayExpr(javassist.compiler.ast.NewExpr) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.NewExpr r1;
        int i0, $i1;
        javassist.compiler.ast.ASTList r2, r3;
        javassist.compiler.ast.ArrayInit r4;
        javassist.compiler.ast.ASTree r5;
        java.lang.String $r6;
        javassist.compiler.CompileError $r7;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.NewExpr;

        i0 = virtualinvoke r1.<javassist.compiler.ast.NewExpr: int getArrayType()>();

        r2 = virtualinvoke r1.<javassist.compiler.ast.NewExpr: javassist.compiler.ast.ASTList getArraySize()>();

        r3 = virtualinvoke r1.<javassist.compiler.ast.NewExpr: javassist.compiler.ast.ASTList getClassName()>();

        r4 = virtualinvoke r1.<javassist.compiler.ast.NewExpr: javassist.compiler.ast.ArrayInit getInitializer()>();

        $i1 = virtualinvoke r2.<javassist.compiler.ast.ASTList: int length()>();

        if $i1 <= 1 goto label2;

        if r4 == null goto label1;

        $r7 = new javassist.compiler.CompileError;

        specialinvoke $r7.<javassist.compiler.CompileError: void <init>(java.lang.String)>("sorry, multi-dimensional array initializer for new is not supported");

        throw $r7;

     label1:
        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void atMultiNewArray(int,javassist.compiler.ast.ASTList,javassist.compiler.ast.ASTList)>(i0, r3, r2);

        return;

     label2:
        r5 = virtualinvoke r2.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $r6 = staticinvoke <javassist.compiler.ast.Declarator: java.lang.String astToClassName(javassist.compiler.ast.ASTList,char)>(r3, 47);

        specialinvoke r0.<javassist.compiler.MemberCodeGen: void atNewArrayExpr2(int,javassist.compiler.ast.ASTree,java.lang.String,javassist.compiler.ast.ArrayInit)>(i0, r5, $r6, r4);

        return;
    }

    private void atNewArrayExpr2(int, javassist.compiler.ast.ASTree, java.lang.String, javassist.compiler.ast.ArrayInit) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        int i0, $i1, $i2, i3, i5, i6;
        javassist.compiler.ast.ASTree r1, $r8;
        java.lang.String r2, $r11, r13;
        javassist.compiler.ast.ArrayInit r3;
        javassist.compiler.CompileError $r4, $r12;
        javassist.bytecode.Bytecode $r5, $r6, $r7, $r9, $r10, $r14, $r15;
        boolean $z0;
        byte b4;
        javassist.compiler.ast.ASTList r16;

        r0 := @this: javassist.compiler.MemberCodeGen;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.compiler.ast.ASTree;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: javassist.compiler.ast.ArrayInit;

        if r3 != null goto label02;

        if r1 != null goto label01;

        $r12 = new javassist.compiler.CompileError;

        specialinvoke $r12.<javassist.compiler.CompileError: void <init>(java.lang.String)>("no array size");

        throw $r12;

     label01:
        virtualinvoke r1.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

        goto label04;

     label02:
        if r1 != null goto label03;

        i3 = virtualinvoke r3.<javassist.compiler.ast.ArrayInit: int length()>();

        $r5 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r5.<javassist.bytecode.Bytecode: void addIconst(int)>(i3);

        goto label04;

     label03:
        $r4 = new javassist.compiler.CompileError;

        specialinvoke $r4.<javassist.compiler.CompileError: void <init>(java.lang.String)>("unnecessary array size specified for new");

        throw $r4;

     label04:
        if i0 != 307 goto label05;

        r13 = virtualinvoke r0.<javassist.compiler.MemberCodeGen: java.lang.String resolveClassName(java.lang.String)>(r2);

        $r10 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r11 = staticinvoke <javassist.compiler.MemberResolver: java.lang.String jvmToJavaName(java.lang.String)>(r13);

        virtualinvoke $r10.<javassist.bytecode.Bytecode: void addAnewarray(java.lang.String)>($r11);

        goto label16;

     label05:
        r13 = null;

        b4 = 0;

        lookupswitch(i0)
        {
            case 301: goto label06;
            case 303: goto label10;
            case 306: goto label07;
            case 312: goto label09;
            case 317: goto label08;
            case 324: goto label12;
            case 326: goto label13;
            case 334: goto label11;
            default: goto label14;
        };

     label06:
        b4 = 4;

        goto label15;

     label07:
        b4 = 5;

        goto label15;

     label08:
        b4 = 6;

        goto label15;

     label09:
        b4 = 7;

        goto label15;

     label10:
        b4 = 8;

        goto label15;

     label11:
        b4 = 9;

        goto label15;

     label12:
        b4 = 10;

        goto label15;

     label13:
        b4 = 11;

        goto label15;

     label14:
        staticinvoke <javassist.compiler.MemberCodeGen: void badNewExpr()>();

     label15:
        $r14 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r14.<javassist.bytecode.Bytecode: void addOpcode(int)>(188);

        $r15 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r15.<javassist.bytecode.Bytecode: void add(int)>(b4);

     label16:
        if r3 == null goto label19;

        i5 = virtualinvoke r3.<javassist.compiler.ast.ArrayInit: int length()>();

        r16 = r3;

        i6 = 0;

     label17:
        if i6 >= i5 goto label19;

        $r6 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r6.<javassist.bytecode.Bytecode: void addOpcode(int)>(89);

        $r7 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r7.<javassist.bytecode.Bytecode: void addIconst(int)>(i6);

        $r8 = virtualinvoke r16.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        virtualinvoke $r8.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

        $z0 = staticinvoke <javassist.compiler.MemberCodeGen: boolean isRefType(int)>(i0);

        if $z0 != 0 goto label18;

        $i2 = r0.<javassist.compiler.MemberCodeGen: int exprType>;

        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void atNumCastExpr(int,int)>($i2, i0);

     label18:
        $r9 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        $i1 = staticinvoke <javassist.compiler.MemberCodeGen: int getArrayWriteOp(int,int)>(i0, 0);

        virtualinvoke $r9.<javassist.bytecode.Bytecode: void addOpcode(int)>($i1);

        r16 = virtualinvoke r16.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        i6 = i6 + 1;

        goto label17;

     label19:
        r0.<javassist.compiler.MemberCodeGen: int exprType> = i0;

        r0.<javassist.compiler.MemberCodeGen: int arrayDim> = 1;

        r0.<javassist.compiler.MemberCodeGen: java.lang.String className> = r13;

        return;
    }

    private static void badNewExpr() throws javassist.compiler.CompileError
    {
        javassist.compiler.CompileError $r0;

        $r0 = new javassist.compiler.CompileError;

        specialinvoke $r0.<javassist.compiler.CompileError: void <init>(java.lang.String)>("bad new expression");

        throw $r0;
    }

    protected void atArrayVariableAssign(javassist.compiler.ast.ArrayInit, int, int, java.lang.String) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.ArrayInit r1;
        int i0, i1;
        java.lang.String r2;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.ArrayInit;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<javassist.compiler.MemberCodeGen: void atNewArrayExpr2(int,javassist.compiler.ast.ASTree,java.lang.String,javassist.compiler.ast.ArrayInit)>(i0, null, r2, r1);

        return;
    }

    public void atArrayInit(javassist.compiler.ast.ArrayInit) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.ArrayInit r1;
        javassist.compiler.CompileError $r2;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.ArrayInit;

        $r2 = new javassist.compiler.CompileError;

        specialinvoke $r2.<javassist.compiler.CompileError: void <init>(java.lang.String)>("array initializer is not supported");

        throw $r2;
    }

    protected void atMultiNewArray(int, javassist.compiler.ast.ASTList, javassist.compiler.ast.ASTList) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        int i0, i1, $i3, i4;
        javassist.compiler.ast.ASTList r1, r6;
        javassist.bytecode.Bytecode $r2;
        java.lang.String $r3, $r4, r8;
        javassist.compiler.CompileError $r5;
        javassist.compiler.ast.ASTree r7;

        r0 := @this: javassist.compiler.MemberCodeGen;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.compiler.ast.ASTList;

        r6 := @parameter2: javassist.compiler.ast.ASTList;

        i1 = virtualinvoke r6.<javassist.compiler.ast.ASTList: int length()>();

        i4 = 0;

     label1:
        if r6 == null goto label4;

        r7 = virtualinvoke r6.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        if r7 != null goto label2;

        goto label4;

     label2:
        i4 = i4 + 1;

        virtualinvoke r7.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

        $i3 = r0.<javassist.compiler.MemberCodeGen: int exprType>;

        if $i3 == 324 goto label3;

        $r5 = new javassist.compiler.CompileError;

        specialinvoke $r5.<javassist.compiler.CompileError: void <init>(java.lang.String)>("bad type for array size");

        throw $r5;

     label3:
        r6 = virtualinvoke r6.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        goto label1;

     label4:
        r0.<javassist.compiler.MemberCodeGen: int exprType> = i0;

        r0.<javassist.compiler.MemberCodeGen: int arrayDim> = i1;

        if i0 != 307 goto label5;

        $r3 = virtualinvoke r0.<javassist.compiler.MemberCodeGen: java.lang.String resolveClassName(javassist.compiler.ast.ASTList)>(r1);

        r0.<javassist.compiler.MemberCodeGen: java.lang.String className> = $r3;

        $r4 = r0.<javassist.compiler.MemberCodeGen: java.lang.String className>;

        r8 = staticinvoke <javassist.compiler.MemberCodeGen: java.lang.String toJvmArrayName(java.lang.String,int)>($r4, i1);

        goto label6;

     label5:
        r8 = staticinvoke <javassist.compiler.MemberCodeGen: java.lang.String toJvmTypeName(int,int)>(i0, i1);

     label6:
        $r2 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r2.<javassist.bytecode.Bytecode: int addMultiNewarray(java.lang.String,int)>(r8, i4);

        return;
    }

    public void atCallExpr(javassist.compiler.ast.CallExpr) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.CallExpr r1;
        javassist.compiler.ast.ASTree r2, r6, $r9, $r10, $r20, $r30;
        javassist.compiler.ast.ASTList r3;
        javassist.compiler.MemberResolver$Method r4;
        javassist.compiler.ast.Expr r5;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r7, $r12, $r22, $r31, r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10;
        javassist.compiler.ast.Symbol $r11, $r21;
        javassist.compiler.MemberResolver $r13, $r14, $r19;
        javassist.compiler.ast.Keyword $r15, $r24;
        javassist.CtClass $r16, r33;
        javassist.bytecode.Bytecode $r17, $r18, $r23, $r27, $r28;
        javassist.compiler.CompileError $r25;
        javassist.compiler.ast.Member $r26;
        javassist.compiler.NoFieldException $r29;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.CallExpr;

        r32 = null;

        r33 = null;

        r2 = virtualinvoke r1.<javassist.compiler.ast.CallExpr: javassist.compiler.ast.ASTree oprand1()>();

        $r9 = virtualinvoke r1.<javassist.compiler.ast.CallExpr: javassist.compiler.ast.ASTree oprand2()>();

        r3 = (javassist.compiler.ast.ASTList) $r9;

        z9 = 0;

        z10 = 0;

        i5 = -1;

        r4 = virtualinvoke r1.<javassist.compiler.ast.CallExpr: javassist.compiler.MemberResolver$Method getMethod()>();

        $z0 = r2 instanceof javassist.compiler.ast.Member;

        if $z0 == 0 goto label03;

        $r26 = (javassist.compiler.ast.Member) r2;

        r32 = virtualinvoke $r26.<javassist.compiler.ast.Member: java.lang.String get()>();

        r33 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        $z7 = r0.<javassist.compiler.MemberCodeGen: boolean inStaticMethod>;

        if $z7 != 0 goto label01;

        if r4 == null goto label02;

        $z8 = virtualinvoke r4.<javassist.compiler.MemberResolver$Method: boolean isStatic()>();

        if $z8 == 0 goto label02;

     label01:
        z9 = 1;

        goto label21;

     label02:
        $r27 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        i5 = virtualinvoke $r27.<javassist.bytecode.Bytecode: int currentPc()>();

        $r28 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r28.<javassist.bytecode.Bytecode: void addAload(int)>(0);

        goto label21;

     label03:
        $z1 = r2 instanceof javassist.compiler.ast.Keyword;

        if $z1 == 0 goto label05;

        z10 = 1;

        r32 = "<init>";

        r33 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        $z6 = r0.<javassist.compiler.MemberCodeGen: boolean inStaticMethod>;

        if $z6 == 0 goto label04;

        $r25 = new javassist.compiler.CompileError;

        specialinvoke $r25.<javassist.compiler.CompileError: void <init>(java.lang.String)>("a constructor cannot be static");

        throw $r25;

     label04:
        $r23 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r23.<javassist.bytecode.Bytecode: void addAload(int)>(0);

        $r24 = (javassist.compiler.ast.Keyword) r2;

        $i4 = virtualinvoke $r24.<javassist.compiler.ast.Keyword: int get()>();

        if $i4 != 336 goto label21;

        r33 = staticinvoke <javassist.compiler.MemberResolver: javassist.CtClass getSuperclass(javassist.CtClass)>(r33);

        goto label21;

     label05:
        $z2 = r2 instanceof javassist.compiler.ast.Expr;

        if $z2 == 0 goto label20;

        r5 = (javassist.compiler.ast.Expr) r2;

        $r10 = virtualinvoke r5.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand2()>();

        $r11 = (javassist.compiler.ast.Symbol) $r10;

        r32 = virtualinvoke $r11.<javassist.compiler.ast.Symbol: java.lang.String get()>();

        i0 = virtualinvoke r5.<javassist.compiler.ast.Expr: int getOperator()>();

        if i0 != 35 goto label06;

        $r19 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        $r20 = virtualinvoke r5.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand1()>();

        $r21 = (javassist.compiler.ast.Symbol) $r20;

        $r22 = virtualinvoke $r21.<javassist.compiler.ast.Symbol: java.lang.String get()>();

        r33 = virtualinvoke $r19.<javassist.compiler.MemberResolver: javassist.CtClass lookupClass(java.lang.String,boolean)>($r22, 0);

        z9 = 1;

        goto label19;

     label06:
        if i0 != 46 goto label18;

        r6 = virtualinvoke r5.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand1()>();

        r7 = staticinvoke <javassist.compiler.TypeChecker: java.lang.String isDotSuper(javassist.compiler.ast.ASTree)>(r6);

        if r7 == null goto label09;

        z10 = 1;

        $r16 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        r33 = staticinvoke <javassist.compiler.MemberResolver: javassist.CtClass getSuperInterface(javassist.CtClass,java.lang.String)>($r16, r7);

        $z4 = r0.<javassist.compiler.MemberCodeGen: boolean inStaticMethod>;

        if $z4 != 0 goto label07;

        if r4 == null goto label08;

        $z5 = virtualinvoke r4.<javassist.compiler.MemberResolver$Method: boolean isStatic()>();

        if $z5 == 0 goto label08;

     label07:
        z9 = 1;

        goto label17;

     label08:
        $r17 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        i5 = virtualinvoke $r17.<javassist.bytecode.Bytecode: int currentPc()>();

        $r18 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r18.<javassist.bytecode.Bytecode: void addAload(int)>(0);

        goto label17;

     label09:
        $z3 = r6 instanceof javassist.compiler.ast.Keyword;

        if $z3 == 0 goto label10;

        $r15 = (javassist.compiler.ast.Keyword) r6;

        $i3 = virtualinvoke $r15.<javassist.compiler.ast.Keyword: int get()>();

        if $i3 != 336 goto label10;

        z10 = 1;

     label10:
        virtualinvoke r6.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

     label11:
        goto label14;

     label12:
        $r29 := @caughtexception;

        $r30 = virtualinvoke $r29.<javassist.compiler.NoFieldException: javassist.compiler.ast.ASTree getExpr()>();

        if $r30 == r6 goto label13;

        throw $r29;

     label13:
        r0.<javassist.compiler.MemberCodeGen: int exprType> = 307;

        r0.<javassist.compiler.MemberCodeGen: int arrayDim> = 0;

        $r31 = virtualinvoke $r29.<javassist.compiler.NoFieldException: java.lang.String getField()>();

        r0.<javassist.compiler.MemberCodeGen: java.lang.String className> = $r31;

        z9 = 1;

     label14:
        $i1 = r0.<javassist.compiler.MemberCodeGen: int arrayDim>;

        if $i1 <= 0 goto label15;

        $r14 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        r33 = virtualinvoke $r14.<javassist.compiler.MemberResolver: javassist.CtClass lookupClass(java.lang.String,boolean)>("java.lang.Object", 1);

        goto label17;

     label15:
        $i2 = r0.<javassist.compiler.MemberCodeGen: int exprType>;

        if $i2 != 307 goto label16;

        $r13 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        $r12 = r0.<javassist.compiler.MemberCodeGen: java.lang.String className>;

        r33 = virtualinvoke $r13.<javassist.compiler.MemberResolver: javassist.CtClass lookupClassByJvmName(java.lang.String)>($r12);

        goto label17;

     label16:
        staticinvoke <javassist.compiler.MemberCodeGen: void badMethod()>();

     label17:
        goto label19;

     label18:
        staticinvoke <javassist.compiler.MemberCodeGen: void badMethod()>();

     label19:
        goto label21;

     label20:
        staticinvoke <javassist.compiler.MemberCodeGen: void fatal()>();

     label21:
        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void atMethodCallCore(javassist.CtClass,java.lang.String,javassist.compiler.ast.ASTList,boolean,boolean,int,javassist.compiler.MemberResolver$Method)>(r33, r32, r3, z9, z10, i5, r4);

        return;

        catch javassist.compiler.NoFieldException from label10 to label11 with label12;
    }

    private static void badMethod() throws javassist.compiler.CompileError
    {
        javassist.compiler.CompileError $r0;

        $r0 = new javassist.compiler.CompileError;

        specialinvoke $r0.<javassist.compiler.CompileError: void <init>(java.lang.String)>("bad method");

        throw $r0;
    }

    public void atMethodCallCore(javassist.CtClass, java.lang.String, javassist.compiler.ast.ASTList, boolean, boolean, int, javassist.compiler.MemberResolver$Method) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.CtClass r1, $r15;
        java.lang.String r2, $r11, r20;
        javassist.compiler.ast.ASTList r3;
        boolean z0, $z1, $z2, z3;
        int i0, i1;
        int[] r4, r5;
        java.lang.String[] r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12;
        javassist.compiler.CompileError $r13;
        javassist.bytecode.MethodInfo $r14;
        javassist.compiler.MemberResolver $r16;
        javassist.bytecode.Bytecode $r17, $r19;
        javassist.compiler.MemberResolver$Method r18;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.compiler.ast.ASTList;

        z3 := @parameter3: boolean;

        z0 := @parameter4: boolean;

        i0 := @parameter5: int;

        r18 := @parameter6: javassist.compiler.MemberResolver$Method;

        i1 = virtualinvoke r0.<javassist.compiler.MemberCodeGen: int getMethodArgsLength(javassist.compiler.ast.ASTList)>(r3);

        r4 = newarray (int)[i1];

        r5 = newarray (int)[i1];

        r6 = newarray (java.lang.String)[i1];

        if z3 != 0 goto label1;

        if r18 == null goto label1;

        $z2 = virtualinvoke r18.<javassist.compiler.MemberResolver$Method: boolean isStatic()>();

        if $z2 == 0 goto label1;

        $r17 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r17.<javassist.bytecode.Bytecode: void addOpcode(int)>(87);

        z3 = 1;

     label1:
        $r19 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r19.<javassist.bytecode.Bytecode: int getStackDepth()>();

        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void atMethodArgs(javassist.compiler.ast.ASTList,int[],int[],java.lang.String[])>(r3, r4, r5, r6);

        if r18 != null goto label2;

        $r16 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        $r15 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        $r14 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.MethodInfo thisMethod>;

        r18 = virtualinvoke $r16.<javassist.compiler.MemberResolver: javassist.compiler.MemberResolver$Method lookupMethod(javassist.CtClass,javassist.CtClass,javassist.bytecode.MethodInfo,java.lang.String,int[],int[],java.lang.String[])>(r1, $r15, $r14, r2, r4, r5, r6);

     label2:
        if r18 != null goto label5;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z1 == 0 goto label3;

        r20 = "constructor not found";

        goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found in ");

        $r11 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r20 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r13 = new javassist.compiler.CompileError;

        specialinvoke $r13.<javassist.compiler.CompileError: void <init>(java.lang.String)>(r20);

        throw $r13;

     label5:
        specialinvoke r0.<javassist.compiler.MemberCodeGen: void atMethodCallCore2(javassist.CtClass,java.lang.String,boolean,boolean,int,javassist.compiler.MemberResolver$Method)>(r1, r2, z3, z0, i0, r18);

        return;
    }

    private void atMethodCallCore2(javassist.CtClass, java.lang.String, boolean, boolean, int, javassist.compiler.MemberResolver$Method) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.CtClass r1, $r13, $r15, r24;
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i7;
        javassist.compiler.MemberResolver$Method r2;
        javassist.bytecode.MethodInfo r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7, z8, $z9;
        javassist.bytecode.Bytecode $r4, $r10, $r11, $r12, $r16, $r27;
        javassist.compiler.CompileError $r5, $r17;
        java.lang.StringBuilder $r6, $r7, $r8, $r18, $r19, $r21;
        java.lang.String $r9, $r14, $r20, $r22, r23, r25, r26;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.CtClass;

        r23 := @parameter1: java.lang.String;

        z6 := @parameter2: boolean;

        z7 := @parameter3: boolean;

        i0 := @parameter4: int;

        r2 := @parameter5: javassist.compiler.MemberResolver$Method;

        r24 = r2.<javassist.compiler.MemberResolver$Method: javassist.CtClass declaring>;

        r3 = r2.<javassist.compiler.MemberResolver$Method: javassist.bytecode.MethodInfo info>;

        r25 = virtualinvoke r3.<javassist.bytecode.MethodInfo: java.lang.String getDescriptor()>();

        i6 = virtualinvoke r3.<javassist.bytecode.MethodInfo: int getAccessFlags()>();

        $z0 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z0 == 0 goto label02;

        z7 = 1;

        if r24 == r1 goto label01;

        $r17 = new javassist.compiler.CompileError;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no such constructor: ");

        $r20 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<javassist.compiler.CompileError: void <init>(java.lang.String)>($r22);

        throw $r17;

     label01:
        $r15 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        if r24 == $r15 goto label05;

        $z5 = staticinvoke <javassist.bytecode.AccessFlag: boolean isPrivate(int)>(i6);

        if $z5 == 0 goto label05;

        r25 = virtualinvoke r0.<javassist.compiler.MemberCodeGen: java.lang.String getAccessibleConstructor(java.lang.String,javassist.CtClass,javassist.bytecode.MethodInfo)>(r25, r24, r3);

        $r16 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r16.<javassist.bytecode.Bytecode: void addOpcode(int)>(1);

        goto label05;

     label02:
        $z1 = staticinvoke <javassist.bytecode.AccessFlag: boolean isPrivate(int)>(i6);

        if $z1 == 0 goto label05;

        $r13 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        if r24 != $r13 goto label03;

        z7 = 1;

        goto label05;

     label03:
        z7 = 0;

        z6 = 1;

        r26 = r25;

        $i4 = i6 & 8;

        if $i4 != 0 goto label04;

        $r14 = virtualinvoke r24.<javassist.CtClass: java.lang.String getName()>();

        r25 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String insertParameter(java.lang.String,java.lang.String)>($r14, r25);

     label04:
        $i5 = staticinvoke <javassist.bytecode.AccessFlag: int setPackage(int)>(i6);

        i6 = $i5 | 8;

        r23 = virtualinvoke r0.<javassist.compiler.MemberCodeGen: java.lang.String getAccessiblePrivate(java.lang.String,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo,javassist.CtClass)>(r23, r26, r25, r3, r24);

     label05:
        z8 = 0;

        $i7 = i6 & 8;

        if $i7 == 0 goto label08;

        if z6 != 0 goto label07;

        z6 = 1;

        if i0 < 0 goto label06;

        $r12 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r12.<javassist.bytecode.Bytecode: void write(int,int)>(i0, 0);

        goto label07;

     label06:
        z8 = 1;

     label07:
        $r27 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r27.<javassist.bytecode.Bytecode: void addInvokestatic(javassist.CtClass,java.lang.String,java.lang.String)>(r24, r23, r25);

        goto label14;

     label08:
        if z7 == 0 goto label09;

        $r11 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r11.<javassist.bytecode.Bytecode: void addInvokespecial(javassist.CtClass,java.lang.String,java.lang.String)>(r1, r23, r25);

        goto label14;

     label09:
        $i2 = virtualinvoke r24.<javassist.CtClass: int getModifiers()>();

        $z2 = staticinvoke <javassist.Modifier: boolean isPublic(int)>($i2);

        if $z2 == 0 goto label10;

        $z3 = virtualinvoke r24.<javassist.CtClass: boolean isInterface()>();

        $z4 = virtualinvoke r1.<javassist.CtClass: boolean isInterface()>();

        if $z3 == $z4 goto label11;

     label10:
        r24 = r1;

     label11:
        $z9 = virtualinvoke r24.<javassist.CtClass: boolean isInterface()>();

        if $z9 == 0 goto label12;

        $i3 = staticinvoke <javassist.bytecode.Descriptor: int paramSize(java.lang.String)>(r25);

        i1 = $i3 + 1;

        $r10 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r10.<javassist.bytecode.Bytecode: void addInvokeinterface(javassist.CtClass,java.lang.String,java.lang.String,int)>(r24, r23, r25, i1);

        goto label14;

     label12:
        if z6 == 0 goto label13;

        $r5 = new javassist.compiler.CompileError;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not static");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<javassist.compiler.CompileError: void <init>(java.lang.String)>($r9);

        throw $r5;

     label13:
        $r4 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r4.<javassist.bytecode.Bytecode: void addInvokevirtual(javassist.CtClass,java.lang.String,java.lang.String)>(r24, r23, r25);

     label14:
        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void setReturnType(java.lang.String,boolean,boolean)>(r25, z6, z8);

        return;
    }

    protected java.lang.String getAccessiblePrivate(java.lang.String, java.lang.String, java.lang.String, javassist.bytecode.MethodInfo, javassist.CtClass) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        java.lang.String r1, r2, r3, $r13, $r14;
        javassist.bytecode.MethodInfo r4;
        javassist.CtClass r5, $r7;
        javassist.compiler.AccessorMaker r6;
        boolean $z0;
        javassist.compiler.CompileError $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: javassist.bytecode.MethodInfo;

        r5 := @parameter4: javassist.CtClass;

        $r7 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        $z0 = specialinvoke r0.<javassist.compiler.MemberCodeGen: boolean isEnclosing(javassist.CtClass,javassist.CtClass)>(r5, $r7);

        if $z0 == 0 goto label1;

        r6 = virtualinvoke r5.<javassist.CtClass: javassist.compiler.AccessorMaker getAccessorMaker()>();

        if r6 == null goto label1;

        $r14 = virtualinvoke r6.<javassist.compiler.AccessorMaker: java.lang.String getMethodAccessor(java.lang.String,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo)>(r1, r2, r3, r4);

        return $r14;

     label1:
        $r8 = new javassist.compiler.CompileError;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is private");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<javassist.compiler.CompileError: void <init>(java.lang.String)>($r13);

        throw $r8;
    }

    protected java.lang.String getAccessibleConstructor(java.lang.String, javassist.CtClass, javassist.bytecode.MethodInfo) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        java.lang.String r1, $r9, $r11, $r12;
        javassist.CtClass r2, $r5;
        javassist.bytecode.MethodInfo r3;
        javassist.compiler.AccessorMaker r4;
        boolean $z0;
        javassist.compiler.CompileError $r6;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javassist.CtClass;

        r3 := @parameter2: javassist.bytecode.MethodInfo;

        $r5 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        $z0 = specialinvoke r0.<javassist.compiler.MemberCodeGen: boolean isEnclosing(javassist.CtClass,javassist.CtClass)>(r2, $r5);

        if $z0 == 0 goto label1;

        r4 = virtualinvoke r2.<javassist.CtClass: javassist.compiler.AccessorMaker getAccessorMaker()>();

        if r4 == null goto label1;

        $r12 = virtualinvoke r4.<javassist.compiler.AccessorMaker: java.lang.String getConstructor(javassist.CtClass,java.lang.String,javassist.bytecode.MethodInfo)>(r2, r1, r3);

        return $r12;

     label1:
        $r6 = new javassist.compiler.CompileError;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the called constructor is private in ");

        $r9 = virtualinvoke r2.<javassist.CtClass: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<javassist.compiler.CompileError: void <init>(java.lang.String)>($r11);

        throw $r6;
    }

    private boolean isEnclosing(javassist.CtClass, javassist.CtClass)
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.CtClass r1, r4;
        javassist.NotFoundException $r3;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.CtClass;

        r4 := @parameter1: javassist.CtClass;

     label1:
        if r4 == null goto label3;

        r4 = virtualinvoke r4.<javassist.CtClass: javassist.CtClass getDeclaringClass()>();

        if r4 != r1 goto label1;

     label2:
        return 1;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return 0;

        catch javassist.NotFoundException from label1 to label2 with label4;
    }

    public int getMethodArgsLength(javassist.compiler.ast.ASTList)
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.ASTList r1;
        int $i0;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.ASTList;

        $i0 = staticinvoke <javassist.compiler.ast.ASTList: int length(javassist.compiler.ast.ASTList)>(r1);

        return $i0;
    }

    public void atMethodArgs(javassist.compiler.ast.ASTList, int[], int[], java.lang.String[]) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        int[] r1, r2;
        java.lang.String[] r3;
        javassist.compiler.ast.ASTree r4;
        int $i0, $i1, i2;
        java.lang.String $r5;
        javassist.compiler.ast.ASTList r6;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r6 := @parameter0: javassist.compiler.ast.ASTList;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        r3 := @parameter3: java.lang.String[];

        i2 = 0;

     label1:
        if r6 == null goto label2;

        r4 = virtualinvoke r6.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        virtualinvoke r4.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

        $i0 = r0.<javassist.compiler.MemberCodeGen: int exprType>;

        r1[i2] = $i0;

        $i1 = r0.<javassist.compiler.MemberCodeGen: int arrayDim>;

        r2[i2] = $i1;

        $r5 = r0.<javassist.compiler.MemberCodeGen: java.lang.String className>;

        r3[i2] = $r5;

        i2 = i2 + 1;

        r6 = virtualinvoke r6.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        goto label1;

     label2:
        return;
    }

    void setReturnType(java.lang.String, boolean, boolean) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        java.lang.String r1, $r8;
        boolean z0, z1, $z2;
        int $i0, $i1, $i2, i3, i4, i6, i7, i8;
        javassist.bytecode.Bytecode $r2, $r3, $r4, $r5, $r6, $r7;
        char c5;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i3 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(41);

        if i3 >= 0 goto label1;

        staticinvoke <javassist.compiler.MemberCodeGen: void badMethod()>();

     label1:
        i4 = i3 + 1;

        c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        i6 = 0;

     label2:
        if c5 != 91 goto label3;

        i6 = i6 + 1;

        i4 = i4 + 1;

        c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        goto label2;

     label3:
        r0.<javassist.compiler.MemberCodeGen: int arrayDim> = i6;

        if c5 != 76 goto label5;

        $i1 = i4 + 1;

        i7 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(59, $i1);

        if i7 >= 0 goto label4;

        staticinvoke <javassist.compiler.MemberCodeGen: void badMethod()>();

     label4:
        r0.<javassist.compiler.MemberCodeGen: int exprType> = 307;

        $i2 = i4 + 1;

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i2, i7);

        r0.<javassist.compiler.MemberCodeGen: java.lang.String className> = $r8;

        goto label6;

     label5:
        $i0 = staticinvoke <javassist.compiler.MemberResolver: int descToType(char)>(c5);

        r0.<javassist.compiler.MemberCodeGen: int exprType> = $i0;

        r0.<javassist.compiler.MemberCodeGen: java.lang.String className> = null;

     label6:
        i8 = r0.<javassist.compiler.MemberCodeGen: int exprType>;

        if z0 == 0 goto label9;

        if z1 == 0 goto label9;

        $z2 = staticinvoke <javassist.compiler.MemberCodeGen: boolean is2word(int,int)>(i8, i6);

        if $z2 == 0 goto label7;

        $r5 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r5.<javassist.bytecode.Bytecode: void addOpcode(int)>(93);

        $r6 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r6.<javassist.bytecode.Bytecode: void addOpcode(int)>(88);

        $r7 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r7.<javassist.bytecode.Bytecode: void addOpcode(int)>(87);

        goto label9;

     label7:
        if i8 != 344 goto label8;

        $r4 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r4.<javassist.bytecode.Bytecode: void addOpcode(int)>(87);

        goto label9;

     label8:
        $r2 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r2.<javassist.bytecode.Bytecode: void addOpcode(int)>(95);

        $r3 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r3.<javassist.bytecode.Bytecode: void addOpcode(int)>(87);

     label9:
        return;
    }

    protected void atFieldAssign(javassist.compiler.ast.Expr, int, javassist.compiler.ast.ASTree, javassist.compiler.ast.ASTree, boolean) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.Expr r1;
        int i0, i1, i2, i3;
        javassist.compiler.ast.ASTree r2, r3;
        boolean z0, z1, z2;
        javassist.CtField r4;
        java.lang.String r5;
        javassist.bytecode.Bytecode $r6, $r9;
        javassist.bytecode.FieldInfo r7;
        javassist.compiler.AccessorMaker r8;
        byte $b4, b5, $b6;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.Expr;

        i0 := @parameter1: int;

        r2 := @parameter2: javassist.compiler.ast.ASTree;

        r3 := @parameter3: javassist.compiler.ast.ASTree;

        z0 := @parameter4: boolean;

        r4 = virtualinvoke r0.<javassist.compiler.MemberCodeGen: javassist.CtField fieldAccess(javassist.compiler.ast.ASTree,boolean)>(r2, 0);

        z1 = r0.<javassist.compiler.MemberCodeGen: boolean resultStatic>;

        if i0 == 61 goto label01;

        if z1 != 0 goto label01;

        $r6 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r6.<javassist.bytecode.Bytecode: void addOpcode(int)>(89);

     label01:
        if i0 != 61 goto label04;

        r7 = virtualinvoke r4.<javassist.CtField: javassist.bytecode.FieldInfo getFieldInfo2()>();

        specialinvoke r0.<javassist.compiler.MemberCodeGen: boolean setFieldType(javassist.bytecode.FieldInfo)>(r7);

        r8 = specialinvoke r0.<javassist.compiler.MemberCodeGen: javassist.compiler.AccessorMaker isAccessibleField(javassist.CtField,javassist.bytecode.FieldInfo)>(r4, r7);

        if r8 != null goto label02;

        i1 = specialinvoke r0.<javassist.compiler.MemberCodeGen: int addFieldrefInfo(javassist.CtField,javassist.bytecode.FieldInfo)>(r4, r7);

        goto label03;

     label02:
        i1 = 0;

     label03:
        goto label05;

     label04:
        i1 = specialinvoke r0.<javassist.compiler.MemberCodeGen: int atFieldRead(javassist.CtField,boolean)>(r4, z1);

     label05:
        i2 = r0.<javassist.compiler.MemberCodeGen: int exprType>;

        i3 = r0.<javassist.compiler.MemberCodeGen: int arrayDim>;

        r5 = r0.<javassist.compiler.MemberCodeGen: java.lang.String className>;

        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void atAssignCore(javassist.compiler.ast.Expr,int,javassist.compiler.ast.ASTree,int,int,java.lang.String)>(r1, i0, r3, i2, i3, r5);

        z2 = staticinvoke <javassist.compiler.MemberCodeGen: boolean is2word(int,int)>(i2, i3);

        if z0 == 0 goto label12;

        if z1 == 0 goto label08;

        if z2 == 0 goto label06;

        $b4 = 92;

        goto label07;

     label06:
        $b4 = 89;

     label07:
        b5 = $b4;

        goto label11;

     label08:
        if z2 == 0 goto label09;

        $b6 = 93;

        goto label10;

     label09:
        $b6 = 90;

     label10:
        b5 = $b6;

     label11:
        $r9 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r9.<javassist.bytecode.Bytecode: void addOpcode(int)>(b5);

     label12:
        specialinvoke r0.<javassist.compiler.MemberCodeGen: void atFieldAssignCore(javassist.CtField,boolean,int,boolean)>(r4, z1, i1, z2);

        r0.<javassist.compiler.MemberCodeGen: int exprType> = i2;

        r0.<javassist.compiler.MemberCodeGen: int arrayDim> = i3;

        r0.<javassist.compiler.MemberCodeGen: java.lang.String className> = r5;

        return;
    }

    private void atFieldAssignCore(javassist.CtField, boolean, int, boolean) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.CtField r1;
        boolean z0, z1;
        int i0;
        javassist.CtClass r2;
        javassist.compiler.AccessorMaker r3;
        javassist.bytecode.FieldInfo r4;
        javassist.bytecode.MethodInfo r5;
        javassist.bytecode.Bytecode $r6, $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r7, $r8;
        byte $b1, $b2;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.CtField;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        if i0 == 0 goto label7;

        if z0 == 0 goto label3;

        $r11 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r11.<javassist.bytecode.Bytecode: void add(int)>(179);

        $r12 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        if z1 == 0 goto label1;

        $b1 = -2;

        goto label2;

     label1:
        $b1 = -1;

     label2:
        virtualinvoke $r12.<javassist.bytecode.Bytecode: void growStack(int)>($b1);

        goto label6;

     label3:
        $r9 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r9.<javassist.bytecode.Bytecode: void add(int)>(181);

        $r10 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        if z1 == 0 goto label4;

        $b2 = -3;

        goto label5;

     label4:
        $b2 = -2;

     label5:
        virtualinvoke $r10.<javassist.bytecode.Bytecode: void growStack(int)>($b2);

     label6:
        $r13 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r13.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

        goto label8;

     label7:
        r2 = virtualinvoke r1.<javassist.CtField: javassist.CtClass getDeclaringClass()>();

        r3 = virtualinvoke r2.<javassist.CtClass: javassist.compiler.AccessorMaker getAccessorMaker()>();

        r4 = virtualinvoke r1.<javassist.CtField: javassist.bytecode.FieldInfo getFieldInfo2()>();

        r5 = virtualinvoke r3.<javassist.compiler.AccessorMaker: javassist.bytecode.MethodInfo getFieldSetter(javassist.bytecode.FieldInfo,boolean)>(r4, z0);

        $r6 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r7 = virtualinvoke r5.<javassist.bytecode.MethodInfo: java.lang.String getName()>();

        $r8 = virtualinvoke r5.<javassist.bytecode.MethodInfo: java.lang.String getDescriptor()>();

        virtualinvoke $r6.<javassist.bytecode.Bytecode: void addInvokestatic(javassist.CtClass,java.lang.String,java.lang.String)>(r2, $r7, $r8);

     label8:
        return;
    }

    public void atMember(javassist.compiler.ast.Member) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.Member r1;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.Member;

        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void atFieldRead(javassist.compiler.ast.ASTree)>(r1);

        return;
    }

    protected void atFieldRead(javassist.compiler.ast.ASTree) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.ASTree r1, r3;
        javassist.CtField r2;
        boolean z0;
        javassist.bytecode.FieldInfo $r4;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        r2 = virtualinvoke r0.<javassist.compiler.MemberCodeGen: javassist.CtField fieldAccess(javassist.compiler.ast.ASTree,boolean)>(r1, 1);

        if r2 != null goto label1;

        specialinvoke r0.<javassist.compiler.MemberCodeGen: void atArrayLength(javassist.compiler.ast.ASTree)>(r1);

        return;

     label1:
        z0 = r0.<javassist.compiler.MemberCodeGen: boolean resultStatic>;

        r3 = staticinvoke <javassist.compiler.TypeChecker: javassist.compiler.ast.ASTree getConstantFieldValue(javassist.CtField)>(r2);

        if r3 != null goto label2;

        specialinvoke r0.<javassist.compiler.MemberCodeGen: int atFieldRead(javassist.CtField,boolean)>(r2, z0);

        goto label3;

     label2:
        virtualinvoke r3.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

        $r4 = virtualinvoke r2.<javassist.CtField: javassist.bytecode.FieldInfo getFieldInfo2()>();

        specialinvoke r0.<javassist.compiler.MemberCodeGen: boolean setFieldType(javassist.bytecode.FieldInfo)>($r4);

     label3:
        return;
    }

    private void atArrayLength(javassist.compiler.ast.ASTree) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.ASTree r1;
        int $i0;
        javassist.bytecode.Bytecode $r2;
        javassist.compiler.CompileError $r3;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        $i0 = r0.<javassist.compiler.MemberCodeGen: int arrayDim>;

        if $i0 != 0 goto label1;

        $r3 = new javassist.compiler.CompileError;

        specialinvoke $r3.<javassist.compiler.CompileError: void <init>(java.lang.String)>(".length applied to a non array");

        throw $r3;

     label1:
        $r2 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r2.<javassist.bytecode.Bytecode: void addOpcode(int)>(190);

        r0.<javassist.compiler.MemberCodeGen: int exprType> = 324;

        r0.<javassist.compiler.MemberCodeGen: int arrayDim> = 0;

        return;
    }

    private int atFieldRead(javassist.CtField, boolean) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.CtField r1;
        boolean z0, z1;
        javassist.bytecode.FieldInfo r2;
        javassist.compiler.AccessorMaker r3;
        javassist.bytecode.Bytecode $r4, $r5, $r6, $r7, $r8, $r13;
        javassist.CtClass $r9;
        java.lang.String $r10, $r11;
        javassist.bytecode.MethodInfo r12;
        int i0;
        byte $b1, $b2;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.CtField;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<javassist.CtField: javassist.bytecode.FieldInfo getFieldInfo2()>();

        z1 = specialinvoke r0.<javassist.compiler.MemberCodeGen: boolean setFieldType(javassist.bytecode.FieldInfo)>(r2);

        r3 = specialinvoke r0.<javassist.compiler.MemberCodeGen: javassist.compiler.AccessorMaker isAccessibleField(javassist.CtField,javassist.bytecode.FieldInfo)>(r1, r2);

        if r3 == null goto label1;

        r12 = virtualinvoke r3.<javassist.compiler.AccessorMaker: javassist.bytecode.MethodInfo getFieldGetter(javassist.bytecode.FieldInfo,boolean)>(r2, z0);

        $r8 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r9 = virtualinvoke r1.<javassist.CtField: javassist.CtClass getDeclaringClass()>();

        $r10 = virtualinvoke r12.<javassist.bytecode.MethodInfo: java.lang.String getName()>();

        $r11 = virtualinvoke r12.<javassist.bytecode.MethodInfo: java.lang.String getDescriptor()>();

        virtualinvoke $r8.<javassist.bytecode.Bytecode: void addInvokestatic(javassist.CtClass,java.lang.String,java.lang.String)>($r9, $r10, $r11);

        return 0;

     label1:
        i0 = specialinvoke r0.<javassist.compiler.MemberCodeGen: int addFieldrefInfo(javassist.CtField,javassist.bytecode.FieldInfo)>(r1, r2);

        if z0 == 0 goto label4;

        $r6 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r6.<javassist.bytecode.Bytecode: void add(int)>(178);

        $r7 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        if z1 == 0 goto label2;

        $b1 = 2;

        goto label3;

     label2:
        $b1 = 1;

     label3:
        virtualinvoke $r7.<javassist.bytecode.Bytecode: void growStack(int)>($b1);

        goto label7;

     label4:
        $r4 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r4.<javassist.bytecode.Bytecode: void add(int)>(180);

        $r5 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        if z1 == 0 goto label5;

        $b2 = 1;

        goto label6;

     label5:
        $b2 = 0;

     label6:
        virtualinvoke $r5.<javassist.bytecode.Bytecode: void growStack(int)>($b2);

     label7:
        $r13 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r13.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

        return i0;
    }

    private javassist.compiler.AccessorMaker isAccessibleField(javassist.CtField, javassist.bytecode.FieldInfo) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.CtField r1;
        javassist.bytecode.FieldInfo r2;
        javassist.CtClass r3, $r5, $r6, $r7;
        javassist.compiler.AccessorMaker r4;
        int $i0;
        boolean $z0, $z1;
        javassist.compiler.CompileError $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r15, $r16;
        java.lang.String $r11, $r14, $r17;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.CtField;

        r2 := @parameter1: javassist.bytecode.FieldInfo;

        $i0 = virtualinvoke r2.<javassist.bytecode.FieldInfo: int getAccessFlags()>();

        $z0 = staticinvoke <javassist.bytecode.AccessFlag: boolean isPrivate(int)>($i0);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r1.<javassist.CtField: javassist.CtClass getDeclaringClass()>();

        $r6 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        if $r5 == $r6 goto label2;

        r3 = virtualinvoke r1.<javassist.CtField: javassist.CtClass getDeclaringClass()>();

        $r7 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        $z1 = specialinvoke r0.<javassist.compiler.MemberCodeGen: boolean isEnclosing(javassist.CtClass,javassist.CtClass)>(r3, $r7);

        if $z1 == 0 goto label1;

        r4 = virtualinvoke r3.<javassist.CtClass: javassist.compiler.AccessorMaker getAccessorMaker()>();

        if r4 == null goto label1;

        return r4;

     label1:
        $r8 = new javassist.compiler.CompileError;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field ");

        $r11 = virtualinvoke r1.<javassist.CtField: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r14 = virtualinvoke r3.<javassist.CtClass: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is private.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<javassist.compiler.CompileError: void <init>(java.lang.String)>($r17);

        throw $r8;

     label2:
        return null;
    }

    private boolean setFieldType(javassist.bytecode.FieldInfo) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.bytecode.FieldInfo r1;
        java.lang.String r2, $r3;
        int $i0, $i1, $i2, $i3, i4, i5;
        char c6;
        boolean $z1;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.bytecode.FieldInfo;

        r2 = virtualinvoke r1.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        i4 = 0;

        i5 = 0;

        c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

     label1:
        if c6 != 91 goto label2;

        i5 = i5 + 1;

        i4 = i4 + 1;

        c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4);

        goto label1;

     label2:
        r0.<javassist.compiler.MemberCodeGen: int arrayDim> = i5;

        $i0 = staticinvoke <javassist.compiler.MemberResolver: int descToType(char)>(c6);

        r0.<javassist.compiler.MemberCodeGen: int exprType> = $i0;

        if c6 != 76 goto label3;

        $i2 = i4 + 1;

        $i1 = i4 + 1;

        $i3 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(59, $i1);

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        r0.<javassist.compiler.MemberCodeGen: java.lang.String className> = $r3;

        goto label4;

     label3:
        r0.<javassist.compiler.MemberCodeGen: java.lang.String className> = null;

     label4:
        if i5 != 0 goto label6;

        if c6 == 74 goto label5;

        if c6 != 68 goto label6;

     label5:
        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;
    }

    private int addFieldrefInfo(javassist.CtField, javassist.bytecode.FieldInfo)
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.CtField r1;
        javassist.bytecode.FieldInfo r2;
        javassist.bytecode.ConstPool r3;
        java.lang.String r4, r5, r6;
        int i0, $i1;
        javassist.bytecode.Bytecode $r7;
        javassist.CtClass $r8;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.CtField;

        r2 := @parameter1: javassist.bytecode.FieldInfo;

        $r7 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        r3 = virtualinvoke $r7.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool getConstPool()>();

        $r8 = virtualinvoke r1.<javassist.CtField: javassist.CtClass getDeclaringClass()>();

        r4 = virtualinvoke $r8.<javassist.CtClass: java.lang.String getName()>();

        i0 = virtualinvoke r3.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r4);

        r5 = virtualinvoke r2.<javassist.bytecode.FieldInfo: java.lang.String getName()>();

        r6 = virtualinvoke r2.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        $i1 = virtualinvoke r3.<javassist.bytecode.ConstPool: int addFieldrefInfo(int,java.lang.String,java.lang.String)>(i0, r5, r6);

        return $i1;
    }

    protected void atClassObject2(java.lang.String) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        java.lang.String r1;
        int $i0, $i1;
        javassist.bytecode.Bytecode $r2, $r3;
        javassist.bytecode.ConstPool $r4;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<javassist.compiler.MemberCodeGen: int getMajorVersion()>();

        if $i0 >= 49 goto label1;

        specialinvoke r0.<javassist.compiler.CodeGen: void atClassObject2(java.lang.String)>(r1);

        goto label2;

     label1:
        $r3 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r2 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r4 = virtualinvoke $r2.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool getConstPool()>();

        $i1 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        virtualinvoke $r3.<javassist.bytecode.Bytecode: void addLdc(int)>($i1);

     label2:
        return;
    }

    protected void atFieldPlusPlus(int, boolean, javassist.compiler.ast.ASTree, javassist.compiler.ast.Expr, boolean) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        int i0, i1, i2, $i3;
        boolean z0, z1, z2, z3;
        javassist.compiler.ast.ASTree r1;
        javassist.compiler.ast.Expr r2;
        javassist.CtField r3;
        javassist.bytecode.Bytecode $r4;
        byte $b4, b5, $b6;

        r0 := @this: javassist.compiler.MemberCodeGen;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: javassist.compiler.ast.ASTree;

        r2 := @parameter3: javassist.compiler.ast.Expr;

        z1 := @parameter4: boolean;

        r3 = virtualinvoke r0.<javassist.compiler.MemberCodeGen: javassist.CtField fieldAccess(javassist.compiler.ast.ASTree,boolean)>(r1, 0);

        z2 = r0.<javassist.compiler.MemberCodeGen: boolean resultStatic>;

        if z2 != 0 goto label1;

        $r4 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r4.<javassist.bytecode.Bytecode: void addOpcode(int)>(89);

     label1:
        i1 = specialinvoke r0.<javassist.compiler.MemberCodeGen: int atFieldRead(javassist.CtField,boolean)>(r3, z2);

        i2 = r0.<javassist.compiler.MemberCodeGen: int exprType>;

        $i3 = r0.<javassist.compiler.MemberCodeGen: int arrayDim>;

        z3 = staticinvoke <javassist.compiler.MemberCodeGen: boolean is2word(int,int)>(i2, $i3);

        if z2 == 0 goto label4;

        if z3 == 0 goto label2;

        $b4 = 92;

        goto label3;

     label2:
        $b4 = 89;

     label3:
        b5 = $b4;

        goto label7;

     label4:
        if z3 == 0 goto label5;

        $b6 = 93;

        goto label6;

     label5:
        $b6 = 90;

     label6:
        b5 = $b6;

     label7:
        virtualinvoke r0.<javassist.compiler.MemberCodeGen: void atPlusPlusCore(int,boolean,int,boolean,javassist.compiler.ast.Expr)>(b5, z1, i0, z0, r2);

        specialinvoke r0.<javassist.compiler.MemberCodeGen: void atFieldAssignCore(javassist.CtField,boolean,int,boolean)>(r3, z2, i1, z3);

        return;
    }

    protected javassist.CtField fieldAccess(javassist.compiler.ast.ASTree, boolean) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.ASTree r1, $r4, $r7, $r12, $r15, $r18, $r29, $r30, $r31;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6;
        javassist.compiler.ast.Symbol r2, $r8, $r13, $r16, $r19;
        java.lang.String r3, $r9, $r11, $r17, $r27, r35;
        int $i0, $i1, $i2, $i3, i4, $i5;
        javassist.bytecode.Bytecode $r5, $r22;
        javassist.compiler.MemberResolver $r10, $r14, $r32;
        javassist.compiler.ast.Member $r20;
        javassist.CtClass $r21;
        javassist.compiler.CompileError $r23;
        java.lang.StringBuilder $r24, $r25, $r26;
        javassist.compiler.NoFieldException $r28, $r34;
        javassist.NotFoundException $r33;
        javassist.CtField r36, r38, r39, r41;
        javassist.compiler.ast.Expr r37;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        z0 := @parameter1: boolean;

        $z1 = r1 instanceof javassist.compiler.ast.Member;

        if $z1 == 0 goto label07;

        $r20 = (javassist.compiler.ast.Member) r1;

        r35 = virtualinvoke $r20.<javassist.compiler.ast.Member: java.lang.String get()>();

     label01:
        $r21 = r0.<javassist.compiler.MemberCodeGen: javassist.CtClass thisClass>;

        r36 = virtualinvoke $r21.<javassist.CtClass: javassist.CtField getField(java.lang.String)>(r35);

     label02:
        goto label04;

     label03:
        $r33 := @caughtexception;

        $r34 = new javassist.compiler.NoFieldException;

        specialinvoke $r34.<javassist.compiler.NoFieldException: void <init>(java.lang.String,javassist.compiler.ast.ASTree)>(r35, r1);

        throw $r34;

     label04:
        $i3 = virtualinvoke r36.<javassist.CtField: int getModifiers()>();

        z5 = staticinvoke <javassist.Modifier: boolean isStatic(int)>($i3);

        if z5 != 0 goto label06;

        $z4 = r0.<javassist.compiler.MemberCodeGen: boolean inStaticMethod>;

        if $z4 == 0 goto label05;

        $r23 = new javassist.compiler.CompileError;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not available in a static method: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<javassist.compiler.CompileError: void <init>(java.lang.String)>($r27);

        throw $r23;

     label05:
        $r22 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r22.<javassist.bytecode.Bytecode: void addAload(int)>(0);

     label06:
        r0.<javassist.compiler.MemberCodeGen: boolean resultStatic> = z5;

        return r36;

     label07:
        $z2 = r1 instanceof javassist.compiler.ast.Expr;

        if $z2 == 0 goto label19;

        r37 = (javassist.compiler.ast.Expr) r1;

        i4 = virtualinvoke r37.<javassist.compiler.ast.Expr: int getOperator()>();

        if i4 != 35 goto label08;

        $r14 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        $r15 = virtualinvoke r37.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand1()>();

        $r16 = (javassist.compiler.ast.Symbol) $r15;

        $r17 = virtualinvoke $r16.<javassist.compiler.ast.Symbol: java.lang.String get()>();

        $r18 = virtualinvoke r37.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand2()>();

        $r19 = (javassist.compiler.ast.Symbol) $r18;

        r38 = virtualinvoke $r14.<javassist.compiler.MemberResolver: javassist.CtField lookupField(java.lang.String,javassist.compiler.ast.Symbol)>($r17, $r19);

        r0.<javassist.compiler.MemberCodeGen: boolean resultStatic> = 1;

        return r38;

     label08:
        if i4 != 46 goto label18;

        r39 = null;

     label09:
        $r4 = virtualinvoke r37.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand1()>();

        virtualinvoke $r4.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

        $i0 = r0.<javassist.compiler.MemberCodeGen: int exprType>;

        if $i0 != 307 goto label10;

        $i2 = r0.<javassist.compiler.MemberCodeGen: int arrayDim>;

        if $i2 != 0 goto label10;

        $r10 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        $r11 = r0.<javassist.compiler.MemberCodeGen: java.lang.String className>;

        $r12 = virtualinvoke r37.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand2()>();

        $r13 = (javassist.compiler.ast.Symbol) $r12;

        r39 = virtualinvoke $r10.<javassist.compiler.MemberResolver: javassist.CtField lookupFieldByJvmName(java.lang.String,javassist.compiler.ast.Symbol)>($r11, $r13);

        goto label13;

     label10:
        if z0 == 0 goto label12;

        $i1 = r0.<javassist.compiler.MemberCodeGen: int arrayDim>;

        if $i1 <= 0 goto label12;

        $r7 = virtualinvoke r37.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand2()>();

        $r8 = (javassist.compiler.ast.Symbol) $r7;

        $r9 = virtualinvoke $r8.<javassist.compiler.ast.Symbol: java.lang.String get()>();

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("length");

        if $z3 == 0 goto label12;

     label11:
        return null;

     label12:
        staticinvoke <javassist.compiler.MemberCodeGen: void badLvalue()>();

     label13:
        $i5 = virtualinvoke r39.<javassist.CtField: int getModifiers()>();

        z6 = staticinvoke <javassist.Modifier: boolean isStatic(int)>($i5);

        if z6 == 0 goto label14;

        $r5 = r0.<javassist.compiler.MemberCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r5.<javassist.bytecode.Bytecode: void addOpcode(int)>(87);

     label14:
        r0.<javassist.compiler.MemberCodeGen: boolean resultStatic> = z6;

     label15:
        return r39;

     label16:
        $r28 := @caughtexception;

        $r29 = virtualinvoke $r28.<javassist.compiler.NoFieldException: javassist.compiler.ast.ASTree getExpr()>();

        $r30 = virtualinvoke r37.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand1()>();

        if $r29 == $r30 goto label17;

        throw $r28;

     label17:
        $r31 = virtualinvoke r37.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand2()>();

        r2 = (javassist.compiler.ast.Symbol) $r31;

        r3 = virtualinvoke $r28.<javassist.compiler.NoFieldException: java.lang.String getField()>();

        $r32 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        r41 = virtualinvoke $r32.<javassist.compiler.MemberResolver: javassist.CtField lookupFieldByJvmName2(java.lang.String,javassist.compiler.ast.Symbol,javassist.compiler.ast.ASTree)>(r3, r2, r1);

        r0.<javassist.compiler.MemberCodeGen: boolean resultStatic> = 1;

        return r41;

     label18:
        staticinvoke <javassist.compiler.MemberCodeGen: void badLvalue()>();

        goto label20;

     label19:
        staticinvoke <javassist.compiler.MemberCodeGen: void badLvalue()>();

     label20:
        r0.<javassist.compiler.MemberCodeGen: boolean resultStatic> = 0;

        return null;

        catch javassist.NotFoundException from label01 to label02 with label03;
        catch javassist.compiler.NoFieldException from label09 to label11 with label16;
        catch javassist.compiler.NoFieldException from label12 to label15 with label16;
    }

    private static void badLvalue() throws javassist.compiler.CompileError
    {
        javassist.compiler.CompileError $r0;

        $r0 = new javassist.compiler.CompileError;

        specialinvoke $r0.<javassist.compiler.CompileError: void <init>(java.lang.String)>("bad l-value");

        throw $r0;
    }

    public javassist.CtClass[] makeParamList(javassist.compiler.ast.MethodDecl) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.MethodDecl r1;
        int $i0, $i1, i2;
        javassist.compiler.MemberResolver $r2;
        javassist.compiler.ast.ASTree $r3;
        javassist.compiler.ast.Declarator $r4;
        javassist.CtClass $r5;
        javassist.compiler.ast.ASTList r6;
        javassist.CtClass[] r7;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.MethodDecl;

        r6 = virtualinvoke r1.<javassist.compiler.ast.MethodDecl: javassist.compiler.ast.ASTList getParams()>();

        if r6 != null goto label1;

        r7 = newarray (javassist.CtClass)[0];

        goto label3;

     label1:
        i2 = 0;

        $i0 = virtualinvoke r6.<javassist.compiler.ast.ASTList: int length()>();

        r7 = newarray (javassist.CtClass)[$i0];

     label2:
        if r6 == null goto label3;

        $i1 = i2;

        i2 = i2 + 1;

        $r2 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        $r3 = virtualinvoke r6.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $r4 = (javassist.compiler.ast.Declarator) $r3;

        $r5 = virtualinvoke $r2.<javassist.compiler.MemberResolver: javassist.CtClass lookupClass(javassist.compiler.ast.Declarator)>($r4);

        r7[$i1] = $r5;

        r6 = virtualinvoke r6.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        goto label2;

     label3:
        return r7;
    }

    public javassist.CtClass[] makeThrowsList(javassist.compiler.ast.MethodDecl) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.MethodDecl r1;
        javassist.CtClass[] r2;
        int $i0, $i1, i2;
        javassist.compiler.MemberResolver $r3;
        javassist.compiler.ast.ASTree $r4;
        javassist.compiler.ast.ASTList $r5, r7;
        javassist.CtClass $r6;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.MethodDecl;

        r7 = virtualinvoke r1.<javassist.compiler.ast.MethodDecl: javassist.compiler.ast.ASTList getThrows()>();

        if r7 != null goto label1;

        return null;

     label1:
        i2 = 0;

        $i0 = virtualinvoke r7.<javassist.compiler.ast.ASTList: int length()>();

        r2 = newarray (javassist.CtClass)[$i0];

     label2:
        if r7 == null goto label3;

        $i1 = i2;

        i2 = i2 + 1;

        $r3 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        $r4 = virtualinvoke r7.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $r5 = (javassist.compiler.ast.ASTList) $r4;

        $r6 = virtualinvoke $r3.<javassist.compiler.MemberResolver: javassist.CtClass lookupClassByName(javassist.compiler.ast.ASTList)>($r5);

        r2[$i1] = $r6;

        r7 = virtualinvoke r7.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        goto label2;

     label3:
        return r2;
    }

    protected java.lang.String resolveClassName(javassist.compiler.ast.ASTList) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        javassist.compiler.ast.ASTList r1;
        javassist.compiler.MemberResolver $r2;
        java.lang.String $r3;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: javassist.compiler.ast.ASTList;

        $r2 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        $r3 = virtualinvoke $r2.<javassist.compiler.MemberResolver: java.lang.String resolveClassName(javassist.compiler.ast.ASTList)>(r1);

        return $r3;
    }

    protected java.lang.String resolveClassName(java.lang.String) throws javassist.compiler.CompileError
    {
        javassist.compiler.MemberCodeGen r0;
        java.lang.String r1, $r3;
        javassist.compiler.MemberResolver $r2;

        r0 := @this: javassist.compiler.MemberCodeGen;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javassist.compiler.MemberCodeGen: javassist.compiler.MemberResolver resolver>;

        $r3 = virtualinvoke $r2.<javassist.compiler.MemberResolver: java.lang.String resolveJvmClassName(java.lang.String)>(r1);

        return $r3;
    }
}
