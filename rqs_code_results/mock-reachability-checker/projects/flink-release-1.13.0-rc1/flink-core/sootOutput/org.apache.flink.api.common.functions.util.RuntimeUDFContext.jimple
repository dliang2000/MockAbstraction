public class org.apache.flink.api.common.functions.util.RuntimeUDFContext extends org.apache.flink.api.common.functions.util.AbstractRuntimeUDFContext
{
    private final java.util.HashMap initializedBroadcastVars;
    private final java.util.HashMap uninitializedBroadcastVars;
    private final org.apache.flink.api.common.JobID jobID;

    public void <init>(org.apache.flink.api.common.TaskInfo, java.lang.ClassLoader, org.apache.flink.api.common.ExecutionConfig, java.util.Map, java.util.Map, org.apache.flink.metrics.MetricGroup)
    {
        org.apache.flink.api.common.functions.util.RuntimeUDFContext r0;
        org.apache.flink.api.common.TaskInfo r1;
        java.lang.ClassLoader r2;
        org.apache.flink.api.common.ExecutionConfig r3;
        java.util.Map r4, r5;
        org.apache.flink.metrics.MetricGroup r6;
        org.apache.flink.api.common.JobID $r7;

        r0 := @this: org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        r1 := @parameter0: org.apache.flink.api.common.TaskInfo;

        r2 := @parameter1: java.lang.ClassLoader;

        r3 := @parameter2: org.apache.flink.api.common.ExecutionConfig;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: java.util.Map;

        r6 := @parameter5: org.apache.flink.metrics.MetricGroup;

        $r7 = new org.apache.flink.api.common.JobID;

        specialinvoke $r7.<org.apache.flink.api.common.JobID: void <init>()>();

        specialinvoke r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: void <init>(org.apache.flink.api.common.TaskInfo,java.lang.ClassLoader,org.apache.flink.api.common.ExecutionConfig,java.util.Map,java.util.Map,org.apache.flink.metrics.MetricGroup,org.apache.flink.api.common.JobID)>(r1, r2, r3, r4, r5, r6, $r7);

        return;
    }

    public void <init>(org.apache.flink.api.common.TaskInfo, java.lang.ClassLoader, org.apache.flink.api.common.ExecutionConfig, java.util.Map, java.util.Map, org.apache.flink.metrics.MetricGroup, org.apache.flink.api.common.JobID)
    {
        org.apache.flink.api.common.functions.util.RuntimeUDFContext r0;
        org.apache.flink.api.common.TaskInfo r1;
        java.lang.ClassLoader r2;
        org.apache.flink.api.common.ExecutionConfig r3;
        java.util.Map r4, r5;
        org.apache.flink.metrics.MetricGroup r6;
        org.apache.flink.api.common.JobID r7;
        org.apache.flink.util.SimpleUserCodeClassLoader $r8;
        java.util.HashMap $r9, $r10;

        r0 := @this: org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        r1 := @parameter0: org.apache.flink.api.common.TaskInfo;

        r2 := @parameter1: java.lang.ClassLoader;

        r3 := @parameter2: org.apache.flink.api.common.ExecutionConfig;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: java.util.Map;

        r6 := @parameter5: org.apache.flink.metrics.MetricGroup;

        r7 := @parameter6: org.apache.flink.api.common.JobID;

        $r8 = staticinvoke <org.apache.flink.util.SimpleUserCodeClassLoader: org.apache.flink.util.SimpleUserCodeClassLoader create(java.lang.ClassLoader)>(r2);

        specialinvoke r0.<org.apache.flink.api.common.functions.util.AbstractRuntimeUDFContext: void <init>(org.apache.flink.api.common.TaskInfo,org.apache.flink.util.UserCodeClassLoader,org.apache.flink.api.common.ExecutionConfig,java.util.Map,java.util.Map,org.apache.flink.metrics.MetricGroup)>(r1, $r8, r3, r5, r4, r6);

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap initializedBroadcastVars> = $r9;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap uninitializedBroadcastVars> = $r10;

        r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: org.apache.flink.api.common.JobID jobID> = r7;

        return;
    }

    public boolean hasBroadcastVariable(java.lang.String)
    {
        org.apache.flink.api.common.functions.util.RuntimeUDFContext r0;
        java.lang.String r1;
        java.util.HashMap $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap initializedBroadcastVars>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap uninitializedBroadcastVars>;

        $z1 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.util.List getBroadcastVariable(java.lang.String)
    {
        org.apache.flink.api.common.functions.util.RuntimeUDFContext r0;
        java.lang.String r1, $r12, $r20;
        java.lang.Object r2, $r6;
        java.util.List r3, $r21;
        java.util.HashMap $r4, $r5, $r13;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r16, $r17, $r18, $r19;
        boolean $z0;
        java.lang.IllegalStateException $r15;

        r0 := @this: org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap initializedBroadcastVars>;

        r2 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 == null goto label2;

        $z0 = r2 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r21 = (java.util.List) r2;

        return $r21;

     label1:
        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The broadcast variable with name \'");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not a List. A different call must have requested this variable with a BroadcastVariableInitializer.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label2:
        $r5 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap uninitializedBroadcastVars>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        r3 = (java.util.List) $r6;

        if r3 == null goto label3;

        $r13 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap initializedBroadcastVars>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return r3;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The broadcast variable with name \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has not been set.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;
    }

    public java.lang.Object getBroadcastVariableWithInitializer(java.lang.String, org.apache.flink.api.common.functions.BroadcastVariableInitializer)
    {
        org.apache.flink.api.common.functions.util.RuntimeUDFContext r0;
        java.lang.String r1, $r14;
        org.apache.flink.api.common.functions.BroadcastVariableInitializer r2;
        java.lang.Object r3, r5, $r8;
        java.util.List r4;
        java.util.HashMap $r6, $r7, $r15;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.api.common.functions.BroadcastVariableInitializer;

        $r6 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap initializedBroadcastVars>;

        r3 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r3 == null goto label1;

        return r3;

     label1:
        $r7 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap uninitializedBroadcastVars>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (java.util.List) $r8;

        if r4 == null goto label2;

        r5 = interfaceinvoke r2.<org.apache.flink.api.common.functions.BroadcastVariableInitializer: java.lang.Object initializeBroadcastVariable(java.lang.Iterable)>(r4);

        $r15 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap initializedBroadcastVars>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

        return r5;

     label2:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The broadcast variable with name \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has not been set.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;
    }

    public org.apache.flink.api.common.JobID getJobId()
    {
        org.apache.flink.api.common.functions.util.RuntimeUDFContext r0;
        org.apache.flink.api.common.JobID $r1;

        r0 := @this: org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        $r1 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: org.apache.flink.api.common.JobID jobID>;

        return $r1;
    }

    public java.util.Set getExternalResourceInfos(java.lang.String)
    {
        org.apache.flink.api.common.functions.util.RuntimeUDFContext r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Do not support external resource in current environment");

        throw $r2;
    }

    public void setBroadcastVariable(java.lang.String, java.util.List)
    {
        org.apache.flink.api.common.functions.util.RuntimeUDFContext r0;
        java.lang.String r1;
        java.util.List r2;
        java.util.HashMap $r3, $r5;

        r0 := @this: org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap uninitializedBroadcastVars>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap initializedBroadcastVars>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void clearBroadcastVariable(java.lang.String)
    {
        org.apache.flink.api.common.functions.util.RuntimeUDFContext r0;
        java.lang.String r1;
        java.util.HashMap $r2, $r4;

        r0 := @this: org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap uninitializedBroadcastVars>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap initializedBroadcastVars>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void clearAllBroadcastVariables()
    {
        org.apache.flink.api.common.functions.util.RuntimeUDFContext r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        $r1 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap uninitializedBroadcastVars>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        $r2 = r0.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: java.util.HashMap initializedBroadcastVars>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        return;
    }
}
