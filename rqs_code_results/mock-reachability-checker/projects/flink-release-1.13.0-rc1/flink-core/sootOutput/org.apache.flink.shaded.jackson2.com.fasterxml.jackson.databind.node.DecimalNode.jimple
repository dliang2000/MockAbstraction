public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode
{
    public static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode ZERO;
    private static final java.math.BigDecimal MIN_INTEGER;
    private static final java.math.BigDecimal MAX_INTEGER;
    private static final java.math.BigDecimal MIN_LONG;
    private static final java.math.BigDecimal MAX_LONG;
    protected final java.math.BigDecimal _value;

    public void <init>(java.math.BigDecimal)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        r1 := @parameter0: java.math.BigDecimal;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value> = r1;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode valueOf(java.math.BigDecimal)
    {
        java.math.BigDecimal r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode $r1;

        r0 := @parameter0: java.math.BigDecimal;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: void <init>(java.math.BigDecimal)>(r0);

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken asToken()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType numberType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL>;

        return $r1;
    }

    public boolean isFloatingPointNumber()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        return 1;
    }

    public boolean isBigDecimal()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        return 1;
    }

    public boolean canConvertToInt()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1, $r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MIN_INTEGER>;

        $i0 = virtualinvoke $r2.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r1);

        if $i0 < 0 goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MAX_INTEGER>;

        $i1 = virtualinvoke $r4.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r3);

        if $i1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canConvertToLong()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1, $r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MIN_LONG>;

        $i0 = virtualinvoke $r2.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r1);

        if $i0 < 0 goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MAX_LONG>;

        $i1 = virtualinvoke $r4.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r3);

        if $i1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canConvertToExactIntegral()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $i0 = virtualinvoke $r1.<java.math.BigDecimal: int signum()>();

        if $i0 == 0 goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $i1 = virtualinvoke $r2.<java.math.BigDecimal: int scale()>();

        if $i1 <= 0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $r4 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal stripTrailingZeros()>();

        $i2 = virtualinvoke $r4.<java.math.BigDecimal: int scale()>();

        if $i2 > 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.lang.Number numberValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        return $r1;
    }

    public short shortValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1;
        short $s0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $s0 = virtualinvoke $r1.<java.math.BigDecimal: short shortValue()>();

        return $s0;
    }

    public int intValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $i0 = virtualinvoke $r1.<java.math.BigDecimal: int intValue()>();

        return $i0;
    }

    public long longValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1;
        long $l0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $l0 = virtualinvoke $r1.<java.math.BigDecimal: long longValue()>();

        return $l0;
    }

    public java.math.BigInteger bigIntegerValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1;
        java.math.BigInteger $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $r2 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigInteger toBigInteger()>();

        return $r2;
    }

    public float floatValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1;
        float $f0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $f0 = virtualinvoke $r1.<java.math.BigDecimal: float floatValue()>();

        return $f0;
    }

    public double doubleValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1;
        double $d0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $d0 = virtualinvoke $r1.<java.math.BigDecimal: double doubleValue()>();

        return $d0;
    }

    public java.math.BigDecimal decimalValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        return $r1;
    }

    public java.lang.String asText()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        java.math.BigDecimal $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $r2 = virtualinvoke $r1.<java.math.BigDecimal: java.lang.String toString()>();

        return $r2;
    }

    public final void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r2;
        java.math.BigDecimal $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigDecimal)>($r3);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.math.BigDecimal $r3, $r4;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        if $z0 == 0 goto label5;

        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode) r1;

        $r4 = $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal _value>;

        $i0 = virtualinvoke $r4.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r3);

        if $i0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode r0;
        double $d0;
        java.lang.Double $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $d0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: double doubleValue()>();

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $i0 = virtualinvoke $r1.<java.lang.Double: int hashCode()>();

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode $r0;
        java.math.BigDecimal $r1, $r2, $r3, $r4, $r5;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode;

        $r1 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: void <init>(java.math.BigDecimal)>($r1);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode ZERO> = $r0;

        $r2 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-2147483648L);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MIN_INTEGER> = $r2;

        $r3 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2147483647L);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MAX_INTEGER> = $r3;

        $r4 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(-9223372036854775808L);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MIN_LONG> = $r4;

        $r5 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(9223372036854775807L);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DecimalNode: java.math.BigDecimal MAX_LONG> = $r5;

        return;
    }
}
