public final class org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory extends java.lang.Object implements org.apache.flink.api.common.typeutils.TypeComparatorFactory, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.lang.String CONFIG_KEY;
    private org.apache.flink.api.common.typeutils.TypeComparator comparator;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.apache.flink.api.common.typeutils.TypeComparator)
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory r0;
        org.apache.flink.api.common.typeutils.TypeComparator r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory;

        r1 := @parameter0: org.apache.flink.api.common.typeutils.TypeComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory: org.apache.flink.api.common.typeutils.TypeComparator comparator> = r1;

        return;
    }

    public void writeParametersToConfig(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory r0;
        org.apache.flink.configuration.Configuration r1;
        org.apache.flink.api.common.typeutils.TypeComparator $r3;
        java.lang.Exception $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

     label1:
        $r3 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory: org.apache.flink.api.common.typeutils.TypeComparator comparator>;

        staticinvoke <org.apache.flink.util.InstantiationUtil: void writeObjectToConfig(java.lang.Object,org.apache.flink.configuration.Configuration,java.lang.String)>($r3, r1, "SER_DATA");

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not serialize comparator into the configuration.", $r4);

        throw $r5;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void readParametersFromConfig(org.apache.flink.configuration.Configuration, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory r0;
        org.apache.flink.configuration.Configuration r1;
        java.lang.ClassLoader r2;
        java.lang.Object $r3;
        org.apache.flink.api.common.typeutils.TypeComparator $r4;
        java.lang.ClassNotFoundException $r5;
        java.lang.Exception $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        r2 := @parameter1: java.lang.ClassLoader;

     label1:
        $r3 = staticinvoke <org.apache.flink.util.InstantiationUtil: java.lang.Object readObjectFromConfig(org.apache.flink.configuration.Configuration,java.lang.String,java.lang.ClassLoader)>(r1, "SER_DATA", r2);

        $r4 = (org.apache.flink.api.common.typeutils.TypeComparator) $r3;

        r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory: org.apache.flink.api.common.typeutils.TypeComparator comparator> = $r4;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        throw $r5;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not serialize serializer into the configuration.", $r6);

        throw $r7;

     label5:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public org.apache.flink.api.common.typeutils.TypeComparator createComparator()
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory r0;
        org.apache.flink.api.common.typeutils.TypeComparator $r1, $r3;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory: org.apache.flink.api.common.typeutils.TypeComparator comparator>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory: org.apache.flink.api.common.typeutils.TypeComparator comparator>;

        return $r3;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("ComparatorFactory has not been initialized from configuration.");

        throw $r2;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory: java.lang.String CONFIG_KEY> = "SER_DATA";

        <org.apache.flink.api.java.typeutils.runtime.RuntimeComparatorFactory: long serialVersionUID> = 1L;

        return;
    }
}
