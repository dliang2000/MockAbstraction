public final class org.joda.time.Interval extends org.joda.time.base.BaseInterval implements org.joda.time.ReadableInterval, java.io.Serializable
{
    private static final long serialVersionUID;

    public static org.joda.time.Interval parse(java.lang.String)
    {
        java.lang.String r0;
        org.joda.time.Interval $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.joda.time.Interval;

        specialinvoke $r1.<org.joda.time.Interval: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public void <init>(long, long)
    {
        org.joda.time.Interval r0;
        long l0, l1;

        r0 := @this: org.joda.time.Interval;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<org.joda.time.base.BaseInterval: void <init>(long,long,org.joda.time.Chronology)>(l0, l1, null);

        return;
    }

    public void <init>(long, long, org.joda.time.DateTimeZone)
    {
        org.joda.time.Interval r0;
        long l0, l1;
        org.joda.time.DateTimeZone r1;
        org.joda.time.chrono.ISOChronology $r2;

        r0 := @this: org.joda.time.Interval;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: org.joda.time.DateTimeZone;

        $r2 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance(org.joda.time.DateTimeZone)>(r1);

        specialinvoke r0.<org.joda.time.base.BaseInterval: void <init>(long,long,org.joda.time.Chronology)>(l0, l1, $r2);

        return;
    }

    public void <init>(long, long, org.joda.time.Chronology)
    {
        org.joda.time.Interval r0;
        long l0, l1;
        org.joda.time.Chronology r1;

        r0 := @this: org.joda.time.Interval;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: org.joda.time.Chronology;

        specialinvoke r0.<org.joda.time.base.BaseInterval: void <init>(long,long,org.joda.time.Chronology)>(l0, l1, r1);

        return;
    }

    public void <init>(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant)
    {
        org.joda.time.Interval r0;
        org.joda.time.ReadableInstant r1, r2;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        r2 := @parameter1: org.joda.time.ReadableInstant;

        specialinvoke r0.<org.joda.time.base.BaseInterval: void <init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)>(r1, r2);

        return;
    }

    public void <init>(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration)
    {
        org.joda.time.Interval r0;
        org.joda.time.ReadableInstant r1;
        org.joda.time.ReadableDuration r2;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        r2 := @parameter1: org.joda.time.ReadableDuration;

        specialinvoke r0.<org.joda.time.base.BaseInterval: void <init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)>(r1, r2);

        return;
    }

    public void <init>(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant)
    {
        org.joda.time.Interval r0;
        org.joda.time.ReadableDuration r1;
        org.joda.time.ReadableInstant r2;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadableDuration;

        r2 := @parameter1: org.joda.time.ReadableInstant;

        specialinvoke r0.<org.joda.time.base.BaseInterval: void <init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)>(r1, r2);

        return;
    }

    public void <init>(org.joda.time.ReadableInstant, org.joda.time.ReadablePeriod)
    {
        org.joda.time.Interval r0;
        org.joda.time.ReadableInstant r1;
        org.joda.time.ReadablePeriod r2;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        r2 := @parameter1: org.joda.time.ReadablePeriod;

        specialinvoke r0.<org.joda.time.base.BaseInterval: void <init>(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod)>(r1, r2);

        return;
    }

    public void <init>(org.joda.time.ReadablePeriod, org.joda.time.ReadableInstant)
    {
        org.joda.time.Interval r0;
        org.joda.time.ReadablePeriod r1;
        org.joda.time.ReadableInstant r2;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        r2 := @parameter1: org.joda.time.ReadableInstant;

        specialinvoke r0.<org.joda.time.base.BaseInterval: void <init>(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant)>(r1, r2);

        return;
    }

    public void <init>(java.lang.Object)
    {
        org.joda.time.Interval r0;
        java.lang.Object r1;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.joda.time.base.BaseInterval: void <init>(java.lang.Object,org.joda.time.Chronology)>(r1, null);

        return;
    }

    public void <init>(java.lang.Object, org.joda.time.Chronology)
    {
        org.joda.time.Interval r0;
        java.lang.Object r1;
        org.joda.time.Chronology r2;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.joda.time.Chronology;

        specialinvoke r0.<org.joda.time.base.BaseInterval: void <init>(java.lang.Object,org.joda.time.Chronology)>(r1, r2);

        return;
    }

    public org.joda.time.Interval toInterval()
    {
        org.joda.time.Interval r0;

        r0 := @this: org.joda.time.Interval;

        return r0;
    }

    public org.joda.time.Interval overlap(org.joda.time.ReadableInterval)
    {
        org.joda.time.Interval r0, $r1;
        long l0, l1, $l2, $l3, $l4, $l5;
        boolean $z0;
        org.joda.time.Chronology $r2;
        org.joda.time.ReadableInterval r3, r4;

        r0 := @this: org.joda.time.Interval;

        r3 := @parameter0: org.joda.time.ReadableInterval;

        r4 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.ReadableInterval getReadableInterval(org.joda.time.ReadableInterval)>(r3);

        $z0 = virtualinvoke r0.<org.joda.time.Interval: boolean overlaps(org.joda.time.ReadableInterval)>(r4);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $l2 = virtualinvoke r0.<org.joda.time.Interval: long getStartMillis()>();

        $l3 = interfaceinvoke r4.<org.joda.time.ReadableInterval: long getStartMillis()>();

        l0 = staticinvoke <java.lang.Math: long max(long,long)>($l2, $l3);

        $l4 = virtualinvoke r0.<org.joda.time.Interval: long getEndMillis()>();

        $l5 = interfaceinvoke r4.<org.joda.time.ReadableInterval: long getEndMillis()>();

        l1 = staticinvoke <java.lang.Math: long min(long,long)>($l4, $l5);

        $r1 = new org.joda.time.Interval;

        $r2 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Chronology getChronology()>();

        specialinvoke $r1.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>(l0, l1, $r2);

        return $r1;
    }

    public org.joda.time.Interval gap(org.joda.time.ReadableInterval)
    {
        org.joda.time.Interval r0, $r1, $r3;
        long l0, l1, l2, l3;
        byte $b4, $b5;
        org.joda.time.Chronology $r2, $r4;
        org.joda.time.ReadableInterval r5, r6;

        r0 := @this: org.joda.time.Interval;

        r5 := @parameter0: org.joda.time.ReadableInterval;

        r6 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.ReadableInterval getReadableInterval(org.joda.time.ReadableInterval)>(r5);

        l0 = interfaceinvoke r6.<org.joda.time.ReadableInterval: long getStartMillis()>();

        l1 = interfaceinvoke r6.<org.joda.time.ReadableInterval: long getEndMillis()>();

        l2 = virtualinvoke r0.<org.joda.time.Interval: long getStartMillis()>();

        l3 = virtualinvoke r0.<org.joda.time.Interval: long getEndMillis()>();

        $b4 = l2 cmp l1;

        if $b4 <= 0 goto label1;

        $r3 = new org.joda.time.Interval;

        $r4 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Chronology getChronology()>();

        specialinvoke $r3.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>(l1, l2, $r4);

        return $r3;

     label1:
        $b5 = l0 cmp l3;

        if $b5 <= 0 goto label2;

        $r1 = new org.joda.time.Interval;

        $r2 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Chronology getChronology()>();

        specialinvoke $r1.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>(l3, l0, $r2);

        return $r1;

     label2:
        return null;
    }

    public boolean abuts(org.joda.time.ReadableInterval)
    {
        org.joda.time.Interval r0;
        org.joda.time.ReadableInterval r1;
        long l0, $l1, $l2, $l4, $l5, $l7, $l9;
        byte $b3, $b6, $b8, $b10;
        boolean $z0, $z1;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadableInterval;

        if r1 != null goto label4;

        l0 = staticinvoke <org.joda.time.DateTimeUtils: long currentTimeMillis()>();

        $l7 = virtualinvoke r0.<org.joda.time.Interval: long getStartMillis()>();

        $b8 = $l7 cmp l0;

        if $b8 == 0 goto label1;

        $l9 = virtualinvoke r0.<org.joda.time.Interval: long getEndMillis()>();

        $b10 = $l9 cmp l0;

        if $b10 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $l1 = interfaceinvoke r1.<org.joda.time.ReadableInterval: long getEndMillis()>();

        $l2 = virtualinvoke r0.<org.joda.time.Interval: long getStartMillis()>();

        $b3 = $l1 cmp $l2;

        if $b3 == 0 goto label5;

        $l4 = virtualinvoke r0.<org.joda.time.Interval: long getEndMillis()>();

        $l5 = interfaceinvoke r1.<org.joda.time.ReadableInterval: long getStartMillis()>();

        $b6 = $l4 cmp $l5;

        if $b6 != 0 goto label6;

     label5:
        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;
    }

    public org.joda.time.Interval withChronology(org.joda.time.Chronology)
    {
        org.joda.time.Interval r0, $r3;
        org.joda.time.Chronology r1, $r2;
        long $l0, $l1;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.Chronology;

        $r2 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Chronology getChronology()>();

        if $r2 != r1 goto label1;

        return r0;

     label1:
        $r3 = new org.joda.time.Interval;

        $l0 = virtualinvoke r0.<org.joda.time.Interval: long getStartMillis()>();

        $l1 = virtualinvoke r0.<org.joda.time.Interval: long getEndMillis()>();

        specialinvoke $r3.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>($l0, $l1, r1);

        return $r3;
    }

    public org.joda.time.Interval withStartMillis(long)
    {
        org.joda.time.Interval r0, $r1;
        long l0, $l1, $l3;
        byte $b2;
        org.joda.time.Chronology $r2;

        r0 := @this: org.joda.time.Interval;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.joda.time.Interval: long getStartMillis()>();

        $b2 = l0 cmp $l1;

        if $b2 != 0 goto label1;

        return r0;

     label1:
        $r1 = new org.joda.time.Interval;

        $l3 = virtualinvoke r0.<org.joda.time.Interval: long getEndMillis()>();

        $r2 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Chronology getChronology()>();

        specialinvoke $r1.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>(l0, $l3, $r2);

        return $r1;
    }

    public org.joda.time.Interval withStart(org.joda.time.ReadableInstant)
    {
        org.joda.time.Interval r0, $r2;
        org.joda.time.ReadableInstant r1;
        long l0;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        l0 = staticinvoke <org.joda.time.DateTimeUtils: long getInstantMillis(org.joda.time.ReadableInstant)>(r1);

        $r2 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Interval withStartMillis(long)>(l0);

        return $r2;
    }

    public org.joda.time.Interval withEndMillis(long)
    {
        org.joda.time.Interval r0, $r1;
        long l0, $l1, $l3;
        byte $b2;
        org.joda.time.Chronology $r2;

        r0 := @this: org.joda.time.Interval;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.joda.time.Interval: long getEndMillis()>();

        $b2 = l0 cmp $l1;

        if $b2 != 0 goto label1;

        return r0;

     label1:
        $r1 = new org.joda.time.Interval;

        $l3 = virtualinvoke r0.<org.joda.time.Interval: long getStartMillis()>();

        $r2 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Chronology getChronology()>();

        specialinvoke $r1.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>($l3, l0, $r2);

        return $r1;
    }

    public org.joda.time.Interval withEnd(org.joda.time.ReadableInstant)
    {
        org.joda.time.Interval r0, $r2;
        org.joda.time.ReadableInstant r1;
        long l0;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        l0 = staticinvoke <org.joda.time.DateTimeUtils: long getInstantMillis(org.joda.time.ReadableInstant)>(r1);

        $r2 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Interval withEndMillis(long)>(l0);

        return $r2;
    }

    public org.joda.time.Interval withDurationAfterStart(org.joda.time.ReadableDuration)
    {
        org.joda.time.Interval r0, $r3;
        org.joda.time.ReadableDuration r1;
        long l0, l1, l2, $l3;
        org.joda.time.Chronology r2;
        byte $b4;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadableDuration;

        l0 = staticinvoke <org.joda.time.DateTimeUtils: long getDurationMillis(org.joda.time.ReadableDuration)>(r1);

        $l3 = virtualinvoke r0.<org.joda.time.Interval: long toDurationMillis()>();

        $b4 = l0 cmp $l3;

        if $b4 != 0 goto label1;

        return r0;

     label1:
        r2 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Chronology getChronology()>();

        l1 = virtualinvoke r0.<org.joda.time.Interval: long getStartMillis()>();

        l2 = virtualinvoke r2.<org.joda.time.Chronology: long add(long,long,int)>(l1, l0, 1);

        $r3 = new org.joda.time.Interval;

        specialinvoke $r3.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>(l1, l2, r2);

        return $r3;
    }

    public org.joda.time.Interval withDurationBeforeEnd(org.joda.time.ReadableDuration)
    {
        org.joda.time.Interval r0, $r3;
        org.joda.time.ReadableDuration r1;
        long l0, l1, l2, $l3;
        org.joda.time.Chronology r2;
        byte $b4;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadableDuration;

        l0 = staticinvoke <org.joda.time.DateTimeUtils: long getDurationMillis(org.joda.time.ReadableDuration)>(r1);

        $l3 = virtualinvoke r0.<org.joda.time.Interval: long toDurationMillis()>();

        $b4 = l0 cmp $l3;

        if $b4 != 0 goto label1;

        return r0;

     label1:
        r2 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Chronology getChronology()>();

        l1 = virtualinvoke r0.<org.joda.time.Interval: long getEndMillis()>();

        l2 = virtualinvoke r2.<org.joda.time.Chronology: long add(long,long,int)>(l1, l0, -1);

        $r3 = new org.joda.time.Interval;

        specialinvoke $r3.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>(l2, l1, r2);

        return $r3;
    }

    public org.joda.time.Interval withPeriodAfterStart(org.joda.time.ReadablePeriod)
    {
        org.joda.time.Interval r0, $r3, $r4;
        org.joda.time.ReadablePeriod r1;
        org.joda.time.Chronology r2;
        long l0, l1;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        if r1 != null goto label1;

        $r4 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Interval withDurationAfterStart(org.joda.time.ReadableDuration)>(null);

        return $r4;

     label1:
        r2 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Chronology getChronology()>();

        l0 = virtualinvoke r0.<org.joda.time.Interval: long getStartMillis()>();

        l1 = virtualinvoke r2.<org.joda.time.Chronology: long add(org.joda.time.ReadablePeriod,long,int)>(r1, l0, 1);

        $r3 = new org.joda.time.Interval;

        specialinvoke $r3.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>(l0, l1, r2);

        return $r3;
    }

    public org.joda.time.Interval withPeriodBeforeEnd(org.joda.time.ReadablePeriod)
    {
        org.joda.time.Interval r0, $r3, $r4;
        org.joda.time.ReadablePeriod r1;
        org.joda.time.Chronology r2;
        long l0, l1;

        r0 := @this: org.joda.time.Interval;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        if r1 != null goto label1;

        $r4 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Interval withDurationBeforeEnd(org.joda.time.ReadableDuration)>(null);

        return $r4;

     label1:
        r2 = virtualinvoke r0.<org.joda.time.Interval: org.joda.time.Chronology getChronology()>();

        l0 = virtualinvoke r0.<org.joda.time.Interval: long getEndMillis()>();

        l1 = virtualinvoke r2.<org.joda.time.Chronology: long add(org.joda.time.ReadablePeriod,long,int)>(r1, l0, -1);

        $r3 = new org.joda.time.Interval;

        specialinvoke $r3.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>(l1, l0, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.joda.time.Interval: long serialVersionUID> = 4922451897541386752L;

        return;
    }
}
