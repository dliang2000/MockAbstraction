public class org.objenesis.ObjenesisBase extends java.lang.Object implements org.objenesis.Objenesis
{
    protected final org.objenesis.strategy.InstantiatorStrategy strategy;
    protected java.util.concurrent.ConcurrentHashMap cache;

    public void <init>(org.objenesis.strategy.InstantiatorStrategy)
    {
        org.objenesis.ObjenesisBase r0;
        org.objenesis.strategy.InstantiatorStrategy r1;

        r0 := @this: org.objenesis.ObjenesisBase;

        r1 := @parameter0: org.objenesis.strategy.InstantiatorStrategy;

        specialinvoke r0.<org.objenesis.ObjenesisBase: void <init>(org.objenesis.strategy.InstantiatorStrategy,boolean)>(r1, 1);

        return;
    }

    public void <init>(org.objenesis.strategy.InstantiatorStrategy, boolean)
    {
        org.objenesis.ObjenesisBase r0;
        org.objenesis.strategy.InstantiatorStrategy r1;
        boolean z0;
        java.lang.IllegalArgumentException $r3;
        java.util.concurrent.ConcurrentHashMap $r4;

        r0 := @this: org.objenesis.ObjenesisBase;

        r1 := @parameter0: org.objenesis.strategy.InstantiatorStrategy;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A strategy can\'t be null");

        throw $r3;

     label1:
        r0.<org.objenesis.ObjenesisBase: org.objenesis.strategy.InstantiatorStrategy strategy> = r1;

        if z0 == 0 goto label2;

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        r0.<org.objenesis.ObjenesisBase: java.util.concurrent.ConcurrentHashMap cache> = $r4;

        return;
    }

    public java.lang.String toString()
    {
        org.objenesis.ObjenesisBase r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r9, $r11, $r12;
        java.lang.Class $r2, $r7;
        java.lang.String $r3, $r8, $r13, $r14;
        org.objenesis.strategy.InstantiatorStrategy $r6;
        java.util.concurrent.ConcurrentHashMap $r10;

        r0 := @this: org.objenesis.ObjenesisBase;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ");

        $r6 = r0.<org.objenesis.ObjenesisBase: org.objenesis.strategy.InstantiatorStrategy strategy>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = r0.<org.objenesis.ObjenesisBase: java.util.concurrent.ConcurrentHashMap cache>;

        if $r10 != null goto label1;

        $r14 = " without";

        goto label2;

     label1:
        $r14 = " with";

     label2:
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" caching");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public java.lang.Object newInstance(java.lang.Class)
    {
        org.objenesis.ObjenesisBase r0;
        java.lang.Class r1;
        org.objenesis.instantiator.ObjectInstantiator $r2;
        java.lang.Object $r3;

        r0 := @this: org.objenesis.ObjenesisBase;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.objenesis.ObjenesisBase: org.objenesis.instantiator.ObjectInstantiator getInstantiatorOf(java.lang.Class)>(r1);

        $r3 = interfaceinvoke $r2.<org.objenesis.instantiator.ObjectInstantiator: java.lang.Object newInstance()>();

        return $r3;
    }

    public org.objenesis.instantiator.ObjectInstantiator getInstantiatorOf(java.lang.Class)
    {
        org.objenesis.ObjenesisBase r0;
        java.lang.Class r1;
        org.objenesis.instantiator.ObjectInstantiator r2, $r12, r13;
        java.util.concurrent.ConcurrentHashMap $r3, $r4, $r8;
        java.lang.String $r5, $r9;
        java.lang.Object $r6, $r10;
        org.objenesis.strategy.InstantiatorStrategy $r7, $r11;

        r0 := @this: org.objenesis.ObjenesisBase;

        r1 := @parameter0: java.lang.Class;

        $r3 = r0.<org.objenesis.ObjenesisBase: java.util.concurrent.ConcurrentHashMap cache>;

        if $r3 != null goto label1;

        $r11 = r0.<org.objenesis.ObjenesisBase: org.objenesis.strategy.InstantiatorStrategy strategy>;

        $r12 = interfaceinvoke $r11.<org.objenesis.strategy.InstantiatorStrategy: org.objenesis.instantiator.ObjectInstantiator newInstantiatorOf(java.lang.Class)>(r1);

        return $r12;

     label1:
        $r4 = r0.<org.objenesis.ObjenesisBase: java.util.concurrent.ConcurrentHashMap cache>;

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r5);

        r13 = (org.objenesis.instantiator.ObjectInstantiator) $r6;

        if r13 != null goto label2;

        $r7 = r0.<org.objenesis.ObjenesisBase: org.objenesis.strategy.InstantiatorStrategy strategy>;

        r2 = interfaceinvoke $r7.<org.objenesis.strategy.InstantiatorStrategy: org.objenesis.instantiator.ObjectInstantiator newInstantiatorOf(java.lang.Class)>(r1);

        $r8 = r0.<org.objenesis.ObjenesisBase: java.util.concurrent.ConcurrentHashMap cache>;

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r9, r2);

        r13 = (org.objenesis.instantiator.ObjectInstantiator) $r10;

        if r13 != null goto label2;

        r13 = r2;

     label2:
        return r13;
    }
}
