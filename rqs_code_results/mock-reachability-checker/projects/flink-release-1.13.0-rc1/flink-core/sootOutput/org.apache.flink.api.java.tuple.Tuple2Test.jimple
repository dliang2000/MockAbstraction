public class org.apache.flink.api.java.tuple.Tuple2Test extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.java.tuple.Tuple2Test r0;

        r0 := @this: org.apache.flink.api.java.tuple.Tuple2Test;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testSwapValues()
    {
        org.apache.flink.api.java.tuple.Tuple2Test r0;
        org.apache.flink.api.java.tuple.Tuple2 r2, $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.flink.api.java.tuple.Tuple2Test;

        $r3 = new org.apache.flink.api.java.tuple.Tuple2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(25);

        specialinvoke $r3.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>("Test case", $r4);

        r2 = virtualinvoke $r3.<org.apache.flink.api.java.tuple.Tuple2: org.apache.flink.api.java.tuple.Tuple2 swap()>();

        $r6 = r2.<org.apache.flink.api.java.tuple.Tuple2: java.lang.Object f0>;

        $r5 = $r3.<org.apache.flink.api.java.tuple.Tuple2: java.lang.Object f1>;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r5);

        $r8 = r2.<org.apache.flink.api.java.tuple.Tuple2: java.lang.Object f1>;

        $r7 = $r3.<org.apache.flink.api.java.tuple.Tuple2: java.lang.Object f0>;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r7);

        return;
    }

    public void testGetFieldNotNull()
    {
        org.apache.flink.api.java.tuple.Tuple2Test r0;
        org.apache.flink.api.java.tuple.Tuple2 $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.api.java.tuple.Tuple2Test;

        $r2 = new org.apache.flink.api.java.tuple.Tuple2;

        specialinvoke $r2.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>("Test case", null);

        $r3 = virtualinvoke $r2.<org.apache.flink.api.java.tuple.Tuple2: java.lang.Object getFieldNotNull(int)>(0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Test case", $r3);

        virtualinvoke $r2.<org.apache.flink.api.java.tuple.Tuple2: java.lang.Object getFieldNotNull(int)>(1);

        return;
    }
}
