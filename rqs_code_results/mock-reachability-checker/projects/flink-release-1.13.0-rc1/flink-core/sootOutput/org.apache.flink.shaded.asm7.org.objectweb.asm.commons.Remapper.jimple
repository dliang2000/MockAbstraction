public abstract class org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String mapDesc(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String r1, $r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Type $r2, $r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: org.apache.flink.shaded.asm7.org.objectweb.asm.Type getType(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: org.apache.flink.shaded.asm7.org.objectweb.asm.Type mapType(org.apache.flink.shaded.asm7.org.objectweb.asm.Type)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Type: java.lang.String getDescriptor()>();

        return $r4;
    }

    private org.apache.flink.shaded.asm7.org.objectweb.asm.Type mapType(org.apache.flink.shaded.asm7.org.objectweb.asm.Type)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Type r1, $r5, $r8, $r9, $r13, $r16;
        int $i0, $i1, i2;
        java.lang.String $r3, $r4, $r6, $r10, $r12, r15;
        java.lang.StringBuilder $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.Type;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Type: int getSort()>();

        tableswitch($i0)
        {
            case 9: goto label1;
            case 10: goto label4;
            case 11: goto label7;
            default: goto label8;
        };

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label2:
        $i1 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Type: int getDimensions()>();

        if i2 >= $i1 goto label3;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r8 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Type: org.apache.flink.shaded.asm7.org.objectweb.asm.Type getElementType()>();

        $r9 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: org.apache.flink.shaded.asm7.org.objectweb.asm.Type mapType(org.apache.flink.shaded.asm7.org.objectweb.asm.Type)>($r8);

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.Type: java.lang.String getDescriptor()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: org.apache.flink.shaded.asm7.org.objectweb.asm.Type getType(java.lang.String)>($r12);

        return $r13;

     label4:
        $r6 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Type: java.lang.String getInternalName()>();

        r15 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String map(java.lang.String)>($r6);

        if r15 == null goto label5;

        $r16 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: org.apache.flink.shaded.asm7.org.objectweb.asm.Type getObjectType(java.lang.String)>(r15);

        goto label6;

     label5:
        $r16 = r1;

     label6:
        return $r16;

     label7:
        $r3 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Type: java.lang.String getDescriptor()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapMethodDesc(java.lang.String)>($r3);

        $r5 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: org.apache.flink.shaded.asm7.org.objectweb.asm.Type getMethodType(java.lang.String)>($r4);

        return $r5;

     label8:
        return r1;
    }

    public java.lang.String mapType(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String r1, $r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Type $r2, $r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: org.apache.flink.shaded.asm7.org.objectweb.asm.Type getObjectType(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: org.apache.flink.shaded.asm7.org.objectweb.asm.Type mapType(org.apache.flink.shaded.asm7.org.objectweb.asm.Type)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Type: java.lang.String getInternalName()>();

        return $r4;
    }

    public java.lang.String[] mapTypes(java.lang.String[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String[] r1, r4, $r5;
        java.lang.String r2, r3;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String[];

        r4 = null;

        i3 = 0;

     label1:
        $i0 = lengthof r1;

        if i3 >= $i0 goto label4;

        r2 = r1[i3];

        r3 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r2);

        if r3 == null goto label3;

        if r4 != null goto label2;

        $i1 = lengthof r1;

        r4 = newarray (java.lang.String)[$i1];

        $i2 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r4, 0, $i2);

     label2:
        r4[i3] = r3;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        if r4 == null goto label5;

        $r5 = r4;

        goto label6;

     label5:
        $r5 = r1;

     label6:
        return $r5;
    }

    public java.lang.String mapMethodDesc(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String r1, $r4, $r9, $r11, $r14;
        int i0, i1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Type r3, $r6, $r8, $r13, r17;
        boolean $z0;
        java.lang.StringBuilder $r5, $r7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Type[] r16;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String;

        $r4 = "()V";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("(");

        r16 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: org.apache.flink.shaded.asm7.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>(r1);

        i0 = lengthof r16;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r3 = r16[i1];

        $r13 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: org.apache.flink.shaded.asm7.org.objectweb.asm.Type mapType(org.apache.flink.shaded.asm7.org.objectweb.asm.Type)>(r3);

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.Type: java.lang.String getDescriptor()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        i1 = i1 + 1;

        goto label2;

     label3:
        r17 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: org.apache.flink.shaded.asm7.org.objectweb.asm.Type getReturnType(java.lang.String)>(r1);

        $r6 = <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: org.apache.flink.shaded.asm7.org.objectweb.asm.Type VOID_TYPE>;

        if r17 != $r6 goto label4;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")V");

        goto label5;

     label4:
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: org.apache.flink.shaded.asm7.org.objectweb.asm.Type mapType(org.apache.flink.shaded.asm7.org.objectweb.asm.Type)>(r17);

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.Type: java.lang.String getDescriptor()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label5:
        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.Object mapValue(java.lang.Object)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.Object r1, $r8, $r10, $r11;
        int i0, $i1, $i2, i3;
        java.lang.Object[] r2;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ConstantDynamic $r3, r25;
        java.lang.String $r4, $r5, $r6, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r24, r26;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Handle $r7, $r9, $r12, r23;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Type $r21, $r22;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.shaded.asm7.org.objectweb.asm.Type;

        if $z0 == 0 goto label1;

        $r21 = (org.apache.flink.shaded.asm7.org.objectweb.asm.Type) r1;

        $r22 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: org.apache.flink.shaded.asm7.org.objectweb.asm.Type mapType(org.apache.flink.shaded.asm7.org.objectweb.asm.Type)>($r21);

        return $r22;

     label1:
        $z1 = r1 instanceof org.apache.flink.shaded.asm7.org.objectweb.asm.Handle;

        if $z1 == 0 goto label4;

        r23 = (org.apache.flink.shaded.asm7.org.objectweb.asm.Handle) r1;

        $r12 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Handle;

        $i1 = virtualinvoke r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handle: int getTag()>();

        $r13 = virtualinvoke r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handle: java.lang.String getOwner()>();

        $r14 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>($r13);

        $r15 = virtualinvoke r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handle: java.lang.String getOwner()>();

        $r16 = virtualinvoke r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handle: java.lang.String getName()>();

        $r17 = virtualinvoke r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handle: java.lang.String getDesc()>();

        $r18 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapMethodName(java.lang.String,java.lang.String,java.lang.String)>($r15, $r16, $r17);

        $i2 = virtualinvoke r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handle: int getTag()>();

        if $i2 > 4 goto label2;

        $r20 = virtualinvoke r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handle: java.lang.String getDesc()>();

        $r24 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>($r20);

        goto label3;

     label2:
        $r19 = virtualinvoke r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handle: java.lang.String getDesc()>();

        $r24 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapMethodDesc(java.lang.String)>($r19);

     label3:
        $z3 = virtualinvoke r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handle: boolean isInterface()>();

        specialinvoke $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handle: void <init>(int,java.lang.String,java.lang.String,java.lang.String,boolean)>($i1, $r14, $r18, $r24, $z3);

        return $r12;

     label4:
        $z2 = r1 instanceof org.apache.flink.shaded.asm7.org.objectweb.asm.ConstantDynamic;

        if $z2 == 0 goto label7;

        r25 = (org.apache.flink.shaded.asm7.org.objectweb.asm.ConstantDynamic) r1;

        i0 = virtualinvoke r25.<org.apache.flink.shaded.asm7.org.objectweb.asm.ConstantDynamic: int getBootstrapMethodArgumentCount()>();

        r2 = newarray (java.lang.Object)[i0];

        i3 = 0;

     label5:
        if i3 >= i0 goto label6;

        $r10 = virtualinvoke r25.<org.apache.flink.shaded.asm7.org.objectweb.asm.ConstantDynamic: java.lang.Object getBootstrapMethodArgument(int)>(i3);

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.Object mapValue(java.lang.Object)>($r10);

        r2[i3] = $r11;

        i3 = i3 + 1;

        goto label5;

     label6:
        r26 = virtualinvoke r25.<org.apache.flink.shaded.asm7.org.objectweb.asm.ConstantDynamic: java.lang.String getDescriptor()>();

        $r3 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ConstantDynamic;

        $r4 = virtualinvoke r25.<org.apache.flink.shaded.asm7.org.objectweb.asm.ConstantDynamic: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapInvokeDynamicMethodName(java.lang.String,java.lang.String)>($r4, r26);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>(r26);

        $r7 = virtualinvoke r25.<org.apache.flink.shaded.asm7.org.objectweb.asm.ConstantDynamic: org.apache.flink.shaded.asm7.org.objectweb.asm.Handle getBootstrapMethod()>();

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.Object mapValue(java.lang.Object)>($r7);

        $r9 = (org.apache.flink.shaded.asm7.org.objectweb.asm.Handle) $r8;

        specialinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ConstantDynamic: void <init>(java.lang.String,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.Handle,java.lang.Object[])>($r5, $r6, $r9, r2);

        return $r3;

     label7:
        return r1;
    }

    public java.lang.String mapSignature(java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String r1, $r7;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureReader $r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureWriter $r6;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        return null;

     label1:
        $r5 = new org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureReader;

        specialinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureReader: void <init>(java.lang.String)>(r1);

        $r6 = new org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureWriter;

        specialinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureWriter: void <init>()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor createSignatureRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor)>($r6);

        if z0 == 0 goto label2;

        virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureReader: void acceptType(org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor)>(r4);

        goto label3;

     label2:
        virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureReader: void accept(org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor)>(r4);

     label3:
        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureWriter: java.lang.String toString()>();

        return $r7;
    }

    protected org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor createRemappingSignatureAdapter(org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor r1, $r2;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor createSignatureRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor)>(r1);

        return $r2;
    }

    protected org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor createSignatureRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SignatureRemapper $r2;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor;

        $r2 = new org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SignatureRemapper;

        specialinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SignatureRemapper: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.signature.SignatureVisitor,org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper)>(r1, r0);

        return $r2;
    }

    public java.lang.String mapInnerClassName(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String r1, r2, r3, r4, $r5;
        boolean $z0, $z1;
        int $i0, $i1, i3;
        char $c2;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("$");

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r4.<java.lang.String: int lastIndexOf(int)>(36);

        i3 = $i0 + 1;

     label1:
        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        if i3 >= $i1 goto label2;

        $c2 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i3);

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2);

        if $z1 == 0 goto label2;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(i3);

        return $r5;

     label3:
        return r3;
    }

    public java.lang.String mapMethodName(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return r2;
    }

    public java.lang.String mapInvokeDynamicMethodName(java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return r1;
    }

    public java.lang.String mapFieldName(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return r2;
    }

    public java.lang.String mapPackageName(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String;

        return r1;
    }

    public java.lang.String mapModuleName(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String;

        return r1;
    }

    public java.lang.String map(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        r1 := @parameter0: java.lang.String;

        return r1;
    }
}
