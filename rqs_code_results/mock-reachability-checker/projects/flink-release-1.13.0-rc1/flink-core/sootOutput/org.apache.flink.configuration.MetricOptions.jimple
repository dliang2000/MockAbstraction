public class org.apache.flink.configuration.MetricOptions extends java.lang.Object
{
    public static final org.apache.flink.configuration.ConfigOption REPORTERS_LIST;
    public static final org.apache.flink.configuration.ConfigOption REPORTER_CLASS;
    public static final org.apache.flink.configuration.ConfigOption REPORTER_INTERVAL;
    public static final org.apache.flink.configuration.ConfigOption REPORTER_CONFIG_PARAMETER;
    public static final org.apache.flink.configuration.ConfigOption SCOPE_DELIMITER;
    public static final org.apache.flink.configuration.ConfigOption SCOPE_NAMING_JM;
    public static final org.apache.flink.configuration.ConfigOption SCOPE_NAMING_TM;
    public static final org.apache.flink.configuration.ConfigOption SCOPE_NAMING_JM_JOB;
    public static final org.apache.flink.configuration.ConfigOption SCOPE_NAMING_TM_JOB;
    public static final org.apache.flink.configuration.ConfigOption SCOPE_NAMING_TASK;
    public static final org.apache.flink.configuration.ConfigOption SCOPE_NAMING_OPERATOR;
    public static final org.apache.flink.configuration.ConfigOption LATENCY_INTERVAL;
    public static final org.apache.flink.configuration.ConfigOption LATENCY_SOURCE_GRANULARITY;
    public static final org.apache.flink.configuration.ConfigOption LATENCY_HISTORY_SIZE;
    public static final org.apache.flink.configuration.ConfigOption SYSTEM_RESOURCE_METRICS;
    public static final org.apache.flink.configuration.ConfigOption SYSTEM_RESOURCE_METRICS_PROBING_INTERVAL;
    public static final org.apache.flink.configuration.ConfigOption QUERY_SERVICE_PORT;
    public static final org.apache.flink.configuration.ConfigOption QUERY_SERVICE_THREAD_PRIORITY;
    public static final org.apache.flink.configuration.ConfigOption METRIC_FETCHER_UPDATE_INTERVAL;

    private void <init>()
    {
        org.apache.flink.configuration.MetricOptions r0;

        r0 := @this: org.apache.flink.configuration.MetricOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r0, $r3, $r6, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r39, $r50, $r54, $r58, $r69, $r72, $r76;
        org.apache.flink.configuration.ConfigOption $r1, $r2, $r4, $r5, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r30, $r31, $r33, $r34, $r37, $r38, $r40, $r49, $r52, $r53, $r56, $r57, $r60, $r63, $r68, $r70, $r71, $r74, $r75, $r78, $r79;
        org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder $r7;
        java.time.Duration $r8;
        java.lang.Long $r36, $r59, $r77;
        org.apache.flink.configuration.description.Description$DescriptionBuilder $r41, $r42, $r47;
        org.apache.flink.configuration.description.InlineElement[] $r43;
        org.apache.flink.configuration.description.TextElement $r44, $r45, $r46;
        org.apache.flink.configuration.description.Description $r48;
        java.lang.Integer $r51, $r73;
        java.lang.Boolean $r55;
        java.lang.StringBuilder $r61, $r62, $r65, $r66;
        java.lang.String $r64, $r67;

        $r0 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.reporters");

        $r1 = virtualinvoke $r0.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r2 = virtualinvoke $r1.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("An optional list of reporter names. If configured, only reporters whose name matches any of the names in the list will be started. Otherwise, all reporters that could be found in the configuration will be started.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption REPORTERS_LIST> = $r2;

        $r3 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.reporter.<name>.class");

        $r4 = virtualinvoke $r3.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r5 = virtualinvoke $r4.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The reporter class to use for the reporter named <name>.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption REPORTER_CLASS> = $r5;

        $r6 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.reporter.<name>.interval");

        $r7 = virtualinvoke $r6.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder durationType()>();

        $r8 = staticinvoke <java.time.Duration: java.time.Duration ofSeconds(long)>(10L);

        $r9 = virtualinvoke $r7.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The reporter interval to use for the reporter named <name>.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption REPORTER_INTERVAL> = $r10;

        $r11 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.reporter.<name>.<parameter>");

        $r12 = virtualinvoke $r11.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r13 = virtualinvoke $r12.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Configures the parameter <parameter> for the reporter named <name>.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption REPORTER_CONFIG_PARAMETER> = $r13;

        $r14 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.scope.delimiter");

        $r15 = virtualinvoke $r14.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>(".");

        $r16 = virtualinvoke $r15.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Delimiter used to assemble the metric identifier.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption SCOPE_DELIMITER> = $r16;

        $r17 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.scope.jm");

        $r18 = virtualinvoke $r17.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("<host>.jobmanager");

        $r19 = virtualinvoke $r18.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the scope format string that is applied to all metrics scoped to a JobManager.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption SCOPE_NAMING_JM> = $r19;

        $r20 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.scope.tm");

        $r21 = virtualinvoke $r20.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("<host>.taskmanager.<tm_id>");

        $r22 = virtualinvoke $r21.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the scope format string that is applied to all metrics scoped to a TaskManager.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption SCOPE_NAMING_TM> = $r22;

        $r23 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.scope.jm.job");

        $r24 = virtualinvoke $r23.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("<host>.jobmanager.<job_name>");

        $r25 = virtualinvoke $r24.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the scope format string that is applied to all metrics scoped to a job on a JobManager.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption SCOPE_NAMING_JM_JOB> = $r25;

        $r26 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.scope.tm.job");

        $r27 = virtualinvoke $r26.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("<host>.taskmanager.<tm_id>.<job_name>");

        $r28 = virtualinvoke $r27.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the scope format string that is applied to all metrics scoped to a job on a TaskManager.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption SCOPE_NAMING_TM_JOB> = $r28;

        $r29 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.scope.task");

        $r30 = virtualinvoke $r29.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("<host>.taskmanager.<tm_id>.<job_name>.<task_name>.<subtask_index>");

        $r31 = virtualinvoke $r30.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the scope format string that is applied to all metrics scoped to a task.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption SCOPE_NAMING_TASK> = $r31;

        $r32 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.scope.operator");

        $r33 = virtualinvoke $r32.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("<host>.taskmanager.<tm_id>.<job_name>.<operator_name>.<subtask_index>");

        $r34 = virtualinvoke $r33.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the scope format string that is applied to all metrics scoped to an operator.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption SCOPE_NAMING_OPERATOR> = $r34;

        $r35 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.latency.interval");

        $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r37 = virtualinvoke $r35.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r36);

        $r38 = virtualinvoke $r37.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the interval at which latency tracking marks are emitted from the sources. Disables latency tracking if set to 0 or a negative value. Enabling this feature can significantly impact the performance of the cluster.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption LATENCY_INTERVAL> = $r38;

        $r39 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.latency.granularity");

        $r40 = virtualinvoke $r39.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("operator");

        $r41 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r42 = virtualinvoke $r41.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String)>("Defines the granularity of latency metrics. Accepted values are:");

        $r43 = newarray (org.apache.flink.configuration.description.InlineElement)[3];

        $r44 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement text(java.lang.String)>("single - Track latency without differentiating between sources and subtasks.");

        $r43[0] = $r44;

        $r45 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement text(java.lang.String)>("operator - Track latency while differentiating between sources, but not subtasks.");

        $r43[1] = $r45;

        $r46 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement text(java.lang.String)>("subtask - Track latency while differentiating between sources and subtasks.");

        $r43[2] = $r46;

        $r47 = virtualinvoke $r42.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder list(org.apache.flink.configuration.description.InlineElement[])>($r43);

        $r48 = virtualinvoke $r47.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r49 = virtualinvoke $r40.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r48);

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption LATENCY_SOURCE_GRANULARITY> = $r49;

        $r50 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.latency.history-size");

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(128);

        $r52 = virtualinvoke $r50.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r51);

        $r53 = virtualinvoke $r52.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the number of measured latencies to maintain at each operator.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption LATENCY_HISTORY_SIZE> = $r53;

        $r54 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.system-resource");

        $r55 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r56 = virtualinvoke $r54.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r55);

        $r57 = virtualinvoke $r56.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Flag indicating whether Flink should report system resource metrics such as machine\'s CPU, memory or network usage.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption SYSTEM_RESOURCE_METRICS> = $r57;

        $r58 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.system-resource-probing-interval");

        $r59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5000L);

        $r60 = virtualinvoke $r58.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r59);

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interval between probing of system resource metrics specified in milliseconds. Has an effect only when \'");

        $r63 = <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption SYSTEM_RESOURCE_METRICS>;

        $r64 = virtualinvoke $r63.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r65 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is enabled.");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        $r68 = virtualinvoke $r60.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>($r67);

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption SYSTEM_RESOURCE_METRICS_PROBING_INTERVAL> = $r68;

        $r69 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.internal.query-service.port");

        $r70 = virtualinvoke $r69.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("0");

        $r71 = virtualinvoke $r70.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The port range used for Flink\'s internal metric query service. Accepts a list of ports (\u201c50100,50101\u201d), ranges(\u201c50100-50200\u201d) or a combination of both. It is recommended to set a range of ports to avoid collisions when multiple Flink components are running on the same machine. Per default Flink will pick a random port.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption QUERY_SERVICE_PORT> = $r71;

        $r72 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.internal.query-service.thread-priority");

        $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r74 = virtualinvoke $r72.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r73);

        $r75 = virtualinvoke $r74.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The thread priority used for Flink\'s internal metric query service. The thread is created by Akka\'s thread pool executor. The range of the priority is from 1 (MIN_PRIORITY) to 10 (MAX_PRIORITY). Warning, increasing this value may bring the main Flink components down.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption QUERY_SERVICE_THREAD_PRIORITY> = $r75;

        $r76 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("metrics.fetcher.update-interval");

        $r77 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10000L);

        $r78 = virtualinvoke $r76.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r77);

        $r79 = virtualinvoke $r78.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Update interval for the metric fetcher used by the web UI in milliseconds. Decrease this value for faster updating metrics. Increase this value if the metric fetcher causes too much load. Setting this value to 0 disables the metric fetching completely.");

        <org.apache.flink.configuration.MetricOptions: org.apache.flink.configuration.ConfigOption METRIC_FETCHER_UPDATE_INTERVAL> = $r79;

        return;
    }
}
