class org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem extends org.apache.flink.core.fs.FileSystem implements org.apache.flink.util.WrappingProxy
{
    private final org.apache.flink.core.fs.FileSystem inner;
    private final java.lang.ClassLoader loader;

    private void <init>(org.apache.flink.core.fs.FileSystem, java.lang.ClassLoader)
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.FileSystem r1;
        java.lang.ClassLoader r2;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.FileSystem;

        r2 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<org.apache.flink.core.fs.FileSystem: void <init>()>();

        r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner> = r1;

        r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader> = r2;

        return;
    }

    public org.apache.flink.core.fs.Path getWorkingDirectory()
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.util.TemporaryClassLoaderContext r1;
        java.lang.ClassLoader $r5;
        org.apache.flink.core.fs.FileSystem $r6;
        java.lang.Throwable $r8, $r9, $r10, r11;
        org.apache.flink.core.fs.Path r12;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        $r5 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r1 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r5);

        r11 = null;

     label01:
        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        r12 = virtualinvoke $r6.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.Path getWorkingDirectory()>();

     label02:
        if r1 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r12;

     label05:
        $r9 := @caughtexception;

        r11 = $r9;

        throw $r9;

     label06:
        $r8 := @caughtexception;

     label07:
        if r1 == null goto label12;

        if r11 == null goto label11;

     label08:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

        goto label12;

     label11:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public org.apache.flink.core.fs.Path getHomeDirectory()
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.util.TemporaryClassLoaderContext r1;
        java.lang.ClassLoader $r5;
        org.apache.flink.core.fs.FileSystem $r6;
        java.lang.Throwable $r7, $r8, $r10, r11;
        org.apache.flink.core.fs.Path r12;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        $r5 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r1 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r5);

        r11 = null;

     label01:
        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        r12 = virtualinvoke $r6.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.Path getHomeDirectory()>();

     label02:
        if r1 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r12;

     label05:
        $r7 := @caughtexception;

        r11 = $r7;

        throw $r7;

     label06:
        $r10 := @caughtexception;

     label07:
        if r1 == null goto label12;

        if r11 == null goto label11;

     label08:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

        goto label12;

     label11:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public java.net.URI getUri()
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.util.TemporaryClassLoaderContext r1;
        java.lang.ClassLoader $r5;
        org.apache.flink.core.fs.FileSystem $r6;
        java.lang.Throwable $r7, $r8, $r9, r11;
        java.net.URI r12;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        $r5 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r1 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r5);

        r11 = null;

     label01:
        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        r12 = virtualinvoke $r6.<org.apache.flink.core.fs.FileSystem: java.net.URI getUri()>();

     label02:
        if r1 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r12;

     label05:
        $r9 := @caughtexception;

        r11 = $r9;

        throw $r9;

     label06:
        $r8 := @caughtexception;

     label07:
        if r1 == null goto label12;

        if r11 == null goto label11;

     label08:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r7);

        goto label12;

     label11:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public org.apache.flink.core.fs.FileStatus getFileStatus(org.apache.flink.core.fs.Path) throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.Path r1;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.ClassLoader $r6;
        org.apache.flink.core.fs.FileSystem $r7;
        java.lang.Throwable $r8, $r10, $r11, r12;
        org.apache.flink.core.fs.FileStatus r13;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.Path;

        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r6);

        r12 = null;

     label01:
        $r7 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        r13 = virtualinvoke $r7.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.FileStatus getFileStatus(org.apache.flink.core.fs.Path)>(r1);

     label02:
        if r2 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r13;

     label05:
        $r8 := @caughtexception;

        r12 = $r8;

        throw $r8;

     label06:
        $r11 := @caughtexception;

     label07:
        if r2 == null goto label12;

        if r12 == null goto label11;

     label08:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

        goto label12;

     label11:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public org.apache.flink.core.fs.BlockLocation[] getFileBlockLocations(org.apache.flink.core.fs.FileStatus, long, long) throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.FileStatus r1;
        long l0, l1;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.ClassLoader $r6;
        org.apache.flink.core.fs.FileSystem $r7;
        java.lang.Throwable $r8, $r9, $r11, r12;
        org.apache.flink.core.fs.BlockLocation[] r13;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.FileStatus;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r6);

        r12 = null;

     label01:
        $r7 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        r13 = virtualinvoke $r7.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.BlockLocation[] getFileBlockLocations(org.apache.flink.core.fs.FileStatus,long,long)>(r1, l0, l1);

     label02:
        if r2 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r13;

     label05:
        $r11 := @caughtexception;

        r12 = $r11;

        throw $r11;

     label06:
        $r9 := @caughtexception;

     label07:
        if r2 == null goto label12;

        if r12 == null goto label11;

     label08:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

        goto label12;

     label11:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public org.apache.flink.core.fs.FSDataInputStream open(org.apache.flink.core.fs.Path, int) throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.Path r1;
        int i0;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.ClassLoader $r6;
        org.apache.flink.core.fs.FileSystem $r7;
        java.lang.Throwable $r8, $r10, $r11, r12;
        org.apache.flink.core.fs.FSDataInputStream r13;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.Path;

        i0 := @parameter1: int;

        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r6);

        r12 = null;

     label01:
        $r7 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        r13 = virtualinvoke $r7.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.FSDataInputStream open(org.apache.flink.core.fs.Path,int)>(r1, i0);

     label02:
        if r2 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r13;

     label05:
        $r11 := @caughtexception;

        r12 = $r11;

        throw $r11;

     label06:
        $r8 := @caughtexception;

     label07:
        if r2 == null goto label12;

        if r12 == null goto label11;

     label08:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

        goto label12;

     label11:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public org.apache.flink.core.fs.FSDataInputStream open(org.apache.flink.core.fs.Path) throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.Path r1;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.ClassLoader $r6;
        org.apache.flink.core.fs.FileSystem $r7;
        java.lang.Throwable $r9, $r10, $r11, r12;
        org.apache.flink.core.fs.FSDataInputStream r13;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.Path;

        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r6);

        r12 = null;

     label01:
        $r7 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        r13 = virtualinvoke $r7.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.FSDataInputStream open(org.apache.flink.core.fs.Path)>(r1);

     label02:
        if r2 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r13;

     label05:
        $r10 := @caughtexception;

        r12 = $r10;

        throw $r10;

     label06:
        $r9 := @caughtexception;

     label07:
        if r2 == null goto label12;

        if r12 == null goto label11;

     label08:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r11 := @caughtexception;

        virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r11);

        goto label12;

     label11:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public org.apache.flink.core.fs.RecoverableWriter createRecoverableWriter() throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.util.TemporaryClassLoaderContext r1;
        java.lang.ClassLoader $r5;
        org.apache.flink.core.fs.FileSystem $r6;
        java.lang.Throwable $r7, $r9, $r10, r11;
        org.apache.flink.core.fs.RecoverableWriter r12;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        $r5 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r1 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r5);

        r11 = null;

     label01:
        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        r12 = virtualinvoke $r6.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.RecoverableWriter createRecoverableWriter()>();

     label02:
        if r1 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r12;

     label05:
        $r9 := @caughtexception;

        r11 = $r9;

        throw $r9;

     label06:
        $r10 := @caughtexception;

     label07:
        if r1 == null goto label12;

        if r11 == null goto label11;

     label08:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r7);

        goto label12;

     label11:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public org.apache.flink.core.fs.FileStatus[] listStatus(org.apache.flink.core.fs.Path) throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.Path r1;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.ClassLoader $r6;
        org.apache.flink.core.fs.FileSystem $r7;
        java.lang.Throwable $r8, $r10, $r11, r12;
        org.apache.flink.core.fs.FileStatus[] r13;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.Path;

        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r6);

        r12 = null;

     label01:
        $r7 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        r13 = virtualinvoke $r7.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.FileStatus[] listStatus(org.apache.flink.core.fs.Path)>(r1);

     label02:
        if r2 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r13;

     label05:
        $r11 := @caughtexception;

        r12 = $r11;

        throw $r11;

     label06:
        $r8 := @caughtexception;

     label07:
        if r2 == null goto label12;

        if r12 == null goto label11;

     label08:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

        goto label12;

     label11:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public boolean exists(org.apache.flink.core.fs.Path) throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.Path r1;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.ClassLoader $r6;
        org.apache.flink.core.fs.FileSystem $r7;
        java.lang.Throwable $r8, $r9, $r10, r12;
        boolean z0;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.Path;

        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r6);

        r12 = null;

     label01:
        $r7 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        z0 = virtualinvoke $r7.<org.apache.flink.core.fs.FileSystem: boolean exists(org.apache.flink.core.fs.Path)>(r1);

     label02:
        if r2 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return z0;

     label05:
        $r9 := @caughtexception;

        r12 = $r9;

        throw $r9;

     label06:
        $r10 := @caughtexception;

     label07:
        if r2 == null goto label12;

        if r12 == null goto label11;

     label08:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

        goto label12;

     label11:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public boolean delete(org.apache.flink.core.fs.Path, boolean) throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.Path r1;
        boolean z0, z1;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.ClassLoader $r6;
        org.apache.flink.core.fs.FileSystem $r7;
        java.lang.Throwable $r8, $r9, $r11, r12;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.Path;

        z0 := @parameter1: boolean;

        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r6);

        r12 = null;

     label01:
        $r7 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        z1 = virtualinvoke $r7.<org.apache.flink.core.fs.FileSystem: boolean delete(org.apache.flink.core.fs.Path,boolean)>(r1, z0);

     label02:
        if r2 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return z1;

     label05:
        $r8 := @caughtexception;

        r12 = $r8;

        throw $r8;

     label06:
        $r11 := @caughtexception;

     label07:
        if r2 == null goto label12;

        if r12 == null goto label11;

     label08:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r9 := @caughtexception;

        virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r9);

        goto label12;

     label11:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public boolean mkdirs(org.apache.flink.core.fs.Path) throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.Path r1;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.ClassLoader $r6;
        org.apache.flink.core.fs.FileSystem $r7;
        java.lang.Throwable $r9, $r10, $r11, r12;
        boolean z0;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.Path;

        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r6);

        r12 = null;

     label01:
        $r7 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        z0 = virtualinvoke $r7.<org.apache.flink.core.fs.FileSystem: boolean mkdirs(org.apache.flink.core.fs.Path)>(r1);

     label02:
        if r2 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return z0;

     label05:
        $r11 := @caughtexception;

        r12 = $r11;

        throw $r11;

     label06:
        $r9 := @caughtexception;

     label07:
        if r2 == null goto label12;

        if r12 == null goto label11;

     label08:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

        goto label12;

     label11:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public org.apache.flink.core.fs.FSDataOutputStream create(org.apache.flink.core.fs.Path, org.apache.flink.core.fs.FileSystem$WriteMode) throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.Path r1;
        org.apache.flink.core.fs.FileSystem$WriteMode r2;
        org.apache.flink.util.TemporaryClassLoaderContext r3;
        java.lang.ClassLoader $r7;
        org.apache.flink.core.fs.FileSystem $r8;
        java.lang.Throwable $r10, $r11, $r12, r13;
        org.apache.flink.core.fs.FSDataOutputStream r14;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.Path;

        r2 := @parameter1: org.apache.flink.core.fs.FileSystem$WriteMode;

        $r7 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r3 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r7);

        r13 = null;

     label01:
        $r8 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        r14 = virtualinvoke $r8.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.FSDataOutputStream create(org.apache.flink.core.fs.Path,org.apache.flink.core.fs.FileSystem$WriteMode)>(r1, r2);

     label02:
        if r3 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r3.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r14;

     label05:
        $r12 := @caughtexception;

        r13 = $r12;

        throw $r12;

     label06:
        $r11 := @caughtexception;

     label07:
        if r3 == null goto label12;

        if r13 == null goto label11;

     label08:
        virtualinvoke r3.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r13.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

        goto label12;

     label11:
        virtualinvoke r3.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public boolean isDistributedFS()
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.util.TemporaryClassLoaderContext r1;
        java.lang.ClassLoader $r5;
        org.apache.flink.core.fs.FileSystem $r6;
        java.lang.Throwable $r7, $r8, $r9, r11;
        boolean z0;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        $r5 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r1 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r5);

        r11 = null;

     label01:
        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        z0 = virtualinvoke $r6.<org.apache.flink.core.fs.FileSystem: boolean isDistributedFS()>();

     label02:
        if r1 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return z0;

     label05:
        $r8 := @caughtexception;

        r11 = $r8;

        throw $r8;

     label06:
        $r7 := @caughtexception;

     label07:
        if r1 == null goto label12;

        if r11 == null goto label11;

     label08:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r9 := @caughtexception;

        virtualinvoke r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r9);

        goto label12;

     label11:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public org.apache.flink.core.fs.FileSystemKind getKind()
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.util.TemporaryClassLoaderContext r1;
        java.lang.ClassLoader $r5;
        org.apache.flink.core.fs.FileSystem $r6;
        java.lang.Throwable $r7, $r8, $r9, r11;
        org.apache.flink.core.fs.FileSystemKind r12;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        $r5 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r1 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r5);

        r11 = null;

     label01:
        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        r12 = virtualinvoke $r6.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.FileSystemKind getKind()>();

     label02:
        if r1 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r12;

     label05:
        $r9 := @caughtexception;

        r11 = $r9;

        throw $r9;

     label06:
        $r7 := @caughtexception;

     label07:
        if r1 == null goto label12;

        if r11 == null goto label11;

     label08:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

        goto label12;

     label11:
        virtualinvoke r1.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public boolean rename(org.apache.flink.core.fs.Path, org.apache.flink.core.fs.Path) throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.Path r1, r2;
        org.apache.flink.util.TemporaryClassLoaderContext r3;
        java.lang.ClassLoader $r7;
        org.apache.flink.core.fs.FileSystem $r8;
        java.lang.Throwable $r9, $r10, $r11, r13;
        boolean z0;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.Path;

        r2 := @parameter1: org.apache.flink.core.fs.Path;

        $r7 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: java.lang.ClassLoader loader>;

        r3 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r7);

        r13 = null;

     label01:
        $r8 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        z0 = virtualinvoke $r8.<org.apache.flink.core.fs.FileSystem: boolean rename(org.apache.flink.core.fs.Path,org.apache.flink.core.fs.Path)>(r1, r2);

     label02:
        if r3 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r3.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return z0;

     label05:
        $r11 := @caughtexception;

        r13 = $r11;

        throw $r11;

     label06:
        $r9 := @caughtexception;

     label07:
        if r3 == null goto label12;

        if r13 == null goto label11;

     label08:
        virtualinvoke r3.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r13.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

        goto label12;

     label11:
        virtualinvoke r3.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public org.apache.flink.core.fs.FileSystem getWrappedDelegate()
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.FileSystem $r1;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        $r1 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem inner>;

        return $r1;
    }

    public volatile java.lang.Object getWrappedDelegate()
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.FileSystem $r1;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        $r1 = virtualinvoke r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: org.apache.flink.core.fs.FileSystem getWrappedDelegate()>();

        return $r1;
    }

    void <init>(org.apache.flink.core.fs.FileSystem, java.lang.ClassLoader, org.apache.flink.core.fs.PluginFileSystemFactory$1)
    {
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem r0;
        org.apache.flink.core.fs.FileSystem r1;
        java.lang.ClassLoader r2;
        org.apache.flink.core.fs.PluginFileSystemFactory$1 r3;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        r1 := @parameter0: org.apache.flink.core.fs.FileSystem;

        r2 := @parameter1: java.lang.ClassLoader;

        r3 := @parameter2: org.apache.flink.core.fs.PluginFileSystemFactory$1;

        specialinvoke r0.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: void <init>(org.apache.flink.core.fs.FileSystem,java.lang.ClassLoader)>(r1, r2);

        return;
    }
}
