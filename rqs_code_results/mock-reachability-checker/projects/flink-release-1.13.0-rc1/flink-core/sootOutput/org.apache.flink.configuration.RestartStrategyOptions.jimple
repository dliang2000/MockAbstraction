public class org.apache.flink.configuration.RestartStrategyOptions extends java.lang.Object
{
    public static final org.apache.flink.configuration.ConfigOption RESTART_STRATEGY;
    public static final org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS;
    public static final org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_FIXED_DELAY_DELAY;
    public static final org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_FAILURE_RATE_MAX_FAILURES_PER_INTERVAL;
    public static final org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_FAILURE_RATE_FAILURE_RATE_INTERVAL;
    public static final org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_FAILURE_RATE_DELAY;
    public static final org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_EXPONENTIAL_DELAY_INITIAL_BACKOFF;
    public static final org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_EXPONENTIAL_DELAY_MAX_BACKOFF;
    public static final org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_EXPONENTIAL_DELAY_BACKOFF_MULTIPLIER;
    public static final org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_EXPONENTIAL_DELAY_RESET_BACKOFF_THRESHOLD;
    public static final org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_EXPONENTIAL_DELAY_JITTER_FACTOR;

    private void <init>()
    {
        org.apache.flink.configuration.RestartStrategyOptions r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.flink.configuration.RestartStrategyOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This class should never be instantiated.");

        throw $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r0, $r36, $r49, $r62, $r74, $r87, $r100, $r113, $r126, $r139, $r152;
        org.apache.flink.configuration.ConfigOption $r1, $r35, $r39, $r42, $r48, $r52, $r55, $r61, $r64, $r67, $r73, $r77, $r80, $r86, $r90, $r93, $r99, $r103, $r106, $r112, $r116, $r119, $r125, $r129, $r132, $r138, $r142, $r145, $r151, $r155, $r158, $r164;
        org.apache.flink.configuration.description.Description$DescriptionBuilder $r2, $r3, $r4, $r5, $r27, $r33, $r40, $r46, $r53, $r59, $r65, $r71, $r78, $r84, $r91, $r97, $r104, $r110, $r117, $r123, $r130, $r136, $r143, $r149, $r156, $r162;
        org.apache.flink.configuration.description.InlineElement[] $r6, $r7, $r12, $r17, $r22, $r28, $r41, $r54, $r66, $r79, $r92, $r105, $r118, $r131, $r144, $r157;
        org.apache.flink.configuration.description.TextElement $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r18, $r19, $r21, $r23, $r24, $r26, $r29, $r30, $r31, $r32, $r44, $r45, $r57, $r58, $r69, $r70, $r82, $r83, $r95, $r96, $r108, $r109, $r121, $r122, $r134, $r135, $r147, $r148, $r160, $r161;
        org.apache.flink.configuration.description.LinkElement $r15, $r20, $r25;
        org.apache.flink.configuration.description.Description $r34, $r47, $r60, $r72, $r85, $r98, $r111, $r124, $r137, $r150, $r163;
        org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder $r37, $r50, $r75, $r88, $r101, $r114, $r127, $r140, $r153;
        java.lang.Integer $r38, $r63;
        java.lang.String $r43, $r56, $r68, $r81, $r94, $r107, $r120, $r133, $r146, $r159;
        java.time.Duration $r51, $r76, $r89, $r102, $r115, $r141;
        java.lang.Double $r128, $r154;

        $r0 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("restart-strategy");

        $r1 = virtualinvoke $r0.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r2 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String)>("Defines the restart strategy to use in case of job failures.");

        $r4 = virtualinvoke $r3.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder linebreak()>();

        $r5 = virtualinvoke $r4.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String)>("Accepted values are:");

        $r6 = newarray (org.apache.flink.configuration.description.InlineElement)[4];

        $r7 = newarray (org.apache.flink.configuration.description.InlineElement)[3];

        $r8 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("none");

        $r7[0] = $r8;

        $r9 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("off");

        $r7[1] = $r9;

        $r10 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("disable");

        $r7[2] = $r10;

        $r11 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("%s, %s, %s: No restart strategy.", $r7);

        $r6[0] = $r11;

        $r12 = newarray (org.apache.flink.configuration.description.InlineElement)[3];

        $r13 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("fixeddelay");

        $r12[0] = $r13;

        $r14 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("fixed-delay");

        $r12[1] = $r14;

        $r15 = staticinvoke <org.apache.flink.configuration.description.LinkElement: org.apache.flink.configuration.description.LinkElement link(java.lang.String,java.lang.String)>("../dev/task_failure_recovery.html#fixed-delay-restart-strategy", "here");

        $r12[2] = $r15;

        $r16 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("%s, %s: Fixed delay restart strategy. More details can be found %s.", $r12);

        $r6[1] = $r16;

        $r17 = newarray (org.apache.flink.configuration.description.InlineElement)[3];

        $r18 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("failurerate");

        $r17[0] = $r18;

        $r19 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("failure-rate");

        $r17[1] = $r19;

        $r20 = staticinvoke <org.apache.flink.configuration.description.LinkElement: org.apache.flink.configuration.description.LinkElement link(java.lang.String,java.lang.String)>("../dev/task_failure_recovery.html#failure-rate-restart-strategy", "here");

        $r17[2] = $r20;

        $r21 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("%s, %s: Failure rate restart strategy. More details can be found %s.", $r17);

        $r6[2] = $r21;

        $r22 = newarray (org.apache.flink.configuration.description.InlineElement)[3];

        $r23 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("exponentialdelay");

        $r22[0] = $r23;

        $r24 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("exponential-delay");

        $r22[1] = $r24;

        $r25 = staticinvoke <org.apache.flink.configuration.description.LinkElement: org.apache.flink.configuration.description.LinkElement link(java.lang.String,java.lang.String)>("../dev/task_failure_recovery.html#exponential-delay-restart-strategy", "here");

        $r22[2] = $r25;

        $r26 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("%s, %s: Exponential delay restart strategy. More details can be found %s.", $r22);

        $r6[3] = $r26;

        $r27 = virtualinvoke $r5.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder list(org.apache.flink.configuration.description.InlineElement[])>($r6);

        $r28 = newarray (org.apache.flink.configuration.description.InlineElement)[4];

        $r29 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("none");

        $r28[0] = $r29;

        $r30 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("fixed-delay");

        $r28[1] = $r30;

        $r31 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("Integer.MAX_VALUE");

        $r28[2] = $r31;

        $r32 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("1 s");

        $r28[3] = $r32;

        $r33 = virtualinvoke $r27.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("If checkpointing is disabled, the default value is %s. If checkpointing is enabled, the default value is %s with %s restart attempts and \'%s\' delay.", $r28);

        $r34 = virtualinvoke $r33.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r35 = virtualinvoke $r1.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r34);

        <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY> = $r35;

        $r36 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("restart-strategy.fixed-delay.attempts");

        $r37 = virtualinvoke $r36.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder intType()>();

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r39 = virtualinvoke $r37.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r38);

        $r40 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r41 = newarray (org.apache.flink.configuration.description.InlineElement)[2];

        $r42 = <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY>;

        $r43 = virtualinvoke $r42.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r44 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>($r43);

        $r41[0] = $r44;

        $r45 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("fixed-delay");

        $r41[1] = $r45;

        $r46 = virtualinvoke $r40.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("The number of times that Flink retries the execution before the job is declared as failed if %s has been set to %s.", $r41);

        $r47 = virtualinvoke $r46.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r48 = virtualinvoke $r39.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r47);

        <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS> = $r48;

        $r49 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("restart-strategy.fixed-delay.delay");

        $r50 = virtualinvoke $r49.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder durationType()>();

        $r51 = staticinvoke <java.time.Duration: java.time.Duration ofSeconds(long)>(1L);

        $r52 = virtualinvoke $r50.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r51);

        $r53 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r54 = newarray (org.apache.flink.configuration.description.InlineElement)[2];

        $r55 = <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY>;

        $r56 = virtualinvoke $r55.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r57 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>($r56);

        $r54[0] = $r57;

        $r58 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("fixed-delay");

        $r54[1] = $r58;

        $r59 = virtualinvoke $r53.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("Delay between two consecutive restart attempts if %s has been set to %s. Delaying the retries can be helpful when the program interacts with external systems where for example connections or pending transactions should reach a timeout before re-execution is attempted. It can be specified using notation: \"1 min\", \"20 s\"", $r54);

        $r60 = virtualinvoke $r59.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r61 = virtualinvoke $r52.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r60);

        <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_FIXED_DELAY_DELAY> = $r61;

        $r62 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("restart-strategy.failure-rate.max-failures-per-interval");

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r64 = virtualinvoke $r62.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r63);

        $r65 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r66 = newarray (org.apache.flink.configuration.description.InlineElement)[2];

        $r67 = <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY>;

        $r68 = virtualinvoke $r67.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r69 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>($r68);

        $r66[0] = $r69;

        $r70 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("failure-rate");

        $r66[1] = $r70;

        $r71 = virtualinvoke $r65.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("Maximum number of restarts in given time interval before failing a job if %s has been set to %s.", $r66);

        $r72 = virtualinvoke $r71.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r73 = virtualinvoke $r64.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r72);

        <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_FAILURE_RATE_MAX_FAILURES_PER_INTERVAL> = $r73;

        $r74 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("restart-strategy.failure-rate.failure-rate-interval");

        $r75 = virtualinvoke $r74.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder durationType()>();

        $r76 = staticinvoke <java.time.Duration: java.time.Duration ofMinutes(long)>(1L);

        $r77 = virtualinvoke $r75.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r76);

        $r78 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r79 = newarray (org.apache.flink.configuration.description.InlineElement)[2];

        $r80 = <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY>;

        $r81 = virtualinvoke $r80.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r82 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>($r81);

        $r79[0] = $r82;

        $r83 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("failure-rate");

        $r79[1] = $r83;

        $r84 = virtualinvoke $r78.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("Time interval for measuring failure rate if %s has been set to %s. It can be specified using notation: \"1 min\", \"20 s\"", $r79);

        $r85 = virtualinvoke $r84.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r86 = virtualinvoke $r77.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r85);

        <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_FAILURE_RATE_FAILURE_RATE_INTERVAL> = $r86;

        $r87 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("restart-strategy.failure-rate.delay");

        $r88 = virtualinvoke $r87.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder durationType()>();

        $r89 = staticinvoke <java.time.Duration: java.time.Duration ofSeconds(long)>(1L);

        $r90 = virtualinvoke $r88.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r89);

        $r91 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r92 = newarray (org.apache.flink.configuration.description.InlineElement)[2];

        $r93 = <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY>;

        $r94 = virtualinvoke $r93.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r95 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>($r94);

        $r92[0] = $r95;

        $r96 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("failure-rate");

        $r92[1] = $r96;

        $r97 = virtualinvoke $r91.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("Delay between two consecutive restart attempts if %s has been set to %s. It can be specified using notation: \"1 min\", \"20 s\"", $r92);

        $r98 = virtualinvoke $r97.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r99 = virtualinvoke $r90.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r98);

        <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_FAILURE_RATE_DELAY> = $r99;

        $r100 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("restart-strategy.exponential-delay.initial-backoff");

        $r101 = virtualinvoke $r100.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder durationType()>();

        $r102 = staticinvoke <java.time.Duration: java.time.Duration ofSeconds(long)>(1L);

        $r103 = virtualinvoke $r101.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r102);

        $r104 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r105 = newarray (org.apache.flink.configuration.description.InlineElement)[2];

        $r106 = <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY>;

        $r107 = virtualinvoke $r106.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r108 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>($r107);

        $r105[0] = $r108;

        $r109 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("exponential-delay");

        $r105[1] = $r109;

        $r110 = virtualinvoke $r104.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("Starting duration between restarts if %s has been set to %s. It can be specified using notation: \"1 min\", \"20 s\"", $r105);

        $r111 = virtualinvoke $r110.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r112 = virtualinvoke $r103.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r111);

        <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_EXPONENTIAL_DELAY_INITIAL_BACKOFF> = $r112;

        $r113 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("restart-strategy.exponential-delay.max-backoff");

        $r114 = virtualinvoke $r113.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder durationType()>();

        $r115 = staticinvoke <java.time.Duration: java.time.Duration ofMinutes(long)>(5L);

        $r116 = virtualinvoke $r114.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r115);

        $r117 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r118 = newarray (org.apache.flink.configuration.description.InlineElement)[2];

        $r119 = <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY>;

        $r120 = virtualinvoke $r119.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r121 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>($r120);

        $r118[0] = $r121;

        $r122 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("exponential-delay");

        $r118[1] = $r122;

        $r123 = virtualinvoke $r117.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("The highest possible duration between restarts if %s has been set to %s. It can be specified using notation: \"1 min\", \"20 s\"", $r118);

        $r124 = virtualinvoke $r123.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r125 = virtualinvoke $r116.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r124);

        <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_EXPONENTIAL_DELAY_MAX_BACKOFF> = $r125;

        $r126 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("restart-strategy.exponential-delay.backoff-multiplier");

        $r127 = virtualinvoke $r126.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder doubleType()>();

        $r128 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(2.0);

        $r129 = virtualinvoke $r127.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r128);

        $r130 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r131 = newarray (org.apache.flink.configuration.description.InlineElement)[2];

        $r132 = <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY>;

        $r133 = virtualinvoke $r132.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r134 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>($r133);

        $r131[0] = $r134;

        $r135 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("exponential-delay");

        $r131[1] = $r135;

        $r136 = virtualinvoke $r130.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("Backoff value is multiplied by this value after every failure,until max backoff is reached if %s has been set to %s.", $r131);

        $r137 = virtualinvoke $r136.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r138 = virtualinvoke $r129.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r137);

        <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_EXPONENTIAL_DELAY_BACKOFF_MULTIPLIER> = $r138;

        $r139 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("restart-strategy.exponential-delay.reset-backoff-threshold");

        $r140 = virtualinvoke $r139.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder durationType()>();

        $r141 = staticinvoke <java.time.Duration: java.time.Duration ofHours(long)>(1L);

        $r142 = virtualinvoke $r140.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r141);

        $r143 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r144 = newarray (org.apache.flink.configuration.description.InlineElement)[2];

        $r145 = <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY>;

        $r146 = virtualinvoke $r145.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r147 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>($r146);

        $r144[0] = $r147;

        $r148 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("exponential-delay");

        $r144[1] = $r148;

        $r149 = virtualinvoke $r143.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("Threshold when the backoff is reset to its initial value if %s has been set to %s. It specifies how long the job must be running without failure to reset the exponentially increasing backoff to its initial value. It can be specified using notation: \"1 min\", \"20 s\"", $r144);

        $r150 = virtualinvoke $r149.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r151 = virtualinvoke $r142.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r150);

        <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_EXPONENTIAL_DELAY_RESET_BACKOFF_THRESHOLD> = $r151;

        $r152 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("restart-strategy.exponential-delay.jitter-factor");

        $r153 = virtualinvoke $r152.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder doubleType()>();

        $r154 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.1);

        $r155 = virtualinvoke $r153.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r154);

        $r156 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r157 = newarray (org.apache.flink.configuration.description.InlineElement)[2];

        $r158 = <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY>;

        $r159 = virtualinvoke $r158.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r160 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>($r159);

        $r157[0] = $r160;

        $r161 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement code(java.lang.String)>("exponential-delay");

        $r157[1] = $r161;

        $r162 = virtualinvoke $r156.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String,org.apache.flink.configuration.description.InlineElement[])>("Jitter specified as a portion of the backoff if %s has been set to %s. It represents how large random value will be added or subtracted to the backoff. Useful when you want to avoid restarting multiple jobs at the same time.", $r157);

        $r163 = virtualinvoke $r162.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r164 = virtualinvoke $r155.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r163);

        <org.apache.flink.configuration.RestartStrategyOptions: org.apache.flink.configuration.ConfigOption RESTART_STRATEGY_EXPONENTIAL_DELAY_JITTER_FACTOR> = $r164;

        return;
    }
}
