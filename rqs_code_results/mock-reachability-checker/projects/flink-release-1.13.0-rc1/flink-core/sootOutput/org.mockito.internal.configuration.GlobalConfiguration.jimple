public class org.mockito.internal.configuration.GlobalConfiguration extends java.lang.Object implements org.mockito.configuration.IMockitoConfiguration, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.lang.ThreadLocal GLOBAL_CONFIGURATION;

    org.mockito.configuration.IMockitoConfiguration getIt()
    {
        org.mockito.internal.configuration.GlobalConfiguration r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        org.mockito.configuration.IMockitoConfiguration $r3;

        r0 := @this: org.mockito.internal.configuration.GlobalConfiguration;

        $r1 = <org.mockito.internal.configuration.GlobalConfiguration: java.lang.ThreadLocal GLOBAL_CONFIGURATION>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (org.mockito.configuration.IMockitoConfiguration) $r2;

        return $r3;
    }

    public void <init>()
    {
        org.mockito.internal.configuration.GlobalConfiguration r0;
        java.lang.ThreadLocal $r1, $r3;
        java.lang.Object $r2;
        org.mockito.configuration.IMockitoConfiguration $r4;

        r0 := @this: org.mockito.internal.configuration.GlobalConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.mockito.internal.configuration.GlobalConfiguration: java.lang.ThreadLocal GLOBAL_CONFIGURATION>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        if $r2 != null goto label1;

        $r3 = <org.mockito.internal.configuration.GlobalConfiguration: java.lang.ThreadLocal GLOBAL_CONFIGURATION>;

        $r4 = specialinvoke r0.<org.mockito.internal.configuration.GlobalConfiguration: org.mockito.configuration.IMockitoConfiguration createConfig()>();

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>($r4);

     label1:
        return;
    }

    private org.mockito.configuration.IMockitoConfiguration createConfig()
    {
        org.mockito.internal.configuration.GlobalConfiguration r0;
        org.mockito.configuration.IMockitoConfiguration r2;
        org.mockito.configuration.DefaultMockitoConfiguration $r3;
        org.mockito.internal.configuration.ClassPathLoader $r4;

        r0 := @this: org.mockito.internal.configuration.GlobalConfiguration;

        $r3 = new org.mockito.configuration.DefaultMockitoConfiguration;

        specialinvoke $r3.<org.mockito.configuration.DefaultMockitoConfiguration: void <init>()>();

        $r4 = new org.mockito.internal.configuration.ClassPathLoader;

        specialinvoke $r4.<org.mockito.internal.configuration.ClassPathLoader: void <init>()>();

        r2 = virtualinvoke $r4.<org.mockito.internal.configuration.ClassPathLoader: org.mockito.configuration.IMockitoConfiguration loadConfiguration()>();

        if r2 == null goto label1;

        return r2;

     label1:
        return $r3;
    }

    public static void validate()
    {
        org.mockito.internal.configuration.GlobalConfiguration $r0;

        $r0 = new org.mockito.internal.configuration.GlobalConfiguration;

        specialinvoke $r0.<org.mockito.internal.configuration.GlobalConfiguration: void <init>()>();

        return;
    }

    public org.mockito.configuration.AnnotationEngine getAnnotationEngine()
    {
        org.mockito.internal.configuration.GlobalConfiguration r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        org.mockito.configuration.IMockitoConfiguration $r3;
        org.mockito.configuration.AnnotationEngine $r4;

        r0 := @this: org.mockito.internal.configuration.GlobalConfiguration;

        $r1 = <org.mockito.internal.configuration.GlobalConfiguration: java.lang.ThreadLocal GLOBAL_CONFIGURATION>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (org.mockito.configuration.IMockitoConfiguration) $r2;

        $r4 = interfaceinvoke $r3.<org.mockito.configuration.IMockitoConfiguration: org.mockito.configuration.AnnotationEngine getAnnotationEngine()>();

        return $r4;
    }

    public org.mockito.plugins.AnnotationEngine tryGetPluginAnnotationEngine()
    {
        org.mockito.internal.configuration.GlobalConfiguration r0;
        org.mockito.configuration.IMockitoConfiguration r1;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3;
        java.lang.Class $r4;
        org.mockito.configuration.AnnotationEngine $r5;
        org.mockito.plugins.AnnotationEngine $r6;

        r0 := @this: org.mockito.internal.configuration.GlobalConfiguration;

        $r2 = <org.mockito.internal.configuration.GlobalConfiguration: java.lang.ThreadLocal GLOBAL_CONFIGURATION>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        r1 = (org.mockito.configuration.IMockitoConfiguration) $r3;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r4 != class "Lorg/mockito/configuration/DefaultMockitoConfiguration;" goto label1;

        $r6 = staticinvoke <org.mockito.internal.configuration.plugins.Plugins: org.mockito.plugins.AnnotationEngine getAnnotationEngine()>();

        return $r6;

     label1:
        $r5 = interfaceinvoke r1.<org.mockito.configuration.IMockitoConfiguration: org.mockito.configuration.AnnotationEngine getAnnotationEngine()>();

        return $r5;
    }

    public boolean cleansStackTrace()
    {
        org.mockito.internal.configuration.GlobalConfiguration r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        org.mockito.configuration.IMockitoConfiguration $r3;
        boolean $z0;

        r0 := @this: org.mockito.internal.configuration.GlobalConfiguration;

        $r1 = <org.mockito.internal.configuration.GlobalConfiguration: java.lang.ThreadLocal GLOBAL_CONFIGURATION>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (org.mockito.configuration.IMockitoConfiguration) $r2;

        $z0 = interfaceinvoke $r3.<org.mockito.configuration.IMockitoConfiguration: boolean cleansStackTrace()>();

        return $z0;
    }

    public boolean enableClassCache()
    {
        org.mockito.internal.configuration.GlobalConfiguration r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        org.mockito.configuration.IMockitoConfiguration $r3;
        boolean $z0;

        r0 := @this: org.mockito.internal.configuration.GlobalConfiguration;

        $r1 = <org.mockito.internal.configuration.GlobalConfiguration: java.lang.ThreadLocal GLOBAL_CONFIGURATION>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (org.mockito.configuration.IMockitoConfiguration) $r2;

        $z0 = interfaceinvoke $r3.<org.mockito.configuration.IMockitoConfiguration: boolean enableClassCache()>();

        return $z0;
    }

    public org.mockito.stubbing.Answer getDefaultAnswer()
    {
        org.mockito.internal.configuration.GlobalConfiguration r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        org.mockito.configuration.IMockitoConfiguration $r3;
        org.mockito.stubbing.Answer $r4;

        r0 := @this: org.mockito.internal.configuration.GlobalConfiguration;

        $r1 = <org.mockito.internal.configuration.GlobalConfiguration: java.lang.ThreadLocal GLOBAL_CONFIGURATION>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (org.mockito.configuration.IMockitoConfiguration) $r2;

        $r4 = interfaceinvoke $r3.<org.mockito.configuration.IMockitoConfiguration: org.mockito.stubbing.Answer getDefaultAnswer()>();

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        <org.mockito.internal.configuration.GlobalConfiguration: long serialVersionUID> = -2860353062105505938L;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <org.mockito.internal.configuration.GlobalConfiguration: java.lang.ThreadLocal GLOBAL_CONFIGURATION> = $r0;

        return;
    }
}
