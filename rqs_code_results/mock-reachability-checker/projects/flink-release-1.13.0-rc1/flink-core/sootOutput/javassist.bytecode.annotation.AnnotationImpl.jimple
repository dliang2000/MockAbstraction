public class javassist.bytecode.'annotation'.AnnotationImpl extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
    private static final java.lang.String JDK_ANNOTATION_CLASS_NAME;
    private static java.lang.reflect.Method JDK_ANNOTATION_TYPE_METHOD;
    private javassist.bytecode.'annotation'.Annotation 'annotation';
    private javassist.ClassPool pool;
    private java.lang.ClassLoader classLoader;
    private transient java.lang.Class annotationType;
    private transient int cachedHashCode;

    public static java.lang.Object make(java.lang.ClassLoader, java.lang.Class, javassist.ClassPool, javassist.bytecode.'annotation'.Annotation) throws java.lang.IllegalArgumentException
    {
        java.lang.ClassLoader r0;
        java.lang.Class r1;
        javassist.ClassPool r2;
        javassist.bytecode.'annotation'.Annotation r3;
        javassist.bytecode.'annotation'.AnnotationImpl $r5;
        java.lang.Class[] $r6;
        java.lang.Object $r7;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: javassist.ClassPool;

        r3 := @parameter3: javassist.bytecode.'annotation'.Annotation;

        $r5 = new javassist.bytecode.'annotation'.AnnotationImpl;

        specialinvoke $r5.<javassist.bytecode.'annotation'.AnnotationImpl: void <init>(javassist.bytecode.'annotation'.Annotation,javassist.ClassPool,java.lang.ClassLoader)>(r3, r2, r0);

        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = r1;

        $r7 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>(r0, $r6, $r5);

        return $r7;
    }

    private void <init>(javassist.bytecode.'annotation'.Annotation, javassist.ClassPool, java.lang.ClassLoader)
    {
        javassist.bytecode.'annotation'.AnnotationImpl r0;
        javassist.bytecode.'annotation'.Annotation r1;
        javassist.ClassPool r2;
        java.lang.ClassLoader r3;

        r0 := @this: javassist.bytecode.'annotation'.AnnotationImpl;

        r1 := @parameter0: javassist.bytecode.'annotation'.Annotation;

        r2 := @parameter1: javassist.ClassPool;

        r3 := @parameter2: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.bytecode.'annotation'.AnnotationImpl: int cachedHashCode> = -2147483648;

        r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'> = r1;

        r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.ClassPool pool> = r2;

        r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.ClassLoader classLoader> = r3;

        return;
    }

    public java.lang.String getTypeName()
    {
        javassist.bytecode.'annotation'.AnnotationImpl r0;
        javassist.bytecode.'annotation'.Annotation $r1;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.'annotation'.AnnotationImpl;

        $r1 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.'annotation'.Annotation: java.lang.String getTypeName()>();

        return $r2;
    }

    private java.lang.Class getAnnotationType()
    {
        javassist.bytecode.'annotation'.AnnotationImpl r0;
        java.lang.String r1, $r14;
        java.lang.Class $r4, $r5, $r8;
        javassist.bytecode.'annotation'.Annotation $r6;
        java.lang.ClassLoader $r7;
        java.lang.ClassNotFoundException $r9;
        java.lang.NoClassDefFoundError $r10;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.StackTraceElement[] $r15;

        r0 := @this: javassist.bytecode.'annotation'.AnnotationImpl;

        $r4 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.Class annotationType>;

        if $r4 != null goto label4;

        $r6 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        r1 = virtualinvoke $r6.<javassist.bytecode.'annotation'.Annotation: java.lang.String getTypeName()>();

     label1:
        $r7 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.ClassLoader classLoader>;

        $r8 = virtualinvoke $r7.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

        r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.Class annotationType> = $r8;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.NoClassDefFoundError;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading annotation class: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r14);

        $r15 = virtualinvoke $r9.<java.lang.ClassNotFoundException: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r10.<java.lang.NoClassDefFoundError: void setStackTrace(java.lang.StackTraceElement[])>($r15);

        throw $r10;

     label4:
        $r5 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.Class annotationType>;

        return $r5;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public javassist.bytecode.'annotation'.Annotation getAnnotation()
    {
        javassist.bytecode.'annotation'.AnnotationImpl r0;
        javassist.bytecode.'annotation'.Annotation $r1;

        r0 := @this: javassist.bytecode.'annotation'.AnnotationImpl;

        $r1 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        return $r1;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        javassist.bytecode.'annotation'.AnnotationImpl r0;
        java.lang.Object r1, $r9, $r10, r20;
        java.lang.reflect.Method r2;
        java.lang.Object[] r3;
        java.lang.String r4, $r6, $r13, $r14, $r15, $r18;
        java.lang.Class $r5, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        javassist.ClassPool $r7;
        java.lang.ClassLoader $r8;
        java.lang.Class[] $r11;
        int $i0, $i1;
        java.lang.Integer $r16;
        javassist.bytecode.'annotation'.Annotation $r17, $r21;
        java.lang.Boolean $r19;
        javassist.bytecode.'annotation'.MemberValue r22;

        r0 := @this: javassist.bytecode.'annotation'.AnnotationImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object[];

        r4 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $r5 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        if class "Ljava/lang/Object;" != $r5 goto label3;

        $r13 = "equals";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label1;

        r20 = r3[0];

        $z4 = specialinvoke r0.<javassist.bytecode.'annotation'.AnnotationImpl: boolean checkEquals(java.lang.Object)>(r20);

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        return $r19;

     label1:
        $r14 = "toString";

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label2;

        $r17 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        $r18 = virtualinvoke $r17.<javassist.bytecode.'annotation'.Annotation: java.lang.String toString()>();

        return $r18;

     label2:
        $r15 = "hashCode";

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label4;

        $i1 = virtualinvoke r0.<javassist.bytecode.'annotation'.AnnotationImpl: int hashCode()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r16;

     label3:
        $r6 = "annotationType";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label4;

        $r11 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r11;

        if $i0 != 0 goto label4;

        $r12 = specialinvoke r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.Class getAnnotationType()>();

        return $r12;

     label4:
        $r21 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        r22 = virtualinvoke $r21.<javassist.bytecode.'annotation'.Annotation: javassist.bytecode.'annotation'.MemberValue getMemberValue(java.lang.String)>(r4);

        if r22 != null goto label5;

        $r10 = specialinvoke r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.Object getDefault(java.lang.String,java.lang.reflect.Method)>(r4, r2);

        return $r10;

     label5:
        $r8 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.ClassLoader classLoader>;

        $r7 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.ClassPool pool>;

        $r9 = virtualinvoke r22.<javassist.bytecode.'annotation'.MemberValue: java.lang.Object getValue(java.lang.ClassLoader,javassist.ClassPool,java.lang.reflect.Method)>($r8, $r7, r2);

        return $r9;
    }

    private java.lang.Object getDefault(java.lang.String, java.lang.reflect.Method) throws java.lang.ClassNotFoundException, java.lang.RuntimeException
    {
        javassist.bytecode.'annotation'.AnnotationImpl r0;
        java.lang.String r1, r3, $r17, $r28;
        java.lang.reflect.Method r2;
        javassist.bytecode.ClassFile r4;
        javassist.bytecode.MethodInfo r5;
        javassist.bytecode.AnnotationDefaultAttribute r6;
        javassist.bytecode.'annotation'.MemberValue r7;
        javassist.bytecode.'annotation'.Annotation $r8;
        javassist.ClassPool $r9, $r18, $r20;
        java.lang.RuntimeException $r10, $r24;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r25, $r26, $r27;
        javassist.bytecode.AttributeInfo $r19;
        java.lang.ClassLoader $r21;
        java.lang.Object $r22;
        javassist.NotFoundException $r23;
        javassist.CtClass r29;

        r0 := @this: javassist.bytecode.'annotation'.AnnotationImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.reflect.Method;

        $r8 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        r3 = virtualinvoke $r8.<javassist.bytecode.'annotation'.Annotation: java.lang.String getTypeName()>();

        $r9 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.ClassPool pool>;

        if $r9 == null goto label5;

     label1:
        $r18 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.ClassPool pool>;

        r29 = virtualinvoke $r18.<javassist.ClassPool: javassist.CtClass get(java.lang.String)>(r3);

        r4 = virtualinvoke r29.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile2()>();

        r5 = virtualinvoke r4.<javassist.bytecode.ClassFile: javassist.bytecode.MethodInfo getMethod(java.lang.String)>(r1);

        if r5 == null goto label3;

        $r19 = virtualinvoke r5.<javassist.bytecode.MethodInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("AnnotationDefault");

        r6 = (javassist.bytecode.AnnotationDefaultAttribute) $r19;

        if r6 == null goto label3;

        r7 = virtualinvoke r6.<javassist.bytecode.AnnotationDefaultAttribute: javassist.bytecode.'annotation'.MemberValue getDefaultValue()>();

        $r21 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.ClassLoader classLoader>;

        $r20 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.ClassPool pool>;

        $r22 = virtualinvoke r7.<javassist.bytecode.'annotation'.MemberValue: java.lang.Object getValue(java.lang.ClassLoader,javassist.ClassPool,java.lang.reflect.Method)>($r21, $r20, r2);

     label2:
        return $r22;

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        $r24 = new java.lang.RuntimeException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot find a class file: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r28);

        throw $r24;

     label5:
        $r10 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no default value: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("()");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);

        throw $r10;

        catch javassist.NotFoundException from label1 to label2 with label4;
    }

    public int hashCode()
    {
        javassist.bytecode.'annotation'.AnnotationImpl r0;
        java.lang.reflect.Method[] r1;
        java.lang.String r2, $r20, $r22;
        javassist.bytecode.'annotation'.MemberValue r3;
        int $i0, $i1, $i2, i3, i4, i5, $i6, $i7, $i8;
        java.lang.Class $r5, $r8;
        java.lang.reflect.Method $r6, $r9, $r10;
        javassist.bytecode.'annotation'.Annotation $r7, $r19;
        boolean $z0;
        javassist.ClassPool $r11;
        java.lang.ClassLoader $r12;
        java.lang.Exception $r13;
        java.lang.RuntimeException $r14, $r23;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r21;
        java.lang.Object r24;

        r0 := @this: javassist.bytecode.'annotation'.AnnotationImpl;

        $i0 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: int cachedHashCode>;

        if $i0 != -2147483648 goto label11;

        i3 = 0;

        specialinvoke r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.Class getAnnotationType()>();

        $r5 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.Class annotationType>;

        r1 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i4 = 0;

     label01:
        $i2 = lengthof r1;

        if i4 >= $i2 goto label10;

        $r6 = r1[i4];

        r2 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.String getName()>();

        i5 = 0;

        $r7 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        r3 = virtualinvoke $r7.<javassist.bytecode.'annotation'.Annotation: javassist.bytecode.'annotation'.MemberValue getMemberValue(java.lang.String)>(r2);

        r24 = null;

     label02:
        if r3 == null goto label03;

        $r12 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.ClassLoader classLoader>;

        $r11 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.ClassPool pool>;

        $r10 = r1[i4];

        r24 = virtualinvoke r3.<javassist.bytecode.'annotation'.MemberValue: java.lang.Object getValue(java.lang.ClassLoader,javassist.ClassPool,java.lang.reflect.Method)>($r12, $r11, $r10);

     label03:
        if r24 != null goto label04;

        $r9 = r1[i4];

        r24 = specialinvoke r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.Object getDefault(java.lang.String,java.lang.reflect.Method)>(r2, $r9);

     label04:
        goto label07;

     label05:
        $r23 := @caughtexception;

        throw $r23;

     label06:
        $r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error retrieving value ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for annotation ");

        $r19 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        $r20 = virtualinvoke $r19.<javassist.bytecode.'annotation'.Annotation: java.lang.String getTypeName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r22, $r13);

        throw $r14;

     label07:
        if r24 == null goto label09;

        $r8 = virtualinvoke r24.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label08;

        i5 = staticinvoke <javassist.bytecode.'annotation'.AnnotationImpl: int arrayHashCode(java.lang.Object)>(r24);

        goto label09;

     label08:
        i5 = virtualinvoke r24.<java.lang.Object: int hashCode()>();

     label09:
        $i6 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        $i7 = 127 * $i6;

        $i8 = $i7 ^ i5;

        i3 = i3 + $i8;

        i4 = i4 + 1;

        goto label01;

     label10:
        r0.<javassist.bytecode.'annotation'.AnnotationImpl: int cachedHashCode> = i3;

     label11:
        $i1 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: int cachedHashCode>;

        return $i1;

        catch java.lang.RuntimeException from label02 to label04 with label05;
        catch java.lang.Exception from label02 to label04 with label06;
    }

    private boolean checkEquals(java.lang.Object) throws java.lang.Exception
    {
        javassist.bytecode.'annotation'.AnnotationImpl r0, r31;
        java.lang.Object r1, $r6, r34, r35;
        java.lang.String r2, $r27, $r29;
        javassist.bytecode.'annotation'.MemberValue r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object[] $r4, $r11;
        java.lang.reflect.Method $r5, $r9, $r12, $r13, $r14;
        java.lang.Class $r7, $r8, r32;
        int $i0, i1;
        javassist.bytecode.'annotation'.Annotation $r10, $r17, $r18, $r26;
        javassist.ClassPool $r15;
        java.lang.ClassLoader $r16;
        java.lang.RuntimeException $r19, $r21;
        java.lang.Exception $r20;
        java.lang.StringBuilder $r22, $r23, $r24, $r25, $r28;
        java.lang.reflect.InvocationHandler r30;
        java.lang.reflect.Method[] r33;

        r0 := @this: javassist.bytecode.'annotation'.AnnotationImpl;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        return 0;

     label01:
        $z0 = r1 instanceof java.lang.reflect.Proxy;

        if $z0 == 0 goto label02;

        r30 = staticinvoke <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>(r1);

        $z3 = r30 instanceof javassist.bytecode.'annotation'.AnnotationImpl;

        if $z3 == 0 goto label02;

        r31 = (javassist.bytecode.'annotation'.AnnotationImpl) r30;

        $r18 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        $r17 = r31.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        $z4 = virtualinvoke $r18.<javassist.bytecode.'annotation'.Annotation: boolean equals(java.lang.Object)>($r17);

        return $z4;

     label02:
        $r5 = <javassist.bytecode.'annotation'.AnnotationImpl: java.lang.reflect.Method JDK_ANNOTATION_TYPE_METHOD>;

        $r4 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r4);

        r32 = (java.lang.Class) $r6;

        $r7 = specialinvoke r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.Class getAnnotationType()>();

        $z1 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(r32);

        if $z1 != 0 goto label03;

        return 0;

     label03:
        $r8 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.Class annotationType>;

        r33 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i1 = 0;

     label04:
        $i0 = lengthof r33;

        if i1 >= $i0 goto label14;

        $r9 = r33[i1];

        r2 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.String getName()>();

        $r10 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        r3 = virtualinvoke $r10.<javassist.bytecode.'annotation'.Annotation: javassist.bytecode.'annotation'.MemberValue getMemberValue(java.lang.String)>(r2);

        r34 = null;

     label05:
        if r3 == null goto label06;

        $r16 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.ClassLoader classLoader>;

        $r15 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.ClassPool pool>;

        $r14 = r33[i1];

        r34 = virtualinvoke r3.<javassist.bytecode.'annotation'.MemberValue: java.lang.Object getValue(java.lang.ClassLoader,javassist.ClassPool,java.lang.reflect.Method)>($r16, $r15, $r14);

     label06:
        if r34 != null goto label07;

        $r13 = r33[i1];

        r34 = specialinvoke r0.<javassist.bytecode.'annotation'.AnnotationImpl: java.lang.Object getDefault(java.lang.String,java.lang.reflect.Method)>(r2, $r13);

     label07:
        $r12 = r33[i1];

        $r11 = newarray (java.lang.Object)[0];

        r35 = virtualinvoke $r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r11);

     label08:
        goto label11;

     label09:
        $r19 := @caughtexception;

        throw $r19;

     label10:
        $r20 := @caughtexception;

        $r21 = new java.lang.RuntimeException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error retrieving value ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for annotation ");

        $r26 = r0.<javassist.bytecode.'annotation'.AnnotationImpl: javassist.bytecode.'annotation'.Annotation 'annotation'>;

        $r27 = virtualinvoke $r26.<javassist.bytecode.'annotation'.Annotation: java.lang.String getTypeName()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r20);

        throw $r21;

     label11:
        if r34 != null goto label12;

        if r35 == null goto label12;

        return 0;

     label12:
        if r34 == null goto label13;

        $z2 = virtualinvoke r34.<java.lang.Object: boolean equals(java.lang.Object)>(r35);

        if $z2 != 0 goto label13;

        return 0;

     label13:
        i1 = i1 + 1;

        goto label04;

     label14:
        return 1;

        catch java.lang.RuntimeException from label05 to label08 with label09;
        catch java.lang.Exception from label05 to label08 with label10;
    }

    private static int arrayHashCode(java.lang.Object)
    {
        java.lang.Object r0, $r2, $r3;
        java.lang.Object[] r1;
        int $i0, $i1, i2, i3, i4;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        i2 = 1;

        r1 = (java.lang.Object[]) r0;

        i3 = 0;

     label2:
        $i0 = lengthof r1;

        if i3 >= $i0 goto label4;

        i4 = 0;

        $r2 = r1[i3];

        if $r2 == null goto label3;

        $r3 = r1[i3];

        i4 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label3:
        $i1 = 31 * i2;

        i2 = $i1 + i4;

        i3 = i3 + 1;

        goto label2;

     label4:
        return i2;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        java.lang.reflect.Method $r1;
        java.lang.Exception $r2;
        java.lang.Class r3;

        <javassist.bytecode.'annotation'.AnnotationImpl: java.lang.String JDK_ANNOTATION_CLASS_NAME> = "java.lang.annotation.Annotation";

        <javassist.bytecode.'annotation'.AnnotationImpl: java.lang.reflect.Method JDK_ANNOTATION_TYPE_METHOD> = null;

     label1:
        r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.annotation.Annotation");

        $r0 = (java.lang.Class[]) null;

        $r1 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("annotationType", $r0);

        <javassist.bytecode.'annotation'.AnnotationImpl: java.lang.reflect.Method JDK_ANNOTATION_TYPE_METHOD> = $r1;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
