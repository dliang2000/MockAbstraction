abstract class javassist.CtField$CodeInitializer0 extends javassist.CtField$Initializer
{

    void <init>()
    {
        javassist.CtField$CodeInitializer0 r0;

        r0 := @this: javassist.CtField$CodeInitializer0;

        specialinvoke r0.<javassist.CtField$Initializer: void <init>()>();

        return;
    }

    abstract void compileExpr(javassist.compiler.Javac) throws javassist.compiler.CompileError;

    int compile(javassist.CtClass, java.lang.String, javassist.bytecode.Bytecode, javassist.CtClass[], javassist.compiler.Javac) throws javassist.CannotCompileException
    {
        javassist.CtField$CodeInitializer0 r0;
        javassist.CtClass r1, $r7;
        java.lang.String r2, $r8;
        javassist.bytecode.Bytecode r3;
        javassist.CtClass[] r4;
        javassist.compiler.Javac r5;
        int $i0;
        javassist.compiler.CompileError $r9;
        javassist.CannotCompileException $r10;

        r0 := @this: javassist.CtField$CodeInitializer0;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.bytecode.Bytecode;

        r4 := @parameter3: javassist.CtClass[];

        r5 := @parameter4: javassist.compiler.Javac;

     label1:
        virtualinvoke r3.<javassist.bytecode.Bytecode: void addAload(int)>(0);

        virtualinvoke r0.<javassist.CtField$CodeInitializer0: void compileExpr(javassist.compiler.Javac)>(r5);

        $r7 = <javassist.bytecode.Bytecode: javassist.CtClass THIS>;

        $r8 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String of(javassist.CtClass)>(r1);

        virtualinvoke r3.<javassist.bytecode.Bytecode: void addPutfield(javassist.CtClass,java.lang.String,java.lang.String)>($r7, r2, $r8);

        $i0 = virtualinvoke r3.<javassist.bytecode.Bytecode: int getMaxStack()>();

     label2:
        return $i0;

     label3:
        $r9 := @caughtexception;

        $r10 = new javassist.CannotCompileException;

        specialinvoke $r10.<javassist.CannotCompileException: void <init>(javassist.compiler.CompileError)>($r9);

        throw $r10;

        catch javassist.compiler.CompileError from label1 to label2 with label3;
    }

    int compileIfStatic(javassist.CtClass, java.lang.String, javassist.bytecode.Bytecode, javassist.compiler.Javac) throws javassist.CannotCompileException
    {
        javassist.CtField$CodeInitializer0 r0;
        javassist.CtClass r1, $r6;
        java.lang.String r2, $r7;
        javassist.bytecode.Bytecode r3;
        javassist.compiler.Javac r4;
        int $i0;
        javassist.compiler.CompileError $r8;
        javassist.CannotCompileException $r9;

        r0 := @this: javassist.CtField$CodeInitializer0;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.bytecode.Bytecode;

        r4 := @parameter3: javassist.compiler.Javac;

     label1:
        virtualinvoke r0.<javassist.CtField$CodeInitializer0: void compileExpr(javassist.compiler.Javac)>(r4);

        $r6 = <javassist.bytecode.Bytecode: javassist.CtClass THIS>;

        $r7 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String of(javassist.CtClass)>(r1);

        virtualinvoke r3.<javassist.bytecode.Bytecode: void addPutstatic(javassist.CtClass,java.lang.String,java.lang.String)>($r6, r2, $r7);

        $i0 = virtualinvoke r3.<javassist.bytecode.Bytecode: int getMaxStack()>();

     label2:
        return $i0;

     label3:
        $r8 := @caughtexception;

        $r9 = new javassist.CannotCompileException;

        specialinvoke $r9.<javassist.CannotCompileException: void <init>(javassist.compiler.CompileError)>($r8);

        throw $r9;

        catch javassist.compiler.CompileError from label1 to label2 with label3;
    }

    int getConstantValue2(javassist.bytecode.ConstPool, javassist.CtClass, javassist.compiler.ast.ASTree)
    {
        javassist.CtField$CodeInitializer0 r0;
        javassist.bytecode.ConstPool r1;
        javassist.CtClass r2, $r8, $r9, $r11, $r12, $r13, $r14;
        javassist.compiler.ast.ASTree r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r4, $r6;
        javassist.compiler.ast.StringL $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        javassist.compiler.ast.DoubleConst $r7;
        float $f0, $f1;
        javassist.compiler.ast.IntConst $r10;
        double $d0, d1;
        long l8;

        r0 := @this: javassist.CtField$CodeInitializer0;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: javassist.CtClass;

        r3 := @parameter2: javassist.compiler.ast.ASTree;

        $z0 = virtualinvoke r2.<javassist.CtClass: boolean isPrimitive()>();

        if $z0 == 0 goto label8;

        $z3 = r3 instanceof javassist.compiler.ast.IntConst;

        if $z3 == 0 goto label5;

        $r10 = (javassist.compiler.ast.IntConst) r3;

        l8 = virtualinvoke $r10.<javassist.compiler.ast.IntConst: long get()>();

        $r11 = <javassist.CtClass: javassist.CtClass doubleType>;

        if r2 != $r11 goto label1;

        $d0 = (double) l8;

        $i7 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addDoubleInfo(double)>($d0);

        return $i7;

     label1:
        $r12 = <javassist.CtClass: javassist.CtClass floatType>;

        if r2 != $r12 goto label2;

        $f1 = (float) l8;

        $i6 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addFloatInfo(float)>($f1);

        return $i6;

     label2:
        $r13 = <javassist.CtClass: javassist.CtClass longType>;

        if r2 != $r13 goto label3;

        $i5 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addLongInfo(long)>(l8);

        return $i5;

     label3:
        $r14 = <javassist.CtClass: javassist.CtClass voidType>;

        if r2 == $r14 goto label4;

        $i3 = (int) l8;

        $i4 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addIntegerInfo(int)>($i3);

        return $i4;

     label4:
        goto label9;

     label5:
        $z4 = r3 instanceof javassist.compiler.ast.DoubleConst;

        if $z4 == 0 goto label9;

        $r7 = (javassist.compiler.ast.DoubleConst) r3;

        d1 = virtualinvoke $r7.<javassist.compiler.ast.DoubleConst: double get()>();

        $r8 = <javassist.CtClass: javassist.CtClass floatType>;

        if r2 != $r8 goto label6;

        $f0 = (float) d1;

        $i2 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addFloatInfo(float)>($f0);

        return $i2;

     label6:
        $r9 = <javassist.CtClass: javassist.CtClass doubleType>;

        if r2 != $r9 goto label7;

        $i1 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addDoubleInfo(double)>(d1);

        return $i1;

     label7:
        goto label9;

     label8:
        $z1 = r3 instanceof javassist.compiler.ast.StringL;

        if $z1 == 0 goto label9;

        $r4 = virtualinvoke r2.<javassist.CtClass: java.lang.String getName()>();

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.String");

        if $z2 == 0 goto label9;

        $r5 = (javassist.compiler.ast.StringL) r3;

        $r6 = virtualinvoke $r5.<javassist.compiler.ast.StringL: java.lang.String get()>();

        $i0 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addStringInfo(java.lang.String)>($r6);

        return $i0;

     label9:
        return 0;
    }
}
