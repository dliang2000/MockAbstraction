final class org.apache.flink.api.common.io.DelimitedInputFormatSamplingTest$TestDelimitedInputFormat extends org.apache.flink.api.common.io.DelimitedInputFormat
{
    private static final long serialVersionUID;

    void <init>(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.api.common.io.DelimitedInputFormatSamplingTest$TestDelimitedInputFormat r0;
        org.apache.flink.configuration.Configuration r1;

        r0 := @this: org.apache.flink.api.common.io.DelimitedInputFormatSamplingTest$TestDelimitedInputFormat;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        specialinvoke r0.<org.apache.flink.api.common.io.DelimitedInputFormat: void <init>(org.apache.flink.core.fs.Path,org.apache.flink.configuration.Configuration)>(null, r1);

        return;
    }

    public org.apache.flink.types.IntValue readRecord(org.apache.flink.types.IntValue, byte[], int, int)
    {
        org.apache.flink.api.common.io.DelimitedInputFormatSamplingTest$TestDelimitedInputFormat r0;
        org.apache.flink.types.IntValue r1;
        byte[] r2;
        int i0, i1;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: org.apache.flink.api.common.io.DelimitedInputFormatSamplingTest$TestDelimitedInputFormat;

        r1 := @parameter0: org.apache.flink.types.IntValue;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public volatile java.lang.Object readRecord(java.lang.Object, byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.api.common.io.DelimitedInputFormatSamplingTest$TestDelimitedInputFormat r0;
        java.lang.Object r1;
        byte[] r2;
        int i0, i1;
        org.apache.flink.types.IntValue $r3, $r4;

        r0 := @this: org.apache.flink.api.common.io.DelimitedInputFormatSamplingTest$TestDelimitedInputFormat;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = (org.apache.flink.types.IntValue) r1;

        $r4 = virtualinvoke r0.<org.apache.flink.api.common.io.DelimitedInputFormatSamplingTest$TestDelimitedInputFormat: org.apache.flink.types.IntValue readRecord(org.apache.flink.types.IntValue,byte[],int,int)>($r3, r2, i0, i1);

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.io.DelimitedInputFormatSamplingTest$TestDelimitedInputFormat: long serialVersionUID> = 1L;

        return;
    }
}
