final class org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher extends org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$FastMatcher
{
    static final int MAX_SIZE;
    private final char[] table;
    private final boolean containsZero;
    private final long filter;
    private static final int C1;
    private static final int C2;
    private static final double DESIRED_LOAD_FACTOR;

    private void <init>(char[], long, boolean, java.lang.String)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher r0;
        char[] r1;
        long l0;
        boolean z0;
        java.lang.String r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher;

        r1 := @parameter0: char[];

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$FastMatcher: void <init>(java.lang.String)>(r2);

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: char[] table> = r1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: long filter> = l0;

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: boolean containsZero> = z0;

        return;
    }

    static int smear(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i1 = i0 * -862048943;

        $i2 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>($i1, 15);

        $i3 = 461845907 * $i2;

        return $i3;
    }

    private boolean checkFilter(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher r0;
        int i0;
        long $l1, $l2, $l3;
        byte $b4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher;

        i0 := @parameter0: int;

        $l1 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: long filter>;

        $l2 = $l1 >> i0;

        $l3 = 1L & $l2;

        $b4 = 1L cmp $l3;

        if $b4 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static int chooseTableSize(int)
    {
        int i0, $i1, $i2, i4;
        double $d0, $d1, $d2;
        byte $b3;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        return 2;

     label1:
        $i1 = i0 - 1;

        $i2 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i1);

        i4 = $i2 << 1;

     label2:
        $d0 = (double) i4;

        $d2 = $d0 * 0.5;

        $d1 = (double) i0;

        $b3 = $d2 cmpg $d1;

        if $b3 >= 0 goto label3;

        i4 = i4 << 1;

        goto label2;

     label3:
        return i4;
    }

    static org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher 'from'(java.util.BitSet, java.lang.String)
    {
        java.util.BitSet r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i5, $i7, $i9, i11, i12;
        boolean z0;
        char[] r2;
        org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher $r3;
        long $l4, l10;
        char $c6, $c8;

        r0 := @parameter0: java.util.BitSet;

        r1 := @parameter1: java.lang.String;

        l10 = 0L;

        i0 = virtualinvoke r0.<java.util.BitSet: int cardinality()>();

        z0 = virtualinvoke r0.<java.util.BitSet: boolean get(int)>(0);

        $i2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: int chooseTableSize(int)>(i0);

        r2 = newarray (char)[$i2];

        $i3 = lengthof r2;

        i1 = $i3 - 1;

        i11 = virtualinvoke r0.<java.util.BitSet: int nextSetBit(int)>(0);

     label1:
        if i11 == -1 goto label5;

        $l4 = 1L << i11;

        l10 = l10 | $l4;

        $i5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: int smear(int)>(i11);

        i12 = $i5 & i1;

     label2:
        $c6 = r2[i12];

        if $c6 != 0 goto label3;

        $c8 = (char) i11;

        r2[i12] = $c8;

        goto label4;

     label3:
        $i7 = i12 + 1;

        i12 = $i7 & i1;

        goto label2;

     label4:
        $i9 = i11 + 1;

        i11 = virtualinvoke r0.<java.util.BitSet: int nextSetBit(int)>($i9);

        goto label1;

     label5:
        $r3 = new org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher;

        specialinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: void <init>(char[],long,boolean,java.lang.String)>(r2, l10, z0, r1);

        return $r3;
    }

    public boolean matches(char)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher r0;
        char c0, $c5, $c6;
        int i1, i2, $i3, $i4, $i7, i8;
        boolean $z0, $z1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher;

        c0 := @parameter0: char;

        if c0 != 0 goto label1;

        $z1 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: boolean containsZero>;

        return $z1;

     label1:
        $z0 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: boolean checkFilter(int)>(c0);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: char[] table>;

        $i3 = lengthof $r1;

        i1 = $i3 - 1;

        $i4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: int smear(int)>(c0);

        i2 = $i4 & i1;

        i8 = i2;

     label3:
        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: char[] table>;

        $c5 = $r2[i8];

        if $c5 != 0 goto label4;

        return 0;

     label4:
        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: char[] table>;

        $c6 = $r3[i8];

        if $c6 != c0 goto label5;

        return 1;

     label5:
        $i7 = i8 + 1;

        i8 = $i7 & i1;

        if i8 != i2 goto label3;

        return 0;
    }

    void setBits(java.util.BitSet)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher r0;
        java.util.BitSet r1;
        char[] r2;
        int i0, i2;
        char c1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher;

        r1 := @parameter0: java.util.BitSet;

        $z0 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: boolean containsZero>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.util.BitSet: void set(int)>(0);

     label1:
        r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: char[] table>;

        i0 = lengthof r2;

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        c1 = r2[i2];

        if c1 == 0 goto label3;

        virtualinvoke r1.<java.util.BitSet: void set(int)>(c1);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: double DESIRED_LOAD_FACTOR> = 0.5;

        <org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: int C2> = 461845907;

        <org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: int C1> = -862048943;

        <org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: int MAX_SIZE> = 1023;

        return;
    }
}
