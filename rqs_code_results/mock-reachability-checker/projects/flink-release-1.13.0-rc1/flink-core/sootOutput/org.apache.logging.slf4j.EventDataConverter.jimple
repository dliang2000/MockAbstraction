public class org.apache.logging.slf4j.EventDataConverter extends java.lang.Object
{

    public void <init>()
    {
        org.apache.logging.slf4j.EventDataConverter r0;

        r0 := @this: org.apache.logging.slf4j.EventDataConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.logging.log4j.message.Message convertEvent(java.lang.String, java.lang.Object[], java.lang.Throwable)
    {
        org.apache.logging.slf4j.EventDataConverter r0;
        java.lang.String r1, r7, $r10, $r11, $r12, $r14, $r22, $r23, $r24;
        java.lang.Object[] r2;
        java.lang.Throwable r3;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        java.lang.Object $r8, $r9, $r13, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Exception $r17;
        org.apache.logging.log4j.message.ParameterizedMessage $r18;
        org.slf4j.ext.EventData $r19;
        org.apache.logging.log4j.message.StructuredDataMessage $r21;
        java.util.Map $r25;
        java.util.Set $r26;

        r0 := @this: org.apache.logging.slf4j.EventDataConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.lang.Throwable;

     label1:
        if r2 == null goto label2;

        $r15 = r2[0];

        $z3 = $r15 instanceof org.slf4j.ext.EventData;

        if $z3 == 0 goto label2;

        $r16 = r2[0];

        $r19 = (org.slf4j.ext.EventData) $r16;

        goto label3;

     label2:
        $r19 = new org.slf4j.ext.EventData;

        specialinvoke $r19.<org.slf4j.ext.EventData: void <init>(java.lang.String)>(r1);

     label3:
        $r21 = new org.apache.logging.log4j.message.StructuredDataMessage;

        $r22 = virtualinvoke $r19.<org.slf4j.ext.EventData: java.lang.String getEventId()>();

        $r23 = virtualinvoke $r19.<org.slf4j.ext.EventData: java.lang.String getMessage()>();

        $r24 = virtualinvoke $r19.<org.slf4j.ext.EventData: java.lang.String getEventType()>();

        specialinvoke $r21.<org.apache.logging.log4j.message.StructuredDataMessage: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r22, $r23, $r24);

        $r25 = virtualinvoke $r19.<org.slf4j.ext.EventData: java.util.Map getEventMap()>();

        $r26 = interfaceinvoke $r25.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r9;

        $r10 = "EventType";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z0 != 0 goto label4;

        $r11 = "EventId";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 != 0 goto label4;

        $r12 = "EventMessage";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z2 == 0 goto label5;

        goto label4;

     label5:
        $r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);

        virtualinvoke $r21.<org.apache.logging.log4j.message.StructuredDataMessage: void put(java.lang.String,java.lang.String)>(r7, $r14);

        goto label4;

     label6:
        return $r21;

     label7:
        $r17 := @caughtexception;

        $r18 = new org.apache.logging.log4j.message.ParameterizedMessage;

        specialinvoke $r18.<org.apache.logging.log4j.message.ParameterizedMessage: void <init>(java.lang.String,java.lang.Object[],java.lang.Throwable)>(r1, r2, r3);

        return $r18;

        catch java.lang.Exception from label1 to label6 with label7;
    }
}
