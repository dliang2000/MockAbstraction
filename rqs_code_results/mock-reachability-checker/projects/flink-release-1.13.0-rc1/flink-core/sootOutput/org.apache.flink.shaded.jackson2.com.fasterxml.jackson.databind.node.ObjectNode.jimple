public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ContainerNode implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected final java.util.Map _children;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory r1;
        java.util.LinkedHashMap $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ContainerNode: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory)>(r1);

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children> = $r2;

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory, java.util.Map)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory r1;
        java.util.Map r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ContainerNode: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children> = r2;

        return;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode _at(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r1;
        java.lang.String $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String getMatchingProperty()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>($r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode deepCopy()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r4;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory $r5;
        java.util.Map $r6, $r9;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r8, $r10, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r12, $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory>;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory)>($r5);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        $r9 = $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r11;

        $r13 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode deepCopy()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r13);

        goto label1;

     label2:
        return $r4;
    }

    public boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType getNodeType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType OBJECT>;

        return $r1;
    }

    public final boolean isObject()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        return 1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken asToken()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        return $r1;
    }

    public int size()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator elements()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode get(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        i0 := @parameter0: int;

        return null;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode get(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r3;

        return $r4;
    }

    public java.util.Iterator fieldNames()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode path(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.MissingNode $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        i0 := @parameter0: int;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.MissingNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.MissingNode getInstance()>();

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode path(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.MissingNode $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r4;

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.MissingNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.MissingNode getInstance()>();

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode required(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r2, $r7;
        java.util.Map $r3;
        java.lang.Object $r4, $r6;
        java.lang.Object[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r4;

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.lang.Object _reportRequiredViolation(java.lang.String,java.lang.Object[])>("No value for property \'%s\' of `ObjectNode`", $r5);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r6;

        return $r7;
    }

    public java.util.Iterator fields()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode 'with'(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, r3, $r18;
        java.lang.String r1, $r14, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r2;
        java.util.Map $r4, $r6;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.UnsupportedOperationException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r15, $r16;
        java.lang.Class $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r5;

        if r2 == null goto label2;

        $z0 = r2 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        if $z0 == 0 goto label1;

        $r18 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode) r2;

        return $r18;

     label1:
        $r8 = new java.lang.UnsupportedOperationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has value that is not of type ObjectNode (but ");

        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r17);

        throw $r8;

     label2:
        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode withArray(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1, $r14, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode r3, $r18;
        java.util.Map $r4, $r6;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.UnsupportedOperationException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r15, $r16;
        java.lang.Class $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r5;

        if r2 == null goto label2;

        $z0 = r2 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode;

        if $z0 == 0 goto label1;

        $r18 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode) r2;

        return $r18;

     label1:
        $r8 = new java.lang.UnsupportedOperationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has value that is not of type ArrayNode (but ");

        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r17);

        throw $r8;

     label2:
        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return r3;
    }

    public boolean equals(java.util.Comparator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, r3;
        java.util.Comparator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r2, r8, $r14;
        java.util.Map r4, r5;
        int i0, $i1;
        java.util.Iterator r6;
        java.util.Map$Entry r7;
        boolean $z0, $z1, $z2;
        java.util.Set $r9;
        java.lang.Object $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;

        $z0 = r2 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r3 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode) r2;

        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        r5 = r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        i0 = interfaceinvoke r4.<java.util.Map: int size()>();

        $i1 = interfaceinvoke r5.<java.util.Map: int size()>();

        if $i1 == i0 goto label2;

        return 0;

     label2:
        $r9 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        r8 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r12;

        if r8 == null goto label4;

        $r13 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r13;

        $z2 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: boolean equals(java.util.Comparator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, r8);

        if $z2 != 0 goto label5;

     label4:
        return 0;

     label5:
        goto label3;

     label6:
        return 1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r4, $r10, $r12;
        java.util.Map $r5;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8, $r9, $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r11;

        return $r12;

     label2:
        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r9;

        r4 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String)>(r1);

        if r4 == null goto label3;

        return r4;

     label3:
        goto label1;

     label4:
        return null;
    }

    public java.util.List findValues(java.lang.String, java.util.List)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Map $r4;
        java.util.Set $r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r7, $r8, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r9;
        java.util.ArrayList $r11;
        java.util.List r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r12 := @parameter1: java.util.List;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label3;

        if r12 != null goto label2;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r12 = $r11;

     label2:
        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label4;

     label3:
        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r8;

        r12 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: java.util.List findValues(java.lang.String,java.util.List)>(r1, r12);

     label4:
        goto label1;

     label5:
        return r12;
    }

    public java.util.List findValuesAsText(java.lang.String, java.util.List)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1, $r12;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Map $r4;
        java.util.Set $r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r7, $r8, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r9, $r11;
        java.util.ArrayList $r13;
        java.util.List r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r14 := @parameter1: java.util.List;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label3;

        if r14 != null goto label2;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r14 = $r13;

     label2:
        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r10;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>();

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label4;

     label3:
        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r8;

        r14 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: java.util.List findValuesAsText(java.lang.String,java.util.List)>(r1, r14);

     label4:
        goto label1;

     label5:
        return r14;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r11;
        java.lang.String r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r4, $r10;
        java.util.Map $r5;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8, $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        return r0;

     label2:
        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r9;

        r4 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String)>(r1);

        if r4 == null goto label3;

        $r11 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode) r4;

        return $r11;

     label3:
        goto label1;

     label4:
        return null;
    }

    public java.util.List findParents(java.lang.String, java.util.List)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Map $r4;
        java.util.Set $r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r9;
        java.util.ArrayList $r10;
        java.util.List r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r11 := @parameter1: java.util.List;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label3;

        if r11 != null goto label2;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r11 = $r10;

     label2:
        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r0);

        goto label4;

     label3:
        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r8;

        r11 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: java.util.List findParents(java.lang.String,java.util.List)>(r1, r11);

     label4:
        goto label1;

     label5:
        return r11;
    }

    public void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r5;
        java.lang.Object $r6, $r7, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r8;
        java.util.Map $r9;
        java.util.Set $r10;
        java.lang.String $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        if r2 == null goto label1;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS>;

        $z3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r8);

        if $z3 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeStartObject(java.lang.Object)>(r0);

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z5 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label5;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode) $r7;

        if z0 == 0 goto label4;

        $z1 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode: boolean isArray()>();

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r2);

        if $z2 == 0 goto label4;

        goto label3;

     label4:
        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r12);

        virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode: void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2);

        goto label3;

     label5:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();

        return;
    }

    public void serializeWithType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId r4, $r13;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r7;
        java.lang.Object $r9, $r10, $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r12;
        java.util.Map $r14;
        java.util.Set $r15;
        java.lang.String $r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        if r2 == null goto label1;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS>;

        $z3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r11);

        if $z3 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        $r13 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r0, $r12);

        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r1, $r13);

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z5 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label5;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode) $r10;

        if z0 == 0 goto label4;

        $z1 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode: boolean isArray()>();

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r2);

        if $z2 == 0 goto label4;

        goto label3;

     label4:
        $r16 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r17);

        virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode: void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2);

        goto label3;

     label5:
        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r1, r4);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode set(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        java.util.Map $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;

        if r4 != null goto label1;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode setAll(java.util.Map)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Map r1, $r7;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.util.Map;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r6;

        if r10 != null goto label2;

        r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

     label2:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r10);

        goto label1;

     label3:
        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode setAll(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, r1;
        java.util.Map $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>($r2);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode replace(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4, r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;

        if r5 != null goto label1;

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r3;

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode without(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode without(java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Collection r1;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        interfaceinvoke $r3.<java.util.Set: boolean removeAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode put(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4, r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;

        if r5 != null goto label1;

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r3;

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode remove(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r3;

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode remove(java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Collection r1;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        interfaceinvoke $r3.<java.util.Set: boolean removeAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode removeAll()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Map $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode putAll(java.util.Map)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.util.Map;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode setAll(java.util.Map)>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode putAll(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode setAll(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode)>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode retain(java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Collection r1;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        interfaceinvoke $r3.<java.util.Set: boolean retainAll(java.util.Collection)>(r1);

        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode retain(java.lang.String[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String[] r1;
        java.util.List $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode retain(java.util.Collection)>($r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode putArray(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, r2);

        return r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode putObject(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, r2;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, r2);

        return r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode putPOJO(java.lang.String, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r4;
        java.lang.String r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object)>(r2);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode putRawValue(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r4;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode rawValueNode(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue)>(r2);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode putNull(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        java.util.Map $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, short)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        short s0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode numberNode(short)>(s0);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Short)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        java.lang.Short r2;
        short $s0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Short;

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        goto label2;

     label1:
        $s0 = virtualinvoke r2.<java.lang.Short: short shortValue()>();

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode numberNode(short)>($s0);

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r6);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode numberNode(int)>(i0);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Integer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        java.lang.Integer r2;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Integer;

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode numberNode(int)>($i0);

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r6);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, long)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        long l0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode numberNode(long)>(l0);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Long)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        java.lang.Long r2;
        long $l0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Long;

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        goto label2;

     label1:
        $l0 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode numberNode(long)>($l0);

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r6);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, float)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        float f0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode numberNode(float)>(f0);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Float)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        java.lang.Float r2;
        float $f0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Float;

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        goto label2;

     label1:
        $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode numberNode(float)>($f0);

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r6);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, double)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        double d0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode numberNode(double)>(d0);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Double)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        java.lang.Double r2;
        double $d0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Double;

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        goto label2;

     label1:
        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode numberNode(double)>($d0);

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r6);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.math.BigDecimal)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        java.math.BigDecimal r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.math.BigDecimal;

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal)>(r2);

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r6);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.math.BigInteger)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        java.math.BigInteger r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.math.BigInteger;

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger)>(r2);

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r6);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1, r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String)>(r2);

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r6);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BooleanNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>(z0);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        java.lang.Boolean r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        goto label2;

     label1:
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean)>($z0);

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r6);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String, byte[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r3;
        java.lang.String r1;
        byte[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[])>(r2);

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r1, $r6);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        if $z0 == 0 goto label3;

        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode) r1;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: boolean _childrenEqual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode)>($r2);

        return $z1;

     label3:
        return 0;
    }

    protected boolean _childrenEqual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, r1;
        java.util.Map $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $r2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public int hashCode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        return $i0;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r2;
        java.util.Map $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: java.util.Map _children>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r0;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ContainerNode removeAll()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode removeAll()>();

        return $r1;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode withArray(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode withArray(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode 'with'(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r2;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode 'with'(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r2;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode deepCopy()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0, $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode deepCopy()>();

        return $r1;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode path(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode path(int)>(i0);

        return $r1;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode path(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode path(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode get(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode get(int)>(i0);

        return $r1;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode get(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: long serialVersionUID> = 1L;

        return;
    }
}
