public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean shouldIgnore(java.lang.Object, java.util.Collection, java.util.Collection)
    {
        java.lang.Object r0;
        java.util.Collection r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Collection;

        r2 := @parameter2: java.util.Collection;

        if r1 != null goto label1;

        if r2 != null goto label1;

        return 0;

     label1:
        if r2 != null goto label2;

        $z3 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r0);

        return $z3;

     label2:
        if r1 != null goto label5;

        $z2 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>(r0);

        if $z2 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;

     label5:
        $z0 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label6;

        $z1 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r0);

        if $z1 == 0 goto label7;

     label6:
        $z5 = 1;

        goto label8;

     label7:
        $z5 = 0;

     label8:
        return $z5;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set, java.util.Set)
    {
        java.util.Set r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        if r1 != null goto label2;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker construct(java.util.Set,java.util.Set)>(r0, r1);

        return $r2;
    }

    public static java.util.Set combineNamesToInclude(java.util.Set, java.util.Set)
    {
        java.util.Set r0, r1;
        java.util.Iterator r3;
        java.lang.String r4;
        java.util.HashSet $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        if r0 != null goto label1;

        return r1;

     label1:
        if r1 != null goto label2;

        return r0;

     label2:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r6;

        $z1 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z1 == 0 goto label4;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r4);

     label4:
        goto label3;

     label5:
        return $r5;
    }
}
