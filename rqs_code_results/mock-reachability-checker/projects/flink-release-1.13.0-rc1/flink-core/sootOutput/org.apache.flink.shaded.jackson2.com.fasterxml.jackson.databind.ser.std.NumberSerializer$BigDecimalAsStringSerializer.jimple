final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializerBase
{
    static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer BD_INSTANCE;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializerBase: void <init>(java.lang.Class)>(class "Ljava/math/BigDecimal;");

        return;
    }

    public boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.Object r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.Object;

        return 0;
    }

    public void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.math.BigDecimal r4;
        java.lang.String r5, r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r6;
        boolean $z0, $z1;
        java.lang.Object[] $r7, $r11;
        int $i0;
        java.lang.Integer $r8, $r9, $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_BIGDECIMAL_AS_PLAIN>;

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r6);

        if $z0 == 0 goto label2;

        r4 = (java.math.BigDecimal) r1;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: boolean _verifyBigDecimalRange(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.math.BigDecimal)>(r2, r4);

        if $z1 != 0 goto label1;

        $r7 = newarray (java.lang.Object)[3];

        $i0 = virtualinvoke r4.<java.math.BigDecimal: int scale()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9999);

        $r7[1] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9999);

        $r7[2] = $r10;

        r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempt to write plain `java.math.BigDecimal` (see JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN) with illegal scale (%d): needs to be between [-%d, %d]", $r7);

        $r11 = newarray (java.lang.Object)[0];

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void reportMappingProblem(java.lang.String,java.lang.Object[])>(r5, $r11);

     label1:
        r12 = virtualinvoke r4.<java.math.BigDecimal: java.lang.String toPlainString()>();

        goto label3;

     label2:
        r12 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

     label3:
        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(r12);

        return;
    }

    public java.lang.String valueToString(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer r0;
        java.lang.Object r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;
    }

    protected boolean _verifyBigDecimalRange(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.math.BigDecimal) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.math.BigDecimal r2;
        int i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.math.BigDecimal;

        i0 = virtualinvoke r2.<java.math.BigDecimal: int scale()>();

        if i0 < -9999 goto label1;

        if i0 > 9999 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer $r0;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer BD_INSTANCE> = $r0;

        return;
    }
}
