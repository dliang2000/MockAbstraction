public class org.apache.flink.configuration.NettyShuffleEnvironmentOptions extends java.lang.Object
{
    public static final org.apache.flink.configuration.ConfigOption DATA_PORT;
    public static final org.apache.flink.configuration.ConfigOption DATA_BIND_PORT;
    public static final org.apache.flink.configuration.ConfigOption DATA_SSL_ENABLED;
    public static final org.apache.flink.configuration.ConfigOption BLOCKING_SHUFFLE_COMPRESSION_ENABLED;
    public static final org.apache.flink.configuration.ConfigOption SHUFFLE_COMPRESSION_CODEC;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_DETAILED_METRICS;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_NUM_BUFFERS;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_BUFFERS_MEMORY_FRACTION;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_BUFFERS_MEMORY_MIN;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_BUFFERS_MEMORY_MAX;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_BUFFERS_PER_CHANNEL;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_EXTRA_BUFFERS_PER_GATE;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_SORT_SHUFFLE_MIN_BUFFERS;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_SORT_SHUFFLE_MIN_PARALLELISM;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_MAX_BUFFERS_PER_CHANNEL;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_EXCLUSIVE_BUFFERS_REQUEST_TIMEOUT_MILLISECONDS;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_BLOCKING_SHUFFLE_TYPE;
    public static final org.apache.flink.configuration.ConfigOption NUM_ARENAS;
    public static final org.apache.flink.configuration.ConfigOption NUM_THREADS_SERVER;
    public static final org.apache.flink.configuration.ConfigOption NUM_THREADS_CLIENT;
    public static final org.apache.flink.configuration.ConfigOption CONNECT_BACKLOG;
    public static final org.apache.flink.configuration.ConfigOption CLIENT_CONNECT_TIMEOUT_SECONDS;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_RETRIES;
    public static final org.apache.flink.configuration.ConfigOption SEND_RECEIVE_BUFFER_SIZE;
    public static final org.apache.flink.configuration.ConfigOption TRANSPORT_TYPE;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_REQUEST_BACKOFF_INITIAL;
    public static final org.apache.flink.configuration.ConfigOption NETWORK_REQUEST_BACKOFF_MAX;

    private void <init>()
    {
        org.apache.flink.configuration.NettyShuffleEnvironmentOptions r0;

        r0 := @this: org.apache.flink.configuration.NettyShuffleEnvironmentOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r0, $r4, $r15, $r26, $r30, $r33, $r37, $r40, $r44, $r47, $r50, $r54, $r58, $r63, $r74, $r78, $r82, $r85, $r91, $r97, $r103, $r109, $r115, $r121, $r127, $r132, $r138;
        java.lang.Integer $r1, $r38, $r51, $r55, $r60, $r65, $r75, $r86, $r92, $r98, $r104, $r110, $r116, $r122, $r133, $r139;
        org.apache.flink.configuration.ConfigOption $r2, $r3, $r6, $r9, $r14, $r17, $r20, $r25, $r28, $r29, $r31, $r32, $r35, $r36, $r39, $r42, $r43, $r45, $r46, $r48, $r49, $r52, $r53, $r56, $r57, $r61, $r62, $r66, $r68, $r70, $r73, $r76, $r77, $r80, $r81, $r83, $r84, $r87, $r89, $r90, $r93, $r95, $r96, $r99, $r101, $r102, $r105, $r107, $r108, $r111, $r113, $r114, $r117, $r119, $r120, $r123, $r125, $r126, $r128, $r130, $r131, $r134, $r136, $r137, $r140, $r142, $r143;
        org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder $r5, $r59, $r64;
        java.lang.StringBuilder $r7, $r8, $r11, $r12, $r18, $r19, $r22, $r23;
        java.lang.String $r10, $r13, $r21, $r24, $r69, $r71, $r72;
        java.lang.Boolean $r16, $r27, $r34;
        java.lang.Float $r41;
        java.lang.Object[] $r67;
        java.lang.Long $r79;
        java.lang.String[] $r88, $r94, $r100, $r106, $r112, $r118, $r124, $r129, $r135, $r141;

        $r0 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.data.port");

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r2 = virtualinvoke $r0.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The task manager\u2019s external port used for data exchange operations.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption DATA_PORT> = $r3;

        $r4 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.data.bind-port");

        $r5 = virtualinvoke $r4.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder intType()>();

        $r6 = virtualinvoke $r5.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The task manager\'s bind port used for data exchange operations. If not configured, \'");

        $r9 = <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption DATA_PORT>;

        $r10 = virtualinvoke $r9.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' will be used.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke $r6.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>($r13);

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption DATA_BIND_PORT> = $r14;

        $r15 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.data.ssl.enabled");

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r17 = virtualinvoke $r15.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r16);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Enable SSL support for the taskmanager data transport. This is applicable only when the global flag for internal SSL (");

        $r20 = <org.apache.flink.configuration.SecurityOptions: org.apache.flink.configuration.ConfigOption SSL_INTERNAL_ENABLED>;

        $r21 = virtualinvoke $r20.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is set to true");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = virtualinvoke $r17.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>($r24);

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption DATA_SSL_ENABLED> = $r25;

        $r26 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.blocking-shuffle.compression.enabled");

        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r28 = virtualinvoke $r26.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Boolean flag indicating whether the shuffle data will be compressed for blocking shuffle mode. Note that data is compressed per buffer and compression can incur extra CPU overhead, so it is more effective for IO bounded scenario when compression ratio is high.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption BLOCKING_SHUFFLE_COMPRESSION_ENABLED> = $r29;

        $r30 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.compression.codec");

        $r31 = virtualinvoke $r30.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("LZ4");

        $r32 = virtualinvoke $r31.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The codec to be used when compressing shuffle data.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption SHUFFLE_COMPRESSION_CODEC> = $r32;

        $r33 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.detailed-metrics");

        $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r35 = virtualinvoke $r33.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r34);

        $r36 = virtualinvoke $r35.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Boolean flag to enable/disable more detailed metrics about inbound/outbound network queue lengths.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_DETAILED_METRICS> = $r36;

        $r37 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.numberOfBuffers");

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2048);

        $r39 = virtualinvoke $r37.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r38);

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_NUM_BUFFERS> = $r39;

        $r40 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.memory.fraction");

        $r41 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.1F);

        $r42 = virtualinvoke $r40.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r41);

        $r43 = virtualinvoke $r42.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Fraction of JVM memory to use for network buffers. This determines how many streaming data exchange channels a TaskManager can have at the same time and how well buffered the channels are. If a job is rejected or you get a warning that the system has not enough buffers available, increase this value or the min/max values below. Also note, that \"taskmanager.network.memory.min\"` and \"taskmanager.network.memory.max\" may override this fraction.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_BUFFERS_MEMORY_FRACTION> = $r43;

        $r44 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.memory.min");

        $r45 = virtualinvoke $r44.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("64mb");

        $r46 = virtualinvoke $r45.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Minimum memory size for network buffers.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_BUFFERS_MEMORY_MIN> = $r46;

        $r47 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.memory.max");

        $r48 = virtualinvoke $r47.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("1gb");

        $r49 = virtualinvoke $r48.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Maximum memory size for network buffers.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_BUFFERS_MEMORY_MAX> = $r49;

        $r50 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.memory.buffers-per-channel");

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r52 = virtualinvoke $r50.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r51);

        $r53 = virtualinvoke $r52.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Number of exclusive network buffers to use for each outgoing/incoming channel (subpartition/inputchannel) in the credit-based flow control model. It should be configured at least 2 for good performance. 1 buffer is for receiving in-flight data in the subpartition and 1 buffer is for parallel serialization.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_BUFFERS_PER_CHANNEL> = $r53;

        $r54 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.memory.floating-buffers-per-gate");

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r56 = virtualinvoke $r54.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r55);

        $r57 = virtualinvoke $r56.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Number of extra network buffers to use for each outgoing/incoming gate (result partition/input gate). In credit-based flow control mode, this indicates how many floating credits are shared among all the input channels. The floating buffers are distributed based on backlog (real-time output buffers in the subpartition) feedback, and can help relieve back-pressure caused by unbalanced data distribution among the subpartitions. This value should be increased in case of higher round trip times between nodes and/or larger number of machines in the cluster.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_EXTRA_BUFFERS_PER_GATE> = $r57;

        $r58 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.sort-shuffle.min-buffers");

        $r59 = virtualinvoke $r58.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder intType()>();

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(64);

        $r61 = virtualinvoke $r59.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r60);

        $r62 = virtualinvoke $r61.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Minimum number of network buffers required per sort-merge blocking result partition. For production usage, it is suggested to increase this config value to at least 2048 (64M memory if the default 32K memory segment size is used) to improve the data compression ratio and reduce the small network packets. Usually, several hundreds of megabytes memory is enough for large scale batch jobs. Note: you may also need to increase the size of total network memory to avoid the \'insufficient number of network buffers\' error if you are increasing this config value.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_SORT_SHUFFLE_MIN_BUFFERS> = $r62;

        $r63 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.sort-shuffle.min-parallelism");

        $r64 = virtualinvoke $r63.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder intType()>();

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2147483647);

        $r66 = virtualinvoke $r64.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r65);

        $r67 = newarray (java.lang.Object)[3];

        $r68 = <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption BLOCKING_SHUFFLE_COMPRESSION_ENABLED>;

        $r69 = virtualinvoke $r68.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r67[0] = $r69;

        $r70 = <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_SORT_SHUFFLE_MIN_BUFFERS>;

        $r71 = virtualinvoke $r70.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r67[1] = $r71;

        $r67[2] = "taskmanager.memory.framework.off-heap.batch-shuffle.size";

        $r72 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Parallelism threshold to switch between sort-merge blocking shuffle and the default hash-based blocking shuffle, which means for batch jobs of small parallelism, the hash-based blocking shuffle will be used and for batch jobs of large parallelism, the sort-merge one will be used. Note: For production usage, if sort-merge blocking shuffle is enabled, you may also need to enable data compression by setting \'%s\' to true and tune \'%s\' and \'%s\' for better performance.", $r67);

        $r73 = virtualinvoke $r66.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>($r72);

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_SORT_SHUFFLE_MIN_PARALLELISM> = $r73;

        $r74 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.memory.max-buffers-per-channel");

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r76 = virtualinvoke $r74.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r75);

        $r77 = virtualinvoke $r76.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Number of max buffers that can be used for each channel. If a channel exceeds the number of max buffers, it will make the task become unavailable, cause the back pressure and block the data processing. This might speed up checkpoint alignment by preventing excessive growth of the buffered in-flight data in case of data skew and high number of configured floating buffers. This limit is not strictly guaranteed, and can be ignored by things like flatMap operators, records spanning multiple buffers or single timer producing large amount of data.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_MAX_BUFFERS_PER_CHANNEL> = $r77;

        $r78 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.memory.exclusive-buffers-request-timeout-ms");

        $r79 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(30000L);

        $r80 = virtualinvoke $r78.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r79);

        $r81 = virtualinvoke $r80.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The timeout for requesting exclusive buffers for each channel. Since the number of maximum buffers and the number of required buffers is not the same for local buffer pools, there may be deadlock cases that the upstreamtasks have occupied all the buffers and the downstream tasks are waiting for the exclusive buffers. The timeout breaksthe tie by failing the request of exclusive buffers and ask users to increase the number of total buffers.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_EXCLUSIVE_BUFFERS_REQUEST_TIMEOUT_MILLISECONDS> = $r81;

        $r82 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.blocking-shuffle.type");

        $r83 = virtualinvoke $r82.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("file");

        $r84 = virtualinvoke $r83.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The blocking shuffle type, either \"mmap\" or \"file\". The \"auto\" means selecting the property type automatically based on system memory architecture (64 bit for mmap and 32 bit for file). Note that the memory usage of mmap is not accounted by configured memory limits, but some resource frameworks like yarn would track this memory usage and kill the container once memory exceeding some threshold. Also note that this option is experimental and might be changed future.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_BLOCKING_SHUFFLE_TYPE> = $r84;

        $r85 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.netty.num-arenas");

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r87 = virtualinvoke $r85.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r86);

        $r88 = newarray (java.lang.String)[1];

        $r88[0] = "taskmanager.net.num-arenas";

        $r89 = virtualinvoke $r87.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r88);

        $r90 = virtualinvoke $r89.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The number of Netty arenas.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NUM_ARENAS> = $r90;

        $r91 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.netty.server.numThreads");

        $r92 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r93 = virtualinvoke $r91.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r92);

        $r94 = newarray (java.lang.String)[1];

        $r94[0] = "taskmanager.net.server.numThreads";

        $r95 = virtualinvoke $r93.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r94);

        $r96 = virtualinvoke $r95.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The number of Netty server threads.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NUM_THREADS_SERVER> = $r96;

        $r97 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.netty.client.numThreads");

        $r98 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r99 = virtualinvoke $r97.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r98);

        $r100 = newarray (java.lang.String)[1];

        $r100[0] = "taskmanager.net.client.numThreads";

        $r101 = virtualinvoke $r99.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r100);

        $r102 = virtualinvoke $r101.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The number of Netty client threads.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NUM_THREADS_CLIENT> = $r102;

        $r103 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.netty.server.backlog");

        $r104 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r105 = virtualinvoke $r103.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r104);

        $r106 = newarray (java.lang.String)[1];

        $r106[0] = "taskmanager.net.server.backlog";

        $r107 = virtualinvoke $r105.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r106);

        $r108 = virtualinvoke $r107.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The netty server connection backlog.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption CONNECT_BACKLOG> = $r108;

        $r109 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.netty.client.connectTimeoutSec");

        $r110 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(120);

        $r111 = virtualinvoke $r109.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r110);

        $r112 = newarray (java.lang.String)[1];

        $r112[0] = "taskmanager.net.client.connectTimeoutSec";

        $r113 = virtualinvoke $r111.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r112);

        $r114 = virtualinvoke $r113.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The Netty client connection timeout.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption CLIENT_CONNECT_TIMEOUT_SECONDS> = $r114;

        $r115 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.retries");

        $r116 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r117 = virtualinvoke $r115.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r116);

        $r118 = newarray (java.lang.String)[1];

        $r118[0] = "taskmanager.network.retries";

        $r119 = virtualinvoke $r117.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r118);

        $r120 = virtualinvoke $r119.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The number of retry attempts for network communication. Currently it\'s only used for establishing input/output channel connections");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_RETRIES> = $r120;

        $r121 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.netty.sendReceiveBufferSize");

        $r122 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r123 = virtualinvoke $r121.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r122);

        $r124 = newarray (java.lang.String)[1];

        $r124[0] = "taskmanager.net.sendReceiveBufferSize";

        $r125 = virtualinvoke $r123.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r124);

        $r126 = virtualinvoke $r125.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The Netty send and receive buffer size. This defaults to the system buffer size (cat /proc/sys/net/ipv4/tcp_[rw]mem) and is 4 MiB in modern Linux.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption SEND_RECEIVE_BUFFER_SIZE> = $r126;

        $r127 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.netty.transport");

        $r128 = virtualinvoke $r127.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("auto");

        $r129 = newarray (java.lang.String)[1];

        $r129[0] = "taskmanager.net.transport";

        $r130 = virtualinvoke $r128.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r129);

        $r131 = virtualinvoke $r130.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The Netty transport type, either \"nio\" or \"epoll\". The \"auto\" means selecting the property mode automatically based on the platform. Note that the \"epoll\" mode can get better performance, less GC and have more advanced features which are only available on modern Linux.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption TRANSPORT_TYPE> = $r131;

        $r132 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.request-backoff.initial");

        $r133 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100);

        $r134 = virtualinvoke $r132.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r133);

        $r135 = newarray (java.lang.String)[1];

        $r135[0] = "taskmanager.net.request-backoff.initial";

        $r136 = virtualinvoke $r134.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r135);

        $r137 = virtualinvoke $r136.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Minimum backoff in milliseconds for partition requests of input channels.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_REQUEST_BACKOFF_INITIAL> = $r137;

        $r138 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("taskmanager.network.request-backoff.max");

        $r139 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10000);

        $r140 = virtualinvoke $r138.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r139);

        $r141 = newarray (java.lang.String)[1];

        $r141[0] = "taskmanager.net.request-backoff.max";

        $r142 = virtualinvoke $r140.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r141);

        $r143 = virtualinvoke $r142.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Maximum backoff in milliseconds for partition requests of input channels.");

        <org.apache.flink.configuration.NettyShuffleEnvironmentOptions: org.apache.flink.configuration.ConfigOption NETWORK_REQUEST_BACKOFF_MAX> = $r143;

        return;
    }
}
