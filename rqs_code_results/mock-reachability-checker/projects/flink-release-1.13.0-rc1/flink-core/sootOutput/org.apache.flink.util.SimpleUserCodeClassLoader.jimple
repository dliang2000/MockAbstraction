public class org.apache.flink.util.SimpleUserCodeClassLoader extends java.lang.Object implements org.apache.flink.util.UserCodeClassLoader
{
    private final java.lang.ClassLoader classLoader;

    private void <init>(java.lang.ClassLoader)
    {
        org.apache.flink.util.SimpleUserCodeClassLoader r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.apache.flink.util.SimpleUserCodeClassLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.util.SimpleUserCodeClassLoader: java.lang.ClassLoader classLoader> = r1;

        return;
    }

    public java.lang.ClassLoader asClassLoader()
    {
        org.apache.flink.util.SimpleUserCodeClassLoader r0;
        java.lang.ClassLoader $r1;

        r0 := @this: org.apache.flink.util.SimpleUserCodeClassLoader;

        $r1 = r0.<org.apache.flink.util.SimpleUserCodeClassLoader: java.lang.ClassLoader classLoader>;

        return $r1;
    }

    public void registerReleaseHookIfAbsent(java.lang.String, java.lang.Runnable)
    {
        org.apache.flink.util.SimpleUserCodeClassLoader r0;
        java.lang.String r1;
        java.lang.Runnable r2;

        r0 := @this: org.apache.flink.util.SimpleUserCodeClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Runnable;

        return;
    }

    public static org.apache.flink.util.SimpleUserCodeClassLoader create(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r0;
        org.apache.flink.util.SimpleUserCodeClassLoader $r1;

        r0 := @parameter0: java.lang.ClassLoader;

        $r1 = new org.apache.flink.util.SimpleUserCodeClassLoader;

        specialinvoke $r1.<org.apache.flink.util.SimpleUserCodeClassLoader: void <init>(java.lang.ClassLoader)>(r0);

        return $r1;
    }
}
