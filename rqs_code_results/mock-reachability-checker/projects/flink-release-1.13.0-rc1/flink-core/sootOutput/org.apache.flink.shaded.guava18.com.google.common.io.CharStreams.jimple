public final class org.apache.flink.shaded.guava18.com.google.common.io.CharStreams extends java.lang.Object
{
    private static final int BUF_SIZE;

    private void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharStreams r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharStreams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long copy(java.lang.Readable, java.lang.Appendable) throws java.io.IOException
    {
        java.lang.Readable r0;
        java.lang.Appendable r1;
        java.nio.CharBuffer r2;
        int $i0, $i1;
        long $l2, l3;

        r0 := @parameter0: java.lang.Readable;

        r1 := @parameter1: java.lang.Appendable;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(2048);

        l3 = 0L;

     label1:
        $i0 = interfaceinvoke r0.<java.lang.Readable: int read(java.nio.CharBuffer)>(r2);

        if $i0 == -1 goto label2;

        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer flip()>();

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r2);

        $i1 = virtualinvoke r2.<java.nio.CharBuffer: int remaining()>();

        $l2 = (long) $i1;

        l3 = l3 + $l2;

        virtualinvoke r2.<java.nio.CharBuffer: java.nio.Buffer clear()>();

        goto label1;

     label2:
        return l3;
    }

    public static java.lang.String toString(java.lang.Readable) throws java.io.IOException
    {
        java.lang.Readable r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Readable;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.CharStreams: java.lang.StringBuilder toStringBuilder(java.lang.Readable)>(r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static java.lang.StringBuilder toStringBuilder(java.lang.Readable) throws java.io.IOException
    {
        java.lang.Readable r0;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.Readable;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.CharStreams: long copy(java.lang.Readable,java.lang.Appendable)>(r0, $r2);

        return $r2;
    }

    public static java.util.List readLines(java.lang.Readable) throws java.io.IOException
    {
        java.lang.Readable r0;
        java.util.ArrayList $r4;
        org.apache.flink.shaded.guava18.com.google.common.io.LineReader $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Readable;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new org.apache.flink.shaded.guava18.com.google.common.io.LineReader;

        specialinvoke $r5.<org.apache.flink.shaded.guava18.com.google.common.io.LineReader: void <init>(java.lang.Readable)>(r0);

     label1:
        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.guava18.com.google.common.io.LineReader: java.lang.String readLine()>();

        if $r6 == null goto label2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r4;
    }

    public static java.lang.Object readLines(java.lang.Readable, org.apache.flink.shaded.guava18.com.google.common.io.LineProcessor) throws java.io.IOException
    {
        java.lang.Readable r0;
        org.apache.flink.shaded.guava18.com.google.common.io.LineProcessor r1;
        org.apache.flink.shaded.guava18.com.google.common.io.LineReader $r6;
        java.lang.String $r7;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @parameter0: java.lang.Readable;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.io.LineProcessor;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = new org.apache.flink.shaded.guava18.com.google.common.io.LineReader;

        specialinvoke $r6.<org.apache.flink.shaded.guava18.com.google.common.io.LineReader: void <init>(java.lang.Readable)>(r0);

     label1:
        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.guava18.com.google.common.io.LineReader: java.lang.String readLine()>();

        if $r7 == null goto label2;

        $z0 = interfaceinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.LineProcessor: boolean processLine(java.lang.String)>($r7);

        if $z0 != 0 goto label1;

        goto label2;

     label2:
        $r8 = interfaceinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.LineProcessor: java.lang.Object getResult()>();

        return $r8;
    }

    public static void skipFully(java.io.Reader, long) throws java.io.IOException
    {
        java.io.Reader r0;
        long l0, l4;
        byte $b1, $b2;
        int $i3;
        java.io.EOFException $r2;

        r0 := @parameter0: java.io.Reader;

        l4 := @parameter1: long;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

     label1:
        $b1 = l4 cmp 0L;

        if $b1 <= 0 goto label5;

        l0 = virtualinvoke r0.<java.io.Reader: long skip(long)>(l4);

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label3;

        $i3 = virtualinvoke r0.<java.io.Reader: int read()>();

        if $i3 != -1 goto label2;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;

     label2:
        l4 = l4 - 1L;

        goto label4;

     label3:
        l4 = l4 - l0;

     label4:
        goto label1;

     label5:
        return;
    }

    public static java.io.Writer nullWriter()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharStreams$NullWriter $r0;

        $r0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.CharStreams$NullWriter: org.apache.flink.shaded.guava18.com.google.common.io.CharStreams$NullWriter access$000()>();

        return $r0;
    }

    public static java.io.Writer asWriter(java.lang.Appendable)
    {
        java.lang.Appendable r0;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.io.AppendableWriter $r1;
        java.io.Writer $r2;

        r0 := @parameter0: java.lang.Appendable;

        $z0 = r0 instanceof java.io.Writer;

        if $z0 == 0 goto label1;

        $r2 = (java.io.Writer) r0;

        return $r2;

     label1:
        $r1 = new org.apache.flink.shaded.guava18.com.google.common.io.AppendableWriter;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.AppendableWriter: void <init>(java.lang.Appendable)>(r0);

        return $r1;
    }

    static java.io.Reader asReader(java.lang.Readable)
    {
        java.lang.Readable r0;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.io.CharStreams$1 $r2;
        java.io.Reader $r3;

        r0 := @parameter0: java.lang.Readable;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $z0 = r0 instanceof java.io.Reader;

        if $z0 == 0 goto label1;

        $r3 = (java.io.Reader) r0;

        return $r3;

     label1:
        $r2 = new org.apache.flink.shaded.guava18.com.google.common.io.CharStreams$1;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.io.CharStreams$1: void <init>(java.lang.Readable)>(r0);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.guava18.com.google.common.io.CharStreams: int BUF_SIZE> = 2048;

        return;
    }
}
