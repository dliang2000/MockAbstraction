public class org.mockito.internal.stubbing.answers.ThrowsException extends java.lang.Object implements org.mockito.stubbing.Answer, org.mockito.stubbing.ValidableAnswer, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.Throwable throwable;
    private final org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter filter;

    public void <init>(java.lang.Throwable)
    {
        org.mockito.internal.stubbing.answers.ThrowsException r0;
        java.lang.Throwable r1;
        org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter $r2;

        r0 := @this: org.mockito.internal.stubbing.answers.ThrowsException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;

        specialinvoke $r2.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: void <init>()>();

        r0.<org.mockito.internal.stubbing.answers.ThrowsException: org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter filter> = $r2;

        r0.<org.mockito.internal.stubbing.answers.ThrowsException: java.lang.Throwable throwable> = r1;

        return;
    }

    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable
    {
        org.mockito.internal.stubbing.answers.ThrowsException r0;
        org.mockito.invocation.InvocationOnMock r1;
        java.lang.Throwable r2, $r3, $r4, $r5, $r7, $r8;
        boolean $z0;
        org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter $r6;
        java.lang.IllegalStateException $r9;

        r0 := @this: org.mockito.internal.stubbing.answers.ThrowsException;

        r1 := @parameter0: org.mockito.invocation.InvocationOnMock;

        $r3 = r0.<org.mockito.internal.stubbing.answers.ThrowsException: java.lang.Throwable throwable>;

        if $r3 != null goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("throwable is null: you shall not call #answer if #validateFor fails!");

        throw $r9;

     label1:
        $r4 = r0.<org.mockito.internal.stubbing.answers.ThrowsException: java.lang.Throwable throwable>;

        $z0 = staticinvoke <org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r8 = r0.<org.mockito.internal.stubbing.answers.ThrowsException: java.lang.Throwable throwable>;

        throw $r8;

     label2:
        $r5 = r0.<org.mockito.internal.stubbing.answers.ThrowsException: java.lang.Throwable throwable>;

        r2 = virtualinvoke $r5.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        if r2 != null goto label3;

        $r7 = r0.<org.mockito.internal.stubbing.answers.ThrowsException: java.lang.Throwable throwable>;

        throw $r7;

     label3:
        $r6 = r0.<org.mockito.internal.stubbing.answers.ThrowsException: org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter filter>;

        virtualinvoke $r6.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: void filter(java.lang.Throwable)>(r2);

        throw r2;
    }

    public void validateFor(org.mockito.invocation.InvocationOnMock)
    {
        org.mockito.internal.stubbing.answers.ThrowsException r0;
        org.mockito.invocation.InvocationOnMock r1;
        java.lang.Throwable $r2, $r3, $r4, $r6, $r7;
        boolean $z0, $z1, $z2;
        org.mockito.internal.stubbing.answers.InvocationInfo $r5;
        org.mockito.exceptions.base.MockitoException $r8, $r9;

        r0 := @this: org.mockito.internal.stubbing.answers.ThrowsException;

        r1 := @parameter0: org.mockito.invocation.InvocationOnMock;

        $r2 = r0.<org.mockito.internal.stubbing.answers.ThrowsException: java.lang.Throwable throwable>;

        if $r2 != null goto label1;

        $r9 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException cannotStubWithNullThrowable()>();

        throw $r9;

     label1:
        $r3 = r0.<org.mockito.internal.stubbing.answers.ThrowsException: java.lang.Throwable throwable>;

        $z0 = $r3 instanceof java.lang.RuntimeException;

        if $z0 != 0 goto label2;

        $r4 = r0.<org.mockito.internal.stubbing.answers.ThrowsException: java.lang.Throwable throwable>;

        $z1 = $r4 instanceof java.lang.Error;

        if $z1 == 0 goto label3;

     label2:
        return;

     label3:
        $r5 = new org.mockito.internal.stubbing.answers.InvocationInfo;

        specialinvoke $r5.<org.mockito.internal.stubbing.answers.InvocationInfo: void <init>(org.mockito.invocation.InvocationOnMock)>(r1);

        $r6 = r0.<org.mockito.internal.stubbing.answers.ThrowsException: java.lang.Throwable throwable>;

        $z2 = virtualinvoke $r5.<org.mockito.internal.stubbing.answers.InvocationInfo: boolean isValidException(java.lang.Throwable)>($r6);

        if $z2 != 0 goto label4;

        $r7 = r0.<org.mockito.internal.stubbing.answers.ThrowsException: java.lang.Throwable throwable>;

        $r8 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException checkedExceptionInvalid(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <org.mockito.internal.stubbing.answers.ThrowsException: long serialVersionUID> = 1128820328555183980L;

        return;
    }
}
