public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ContextualDeserializer
{
    private static final long serialVersionUID;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r4;
        int $i0;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: int containedTypeCount()>();

        if $i0 == 2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing generic type information for ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer> = r4;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase)>(r1);

        $r2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer> = $r2;

        $r3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer> = $r3;

        $r4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer> = $r4;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer> = r4;

        return;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer r1, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r2, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r3, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;

        if $r4 != r1 goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        if $r5 != r3 goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;

        if $r6 != r2 goto label1;

        return r0;

     label1:
        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(r0, r1, r3, r2);

        return $r7;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Map>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, $r6, $r7, $r11;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r9, r10, r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;

        if r8 != null goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _containerType>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType containedType(int)>(0);

        r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r7, r2);

        goto label2;

     label1:
        $z0 = r8 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer) r8;

        r8 = interfaceinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1, r2);

     label2:
        r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findConvertingContentDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>(r1, r2, r9);

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _containerType>;

        r3 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType containedType(int)>(1);

        if r10 != null goto label3;

        r12 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r3, r2);

        goto label4;

     label3:
        r12 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r10, r2, r3);

     label4:
        r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;

        if r13 == null goto label5;

        r13 = virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r2);

     label5:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>(r8, r13, r12);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r1, $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _containerType>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType containedType(int)>(1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        return $r1;
    }

    public java.util.Map$Entry deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r5;
        java.lang.String r6, $r18, $r22;
        java.lang.Object r7, $r26, $r29, $r34, $r36, r42;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r9, $r10, $r11, $r12, $r14, $r24, $r31, $r32, r40, $r41, r43, r44;
        java.util.AbstractMap$SimpleEntry $r13;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.lang.Object[] $r19, $r21, $r28;
        java.lang.Class $r25;
        java.util.Map$Entry $r27, $r30, $r35, $r37;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r33;
        java.lang.Exception $r38;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r40 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r40 != $r9 goto label01;

        r40 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label03;

     label01:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if r40 == $r10 goto label03;

        $r31 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if r40 == $r31 goto label03;

        $r32 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r40 != $r32 goto label02;

        $r36 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.lang.Object _deserializeFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r37 = (java.util.Map$Entry) $r36;

        return $r37;

     label02:
        $r33 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r34 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r33, r1);

        $r35 = (java.util.Map$Entry) $r34;

        return $r35;

     label03:
        $r41 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if r40 == $r41 goto label05;

        $r24 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if r40 != $r24 goto label04;

        $r28 = newarray (java.lang.Object)[0];

        $r29 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(r0, "Cannot deserialize a Map.Entry out of empty JSON Object", $r28);

        $r30 = (java.util.Map$Entry) $r29;

        return $r30;

     label04:
        $r25 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.lang.Class handledType()>();

        $r26 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r25, r1);

        $r27 = (java.util.Map$Entry) $r26;

        return $r27;

     label05:
        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer>;

        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer>;

        r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();

        r7 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer: java.lang.Object deserializeKey(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r6, r2);

        r42 = null;

        r43 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

     label06:
        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if r43 != $r11 goto label07;

        r42 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        goto label09;

     label07:
        if r5 != null goto label08;

        r42 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        goto label09;

     label08:
        r42 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(r1, r2, r5);

     label09:
        goto label11;

     label10:
        $r38 := @caughtexception;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.lang.Object wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)>($r38, class "Ljava/util/Map$Entry;", r6);

     label11:
        r44 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if r44 == $r12 goto label14;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if r44 != $r14 goto label12;

        $r21 = newarray (java.lang.Object)[1];

        $r22 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();

        $r21[0] = $r22;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(r0, "Problem binding JSON into Map.Entry: more than one entry in JSON (second field: \'%s\')", $r21);

        goto label13;

     label12:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem binding JSON into Map.Entry: unexpected content after JSON Object entry: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(r0, $r18, $r19);

     label13:
        return null;

     label14:
        $r13 = new java.util.AbstractMap$SimpleEntry;

        specialinvoke $r13.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(r7, r42);

        return $r13;

        catch java.lang.Exception from label06 to label09 with label10;
    }

    public java.util.Map$Entry deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.util.Map$Entry) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.util.Map$Entry r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.util.Map$Entry;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot update Map.Entry values");

        throw $r4;
    }

    public java.lang.Object deserializeWithType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        $r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r4;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Object r3;
        java.util.Map$Entry $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.lang.Object;

        $r4 = (java.util.Map$Entry) r3;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.util.Map$Entry deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.util.Map$Entry)>(r1, r2, $r4);

        return $r5;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.util.Map$Entry $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: java.util.Map$Entry deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer: long serialVersionUID> = 1L;

        return;
    }
}
