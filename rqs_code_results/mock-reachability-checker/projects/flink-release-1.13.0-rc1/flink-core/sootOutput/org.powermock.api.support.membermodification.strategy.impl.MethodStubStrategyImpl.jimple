public class org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl extends java.lang.Object implements org.powermock.api.support.membermodification.strategy.MethodStubStrategy
{
    private final java.lang.reflect.Method method;

    public void <init>(java.lang.reflect.Method)
    {
        org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl r0;
        java.lang.reflect.Method r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl;

        r1 := @parameter0: java.lang.reflect.Method;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Method to stub cannot be null.");

        throw $r2;

     label1:
        r0.<org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl: java.lang.reflect.Method method> = r1;

        return;
    }

    public void andReturn(java.lang.Object)
    {
        org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl r0;
        java.lang.Object r1;

        r0 := @this: org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl: void toReturn(java.lang.Object)>(r1);

        return;
    }

    public void toThrow(java.lang.Throwable)
    {
        org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl r0;
        java.lang.Throwable r1;
        org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl$1 $r3;
        java.lang.reflect.Method $r4;

        r0 := @this: org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl;

        r1 := @parameter0: java.lang.Throwable;

        $r3 = new org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl$1;

        specialinvoke $r3.<org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl$1: void <init>(org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl,java.lang.Throwable)>(r0, r1);

        $r4 = r0.<org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl: java.lang.reflect.Method method>;

        staticinvoke <org.powermock.api.support.MethodProxy: void proxy(java.lang.reflect.Method,java.lang.reflect.InvocationHandler)>($r4, $r3);

        return;
    }

    public void toReturn(java.lang.Object)
    {
        org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl r0;
        java.lang.Object r1;
        java.lang.reflect.Method $r2;

        r0 := @this: org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl: java.lang.reflect.Method method>;

        staticinvoke <org.powermock.api.support.Stubber: void stubMethod(java.lang.reflect.Method,java.lang.Object)>($r2, r1);

        return;
    }
}
