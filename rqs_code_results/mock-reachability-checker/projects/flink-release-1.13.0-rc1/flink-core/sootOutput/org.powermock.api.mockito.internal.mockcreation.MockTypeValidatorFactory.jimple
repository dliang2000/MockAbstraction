public class org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory extends java.lang.Object
{

    public void <init>()
    {
        org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory r0;

        r0 := @this: org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.powermock.api.mockito.internal.mockcreation.MockTypeValidator createValidator(java.lang.Class, boolean, boolean, org.powermock.core.agent.JavaAgentClassRegister)
    {
        java.lang.Class r0;
        boolean z0, z1, $z2;
        org.powermock.core.agent.JavaAgentClassRegister r1;
        org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory$JavaAgentMockTypeValidator $r2;
        org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory$DefaultMockTypeValidator $r3;
        org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory$NullMockTypeValidator $r4;

        r0 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: org.powermock.core.agent.JavaAgentClassRegister;

        if z0 == 0 goto label1;

        if z1 != 0 goto label1;

        $z2 = staticinvoke <org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory: boolean isLoadedByBootstrap(java.lang.Class)>(r0);

        if $z2 == 0 goto label2;

     label1:
        $r4 = new org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory$NullMockTypeValidator;

        specialinvoke $r4.<org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory$NullMockTypeValidator: void <init>(org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory$1)>(null);

        return $r4;

     label2:
        if r1 != null goto label3;

        $r3 = new org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory$DefaultMockTypeValidator;

        specialinvoke $r3.<org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory$DefaultMockTypeValidator: void <init>(java.lang.Class)>(r0);

        return $r3;

     label3:
        $r2 = new org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory$JavaAgentMockTypeValidator;

        specialinvoke $r2.<org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory$JavaAgentMockTypeValidator: void <init>(java.lang.Class,org.powermock.core.agent.JavaAgentClassRegister,org.powermock.api.mockito.internal.mockcreation.MockTypeValidatorFactory$1)>(r0, r1, null);

        return $r2;
    }

    private static boolean isLoadedByBootstrap(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.ClassLoader $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
