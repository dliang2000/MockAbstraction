public class org.apache.flink.configuration.HighAvailabilityOptions extends java.lang.Object
{
    public static final org.apache.flink.configuration.ConfigOption HA_MODE;
    public static final org.apache.flink.configuration.ConfigOption HA_CLUSTER_ID;
    public static final org.apache.flink.configuration.ConfigOption HA_STORAGE_PATH;
    public static final org.apache.flink.configuration.ConfigOption HA_JOB_MANAGER_PORT_RANGE;
    public static final org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_QUORUM;
    public static final org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_ROOT;
    public static final org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_LATCH_PATH;
    public static final org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_JOBGRAPHS_PATH;
    public static final org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_LEADER_PATH;
    public static final org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_CHECKPOINTS_PATH;
    public static final org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH;
    public static final org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_MESOS_WORKERS_PATH;
    public static final org.apache.flink.configuration.ConfigOption ZOOKEEPER_SESSION_TIMEOUT;
    public static final org.apache.flink.configuration.ConfigOption ZOOKEEPER_CONNECTION_TIMEOUT;
    public static final org.apache.flink.configuration.ConfigOption ZOOKEEPER_RETRY_WAIT;
    public static final org.apache.flink.configuration.ConfigOption ZOOKEEPER_MAX_RETRY_ATTEMPTS;
    public static final org.apache.flink.configuration.ConfigOption ZOOKEEPER_RUNNING_JOB_REGISTRY_PATH;
    public static final org.apache.flink.configuration.ConfigOption ZOOKEEPER_CLIENT_ACL;
    public static final org.apache.flink.configuration.ConfigOption HA_JOB_DELAY;

    private void <init>()
    {
        org.apache.flink.configuration.HighAvailabilityOptions r0;

        r0 := @this: org.apache.flink.configuration.HighAvailabilityOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r0, $r5, $r10, $r15, $r28, $r33, $r38, $r43, $r48, $r53, $r58, $r63, $r71, $r77, $r83, $r89, $r95, $r97, $r100;
        org.apache.flink.configuration.ConfigOption $r1, $r3, $r4, $r6, $r8, $r9, $r11, $r13, $r14, $r17, $r19, $r22, $r27, $r29, $r31, $r32, $r34, $r36, $r37, $r39, $r41, $r42, $r44, $r46, $r47, $r49, $r51, $r52, $r54, $r56, $r57, $r59, $r61, $r62, $r64, $r66, $r70, $r73, $r75, $r76, $r79, $r81, $r82, $r85, $r87, $r88, $r91, $r93, $r94, $r96, $r98, $r99, $r101, $r103, $r104;
        java.lang.String[] $r2, $r7, $r12, $r18, $r30, $r35, $r40, $r45, $r50, $r55, $r60, $r65, $r74, $r80, $r86, $r92, $r102;
        org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder $r16;
        java.lang.StringBuilder $r20, $r21, $r24, $r25;
        java.lang.String $r23, $r26;
        org.apache.flink.configuration.description.Description$DescriptionBuilder $r67, $r68;
        org.apache.flink.configuration.description.Description $r69;
        java.lang.Integer $r72, $r78, $r84, $r90;

        $r0 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability");

        $r1 = virtualinvoke $r0.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("NONE");

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "recovery.mode";

        $r3 = virtualinvoke $r1.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r2);

        $r4 = virtualinvoke $r3.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines high-availability mode used for the cluster execution. To enable high-availability, set this mode to \"ZOOKEEPER\" or specify FQN of factory class.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_MODE> = $r4;

        $r5 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.cluster-id");

        $r6 = virtualinvoke $r5.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("/default");

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "high-availability.zookeeper.path.namespace";

        $r7[1] = "recovery.zookeeper.path.namespace";

        $r8 = virtualinvoke $r6.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r7);

        $r9 = virtualinvoke $r8.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The ID of the Flink cluster, used to separate multiple Flink clusters from each other. Needs to be set for standalone clusters but is automatically inferred in YARN and Mesos.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_CLUSTER_ID> = $r9;

        $r10 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.storageDir");

        $r11 = virtualinvoke $r10.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r12 = newarray (java.lang.String)[2];

        $r12[0] = "high-availability.zookeeper.storageDir";

        $r12[1] = "recovery.zookeeper.storageDir";

        $r13 = virtualinvoke $r11.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r12);

        $r14 = virtualinvoke $r13.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("File system path (URI) where Flink persists metadata in high-availability setups.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_STORAGE_PATH> = $r14;

        $r15 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.jobmanager.port");

        $r16 = virtualinvoke $r15.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder stringType()>();

        $r17 = virtualinvoke $r16.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("0");

        $r18 = newarray (java.lang.String)[1];

        $r18[0] = "recovery.jobmanager.port";

        $r19 = virtualinvoke $r17.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r18);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The port (range) used by the Flink Master for its RPC connections in highly-available setups. In highly-available setups, this value is used instead of \'");

        $r22 = <org.apache.flink.configuration.JobManagerOptions: org.apache.flink.configuration.ConfigOption PORT>;

        $r23 = virtualinvoke $r22.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.A value of \'0\' means that a random free port is chosen. TaskManagers discover this port through the high-availability services (leader election), so a random port or a port range works without requiring any additional means of service discovery.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = virtualinvoke $r19.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>($r26);

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_JOB_MANAGER_PORT_RANGE> = $r27;

        $r28 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.quorum");

        $r29 = virtualinvoke $r28.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r30 = newarray (java.lang.String)[1];

        $r30[0] = "recovery.zookeeper.quorum";

        $r31 = virtualinvoke $r29.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r30);

        $r32 = virtualinvoke $r31.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The ZooKeeper quorum to use, when running Flink in a high-availability mode with ZooKeeper.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_QUORUM> = $r32;

        $r33 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.path.root");

        $r34 = virtualinvoke $r33.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("/flink");

        $r35 = newarray (java.lang.String)[1];

        $r35[0] = "recovery.zookeeper.path.root";

        $r36 = virtualinvoke $r34.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r35);

        $r37 = virtualinvoke $r36.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The root path under which Flink stores its entries in ZooKeeper.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_ROOT> = $r37;

        $r38 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.path.latch");

        $r39 = virtualinvoke $r38.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("/leaderlatch");

        $r40 = newarray (java.lang.String)[1];

        $r40[0] = "recovery.zookeeper.path.latch";

        $r41 = virtualinvoke $r39.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r40);

        $r42 = virtualinvoke $r41.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the znode of the leader latch which is used to elect the leader.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_LATCH_PATH> = $r42;

        $r43 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.path.jobgraphs");

        $r44 = virtualinvoke $r43.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("/jobgraphs");

        $r45 = newarray (java.lang.String)[1];

        $r45[0] = "recovery.zookeeper.path.jobgraphs";

        $r46 = virtualinvoke $r44.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r45);

        $r47 = virtualinvoke $r46.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("ZooKeeper root path (ZNode) for job graphs");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_JOBGRAPHS_PATH> = $r47;

        $r48 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.path.leader");

        $r49 = virtualinvoke $r48.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("/leader");

        $r50 = newarray (java.lang.String)[1];

        $r50[0] = "recovery.zookeeper.path.leader";

        $r51 = virtualinvoke $r49.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r50);

        $r52 = virtualinvoke $r51.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the znode of the leader which contains the URL to the leader and the current leader session ID.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_LEADER_PATH> = $r52;

        $r53 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.path.checkpoints");

        $r54 = virtualinvoke $r53.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("/checkpoints");

        $r55 = newarray (java.lang.String)[1];

        $r55[0] = "recovery.zookeeper.path.checkpoints";

        $r56 = virtualinvoke $r54.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r55);

        $r57 = virtualinvoke $r56.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("ZooKeeper root path (ZNode) for completed checkpoints.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_CHECKPOINTS_PATH> = $r57;

        $r58 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.path.checkpoint-counter");

        $r59 = virtualinvoke $r58.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("/checkpoint-counter");

        $r60 = newarray (java.lang.String)[1];

        $r60[0] = "recovery.zookeeper.path.checkpoint-counter";

        $r61 = virtualinvoke $r59.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r60);

        $r62 = virtualinvoke $r61.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("ZooKeeper root path (ZNode) for checkpoint counters.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH> = $r62;

        $r63 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.path.mesos-workers");

        $r64 = virtualinvoke $r63.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("/mesos-workers");

        $r65 = newarray (java.lang.String)[1];

        $r65[0] = "recovery.zookeeper.path.mesos-workers";

        $r66 = virtualinvoke $r64.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r65);

        $r67 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r68 = virtualinvoke $r67.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String)>("The ZooKeeper root path for persisting the Mesos worker information.");

        $r69 = virtualinvoke $r68.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r70 = virtualinvoke $r66.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r69);

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_ZOOKEEPER_MESOS_WORKERS_PATH> = $r70;

        $r71 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.client.session-timeout");

        $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(60000);

        $r73 = virtualinvoke $r71.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r72);

        $r74 = newarray (java.lang.String)[1];

        $r74[0] = "recovery.zookeeper.client.session-timeout";

        $r75 = virtualinvoke $r73.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r74);

        $r76 = virtualinvoke $r75.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the session timeout for the ZooKeeper session in ms.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption ZOOKEEPER_SESSION_TIMEOUT> = $r76;

        $r77 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.client.connection-timeout");

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15000);

        $r79 = virtualinvoke $r77.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r78);

        $r80 = newarray (java.lang.String)[1];

        $r80[0] = "recovery.zookeeper.client.connection-timeout";

        $r81 = virtualinvoke $r79.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r80);

        $r82 = virtualinvoke $r81.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the connection timeout for ZooKeeper in ms.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption ZOOKEEPER_CONNECTION_TIMEOUT> = $r82;

        $r83 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.client.retry-wait");

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5000);

        $r85 = virtualinvoke $r83.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r84);

        $r86 = newarray (java.lang.String)[1];

        $r86[0] = "recovery.zookeeper.client.retry-wait";

        $r87 = virtualinvoke $r85.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r86);

        $r88 = virtualinvoke $r87.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the pause between consecutive retries in ms.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption ZOOKEEPER_RETRY_WAIT> = $r88;

        $r89 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.client.max-retry-attempts");

        $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r91 = virtualinvoke $r89.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r90);

        $r92 = newarray (java.lang.String)[1];

        $r92[0] = "recovery.zookeeper.client.max-retry-attempts";

        $r93 = virtualinvoke $r91.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r92);

        $r94 = virtualinvoke $r93.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the number of connection retries before the client gives up.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption ZOOKEEPER_MAX_RETRY_ATTEMPTS> = $r94;

        $r95 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.path.running-registry");

        $r96 = virtualinvoke $r95.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("/running_job_registry/");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption ZOOKEEPER_RUNNING_JOB_REGISTRY_PATH> = $r96;

        $r97 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.zookeeper.client.acl");

        $r98 = virtualinvoke $r97.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("open");

        $r99 = virtualinvoke $r98.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the ACL (open|creator) to be configured on ZK node. The configuration value can be set to \u201ccreator\u201d if the ZooKeeper server configuration has the \u201cauthProvider\u201d property mapped to use SASLAuthenticationProvider and the cluster is configured to run in secure mode (Kerberos).");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption ZOOKEEPER_CLIENT_ACL> = $r99;

        $r100 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("high-availability.job.delay");

        $r101 = virtualinvoke $r100.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r102 = newarray (java.lang.String)[1];

        $r102[0] = "recovery.job.delay";

        $r103 = virtualinvoke $r101.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r102);

        $r104 = virtualinvoke $r103.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The time before a JobManager after a fail over recovers the current jobs.");

        <org.apache.flink.configuration.HighAvailabilityOptions: org.apache.flink.configuration.ConfigOption HA_JOB_DELAY> = $r104;

        return;
    }
}
