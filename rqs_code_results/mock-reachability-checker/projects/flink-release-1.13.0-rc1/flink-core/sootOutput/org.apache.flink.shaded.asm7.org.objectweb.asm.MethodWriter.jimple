final class org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter extends org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor
{
    static final int COMPUTE_NOTHING;
    static final int COMPUTE_MAX_STACK_AND_LOCAL;
    static final int COMPUTE_MAX_STACK_AND_LOCAL_FROM_FRAMES;
    static final int COMPUTE_INSERTED_FRAMES;
    static final int COMPUTE_ALL_FRAMES;
    private static final int NA;
    private static final int[] STACK_SIZE_DELTA;
    private final org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable;
    private final int accessFlags;
    private final int nameIndex;
    private final java.lang.String name;
    private final int descriptorIndex;
    private final java.lang.String descriptor;
    private int maxStack;
    private int maxLocals;
    private final org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.Handler firstHandler;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.Handler lastHandler;
    private int lineNumberTableLength;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable;
    private int localVariableTableLength;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable;
    private int localVariableTypeTableLength;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable;
    private int stackMapTableNumberOfEntries;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstCodeAttribute;
    private final int numberOfExceptions;
    private final int[] exceptionIndexTable;
    private final int signatureIndex;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation;
    private int visibleAnnotableParameterCount;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations;
    private int invisibleAnnotableParameterCount;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector defaultValue;
    private int parametersCount;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector parameters;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute;
    private final int compute;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.Label firstBasicBlock;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock;
    private int relativeStackSize;
    private int maxRelativeStackSize;
    private int currentLocals;
    private int previousFrameOffset;
    private int[] previousFrame;
    private int[] currentFrame;
    private boolean hasSubroutines;
    private boolean hasAsmInstructions;
    private int lastBytecodeOffset;
    private int sourceOffset;
    private int sourceLength;

    void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        java.lang.String r2, r3, r4, $r7, $r11;
        java.lang.String[] r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r6;
        boolean $z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r8, $r9;
        int[] $r10, $r12;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r13;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String[];

        i1 := @parameter6: int;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor: void <init>(int)>(458752);

        $r6 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code> = $r6;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable> = r1;

        $r7 = "<init>";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label01;

        $i11 = i0 | 262144;

        goto label02;

     label01:
        $i11 = i0;

     label02:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int accessFlags> = $i11;

        $i2 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r2);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int nameIndex> = $i2;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: java.lang.String name> = r2;

        $i3 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r3);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int descriptorIndex> = $i3;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: java.lang.String descriptor> = r3;

        if r4 != null goto label03;

        $i12 = 0;

        goto label04;

     label03:
        $i12 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r4);

     label04:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int signatureIndex> = $i12;

        if r5 == null goto label07;

        $i6 = lengthof r5;

        if $i6 <= 0 goto label07;

        $i7 = lengthof r5;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions> = $i7;

        $i8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions>;

        $r10 = newarray (int)[$i8];

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] exceptionIndexTable> = $r10;

        i13 = 0;

     label05:
        $i9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions>;

        if i13 >= $i9 goto label06;

        $r12 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] exceptionIndexTable>;

        $r11 = r5[i13];

        $r13 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>($r11);

        $i10 = $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        $r12[i13] = $i10;

        i13 = i13 + 1;

        goto label05;

     label06:
        goto label08;

     label07:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions> = 0;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] exceptionIndexTable> = null;

     label08:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute> = i1;

        if i1 == 0 goto label10;

        $i4 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>(r3);

        i14 = $i4 >> 2;

        $i5 = i0 & 8;

        if $i5 == 0 goto label09;

        i14 = i14 + -1;

     label09:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals> = i14;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int currentLocals> = i14;

        $r8 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        specialinvoke $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label firstBasicBlock> = $r8;

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label firstBasicBlock>;

        virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void visitLabel(org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>($r9);

     label10:
        return;
    }

    boolean hasFrames()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        $i0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int stackMapTableNumberOfEntries>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean hasAsmInstructions()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        $z0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: boolean hasAsmInstructions>;

        return $z0;
    }

    public void visitParameter(java.lang.String, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r2, $r4, $r5, $r7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector parameters>;

        if $r2 != null goto label1;

        $r7 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector parameters> = $r7;

     label1:
        $i1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int parametersCount>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int parametersCount> = $i2;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector parameters>;

        if r1 != null goto label2;

        $i3 = 0;

        goto label3;

     label2:
        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i3 = virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r1);

     label3:
        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i3);

        virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i0);

        return;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r1, $r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        $r1 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector defaultValue> = $r1;

        $r2 = new org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector defaultValue>;

        specialinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,boolean,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r4, 0, $r3, null);

        return $r2;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        java.lang.String r1;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r2, $r4, $r5, $r7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r3, $r6;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation>;

        $r7 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r6, r1, $r5);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation> = $r7;

        return $r7;

     label1:
        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation>;

        $r4 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r3, r1, $r2);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation> = $r4;

        return $r4;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath r1;
        java.lang.String r2;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r3, $r5, $r6, $r8;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4, $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation>;

        $r8 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r7, i0, r1, r2, $r6);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation> = $r8;

        return $r8;

     label1:
        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation>;

        $r5 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r4, i0, r1, r2, $r3);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation> = $r5;

        return $r5;
    }

    public void visitAnnotableParameterCount(int, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int visibleAnnotableParameterCount> = i0;

        goto label2;

     label1:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int invisibleAnnotableParameterCount> = i0;

     label2:
        return;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r8, $r17;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] $r2, $r3, $r6, $r10, $r11, $r12, $r15, $r19;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r4, $r7, $r13, $r16;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r5, $r14;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Type[] $r9, $r18;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label2;

        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations>;

        if $r11 != null goto label1;

        $r17 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $r18 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: org.apache.flink.shaded.asm7.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($r17);

        $i2 = lengthof $r18;

        $r19 = newarray (org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)[$i2];

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations> = $r19;

     label1:
        $r15 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations>;

        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r12 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations>;

        $r13 = $r12[i0];

        $r16 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r14, r1, $r13);

        $r15[i0] = $r16;

        return $r16;

     label2:
        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations>;

        if $r2 != null goto label3;

        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $r9 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: org.apache.flink.shaded.asm7.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>($r8);

        $i1 = lengthof $r9;

        $r10 = newarray (org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)[$i1];

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations> = $r10;

     label3:
        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations>;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations>;

        $r4 = $r3[i0];

        $r7 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r5, r1, $r4);

        $r6[i0] = $r7;

        return $r7;
    }

    public void visitAttribute(org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: boolean isCodeAttribute()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstCodeAttribute>;

        r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute nextAttribute> = $r3;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstCodeAttribute> = r1;

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute nextAttribute> = $r2;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute> = r1;

     label2:
        return;
    }

    public void visitCode()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        return;
    }

    public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i31, i32, i33, i34, i35, $i36, $i37, $i38, $i39, i40, $i41, $i42, $i43, $i44, $i45;
        java.lang.Object[] r1, r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r3, $r4, $r5, $r6, $r14, $r16, $r17, $r19, $r21, $r22, $r24, $r25, $r28, $r29, $r30, $r32, $r38, $r39, $r41, $r70;
        java.lang.Object $r8, $r10, $r12, $r27, $r34, $r35, $r42, $r45;
        java.lang.Integer $r9, $r11;
        java.lang.IllegalArgumentException $r36;
        java.lang.IllegalStateException $r37;
        int[] $r40, $r44, $r47;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r43, $r46, $r52, $r58, $r65;
        java.lang.String $r48, $r51, $r64;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r49, $r54, $r56, $r59, $r66, $r68;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r50, $r53, $r55, $r57, $r61, $r62, $r63, $r67;
        org.apache.flink.shaded.asm7.org.objectweb.asm.CurrentFrame $r60;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object[];

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.Object[];

        $i3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i3 != 4 goto label01;

        return;

     label01:
        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i4 != 3 goto label04;

        $r53 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r54 = $r53.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        if $r54 != null goto label02;

        $r62 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r60 = new org.apache.flink.shaded.asm7.org.objectweb.asm.CurrentFrame;

        $r61 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        specialinvoke $r60.<org.apache.flink.shaded.asm7.org.objectweb.asm.CurrentFrame: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>($r61);

        $r62.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame> = $r60;

        $r63 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r66 = $r63.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $r65 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i27 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int accessFlags>;

        $r64 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        virtualinvoke $r66.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void setInputFrameFromDescriptor(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,java.lang.String,int)>($r65, $i27, $r64, i1);

        $r67 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r68 = $r67.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        virtualinvoke $r68.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void accept(org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter)>(r0);

        goto label30;

     label02:
        if i0 != -1 goto label03;

        $r57 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r59 = $r57.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $r58 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r59.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void setInputFrameFromApiFormat(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,java.lang.Object[],int,java.lang.Object[])>($r58, i1, r1, i2, r2);

     label03:
        $r55 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r56 = $r55.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        virtualinvoke $r56.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void accept(org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter)>(r0);

        goto label30;

     label04:
        if i0 != -1 goto label10;

        $r40 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        if $r40 != null goto label05;

        $r48 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $i25 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>($r48);

        i28 = $i25 >> 2;

        $r49 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Frame;

        $r50 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        specialinvoke $r50.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void <init>()>();

        specialinvoke $r49.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>($r50);

        $r52 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i26 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int accessFlags>;

        $r51 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        virtualinvoke $r49.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void setInputFrameFromDescriptor(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,java.lang.String,int)>($r52, $i26, $r51, i28);

        virtualinvoke $r49.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void accept(org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter)>(r0);

     label05:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int currentLocals> = i1;

        $r41 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i20 = $r41.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        i29 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int visitFrameStart(int,int,int)>($i20, i1, i2);

        i30 = 0;

     label06:
        if i30 >= i1 goto label07;

        $r47 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $i23 = i29;

        i29 = i29 + 1;

        $r46 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r45 = r1[i30];

        $i24 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: int getAbstractTypeFromApiFormat(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,java.lang.Object)>($r46, $r45);

        $r47[$i23] = $i24;

        i30 = i30 + 1;

        goto label06;

     label07:
        i31 = 0;

     label08:
        if i31 >= i2 goto label09;

        $r44 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $i21 = i29;

        i29 = i29 + 1;

        $r43 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r42 = r2[i31];

        $i22 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: int getAbstractTypeFromApiFormat(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,java.lang.Object)>($r43, $r42);

        $r44[$i21] = $i22;

        i31 = i31 + 1;

        goto label08;

     label09:
        virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void visitFrameEnd()>();

        goto label30;

     label10:
        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        if $r3 != null goto label11;

        $r38 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r38.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries> = $r38;

        $r39 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        i32 = $r39.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        goto label13;

     label11:
        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i6 = $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int previousFrameOffset>;

        $i7 = $i6 - $i5;

        i32 = $i7 - 1;

        if i32 >= 0 goto label13;

        if i0 != 3 goto label12;

        return;

     label12:
        $r37 = new java.lang.IllegalStateException;

        specialinvoke $r37.<java.lang.IllegalStateException: void <init>()>();

        throw $r37;

     label13:
        tableswitch(i0)
        {
            case 0: goto label14;
            case 1: goto label19;
            case 2: goto label22;
            case 3: goto label23;
            case 4: goto label25;
            default: goto label28;
        };

     label14:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int currentLocals> = i1;

        $r28 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $r29 = virtualinvoke $r28.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(255);

        $r30 = virtualinvoke $r29.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i32);

        virtualinvoke $r30.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i1);

        i33 = 0;

     label15:
        if i33 >= i1 goto label16;

        $r35 = r1[i33];

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putFrameType(java.lang.Object)>($r35);

        i33 = i33 + 1;

        goto label15;

     label16:
        $r32 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        virtualinvoke $r32.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i2);

        i34 = 0;

     label17:
        if i34 >= i2 goto label18;

        $r34 = r2[i34];

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putFrameType(java.lang.Object)>($r34);

        i34 = i34 + 1;

        goto label17;

     label18:
        goto label29;

     label19:
        $i17 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int currentLocals>;

        $i18 = $i17 + i1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int currentLocals> = $i18;

        $r24 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $i19 = 251 + i1;

        $r25 = virtualinvoke $r24.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>($i19);

        virtualinvoke $r25.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i32);

        i35 = 0;

     label20:
        if i35 >= i1 goto label21;

        $r27 = r1[i35];

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putFrameType(java.lang.Object)>($r27);

        i35 = i35 + 1;

        goto label20;

     label21:
        goto label29;

     label22:
        $i14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int currentLocals>;

        $i15 = $i14 - i1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int currentLocals> = $i15;

        $r21 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $i16 = 251 - i1;

        $r22 = virtualinvoke $r21.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>($i16);

        virtualinvoke $r22.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i32);

        goto label29;

     label23:
        if i32 >= 64 goto label24;

        $r19 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        virtualinvoke $r19.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(i32);

        goto label29;

     label24:
        $r16 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $r17 = virtualinvoke $r16.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(251);

        virtualinvoke $r17.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i32);

        goto label29;

     label25:
        if i32 >= 64 goto label26;

        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $i13 = 64 + i32;

        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>($i13);

        goto label27;

     label26:
        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(247);

        virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i32);

     label27:
        $r8 = r2[0];

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putFrameType(java.lang.Object)>($r8);

        goto label29;

     label28:
        $r36 = new java.lang.IllegalArgumentException;

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r36;

     label29:
        $r70 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i36 = $r70.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int previousFrameOffset> = $i36;

        $i37 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int stackMapTableNumberOfEntries>;

        $i38 = $i37 + 1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int stackMapTableNumberOfEntries> = $i38;

     label30:
        $i39 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i39 != 2 goto label35;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = i2;

        i40 = 0;

     label31:
        if i40 >= i2 goto label34;

        $r10 = r2[i40];

        $r9 = <org.apache.flink.shaded.asm7.org.objectweb.asm.Opcodes: java.lang.Integer LONG>;

        if $r10 == $r9 goto label32;

        $r12 = r2[i40];

        $r11 = <org.apache.flink.shaded.asm7.org.objectweb.asm.Opcodes: java.lang.Integer DOUBLE>;

        if $r12 != $r11 goto label33;

     label32:
        $i11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = $i12;

     label33:
        i40 = i40 + 1;

        goto label31;

     label34:
        $i9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        $i8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        if $i9 <= $i8 goto label35;

        $i10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize> = $i10;

     label35:
        $i41 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxStack>;

        $i42 = staticinvoke <java.lang.Math: int max(int,int)>($i41, i2);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxStack> = $i42;

        $i43 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals>;

        $i44 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int currentLocals>;

        $i45 = staticinvoke <java.lang.Math: int max(int,int)>($i43, $i44);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals> = $i45;

        return;
    }

    public void visitInsn(int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r1, $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r4, $r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r6;
        int[] $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i2 = $r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i2;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(i0);

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r4 == null goto label7;

        $i3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i3 == 4 goto label1;

        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i4 != 3 goto label2;

     label1:
        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r6 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(i0, 0, null, null);

        goto label4;

     label2:
        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        $r7 = <org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] STACK_SIZE_DELTA>;

        $i5 = $r7[i0];

        i1 = $i6 + $i5;

        $i7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        if i1 <= $i7 goto label3;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize> = i1;

     label3:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = i1;

     label4:
        if i0 < 172 goto label5;

        if i0 <= 177 goto label6;

     label5:
        if i0 != 191 goto label7;

     label6:
        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void endCurrentBasicBlockWithNoSuccessor()>();

     label7:
        return;
    }

    public void visitIntInsn(int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r1, $r2, $r7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r4, $r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r6;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i3 = $r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i3;

        if i0 != 17 goto label1;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put12(int,int)>(i0, i1);

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put11(int,int)>(i0, i1);

     label2:
        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r4 == null goto label6;

        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i4 == 4 goto label3;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i5 != 3 goto label4;

     label3:
        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r6 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(i0, i1, null, null);

        goto label6;

     label4:
        if i0 == 188 goto label6;

        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        i2 = $i6 + 1;

        $i7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        if i2 <= $i7 goto label5;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize> = i2;

     label5:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = i2;

     label6:
        return;
    }

    public void visitVarInsn(int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i13, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, $i23, i24;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r1, $r2, $r11, $r12, $r14;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Handler $r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r5, $r6, $r9, $r10, $r16;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r7;
        int[] $r8;
        short $s10, $s11, $s12, $s14;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i2 = $r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i2;

        if i1 >= 4 goto label03;

        if i0 == 169 goto label03;

        if i0 >= 54 goto label01;

        $i18 = i0 - 21;

        $i19 = $i18 << 2;

        $i20 = 26 + $i19;

        i21 = $i20 + i1;

        goto label02;

     label01:
        $i15 = i0 - 54;

        $i16 = $i15 << 2;

        $i17 = 59 + $i16;

        i21 = $i17 + i1;

     label02:
        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(i21);

        goto label05;

     label03:
        if i1 < 256 goto label04;

        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(196);

        virtualinvoke $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put12(int,int)>(i0, i1);

        goto label05;

     label04:
        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put11(int,int)>(i0, i1);

     label05:
        $r16 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r16 == null goto label10;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i5 == 4 goto label06;

        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i6 != 3 goto label07;

     label06:
        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r7 = $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(i0, i1, null, null);

        goto label10;

     label07:
        if i0 != 169 goto label08;

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $s10 = $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s11 = $s10 | 64;

        $s12 = (short) $s11;

        $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags> = $s12;

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $i13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        $s14 = (short) $i13;

        $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short outputStackSize> = $s14;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void endCurrentBasicBlockWithNoSuccessor()>();

        goto label10;

     label08:
        $i8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        $r8 = <org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] STACK_SIZE_DELTA>;

        $i7 = $r8[i0];

        i22 = $i8 + $i7;

        $i9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        if i22 <= $i9 goto label09;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize> = i22;

     label09:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = i22;

     label10:
        $i23 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i23 == 0 goto label14;

        if i0 == 22 goto label11;

        if i0 == 24 goto label11;

        if i0 == 55 goto label11;

        if i0 != 57 goto label12;

     label11:
        i24 = i1 + 2;

        goto label13;

     label12:
        i24 = i1 + 1;

     label13:
        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals>;

        if i24 <= $i4 goto label14;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals> = i24;

     label14:
        if i0 < 54 goto label15;

        $i3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i3 != 4 goto label15;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler firstHandler>;

        if $r4 == null goto label15;

        $r5 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        specialinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void <init>()>();

        virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void visitLabel(org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>($r5);

     label15:
        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r3, $r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4, $r9;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r7, $r8;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r10;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i2 = $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i2;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        r2 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r1);

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i3 = r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put12(int,int)>(i0, $i3);

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r7 == null goto label4;

        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i4 == 4 goto label1;

        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i6 != 3 goto label2;

     label1:
        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r10 = $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset>;

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(i0, $i5, r2, $r9);

        goto label4;

     label2:
        if i0 != 187 goto label4;

        $i7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        i1 = $i7 + 1;

        $i8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        if i1 <= $i8 goto label3;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize> = i1;

     label3:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = i1;

     label4:
        return;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11, $i15;
        java.lang.String r1, r2, r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol r4;
        char c1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r5, $r7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r6, $r11;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r9, $r10;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r12;
        byte $b10, $b12, $b13, $b14;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i2 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i2;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        r4 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantFieldref(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i3 = r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put12(int,int)>(i0, $i3);

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r9 == null goto label21;

        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i4 == 4 goto label01;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i5 != 3 goto label02;

     label01:
        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r12 = $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(i0, 0, r4, $r11);

        goto label21;

     label02:
        c1 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        tableswitch(i0)
        {
            case 178: goto label03;
            case 179: goto label07;
            case 180: goto label11;
            case 181: goto label15;
            default: goto label15;
        };

     label03:
        $i8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        if c1 == 68 goto label04;

        if c1 != 74 goto label05;

     label04:
        $b10 = 2;

        goto label06;

     label05:
        $b10 = 1;

     label06:
        i11 = $i8 + $b10;

        goto label19;

     label07:
        $i7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        if c1 == 68 goto label08;

        if c1 != 74 goto label09;

     label08:
        $b12 = -2;

        goto label10;

     label09:
        $b12 = -1;

     label10:
        i11 = $i7 + $b12;

        goto label19;

     label11:
        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        if c1 == 68 goto label12;

        if c1 != 74 goto label13;

     label12:
        $b13 = 1;

        goto label14;

     label13:
        $b13 = 0;

     label14:
        i11 = $i6 + $b13;

        goto label19;

     label15:
        $i9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        if c1 == 68 goto label16;

        if c1 != 74 goto label17;

     label16:
        $b14 = -3;

        goto label18;

     label17:
        $b14 = -2;

     label18:
        i11 = $i9 + $b14;

     label19:
        $i15 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        if i11 <= $i15 goto label20;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize> = i11;

     label20:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = i11;

     label21:
        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        java.lang.String r1, r2, r3;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r5, $r7, $r13, $r14;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r6, $r11;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r9, $r10;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r12;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i3 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i3;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        r4 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantMethodref(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, z0);

        if i0 != 185 goto label1;

        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i13 = r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put12(int,int)>(185, $i13);

        $i14 = virtualinvoke r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int getArgumentsAndReturnSizes()>();

        $i15 = $i14 >> 2;

        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put11(int,int)>($i15, 0);

        goto label2;

     label1:
        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i4 = r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put12(int,int)>(i0, $i4);

     label2:
        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r9 == null goto label8;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i5 == 4 goto label3;

        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i6 != 3 goto label4;

     label3:
        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r12 = $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(i0, 0, r4, $r11);

        goto label8;

     label4:
        i1 = virtualinvoke r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int getArgumentsAndReturnSizes()>();

        $i8 = i1 & 3;

        $i7 = i1 >> 2;

        i2 = $i8 - $i7;

        if i0 != 184 goto label5;

        $i11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        $i12 = $i11 + i2;

        i16 = $i12 + 1;

        goto label6;

     label5:
        $i9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        i16 = $i9 + i2;

     label6:
        $i10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        if i16 <= $i10 goto label7;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize> = i16;

     label7:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = i16;

     label8:
        return;
    }

    public transient void visitInvokeDynamicInsn(java.lang.String, java.lang.String, org.apache.flink.shaded.asm7.org.objectweb.asm.Handle, java.lang.Object[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        java.lang.String r1, r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Handle r3;
        java.lang.Object[] r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol r5;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r6, $r8, $r10;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r7, $r14;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r12, $r13;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r15;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.asm7.org.objectweb.asm.Handle;

        r4 := @parameter3: java.lang.Object[];

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i3 = $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i3;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        r5 = virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantInvokeDynamic(java.lang.String,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.Handle,java.lang.Object[])>(r1, r2, r3, r4);

        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i4 = r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put12(int,int)>(186, $i4);

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(0);

        $r12 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r12 == null goto label4;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i5 == 4 goto label1;

        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i6 != 3 goto label2;

     label1:
        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r15 = $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r15.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(186, 0, r5, $r14);

        goto label4;

     label2:
        i0 = virtualinvoke r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int getArgumentsAndReturnSizes()>();

        $i8 = i0 & 3;

        $i7 = i0 >> 2;

        $i9 = $i8 - $i7;

        i1 = $i9 + 1;

        $i10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        i2 = $i10 + i1;

        $i11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        if i2 <= $i11 goto label3;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize> = i2;

     label3:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = i2;

     label4:
        return;
    }

    public void visitJumpInsn(int, org.apache.flink.shaded.asm7.org.objectweb.asm.Label)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i22, $i23, $i27, $i28, $i29, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label r1, $r8, $r9, $r11, $r13, $r15, $r16, $r34, r35;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r2, $r3, $r5, $r6, $r17, $r19, $r20, $r21, $r22, $r24, $r26, $r28, $r30, $r32, $r33;
        short $s3, $s4, $s14, $s15, $s16, $s17, $s18, $s19, $s20, $s21, $s24, $s25, $s26, $s30, $s31, $s32;
        int[] $r7, $r10;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r12, $r14;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i2 = $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i2;

        if i0 < 200 goto label01;

        $i40 = i0 - 33;

        goto label02;

     label01:
        $i40 = i0;

     label02:
        i1 = $i40;

        z0 = 0;

        $s3 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s4 = $s3 & 4;

        if $s4 == 0 goto label08;

        $i36 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $r21 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i35 = $r21.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i37 = $i36 - $i35;

        if $i37 >= -32768 goto label08;

        if $i40 != 167 goto label03;

        $r30 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r30.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(200);

        goto label07;

     label03:
        if $i40 != 168 goto label04;

        $r28 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r28.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(201);

        goto label07;

     label04:
        $r22 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        if $i40 < 198 goto label05;

        $i41 = $i40 ^ 1;

        goto label06;

     label05:
        $i38 = $i40 + 1;

        $i39 = $i38 ^ 1;

        $i41 = $i39 - 1;

     label06:
        virtualinvoke $r22.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>($i41);

        $r24 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r24.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(8);

        $r26 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r26.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(220);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: boolean hasAsmInstructions> = 1;

        z0 = 1;

     label07:
        $r32 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r33 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i42 = $r33.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i43 = $i42 - 1;

        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void put(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector,int,boolean)>($r32, $i43, 1);

        goto label10;

     label08:
        if i1 == i0 goto label09;

        $r17 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r17.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(i0);

        $r20 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r19 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i33 = $r19.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i34 = $i33 - 1;

        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void put(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector,int,boolean)>($r20, $i34, 1);

        goto label10;

     label09:
        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(i1);

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i5 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i6 = $i5 - 1;

        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void put(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector,int,boolean)>($r6, $i6, 0);

     label10:
        $r34 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r34 == null goto label19;

        r35 = null;

        $i7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i7 != 4 goto label11;

        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r14 = $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(i1, 0, null, null);

        $r15 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label getCanonicalInstance()>();

        $s30 = $r15.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s31 = $s30 | 2;

        $s32 = (short) $s31;

        $r15.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags> = $s32;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void addSuccessorToCurrentBasicBlock(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>(0, r1);

        if i1 == 167 goto label16;

        $r16 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        specialinvoke $r16.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void <init>()>();

        r35 = $r16;

        goto label16;

     label11:
        $i8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i8 != 3 goto label12;

        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r12 = $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        virtualinvoke $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(i1, 0, null, null);

        goto label16;

     label12:
        $i9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i9 != 2 goto label13;

        $i28 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        $r10 = <org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] STACK_SIZE_DELTA>;

        $i27 = $r10[i1];

        $i29 = $i28 + $i27;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = $i29;

        goto label16;

     label13:
        if i1 != 168 goto label15;

        $s17 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s18 = $s17 & 32;

        if $s18 != 0 goto label14;

        $s24 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s25 = $s24 | 32;

        $s26 = (short) $s25;

        r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags> = $s26;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: boolean hasSubroutines> = 1;

     label14:
        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $s19 = $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s20 = $s19 | 16;

        $s21 = (short) $s20;

        $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags> = $s21;

        $i22 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        $i23 = $i22 + 1;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void addSuccessorToCurrentBasicBlock(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>($i23, r1);

        $r9 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        specialinvoke $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void <init>()>();

        r35 = $r9;

        goto label16;

     label15:
        $i11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        $r7 = <org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] STACK_SIZE_DELTA>;

        $i10 = $r7[i1];

        $i12 = $i11 + $i10;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = $i12;

        $i13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void addSuccessorToCurrentBasicBlock(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>($i13, r1);

     label16:
        if r35 == null goto label18;

        if z0 == 0 goto label17;

        $s14 = r35.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s15 = $s14 | 2;

        $s16 = (short) $s15;

        r35.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags> = $s16;

     label17:
        virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void visitLabel(org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>(r35);

     label18:
        if i1 != 167 goto label19;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void endCurrentBasicBlockWithNoSuccessor()>();

     label19:
        return;
    }

    public void visitLabel(org.apache.flink.shaded.asm7.org.objectweb.asm.Label)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label r1, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r2, $r3;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i17, $i18;
        byte[] $r4;
        boolean $z0, $z1, $z2;
        short $s1, $s2, $s8, $s12, $s13, $s14, $s15, $s16, $s19, $s20, $s21, $s22, $s23;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r12, $r15, $r20, $r25;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        $z0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: boolean hasAsmInstructions>;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r4 = $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i0 = $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: boolean resolve(byte[],int)>($r4, $i0);

        $z2 = $z0 | $z1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: boolean hasAsmInstructions> = $z2;

        $s1 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s2 = $s1 & 1;

        if $s2 == 0 goto label01;

        return;

     label01:
        $i3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i3 != 4 goto label06;

        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r13 == null goto label03;

        $i18 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $r22 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $i17 = $r22.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        if $i18 != $i17 goto label02;

        $r23 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $s21 = $r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s19 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s20 = $s19 & 2;

        $s22 = $s21 | $s20;

        $s23 = (short) $s22;

        $r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags> = $s23;

        $r24 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r25 = $r24.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame> = $r25;

        return;

     label02:
        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void addSuccessorToCurrentBasicBlock(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>(0, r1);

     label03:
        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock>;

        if $r14 == null goto label05;

        $i11 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $r16 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock>;

        $i10 = $r16.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        if $i11 != $i10 goto label04;

        $r18 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock>;

        $s14 = $r18.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s12 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s13 = $s12 & 2;

        $s15 = $s14 | $s13;

        $s16 = (short) $s15;

        $r18.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags> = $s16;

        $r19 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock>;

        $r20 = $r19.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame> = $r20;

        $r21 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock> = $r21;

        return;

     label04:
        $r17 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock>;

        $r17.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextBasicBlock> = r1;

     label05:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock> = r1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock> = r1;

        $r15 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Frame;

        specialinvoke $r15.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>(r1);

        r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame> = $r15;

        goto label12;

     label06:
        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i4 != 3 goto label08;

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r10 != null goto label07;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock> = r1;

        goto label12;

     label07:
        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r12 = $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: org.apache.flink.shaded.asm7.org.objectweb.asm.Label owner> = r1;

        goto label12;

     label08:
        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i5 != 1 goto label11;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r6 == null goto label09;

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $i7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        $s8 = (short) $i7;

        $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short outputStackMax> = $s8;

        $i9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void addSuccessorToCurrentBasicBlock(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>($i9, r1);

     label09:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock> = r1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = 0;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize> = 0;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock>;

        if $r7 == null goto label10;

        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock>;

        $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextBasicBlock> = r1;

     label10:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock> = r1;

        goto label12;

     label11:
        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i6 != 2 goto label12;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r5 != null goto label12;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock> = r1;

     label12:
        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        java.lang.Object r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol r2;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0, $z1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r3, $r5, $r10, $r12;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4, $r8;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r7, $r15;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r9;
        java.lang.String $r14;
        char $c11;
        byte $b12;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i3 = $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i3;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        r2 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstant(java.lang.Object)>(r1);

        i0 = r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        $i4 = r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int tag>;

        if $i4 == 5 goto label01;

        $i9 = r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int tag>;

        if $i9 == 6 goto label01;

        $i10 = r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int tag>;

        if $i10 != 17 goto label02;

        $r14 = r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: java.lang.String value>;

        $c11 = virtualinvoke $r14.<java.lang.String: char charAt(int)>(0);

        if $c11 == 74 goto label01;

        if $c11 != 68 goto label02;

     label01:
        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        z0 = $z1;

        if $z1 == 0 goto label04;

        $r12 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put12(int,int)>(20, i0);

        goto label06;

     label04:
        if i0 < 256 goto label05;

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put12(int,int)>(19, i0);

        goto label06;

     label05:
        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put11(int,int)>(18, i0);

     label06:
        $r15 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r15 == null goto label12;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i5 == 4 goto label07;

        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i6 != 3 goto label08;

     label07:
        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r9 = $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(18, 0, r2, $r8);

        goto label12;

     label08:
        $i7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        if z0 == 0 goto label09;

        $b12 = 2;

        goto label10;

     label09:
        $b12 = 1;

     label10:
        i2 = $i7 + $b12;

        $i8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        if i2 <= $i8 goto label11;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize> = i2;

     label11:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = i2;

     label12:
        return;
    }

    public void visitIincInsn(int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r1, $r6, $r7, $r9, $r10, $r11;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r3, $r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r5;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i3 = $r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i3;

        if i0 > 255 goto label1;

        if i1 > 127 goto label1;

        if i1 >= -128 goto label2;

     label1:
        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(196);

        $r11 = virtualinvoke $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put12(int,int)>(132, i0);

        virtualinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i1);

        goto label3;

     label2:
        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(132);

        virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put11(int,int)>(i0, i1);

     label3:
        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r3 == null goto label5;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i5 == 4 goto label4;

        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i6 != 3 goto label5;

     label4:
        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r5 = $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(132, i0, null, null);

     label5:
        $i7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i7 == 0 goto label6;

        i2 = i0 + 1;

        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals>;

        if i2 <= $i4 goto label6;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals> = i2;

     label6:
        return;
    }

    public transient void visitTableSwitchInsn(int, int, org.apache.flink.shaded.asm7.org.objectweb.asm.Label, org.apache.flink.shaded.asm7.org.objectweb.asm.Label[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label r1, r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label[] r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r14;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        r2 := @parameter3: org.apache.flink.shaded.asm7.org.objectweb.asm.Label[];

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i3 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i3;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(170);

        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i4 = $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i5 = $i4 % 4;

        $i6 = 4 - $i5;

        $i7 = $i6 % 4;

        virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(null, 0, $i7);

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset>;

        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void put(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector,int,boolean)>($r10, $i8, 1);

        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(i0);

        virtualinvoke $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(i1);

        i2 = lengthof r2;

        i10 = 0;

     label1:
        if i10 >= i2 goto label2;

        r4 = r2[i10];

        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset>;

        virtualinvoke r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void put(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector,int,boolean)>($r14, $i9, 1);

        i10 = i10 + 1;

        goto label1;

     label2:
        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void visitSwitchInsn(org.apache.flink.shaded.asm7.org.objectweb.asm.Label,org.apache.flink.shaded.asm7.org.objectweb.asm.Label[])>(r1, r2);

        return;
    }

    public void visitLookupSwitchInsn(org.apache.flink.shaded.asm7.org.objectweb.asm.Label, int[], org.apache.flink.shaded.asm7.org.objectweb.asm.Label[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label r1, $r15;
        int[] r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label[] r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        r2 := @parameter1: int[];

        r3 := @parameter2: org.apache.flink.shaded.asm7.org.objectweb.asm.Label[];

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i0 = $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i0;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(171);

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i1 = $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i2 = $i1 % 4;

        $i3 = 4 - $i2;

        $i4 = $i3 % 4;

        virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>(null, 0, $i4);

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset>;

        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void put(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector,int,boolean)>($r9, $i5, 1);

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i6 = lengthof r3;

        virtualinvoke $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i6);

        i10 = 0;

     label1:
        $i7 = lengthof r3;

        if i10 >= $i7 goto label2;

        $r12 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i8 = r2[i10];

        virtualinvoke $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i8);

        $r15 = r3[i10];

        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset>;

        virtualinvoke $r15.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void put(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector,int,boolean)>($r14, $i9, 1);

        i10 = i10 + 1;

        goto label1;

     label2:
        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void visitSwitchInsn(org.apache.flink.shaded.asm7.org.objectweb.asm.Label,org.apache.flink.shaded.asm7.org.objectweb.asm.Label[])>(r1, r3);

        return;
    }

    private void visitSwitchInsn(org.apache.flink.shaded.asm7.org.objectweb.asm.Label, org.apache.flink.shaded.asm7.org.objectweb.asm.Label[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label r1, $r3, $r4, $r6, $r7, r9, r11;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label[] r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i12, i13, i14, i15;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r5;
        short $s6, $s7, $s8, $s9, $s10, $s11;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        r2 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.Label[];

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r3 == null goto label6;

        $i0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i0 != 4 goto label3;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r5 = $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(171, 0, null, null);

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void addSuccessorToCurrentBasicBlock(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>(0, r1);

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label getCanonicalInstance()>();

        $s6 = $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s7 = $s6 | 2;

        $s8 = (short) $s7;

        $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags> = $s8;

        i12 = lengthof r2;

        i13 = 0;

     label1:
        if i13 >= i12 goto label2;

        r9 = r2[i13];

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void addSuccessorToCurrentBasicBlock(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>(0, r9);

        $r7 = virtualinvoke r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label getCanonicalInstance()>();

        $s9 = $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s10 = $s9 | 2;

        $s11 = (short) $s10;

        $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags> = $s11;

        i13 = i13 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        $i1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i1 != 1 goto label5;

        $i2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        $i3 = $i2 - 1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = $i3;

        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void addSuccessorToCurrentBasicBlock(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>($i4, r1);

        i14 = lengthof r2;

        i15 = 0;

     label4:
        if i15 >= i14 goto label5;

        r11 = r2[i15];

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void addSuccessorToCurrentBasicBlock(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>($i5, r11);

        i15 = i15 + 1;

        goto label4;

     label5:
        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void endCurrentBasicBlockWithNoSuccessor()>();

     label6:
        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r3, $r5, $r6;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4, $r10;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r8, $r9;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r11;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i1 = $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset> = $i1;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        r2 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r1);

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i2 = r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector put12(int,int)>(197, $i2);

        virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(i0);

        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        if $r8 == null goto label3;

        $i3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i3 == 4 goto label1;

        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i4 != 3 goto label2;

     label1:
        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r11 = $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void execute(int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol,org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>(197, i0, r2, $r10);

        goto label3;

     label2:
        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize>;

        $i5 = 1 - i0;

        $i7 = $i6 + $i5;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int relativeStackSize> = $i7;

     label3:
        return;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int, org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath r1;
        java.lang.String r2;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r3, $r5, $r6, $r8;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4, $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i7 = i0 & -16776961;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset>;

        $i6 = $i5 << 8;

        $i8 = $i7 | $i6;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation>;

        $r8 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r7, $i8, r1, r2, $r6);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation> = $r8;

        return $r8;

     label1:
        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i3 = i0 & -16776961;

        $i1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lastBytecodeOffset>;

        $i2 = $i1 << 8;

        $i4 = $i3 | $i2;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation>;

        $r5 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r4, $i4, r1, r2, $r3);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation> = $r5;

        return $r5;
    }

    public void visitTryCatchBlock(org.apache.flink.shaded.asm7.org.objectweb.asm.Label, org.apache.flink.shaded.asm7.org.objectweb.asm.Label, org.apache.flink.shaded.asm7.org.objectweb.asm.Label, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label r1, r2, r3;
        java.lang.String r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Handler $r6, $r7, $r8;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r9;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r10;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        r2 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        r3 := @parameter2: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        r4 := @parameter3: java.lang.String;

        $r6 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Handler;

        if r4 == null goto label1;

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r4);

        $i0 = $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        specialinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.Label,org.apache.flink.shaded.asm7.org.objectweb.asm.Label,org.apache.flink.shaded.asm7.org.objectweb.asm.Label,int,java.lang.String)>(r1, r2, r3, $i0, r4);

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler firstHandler>;

        if $r7 != null goto label3;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler firstHandler> = $r6;

        goto label4;

     label3:
        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler lastHandler>;

        $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler nextHandler> = $r6;

     label4:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler lastHandler> = $r6;

        return;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int, org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath r1;
        java.lang.String r2;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r3, $r5, $r6, $r8;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4, $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation>;

        $r8 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r7, i0, r1, r2, $r6);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation> = $r8;

        return $r8;

     label1:
        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation>;

        $r5 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r4, i0, r1, r2, $r3);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation> = $r5;

        return $r5;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, org.apache.flink.shaded.asm7.org.objectweb.asm.Label, org.apache.flink.shaded.asm7.org.objectweb.asm.Label, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        java.lang.String r1, r2, r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label r4, r5;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        char c1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r6, $r7, $r8, $r10, $r12, $r14, $r16, $r17, $r18, $r19, $r21, $r23, $r25, $r27;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r9, $r11, $r20, $r22;
        byte $b22;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        r5 := @parameter4: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        i0 := @parameter5: int;

        if r3 == null goto label2;

        $r16 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable>;

        if $r16 != null goto label1;

        $r25 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r25.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable> = $r25;

     label1:
        $i14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int localVariableTypeTableLength>;

        $i15 = $i14 + 1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int localVariableTypeTableLength> = $i15;

        $r17 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable>;

        $i16 = r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $r18 = virtualinvoke $r17.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i16);

        $i18 = r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $i17 = r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $i19 = $i18 - $i17;

        $r19 = virtualinvoke $r18.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i19);

        $r20 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i20 = virtualinvoke $r20.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r1);

        $r21 = virtualinvoke $r19.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i20);

        $r22 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i21 = virtualinvoke $r22.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r3);

        $r23 = virtualinvoke $r21.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i21);

        virtualinvoke $r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i0);

     label2:
        $r27 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable>;

        if $r27 != null goto label3;

        $r14 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable> = $r14;

     label3:
        $i3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int localVariableTableLength>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int localVariableTableLength> = $i4;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable>;

        $i5 = r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i5);

        $i7 = r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $i6 = r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $i8 = $i7 - $i6;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i8);

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i9 = virtualinvoke $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r1);

        $r10 = virtualinvoke $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i9);

        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i10 = virtualinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r2);

        $r12 = virtualinvoke $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i10);

        virtualinvoke $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i0);

        $i11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i11 == 0 goto label7;

        c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if c1 == 74 goto label4;

        if c1 != 68 goto label5;

     label4:
        $b22 = 2;

        goto label6;

     label5:
        $b22 = 1;

     label6:
        i2 = i0 + $b22;

        $i12 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals>;

        if i2 <= $i12 goto label7;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals> = i2;

     label7:
        return;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int, org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath, org.apache.flink.shaded.asm7.org.objectweb.asm.Label[], org.apache.flink.shaded.asm7.org.objectweb.asm.Label[], int[], java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label[] r2, r3;
        int[] r4;
        java.lang.String r5;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r7, $r8, $r11, $r20, $r23;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r10, $r15, $r18;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r13, $r14, $r16, $r17;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r19, $r21, $r22;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath;

        r2 := @parameter2: org.apache.flink.shaded.asm7.org.objectweb.asm.Label[];

        r3 := @parameter3: org.apache.flink.shaded.asm7.org.objectweb.asm.Label[];

        r4 := @parameter4: int[];

        r5 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        $r7 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        $i1 = i0 >>> 24;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>($i1);

        $i2 = lengthof r2;

        virtualinvoke $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i2);

        i10 = 0;

     label1:
        $i3 = lengthof r2;

        if i10 >= $i3 goto label2;

        $r19 = r2[i10];

        $i5 = $r19.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $r20 = virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i5);

        $r21 = r3[i10];

        $i7 = $r21.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $r22 = r2[i10];

        $i6 = $r22.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        $i8 = $i7 - $i6;

        $r23 = virtualinvoke $r20.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i8);

        $i9 = r4[i10];

        virtualinvoke $r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i9);

        i10 = i10 + 1;

        goto label1;

     label2:
        staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath: void put(org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>(r1, $r7);

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i4 = virtualinvoke $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r5);

        $r11 = virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i4);

        virtualinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(0);

        if z0 == 0 goto label3;

        $r16 = new org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter;

        $r18 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r17 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation>;

        specialinvoke $r16.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,boolean,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r18, 1, $r7, $r17);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation> = $r16;

        return $r16;

     label3:
        $r13 = new org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter;

        $r15 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation>;

        specialinvoke $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,boolean,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r15, 1, $r7, $r14);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation> = $r13;

        return $r13;
    }

    public void visitLineNumber(int, org.apache.flink.shaded.asm7.org.objectweb.asm.Label)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, $i1, $i2, $i3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r2, $r3, $r5, $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable>;

        if $r2 != null goto label1;

        $r7 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable> = $r7;

     label1:
        $i1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lineNumberTableLength>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lineNumberTableLength> = $i2;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable>;

        $i3 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i3);

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable>;

        virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i0);

        return;
    }

    public void visitMaxs(int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i2 != 4 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void computeAllFrames()>();

        goto label4;

     label1:
        $i3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i3 != 1 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void computeMaxStackAndLocal()>();

        goto label4;

     label2:
        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i4 != 2 goto label3;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxStack> = $i5;

        goto label4;

     label3:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxStack> = i0;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals> = i1;

     label4:
        return;
    }

    private void computeAllFrames()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r1, $r4, $r5, $r17, $r21, $r24, $r25, $r26, r33, r34, r35, r37, r38, r40, r41, r42;
        int $i0, $i1, $i6, $i10, $i12, i16, i17, i18, i19, $i20, i21, i22, i23;
        java.lang.String $r2, $r22, $r31;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r3, $r8, $r19, $r23;
        short $s2, $s3, $s4, $s5, $s7, $s8, $s9, $s11, $s13, $s14, $s15;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r6, $r12, $r14;
        byte[] $r7, $r13;
        int[] $r9;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Handler $r10, $r11, r30;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r15, $r16, $r18, $r20, r36;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Edge $r27, $r28, r39;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r30 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler firstHandler>;

     label01:
        if r30 == null goto label06;

        $r22 = r30.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: java.lang.String catchTypeDescriptor>;

        if $r22 != null goto label02;

        $r31 = "java/lang/Throwable";

        goto label03;

     label02:
        $r31 = r30.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: java.lang.String catchTypeDescriptor>;

     label03:
        $r23 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        i16 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: int getAbstractTypeFromInternalName(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,java.lang.String)>($r23, $r31);

        $r24 = r30.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: org.apache.flink.shaded.asm7.org.objectweb.asm.Label handlerPc>;

        r33 = virtualinvoke $r24.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label getCanonicalInstance()>();

        $s13 = r33.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s14 = $s13 | 2;

        $s15 = (short) $s14;

        r33.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags> = $s15;

        $r25 = r30.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: org.apache.flink.shaded.asm7.org.objectweb.asm.Label startPc>;

        r34 = virtualinvoke $r25.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label getCanonicalInstance()>();

        $r26 = r30.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: org.apache.flink.shaded.asm7.org.objectweb.asm.Label endPc>;

        r35 = virtualinvoke $r26.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label getCanonicalInstance()>();

     label04:
        if r34 == r35 goto label05;

        $r27 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Edge;

        $r28 = r34.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges>;

        specialinvoke $r27.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: void <init>(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label,org.apache.flink.shaded.asm7.org.objectweb.asm.Edge)>(i16, r33, $r28);

        r34.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges> = $r27;

        r34 = r34.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextBasicBlock>;

        goto label04;

     label05:
        r30 = r30.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler nextHandler>;

        goto label01;

     label06:
        $r1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label firstBasicBlock>;

        r36 = $r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int accessFlags>;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $i0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals>;

        virtualinvoke r36.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void setInputFrameFromDescriptor(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,java.lang.String,int)>($r3, $i1, $r2, $i0);

        virtualinvoke r36.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void accept(org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter)>(r0);

        r37 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label firstBasicBlock>;

        $r4 = <org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label EMPTY_LIST>;

        r37.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextListElement> = $r4;

        i17 = 0;

     label07:
        $r5 = <org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label EMPTY_LIST>;

        if r37 == $r5 goto label12;

        r38 = r37;

        r37 = r37.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextListElement>;

        r38.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextListElement> = null;

        $s7 = r38.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s8 = $s7 | 8;

        $s9 = (short) $s8;

        r38.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags> = $s9;

        $r16 = r38.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $i10 = virtualinvoke $r16.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: int getInputStackSize()>();

        $s11 = r38.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short outputStackMax>;

        i18 = $i10 + $s11;

        if i18 <= i17 goto label08;

        i17 = i18;

     label08:
        r39 = r38.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges>;

     label09:
        if r39 == null goto label11;

        $r17 = r39.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Label successor>;

        r40 = virtualinvoke $r17.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label getCanonicalInstance()>();

        $r20 = r38.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $r19 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r18 = r40.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        $i12 = r39.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: int info>;

        z0 = virtualinvoke $r20.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: boolean merge(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,org.apache.flink.shaded.asm7.org.objectweb.asm.Frame,int)>($r19, $r18, $i12);

        if z0 == 0 goto label10;

        $r21 = r40.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextListElement>;

        if $r21 != null goto label10;

        r40.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextListElement> = r37;

        r37 = r40;

     label10:
        r39 = r39.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge nextEdge>;

        goto label09;

     label11:
        goto label07;

     label12:
        r41 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label firstBasicBlock>;

     label13:
        if r41 == null goto label20;

        $s2 = r41.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s3 = $s2 & 10;

        if $s3 != 10 goto label14;

        $r15 = r41.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame>;

        virtualinvoke $r15.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void accept(org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter)>(r0);

     label14:
        $s4 = r41.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s5 = $s4 & 8;

        if $s5 != 0 goto label19;

        r42 = r41.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextBasicBlock>;

        i19 = r41.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        if r42 != null goto label15;

        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i20 = $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        goto label16;

     label15:
        $i20 = r42.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

     label16:
        i21 = $i20 - 1;

        if i21 < i19 goto label19;

        i22 = i19;

     label17:
        if i22 >= i21 goto label18;

        $r12 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r13 = $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r13[i22] = 0;

        i22 = i22 + 1;

        goto label17;

     label18:
        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r7 = $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r7[i21] = -65;

        i23 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int visitFrameStart(int,int,int)>(i19, 0, 1);

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i6 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: int getAbstractTypeFromInternalName(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,java.lang.String)>($r8, "java/lang/Throwable");

        $r9[i23] = $i6;

        virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void visitFrameEnd()>();

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler firstHandler>;

        $r11 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler removeRange(org.apache.flink.shaded.asm7.org.objectweb.asm.Handler,org.apache.flink.shaded.asm7.org.objectweb.asm.Label,org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>($r10, r41, r42);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler firstHandler> = $r11;

        i17 = staticinvoke <java.lang.Math: int max(int,int)>(i17, 1);

     label19:
        r41 = r41.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextBasicBlock>;

        goto label13;

     label20:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxStack> = i17;

        return;
    }

    private void computeMaxStackAndLocal()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, $i4, $i5, $i9, $i14, i19, $i21;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label r1, $r2, $r3, $r5, r19, r20, r21, r22, r23, r24, r25, r26, $r27, r28;
        boolean $z0;
        short $s1, $s2, $s3, $s6, $s7, $s8, $s10, $s11, $s12, $s13, $s15, $s16, s17, s18, s20;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Edge $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, r29;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Handler r18;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r18 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler firstHandler>;

     label01:
        if r18 == null goto label06;

        r19 = r18.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: org.apache.flink.shaded.asm7.org.objectweb.asm.Label handlerPc>;

        r20 = r18.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: org.apache.flink.shaded.asm7.org.objectweb.asm.Label startPc>;

        r21 = r18.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: org.apache.flink.shaded.asm7.org.objectweb.asm.Label endPc>;

     label02:
        if r20 == r21 goto label05;

        $s15 = r20.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s16 = $s15 & 16;

        if $s16 != 0 goto label03;

        $r16 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Edge;

        $r17 = r20.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges>;

        specialinvoke $r16.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: void <init>(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label,org.apache.flink.shaded.asm7.org.objectweb.asm.Edge)>(2147483647, r19, $r17);

        r20.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges> = $r16;

        goto label04;

     label03:
        $r10 = r20.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges>;

        $r15 = $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge nextEdge>;

        $r11 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Edge;

        $r12 = r20.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges>;

        $r13 = $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge nextEdge>;

        $r14 = $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge nextEdge>;

        specialinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: void <init>(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label,org.apache.flink.shaded.asm7.org.objectweb.asm.Edge)>(2147483647, r19, $r14);

        $r15.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge nextEdge> = $r11;

     label04:
        r20 = r20.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextBasicBlock>;

        goto label02;

     label05:
        r18 = r18.<org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler nextHandler>;

        goto label01;

     label06:
        $z0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: boolean hasSubroutines>;

        if $z0 == 0 goto label14;

        s17 = 1;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label firstBasicBlock>;

        virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void markSubroutine(short)>(1);

        s18 = 1;

     label07:
        if s18 > s17 goto label11;

        r22 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label firstBasicBlock>;

     label08:
        if r22 == null goto label10;

        $s10 = r22.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s11 = $s10 & 16;

        if $s11 == 0 goto label09;

        $s12 = r22.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short subroutineId>;

        if $s12 != s18 goto label09;

        $r8 = r22.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges>;

        $r9 = $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge nextEdge>;

        r23 = $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Label successor>;

        $s13 = r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short subroutineId>;

        if $s13 != 0 goto label09;

        $i14 = s17 + 1;

        s17 = (short) $i14;

        virtualinvoke r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void markSubroutine(short)>(s17);

     label09:
        r22 = r22.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextBasicBlock>;

        goto label08;

     label10:
        $i9 = s18 + 1;

        s18 = (short) $i9;

        goto label07;

     label11:
        r24 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label firstBasicBlock>;

     label12:
        if r24 == null goto label14;

        $s7 = r24.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s8 = $s7 & 16;

        if $s8 == 0 goto label13;

        $r6 = r24.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges>;

        $r7 = $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge nextEdge>;

        r25 = $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Label successor>;

        virtualinvoke r25.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void addSubroutineRetSuccessors(org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>(r24);

     label13:
        r24 = r24.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextBasicBlock>;

        goto label12;

     label14:
        r26 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label firstBasicBlock>;

        $r2 = <org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label EMPTY_LIST>;

        r26.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextListElement> = $r2;

        i19 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxStack>;

     label15:
        $r27 = <org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label EMPTY_LIST>;

        if r26 == $r27 goto label22;

        r28 = r26;

        r26 = r26.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextListElement>;

        s20 = r28.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short inputStackSize>;

        $s1 = r28.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short outputStackMax>;

        i0 = s20 + $s1;

        if i0 <= i19 goto label16;

        i19 = i0;

     label16:
        r29 = r28.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges>;

        $s2 = r28.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short flags>;

        $s3 = $s2 & 16;

        if $s3 == 0 goto label17;

        r29 = r29.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge nextEdge>;

     label17:
        if r29 == null goto label21;

        r1 = r29.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Label successor>;

        $r3 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextListElement>;

        if $r3 != null goto label20;

        $i4 = r29.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: int info>;

        if $i4 != 2147483647 goto label18;

        $i21 = 1;

        goto label19;

     label18:
        $i5 = r29.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: int info>;

        $i21 = s20 + $i5;

     label19:
        $s6 = (short) $i21;

        r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short inputStackSize> = $s6;

        r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextListElement> = r26;

        r26 = r1;

     label20:
        r29 = r29.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge nextEdge>;

        goto label17;

     label21:
        goto label15;

     label22:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxStack> = i19;

        return;
    }

    public void visitEnd()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        return;
    }

    private void addSuccessorToCurrentBasicBlock(int, org.apache.flink.shaded.asm7.org.objectweb.asm.Label)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label r1, $r3, $r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Edge $r2, $r4;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r2 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Edge;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $r4 = $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges>;

        specialinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Edge: void <init>(int,org.apache.flink.shaded.asm7.org.objectweb.asm.Label,org.apache.flink.shaded.asm7.org.objectweb.asm.Edge)>(i0, r1, $r4);

        $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Edge outgoingEdges> = $r2;

        return;
    }

    private void endCurrentBasicBlockWithNoSuccessor()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int $i0, $i1, $i2, $i4;
        short $s3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r2, $r3, $r8;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Frame $r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r5, $r6;
        byte[] $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        $i0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i0 != 4 goto label1;

        $r3 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Label;

        specialinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: void <init>()>();

        $r4 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Frame;

        specialinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.Label)>($r3);

        $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Frame frame> = $r4;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r7 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i4 = $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: boolean resolve(byte[],int)>($r7, $i4);

        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock>;

        $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: org.apache.flink.shaded.asm7.org.objectweb.asm.Label nextBasicBlock> = $r3;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label lastBasicBlock> = $r3;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock> = null;

        goto label2;

     label1:
        $i1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int compute>;

        if $i1 != 1 goto label2;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock>;

        $i2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxRelativeStackSize>;

        $s3 = (short) $i2;

        $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: short outputStackMax> = $s3;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Label currentBasicBlock> = null;

     label2:
        return;
    }

    int visitFrameStart(int, int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, i2, i3, $i4, $i5;
        int[] $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i4 = 3 + i1;

        i3 = $i4 + i2;

        $r1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $i5 = lengthof $r3;

        if $i5 >= i3 goto label2;

     label1:
        $r2 = newarray (int)[i3];

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame> = $r2;

     label2:
        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $r4[0] = i0;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $r5[1] = i1;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $r6[2] = i2;

        return 3;
    }

    void visitAbstractType(int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1;
        int[] $r1;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $r1[i0] = i1;

        return;
    }

    void visitFrameEnd()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int[] $r1, $r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r2, $r3;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        $r1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        if $r2 != null goto label1;

        $r3 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries> = $r3;

     label1:
        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putFrame()>();

        $i0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int stackMapTableNumberOfEntries>;

        $i1 = $i0 + 1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int stackMapTableNumberOfEntries> = $i1;

     label2:
        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] previousFrame> = $r5;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame> = null;

        return;
    }

    private void putFrame()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i34, i35;
        int[] $r1, $r2, $r4, $r5, $r6, $r29, $r30, $r31, $r32;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r21, $r23, $r24, $r25, $r27, $r33, $r34, $r36;
        short s31, $s32, $s33;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        $r1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        i0 = $r1[1];

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        i1 = $r2[2];

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i5 = virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int getMajorVersion()>();

        if $i5 >= 50 goto label01;

        $r33 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $r32 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $i25 = $r32[0];

        $r34 = virtualinvoke $r33.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i25);

        virtualinvoke $r34.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i0);

        $i26 = 3 + i0;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putAbstractTypes(int,int)>(3, $i26);

        $r36 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        virtualinvoke $r36.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i1);

        $i29 = 3 + i0;

        $i27 = 3 + i0;

        $i28 = $i27 + i1;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putAbstractTypes(int,int)>($i29, $i28);

        return;

     label01:
        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int stackMapTableNumberOfEntries>;

        if $i6 != 0 goto label02;

        $r31 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $i30 = $r31[0];

        goto label03;

     label02:
        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $i8 = $r4[0];

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        $i7 = $r5[0];

        $i9 = $i8 - $i7;

        $i30 = $i9 - 1;

     label03:
        i2 = $i30;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        i3 = $r6[1];

        i4 = i0 - i3;

        s31 = 255;

        if i1 != 0 goto label10;

        tableswitch(i4)
        {
            case -3: goto label04;
            case -2: goto label04;
            case -1: goto label04;
            case 0: goto label05;
            case 1: goto label08;
            case 2: goto label08;
            case 3: goto label08;
            default: goto label09;
        };

     label04:
        s31 = 248;

        goto label13;

     label05:
        if $i30 >= 64 goto label06;

        $s32 = 0;

        goto label07;

     label06:
        $s32 = 251;

     label07:
        s31 = $s32;

        goto label13;

     label08:
        s31 = 252;

        goto label13;

     label09:
        goto label13;

     label10:
        if i4 != 0 goto label13;

        if i1 != 1 goto label13;

        if $i30 >= 63 goto label11;

        $s33 = 64;

        goto label12;

     label11:
        $s33 = 247;

     label12:
        s31 = $s33;

     label13:
        if s31 == 255 goto label16;

        i34 = 3;

        i35 = 0;

     label14:
        if i35 >= i3 goto label16;

        if i35 >= i0 goto label16;

        $r29 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $i24 = $r29[i34];

        $r30 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] previousFrame>;

        $i23 = $r30[i34];

        if $i24 == $i23 goto label15;

        s31 = 255;

        goto label16;

     label15:
        i34 = i34 + 1;

        i35 = i35 + 1;

        goto label14;

     label16:
        lookupswitch(s31)
        {
            case 0: goto label17;
            case 64: goto label18;
            case 247: goto label19;
            case 248: goto label21;
            case 251: goto label20;
            case 252: goto label22;
            case 255: goto label23;
            default: goto label23;
        };

     label17:
        $r21 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        virtualinvoke $r21.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(i2);

        goto label24;

     label18:
        $r19 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $i16 = 64 + i2;

        virtualinvoke $r19.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>($i16);

        $i18 = 3 + i0;

        $i17 = 4 + i0;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putAbstractTypes(int,int)>($i18, $i17);

        goto label24;

     label19:
        $r16 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $r17 = virtualinvoke $r16.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(247);

        virtualinvoke $r17.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i2);

        $i15 = 3 + i0;

        $i14 = 4 + i0;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putAbstractTypes(int,int)>($i15, $i14);

        goto label24;

     label20:
        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $r11 = virtualinvoke $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(251);

        virtualinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i2);

        goto label24;

     label21:
        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $i13 = 251 + i4;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>($i13);

        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i2);

        goto label24;

     label22:
        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $i10 = 251 + i4;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>($i10);

        virtualinvoke $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i2);

        $i12 = 3 + i3;

        $i11 = 3 + i0;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putAbstractTypes(int,int)>($i12, $i11);

        goto label24;

     label23:
        $r23 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $r24 = virtualinvoke $r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(255);

        $r25 = virtualinvoke $r24.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i2);

        virtualinvoke $r25.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i0);

        $i19 = 3 + i0;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putAbstractTypes(int,int)>(3, $i19);

        $r27 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        virtualinvoke $r27.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i1);

        $i22 = 3 + i0;

        $i20 = 3 + i0;

        $i21 = $i20 + i1;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putAbstractTypes(int,int)>($i22, $i21);

     label24:
        return;
    }

    private void putAbstractTypes(int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, $i2, i3;
        int[] $r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i3 = i0;

     label1:
        if i3 >= i1 goto label2;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] currentFrame>;

        $i2 = $r1[i3];

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Frame: void putAbstractType(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r3, $i2, $r2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void putFrameType(java.lang.Object)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r2, $r3, $r6, $r7, $r13;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label $r4;
        int $i0, $i1, $i2;
        java.lang.String $r8;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r9;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r10;
        java.lang.Integer $r12;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $r12 = (java.lang.Integer) r1;

        $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        virtualinvoke $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>($i2);

        goto label3;

     label1:
        $z1 = r1 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(7);

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r8 = (java.lang.String) r1;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>($r8);

        $i1 = $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i1);

        goto label3;

     label2:
        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>(8);

        $r4 = (org.apache.flink.shaded.asm7.org.objectweb.asm.Label) r1;

        $i0 = $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Label: int bytecodeOffset>;

        virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i0);

     label3:
        return;
    }

    boolean canCopyMethodAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader, boolean, boolean, int, int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader r1, $r3;
        boolean z0, z1, $z4, $z5;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r2, $r4;
        int[] $r5;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader getSource()>();

        if r1 != $r3 goto label03;

        $i3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int descriptorIndex>;

        if i0 != $i3 goto label03;

        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int signatureIndex>;

        if i1 != $i4 goto label03;

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int accessFlags>;

        $i6 = $i5 & 131072;

        if $i6 == 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        if z1 == $z4 goto label04;

     label03:
        return 0;

     label04:
        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i7 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int getMajorVersion()>();

        if $i7 >= 49 goto label05;

        $i14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int accessFlags>;

        $i15 = $i14 & 4096;

        if $i15 == 0 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        if z0 == $z5 goto label07;

        return 0;

     label07:
        if i2 != 0 goto label08;

        $i13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions>;

        if $i13 == 0 goto label11;

        return 0;

     label08:
        $i8 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(i2);

        $i9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions>;

        if $i8 != $i9 goto label11;

        i16 = i2 + 2;

        i17 = 0;

     label09:
        $i10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions>;

        if i17 >= $i10 goto label11;

        $i11 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>(i16);

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] exceptionIndexTable>;

        $i12 = $r5[i17];

        if $i11 == $i12 goto label10;

        return 0;

     label10:
        i16 = i16 + 2;

        i17 = i17 + 1;

        goto label09;

     label11:
        return 1;
    }

    void setMethodAttributesSource(int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int i0, i1, $i2, $i3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + 6;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int sourceOffset> = $i2;

        $i3 = i1 - 6;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int sourceLength> = $i3;

        return;
    }

    int computeMethodInfoSize()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i39, $i40, $i42, $i43, $i44, $i46, $i47, $i48, $i49, $i50, i51, $i52, i53, i54, $i55, $i56;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r1, $r8, $r13, $r15, $r23, $r25, $r27, $r28, $r29, $r33, $r34, $r41, $r43, $r45, $r48, $r52, $r56, $r58;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r2, $r10, $r12, $r14, $r22, $r24, $r36, $r40, $r42, $r44, $r46, $r47, $r50;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r3, $r4, $r5, $r6, $r30, $r31, $r38, $r39;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] $r7, $r16, $r17, $r19, $r20, $r57;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute $r9, $r11, $r32, $r37;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Handler $r26;
        byte[] $r35;
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodTooLargeException $r49;
        java.lang.String $r51, $r53, $r54, $r55;
        boolean $z1;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        $i0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int sourceOffset>;

        if $i0 == 0 goto label01;

        $i49 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int sourceLength>;

        $i50 = 6 + $i49;

        return $i50;

     label01:
        i51 = 8;

        $r1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i1 = $r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        if $i1 <= 0 goto label13;

        $r23 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i23 = $r23.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        if $i23 <= 65535 goto label02;

        $r49 = new org.apache.flink.shaded.asm7.org.objectweb.asm.MethodTooLargeException;

        $r50 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r51 = virtualinvoke $r50.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: java.lang.String getClassName()>();

        $r54 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: java.lang.String name>;

        $r53 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: java.lang.String descriptor>;

        $r52 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i48 = $r52.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        specialinvoke $r49.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodTooLargeException: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>($r51, $r54, $r53, $i48);

        throw $r49;

     label02:
        $r24 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r24.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Code");

        $r25 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i25 = $r25.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i26 = 16 + $i25;

        $r26 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler firstHandler>;

        $i27 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: int getExceptionTableSize(org.apache.flink.shaded.asm7.org.objectweb.asm.Handler)>($r26);

        $i28 = $i26 + $i27;

        i51 = 8 + $i28;

        $r27 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        if $r27 == null goto label07;

        $r46 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i44 = virtualinvoke $r46.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int getMajorVersion()>();

        if $i44 < 50 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        $r47 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        if $z1 == 0 goto label05;

        $r55 = "StackMapTable";

        goto label06;

     label05:
        $r55 = "StackMap";

     label06:
        virtualinvoke $r47.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>($r55);

        $r48 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $i46 = $r48.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i47 = 8 + $i46;

        i51 = i51 + $i47;

     label07:
        $r56 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable>;

        if $r56 == null goto label08;

        $r44 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r44.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("LineNumberTable");

        $r45 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable>;

        $i42 = $r45.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i43 = 8 + $i42;

        i51 = i51 + $i43;

     label08:
        $r28 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable>;

        if $r28 == null goto label09;

        $r42 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r42.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("LocalVariableTable");

        $r43 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable>;

        $i39 = $r43.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i40 = 8 + $i39;

        i51 = i51 + $i40;

     label09:
        $r29 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable>;

        if $r29 == null goto label10;

        $r40 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r40.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("LocalVariableTypeTable");

        $r41 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable>;

        $i36 = $r41.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i37 = 8 + $i36;

        i51 = i51 + $i37;

     label10:
        $r30 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation>;

        if $r30 == null goto label11;

        $r39 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation>;

        $i34 = virtualinvoke $r39.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: int computeAnnotationsSize(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        i51 = i51 + $i34;

     label11:
        $r31 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation>;

        if $r31 == null goto label12;

        $r38 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation>;

        $i33 = virtualinvoke $r38.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: int computeAnnotationsSize(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        i51 = i51 + $i33;

     label12:
        $r32 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstCodeAttribute>;

        if $r32 == null goto label13;

        $r37 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstCodeAttribute>;

        $r36 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r33 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r35 = $r33.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r34 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i31 = $r34.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i30 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxStack>;

        $i29 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals>;

        $i32 = virtualinvoke $r37.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: int computeAttributesSize(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,byte[],int,int,int)>($r36, $r35, $i31, $i30, $i29);

        i51 = i51 + $i32;

     label13:
        $i52 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions>;

        if $i52 <= 0 goto label14;

        $r22 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r22.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Exceptions");

        $i20 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions>;

        $i21 = 2 * $i20;

        $i22 = 8 + $i21;

        i51 = i51 + $i22;

     label14:
        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int accessFlags>;

        $i2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int signatureIndex>;

        $i4 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: int computeAttributesSize(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,int)>($r2, $i3, $i2);

        i53 = i51 + $i4;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation>;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation>;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation>;

        $i5 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: int computeAnnotationsSize(org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r6, $r5, $r4, $r3);

        i54 = i53 + $i5;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations>;

        if $r7 == null goto label17;

        $i18 = i54;

        $r19 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations>;

        $i16 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int visibleAnnotableParameterCount>;

        if $i16 != 0 goto label15;

        $r20 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations>;

        $i55 = lengthof $r20;

        goto label16;

     label15:
        $i55 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int visibleAnnotableParameterCount>;

     label16:
        $i17 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: int computeParameterAnnotationsSize(java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[],int)>("RuntimeVisibleParameterAnnotations", $r19, $i55);

        i54 = $i18 + $i17;

     label17:
        $r57 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations>;

        if $r57 == null goto label20;

        $i15 = i54;

        $r16 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations>;

        $i13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int invisibleAnnotableParameterCount>;

        if $i13 != 0 goto label18;

        $r17 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations>;

        $i56 = lengthof $r17;

        goto label19;

     label18:
        $i56 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int invisibleAnnotableParameterCount>;

     label19:
        $i14 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: int computeParameterAnnotationsSize(java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[],int)>("RuntimeInvisibleParameterAnnotations", $r16, $i56);

        i54 = $i15 + $i14;

     label20:
        $r58 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector defaultValue>;

        if $r58 == null goto label21;

        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("AnnotationDefault");

        $r15 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector defaultValue>;

        $i11 = $r15.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i12 = 6 + $i11;

        i54 = i54 + $i12;

     label21:
        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector parameters>;

        if $r8 == null goto label22;

        $r12 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("MethodParameters");

        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector parameters>;

        $i8 = $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i9 = 7 + $i8;

        i54 = i54 + $i9;

     label22:
        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        if $r9 == null goto label23;

        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i6 = virtualinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: int computeAttributesSize(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>($r10);

        i54 = i54 + $i6;

     label23:
        return i54;
    }

    void putMethodInfo(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector r1, $r3, $r4, $r6, $r13, $r14, $r17, $r25, $r30, $r31, $r32, $r33, $r34, $r35, $r39, $r40, $r41, $r42, $r43, $r53, $r54, $r57, $r59, $r60, $r61, $r62, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r79, $r80, $r81, $r85, $r86, $r95, $r96, $r97, $r98, $r99, $r100, $r104, $r105, $r106, $r107, $r108, $r109, $r113, $r114, $r115, $r116, $r117, $r118, $r123, $r124, $r125, $r126, $r127, $r128, $r132, $r133, $r140, $r141, $r142, $r143, $r150, $r153;
        boolean z0, $z1, $z2;
        int i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, i88, $i89, i90, i91, $i92, i93, i94, $i95, $i96;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r2, $r18, $r23, $r27, $r29, $r38, $r46, $r49, $r52, $r66, $r88, $r90, $r92, $r94, $r103, $r112, $r121, $r122, $r135, $r145;
        short $s3, $s87;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r7, $r8, $r11, $r12, $r19, $r20, $r21, $r22, $r63, $r64, $r82, $r83, $r91, $r93, $r138, $r139;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] $r9, $r10, $r24, $r47, $r48, $r50, $r51, $r152;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute $r15, $r26, $r28, $r65, $r84, $r89, $r136, $r137, $r144;
        byte[] $r36, $r44, $r75, $r87, $r101, $r110, $r119, $r129, $r134, $r147;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Handler $r58, $r77;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader $r146;
        java.lang.String $r149;
        int[] r151;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i2 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int getMajorVersion()>();

        if $i2 >= 49 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        if $z1 == 0 goto label03;

        $s87 = 4096;

        goto label04;

     label03:
        $s87 = 0;

     label04:
        $i4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int accessFlags>;

        $s3 = $s87 ^ -1;

        $i5 = $i4 & $s3;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i5);

        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int nameIndex>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i6);

        $i7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int descriptorIndex>;

        virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i7);

        $i8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int sourceOffset>;

        if $i8 == 0 goto label05;

        $r145 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r146 = virtualinvoke $r145.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader getSource()>();

        $r147 = $r146.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader: byte[] classFileBuffer>;

        $i86 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int sourceOffset>;

        $i85 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int sourceLength>;

        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r147, $i86, $i85);

        return;

     label05:
        i88 = 0;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i9 = $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        if $i9 <= 0 goto label06;

        i88 = 0 + 1;

     label06:
        $i10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions>;

        if $i10 <= 0 goto label07;

        i88 = i88 + 1;

     label07:
        $i11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int accessFlags>;

        $i12 = $i11 & 4096;

        if $i12 == 0 goto label08;

        if z0 == 0 goto label08;

        i88 = i88 + 1;

     label08:
        $i89 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int signatureIndex>;

        if $i89 == 0 goto label09;

        i88 = i88 + 1;

     label09:
        $i13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int accessFlags>;

        $i14 = $i13 & 131072;

        if $i14 == 0 goto label10;

        i88 = i88 + 1;

     label10:
        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation>;

        if $r7 == null goto label11;

        i88 = i88 + 1;

     label11:
        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation>;

        if $r8 == null goto label12;

        i88 = i88 + 1;

     label12:
        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations>;

        if $r9 == null goto label13;

        i88 = i88 + 1;

     label13:
        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations>;

        if $r10 == null goto label14;

        i88 = i88 + 1;

     label14:
        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation>;

        if $r11 == null goto label15;

        i88 = i88 + 1;

     label15:
        $r12 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation>;

        if $r12 == null goto label16;

        i88 = i88 + 1;

     label16:
        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector defaultValue>;

        if $r13 == null goto label17;

        i88 = i88 + 1;

     label17:
        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector parameters>;

        if $r14 == null goto label18;

        i88 = i88 + 1;

     label18:
        $r15 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        if $r15 == null goto label19;

        $r144 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        $i84 = virtualinvoke $r144.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: int getAttributeCount()>();

        i88 = i88 + $i84;

     label19:
        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i88);

        $r17 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i15 = $r17.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        if $i15 <= 0 goto label37;

        $r57 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i35 = $r57.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i36 = 10 + $i35;

        $r58 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler firstHandler>;

        $i37 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: int getExceptionTableSize(org.apache.flink.shaded.asm7.org.objectweb.asm.Handler)>($r58);

        i90 = $i36 + $i37;

        i91 = 0;

        $r59 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        if $r59 == null goto label20;

        $r143 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $i82 = $r143.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i83 = 8 + $i82;

        i90 = i90 + $i83;

        i91 = 0 + 1;

     label20:
        $r60 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable>;

        if $r60 == null goto label21;

        $r142 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable>;

        $i80 = $r142.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i81 = 8 + $i80;

        i90 = i90 + $i81;

        i91 = i91 + 1;

     label21:
        $r61 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable>;

        if $r61 == null goto label22;

        $r141 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable>;

        $i78 = $r141.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i79 = 8 + $i78;

        i90 = i90 + $i79;

        i91 = i91 + 1;

     label22:
        $r62 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable>;

        if $r62 == null goto label23;

        $r140 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable>;

        $i76 = $r140.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i77 = 8 + $i76;

        i90 = i90 + $i77;

        i91 = i91 + 1;

     label23:
        $r63 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation>;

        if $r63 == null goto label24;

        $r139 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation>;

        $i75 = virtualinvoke $r139.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: int computeAnnotationsSize(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        i90 = i90 + $i75;

        i91 = i91 + 1;

     label24:
        $r64 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation>;

        if $r64 == null goto label25;

        $r138 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation>;

        $i74 = virtualinvoke $r138.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: int computeAnnotationsSize(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        i90 = i90 + $i74;

        i91 = i91 + 1;

     label25:
        $r65 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstCodeAttribute>;

        if $r65 == null goto label26;

        $r136 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstCodeAttribute>;

        $r135 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r132 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r134 = $r132.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r133 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i71 = $r133.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i70 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxStack>;

        $i69 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals>;

        $i72 = virtualinvoke $r136.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: int computeAttributesSize(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,byte[],int,int,int)>($r135, $r134, $i71, $i70, $i69);

        i90 = i90 + $i72;

        $r137 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstCodeAttribute>;

        $i73 = virtualinvoke $r137.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: int getAttributeCount()>();

        i91 = i91 + $i73;

     label26:
        $r66 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i38 = virtualinvoke $r66.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Code");

        $r67 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i38);

        $r68 = virtualinvoke $r67.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(i90);

        $i39 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxStack>;

        $r69 = virtualinvoke $r68.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i39);

        $i40 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals>;

        $r70 = virtualinvoke $r69.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i40);

        $r71 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i41 = $r71.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $r72 = virtualinvoke $r70.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i41);

        $r73 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r75 = $r73.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r74 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i42 = $r74.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r72.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r75, 0, $i42);

        $r77 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Handler firstHandler>;

        staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Handler: void putExceptionTable(org.apache.flink.shaded.asm7.org.objectweb.asm.Handler,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r77, r1);

        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i91);

        $r79 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        if $r79 == null goto label31;

        $r121 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i63 = virtualinvoke $r121.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int getMajorVersion()>();

        if $i63 < 50 goto label27;

        $z2 = 1;

        goto label28;

     label27:
        $z2 = 0;

     label28:
        $r122 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        if $z2 == 0 goto label29;

        $r149 = "StackMapTable";

        goto label30;

     label29:
        $r149 = "StackMap";

     label30:
        $i64 = virtualinvoke $r122.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>($r149);

        $r123 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i64);

        $r124 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $i65 = $r124.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i66 = 2 + $i65;

        $r125 = virtualinvoke $r123.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i66);

        $i67 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int stackMapTableNumberOfEntries>;

        $r126 = virtualinvoke $r125.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i67);

        $r127 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $r129 = $r127.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r128 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector stackMapTableEntries>;

        $i68 = $r128.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r126.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r129, 0, $i68);

     label31:
        $r150 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable>;

        if $r150 == null goto label32;

        $r112 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i58 = virtualinvoke $r112.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("LineNumberTable");

        $r113 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i58);

        $r114 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable>;

        $i59 = $r114.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i60 = 2 + $i59;

        $r115 = virtualinvoke $r113.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i60);

        $i61 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int lineNumberTableLength>;

        $r116 = virtualinvoke $r115.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i61);

        $r117 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable>;

        $r119 = $r117.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r118 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector lineNumberTable>;

        $i62 = $r118.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r116.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r119, 0, $i62);

     label32:
        $r80 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable>;

        if $r80 == null goto label33;

        $r103 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i53 = virtualinvoke $r103.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("LocalVariableTable");

        $r104 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i53);

        $r105 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable>;

        $i54 = $r105.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i55 = 2 + $i54;

        $r106 = virtualinvoke $r104.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i55);

        $i56 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int localVariableTableLength>;

        $r107 = virtualinvoke $r106.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i56);

        $r108 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable>;

        $r110 = $r108.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r109 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTable>;

        $i57 = $r109.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r107.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r110, 0, $i57);

     label33:
        $r81 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable>;

        if $r81 == null goto label34;

        $r94 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i48 = virtualinvoke $r94.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("LocalVariableTypeTable");

        $r95 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i48);

        $r96 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable>;

        $i49 = $r96.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i50 = 2 + $i49;

        $r97 = virtualinvoke $r95.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i50);

        $i51 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int localVariableTypeTableLength>;

        $r98 = virtualinvoke $r97.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i51);

        $r99 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable>;

        $r101 = $r99.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r100 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector localVariableTypeTable>;

        $i52 = $r100.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r98.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r101, 0, $i52);

     label34:
        $r82 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation>;

        if $r82 == null goto label35;

        $r93 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeVisibleTypeAnnotation>;

        $r92 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i47 = virtualinvoke $r92.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        virtualinvoke $r93.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: void putAnnotations(int,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($i47, r1);

     label35:
        $r83 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation>;

        if $r83 == null goto label36;

        $r91 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastCodeRuntimeInvisibleTypeAnnotation>;

        $r90 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i46 = virtualinvoke $r90.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        virtualinvoke $r91.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: void putAnnotations(int,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($i46, r1);

     label36:
        $r84 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstCodeAttribute>;

        if $r84 == null goto label37;

        $r89 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstCodeAttribute>;

        $r88 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r85 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $r87 = $r85.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r86 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector code>;

        $i45 = $r86.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i44 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxStack>;

        $i43 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int maxLocals>;

        virtualinvoke $r89.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: void putAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,byte[],int,int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r88, $r87, $i45, $i44, $i43, r1);

     label37:
        $i92 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions>;

        if $i92 <= 0 goto label39;

        $r52 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i30 = virtualinvoke $r52.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Exceptions");

        $r53 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i30);

        $i31 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions>;

        $i32 = 2 * $i31;

        $i33 = 2 + $i32;

        $r54 = virtualinvoke $r53.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i33);

        $i34 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int numberOfExceptions>;

        virtualinvoke $r54.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i34);

        r151 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] exceptionIndexTable>;

        i93 = lengthof r151;

        i94 = 0;

     label38:
        if i94 >= i93 goto label39;

        i1 = r151[i94];

        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i1);

        i94 = i94 + 1;

        goto label38;

     label39:
        $r18 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i17 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int accessFlags>;

        $i16 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int signatureIndex>;

        staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: void putAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r18, $i17, $i16, r1);

        $r23 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r22 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation>;

        $r21 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation>;

        $r20 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation>;

        $r19 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation>;

        staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: void putAnnotations(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r23, $r22, $r21, $r20, $r19, r1);

        $r24 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations>;

        if $r24 == null goto label42;

        $r49 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i28 = virtualinvoke $r49.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("RuntimeVisibleParameterAnnotations");

        $r50 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations>;

        $i29 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int visibleAnnotableParameterCount>;

        if $i29 != 0 goto label40;

        $r51 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeVisibleParameterAnnotations>;

        $i95 = lengthof $r51;

        goto label41;

     label40:
        $i95 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int visibleAnnotableParameterCount>;

     label41:
        staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: void putParameterAnnotations(int,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[],int,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($i28, $r50, $i95, r1);

     label42:
        $r152 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations>;

        if $r152 == null goto label45;

        $r46 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i26 = virtualinvoke $r46.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("RuntimeInvisibleParameterAnnotations");

        $r47 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations>;

        $i27 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int invisibleAnnotableParameterCount>;

        if $i27 != 0 goto label43;

        $r48 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[] lastRuntimeInvisibleParameterAnnotations>;

        $i96 = lengthof $r48;

        goto label44;

     label43:
        $i96 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int invisibleAnnotableParameterCount>;

     label44:
        staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: void putParameterAnnotations(int,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter[],int,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($i26, $r47, $i96, r1);

     label45:
        $r153 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector defaultValue>;

        if $r153 == null goto label46;

        $r38 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i23 = virtualinvoke $r38.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("AnnotationDefault");

        $r39 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i23);

        $r40 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector defaultValue>;

        $i24 = $r40.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $r41 = virtualinvoke $r39.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i24);

        $r42 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector defaultValue>;

        $r44 = $r42.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r43 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector defaultValue>;

        $i25 = $r43.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r41.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r44, 0, $i25);

     label46:
        $r25 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector parameters>;

        if $r25 == null goto label47;

        $r29 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i18 = virtualinvoke $r29.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("MethodParameters");

        $r30 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i18);

        $r31 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector parameters>;

        $i19 = $r31.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i20 = 1 + $i19;

        $r32 = virtualinvoke $r30.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i20);

        $i21 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int parametersCount>;

        $r33 = virtualinvoke $r32.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByte(int)>($i21);

        $r34 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector parameters>;

        $r36 = $r34.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r35 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector parameters>;

        $i22 = $r35.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r33.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r36, 0, $i22);

     label47:
        $r26 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        if $r26 == null goto label48;

        $r28 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        $r27 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r28.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: void putAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r27, r1);

     label48:
        return;
    }

    final void collectAttributePrototypes(org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute $r2, $r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set: void addAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute)>($r2);

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstCodeAttribute>;

        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set: void addAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute)>($r3);

        return;
    }

    static void <clinit>()
    {
        int[] $r0;

        <org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int NA> = 0;

        <org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int COMPUTE_ALL_FRAMES> = 4;

        <org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int COMPUTE_INSERTED_FRAMES> = 3;

        <org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int COMPUTE_MAX_STACK_AND_LOCAL_FROM_FRAMES> = 2;

        <org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int COMPUTE_MAX_STACK_AND_LOCAL> = 1;

        <org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int COMPUTE_NOTHING> = 0;

        $r0 = newarray (int)[202];

        $r0[0] = 0;

        $r0[1] = 1;

        $r0[2] = 1;

        $r0[3] = 1;

        $r0[4] = 1;

        $r0[5] = 1;

        $r0[6] = 1;

        $r0[7] = 1;

        $r0[8] = 1;

        $r0[9] = 2;

        $r0[10] = 2;

        $r0[11] = 1;

        $r0[12] = 1;

        $r0[13] = 1;

        $r0[14] = 2;

        $r0[15] = 2;

        $r0[16] = 1;

        $r0[17] = 1;

        $r0[18] = 1;

        $r0[19] = 0;

        $r0[20] = 0;

        $r0[21] = 1;

        $r0[22] = 2;

        $r0[23] = 1;

        $r0[24] = 2;

        $r0[25] = 1;

        $r0[26] = 0;

        $r0[27] = 0;

        $r0[28] = 0;

        $r0[29] = 0;

        $r0[30] = 0;

        $r0[31] = 0;

        $r0[32] = 0;

        $r0[33] = 0;

        $r0[34] = 0;

        $r0[35] = 0;

        $r0[36] = 0;

        $r0[37] = 0;

        $r0[38] = 0;

        $r0[39] = 0;

        $r0[40] = 0;

        $r0[41] = 0;

        $r0[42] = 0;

        $r0[43] = 0;

        $r0[44] = 0;

        $r0[45] = 0;

        $r0[46] = -1;

        $r0[47] = 0;

        $r0[48] = -1;

        $r0[49] = 0;

        $r0[50] = -1;

        $r0[51] = -1;

        $r0[52] = -1;

        $r0[53] = -1;

        $r0[54] = -1;

        $r0[55] = -2;

        $r0[56] = -1;

        $r0[57] = -2;

        $r0[58] = -1;

        $r0[59] = 0;

        $r0[60] = 0;

        $r0[61] = 0;

        $r0[62] = 0;

        $r0[63] = 0;

        $r0[64] = 0;

        $r0[65] = 0;

        $r0[66] = 0;

        $r0[67] = 0;

        $r0[68] = 0;

        $r0[69] = 0;

        $r0[70] = 0;

        $r0[71] = 0;

        $r0[72] = 0;

        $r0[73] = 0;

        $r0[74] = 0;

        $r0[75] = 0;

        $r0[76] = 0;

        $r0[77] = 0;

        $r0[78] = 0;

        $r0[79] = -3;

        $r0[80] = -4;

        $r0[81] = -3;

        $r0[82] = -4;

        $r0[83] = -3;

        $r0[84] = -3;

        $r0[85] = -3;

        $r0[86] = -3;

        $r0[87] = -1;

        $r0[88] = -2;

        $r0[89] = 1;

        $r0[90] = 1;

        $r0[91] = 1;

        $r0[92] = 2;

        $r0[93] = 2;

        $r0[94] = 2;

        $r0[95] = 0;

        $r0[96] = -1;

        $r0[97] = -2;

        $r0[98] = -1;

        $r0[99] = -2;

        $r0[100] = -1;

        $r0[101] = -2;

        $r0[102] = -1;

        $r0[103] = -2;

        $r0[104] = -1;

        $r0[105] = -2;

        $r0[106] = -1;

        $r0[107] = -2;

        $r0[108] = -1;

        $r0[109] = -2;

        $r0[110] = -1;

        $r0[111] = -2;

        $r0[112] = -1;

        $r0[113] = -2;

        $r0[114] = -1;

        $r0[115] = -2;

        $r0[116] = 0;

        $r0[117] = 0;

        $r0[118] = 0;

        $r0[119] = 0;

        $r0[120] = -1;

        $r0[121] = -1;

        $r0[122] = -1;

        $r0[123] = -1;

        $r0[124] = -1;

        $r0[125] = -1;

        $r0[126] = -1;

        $r0[127] = -2;

        $r0[128] = -1;

        $r0[129] = -2;

        $r0[130] = -1;

        $r0[131] = -2;

        $r0[132] = 0;

        $r0[133] = 1;

        $r0[134] = 0;

        $r0[135] = 1;

        $r0[136] = -1;

        $r0[137] = -1;

        $r0[138] = 0;

        $r0[139] = 0;

        $r0[140] = 1;

        $r0[141] = 1;

        $r0[142] = -1;

        $r0[143] = 0;

        $r0[144] = -1;

        $r0[145] = 0;

        $r0[146] = 0;

        $r0[147] = 0;

        $r0[148] = -3;

        $r0[149] = -1;

        $r0[150] = -1;

        $r0[151] = -3;

        $r0[152] = -3;

        $r0[153] = -1;

        $r0[154] = -1;

        $r0[155] = -1;

        $r0[156] = -1;

        $r0[157] = -1;

        $r0[158] = -1;

        $r0[159] = -2;

        $r0[160] = -2;

        $r0[161] = -2;

        $r0[162] = -2;

        $r0[163] = -2;

        $r0[164] = -2;

        $r0[165] = -2;

        $r0[166] = -2;

        $r0[167] = 0;

        $r0[168] = 1;

        $r0[169] = 0;

        $r0[170] = -1;

        $r0[171] = -1;

        $r0[172] = -1;

        $r0[173] = -2;

        $r0[174] = -1;

        $r0[175] = -2;

        $r0[176] = -1;

        $r0[177] = 0;

        $r0[178] = 0;

        $r0[179] = 0;

        $r0[180] = 0;

        $r0[181] = 0;

        $r0[182] = 0;

        $r0[183] = 0;

        $r0[184] = 0;

        $r0[185] = 0;

        $r0[186] = 0;

        $r0[187] = 1;

        $r0[188] = 0;

        $r0[189] = 0;

        $r0[190] = 0;

        $r0[191] = 0;

        $r0[192] = 0;

        $r0[193] = 0;

        $r0[194] = -1;

        $r0[195] = -1;

        $r0[196] = 0;

        $r0[197] = 0;

        $r0[198] = -1;

        $r0[199] = -1;

        $r0[200] = 0;

        $r0[201] = 0;

        <org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int[] STACK_SIZE_DELTA> = $r0;

        return;
    }
}
