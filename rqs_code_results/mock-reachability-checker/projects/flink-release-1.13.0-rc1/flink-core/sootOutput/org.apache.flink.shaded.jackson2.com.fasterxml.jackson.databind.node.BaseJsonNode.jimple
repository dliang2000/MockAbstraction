public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode implements java.io.Serializable
{
    private static final long serialVersionUID;

    java.lang.Object writeReplace()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeSerialization $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeSerialization: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeSerialization 'from'(java.lang.Object)>(r0);

        return $r1;
    }

    protected void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: void <init>()>();

        return;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode findPath(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.MissingNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.MissingNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.MissingNode getInstance()>();

        return $r3;

     label1:
        return r2;
    }

    public abstract int hashCode();

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode required(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r0;
        java.lang.String r1, $r4;
        java.lang.Object[] $r2;
        java.lang.Class $r3;
        java.lang.Object $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $r2[0] = $r4;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode: java.lang.Object _reportRequiredViolation(java.lang.String,java.lang.Object[])>("Node of type `%s` has no fields", $r2);

        $r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r5;

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode required(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r1[0] = $r3;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode: java.lang.Object _reportRequiredViolation(java.lang.String,java.lang.Object[])>("Node of type `%s` has no indexed values", $r1);

        $r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r4;

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser traverse()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r0);

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser traverse(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>(r0, r1);

        return $r2;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken asToken();

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType numberType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode;

        return null;
    }

    public abstract void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException;

    public abstract void serializeWithType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException;

    public java.lang.String toString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.InternalNodeMapper: java.lang.String nodeToString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r0);

        return $r1;
    }

    public java.lang.String toPrettyString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.InternalNodeMapper: java.lang.String nodeToPrettyString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BaseJsonNode: long serialVersionUID> = 1L;

        return;
    }
}
