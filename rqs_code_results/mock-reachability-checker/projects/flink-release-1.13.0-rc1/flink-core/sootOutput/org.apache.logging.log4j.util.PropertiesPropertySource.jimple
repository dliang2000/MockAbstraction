public class org.apache.logging.log4j.util.PropertiesPropertySource extends java.lang.Object implements org.apache.logging.log4j.util.PropertySource
{
    private static final java.lang.String PREFIX;
    private final java.util.Properties properties;

    public void <init>(java.util.Properties)
    {
        org.apache.logging.log4j.util.PropertiesPropertySource r0;
        java.util.Properties r1;

        r0 := @this: org.apache.logging.log4j.util.PropertiesPropertySource;

        r1 := @parameter0: java.util.Properties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.logging.log4j.util.PropertiesPropertySource: java.util.Properties properties> = r1;

        return;
    }

    public int getPriority()
    {
        org.apache.logging.log4j.util.PropertiesPropertySource r0;

        r0 := @this: org.apache.logging.log4j.util.PropertiesPropertySource;

        return 0;
    }

    public void forEach(org.apache.logging.log4j.util.BiConsumer)
    {
        org.apache.logging.log4j.util.PropertiesPropertySource r0;
        org.apache.logging.log4j.util.BiConsumer r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Properties $r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6, $r7, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: org.apache.logging.log4j.util.PropertiesPropertySource;

        r1 := @parameter0: org.apache.logging.log4j.util.BiConsumer;

        $r4 = r0.<org.apache.logging.log4j.util.PropertiesPropertySource: java.util.Properties properties>;

        $r5 = virtualinvoke $r4.<java.util.Properties: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r9;

        interfaceinvoke r1.<org.apache.logging.log4j.util.BiConsumer: void accept(java.lang.Object,java.lang.Object)>($r8, $r10);

        goto label1;

     label2:
        return;
    }

    public java.lang.CharSequence getNormalForm(java.lang.Iterable)
    {
        org.apache.logging.log4j.util.PropertiesPropertySource r0;
        java.lang.Iterable r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.CharSequence $r4;
        java.lang.String $r6;

        r0 := @this: org.apache.logging.log4j.util.PropertiesPropertySource;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("log4j2.");

        $r4 = staticinvoke <org.apache.logging.log4j.util.PropertySource$Util: java.lang.CharSequence joinAsCamelCase(java.lang.Iterable)>(r1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static void <clinit>()
    {
        <org.apache.logging.log4j.util.PropertiesPropertySource: java.lang.String PREFIX> = "log4j2.";

        return;
    }
}
