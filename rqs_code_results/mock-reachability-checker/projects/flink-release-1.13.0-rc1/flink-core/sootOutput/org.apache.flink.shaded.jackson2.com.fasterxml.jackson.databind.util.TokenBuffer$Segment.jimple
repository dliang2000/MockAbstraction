public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment extends java.lang.Object
{
    public static final int TOKENS_PER_SEGMENT;
    private static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next;
    protected long _tokenTypes;
    protected final java.lang.Object[] _tokens;
    protected java.util.TreeMap _nativeIds;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        java.lang.Object[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.Object)[16];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object[] _tokens> = $r1;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken type(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0, i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken[] $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;
        long l4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        l4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;

        if i0 <= 0 goto label1;

        $i3 = i0 << 2;

        l4 = l4 >> $i3;

     label1:
        $i2 = (int) l4;

        i1 = $i2 & 15;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX>;

        $r2 = $r1[i1];

        return $r2;
    }

    public int rawType(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0, i1, $i2, $i3;
        long l4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        l4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;

        if i0 <= 0 goto label1;

        $i3 = i0 << 2;

        l4 = l4 >> $i3;

     label1:
        $i2 = (int) l4;

        i1 = $i2 & 15;

        return i1;
    }

    public java.lang.Object get(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object[] _tokens>;

        $r2 = $r1[i0];

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment next()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0, $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        return $r1;
    }

    public boolean hasIds()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        java.util.TreeMap $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0, $r2, $r3, $r4;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        if i0 >= 16 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(i0, r1);

        return null;

     label1:
        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next> = $r2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(0, r1);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken, java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0, $r4, $r5, $r6;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        java.lang.Object r2, r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        if i0 >= 16 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)>(i0, r1, r2, r3);

        return null;

     label1:
        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)>(0, r1, r2, r3);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0, $r3, $r4, $r5;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        java.lang.Object r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        r2 := @parameter2: java.lang.Object;

        if i0 >= 16 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(i0, r1, r2);

        return null;

     label1:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next> = $r3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(0, r1, r2);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0, $r5, $r6, $r7;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        java.lang.Object r2, r3, r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        if i0 >= 16 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)>(i0, r1, r2, r3, r4);

        return null;

     label1:
        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next> = $r5;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r1, r2, r3, r4);

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;

        return $r7;
    }

    private void set(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0, $i1, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        long $l2, $l3, l5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        l5 = (long) $i1;

        if i0 <= 0 goto label1;

        $i4 = i0 << 2;

        l5 = l5 << $i4;

     label1:
        $l2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;

        $l3 = $l2 | l5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes> = $l3;

        return;
    }

    private void set(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken, java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0, $i1, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        java.lang.Object r2, r3;
        long $l2, $l3, l5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        l5 = (long) $i1;

        if i0 <= 0 goto label1;

        $i4 = i0 << 2;

        l5 = l5 << $i4;

     label1:
        $l2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;

        $l3 = $l2 | l5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes> = $l3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void assignNativeIds(int,java.lang.Object,java.lang.Object)>(i0, r2, r3);

        return;
    }

    private void set(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0, $i1, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        java.lang.Object r2;
        java.lang.Object[] $r3;
        long $l2, $l3, l5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object[] _tokens>;

        $r3[i0] = r2;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        l5 = (long) $i1;

        if i0 <= 0 goto label1;

        $i4 = i0 << 2;

        l5 = l5 << $i4;

     label1:
        $l2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;

        $l3 = $l2 | l5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes> = $l3;

        return;
    }

    private void set(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0, $i1, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        java.lang.Object r2, r3, r4;
        java.lang.Object[] $r5;
        long $l2, $l3, l5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object[] _tokens>;

        $r5[i0] = r2;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        l5 = (long) $i1;

        if i0 <= 0 goto label1;

        $i4 = i0 << 2;

        l5 = l5 << $i4;

     label1:
        $l2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;

        $l3 = $l2 | l5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes> = $l3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void assignNativeIds(int,java.lang.Object,java.lang.Object)>(i0, r3, r4);

        return;
    }

    private final void assignNativeIds(int, java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0, $i1, $i2;
        java.lang.Object r1, r2;
        java.util.TreeMap $r3, $r4, $r7, $r10;
        java.lang.Integer $r5, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;

        if $r3 != null goto label1;

        $r10 = new java.util.TreeMap;

        specialinvoke $r10.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds> = $r10;

     label1:
        if r1 == null goto label2;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;

        $i2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: int _objectIdIndex(int)>(i0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r7.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r1);

     label2:
        if r2 == null goto label3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;

        $i1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: int _typeIdIndex(int)>(i0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r4.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r2);

     label3:
        return;
    }

    java.lang.Object findObjectId(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0, $i1;
        java.util.TreeMap $r1, $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;

        $i1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: int _objectIdIndex(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r3);

     label2:
        return $r4;
    }

    java.lang.Object findTypeId(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0, $i1;
        java.util.TreeMap $r1, $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;

        $i1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: int _typeIdIndex(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r3);

     label2:
        return $r4;
    }

    private final int _typeIdIndex(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0, $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        $i1 = i0 + i0;

        return $i1;
    }

    private final int _objectIdIndex(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        i0 := @parameter0: int;

        $i1 = i0 + i0;

        $i2 = $i1 + 1;

        return $i2;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken[] r0, $r1, $r2;
        int $i0, $i1, $i2;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: int TOKENS_PER_SEGMENT> = 16;

        $r1 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)[16];

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX> = $r1;

        r0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken[] values()>();

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX>;

        $i0 = lengthof r0;

        $i1 = $i0 - 1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(15, $i1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 1, $r2, 1, $i2);

        return;
    }
}
