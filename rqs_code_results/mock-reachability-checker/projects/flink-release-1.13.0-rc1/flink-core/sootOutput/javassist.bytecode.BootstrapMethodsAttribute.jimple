public class javassist.bytecode.BootstrapMethodsAttribute extends javassist.bytecode.AttributeInfo
{
    public static final java.lang.String tag;

    void <init>(javassist.bytecode.ConstPool, int, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.BootstrapMethodsAttribute r0;
        javassist.bytecode.ConstPool r1;
        int i0;
        java.io.DataInputStream r2;

        r0 := @this: javassist.bytecode.BootstrapMethodsAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.DataInputStream;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r1, i0, r2);

        return;
    }

    public void <init>(javassist.bytecode.ConstPool, javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod[])
    {
        javassist.bytecode.BootstrapMethodsAttribute r0;
        javassist.bytecode.ConstPool r1;
        javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod[] r2;
        int[] r3, $r6, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15;
        javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod $r4, $r5, $r7, $r8;
        byte[] r10;

        r0 := @this: javassist.bytecode.BootstrapMethodsAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod[];

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String)>(r1, "BootstrapMethods");

        i11 = 2;

        i12 = 0;

     label1:
        $i0 = lengthof r2;

        if i12 >= $i0 goto label2;

        $r8 = r2[i12];

        $r9 = $r8.<javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod: int[] arguments>;

        $i8 = lengthof $r9;

        $i9 = $i8 * 2;

        $i10 = 4 + $i9;

        i11 = i11 + $i10;

        i12 = i12 + 1;

        goto label1;

     label2:
        r10 = newarray (byte)[i11];

        $i1 = lengthof r2;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i1, r10, 0);

        i13 = 2;

        i14 = 0;

     label3:
        $i2 = lengthof r2;

        if i14 >= $i2 goto label6;

        $r4 = r2[i14];

        $i3 = $r4.<javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod: int methodRef>;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i3, r10, i13);

        $r5 = r2[i14];

        $r6 = $r5.<javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod: int[] arguments>;

        $i5 = lengthof $r6;

        $i4 = i13 + 2;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i5, r10, $i4);

        $r7 = r2[i14];

        r3 = $r7.<javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod: int[] arguments>;

        i13 = i13 + 4;

        i15 = 0;

     label4:
        $i6 = lengthof r3;

        if i15 >= $i6 goto label5;

        $i7 = r3[i15];

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i7, r10, i13);

        i13 = i13 + 2;

        i15 = i15 + 1;

        goto label4;

     label5:
        i14 = i14 + 1;

        goto label3;

     label6:
        virtualinvoke r0.<javassist.bytecode.BootstrapMethodsAttribute: void set(byte[])>(r10);

        return;
    }

    public javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod[] getMethods()
    {
        javassist.bytecode.BootstrapMethodsAttribute r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4, i5, i6, i7;
        javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod[] r2;
        int[] r3;
        javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod $r4;

        r0 := @this: javassist.bytecode.BootstrapMethodsAttribute;

        r1 = virtualinvoke r0.<javassist.bytecode.BootstrapMethodsAttribute: byte[] get()>();

        i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r1, 0);

        r2 = newarray (javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod)[i0];

        i5 = 2;

        i6 = 0;

     label1:
        if i6 >= i0 goto label4;

        i1 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r1, i5);

        $i3 = i5 + 2;

        i2 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r1, $i3);

        r3 = newarray (int)[i2];

        i5 = i5 + 4;

        i7 = 0;

     label2:
        if i7 >= i2 goto label3;

        $i4 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r1, i5);

        r3[i7] = $i4;

        i5 = i5 + 2;

        i7 = i7 + 1;

        goto label2;

     label3:
        $r4 = new javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod;

        specialinvoke $r4.<javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod: void <init>(int,int[])>(i1, r3);

        r2[i6] = $r4;

        i6 = i6 + 1;

        goto label1;

     label4:
        return r2;
    }

    public javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.BootstrapMethodsAttribute r0, $r6;
        javassist.bytecode.ConstPool r1, r4;
        java.util.Map r2;
        javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod[] r3;
        javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        int[] $r7, $r8, $r9;

        r0 := @this: javassist.bytecode.BootstrapMethodsAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        r3 = virtualinvoke r0.<javassist.bytecode.BootstrapMethodsAttribute: javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod[] getMethods()>();

        r4 = virtualinvoke r0.<javassist.bytecode.BootstrapMethodsAttribute: javassist.bytecode.ConstPool getConstPool()>();

        i6 = 0;

     label1:
        $i0 = lengthof r3;

        if i6 >= $i0 goto label4;

        r5 = r3[i6];

        $i1 = r5.<javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod: int methodRef>;

        $i2 = virtualinvoke r4.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>($i1, r1, r2);

        r5.<javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod: int methodRef> = $i2;

        i7 = 0;

     label2:
        $r7 = r5.<javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod: int[] arguments>;

        $i3 = lengthof $r7;

        if i7 >= $i3 goto label3;

        $r9 = r5.<javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod: int[] arguments>;

        $r8 = r5.<javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod: int[] arguments>;

        $i4 = $r8[i7];

        $i5 = virtualinvoke r4.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>($i4, r1, r2);

        $r9[i7] = $i5;

        i7 = i7 + 1;

        goto label2;

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        $r6 = new javassist.bytecode.BootstrapMethodsAttribute;

        specialinvoke $r6.<javassist.bytecode.BootstrapMethodsAttribute: void <init>(javassist.bytecode.ConstPool,javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod[])>(r1, r3);

        return $r6;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.BootstrapMethodsAttribute: java.lang.String tag> = "BootstrapMethods";

        return;
    }
}
