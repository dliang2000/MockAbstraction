class org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear extends java.lang.Object
{
    public final int iMonthOfYear;
    public final int iDayOfMonth;
    public final int iDayOfWeek;
    public final boolean iAdvanceDayOfWeek;
    public final int iMillisOfDay;
    public final char iZoneChar;

    void <init>()
    {
        org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear r0;

        r0 := @this: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iMonthOfYear> = 1;

        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iDayOfMonth> = 1;

        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iDayOfWeek> = 0;

        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: boolean iAdvanceDayOfWeek> = 0;

        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iMillisOfDay> = 0;

        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: char iZoneChar> = 119;

        return;
    }

    void <init>(java.util.StringTokenizer)
    {
        org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear r0;
        java.util.StringTokenizer r1;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6;
        java.lang.String $r2, $r5, $r8, $r9, $r10, $r11, r12, r14;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i13, i14;
        char $c2, c12;
        org.joda.time.LocalDate $r3, $r4, $r15, r16;
        java.lang.NumberFormatException $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear;

        r1 := @parameter0: java.util.StringTokenizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i8 = 1;

        i9 = 1;

        i10 = 0;

        i11 = 0;

        z4 = 0;

        c12 = 119;

        $z0 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label13;

        $r2 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        i8 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: int parseMonth(java.lang.String)>($r2);

        $z1 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label13;

        r12 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z2 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("last");

        if $z2 == 0 goto label01;

        i9 = -1;

        $r5 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>(4);

        i10 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: int parseDayOfWeek(java.lang.String)>($r5);

        z4 = 0;

        goto label06;

     label01:
        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r12);

        i10 = 0;

        z4 = 0;

     label02:
        goto label06;

     label03:
        $r6 := @caughtexception;

        i13 = virtualinvoke r12.<java.lang.String: int indexOf(java.lang.String)>(">=");

        if i13 <= 0 goto label04;

        $i7 = i13 + 2;

        $r10 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>($i7);

        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $r11 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, i13);

        i10 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: int parseDayOfWeek(java.lang.String)>($r11);

        z4 = 1;

        goto label06;

     label04:
        i14 = virtualinvoke r12.<java.lang.String: int indexOf(java.lang.String)>("<=");

        if i14 <= 0 goto label05;

        $i6 = i14 + 2;

        $r8 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>($i6);

        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $r9 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, i14);

        i10 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: int parseDayOfWeek(java.lang.String)>($r9);

        z4 = 0;

        goto label06;

     label05:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r12);

        throw $r7;

     label06:
        $z5 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z5 == 0 goto label13;

        r14 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = virtualinvoke r14.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $c2 = virtualinvoke r14.<java.lang.String: char charAt(int)>($i1);

        c12 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: char parseZoneChar(char)>($c2);

        $z3 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("24:00");

        if $z3 == 0 goto label12;

        if i9 != -1 goto label07;

        $r4 = new org.joda.time.LocalDate;

        specialinvoke $r4.<org.joda.time.LocalDate: void <init>(int,int,int)>(2001, i8, 1);

        $r15 = virtualinvoke $r4.<org.joda.time.LocalDate: org.joda.time.LocalDate plusMonths(int)>(1);

        goto label08;

     label07:
        $r3 = new org.joda.time.LocalDate;

        specialinvoke $r3.<org.joda.time.LocalDate: void <init>(int,int,int)>(2001, i8, i9);

        $r15 = virtualinvoke $r3.<org.joda.time.LocalDate: org.joda.time.LocalDate plusDays(int)>(1);

     label08:
        r16 = $r15;

        if i9 == -1 goto label09;

        if i10 == 0 goto label09;

        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        z4 = $z6;

        i8 = virtualinvoke r16.<org.joda.time.LocalDate: int getMonthOfYear()>();

        i9 = virtualinvoke r16.<org.joda.time.LocalDate: int getDayOfMonth()>();

        if i10 == 0 goto label11;

        $i3 = i10 - 1;

        $i4 = $i3 + 1;

        $i5 = $i4 % 7;

        i10 = $i5 + 1;

     label11:
        goto label13;

     label12:
        i11 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: int parseTime(java.lang.String)>(r14);

     label13:
        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iMonthOfYear> = i8;

        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iDayOfMonth> = i9;

        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iDayOfWeek> = i10;

        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: boolean iAdvanceDayOfWeek> = z4;

        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iMillisOfDay> = i11;

        r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: char iZoneChar> = c12;

        return;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
    }

    public void addRecurring(org.joda.time.tz.DateTimeZoneBuilder, java.lang.String, int, int, int)
    {
        org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear r0;
        org.joda.time.tz.DateTimeZoneBuilder r1;
        java.lang.String r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        char $c7;

        r0 := @this: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear;

        r1 := @parameter0: org.joda.time.tz.DateTimeZoneBuilder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $c7 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: char iZoneChar>;

        $i6 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iMonthOfYear>;

        $i5 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iDayOfMonth>;

        $i4 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iDayOfWeek>;

        $z0 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: boolean iAdvanceDayOfWeek>;

        $i3 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iMillisOfDay>;

        virtualinvoke r1.<org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.tz.DateTimeZoneBuilder addRecurringSavings(java.lang.String,int,int,int,char,int,int,int,boolean,int)>(r2, i0, i1, i2, $c7, $i6, $i5, $i4, $z0, $i3);

        return;
    }

    public void addCutover(org.joda.time.tz.DateTimeZoneBuilder, int)
    {
        org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear r0;
        org.joda.time.tz.DateTimeZoneBuilder r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        char $c5;

        r0 := @this: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear;

        r1 := @parameter0: org.joda.time.tz.DateTimeZoneBuilder;

        i0 := @parameter1: int;

        $c5 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: char iZoneChar>;

        $i4 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iMonthOfYear>;

        $i3 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iDayOfMonth>;

        $i2 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iDayOfWeek>;

        $z0 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: boolean iAdvanceDayOfWeek>;

        $i1 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iMillisOfDay>;

        virtualinvoke r1.<org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.tz.DateTimeZoneBuilder addCutover(int,char,int,int,int,boolean,int)>(i0, $c5, $i4, $i3, $i2, $z0, $i1);

        return;
    }

    public java.lang.String toString()
    {
        org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        char $c4;
        java.lang.String $r20;

        r0 := @this: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MonthOfYear: ");

        $i0 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iMonthOfYear>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DayOfMonth: ");

        $i1 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iDayOfMonth>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DayOfWeek: ");

        $i2 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iDayOfWeek>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AdvanceDayOfWeek: ");

        $z0 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: boolean iAdvanceDayOfWeek>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MillisOfDay: ");

        $i3 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: int iMillisOfDay>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ZoneChar: ");

        $c4 = r0.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: char iZoneChar>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }
}
