public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper extends java.lang.Object
{
    public static final byte UTF8_BOM_1;
    public static final byte UTF8_BOM_2;
    public static final byte UTF8_BOM_3;
    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context;
    private final java.io.InputStream _in;
    private final byte[] _inputBuffer;
    private int _inputPtr;
    private int _inputEnd;
    private final boolean _bufferRecyclable;
    private boolean _bigEndian;
    private int _bytesPerChar;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, java.io.InputStream)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        java.io.InputStream r2;
        byte[] $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in> = r2;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] allocReadIOBuffer()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer> = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bufferRecyclable> = 1;

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, byte[], int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        byte[] r2;
        int i0, i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = i0;

        $i2 = i0 + i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd> = $i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bufferRecyclable> = 0;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding detectEncoding() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        int $i0, $i1, $i4, $i5, $i8, $i9, $i11, $i12, $i15, $i16, $i17, $i18, $i21, $i22, $i23, $i24, $i27, $i28, i29, i30;
        java.lang.RuntimeException $r1;
        byte[] $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b2, $b6, $b10, $b13, $b19, $b25;
        short $s3, $s7, $s14, $s20, $s26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r8, $r9, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        z8 = 0;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean ensureLoaded(int)>(4);

        if $z0 == 0 goto label04;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $b10 = $r4[$i9];

        $i16 = $b10 << 24;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i12 = $i11 + 1;

        $b13 = $r5[$i12];

        $s14 = $b13 & 255;

        $i15 = $s14 << 16;

        $i22 = $i16 | $i15;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i18 = $i17 + 2;

        $b19 = $r6[$i18];

        $s20 = $b19 & 255;

        $i21 = $s20 << 8;

        $i27 = $i22 | $i21;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i24 = $i23 + 3;

        $b25 = $r7[$i24];

        $s26 = $b25 & 255;

        i29 = $i27 | $s26;

        $z5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean handleBOM(int)>(i29);

        if $z5 == 0 goto label01;

        z8 = 1;

        goto label03;

     label01:
        $z6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean checkUTF32(int)>(i29);

        if $z6 == 0 goto label02;

        z8 = 1;

        goto label03;

     label02:
        $i28 = i29 >>> 16;

        $z7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean checkUTF16(int)>($i28);

        if $z7 == 0 goto label03;

        z8 = 1;

     label03:
        goto label05;

     label04:
        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean ensureLoaded(int)>(2);

        if $z1 == 0 goto label05;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $b2 = $r2[$i1];

        $s3 = $b2 & 255;

        $i8 = $s3 << 8;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i5 = $i4 + 1;

        $b6 = $r3[$i5];

        $s7 = $b6 & 255;

        i30 = $i8 | $s7;

        $z4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean checkUTF16(int)>(i30);

        if $z4 == 0 goto label05;

        z8 = 1;

     label05:
        if z8 != 0 goto label06;

        r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        goto label15;

     label06:
        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar>;

        tableswitch($i0)
        {
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label14;
            case 4: goto label11;
            default: goto label14;
        };

     label07:
        r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        goto label15;

     label08:
        $z3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian>;

        if $z3 == 0 goto label09;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF16_BE>;

        goto label10;

     label09:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF16_LE>;

     label10:
        r8 = $r9;

        goto label15;

     label11:
        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian>;

        if $z2 == 0 goto label12;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF32_BE>;

        goto label13;

     label12:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF32_LE>;

     label13:
        r8 = $r10;

        goto label15;

     label14:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error");

        throw $r1;

     label15:
        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context>;

        virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void setEncoding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>(r8);

        return r8;
    }

    public static int skipUTF8BOM(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r0;
        int $i0, i1, i2, i3;
        java.io.IOException $r1, $r8;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r9, $r10, $r12, $r13;
        java.lang.String $r4, $r7, $r11, $r14;

        r0 := @parameter0: java.io.DataInput;

        i1 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if i1 == 239 goto label1;

        return i1;

     label1:
        i2 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if i2 == 187 goto label2;

        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected byte 0x");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" following 0xEF; should get 0xBB as part of UTF-8 BOM");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label2:
        i3 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if i3 == 191 goto label3;

        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected byte 0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" following 0xEF 0xBB; should get 0xBF as part of UTF-8 BOM");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label3:
        $i0 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        return $i0;
    }

    public java.io.Reader constructReader() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r1, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r2, $r4, $r5, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader $r3;
        java.io.InputStream $r6, r15;
        byte[] $r7, $r10, $r13;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.MergedStream $r9;
        java.io.ByteArrayInputStream $r12;
        java.lang.RuntimeException $r14;
        java.io.InputStreamReader $r16;
        java.lang.String $r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context>;

        r1 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding getEncoding()>();

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: int bits()>();

        lookupswitch($i0)
        {
            case 8: goto label1;
            case 16: goto label1;
            case 32: goto label4;
            default: goto label5;
        };

     label1:
        r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in>;

        if r15 != null goto label2;

        $r12 = new java.io.ByteArrayInputStream;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;

        specialinvoke $r12.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r13, $i8, $i7);

        r15 = $r12;

        goto label3;

     label2:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;

        if $i4 >= $i3 goto label3;

        $r9 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.MergedStream;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context>;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;

        specialinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.MergedStream: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int)>($r11, r15, $r10, $i6, $i5);

        r15 = $r9;

     label3:
        $r16 = new java.io.InputStreamReader;

        $r17 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: java.lang.String getJavaName()>();

        specialinvoke $r16.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r15, $r17);

        return $r16;

     label4:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in>;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context>;

        $r8 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding getEncoding()>();

        $z0 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: boolean isBigEndian()>();

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int,boolean)>($r5, $r6, $r7, $i1, $i2, $z0);

        return $r3;

     label5:
        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error");

        throw $r14;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser constructParser(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer r2, r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer r3, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r8, $r15;
        java.io.Reader $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature $r11;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser $r12;
        byte[] $r13;
        java.io.InputStream $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        i1 := @parameter4: int;

        i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding detectEncoding()>();

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        i3 = $i4 - i2;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        if r4 != $r6 goto label1;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES>;

        $z0 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledIn(int)>(i1);

        if $z0 == 0 goto label1;

        r5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int)>(i1);

        $r12 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context>;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in>;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bufferRecyclable>;

        specialinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,java.io.InputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,byte[],int,int,int,boolean)>($r15, i0, $r14, r1, r5, $r13, $i6, $i5, i3, $z1);

        return $r12;

     label1:
        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context>;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.Reader constructReader()>();

        $r10 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int)>(i1);

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)>($r8, i0, $r9, r1, $r10);

        return $r7;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        boolean $z0, $z1, $z2, $z3;
        byte $b0, $b1, b2;
        int i3, i4, i5, i6;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor;

        $z0 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();

        if $z0 != 0 goto label01;

        $r19 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;

        return $r19;

     label01:
        b2 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();

        if b2 != -17 goto label07;

        $z1 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();

        if $z1 != 0 goto label02;

        $r18 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;

        return $r18;

     label02:
        $b0 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();

        if $b0 == -69 goto label03;

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;

        return $r17;

     label03:
        $z2 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();

        if $z2 != 0 goto label04;

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;

        return $r16;

     label04:
        $b1 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();

        if $b1 == -65 goto label05;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;

        return $r15;

     label05:
        $z3 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();

        if $z3 != 0 goto label06;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;

        return $r14;

     label06:
        b2 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();

     label07:
        i3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipSpace(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor,byte)>(r0, b2);

        if i3 >= 0 goto label08;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;

        return $r13;

     label08:
        if i3 != 123 goto label12;

        i4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipSpace(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor)>(r0);

        if i4 >= 0 goto label09;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;

        return $r12;

     label09:
        if i4 == 34 goto label10;

        if i4 != 125 goto label11;

     label10:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>;

        return $r10;

     label11:
        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;

        return $r11;

     label12:
        if i3 != 91 goto label16;

        i5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipSpace(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor)>(r0);

        if i5 >= 0 goto label13;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;

        return $r9;

     label13:
        if i5 == 93 goto label14;

        if i5 != 91 goto label15;

     label14:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>;

        return $r7;

     label15:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>;

        return $r8;

     label16:
        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength WEAK_MATCH>;

        if i3 != 34 goto label17;

        return r1;

     label17:
        if i3 > 57 goto label18;

        if i3 < 48 goto label18;

        return r1;

     label18:
        if i3 != 45 goto label22;

        i6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipSpace(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor)>(r0);

        if i6 >= 0 goto label19;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;

        return $r6;

     label19:
        if i6 > 57 goto label20;

        if i6 < 48 goto label20;

        $r20 = r1;

        goto label21;

     label20:
        $r20 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;

     label21:
        return $r20;

     label22:
        if i3 != 110 goto label23;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength tryMatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength)>(r0, "ull", r1);

        return $r5;

     label23:
        if i3 != 116 goto label24;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength tryMatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength)>(r0, "rue", r1);

        return $r4;

     label24:
        if i3 != 102 goto label25;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength tryMatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength)>(r0, "alse", r1);

        return $r3;

     label25:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;

        return $r2;
    }

    private static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength tryMatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength r2, $r3, $r4;
        int i0, i3;
        boolean $z0;
        byte $b1;
        char $c2;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength;

        i3 = 0;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        if i3 >= i0 goto label4;

        $z0 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();

        if $z0 != 0 goto label2;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;

        return $r4;

     label2:
        $b1 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        if $b1 == $c2 goto label3;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;

        return $r3;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return r2;
    }

    private static int skipSpace(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor r0;
        boolean $z0;
        byte $b0;
        int $i1;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor;

        $z0 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $b0 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();

        $i1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipSpace(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor,byte)>(r0, $b0);

        return $i1;
    }

    private static int skipSpace(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor, byte) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor r0;
        short s0;
        byte b1;
        boolean $z0;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor;

        b1 := @parameter1: byte;

     label1:
        s0 = b1 & 255;

        if s0 == 32 goto label2;

        if s0 == 13 goto label2;

        if s0 == 10 goto label2;

        if s0 == 9 goto label2;

        return s0;

     label2:
        $z0 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();

        if $z0 != 0 goto label3;

        return -1;

     label3:
        b1 = interfaceinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();

        goto label1;
    }

    private boolean handleBOM(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case -16842752: goto label4;
            case -131072: goto label2;
            case 65279: goto label1;
            case 65534: goto label3;
            default: goto label5;
        };

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i10 = $i9 + 4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = $i10;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 4;

        return 1;

     label2:
        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i12 = $i11 + 4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = $i12;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 0;

        return 1;

     label3:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void reportWeirdUCS4(java.lang.String)>("2143");

        goto label5;

     label4:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void reportWeirdUCS4(java.lang.String)>("3412");

        goto label5;

     label5:
        i1 = i0 >>> 16;

        if i1 != 65279 goto label6;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i8 = $i7 + 2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = $i8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;

        return 1;

     label6:
        if i1 != 65534 goto label7;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i6 = $i5 + 2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = $i6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 0;

        return 1;

     label7:
        $i2 = i0 >>> 8;

        if $i2 != 15711167 goto label8;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        $i4 = $i3 + 3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr> = $i4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;

        return 1;

     label8:
        return 0;
    }

    private boolean checkUTF32(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        i0 := @parameter0: int;

        $i1 = i0 >> 8;

        if $i1 != 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;

        goto label5;

     label1:
        $i2 = i0 & 16777215;

        if $i2 != 0 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 0;

        goto label5;

     label2:
        $i3 = i0 & -16711681;

        if $i3 != 0 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void reportWeirdUCS4(java.lang.String)>("3412");

        goto label5;

     label3:
        $i4 = i0 & -65281;

        if $i4 != 0 goto label4;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void reportWeirdUCS4(java.lang.String)>("2143");

        goto label5;

     label4:
        return 0;

     label5:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 4;

        return 1;
    }

    private boolean checkUTF16(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        i0 := @parameter0: int;

        $i1 = i0 & 65280;

        if $i1 != 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 1;

        goto label3;

     label1:
        $i2 = i0 & 255;

        if $i2 != 0 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean _bigEndian> = 0;

        goto label3;

     label2:
        return 0;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _bytesPerChar> = 2;

        return 1;
    }

    private void reportWeirdUCS4(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper r0;
        java.lang.String r1, $r7;
        java.io.CharConversionException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.io.CharConversionException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported UCS-4 endianness (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") detected");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.CharConversionException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    protected boolean ensureLoaded(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        java.io.InputStream $r1, $r4;
        byte[] $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        i0 := @parameter0: int;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputPtr>;

        i9 = $i2 - $i1;

     label1:
        if i9 >= i0 goto label5;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in>;

        if $r1 != null goto label2;

        i10 = -1;

        goto label3;

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.InputStream _in>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte[] _inputBuffer>;

        $i4 = lengthof $r2;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;

        $i5 = $i4 - $i3;

        i10 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>($r3, $i6, $i5);

     label3:
        if i10 >= 1 goto label4;

        return 0;

     label4:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd>;

        $i8 = $i7 + i10;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int _inputEnd> = $i8;

        i9 = i9 + i10;

        goto label1;

     label5:
        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte UTF8_BOM_3> = -65;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte UTF8_BOM_2> = -69;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: byte UTF8_BOM_1> = -17;

        return;
    }
}
