final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes extends java.lang.Object
{
    public static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes instance;
    private final java.util.Set UNSAFE;

    private void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes r0;
        java.util.HashSet $r1;
        java.lang.Class $r2, $r5, $r8, $r11, $r14;
        java.util.Set $r3, $r6, $r9, $r12, $r15, $r17, $r18, $r19;
        java.lang.String $r4, $r7, $r10, $r13, $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: java.util.Set UNSAFE> = $r1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: java.util.Set UNSAFE>;

        $r2 = class "Ljava/lang/Object;";

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: java.util.Set UNSAFE>;

        $r5 = class "Ljava/io/Closeable;";

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7);

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: java.util.Set UNSAFE>;

        $r8 = class "Ljava/io/Serializable;";

        $r10 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r10);

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: java.util.Set UNSAFE>;

        $r11 = class "Ljava/lang/AutoCloseable;";

        $r13 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r13);

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: java.util.Set UNSAFE>;

        $r14 = class "Ljava/lang/Cloneable;";

        $r16 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>($r16);

        $r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: java.util.Set UNSAFE>;

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>("java.util.logging.Handler");

        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: java.util.Set UNSAFE>;

        interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>("javax.naming.Referenceable");

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: java.util.Set UNSAFE>;

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>("javax.sql.DataSource");

        return;
    }

    public boolean isUnsafeBaseType(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes r0;
        java.lang.Class r1;
        java.util.Set $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: java.util.Set UNSAFE>;

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes $r0;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes instance> = $r0;

        return;
    }
}
