class javassist.bytecode.Utf8Info extends javassist.bytecode.ConstInfo
{
    static final int tag;
    java.lang.String string;

    public void <init>(java.lang.String, int)
    {
        javassist.bytecode.Utf8Info r0;
        java.lang.String r1;
        int i0;

        r0 := @this: javassist.bytecode.Utf8Info;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<javassist.bytecode.ConstInfo: void <init>(int)>(i0);

        r0.<javassist.bytecode.Utf8Info: java.lang.String string> = r1;

        return;
    }

    public void <init>(java.io.DataInputStream, int) throws java.io.IOException
    {
        javassist.bytecode.Utf8Info r0;
        java.io.DataInputStream r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.Utf8Info;

        r1 := @parameter0: java.io.DataInputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<javassist.bytecode.ConstInfo: void <init>(int)>(i0);

        $r2 = virtualinvoke r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        r0.<javassist.bytecode.Utf8Info: java.lang.String string> = $r2;

        return;
    }

    public int hashCode()
    {
        javassist.bytecode.Utf8Info r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: javassist.bytecode.Utf8Info;

        $r1 = r0.<javassist.bytecode.Utf8Info: java.lang.String string>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        javassist.bytecode.Utf8Info r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r4;

        r0 := @this: javassist.bytecode.Utf8Info;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof javassist.bytecode.Utf8Info;

        if $z0 == 0 goto label1;

        $r2 = (javassist.bytecode.Utf8Info) r1;

        $r4 = $r2.<javassist.bytecode.Utf8Info: java.lang.String string>;

        $r3 = r0.<javassist.bytecode.Utf8Info: java.lang.String string>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int getTag()
    {
        javassist.bytecode.Utf8Info r0;

        r0 := @this: javassist.bytecode.Utf8Info;

        return 1;
    }

    public int copy(javassist.bytecode.ConstPool, javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.Utf8Info r0;
        javassist.bytecode.ConstPool r1, r2;
        java.util.Map r3;
        java.lang.String $r4;
        int $i0;

        r0 := @this: javassist.bytecode.Utf8Info;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: javassist.bytecode.ConstPool;

        r3 := @parameter2: java.util.Map;

        $r4 = r0.<javassist.bytecode.Utf8Info: java.lang.String string>;

        $i0 = virtualinvoke r2.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>($r4);

        return $i0;
    }

    public void write(java.io.DataOutputStream) throws java.io.IOException
    {
        javassist.bytecode.Utf8Info r0;
        java.io.DataOutputStream r1;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.Utf8Info;

        r1 := @parameter0: java.io.DataOutputStream;

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>(1);

        $r2 = r0.<javassist.bytecode.Utf8Info: java.lang.String string>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r2);

        return;
    }

    public void print(java.io.PrintWriter)
    {
        javassist.bytecode.Utf8Info r0;
        java.io.PrintWriter r1;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.Utf8Info;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("UTF8 \"");

        $r2 = r0.<javassist.bytecode.Utf8Info: java.lang.String string>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("\"");

        return;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.Utf8Info: int tag> = 1;

        return;
    }
}
