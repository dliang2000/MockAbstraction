class javassist.bytecode.StackMap$Printer extends javassist.bytecode.StackMap$Walker
{
    private java.io.PrintWriter writer;

    public void <init>(javassist.bytecode.StackMap, java.io.PrintWriter)
    {
        javassist.bytecode.StackMap$Printer r0;
        javassist.bytecode.StackMap r1;
        java.io.PrintWriter r2;

        r0 := @this: javassist.bytecode.StackMap$Printer;

        r1 := @parameter0: javassist.bytecode.StackMap;

        r2 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<javassist.bytecode.StackMap$Walker: void <init>(javassist.bytecode.StackMap)>(r1);

        r0.<javassist.bytecode.StackMap$Printer: java.io.PrintWriter writer> = r2;

        return;
    }

    public void print()
    {
        javassist.bytecode.StackMap$Printer r0;
        int i0;
        byte[] $r1;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.io.PrintWriter $r3;
        java.lang.String $r6;

        r0 := @this: javassist.bytecode.StackMap$Printer;

        $r1 = r0.<javassist.bytecode.StackMap$Printer: byte[] info>;

        i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, 0);

        $r3 = r0.<javassist.bytecode.StackMap$Printer: java.io.PrintWriter writer>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        virtualinvoke r0.<javassist.bytecode.StackMap$Printer: void visit()>();

        return;
    }

    public int locals(int, int, int)
    {
        javassist.bytecode.StackMap$Printer r0;
        int i0, i1, i2, $i3;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.io.PrintWriter $r2;
        java.lang.String $r5;

        r0 := @this: javassist.bytecode.StackMap$Printer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<javassist.bytecode.StackMap$Printer: java.io.PrintWriter writer>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  * offset ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $i3 = specialinvoke r0.<javassist.bytecode.StackMap$Walker: int locals(int,int,int)>(i0, i1, i2);

        return $i3;
    }
}
