public class org.apache.flink.api.common.aggregators.DoubleSumAggregator extends java.lang.Object implements org.apache.flink.api.common.aggregators.Aggregator
{
    private org.apache.flink.types.DoubleValue wrapper;
    private double sum;

    public void <init>()
    {
        org.apache.flink.api.common.aggregators.DoubleSumAggregator r0;
        org.apache.flink.types.DoubleValue $r1;

        r0 := @this: org.apache.flink.api.common.aggregators.DoubleSumAggregator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.flink.types.DoubleValue;

        specialinvoke $r1.<org.apache.flink.types.DoubleValue: void <init>()>();

        r0.<org.apache.flink.api.common.aggregators.DoubleSumAggregator: org.apache.flink.types.DoubleValue wrapper> = $r1;

        return;
    }

    public org.apache.flink.types.DoubleValue getAggregate()
    {
        org.apache.flink.api.common.aggregators.DoubleSumAggregator r0;
        double $d0;
        org.apache.flink.types.DoubleValue $r1, $r2;

        r0 := @this: org.apache.flink.api.common.aggregators.DoubleSumAggregator;

        $r1 = r0.<org.apache.flink.api.common.aggregators.DoubleSumAggregator: org.apache.flink.types.DoubleValue wrapper>;

        $d0 = r0.<org.apache.flink.api.common.aggregators.DoubleSumAggregator: double sum>;

        virtualinvoke $r1.<org.apache.flink.types.DoubleValue: void setValue(double)>($d0);

        $r2 = r0.<org.apache.flink.api.common.aggregators.DoubleSumAggregator: org.apache.flink.types.DoubleValue wrapper>;

        return $r2;
    }

    public void aggregate(org.apache.flink.types.DoubleValue)
    {
        org.apache.flink.api.common.aggregators.DoubleSumAggregator r0;
        org.apache.flink.types.DoubleValue r1;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.flink.api.common.aggregators.DoubleSumAggregator;

        r1 := @parameter0: org.apache.flink.types.DoubleValue;

        $d0 = r0.<org.apache.flink.api.common.aggregators.DoubleSumAggregator: double sum>;

        $d1 = virtualinvoke r1.<org.apache.flink.types.DoubleValue: double getValue()>();

        $d2 = $d0 + $d1;

        r0.<org.apache.flink.api.common.aggregators.DoubleSumAggregator: double sum> = $d2;

        return;
    }

    public void aggregate(double)
    {
        org.apache.flink.api.common.aggregators.DoubleSumAggregator r0;
        double d0, $d1, $d2;

        r0 := @this: org.apache.flink.api.common.aggregators.DoubleSumAggregator;

        d0 := @parameter0: double;

        $d1 = r0.<org.apache.flink.api.common.aggregators.DoubleSumAggregator: double sum>;

        $d2 = $d1 + d0;

        r0.<org.apache.flink.api.common.aggregators.DoubleSumAggregator: double sum> = $d2;

        return;
    }

    public void reset()
    {
        org.apache.flink.api.common.aggregators.DoubleSumAggregator r0;

        r0 := @this: org.apache.flink.api.common.aggregators.DoubleSumAggregator;

        r0.<org.apache.flink.api.common.aggregators.DoubleSumAggregator: double sum> = 0.0;

        return;
    }

    public volatile void aggregate(org.apache.flink.types.Value)
    {
        org.apache.flink.api.common.aggregators.DoubleSumAggregator r0;
        org.apache.flink.types.Value r1;
        org.apache.flink.types.DoubleValue $r2;

        r0 := @this: org.apache.flink.api.common.aggregators.DoubleSumAggregator;

        r1 := @parameter0: org.apache.flink.types.Value;

        $r2 = (org.apache.flink.types.DoubleValue) r1;

        virtualinvoke r0.<org.apache.flink.api.common.aggregators.DoubleSumAggregator: void aggregate(org.apache.flink.types.DoubleValue)>($r2);

        return;
    }

    public volatile org.apache.flink.types.Value getAggregate()
    {
        org.apache.flink.api.common.aggregators.DoubleSumAggregator r0;
        org.apache.flink.types.DoubleValue $r1;

        r0 := @this: org.apache.flink.api.common.aggregators.DoubleSumAggregator;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.aggregators.DoubleSumAggregator: org.apache.flink.types.DoubleValue getAggregate()>();

        return $r1;
    }
}
