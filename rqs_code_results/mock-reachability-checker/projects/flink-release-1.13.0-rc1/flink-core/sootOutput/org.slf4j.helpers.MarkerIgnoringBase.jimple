public abstract class org.slf4j.helpers.MarkerIgnoringBase extends org.slf4j.helpers.NamedLoggerBase implements org.slf4j.Logger
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        specialinvoke r0.<org.slf4j.helpers.NamedLoggerBase: void <init>()>();

        return;
    }

    public boolean isTraceEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        $z0 = virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isTraceEnabled()>();

        return $z0;
    }

    public void trace(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String)>(r2);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Object)>(r2, r3);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3, r4;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        return;
    }

    public transient void trace(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object[] r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Object[])>(r2, r3);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Throwable r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void trace(java.lang.String,java.lang.Throwable)>(r2, r3);

        return;
    }

    public boolean isDebugEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        $z0 = virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isDebugEnabled()>();

        return $z0;
    }

    public void debug(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String)>(r2);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Object)>(r2, r3);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3, r4;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        return;
    }

    public transient void debug(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object[] r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Object[])>(r2, r3);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Throwable r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void debug(java.lang.String,java.lang.Throwable)>(r2, r3);

        return;
    }

    public boolean isInfoEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        $z0 = virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isInfoEnabled()>();

        return $z0;
    }

    public void info(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String)>(r2);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Object)>(r2, r3);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3, r4;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        return;
    }

    public transient void info(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object[] r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Object[])>(r2, r3);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Throwable r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void info(java.lang.String,java.lang.Throwable)>(r2, r3);

        return;
    }

    public boolean isWarnEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        $z0 = virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isWarnEnabled()>();

        return $z0;
    }

    public void warn(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String)>(r2);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Object)>(r2, r3);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3, r4;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        return;
    }

    public transient void warn(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object[] r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Object[])>(r2, r3);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Throwable r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void warn(java.lang.String,java.lang.Throwable)>(r2, r3);

        return;
    }

    public boolean isErrorEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        $z0 = virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: boolean isErrorEnabled()>();

        return $z0;
    }

    public void error(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String)>(r2);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Object)>(r2, r3);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3, r4;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        return;
    }

    public transient void error(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object[] r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Object[])>(r2, r3);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Throwable r3;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void error(java.lang.String,java.lang.Throwable)>(r2, r3);

        return;
    }

    public java.lang.String toString()
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r9;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r6 = virtualinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public volatile java.lang.String getName()
    {
        org.slf4j.helpers.MarkerIgnoringBase r0;
        java.lang.String $r1;

        r0 := @this: org.slf4j.helpers.MarkerIgnoringBase;

        $r1 = specialinvoke r0.<org.slf4j.helpers.NamedLoggerBase: java.lang.String getName()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.slf4j.helpers.MarkerIgnoringBase: long serialVersionUID> = 9044267456635152283L;

        return;
    }
}
