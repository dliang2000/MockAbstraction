public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer implements java.io.Serializable, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable
{
    private static final long serialVersionUID;
    protected static final int F_MASK_INT_COERCIONS;
    protected static final int F_MASK_ACCEPT_ARRAYS;
    protected final java.lang.Class _valueClass;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType;

    protected void <init>(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.Class r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType> = null;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        java.lang.Class $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>();

        if r1 != null goto label1;

        $r3 = class "Ljava/lang/Object;";

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass> = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType> = r1;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0, r1;
        java.lang.Class $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: void <init>()>();

        $r2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass> = $r2;

        $r3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType> = $r3;

        return;
    }

    public java.lang.Class handledType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        return $r1;
    }

    public final java.lang.Class getValueClass()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2, $r4, $r5;
        java.lang.Class $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        if $r2 == null goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        return $r5;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        return null;
    }

    protected boolean isDefaultDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isJacksonStdImpl(java.lang.Object)>(r1);

        return $z0;
    }

    protected boolean isDefaultKeyDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer;

        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isJacksonStdImpl(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object deserializeWithType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        $r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r4;
    }

    protected java.lang.Object _deserializeFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction r3, $r13;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r4, $r7, $r8, $r9, $r15;
        java.lang.Object r5, $r11, $r12, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r6;
        int[] $r10;
        int $i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r14;
        java.lang.Object[] $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;

        z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r6);

        if z0 != 0 goto label1;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;

        if r3 == $r13 goto label7;

     label1:
        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if r4 != $r7 goto label5;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;

        $i0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();

        $i1 = $r10[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            default: goto label4;
        };

     label2:
        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return $r12;

     label3:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return $r11;

     label4:
        goto label7;

     label5:
        if z0 == 0 goto label7;

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeWrappedValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if $r8 == $r9 goto label6;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void handleMissingEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

     label6:
        return r5;

     label7:
        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        $r16 = newarray (java.lang.Object)[0];

        $r17 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>($r14, $r15, r1, null, $r16);

        return $r17;
    }

    protected java.lang.Object _deserializeFromEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r3, $r4, $r8;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r5, $r9;
        java.lang.Object $r6, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r4);

        if $z0 == 0 goto label2;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT>;

        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r7);

        if $z1 == 0 goto label2;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if r3 != $r8 goto label1;

        return null;

     label1:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r10 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r9, r1);

        return $r10;

     label2:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r6 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r5, r1);

        return $r6;
    }

    protected java.lang.Object _deserializeFromString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1, $r34;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator r3;
        java.lang.Class r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape $r5, $r13, $r18, $r27;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r6, $r14, $r19, $r23, $r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r7, $r8, $r15, $r16, $r20, $r21, $r24, r31, r32;
        java.lang.String $r9, $r10, r30, r33;
        java.lang.Object $r11, $r12, $r17, $r22, $r25, $r28, $r29, $r36;
        long $l0;
        int $i1;
        java.lang.Object[] $r35;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();

        r30 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getValueAsString()>();

        if r3 == null goto label1;

        $z7 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromString()>();

        if $z7 == 0 goto label1;

        $r29 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r30);

        return $r29;

     label1:
        $z0 = virtualinvoke r30.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r26 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()>();

        $r27 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>;

        r31 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>($r26, r4, $r27);

        $r28 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeFromEmptyString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.String)>(r1, r2, r31, r4, "empty String (\"\")");

        return $r28;

     label2:
        $z1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isBlank(java.lang.String)>(r30);

        if $z1 == 0 goto label3;

        $r23 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()>();

        $r24 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;

        r32 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction)>($r23, r4, $r24);

        $r25 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeFromEmptyString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.String)>(r1, r2, r32, r4, "blank String (all whitespace)");

        return $r25;

     label3:
        if r3 == null goto label7;

        r30 = virtualinvoke r30.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromInt()>();

        if $z2 == 0 goto label4;

        $r19 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        $r18 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape String>;

        $r20 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>($r19, class "Ljava/lang/Integer;", $r18);

        $r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction TryConvert>;

        if $r20 != $r21 goto label4;

        $i1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: int _parseIntPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r30);

        $r22 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromInt(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,int)>(r2, $i1);

        return $r22;

     label4:
        $z3 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromLong()>();

        if $z3 == 0 goto label5;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape String>;

        $r15 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>($r14, class "Ljava/lang/Long;", $r13);

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction TryConvert>;

        if $r15 != $r16 goto label5;

        $l0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: long _parseLongPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r30);

        $r17 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromLong(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,long)>(r2, $l0);

        return $r17;

     label5:
        $z4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromBoolean()>();

        if $z4 == 0 goto label7;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Boolean>;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape String>;

        $r7 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>($r6, class "Ljava/lang/Boolean;", $r5);

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction TryConvert>;

        if $r7 != $r8 goto label7;

        r33 = virtualinvoke r30.<java.lang.String: java.lang.String trim()>();

        $r9 = "true";

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r33);

        if $z5 == 0 goto label6;

        $r12 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromBoolean(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,boolean)>(r2, 1);

        return $r12;

     label6:
        $r10 = "false";

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r33);

        if $z6 == 0 goto label7;

        $r11 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createFromBoolean(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,boolean)>(r2, 0);

        return $r11;

     label7:
        $r34 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser getParser()>();

        $r35 = newarray (java.lang.Object)[1];

        $r35[0] = r30;

        $r36 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleMissingInstantiator(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(r4, r3, $r34, "no String-argument constructor/factory method to deserialize from String value (\'%s\')", $r35);

        return $r36;
    }

    protected java.lang.Object _deserializeFromEmptyString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction, java.lang.Class, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction r3;
        java.lang.Class r4;
        java.lang.String r5;
        int[] $r6;
        int $i0, $i1;
        java.lang.Object $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction;

        r4 := @parameter3: java.lang.Class;

        r5 := @parameter4: java.lang.String;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;

        $i0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label2;
            default: goto label3;
        };

     label1:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return $r8;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r3, r4, "", "empty String (\"\")");

     label3:
        return null;
    }

    protected java.lang.Object _deserializeWrappedValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.String r3, $r9;
        java.lang.Object r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, $r10, $r12;
        boolean $z0;
        java.lang.Object[] $r7, $r13;
        java.lang.Class $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r5);

        if $z0 == 0 goto label1;

        $r7 = newarray (java.lang.Object)[3];

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>($r8);

        $r7[0] = $r9;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        $r7[1] = $r10;

        $r7[2] = "DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS";

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot deserialize instance of %s out of %s token: nested Arrays not allowed with %s", $r7);

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r12 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r13 = newarray (java.lang.Object)[0];

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>($r11, $r12, r1, r3, $r13);

        return r4;

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r6;
    }

    protected final boolean _parseBooleanPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, java.lang.Class) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r2;
        java.lang.Class r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r3 := @parameter2: java.lang.Class;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _parseBooleanPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2, r1);

        return $z0;
    }

    protected final boolean _parseBooleanPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int i0, $i1;
        java.lang.Boolean r3, $r5, $r6, $r14, $r18;
        java.lang.Class $r4, $r7, $r12, $r16, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r9, $r10, r22;
        java.lang.Object[] $r11;
        java.lang.Object $r13, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r15;
        java.lang.String r21, r23;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label08;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label08;
            case 6: goto label01;
            case 7: goto label02;
            case 8: goto label08;
            case 9: goto label03;
            case 10: goto label04;
            case 11: goto label05;
            default: goto label08;
        };

     label01:
        r21 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label09;

     label02:
        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Boolean _coerceBooleanFromInt(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(r1, r2, $r4);

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean equals(java.lang.Object)>($r6);

        return $z0;

     label03:
        return 1;

     label04:
        return 0;

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return 0;

     label06:
        $r20 = <java.lang.Boolean: java.lang.Class TYPE>;

        r21 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r20);

        goto label09;

     label07:
        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;

        $z4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r15);

        if $z4 == 0 goto label08;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        z6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _parseBooleanPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return z6;

     label08:
        $r16 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r17 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r16, r1);

        $r18 = (java.lang.Boolean) $r17;

        $z5 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        return $z5;

     label09:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Boolean>;

        $r7 = <java.lang.Boolean: java.lang.Class TYPE>;

        r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(r2, r21, $r8, $r7);

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r22 != $r9 goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return 0;

     label10:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r22 != $r10 goto label11;

        return 0;

     label11:
        r23 = virtualinvoke r21.<java.lang.String: java.lang.String trim()>();

        i0 = virtualinvoke r23.<java.lang.String: int length()>();

        if i0 != 4 goto label12;

        $z3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isTrue(java.lang.String)>(r23);

        if $z3 == 0 goto label13;

        return 1;

     label12:
        if i0 != 5 goto label13;

        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isFalse(java.lang.String)>(r23);

        if $z2 == 0 goto label13;

        return 0;

     label13:
        $z7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(r23);

        if $z7 == 0 goto label14;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r23);

        return 0;

     label14:
        $r12 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r11 = newarray (java.lang.Object)[0];

        $r13 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r12, r23, "only \"true\"/\"True\"/\"TRUE\" or \"false\"/\"False\"/\"FALSE\" recognized", $r11);

        r3 = (java.lang.Boolean) $r13;

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z1 = virtualinvoke $r14.<java.lang.Boolean: boolean equals(java.lang.Object)>(r3);

        return $z1;
    }

    protected boolean _isTrue(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.String r1, $r2, $r3, $r4;
        char c0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.String;

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if c0 != 116 goto label1;

        $r4 = "true";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z2;

     label1:
        if c0 != 84 goto label5;

        $r2 = "TRUE";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r3 = "True";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;

     label5:
        return 0;
    }

    protected boolean _isFalse(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.String r1, $r2, $r3, $r4;
        char c0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.String;

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if c0 != 102 goto label1;

        $r4 = "false";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z2;

     label1:
        if c0 != 70 goto label5;

        $r2 = "FALSE";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r3 = "False";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;

     label5:
        return 0;
    }

    protected final java.lang.Boolean _parseBoolean(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Class r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction r4, $r9, $r10;
        int i0, $i1;
        java.lang.Boolean $r5, $r6, $r7, $r13, $r14, $r15, $r16, $r18, $r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r8;
        java.lang.Object[] $r11;
        java.lang.Object $r12, $r17, $r19;
        boolean $z0, $z1, $z2;
        java.lang.String r21, r22;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.lang.Class;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label08;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label08;
            case 6: goto label01;
            case 7: goto label02;
            case 8: goto label08;
            case 9: goto label03;
            case 10: goto label04;
            case 11: goto label05;
            default: goto label08;
        };

     label01:
        r21 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label09;

     label02:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Boolean _coerceBooleanFromInt(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(r1, r2, r3);

        return $r7;

     label03:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r6;

     label04:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r5;

     label05:
        return null;

     label06:
        r21 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, r3);

        goto label09;

     label07:
        $r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r18 = (java.lang.Boolean) $r17;

        return $r18;

     label08:
        $r19 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r3, r1);

        $r20 = (java.lang.Boolean) $r19;

        return $r20;

     label09:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Boolean>;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(r2, r21, $r8, r3);

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r4 != $r9 goto label10;

        return null;

     label10:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r4 != $r10 goto label11;

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r16;

     label11:
        r22 = virtualinvoke r21.<java.lang.String: java.lang.String trim()>();

        i0 = virtualinvoke r22.<java.lang.String: int length()>();

        if i0 != 4 goto label12;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isTrue(java.lang.String)>(r22);

        if $z1 == 0 goto label13;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r15;

     label12:
        if i0 != 5 goto label13;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isFalse(java.lang.String)>(r22);

        if $z0 == 0 goto label13;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r14;

     label13:
        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _checkTextualNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r22);

        if $z2 == 0 goto label14;

        return null;

     label14:
        $r11 = newarray (java.lang.Object)[0];

        $r12 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(r3, r22, "only \"true\" or \"false\" recognized", $r11);

        $r13 = (java.lang.Boolean) $r12;

        return $r13;
    }

    protected final byte _parseBytePrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int $i0, i8;
        java.lang.Class $r4, $r7, $r12, $r16, $r21, $r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r5, $r6, $r9, $r10, r28, r29;
        byte $b1, $b2, $b3, $b4, $b5, $b6, b7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r8;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r11, $r23;
        java.lang.Object $r13, $r18, $r25;
        java.lang.Byte $r14, $r19, $r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r17;
        java.lang.IllegalArgumentException $r22;
        java.lang.String r27, r30;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label07;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label09;
            case 6: goto label01;
            case 7: goto label05;
            case 8: goto label02;
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label06;
            default: goto label09;
        };

     label01:
        r27 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label10;

     label02:
        $r4 = <java.lang.Byte: java.lang.Class TYPE>;

        r28 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(r1, r2, $r4);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r28 != $r5 goto label03;

        return 0;

     label03:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r28 != $r6 goto label04;

        return 0;

     label04:
        $b1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: byte getByteValue()>();

        return $b1;

     label05:
        $b2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: byte getByteValue()>();

        return $b2;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return 0;

     label07:
        $r21 = <java.lang.Byte: java.lang.Class TYPE>;

        r27 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r21);

        goto label10;

     label08:
        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;

        $z2 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r15);

        if $z2 == 0 goto label09;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        b7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: byte _parseBytePrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return b7;

     label09:
        $r16 = <java.lang.Byte: java.lang.Class TYPE>;

        $r17 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($r16);

        $r18 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r17, r1);

        $r19 = (java.lang.Byte) $r18;

        $b5 = virtualinvoke $r19.<java.lang.Byte: byte byteValue()>();

        return $b5;

     label10:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        $r7 = <java.lang.Byte: java.lang.Class TYPE>;

        r29 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(r2, r27, $r8, $r7);

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r29 != $r9 goto label11;

        return 0;

     label11:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r29 != $r10 goto label12;

        return 0;

     label12:
        r30 = virtualinvoke r27.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(r30);

        if $z0 == 0 goto label13;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r30);

        return 0;

     label13:
        i8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(r30);

     label14:
        goto label16;

     label15:
        $r22 := @caughtexception;

        $r24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        $r23 = newarray (java.lang.Object)[0];

        $r25 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r24, r30, "not a valid `byte` value", $r23);

        $r26 = (java.lang.Byte) $r25;

        $b6 = virtualinvoke $r26.<java.lang.Byte: byte byteValue()>();

        return $b6;

     label16:
        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _byteOverflow(int)>(i8);

        if $z1 == 0 goto label17;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        $r11 = newarray (java.lang.Object)[0];

        $r13 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r12, r30, "overflow, value cannot be represented as 8-bit value", $r11);

        $r14 = (java.lang.Byte) $r13;

        $b4 = virtualinvoke $r14.<java.lang.Byte: byte byteValue()>();

        return $b4;

     label17:
        $b3 = (byte) i8;

        return $b3;

        catch java.lang.IllegalArgumentException from label13 to label14 with label15;
    }

    protected final short _parseShortPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int $i0, i8;
        java.lang.Class $r4, $r7, $r12, $r16, $r21, $r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r5, $r6, $r9, $r10, r28, r29;
        short $s1, $s2, $s3, $s4, $s5, $s6, s7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r8;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r11, $r23;
        java.lang.Object $r13, $r18, $r25;
        java.lang.Short $r14, $r19, $r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r17;
        java.lang.IllegalArgumentException $r22;
        java.lang.String r27, r30;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label07;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label09;
            case 6: goto label01;
            case 7: goto label05;
            case 8: goto label02;
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label06;
            default: goto label09;
        };

     label01:
        r27 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label10;

     label02:
        $r4 = <java.lang.Short: java.lang.Class TYPE>;

        r28 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(r1, r2, $r4);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r28 != $r5 goto label03;

        return 0;

     label03:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r28 != $r6 goto label04;

        return 0;

     label04:
        $s1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: short getShortValue()>();

        return $s1;

     label05:
        $s2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: short getShortValue()>();

        return $s2;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return 0;

     label07:
        $r21 = <java.lang.Short: java.lang.Class TYPE>;

        r27 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r21);

        goto label10;

     label08:
        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;

        $z2 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r15);

        if $z2 == 0 goto label09;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        s7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: short _parseShortPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return s7;

     label09:
        $r16 = <java.lang.Short: java.lang.Class TYPE>;

        $r17 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($r16);

        $r18 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r17, r1);

        $r19 = (java.lang.Short) $r18;

        $s5 = virtualinvoke $r19.<java.lang.Short: short shortValue()>();

        return $s5;

     label10:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        $r7 = <java.lang.Short: java.lang.Class TYPE>;

        r29 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(r2, r27, $r8, $r7);

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r29 != $r9 goto label11;

        return 0;

     label11:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r29 != $r10 goto label12;

        return 0;

     label12:
        r30 = virtualinvoke r27.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(r30);

        if $z0 == 0 goto label13;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r30);

        return 0;

     label13:
        i8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(r30);

     label14:
        goto label16;

     label15:
        $r22 := @caughtexception;

        $r24 = <java.lang.Short: java.lang.Class TYPE>;

        $r23 = newarray (java.lang.Object)[0];

        $r25 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r24, r30, "not a valid `short` value", $r23);

        $r26 = (java.lang.Short) $r25;

        $s6 = virtualinvoke $r26.<java.lang.Short: short shortValue()>();

        return $s6;

     label16:
        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _shortOverflow(int)>(i8);

        if $z1 == 0 goto label17;

        $r12 = <java.lang.Short: java.lang.Class TYPE>;

        $r11 = newarray (java.lang.Object)[0];

        $r13 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r12, r30, "overflow, value cannot be represented as 16-bit value", $r11);

        $r14 = (java.lang.Short) $r13;

        $s4 = virtualinvoke $r14.<java.lang.Short: short shortValue()>();

        return $s4;

     label17:
        $s3 = (short) i8;

        return $s3;

        catch java.lang.IllegalArgumentException from label13 to label14 with label15;
    }

    protected final int _parseIntPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Class $r3, $r6, $r11, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r4, $r5, $r8, $r9, r17, r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r7;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r10;
        java.lang.Object $r12;
        java.lang.Number $r13;
        java.lang.String r16, r19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i1)
        {
            case 1: goto label07;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label09;
            case 6: goto label01;
            case 7: goto label05;
            case 8: goto label02;
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label06;
            default: goto label09;
        };

     label01:
        r16 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label10;

     label02:
        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(r1, r2, $r3);

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r17 != $r4 goto label03;

        return 0;

     label03:
        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r17 != $r5 goto label04;

        return 0;

     label04:
        $i2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getValueAsInt()>();

        return $i2;

     label05:
        $i3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getIntValue()>();

        return $i3;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return 0;

     label07:
        $r15 = <java.lang.Integer: java.lang.Class TYPE>;

        r16 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r15);

        goto label10;

     label08:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;

        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r10);

        if $z1 == 0 goto label09;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        i0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: int _parseIntPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return i0;

     label09:
        $r11 = <java.lang.Integer: java.lang.Class TYPE>;

        $r12 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r11, r1);

        $r13 = (java.lang.Number) $r12;

        $i5 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

        return $i5;

     label10:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(r2, r16, $r7, $r6);

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r18 != $r8 goto label11;

        return 0;

     label11:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r18 != $r9 goto label12;

        return 0;

     label12:
        r19 = virtualinvoke r16.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(r19);

        if $z0 == 0 goto label13;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r19);

        return 0;

     label13:
        $i4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: int _parseIntPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r19);

        return $i4;
    }

    protected final int _parseIntPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2;
        java.lang.Number r3, r4, $r10, $r15;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        java.lang.Object[] $r5, $r12;
        java.lang.Class $r6, $r13;
        java.lang.Integer $r7, $r8;
        java.lang.Object $r9, $r14;
        java.lang.IllegalArgumentException $r11;
        long l5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: java.lang.String;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 9 goto label5;

        l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _intOverflow(long)>(l5);

        if $z0 == 0 goto label3;

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = r2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);

        $r5[1] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2147483647);

        $r5[2] = $r8;

        $r9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r6, r2, "Overflow: numeric value (%s) out of range of int (%d -%d)", $r5);

        r4 = (java.lang.Number) $r9;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(r4);

        $i3 = virtualinvoke $r10.<java.lang.Number: int intValue()>();

     label2:
        return $i3;

     label3:
        $i2 = (int) l5;

     label4:
        return $i2;

     label5:
        $i1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(r2);

     label6:
        return $i1;

     label7:
        $r11 := @caughtexception;

        $r13 = <java.lang.Integer: java.lang.Class TYPE>;

        $r12 = newarray (java.lang.Object)[0];

        $r14 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r13, r2, "not a valid `int` value", $r12);

        r3 = (java.lang.Number) $r14;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(r3);

        $i4 = virtualinvoke $r15.<java.lang.Number: int intValue()>();

        return $i4;

        catch java.lang.IllegalArgumentException from label1 to label2 with label7;
        catch java.lang.IllegalArgumentException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
    }

    protected final java.lang.Integer _parseInteger(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Class r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4, $r9, $r11, $r17, $r19, $r21, $r23, $r26;
        java.lang.Integer $r5, $r8, $r10, $r12, $r13, $r16, $r18, $r20, $r22, $r24, $r27;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r6, $r7, $r14, $r15, r29, r30;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r25;
        java.lang.String r28, r31;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.lang.Class;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label07;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label09;
            case 6: goto label01;
            case 7: goto label05;
            case 8: goto label02;
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label06;
            default: goto label09;
        };

     label01:
        r28 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label10;

     label02:
        r29 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(r1, r2, r3);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r29 != $r6 goto label03;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r12 = (java.lang.Integer) $r11;

        return $r12;

     label03:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r29 != $r7 goto label04;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r10 = (java.lang.Integer) $r9;

        return $r10;

     label04:
        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getValueAsInt()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r8;

     label05:
        $i2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getIntValue()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r13;

     label06:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r5 = (java.lang.Integer) $r4;

        return $r5;

     label07:
        r28 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, r3);

        goto label10;

     label08:
        $r23 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r24 = (java.lang.Integer) $r23;

        return $r24;

     label09:
        $r25 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r26 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r25, r1);

        $r27 = (java.lang.Integer) $r26;

        return $r27;

     label10:
        r30 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r28);

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r30 != $r14 goto label11;

        $r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r22 = (java.lang.Integer) $r21;

        return $r22;

     label11:
        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r30 != $r15 goto label12;

        $r19 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r20 = (java.lang.Integer) $r19;

        return $r20;

     label12:
        r31 = virtualinvoke r28.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _checkTextualNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r31);

        if $z0 == 0 goto label13;

        $r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r18 = (java.lang.Integer) $r17;

        return $r18;

     label13:
        $i3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: int _parseIntPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r31);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        return $r16;
    }

    protected final long _parseLongPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        long l0, $l2, $l3, $l4, $l5;
        int $i1;
        java.lang.Class $r3, $r6, $r11, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r4, $r5, $r8, $r9, r17, r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r7;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r10;
        java.lang.Object $r12;
        java.lang.Number $r13;
        java.lang.String r16, r19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i1)
        {
            case 1: goto label07;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label09;
            case 6: goto label01;
            case 7: goto label05;
            case 8: goto label02;
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label06;
            default: goto label09;
        };

     label01:
        r16 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label10;

     label02:
        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(r1, r2, $r3);

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r17 != $r4 goto label03;

        return 0L;

     label03:
        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r17 != $r5 goto label04;

        return 0L;

     label04:
        $l2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: long getValueAsLong()>();

        return $l2;

     label05:
        $l3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: long getLongValue()>();

        return $l3;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return 0L;

     label07:
        $r15 = <java.lang.Long: java.lang.Class TYPE>;

        r16 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r15);

        goto label10;

     label08:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;

        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r10);

        if $z1 == 0 goto label09;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        l0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: long _parseLongPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return l0;

     label09:
        $r11 = <java.lang.Long: java.lang.Class TYPE>;

        $r12 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r11, r1);

        $r13 = (java.lang.Number) $r12;

        $l5 = virtualinvoke $r13.<java.lang.Number: long longValue()>();

        return $l5;

     label10:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(r2, r16, $r7, $r6);

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r18 != $r8 goto label11;

        return 0L;

     label11:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r18 != $r9 goto label12;

        return 0L;

     label12:
        r19 = virtualinvoke r16.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(r19);

        if $z0 == 0 goto label13;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r19);

        return 0L;

     label13:
        $l4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: long _parseLongPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r19);

        return $l4;
    }

    protected final long _parseLongPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2;
        long $l0, $l1;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object[] $r4;
        java.lang.Class $r5;
        java.lang.Object $r6;
        java.lang.Number $r7, r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: java.lang.String;

     label1:
        $l0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(r2);

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        $r5 = <java.lang.Long: java.lang.Class TYPE>;

        $r4 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r5, r2, "not a valid `long` value", $r4);

        r9 = (java.lang.Number) $r6;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(r9);

        $l1 = virtualinvoke $r7.<java.lang.Number: long longValue()>();

        return $l1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected final java.lang.Long _parseLong(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Class r3;
        int $i0;
        java.lang.Object $r4, $r9, $r11, $r17, $r19, $r21, $r23, $r26;
        java.lang.Long $r5, $r8, $r10, $r12, $r13, $r16, $r18, $r20, $r22, $r24, $r27;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r6, $r7, $r14, $r15, r29, r30;
        long $l1, $l2, $l3;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r25;
        java.lang.String r28, r31;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.lang.Class;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label07;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label09;
            case 6: goto label01;
            case 7: goto label06;
            case 8: goto label02;
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label05;
            default: goto label09;
        };

     label01:
        r28 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label10;

     label02:
        r29 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(r1, r2, r3);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r29 != $r6 goto label03;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r12 = (java.lang.Long) $r11;

        return $r12;

     label03:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r29 != $r7 goto label04;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r10 = (java.lang.Long) $r9;

        return $r10;

     label04:
        $l1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: long getValueAsLong()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r8;

     label05:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r5 = (java.lang.Long) $r4;

        return $r5;

     label06:
        $l2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: long getLongValue()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        return $r13;

     label07:
        r28 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, r3);

        goto label10;

     label08:
        $r23 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object _deserializeFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r24 = (java.lang.Long) $r23;

        return $r24;

     label09:
        $r25 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r26 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r25, r1);

        $r27 = (java.lang.Long) $r26;

        return $r27;

     label10:
        r30 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r28);

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r30 != $r14 goto label11;

        $r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r22 = (java.lang.Long) $r21;

        return $r22;

     label11:
        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r30 != $r15 goto label12;

        $r19 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r20 = (java.lang.Long) $r19;

        return $r20;

     label12:
        r31 = virtualinvoke r28.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _checkTextualNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r31);

        if $z0 == 0 goto label13;

        $r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r18 = (java.lang.Long) $r17;

        return $r18;

     label13:
        $l3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: long _parseLongPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r31);

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        return $r16;
    }

    protected final float _parseFloatPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int $i0;
        float $f0, $f1, $f2, $f3, f4;
        java.lang.Class $r3, $r8, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r5, $r6, r15;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r7;
        java.lang.Object $r9;
        java.lang.Number $r10;
        java.lang.String r13, r16;
        java.lang.Float r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label06;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label06;
            case 6: goto label01;
            case 7: goto label02;
            case 8: goto label02;
            case 9: goto label06;
            case 10: goto label06;
            case 11: goto label03;
            default: goto label06;
        };

     label01:
        r13 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label07;

     label02:
        $f0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: float getFloatValue()>();

        return $f0;

     label03:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return 0.0F;

     label04:
        $r12 = <java.lang.Float: java.lang.Class TYPE>;

        r13 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r12);

        goto label07;

     label05:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;

        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r7);

        if $z1 == 0 goto label06;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        f4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: float _parseFloatPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return f4;

     label06:
        $r8 = <java.lang.Float: java.lang.Class TYPE>;

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r8, r1);

        $r10 = (java.lang.Number) $r9;

        $f3 = virtualinvoke $r10.<java.lang.Number: float floatValue()>();

        return $f3;

     label07:
        r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Float _checkFloatSpecialValue(java.lang.String)>(r13);

        if r14 == null goto label08;

        $f2 = virtualinvoke r14.<java.lang.Float: float floatValue()>();

        return $f2;

     label08:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(r2, r13, $r4, $r3);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r15 != $r5 goto label09;

        return 0.0F;

     label09:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r15 != $r6 goto label10;

        return 0.0F;

     label10:
        r16 = virtualinvoke r13.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(r16);

        if $z0 == 0 goto label11;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r16);

        return 0.0F;

     label11:
        $f1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: float _parseFloatPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r16);

        return $f1;
    }

    protected final float _parseFloatPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2;
        float $f0, $f1;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object[] $r4;
        java.lang.Class $r5;
        java.lang.Object $r6;
        java.lang.Number $r7, r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: java.lang.String;

     label1:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

     label2:
        return $f0;

     label3:
        $r3 := @caughtexception;

        $r5 = <java.lang.Float: java.lang.Class TYPE>;

        $r4 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r5, r2, "not a valid `float` value", $r4);

        r9 = (java.lang.Number) $r6;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(r9);

        $f1 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        return $f1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected java.lang.Float _checkFloatSpecialValue(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;
        char $c0;
        java.lang.Float $r2, $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        lookupswitch($c0)
        {
            case 45: goto label3;
            case 73: goto label1;
            case 78: goto label2;
            default: goto label4;
        };

     label1:
        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isPosInf(java.lang.String)>(r1);

        if $z2 == 0 goto label4;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(#InfinityF);

        return $r3;

     label2:
        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isNaN(java.lang.String)>(r1);

        if $z1 == 0 goto label4;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(#NaNF);

        return $r2;

     label3:
        $z3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isNegInf(java.lang.String)>(r1);

        if $z3 == 0 goto label4;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(#-InfinityF);

        return $r4;

     label4:
        return null;
    }

    protected final double _parseDoublePrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int $i0;
        double $d0, $d1, $d2, $d3, d4;
        java.lang.Class $r3, $r8, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r5, $r6, r15;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r7;
        java.lang.Object $r9;
        java.lang.Number $r10;
        java.lang.String r13, r16;
        java.lang.Double r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label06;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label06;
            case 6: goto label01;
            case 7: goto label02;
            case 8: goto label02;
            case 9: goto label06;
            case 10: goto label06;
            case 11: goto label03;
            default: goto label06;
        };

     label01:
        r13 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label07;

     label02:
        $d0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: double getDoubleValue()>();

        return $d0;

     label03:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return 0.0;

     label04:
        $r12 = <java.lang.Double: java.lang.Class TYPE>;

        r13 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r12);

        goto label07;

     label05:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;

        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r7);

        if $z1 == 0 goto label06;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        d4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: double _parseDoublePrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return d4;

     label06:
        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r8, r1);

        $r10 = (java.lang.Number) $r9;

        $d3 = virtualinvoke $r10.<java.lang.Number: double doubleValue()>();

        return $d3;

     label07:
        r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Double _checkDoubleSpecialValue(java.lang.String)>(r13);

        if r14 == null goto label08;

        $d2 = virtualinvoke r14.<java.lang.Double: double doubleValue()>();

        return $d2;

     label08:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(r2, r13, $r4, $r3);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r15 != $r5 goto label09;

        return 0.0;

     label09:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r15 != $r6 goto label10;

        return 0.0;

     label10:
        r16 = virtualinvoke r13.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(r16);

        if $z0 == 0 goto label11;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitiveCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r16);

        return 0.0;

     label11:
        $d1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: double _parseDoublePrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r16);

        return $d1;
    }

    protected final double _parseDoublePrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2;
        double $d0, $d1;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object[] $r4;
        java.lang.Class $r5;
        java.lang.Object $r6;
        java.lang.Number $r7, r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: java.lang.String;

     label1:
        $d0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: double _parseDouble(java.lang.String)>(r2);

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        $r5 = <java.lang.Double: java.lang.Class TYPE>;

        $r4 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r5, r2, "not a valid `double` value (as String to convert)", $r4);

        r9 = (java.lang.Number) $r6;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Number _nonNullNumber(java.lang.Number)>(r9);

        $d1 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        return $d1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected static final double _parseDouble(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String r0, $r1;
        boolean $z0;
        double $d0;

        r0 := @parameter0: java.lang.String;

        $r1 = "2.2250738585072012e-308";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return 2.2250738585072014E-308;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r0);

        return $d0;
    }

    protected java.lang.Double _checkDoubleSpecialValue(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;
        char $c0;
        java.lang.Double $r2, $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        lookupswitch($c0)
        {
            case 45: goto label3;
            case 73: goto label1;
            case 78: goto label2;
            default: goto label4;
        };

     label1:
        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isPosInf(java.lang.String)>(r1);

        if $z2 == 0 goto label4;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#Infinity);

        return $r3;

     label2:
        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isNaN(java.lang.String)>(r1);

        if $z1 == 0 goto label4;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);

        return $r2;

     label3:
        $z3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isNegInf(java.lang.String)>(r1);

        if $z3 == 0 goto label4;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#-Infinity);

        return $r4;

     label4:
        return null;
    }

    protected java.util.Date _parseDate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Number r4, $r17;
        int $i0;
        java.lang.Object $r5, $r13, $r19;
        java.util.Date $r6, $r7, $r9, $r10, $r14;
        java.lang.String $r8, r20;
        java.lang.Class $r11, $r12, $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException $r15;
        java.lang.Object[] $r18;
        long l1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label07;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label09;
            case 6: goto label01;
            case 7: goto label02;
            case 8: goto label09;
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label06;
            default: goto label09;
        };

     label01:
        r20 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label10;

     label02:
        l1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: long getLongValue()>();

     label03:
        goto label05;

     label04:
        $r15 := @caughtexception;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        $r17 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();

        $r18 = newarray (java.lang.Object)[0];

        $r19 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdNumberValue(java.lang.Class,java.lang.Number,java.lang.String,java.lang.Object[])>($r16, $r17, "not a valid 64-bit `long` for creating `java.util.Date`", $r18);

        r4 = (java.lang.Number) $r19;

        l1 = virtualinvoke r4.<java.lang.Number: long longValue()>();

     label05:
        $r7 = new java.util.Date;

        specialinvoke $r7.<java.util.Date: void <init>(long)>(l1);

        return $r7;

     label06:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r6 = (java.util.Date) $r5;

        return $r6;

     label07:
        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        r20 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r11);

        goto label10;

     label08:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.util.Date _parseDateFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r10;

     label09:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        $r13 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r12, r1);

        $r14 = (java.util.Date) $r13;

        return $r14;

     label10:
        $r8 = virtualinvoke r20.<java.lang.String: java.lang.String trim()>();

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.util.Date _parseDate(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>($r8, r2);

        return $r9;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException from label02 to label03 with label04;
        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.InputCoercionException from label02 to label03 with label04;
    }

    protected java.util.Date _parseDateFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction r3, $r13;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r4, $r7, $r15;
        java.util.Date r5, $r10, $r12, $r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r6;
        int[] $r8;
        int $i0, $i1;
        java.lang.Object $r9, $r11, $r17;
        java.lang.Class $r14;
        java.lang.Object[] $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;

        z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r6);

        if z0 != 0 goto label1;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;

        if r3 == $r13 goto label6;

     label1:
        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if r4 != $r7 goto label5;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;

        $i0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();

        $i1 = $r8[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            default: goto label4;
        };

     label2:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r12 = (java.util.Date) $r11;

        return $r12;

     label3:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r10 = (java.util.Date) $r9;

        return $r10;

     label4:
        goto label6;

     label5:
        if z0 == 0 goto label6;

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.util.Date _parseDate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return r5;

     label6:
        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        $r16 = newarray (java.lang.Object)[0];

        $r17 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>($r14, $r15, r1, null, $r16);

        $r18 = (java.util.Date) $r17;

        return $r18;
    }

    protected java.util.Date _parseDate(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.String r1, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        boolean $z0, $z1;
        java.util.Date $r3, $r5, $r11;
        int[] $r4;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object[] $r7;
        java.lang.Class $r8;
        java.lang.Object $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label5;

        r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r1);

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;

        $i0 = virtualinvoke r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label4;
            default: goto label4;
        };

     label2:
        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>(long)>(0L);

     label3:
        return $r5;

     label4:
        return null;

     label5:
        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(r1);

        if $z1 == 0 goto label7;

     label6:
        return null;

     label7:
        $r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.util.Date parseDate(java.lang.String)>(r1);

     label8:
        return $r3;

     label9:
        $r6 := @caughtexception;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>($r6);

        $r7[0] = $r9;

        $r10 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r8, r1, "not a valid representation (error: %s)", $r7);

        $r11 = (java.util.Date) $r10;

        return $r11;

        catch java.lang.IllegalArgumentException from label1 to label3 with label9;
        catch java.lang.IllegalArgumentException from label5 to label6 with label9;
        catch java.lang.IllegalArgumentException from label7 to label8 with label9;
    }

    protected final java.lang.String _parseString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6, r16;
        java.lang.String $r7, $r9, $r10, $r14, $r15, r17;
        java.lang.Class $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant $r11;
        byte[] $r12, $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r3);

        if $z0 == 0 goto label1;

        $r15 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        return $r15;

     label1:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r4);

        if $z1 == 0 goto label4;

        r16 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();

        $z3 = r16 instanceof byte[];

        if $z3 == 0 goto label2;

        $r11 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();

        $r12 = (byte[]) r16;

        $r13 = (byte[]) $r12;

        $r14 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: java.lang.String encode(byte[],boolean)>($r13, 0);

        return $r14;

     label2:
        if r16 != null goto label3;

        return null;

     label3:
        $r10 = virtualinvoke r16.<java.lang.Object: java.lang.String toString()>();

        return $r10;

     label4:
        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r5);

        if $z2 == 0 goto label5;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class _valueClass>;

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r8);

        return $r9;

     label5:
        r17 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getValueAsString()>();

        if r17 == null goto label6;

        return r17;

     label6:
        $r6 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(class "Ljava/lang/String;", r1);

        $r7 = (java.lang.String) $r6;

        return $r7;
    }

    protected boolean _hasTextualNull(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.String;

        $r2 = "null";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    protected final boolean _isNegInf(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.String;

        $r2 = "-Infinity";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = "-INF";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected final boolean _isPosInf(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.String;

        $r2 = "Infinity";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = "INF";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected final boolean _isNaN(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.String;

        $r2 = "NaN";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    protected static final boolean _isBlank(java.lang.String)
    {
        java.lang.String r0;
        int i0, i2;
        char $c1;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if $c1 <= 32 goto label2;

        return 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r3;
        java.lang.Class $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class)>(r1, r2, $r3, $r4);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType, java.lang.Class) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType r3;
        java.lang.Class r4;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadCapability $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape $r6, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r7, $r11, $r12, $r13, $r15, r16, r17, r18;
        java.lang.Object[] $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType;

        r4 := @parameter3: java.lang.Class;

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>;

        r16 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(r3, r4, $r14);

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(r1, r16, r4, r2, "empty String (\"\")");

        return $r15;

     label1:
        $z1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _isBlank(java.lang.String)>(r2);

        if $z1 == 0 goto label2;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;

        r17 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction)>(r3, r4, $r12);

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(r1, r17, r4, r2, "blank String (all whitespace)");

        return $r13;

     label2:
        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadCapability: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadCapability UNTYPED_SCALARS>;

        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadCapability)>($r5);

        if $z2 == 0 goto label3;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction TryConvert>;

        return $r11;

     label3:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape String>;

        r18 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>(r3, r4, $r6);

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;

        if r18 != $r7 goto label4;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r2;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc()>();

        $r8[1] = $r9;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(r0, "Cannot coerce String value (\"%s\") to %s (but might if coercion using `CoercionConfig` was enabled)", $r8);

     label4:
        return r18;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Class r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction r4, $r7, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r6;
        java.lang.Number $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;
        java.lang.String $r11, $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.lang.Class;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape Float>;

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>($r6, r3, $r5);

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;

        if r4 != $r7 goto label1;

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Floating-point value (");

        $r11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r4, r3, $r8, $r14);

        return $r15;

     label1:
        return r4;
    }

    protected java.lang.Boolean _coerceBooleanFromInt(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.Class) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Class r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r6;
        int[] $r7;
        int $i0, $i1, $i2;
        java.lang.Number $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;
        java.lang.String $r11, $r14, $r20, $r21;
        java.lang.Boolean $r16, $r17, $r22, $r23;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType $r18, $r19;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.lang.Class;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Boolean>;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape Integer>;

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>($r6, r3, $r5);

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;

        $i0 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();

        $i1 = $r7[$i0];

        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label1;
            default: goto label4;
        };

     label1:
        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Integer value (");

        $r11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r4, r3, $r8, $r14);

        $r16 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r16;

     label2:
        return null;

     label3:
        $r17 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r17;

     label4:
        $r18 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();

        $r19 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType INT>;

        if $r18 != $r19 goto label7;

        $i2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getIntValue()>();

        if $i2 == 0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r23;

     label7:
        $r20 = "0";

        $r21 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z0 != 0 goto label8;

        $z2 = 1;

        goto label9;

     label8:
        $z2 = 0;

     label9:
        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        return $r22;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction, java.lang.Class, java.lang.Object, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction r2, $r6;
        java.lang.Class r3;
        java.lang.Object r4;
        java.lang.String r5, $r8;
        java.lang.Object[] $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.String;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;

        if r2 != $r6 goto label1;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r5;

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc()>();

        $r7[1] = $r8;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r0, r3, r4, "Cannot coerce %s to %s (but could if coercion was enabled using `CoercionConfig`)", $r7);

     label1:
        return r2;
    }

    protected boolean _checkTextualNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _hasTextualNull(java.lang.String)>(r2);

        if $z0 == 0 goto label2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r3);

        if $z1 != 0 goto label1;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _reportFailedNullCoerce(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String)>(r1, 1, $r4, "String \"null\"");

     label1:
        return 1;

     label2:
        return 0;
    }

    protected java.lang.Object _coerceIntegral(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r3, $r4;
        boolean $z0, $z1;
        java.lang.Number $r5;
        long $l1;
        java.lang.Long $r6;
        java.math.BigInteger $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        i0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: int getDeserializationFeatures()>();

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS>;

        $z0 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: boolean enabledIn(int)>(i0);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.math.BigInteger getBigIntegerValue()>();

        return $r7;

     label1:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_LONG_FOR_INTS>;

        $z1 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: boolean enabledIn(int)>(i0);

        if $z1 == 0 goto label2;

        $l1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: long getLongValue()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r6;

     label2:
        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();

        return $r5;
    }

    protected final void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r2;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r2);

        if $z0 == 0 goto label1;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc()>();

        $r3[0] = $r4;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(r0, "Cannot coerce `null` to %s (disable `DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES` to allow)", $r3);

     label1:
        return;
    }

    protected final void _verifyNullForPrimitiveCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r4;
        boolean $z0, $z1, $z2, z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r5;
        java.lang.Object[] $r6;
        java.lang.Enum r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: java.lang.String;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r4);

        if $z0 != 0 goto label1;

        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        z3 = 1;

        goto label3;

     label1:
        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES>;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r5);

        if $z1 == 0 goto label2;

        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES>;

        z3 = 0;

        goto label3;

     label2:
        return;

     label3:
        $z2 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label4;

        $r8 = "empty String (\"\")";

        goto label5;

     label4:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r2;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("String \"%s\"", $r6);

     label5:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _reportFailedNullCoerce(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String)>(r1, z3, r7, $r8);

        return;
    }

    protected void _reportFailedNullCoerce(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, boolean, java.lang.Enum, java.lang.String) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        boolean z0;
        java.lang.Enum r2;
        java.lang.String r3, $r6, $r8, $r9, $r11;
        java.lang.Object[] $r5;
        java.lang.Class $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.Enum;

        r3 := @parameter3: java.lang.String;

        if z0 == 0 goto label1;

        $r11 = "enable";

        goto label2;

     label1:
        $r11 = "disable";

     label2:
        $r5 = newarray (java.lang.Object)[5];

        $r5[0] = r3;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc()>();

        $r5[1] = $r6;

        $r5[2] = $r11;

        $r7 = virtualinvoke r2.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5[3] = $r8;

        $r9 = virtualinvoke r2.<java.lang.Enum: java.lang.String name()>();

        $r5[4] = $r9;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(r0, "Cannot coerce %s to Null value as %s (%s `%s.%s` to allow)", $r5);

        return;
    }

    protected java.lang.String _coercedTypeDesc()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        java.lang.Class r2, $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9;
        java.lang.String $r6, $r10, r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType()>();

        if r1 == null goto label4;

        $z3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isPrimitive()>();

        if $z3 != 0 goto label4;

        $z4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z4 != 0 goto label1;

        $z5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();

        if $z5 == 0 goto label2;

     label1:
        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        z7 = $z6;

        r13 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        goto label8;

     label4:
        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isArray()>();

        if $z0 != 0 goto label5;

        $r11 = class "Ljava/util/Collection;";

        $z1 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z1 != 0 goto label5;

        $r12 = class "Ljava/util/Map;";

        $z2 = virtualinvoke $r12.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z2 == 0 goto label6;

     label5:
        $z8 = 1;

        goto label7;

     label6:
        $z8 = 0;

     label7:
        z7 = $z8;

        r13 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>(r2);

     label8:
        if z7 == 0 goto label9;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element of ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label9:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    protected boolean _parseBooleanFromInt(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNumberForScalarCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r2, r1);

        $r3 = "0";

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected void _verifyStringForScalarCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2, $r5, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature r3;
        boolean $z0;
        java.lang.Object[] $r4;
        java.lang.Class $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: java.lang.String;

        r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>(r3);

        if $z0 != 0 goto label1;

        $r4 = newarray (java.lang.Object)[4];

        $r4[0] = r2;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc()>();

        $r4[1] = $r5;

        $r6 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: java.lang.Class getDeclaringClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4[2] = $r7;

        $r8 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: java.lang.String name()>();

        $r4[3] = $r8;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(r0, "Cannot coerce String \"%s\" to %s (enable `%s.%s` to allow)", $r4);

     label1:
        return;
    }

    protected java.lang.Object _coerceEmptyString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, boolean) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        boolean z0, $z1, $z2, z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r2;
        java.lang.Object $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r4;
        java.lang.Enum r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        z0 := @parameter1: boolean;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r2);

        if $z1 != 0 goto label1;

        r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        z3 = 1;

        goto label3;

     label1:
        if z0 == 0 goto label2;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES>;

        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r4);

        if $z2 == 0 goto label2;

        r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES>;

        z3 = 0;

        goto label3;

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r3;

     label3:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _reportFailedNullCoerce(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String)>(r1, z3, r5, "empty String (\"\")");

        return null;
    }

    protected void _failDoubleToIntCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.String r3, $r6;
        java.lang.Class $r4;
        java.lang.Object[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();

        $r5 = newarray (java.lang.Object)[2];

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getValueAsString()>();

        $r5[0] = $r6;

        $r5[1] = r3;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[])>($r4, "Cannot coerce a floating-point value (\'%s\') into %s (enable `DeserializationFeature.ACCEPT_FLOAT_AS_INT` to allow)", $r5);

        return;
    }

    protected final void _verifyNullForScalarCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r4, $r6;
        boolean $z0, $z1;
        java.lang.Object[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: java.lang.String;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r4);

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r7 = "empty String (\"\")";

        goto label2;

     label1:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r2;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("String \"%s\"", $r5);

     label2:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _reportFailedNullCoerce(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String)>(r1, 1, $r6, $r7);

     label3:
        return;
    }

    protected void _verifyNumberForScalarCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature r3;
        java.lang.String r4, $r6, $r8, $r9;
        boolean $z0;
        java.lang.Object[] $r5;
        java.lang.Class $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>(r3);

        if $z0 != 0 goto label1;

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $r5 = newarray (java.lang.Object)[4];

        $r5[0] = r4;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _coercedTypeDesc()>();

        $r5[1] = $r6;

        $r7 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: java.lang.Class getDeclaringClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5[2] = $r8;

        $r9 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: java.lang.String name()>();

        $r5[3] = $r9;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(r0, "Cannot coerce Number (%s) to %s (enable `%s.%s` to allow)", $r5);

     label1:
        return;
    }

    protected java.lang.Object _coerceNullToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, boolean) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        boolean z0;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

     label1:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r2;
    }

    protected java.lang.Object _coerceTextualNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, boolean) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        boolean z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        z0 := @parameter1: boolean;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r2);

        if $z1 != 0 goto label1;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void _reportFailedNullCoerce(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String)>(r1, 1, $r4, "String \"null\"");

     label1:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r3;
    }

    protected boolean _isEmptyOrTextualNull(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = "null";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r2, r3);

        return $r4;
    }

    protected final boolean _isIntNumber(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.String r1;
        int i0, i3;
        char c1, c2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 <= 0 goto label8;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if c1 == 45 goto label1;

        if c1 != 43 goto label3;

     label1:
        if i0 != 1 goto label2;

        return 0;

     label2:
        i3 = 1;

        goto label4;

     label3:
        i3 = 0;

     label4:
        if i3 >= i0 goto label7;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        if c2 > 57 goto label5;

        if c2 >= 48 goto label6;

     label5:
        return 0;

     label6:
        i3 = i3 + 1;

        goto label4;

     label7:
        return 1;

     label8:
        return 0;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findConvertingContentDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember r4, $r8;
        java.lang.Object r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r7;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r11 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: boolean _neitherNull(java.lang.Object,java.lang.Object)>(r3, r2);

        if $z0 == 0 goto label2;

        r4 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();

        if r4 == null goto label2;

        r5 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findDeserializationContentConverter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(r4);

        if r5 == null goto label2;

        $r8 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();

        r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter converterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>($r8, r5);

        $r9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        r7 = interfaceinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getInputType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>($r9);

        if r11 != null goto label1;

        r11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r7, r2);

     label1:
        $r10 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;

        specialinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>(r6, r7, r11);

        return $r10;

     label2:
        return r11;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        java.lang.Class r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value $r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r3 := @parameter2: java.lang.Class;

        if r2 == null goto label1;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();

        $r6 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findPropertyFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>($r5, r3);

        return $r6;

     label1:
        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class)>(r3);

        return $r4;
    }

    protected java.lang.Boolean findFormatFeature(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        java.lang.Class r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r5;
        java.lang.Boolean $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature;

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(r1, r2, r3);

        if r5 == null goto label1;

        $r6 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getFeature(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature)>(r4);

        return $r6;

     label1:
        return null;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider findValueNullProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.SettableBeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyMetadata) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.SettableBeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyMetadata r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.SettableBeanProperty;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyMetadata;

        if r2 == null goto label1;

        $r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyMetadata: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls getValueNulls()>();

        $r5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.SettableBeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer()>();

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _findNullProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>(r1, r2, $r4, $r5);

        return $r6;

     label1:
        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider findContentNullProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls r4, $r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r7, $r8, r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsFailProvider $r9, $r11;
        java.lang.Class $r10;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls findContentNullStyle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1, r2);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls SKIP>;

        if r4 != $r5 goto label1;

        $r12 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider skipper()>();

        return $r12;

     label1:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls FAIL>;

        if r4 != $r6 goto label4;

        if r2 != null goto label3;

        $r10 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Class handledType()>();

        r13 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($r10);

        $z0 = virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z0 == 0 goto label2;

        r13 = virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

     label2:
        $r11 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsFailProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForRootValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r13);

        return $r11;

     label3:
        $r7 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getType()>();

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsFailProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, $r8);

        return $r9;

     label4:
        r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _findNullProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>(r1, r2, r4, r3);

        if r14 == null goto label5;

        return r14;

     label5:
        return r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls findContentNullStyle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyMetadata $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        if r2 == null goto label1;

        $r3 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyMetadata getMetadata()>();

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyMetadata: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls getContentNulls()>();

        return $r4;

     label1:
        return null;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _findNullProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls r3, $r6, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r5, $r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider $r9, $r13, $r14;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern $r10, r24, $r25;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider $r11;
        java.lang.Object $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.BeanDeserializerBase $r15;
        java.lang.Object[] $r16;
        java.lang.String $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsFailProvider $r19, $r22;
        java.lang.Class $r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator r23;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls FAIL>;

        if r3 != $r6 goto label2;

        if r2 != null goto label1;

        $r20 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Class handledType()>();

        $r21 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($r20);

        $r22 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsFailProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForRootValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r21);

        return $r22;

     label1:
        $r19 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsFailProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r2);

        return $r19;

     label2:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls AS_EMPTY>;

        if r3 != $r7 goto label7;

        if r4 != null goto label3;

        return null;

     label3:
        $z0 = r4 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.BeanDeserializerBase;

        if $z0 == 0 goto label4;

        $r15 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.BeanDeserializerBase) r4;

        r23 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.BeanDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()>();

        $z1 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateUsingDefault()>();

        if $z1 != 0 goto label4;

        r5 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getType()>();

        $r16 = newarray (java.lang.Object)[1];

        $r16[0] = r5;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot create empty instance of %s, no default Creator", $r16);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r5, $r17);

     label4:
        r24 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern()>();

        $r25 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern ALWAYS_NULL>;

        if r24 != $r25 goto label5;

        $r14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider nuller()>();

        return $r14;

     label5:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern CONSTANT>;

        if r24 != $r10 goto label6;

        $r12 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        $r13 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider forValue(java.lang.Object)>($r12);

        return $r13;

     label6:
        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider;

        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>(r4);

        return $r11;

     label7:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.Nulls SKIP>;

        if r3 != $r8 goto label8;

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider skipper()>();

        return $r9;

     label8:
        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r2;
        java.lang.Class $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>($r2, $r3, $r4);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r2;
        java.lang.Class $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyArray>;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>($r2, $r3, $r4);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromBlankString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r2;
        java.lang.Class $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction)>($r2, $r3, $r4);

        return $r5;
    }

    protected void handleUnknownProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.String r3;
        boolean $z0;
        java.lang.Object r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r5 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.String;

        if r5 != null goto label1;

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();

     label1:
        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean handleUnknownProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String)>(r1, r0, r5, r3);

        if $z0 == 0 goto label2;

        return;

     label2:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser skipChildren()>();

        return;
    }

    protected void handleMissingEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Object[] $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4;
        java.lang.Class $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.Class handledType()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r3[0] = $r6;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(r0, $r4, "Attempted to unwrap \'%s\' value from an array (with `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS`) but it contains more than one value", $r3);

        return;
    }

    protected void _verifyEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if r3 == $r4 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void handleMissingEndArrayForSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

     label1:
        return;
    }

    protected static final boolean _neitherNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected final boolean _byteOverflow(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        int i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        i0 := @parameter0: int;

        if i0 < -128 goto label1;

        if i0 <= 255 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected final boolean _shortOverflow(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        int i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        i0 := @parameter0: int;

        if i0 < -32768 goto label1;

        if i0 <= 32767 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected final boolean _intOverflow(long)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        long l0;
        byte $b1, $b2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        l0 := @parameter0: long;

        $b1 = l0 cmp -2147483648L;

        if $b1 < 0 goto label1;

        $b2 = l0 cmp 2147483647L;

        if $b2 <= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected java.lang.Number _nonNullNumber(java.lang.Number)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer r0;
        java.lang.Number r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer;

        r1 := @parameter0: java.lang.Number;

        if r1 != null goto label1;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label1:
        return r1;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r0, $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: long serialVersionUID> = 1L;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS>;

        $i0 = virtualinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: int getMask()>();

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_LONG_FOR_INTS>;

        $i1 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: int getMask()>();

        $i2 = $i0 | $i1;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: int F_MASK_INT_COERCIONS> = $i2;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;

        $i3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: int getMask()>();

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT>;

        $i4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: int getMask()>();

        $i5 = $i3 | $i4;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: int F_MASK_ACCEPT_ARRAYS> = $i5;

        return;
    }
}
