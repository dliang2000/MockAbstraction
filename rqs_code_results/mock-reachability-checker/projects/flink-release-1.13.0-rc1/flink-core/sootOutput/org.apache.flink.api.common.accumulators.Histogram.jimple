public class org.apache.flink.api.common.accumulators.Histogram extends java.lang.Object implements org.apache.flink.api.common.accumulators.Accumulator
{
    private static final long serialVersionUID;
    private java.util.TreeMap treeMap;

    public void <init>()
    {
        org.apache.flink.api.common.accumulators.Histogram r0;
        java.util.TreeMap $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.Histogram;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap treeMap> = $r1;

        return;
    }

    public void add(java.lang.Integer)
    {
        org.apache.flink.api.common.accumulators.Histogram r0;
        java.lang.Integer r1, r2, r3;
        java.util.TreeMap $r4, $r6;
        java.lang.Object $r5;
        int $i0, $i1;

        r0 := @this: org.apache.flink.api.common.accumulators.Histogram;

        r1 := @parameter0: java.lang.Integer;

        $r4 = r0.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap treeMap>;

        $r5 = virtualinvoke $r4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r5;

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $i0 = $i1 + 1;

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = r0.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap treeMap>;

        virtualinvoke $r6.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }

    public java.util.TreeMap getLocalValue()
    {
        org.apache.flink.api.common.accumulators.Histogram r0;
        java.util.TreeMap $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.Histogram;

        $r1 = r0.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap treeMap>;

        return $r1;
    }

    public void merge(org.apache.flink.api.common.accumulators.Accumulator)
    {
        org.apache.flink.api.common.accumulators.Histogram r0;
        org.apache.flink.api.common.accumulators.Accumulator r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.Integer r4, $r15, $r16;
        java.io.Serializable $r5;
        java.util.TreeMap $r6, $r9, $r12, $r18;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r8, $r10, $r11, $r13, $r14, $r19, $r20;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.api.common.accumulators.Histogram;

        r1 := @parameter0: org.apache.flink.api.common.accumulators.Accumulator;

        $r5 = interfaceinvoke r1.<org.apache.flink.api.common.accumulators.Accumulator: java.io.Serializable getLocalValue()>();

        $r6 = (java.util.TreeMap) $r5;

        $r7 = virtualinvoke $r6.<java.util.TreeMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        $r9 = r0.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap treeMap>;

        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = virtualinvoke $r9.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r10);

        r4 = (java.lang.Integer) $r11;

        if r4 != null goto label2;

        $r18 = r0.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap treeMap>;

        $r19 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r18.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20);

        goto label3;

     label2:
        $r12 = r0.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap treeMap>;

        $r13 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (java.lang.Integer) $r14;

        $i0 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $i2 = $i0 + $i1;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r12.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r16);

     label3:
        goto label1;

     label4:
        return;
    }

    public void resetLocal()
    {
        org.apache.flink.api.common.accumulators.Histogram r0;
        java.util.TreeMap $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.Histogram;

        $r1 = r0.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap treeMap>;

        virtualinvoke $r1.<java.util.TreeMap: void clear()>();

        return;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.common.accumulators.Histogram r0;
        java.util.TreeMap $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.api.common.accumulators.Histogram;

        $r1 = r0.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap treeMap>;

        $r2 = virtualinvoke $r1.<java.util.TreeMap: java.lang.String toString()>();

        return $r2;
    }

    public org.apache.flink.api.common.accumulators.Accumulator clone()
    {
        org.apache.flink.api.common.accumulators.Histogram r0, $r2;
        java.util.TreeMap $r3, $r4;

        r0 := @this: org.apache.flink.api.common.accumulators.Histogram;

        $r2 = new org.apache.flink.api.common.accumulators.Histogram;

        specialinvoke $r2.<org.apache.flink.api.common.accumulators.Histogram: void <init>()>();

        $r3 = new java.util.TreeMap;

        $r4 = r0.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap treeMap>;

        specialinvoke $r3.<java.util.TreeMap: void <init>(java.util.SortedMap)>($r4);

        $r2.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap treeMap> = $r3;

        return $r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.flink.api.common.accumulators.Histogram r0;
        org.apache.flink.api.common.accumulators.Accumulator $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.Histogram;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.Histogram: org.apache.flink.api.common.accumulators.Accumulator clone()>();

        return $r1;
    }

    public volatile java.io.Serializable getLocalValue()
    {
        org.apache.flink.api.common.accumulators.Histogram r0;
        java.util.TreeMap $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.Histogram;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.Histogram: java.util.TreeMap getLocalValue()>();

        return $r1;
    }

    public volatile void add(java.lang.Object)
    {
        org.apache.flink.api.common.accumulators.Histogram r0;
        java.lang.Object r1;
        java.lang.Integer $r2;

        r0 := @this: org.apache.flink.api.common.accumulators.Histogram;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Integer) r1;

        virtualinvoke r0.<org.apache.flink.api.common.accumulators.Histogram: void add(java.lang.Integer)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.accumulators.Histogram: long serialVersionUID> = 1L;

        return;
    }
}
