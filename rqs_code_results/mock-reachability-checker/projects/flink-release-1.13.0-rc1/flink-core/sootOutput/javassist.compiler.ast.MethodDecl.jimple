public class javassist.compiler.ast.MethodDecl extends javassist.compiler.ast.ASTList
{
    private static final long serialVersionUID;
    public static final java.lang.String initName;

    public void <init>(javassist.compiler.ast.ASTree, javassist.compiler.ast.ASTList)
    {
        javassist.compiler.ast.MethodDecl r0;
        javassist.compiler.ast.ASTree r1;
        javassist.compiler.ast.ASTList r2;

        r0 := @this: javassist.compiler.ast.MethodDecl;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        r2 := @parameter1: javassist.compiler.ast.ASTList;

        specialinvoke r0.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTList)>(r1, r2);

        return;
    }

    public boolean isConstructor()
    {
        javassist.compiler.ast.MethodDecl r0;
        javassist.compiler.ast.Symbol r1;
        javassist.compiler.ast.Declarator $r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: javassist.compiler.ast.MethodDecl;

        $r2 = virtualinvoke r0.<javassist.compiler.ast.MethodDecl: javassist.compiler.ast.Declarator getReturn()>();

        r1 = virtualinvoke $r2.<javassist.compiler.ast.Declarator: javassist.compiler.ast.Symbol getVariable()>();

        if r1 == null goto label1;

        $r3 = "<init>";

        $r4 = virtualinvoke r1.<javassist.compiler.ast.Symbol: java.lang.String get()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public javassist.compiler.ast.ASTList getModifiers()
    {
        javassist.compiler.ast.MethodDecl r0;
        javassist.compiler.ast.ASTree $r1;
        javassist.compiler.ast.ASTList $r2;

        r0 := @this: javassist.compiler.ast.MethodDecl;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.MethodDecl: javassist.compiler.ast.ASTree getLeft()>();

        $r2 = (javassist.compiler.ast.ASTList) $r1;

        return $r2;
    }

    public javassist.compiler.ast.Declarator getReturn()
    {
        javassist.compiler.ast.MethodDecl r0;
        javassist.compiler.ast.ASTList $r1;
        javassist.compiler.ast.ASTree $r2;
        javassist.compiler.ast.Declarator $r3;

        r0 := @this: javassist.compiler.ast.MethodDecl;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.MethodDecl: javassist.compiler.ast.ASTList tail()>();

        $r2 = virtualinvoke $r1.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $r3 = (javassist.compiler.ast.Declarator) $r2;

        return $r3;
    }

    public javassist.compiler.ast.ASTList getParams()
    {
        javassist.compiler.ast.MethodDecl r0;
        javassist.compiler.ast.ASTList $r1, $r3;
        javassist.compiler.ast.ASTree $r2;

        r0 := @this: javassist.compiler.ast.MethodDecl;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.MethodDecl: javassist.compiler.ast.ASTList sublist(int)>(2);

        $r2 = virtualinvoke $r1.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $r3 = (javassist.compiler.ast.ASTList) $r2;

        return $r3;
    }

    public javassist.compiler.ast.ASTList getThrows()
    {
        javassist.compiler.ast.MethodDecl r0;
        javassist.compiler.ast.ASTList $r1, $r3;
        javassist.compiler.ast.ASTree $r2;

        r0 := @this: javassist.compiler.ast.MethodDecl;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.MethodDecl: javassist.compiler.ast.ASTList sublist(int)>(3);

        $r2 = virtualinvoke $r1.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $r3 = (javassist.compiler.ast.ASTList) $r2;

        return $r3;
    }

    public javassist.compiler.ast.Stmnt getBody()
    {
        javassist.compiler.ast.MethodDecl r0;
        javassist.compiler.ast.ASTList $r1;
        javassist.compiler.ast.ASTree $r2;
        javassist.compiler.ast.Stmnt $r3;

        r0 := @this: javassist.compiler.ast.MethodDecl;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.MethodDecl: javassist.compiler.ast.ASTList sublist(int)>(4);

        $r2 = virtualinvoke $r1.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $r3 = (javassist.compiler.ast.Stmnt) $r2;

        return $r3;
    }

    public void accept(javassist.compiler.ast.Visitor) throws javassist.compiler.CompileError
    {
        javassist.compiler.ast.MethodDecl r0;
        javassist.compiler.ast.Visitor r1;

        r0 := @this: javassist.compiler.ast.MethodDecl;

        r1 := @parameter0: javassist.compiler.ast.Visitor;

        virtualinvoke r1.<javassist.compiler.ast.Visitor: void atMethodDecl(javassist.compiler.ast.MethodDecl)>(r0);

        return;
    }

    public static void <clinit>()
    {
        <javassist.compiler.ast.MethodDecl: java.lang.String initName> = "<init>";

        <javassist.compiler.ast.MethodDecl: long serialVersionUID> = 1L;

        return;
    }
}
