public class org.apache.flink.api.common.typeutils.SameTypePairComparator extends org.apache.flink.api.common.typeutils.TypePairComparator
{
    private org.apache.flink.api.common.typeutils.TypeComparator comp;
    private org.apache.flink.api.common.typeutils.TypeComparator comp2;

    public void <init>(org.apache.flink.api.common.typeutils.TypeComparator)
    {
        org.apache.flink.api.common.typeutils.SameTypePairComparator r0;
        org.apache.flink.api.common.typeutils.TypeComparator r1, $r2;

        r0 := @this: org.apache.flink.api.common.typeutils.SameTypePairComparator;

        r1 := @parameter0: org.apache.flink.api.common.typeutils.TypeComparator;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.TypePairComparator: void <init>()>();

        r0.<org.apache.flink.api.common.typeutils.SameTypePairComparator: org.apache.flink.api.common.typeutils.TypeComparator comp> = r1;

        $r2 = virtualinvoke r1.<org.apache.flink.api.common.typeutils.TypeComparator: org.apache.flink.api.common.typeutils.TypeComparator duplicate()>();

        r0.<org.apache.flink.api.common.typeutils.SameTypePairComparator: org.apache.flink.api.common.typeutils.TypeComparator comp2> = $r2;

        return;
    }

    public void setReference(java.lang.Object)
    {
        org.apache.flink.api.common.typeutils.SameTypePairComparator r0;
        java.lang.Object r1;
        org.apache.flink.api.common.typeutils.TypeComparator $r2;

        r0 := @this: org.apache.flink.api.common.typeutils.SameTypePairComparator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.flink.api.common.typeutils.SameTypePairComparator: org.apache.flink.api.common.typeutils.TypeComparator comp>;

        virtualinvoke $r2.<org.apache.flink.api.common.typeutils.TypeComparator: void setReference(java.lang.Object)>(r1);

        return;
    }

    public boolean equalToReference(java.lang.Object)
    {
        org.apache.flink.api.common.typeutils.SameTypePairComparator r0;
        java.lang.Object r1;
        org.apache.flink.api.common.typeutils.TypeComparator $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.typeutils.SameTypePairComparator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.flink.api.common.typeutils.SameTypePairComparator: org.apache.flink.api.common.typeutils.TypeComparator comp>;

        $z0 = virtualinvoke $r2.<org.apache.flink.api.common.typeutils.TypeComparator: boolean equalToReference(java.lang.Object)>(r1);

        return $z0;
    }

    public int compareToReference(java.lang.Object)
    {
        org.apache.flink.api.common.typeutils.SameTypePairComparator r0;
        java.lang.Object r1;
        org.apache.flink.api.common.typeutils.TypeComparator $r2, $r3, $r4;
        int $i0;

        r0 := @this: org.apache.flink.api.common.typeutils.SameTypePairComparator;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.flink.api.common.typeutils.SameTypePairComparator: org.apache.flink.api.common.typeutils.TypeComparator comp2>;

        virtualinvoke $r2.<org.apache.flink.api.common.typeutils.TypeComparator: void setReference(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.flink.api.common.typeutils.SameTypePairComparator: org.apache.flink.api.common.typeutils.TypeComparator comp>;

        $r3 = r0.<org.apache.flink.api.common.typeutils.SameTypePairComparator: org.apache.flink.api.common.typeutils.TypeComparator comp2>;

        $i0 = virtualinvoke $r4.<org.apache.flink.api.common.typeutils.TypeComparator: int compareToReference(org.apache.flink.api.common.typeutils.TypeComparator)>($r3);

        return $i0;
    }
}
