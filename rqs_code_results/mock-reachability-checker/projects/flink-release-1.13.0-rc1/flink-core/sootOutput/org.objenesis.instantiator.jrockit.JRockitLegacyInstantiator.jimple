public class org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator extends java.lang.Object implements org.objenesis.instantiator.ObjectInstantiator
{
    private static java.lang.reflect.Method safeAllocObjectMethod;
    private final java.lang.Class type;

    private static void initialize()
    {
        java.lang.Class r0;
        java.lang.reflect.Method $r1, $r3, $r4;
        java.lang.Class[] $r2;
        java.lang.NoSuchMethodException $r5;
        org.objenesis.ObjenesisException $r6, $r8, $r10;
        java.lang.RuntimeException $r7;
        java.lang.ClassNotFoundException $r9;

        $r1 = <org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator: java.lang.reflect.Method safeAllocObjectMethod>;

        if $r1 != null goto label6;

     label1:
        r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("jrockit.vm.MemSystem");

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/Class;";

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("safeAllocObject", $r2);

        <org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator: java.lang.reflect.Method safeAllocObjectMethod> = $r3;

        $r4 = <org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator: java.lang.reflect.Method safeAllocObjectMethod>;

        virtualinvoke $r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label2:
        goto label6;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.objenesis.ObjenesisException;

        specialinvoke $r8.<org.objenesis.ObjenesisException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        $r9 := @caughtexception;

        $r10 = new org.objenesis.ObjenesisException;

        specialinvoke $r10.<org.objenesis.ObjenesisException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label5:
        $r5 := @caughtexception;

        $r6 = new org.objenesis.ObjenesisException;

        specialinvoke $r6.<org.objenesis.ObjenesisException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
    }

    public void <init>(java.lang.Class)
    {
        org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator r0;
        java.lang.Class r1;

        r0 := @this: org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator: void initialize()>();

        r0.<org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator: java.lang.Class type> = r1;

        return;
    }

    public java.lang.Object newInstance()
    {
        org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator r0;
        java.lang.Object[] $r2;
        java.lang.Class $r3, $r5;
        java.lang.reflect.Method $r4;
        java.lang.Object $r6, $r7;
        java.lang.Exception $r8;
        org.objenesis.ObjenesisException $r9;

        r0 := @this: org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator;

     label1:
        $r5 = r0.<org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator: java.lang.Class type>;

        $r4 = <org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator: java.lang.reflect.Method safeAllocObjectMethod>;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = r0.<org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator: java.lang.Class type>;

        $r2[0] = $r3;

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r2);

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r6);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.objenesis.ObjenesisException;

        specialinvoke $r9.<org.objenesis.ObjenesisException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        <org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator: java.lang.reflect.Method safeAllocObjectMethod> = null;

        return;
    }
}
