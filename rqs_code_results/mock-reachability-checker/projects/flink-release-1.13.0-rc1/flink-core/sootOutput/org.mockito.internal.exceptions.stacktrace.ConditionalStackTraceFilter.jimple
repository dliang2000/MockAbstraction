public class org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.mockito.configuration.IMockitoConfiguration config;
    private final org.mockito.internal.exceptions.stacktrace.StackTraceFilter filter;

    public void <init>()
    {
        org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter r0;
        org.mockito.internal.configuration.GlobalConfiguration $r1;
        org.mockito.internal.exceptions.stacktrace.StackTraceFilter $r2;

        r0 := @this: org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.mockito.internal.configuration.GlobalConfiguration;

        specialinvoke $r1.<org.mockito.internal.configuration.GlobalConfiguration: void <init>()>();

        r0.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: org.mockito.configuration.IMockitoConfiguration config> = $r1;

        $r2 = new org.mockito.internal.exceptions.stacktrace.StackTraceFilter;

        specialinvoke $r2.<org.mockito.internal.exceptions.stacktrace.StackTraceFilter: void <init>()>();

        r0.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: org.mockito.internal.exceptions.stacktrace.StackTraceFilter filter> = $r2;

        return;
    }

    public void filter(java.lang.Throwable)
    {
        org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter r0;
        java.lang.Throwable r1;
        java.lang.StackTraceElement[] r2, $r5;
        org.mockito.configuration.IMockitoConfiguration $r3;
        boolean $z0;
        org.mockito.internal.exceptions.stacktrace.StackTraceFilter $r4;

        r0 := @this: org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;

        r1 := @parameter0: java.lang.Throwable;

        $r3 = r0.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: org.mockito.configuration.IMockitoConfiguration config>;

        $z0 = interfaceinvoke $r3.<org.mockito.configuration.IMockitoConfiguration: boolean cleansStackTrace()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: org.mockito.internal.exceptions.stacktrace.StackTraceFilter filter>;

        $r5 = virtualinvoke r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        r2 = virtualinvoke $r4.<org.mockito.internal.exceptions.stacktrace.StackTraceFilter: java.lang.StackTraceElement[] filter(java.lang.StackTraceElement[],boolean)>($r5, 1);

        virtualinvoke r1.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>(r2);

        return;
    }

    public static void <clinit>()
    {
        <org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: long serialVersionUID> = -8085849703510292641L;

        return;
    }
}
