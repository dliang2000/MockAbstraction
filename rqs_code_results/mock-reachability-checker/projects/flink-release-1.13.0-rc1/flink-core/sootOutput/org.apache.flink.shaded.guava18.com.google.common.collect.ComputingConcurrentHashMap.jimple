class org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap extends org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap
{
    final org.apache.flink.shaded.guava18.com.google.common.base.Function computingFunction;
    private static final long serialVersionUID;

    void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker, org.apache.flink.shaded.guava18.com.google.common.base.Function)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Function r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        r2 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Function;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker)>(r1);

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (org.apache.flink.shaded.guava18.com.google.common.base.Function) $r3;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: org.apache.flink.shaded.guava18.com.google.common.base.Function computingFunction> = $r4;

        return;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Segment createSegment(int, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap r0;
        int i0, i1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap,int,int)>(r0, i0, i1);

        return $r1;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment segmentFor(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap r0;
        int i0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Segment $r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int)>(i0);

        $r2 = (org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment) $r1;

        return $r2;
    }

    java.lang.Object getOrCompute(java.lang.Object) throws java.util.concurrent.ExecutionException
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap r0;
        java.lang.Object r1, $r2, $r5;
        int i0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment $r3;
        org.apache.flink.shaded.guava18.com.google.common.base.Function $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: int hash(java.lang.Object)>($r2);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment segmentFor(int)>(i0);

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: org.apache.flink.shaded.guava18.com.google.common.base.Function computingFunction>;

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: java.lang.Object getOrCompute(java.lang.Object,int,org.apache.flink.shaded.guava18.com.google.common.base.Function)>(r1, i0, $r4);

        return $r5;
    }

    java.lang.Object writeReplace()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy $r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Function $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalListener $r3;
        int $i0, $i1;
        long $l2, $l3;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence $r4, $r5;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength $r6, $r7;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy;

        $r7 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength keyStrength>;

        $r6 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength valueStrength>;

        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence keyEquivalence>;

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence valueEquivalence>;

        $l3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: long expireAfterWriteNanos>;

        $l2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: long expireAfterAccessNanos>;

        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: int maximumSize>;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: int concurrencyLevel>;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalListener removalListener>;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: org.apache.flink.shaded.guava18.com.google.common.base.Function computingFunction>;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength,org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength,org.apache.flink.shaded.guava18.com.google.common.base.Equivalence,org.apache.flink.shaded.guava18.com.google.common.base.Equivalence,long,long,int,int,org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalListener,java.util.concurrent.ConcurrentMap,org.apache.flink.shaded.guava18.com.google.common.base.Function)>($r7, $r6, $r5, $r4, $l3, $l2, $i1, $i0, $r3, r0, $r2);

        return $r1;
    }

    volatile org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap r0;
        int i0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment segmentFor(int)>(i0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap: long serialVersionUID> = 4L;

        return;
    }
}
