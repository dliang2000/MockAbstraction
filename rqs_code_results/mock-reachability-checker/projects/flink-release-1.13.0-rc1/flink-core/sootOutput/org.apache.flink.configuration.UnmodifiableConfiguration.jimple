public class org.apache.flink.configuration.UnmodifiableConfiguration extends org.apache.flink.configuration.Configuration
{
    private static final long serialVersionUID;

    public void <init>(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.configuration.UnmodifiableConfiguration r0;
        org.apache.flink.configuration.Configuration r1;

        r0 := @this: org.apache.flink.configuration.UnmodifiableConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        specialinvoke r0.<org.apache.flink.configuration.Configuration: void <init>(org.apache.flink.configuration.Configuration)>(r1);

        return;
    }

    public void addAllToProperties(java.util.Properties)
    {
        org.apache.flink.configuration.UnmodifiableConfiguration r0;
        java.util.Properties r1;

        r0 := @this: org.apache.flink.configuration.UnmodifiableConfiguration;

        r1 := @parameter0: java.util.Properties;

        specialinvoke r0.<org.apache.flink.configuration.Configuration: void addAllToProperties(java.util.Properties)>(r1);

        return;
    }

    public final void addAll(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.configuration.UnmodifiableConfiguration r0;
        org.apache.flink.configuration.Configuration r1;

        r0 := @this: org.apache.flink.configuration.UnmodifiableConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        specialinvoke r0.<org.apache.flink.configuration.UnmodifiableConfiguration: void error()>();

        return;
    }

    public final void addAll(org.apache.flink.configuration.Configuration, java.lang.String)
    {
        org.apache.flink.configuration.UnmodifiableConfiguration r0;
        org.apache.flink.configuration.Configuration r1;
        java.lang.String r2;

        r0 := @this: org.apache.flink.configuration.UnmodifiableConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.flink.configuration.UnmodifiableConfiguration: void error()>();

        return;
    }

    final void setValueInternal(java.lang.String, java.lang.Object)
    {
        org.apache.flink.configuration.UnmodifiableConfiguration r0;
        java.lang.String r1;
        java.lang.Object r2;

        r0 := @this: org.apache.flink.configuration.UnmodifiableConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.flink.configuration.UnmodifiableConfiguration: void error()>();

        return;
    }

    public boolean removeConfig(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.UnmodifiableConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;

        r0 := @this: org.apache.flink.configuration.UnmodifiableConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        specialinvoke r0.<org.apache.flink.configuration.UnmodifiableConfiguration: void error()>();

        return 0;
    }

    private void error()
    {
        org.apache.flink.configuration.UnmodifiableConfiguration r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.flink.configuration.UnmodifiableConfiguration;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The configuration is unmodifiable; its contents cannot be changed.");

        throw $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.configuration.UnmodifiableConfiguration: long serialVersionUID> = -8151292629158972280L;

        return;
    }
}
