public class org.hamcrest.core.AllOf extends org.hamcrest.DiagnosingMatcher
{
    private final java.lang.Iterable matchers;

    public void <init>(java.lang.Iterable)
    {
        org.hamcrest.core.AllOf r0;
        java.lang.Iterable r1;

        r0 := @this: org.hamcrest.core.AllOf;

        r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<org.hamcrest.DiagnosingMatcher: void <init>()>();

        r0.<org.hamcrest.core.AllOf: java.lang.Iterable matchers> = r1;

        return;
    }

    public boolean matches(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.core.AllOf r0;
        java.lang.Object r1, $r6;
        org.hamcrest.Description r2, $r7;
        java.util.Iterator r3;
        org.hamcrest.Matcher r4;
        java.lang.Iterable $r5;
        boolean $z0, $z1;

        r0 := @this: org.hamcrest.core.AllOf;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        $r5 = r0.<org.hamcrest.core.AllOf: java.lang.Iterable matchers>;

        r3 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.hamcrest.Matcher) $r6;

        $z1 = interfaceinvoke r4.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r7 = interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>(r4);

        interfaceinvoke $r7.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" ");

        interfaceinvoke r4.<org.hamcrest.Matcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>(r1, r2);

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.core.AllOf r0;
        org.hamcrest.Description r1;
        java.lang.Iterable $r2;

        r0 := @this: org.hamcrest.core.AllOf;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = r0.<org.hamcrest.core.AllOf: java.lang.Iterable matchers>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendList(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable)>("(", " and ", ")", $r2);

        return;
    }

    public static org.hamcrest.Matcher allOf(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.hamcrest.core.AllOf $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = new org.hamcrest.core.AllOf;

        specialinvoke $r1.<org.hamcrest.core.AllOf: void <init>(java.lang.Iterable)>(r0);

        return $r1;
    }

    public static transient org.hamcrest.Matcher allOf(org.hamcrest.Matcher[])
    {
        org.hamcrest.Matcher[] r0;
        java.util.List $r1;
        org.hamcrest.Matcher $r2;

        r0 := @parameter0: org.hamcrest.Matcher[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(java.lang.Iterable)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher allOf(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, $r4;
        java.util.ArrayList $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(java.lang.Iterable)>($r3);

        return $r4;
    }

    public static org.hamcrest.Matcher allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, $r5;
        java.util.ArrayList $r4;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r5 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(java.lang.Iterable)>($r4);

        return $r5;
    }

    public static org.hamcrest.Matcher allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3, $r6;
        java.util.ArrayList $r5;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

        $r6 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(java.lang.Iterable)>($r5);

        return $r6;
    }

    public static org.hamcrest.Matcher allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3, r4, $r7;
        java.util.ArrayList $r6;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        r4 := @parameter4: org.hamcrest.Matcher;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(5);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r2);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r3);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r7 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(java.lang.Iterable)>($r6);

        return $r7;
    }

    public static org.hamcrest.Matcher allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3, r4, r5, $r8;
        java.util.ArrayList $r7;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        r4 := @parameter4: org.hamcrest.Matcher;

        r5 := @parameter5: org.hamcrest.Matcher;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(6);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r3);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r4);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r5);

        $r8 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(java.lang.Iterable)>($r7);

        return $r8;
    }
}
