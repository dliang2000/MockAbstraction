final class org.apache.flink.shaded.guava18.com.google.common.collect.Iterables$1 extends org.apache.flink.shaded.guava18.com.google.common.collect.FluentIterable
{
    final java.lang.Iterable val$iterable;

    void <init>(java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterables$1 r0;
        java.lang.Iterable r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Iterables$1;

        r1 := @parameter0: java.lang.Iterable;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterables$1: java.lang.Iterable val$iterable> = r1;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.FluentIterable: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterables$1 r0;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Iterables$1;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterables$1: java.lang.Iterable val$iterable>;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.util.Iterator cycle(java.lang.Iterable)>($r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterables$1 r0;
        java.lang.Iterable $r1;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Iterables$1;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterables$1: java.lang.Iterable val$iterable>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>(" (cycled)");

        return $r4;
    }
}
