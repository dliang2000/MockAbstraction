public class com.github.luben.zstd.NoPool extends java.lang.Object implements com.github.luben.zstd.BufferPool
{
    public static final com.github.luben.zstd.BufferPool INSTANCE;

    private void <init>()
    {
        com.github.luben.zstd.NoPool r0;

        r0 := @this: com.github.luben.zstd.NoPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public synchronized java.nio.ByteBuffer get(int)
    {
        com.github.luben.zstd.NoPool r0;
        int i0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.github.luben.zstd.NoPool;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0);

        return $r1;
    }

    public synchronized void release(java.nio.ByteBuffer)
    {
        com.github.luben.zstd.NoPool r0;
        java.nio.ByteBuffer r1;

        r0 := @this: com.github.luben.zstd.NoPool;

        r1 := @parameter0: java.nio.ByteBuffer;

        return;
    }

    static void <clinit>()
    {
        com.github.luben.zstd.NoPool $r0;

        $r0 = new com.github.luben.zstd.NoPool;

        specialinvoke $r0.<com.github.luben.zstd.NoPool: void <init>()>();

        <com.github.luben.zstd.NoPool: com.github.luben.zstd.BufferPool INSTANCE> = $r0;

        return;
    }
}
