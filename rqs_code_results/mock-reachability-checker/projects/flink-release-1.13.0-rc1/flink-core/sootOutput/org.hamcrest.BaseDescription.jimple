public abstract class org.hamcrest.BaseDescription extends java.lang.Object implements org.hamcrest.Description
{

    public void <init>()
    {
        org.hamcrest.BaseDescription r0;

        r0 := @this: org.hamcrest.BaseDescription;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.hamcrest.Description appendText(java.lang.String)
    {
        org.hamcrest.BaseDescription r0;
        java.lang.String r1;

        r0 := @this: org.hamcrest.BaseDescription;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>(r1);

        return r0;
    }

    public org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)
    {
        org.hamcrest.BaseDescription r0;
        org.hamcrest.SelfDescribing r1;

        r0 := @this: org.hamcrest.BaseDescription;

        r1 := @parameter0: org.hamcrest.SelfDescribing;

        interfaceinvoke r1.<org.hamcrest.SelfDescribing: void describeTo(org.hamcrest.Description)>(r0);

        return r0;
    }

    public org.hamcrest.Description appendValue(java.lang.Object)
    {
        org.hamcrest.BaseDescription r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r7, $r8, $r10;
        org.hamcrest.internal.ArrayIterator $r4;
        java.lang.Character $r9;
        char $c0;

        r0 := @this: org.hamcrest.BaseDescription;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("null");

        goto label8;

     label1:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r10 = (java.lang.String) r1;

        specialinvoke r0.<org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String)>($r10);

        goto label8;

     label2:
        $z1 = r1 instanceof java.lang.Character;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(char)>(34);

        $r9 = (java.lang.Character) r1;

        $c0 = virtualinvoke $r9.<java.lang.Character: char charValue()>();

        specialinvoke r0.<org.hamcrest.BaseDescription: void toJavaSyntax(char)>($c0);

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(char)>(34);

        goto label8;

     label3:
        $z2 = r1 instanceof java.lang.Short;

        if $z2 == 0 goto label4;

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(char)>(60);

        $r8 = specialinvoke r0.<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>(r1);

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r8);

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("s>");

        goto label8;

     label4:
        $z3 = r1 instanceof java.lang.Long;

        if $z3 == 0 goto label5;

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(char)>(60);

        $r7 = specialinvoke r0.<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>(r1);

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r7);

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("L>");

        goto label8;

     label5:
        $z4 = r1 instanceof java.lang.Float;

        if $z4 == 0 goto label6;

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(char)>(60);

        $r6 = specialinvoke r0.<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>(r1);

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r6);

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("F>");

        goto label8;

     label6:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z5 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        if $z5 == 0 goto label7;

        $r4 = new org.hamcrest.internal.ArrayIterator;

        specialinvoke $r4.<org.hamcrest.internal.ArrayIterator: void <init>(java.lang.Object)>(r1);

        specialinvoke r0.<org.hamcrest.BaseDescription: org.hamcrest.Description appendValueList(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)>("[", ", ", "]", $r4);

        goto label8;

     label7:
        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(char)>(60);

        $r3 = specialinvoke r0.<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>(r1);

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r3);

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(char)>(62);

     label8:
        return r0;
    }

    private java.lang.String descriptionOf(java.lang.Object)
    {
        org.hamcrest.BaseDescription r0;
        java.lang.Object r1;
        java.lang.String $r3, $r7, $r10, $r12;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5, $r8, $r9, $r11;
        java.lang.Class $r6;
        int $i0;

        r0 := @this: org.hamcrest.BaseDescription;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public transient org.hamcrest.Description appendValueList(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])
    {
        org.hamcrest.BaseDescription r0;
        java.lang.String r1, r2, r3;
        java.lang.Object[] r4;
        java.util.List $r5;
        org.hamcrest.Description $r6;

        r0 := @this: org.hamcrest.BaseDescription;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object[];

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);

        $r6 = virtualinvoke r0.<org.hamcrest.BaseDescription: org.hamcrest.Description appendValueList(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable)>(r1, r2, r3, $r5);

        return $r6;
    }

    public org.hamcrest.Description appendValueList(java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable)
    {
        org.hamcrest.BaseDescription r0;
        java.lang.String r1, r2, r3;
        java.lang.Iterable r4;
        java.util.Iterator $r5;
        org.hamcrest.Description $r6;

        r0 := @this: org.hamcrest.BaseDescription;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Iterable;

        $r5 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r6 = specialinvoke r0.<org.hamcrest.BaseDescription: org.hamcrest.Description appendValueList(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)>(r1, r2, r3, $r5);

        return $r6;
    }

    private org.hamcrest.Description appendValueList(java.lang.String, java.lang.String, java.lang.String, java.util.Iterator)
    {
        org.hamcrest.BaseDescription r0;
        java.lang.String r1, r2, r3;
        java.util.Iterator r4;
        org.hamcrest.internal.SelfDescribingValueIterator $r5;
        org.hamcrest.Description $r6;

        r0 := @this: org.hamcrest.BaseDescription;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Iterator;

        $r5 = new org.hamcrest.internal.SelfDescribingValueIterator;

        specialinvoke $r5.<org.hamcrest.internal.SelfDescribingValueIterator: void <init>(java.util.Iterator)>(r4);

        $r6 = specialinvoke r0.<org.hamcrest.BaseDescription: org.hamcrest.Description appendList(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)>(r1, r2, r3, $r5);

        return $r6;
    }

    public org.hamcrest.Description appendList(java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable)
    {
        org.hamcrest.BaseDescription r0;
        java.lang.String r1, r2, r3;
        java.lang.Iterable r4;
        java.util.Iterator $r5;
        org.hamcrest.Description $r6;

        r0 := @this: org.hamcrest.BaseDescription;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Iterable;

        $r5 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r6 = specialinvoke r0.<org.hamcrest.BaseDescription: org.hamcrest.Description appendList(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)>(r1, r2, r3, $r5);

        return $r6;
    }

    private org.hamcrest.Description appendList(java.lang.String, java.lang.String, java.lang.String, java.util.Iterator)
    {
        org.hamcrest.BaseDescription r0;
        java.lang.String r1, r2, r3;
        java.util.Iterator r4;
        boolean $z0, z1;
        java.lang.Object $r5;
        org.hamcrest.SelfDescribing $r6;

        r0 := @this: org.hamcrest.BaseDescription;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Iterator;

        z1 = 0;

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>(r1);

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        if z1 == 0 goto label2;

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>(r2);

     label2:
        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.hamcrest.SelfDescribing) $r5;

        virtualinvoke r0.<org.hamcrest.BaseDescription: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r6);

        z1 = 1;

        goto label1;

     label3:
        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>(r3);

        return r0;
    }

    protected void append(java.lang.String)
    {
        org.hamcrest.BaseDescription r0;
        java.lang.String r1;
        int $i0, i2;
        char $c1;

        r0 := @this: org.hamcrest.BaseDescription;

        r1 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label2;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(char)>($c1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    protected abstract void append(char);

    private void toJavaSyntax(java.lang.String)
    {
        org.hamcrest.BaseDescription r0;
        java.lang.String r1;
        int $i0, i2;
        char $c1;

        r0 := @this: org.hamcrest.BaseDescription;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(char)>(34);

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label2;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        specialinvoke r0.<org.hamcrest.BaseDescription: void toJavaSyntax(char)>($c1);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(char)>(34);

        return;
    }

    private void toJavaSyntax(char)
    {
        org.hamcrest.BaseDescription r0;
        char c0;

        r0 := @this: org.hamcrest.BaseDescription;

        c0 := @parameter0: char;

        lookupswitch(c0)
        {
            case 9: goto label4;
            case 10: goto label2;
            case 13: goto label3;
            case 34: goto label1;
            default: goto label5;
        };

     label1:
        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("\\\"");

        goto label6;

     label2:
        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("\\n");

        goto label6;

     label3:
        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("\\r");

        goto label6;

     label4:
        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("\\t");

        goto label6;

     label5:
        virtualinvoke r0.<org.hamcrest.BaseDescription: void append(char)>(c0);

     label6:
        return;
    }
}
