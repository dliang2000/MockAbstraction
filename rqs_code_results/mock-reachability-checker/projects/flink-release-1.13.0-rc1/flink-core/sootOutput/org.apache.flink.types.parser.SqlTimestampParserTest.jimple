public class org.apache.flink.types.parser.SqlTimestampParserTest extends org.apache.flink.types.parser.ParserTestBase
{

    public void <init>()
    {
        org.apache.flink.types.parser.SqlTimestampParserTest r0;

        r0 := @this: org.apache.flink.types.parser.SqlTimestampParserTest;

        specialinvoke r0.<org.apache.flink.types.parser.ParserTestBase: void <init>()>();

        return;
    }

    public java.lang.String[] getValidTestValues()
    {
        org.apache.flink.types.parser.SqlTimestampParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.SqlTimestampParserTest;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "1970-01-01 00:00:00.000";

        $r1[1] = "1990-10-14 02:42:25";

        $r1[2] = "1990-10-14 02:42:25.123";

        $r1[3] = "1990-10-14 02:42:25.123000001";

        $r1[4] = "1990-10-14 02:42:25.123000002";

        $r1[5] = "2013-08-12 14:15:59.478";

        $r1[6] = "2013-08-12 14:15:59.47";

        $r1[7] = "0000-01-01 00:00:00.000";

        return $r1;
    }

    public java.sql.Timestamp[] getValidTestResults()
    {
        org.apache.flink.types.parser.SqlTimestampParserTest r0;
        java.sql.Timestamp[] $r1;
        java.sql.Timestamp $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.flink.types.parser.SqlTimestampParserTest;

        $r1 = newarray (java.sql.Timestamp)[8];

        $r2 = staticinvoke <java.sql.Timestamp: java.sql.Timestamp valueOf(java.lang.String)>("1970-01-01 00:00:00.000");

        $r1[0] = $r2;

        $r3 = staticinvoke <java.sql.Timestamp: java.sql.Timestamp valueOf(java.lang.String)>("1990-10-14 02:42:25");

        $r1[1] = $r3;

        $r4 = staticinvoke <java.sql.Timestamp: java.sql.Timestamp valueOf(java.lang.String)>("1990-10-14 02:42:25.123");

        $r1[2] = $r4;

        $r5 = staticinvoke <java.sql.Timestamp: java.sql.Timestamp valueOf(java.lang.String)>("1990-10-14 02:42:25.123000001");

        $r1[3] = $r5;

        $r6 = staticinvoke <java.sql.Timestamp: java.sql.Timestamp valueOf(java.lang.String)>("1990-10-14 02:42:25.123000002");

        $r1[4] = $r6;

        $r7 = staticinvoke <java.sql.Timestamp: java.sql.Timestamp valueOf(java.lang.String)>("2013-08-12 14:15:59.478");

        $r1[5] = $r7;

        $r8 = staticinvoke <java.sql.Timestamp: java.sql.Timestamp valueOf(java.lang.String)>("2013-08-12 14:15:59.47");

        $r1[6] = $r8;

        $r9 = staticinvoke <java.sql.Timestamp: java.sql.Timestamp valueOf(java.lang.String)>("0000-01-01 00:00:00.000");

        $r1[7] = $r9;

        return $r1;
    }

    public java.lang.String[] getInvalidTestValues()
    {
        org.apache.flink.types.parser.SqlTimestampParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.SqlTimestampParserTest;

        $r1 = newarray (java.lang.String)[9];

        $r1[0] = " 2013-08-12 14:15:59.479";

        $r1[1] = "2013-08-12 14:15:59.479 ";

        $r1[2] = "1970-01-01 00:00::00";

        $r1[3] = "00x00:00";

        $r1[4] = "2013/08/12";

        $r1[5] = "0000-01-01 00:00:00.f00";

        $r1[6] = "2013-08-12 14:15:59.4788888888888888";

        $r1[7] = " ";

        $r1[8] = "\t";

        return $r1;
    }

    public boolean allowsEmptyField()
    {
        org.apache.flink.types.parser.SqlTimestampParserTest r0;

        r0 := @this: org.apache.flink.types.parser.SqlTimestampParserTest;

        return 0;
    }

    public org.apache.flink.types.parser.FieldParser getParser()
    {
        org.apache.flink.types.parser.SqlTimestampParserTest r0;
        org.apache.flink.types.parser.SqlTimestampParser $r1;

        r0 := @this: org.apache.flink.types.parser.SqlTimestampParserTest;

        $r1 = new org.apache.flink.types.parser.SqlTimestampParser;

        specialinvoke $r1.<org.apache.flink.types.parser.SqlTimestampParser: void <init>()>();

        return $r1;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.types.parser.SqlTimestampParserTest r0;

        r0 := @this: org.apache.flink.types.parser.SqlTimestampParserTest;

        return class "Ljava/sql/Timestamp;";
    }

    public volatile java.lang.Object[] getValidTestResults()
    {
        org.apache.flink.types.parser.SqlTimestampParserTest r0;
        java.sql.Timestamp[] $r1;

        r0 := @this: org.apache.flink.types.parser.SqlTimestampParserTest;

        $r1 = virtualinvoke r0.<org.apache.flink.types.parser.SqlTimestampParserTest: java.sql.Timestamp[] getValidTestResults()>();

        return $r1;
    }
}
