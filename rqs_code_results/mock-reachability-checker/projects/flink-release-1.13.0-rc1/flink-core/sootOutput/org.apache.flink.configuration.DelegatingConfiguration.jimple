public final class org.apache.flink.configuration.DelegatingConfiguration extends org.apache.flink.configuration.Configuration
{
    private static final long serialVersionUID;
    private final org.apache.flink.configuration.Configuration backingConfig;
    private java.lang.String prefix;

    public void <init>()
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.Configuration $r1;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        specialinvoke r0.<org.apache.flink.configuration.Configuration: void <init>()>();

        $r1 = new org.apache.flink.configuration.Configuration;

        specialinvoke $r1.<org.apache.flink.configuration.Configuration: void <init>()>();

        r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig> = $r1;

        r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix> = "";

        return;
    }

    public void <init>(org.apache.flink.configuration.Configuration, java.lang.String)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.Configuration r1, $r4;
        java.lang.String r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.flink.configuration.Configuration: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.apache.flink.configuration.Configuration) $r3;

        r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig> = $r4;

        r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix> = r2;

        return;
    }

    public java.lang.String getString(java.lang.String, java.lang.String)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, r2, $r5, $r8, $r9;
        java.lang.StringBuilder $r3, $r6, $r7;
        org.apache.flink.configuration.Configuration $r4;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r4.<org.apache.flink.configuration.Configuration: java.lang.String getString(java.lang.String,java.lang.String)>($r8, r2);

        return $r9;
    }

    public java.lang.String getString(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r4;
        java.lang.String $r2, $r5;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r4 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r2);

        $r5 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: java.lang.String getString(org.apache.flink.configuration.ConfigOption)>($r4);

        return $r5;
    }

    public java.lang.String getString(org.apache.flink.configuration.ConfigOption, java.lang.String)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r5;
        java.lang.String r2, $r3, $r6;
        org.apache.flink.configuration.Configuration $r4;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r3);

        $r6 = virtualinvoke $r4.<org.apache.flink.configuration.Configuration: java.lang.String getString(org.apache.flink.configuration.ConfigOption,java.lang.String)>($r5, r2);

        return $r6;
    }

    public void setString(java.lang.String, java.lang.String)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, r2, $r5, $r8;
        java.lang.StringBuilder $r3, $r6, $r7;
        org.apache.flink.configuration.Configuration $r4;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.flink.configuration.Configuration: void setString(java.lang.String,java.lang.String)>($r8, r2);

        return;
    }

    public void setString(org.apache.flink.configuration.ConfigOption, java.lang.String)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        java.lang.String r2, $r5, $r7, $r9;
        java.lang.StringBuilder $r3, $r6, $r8;
        org.apache.flink.configuration.Configuration $r4;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.flink.configuration.Configuration: void setString(java.lang.String,java.lang.String)>($r9, r2);

        return;
    }

    public java.lang.Class getClass(java.lang.String, java.lang.Class, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r6, $r9;
        java.lang.Class r2, $r10;
        java.lang.ClassLoader r3;
        java.lang.StringBuilder $r4, $r7, $r8;
        org.apache.flink.configuration.Configuration $r5;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.ClassLoader;

        $r5 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r5.<org.apache.flink.configuration.Configuration: java.lang.Class getClass(java.lang.String,java.lang.Class,java.lang.ClassLoader)>($r9, r2, r3);

        return $r10;
    }

    public void setClass(java.lang.String, java.lang.Class)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r5, $r8;
        java.lang.Class r2;
        java.lang.StringBuilder $r3, $r6, $r7;
        org.apache.flink.configuration.Configuration $r4;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.flink.configuration.Configuration: void setClass(java.lang.String,java.lang.Class)>($r8, r2);

        return;
    }

    public int getInteger(java.lang.String, int)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r4, $r7;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: int getInteger(java.lang.String,int)>($r7, i0);

        return $i1;
    }

    public int getInteger(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r4;
        java.lang.String $r2;
        org.apache.flink.configuration.Configuration $r3;
        int $i0;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r4 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r2);

        $i0 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: int getInteger(org.apache.flink.configuration.ConfigOption)>($r4);

        return $i0;
    }

    public int getInteger(org.apache.flink.configuration.ConfigOption, int)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        int i0, $i1;
        org.apache.flink.configuration.Configuration $r2;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $i1 = virtualinvoke $r2.<org.apache.flink.configuration.Configuration: int getInteger(org.apache.flink.configuration.ConfigOption,int)>(r1, i0);

        return $i1;
    }

    public void setInteger(java.lang.String, int)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r4, $r7;
        int i0;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void setInteger(java.lang.String,int)>($r7, i0);

        return;
    }

    public void setInteger(org.apache.flink.configuration.ConfigOption, int)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        int i0;
        java.lang.StringBuilder $r2, $r5, $r7;
        org.apache.flink.configuration.Configuration $r3;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        i0 := @parameter1: int;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void setInteger(java.lang.String,int)>($r8, i0);

        return;
    }

    public long getLong(java.lang.String, long)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r4, $r7;
        long l0, $l1;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $l1 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: long getLong(java.lang.String,long)>($r7, l0);

        return $l1;
    }

    public long getLong(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r4;
        java.lang.String $r2;
        org.apache.flink.configuration.Configuration $r3;
        long $l0;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r4 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r2);

        $l0 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: long getLong(org.apache.flink.configuration.ConfigOption)>($r4);

        return $l0;
    }

    public long getLong(org.apache.flink.configuration.ConfigOption, long)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        long l0, $l1;
        org.apache.flink.configuration.Configuration $r2;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        l0 := @parameter1: long;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $l1 = virtualinvoke $r2.<org.apache.flink.configuration.Configuration: long getLong(org.apache.flink.configuration.ConfigOption,long)>(r1, l0);

        return $l1;
    }

    public void setLong(java.lang.String, long)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r4, $r7;
        long l0;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void setLong(java.lang.String,long)>($r7, l0);

        return;
    }

    public void setLong(org.apache.flink.configuration.ConfigOption, long)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        long l0;
        java.lang.StringBuilder $r2, $r5, $r7;
        org.apache.flink.configuration.Configuration $r3;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        l0 := @parameter1: long;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void setLong(java.lang.String,long)>($r8, l0);

        return;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r4, $r7;
        boolean z0, $z1;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: boolean getBoolean(java.lang.String,boolean)>($r7, z0);

        return $z1;
    }

    public boolean getBoolean(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r4;
        java.lang.String $r2;
        org.apache.flink.configuration.Configuration $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r4 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r2);

        $z0 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: boolean getBoolean(org.apache.flink.configuration.ConfigOption)>($r4);

        return $z0;
    }

    public void setBoolean(java.lang.String, boolean)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r4, $r7;
        boolean z0;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void setBoolean(java.lang.String,boolean)>($r7, z0);

        return;
    }

    public void setBoolean(org.apache.flink.configuration.ConfigOption, boolean)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        boolean z0;
        java.lang.StringBuilder $r2, $r5, $r7;
        org.apache.flink.configuration.Configuration $r3;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        z0 := @parameter1: boolean;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void setBoolean(java.lang.String,boolean)>($r8, z0);

        return;
    }

    public boolean getBoolean(org.apache.flink.configuration.ConfigOption, boolean)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        boolean z0, $z1;
        org.apache.flink.configuration.Configuration $r2;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $z1 = virtualinvoke $r2.<org.apache.flink.configuration.Configuration: boolean getBoolean(org.apache.flink.configuration.ConfigOption,boolean)>(r1, z0);

        return $z1;
    }

    public float getFloat(java.lang.String, float)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r4, $r7;
        float f0, $f1;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $f1 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: float getFloat(java.lang.String,float)>($r7, f0);

        return $f1;
    }

    public float getFloat(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r4;
        java.lang.String $r2;
        org.apache.flink.configuration.Configuration $r3;
        float $f0;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r4 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r2);

        $f0 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: float getFloat(org.apache.flink.configuration.ConfigOption)>($r4);

        return $f0;
    }

    public float getFloat(org.apache.flink.configuration.ConfigOption, float)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        float f0, $f1;
        org.apache.flink.configuration.Configuration $r2;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        f0 := @parameter1: float;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $f1 = virtualinvoke $r2.<org.apache.flink.configuration.Configuration: float getFloat(org.apache.flink.configuration.ConfigOption,float)>(r1, f0);

        return $f1;
    }

    public void setFloat(java.lang.String, float)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r4, $r7;
        float f0;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void setFloat(java.lang.String,float)>($r7, f0);

        return;
    }

    public void setFloat(org.apache.flink.configuration.ConfigOption, float)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        float f0;
        java.lang.StringBuilder $r2, $r5, $r7;
        org.apache.flink.configuration.Configuration $r3;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        f0 := @parameter1: float;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void setFloat(java.lang.String,float)>($r8, f0);

        return;
    }

    public double getDouble(java.lang.String, double)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r4, $r7;
        double d0, $d1;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $d1 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: double getDouble(java.lang.String,double)>($r7, d0);

        return $d1;
    }

    public double getDouble(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r4;
        java.lang.String $r2;
        org.apache.flink.configuration.Configuration $r3;
        double $d0;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r4 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r2);

        $d0 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: double getDouble(org.apache.flink.configuration.ConfigOption)>($r4);

        return $d0;
    }

    public double getDouble(org.apache.flink.configuration.ConfigOption, double)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        double d0, $d1;
        org.apache.flink.configuration.Configuration $r2;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        d0 := @parameter1: double;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $d1 = virtualinvoke $r2.<org.apache.flink.configuration.Configuration: double getDouble(org.apache.flink.configuration.ConfigOption,double)>(r1, d0);

        return $d1;
    }

    public void setDouble(java.lang.String, double)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r4, $r7;
        double d0;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void setDouble(java.lang.String,double)>($r7, d0);

        return;
    }

    public void setDouble(org.apache.flink.configuration.ConfigOption, double)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        double d0;
        java.lang.StringBuilder $r2, $r5, $r7;
        org.apache.flink.configuration.Configuration $r3;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        d0 := @parameter1: double;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void setDouble(java.lang.String,double)>($r8, d0);

        return;
    }

    public byte[] getBytes(java.lang.String, byte[])
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r5, $r8;
        byte[] r2, $r9;
        java.lang.StringBuilder $r3, $r6, $r7;
        org.apache.flink.configuration.Configuration $r4;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r4.<org.apache.flink.configuration.Configuration: byte[] getBytes(java.lang.String,byte[])>($r8, r2);

        return $r9;
    }

    public void setBytes(java.lang.String, byte[])
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r5, $r8;
        byte[] r2;
        java.lang.StringBuilder $r3, $r6, $r7;
        org.apache.flink.configuration.Configuration $r4;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.flink.configuration.Configuration: void setBytes(java.lang.String,byte[])>($r8, r2);

        return;
    }

    public java.lang.String getValue(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r4;
        java.lang.String $r2, $r5;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r4 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r2);

        $r5 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: java.lang.String getValue(org.apache.flink.configuration.ConfigOption)>($r4);

        return $r5;
    }

    public java.lang.Enum getEnum(java.lang.Class, org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.Class r1;
        org.apache.flink.configuration.ConfigOption r2, $r5;
        java.lang.String $r3;
        org.apache.flink.configuration.Configuration $r4;
        java.lang.Enum $r6;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.configuration.ConfigOption;

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r2, $r3);

        $r6 = virtualinvoke $r4.<org.apache.flink.configuration.Configuration: java.lang.Enum getEnum(java.lang.Class,org.apache.flink.configuration.ConfigOption)>(r1, $r5);

        return $r6;
    }

    public void addAllToProperties(java.util.Properties)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.util.Properties r1;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.String r5, $r14, $r15, $r17, $r18, $r20;
        org.apache.flink.configuration.Configuration $r7, $r9;
        java.util.HashMap $r8, $r10;
        java.util.Set $r11;
        boolean $z0, $z1;
        java.lang.Object $r12, $r13, $r16, $r19, $r21;
        int $i0, $i1;
        java.lang.Throwable $r23;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.util.Properties;

        $r7 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r8 = $r7.<org.apache.flink.configuration.Configuration: java.util.HashMap confData>;

        entermonitor $r8;

     label1:
        $r9 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r10 = $r9.<org.apache.flink.configuration.Configuration: java.util.HashMap confData>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r12;

        $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.String) $r13;

        $r14 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $z1 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>($r14);

        if $z1 == 0 goto label3;

        $r16 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (java.lang.String) $r16;

        $r17 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $i0 = virtualinvoke $r17.<java.lang.String: int length()>();

        $r19 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = (java.lang.String) $r19;

        $i1 = virtualinvoke $r20.<java.lang.String: int length()>();

        r5 = virtualinvoke $r18.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r21 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r21);

     label3:
        goto label2;

     label4:
        exitmonitor $r8;

     label5:
        goto label8;

     label6:
        $r23 := @caughtexception;

        exitmonitor $r8;

     label7:
        throw $r23;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void addAll(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.Configuration r1;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        virtualinvoke r0.<org.apache.flink.configuration.DelegatingConfiguration: void addAll(org.apache.flink.configuration.Configuration,java.lang.String)>(r1, "");

        return;
    }

    public void addAll(org.apache.flink.configuration.Configuration, java.lang.String)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.Configuration r1, $r4;
        java.lang.String r2, $r5, $r8;
        java.lang.StringBuilder $r3, $r6, $r7;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.flink.configuration.Configuration: void addAll(org.apache.flink.configuration.Configuration,java.lang.String)>(r1, $r8);

        return;
    }

    public java.lang.String toString()
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.Configuration $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        $r1 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = virtualinvoke $r1.<org.apache.flink.configuration.Configuration: java.lang.String toString()>();

        return $r2;
    }

    public java.util.Set keySet()
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        int i0;
        java.util.Iterator r2;
        java.lang.String r3, $r4, $r6, $r10, $r11;
        java.util.HashSet $r5;
        org.apache.flink.configuration.Configuration $r7, $r12;
        java.util.Set $r8, $r13;
        boolean $z0, $z1;
        java.lang.Object $r9;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        if $r4 != null goto label1;

        $r12 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r13 = virtualinvoke $r12.<org.apache.flink.configuration.Configuration: java.util.Set keySet()>();

        return $r13;

     label1:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r6 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $r7 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r8 = virtualinvoke $r7.<org.apache.flink.configuration.Configuration: java.util.Set keySet()>();

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r9;

        $r10 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>($r10);

        if $z1 == 0 goto label3;

        $r11 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(i0);

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>($r11);

     label3:
        goto label2;

     label4:
        return $r5;
    }

    public org.apache.flink.configuration.Configuration clone()
    {
        org.apache.flink.configuration.DelegatingConfiguration r0, $r1;
        org.apache.flink.configuration.Configuration $r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        $r1 = new org.apache.flink.configuration.DelegatingConfiguration;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.configuration.Configuration: org.apache.flink.configuration.Configuration clone()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        specialinvoke $r1.<org.apache.flink.configuration.DelegatingConfiguration: void <init>(org.apache.flink.configuration.Configuration,java.lang.String)>($r3, $r4);

        return $r1;
    }

    public java.util.Map toMap()
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.util.Map r1;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.String r5, $r11, $r12, $r14, $r15;
        org.apache.flink.configuration.Configuration $r6;
        java.util.HashMap $r7;
        java.util.Set $r8;
        boolean $z0, $z1;
        java.lang.Object $r9, $r10, $r13, $r16;
        int $i0;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        $r6 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        r1 = virtualinvoke $r6.<org.apache.flink.configuration.Configuration: java.util.Map toMap()>();

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r8 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r10;

        $r11 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $z1 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>($r11);

        if $z1 == 0 goto label2;

        $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.String) $r13;

        $r14 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $i0 = virtualinvoke $r14.<java.lang.String: int length()>();

        r5 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int)>($i0);

        $r16 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r16);

     label2:
        goto label1;

     label3:
        return $r7;
    }

    public boolean removeConfig(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        org.apache.flink.configuration.Configuration $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $z0 = virtualinvoke $r2.<org.apache.flink.configuration.Configuration: boolean removeConfig(org.apache.flink.configuration.ConfigOption)>(r1);

        return $z0;
    }

    public boolean containsKey(java.lang.String)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String r1, $r4, $r7;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.apache.flink.configuration.Configuration $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: boolean containsKey(java.lang.String)>($r7);

        return $z0;
    }

    public boolean contains(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r4;
        java.lang.String $r2;
        org.apache.flink.configuration.Configuration $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r4 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r2);

        $z0 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: boolean contains(org.apache.flink.configuration.ConfigOption)>($r4);

        return $z0;
    }

    public java.lang.Object get(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r4;
        java.lang.String $r2;
        org.apache.flink.configuration.Configuration $r3;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r4 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r2);

        $r5 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: java.lang.Object get(org.apache.flink.configuration.ConfigOption)>($r4);

        return $r5;
    }

    public java.util.Optional getOptional(org.apache.flink.configuration.ConfigOption)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r4;
        java.lang.String $r2;
        org.apache.flink.configuration.Configuration $r3;
        java.util.Optional $r5;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r4 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r2);

        $r5 = virtualinvoke $r3.<org.apache.flink.configuration.Configuration: java.util.Optional getOptional(org.apache.flink.configuration.ConfigOption)>($r4);

        return $r5;
    }

    public org.apache.flink.configuration.Configuration set(org.apache.flink.configuration.ConfigOption, java.lang.Object)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1, $r5;
        java.lang.Object r2;
        java.lang.String $r3;
        org.apache.flink.configuration.Configuration $r4, $r6;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r5 = staticinvoke <org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption,java.lang.String)>(r1, $r3);

        $r6 = virtualinvoke $r4.<org.apache.flink.configuration.Configuration: org.apache.flink.configuration.Configuration set(org.apache.flink.configuration.ConfigOption,java.lang.Object)>($r5, r2);

        return $r6;
    }

    public void read(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.core.memory.DataInputView r1;
        java.lang.String $r2;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        $r2 = interfaceinvoke r1.<org.apache.flink.core.memory.DataInputView: java.lang.String readUTF()>();

        r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix> = $r2;

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void read(org.apache.flink.core.memory.DataInputView)>(r1);

        return;
    }

    public void write(org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.core.memory.DataOutputView r1;
        java.lang.String $r2;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.core.memory.DataOutputView;

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        interfaceinvoke r1.<org.apache.flink.core.memory.DataOutputView: void writeUTF(java.lang.String)>($r2);

        $r3 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        virtualinvoke $r3.<org.apache.flink.configuration.Configuration: void write(org.apache.flink.core.memory.DataOutputView)>(r1);

        return;
    }

    public int hashCode()
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        org.apache.flink.configuration.Configuration $r2;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        $r1 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $r2 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $i1 = virtualinvoke $r2.<org.apache.flink.configuration.Configuration: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3, $r4;
        org.apache.flink.configuration.Configuration $r5, $r6;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.configuration.DelegatingConfiguration;

        if $z0 == 0 goto label3;

        r2 = (org.apache.flink.configuration.DelegatingConfiguration) r1;

        $r4 = r0.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $r3 = r2.<org.apache.flink.configuration.DelegatingConfiguration: java.lang.String prefix>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $r6 = r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $r5 = r2.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration backingConfig>;

        $z2 = virtualinvoke $r6.<org.apache.flink.configuration.Configuration: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    private static org.apache.flink.configuration.ConfigOption prefixOption(org.apache.flink.configuration.ConfigOption, java.lang.String)
    {
        org.apache.flink.configuration.ConfigOption r0, $r10;
        java.lang.String r1, r2, $r6, $r19, $r21;
        org.apache.flink.configuration.FallbackKey r3, $r22;
        java.lang.StringBuilder $r4, $r5, $r7, $r17, $r18, $r20;
        boolean $z0, $z1, $z2;
        org.apache.flink.configuration.FallbackKey[] $r8, r25;
        java.lang.Object[] $r9;
        java.lang.Class $r11;
        org.apache.flink.configuration.description.Description $r12;
        java.lang.Object $r13, $r16;
        java.util.ArrayList $r14;
        java.lang.Iterable $r15;
        java.util.List r23;
        java.util.Iterator r24;

        r0 := @parameter0: org.apache.flink.configuration.ConfigOption;

        r1 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke r0.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<org.apache.flink.configuration.ConfigOption: boolean hasFallbackKeys()>();

        if $z0 == 0 goto label3;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r23 = $r14;

        $r15 = virtualinvoke r0.<org.apache.flink.configuration.ConfigOption: java.lang.Iterable fallbackKeys()>();

        r24 = interfaceinvoke $r15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r16 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.flink.configuration.FallbackKey) $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke r3.<org.apache.flink.configuration.FallbackKey: java.lang.String getKey()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = staticinvoke <org.apache.flink.configuration.FallbackKey: org.apache.flink.configuration.FallbackKey createDeprecatedKey(java.lang.String)>($r21);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r22);

        goto label1;

     label2:
        goto label4;

     label3:
        r23 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label4:
        $r8 = newarray (org.apache.flink.configuration.FallbackKey)[0];

        $r9 = interfaceinvoke r23.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        r25 = (org.apache.flink.configuration.FallbackKey[]) $r9;

        $r10 = new org.apache.flink.configuration.ConfigOption;

        $r11 = virtualinvoke r0.<org.apache.flink.configuration.ConfigOption: java.lang.Class getClazz()>();

        $r12 = virtualinvoke r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.description.Description description()>();

        $r13 = virtualinvoke r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue()>();

        $z1 = virtualinvoke r0.<org.apache.flink.configuration.ConfigOption: boolean isList()>();

        specialinvoke $r10.<org.apache.flink.configuration.ConfigOption: void <init>(java.lang.String,java.lang.Class,org.apache.flink.configuration.description.Description,java.lang.Object,boolean,org.apache.flink.configuration.FallbackKey[])>(r2, $r11, $r12, $r13, $z1, r25);

        return $r10;
    }

    public volatile org.apache.flink.configuration.WritableConfig set(org.apache.flink.configuration.ConfigOption, java.lang.Object)
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.ConfigOption r1;
        java.lang.Object r2;
        org.apache.flink.configuration.Configuration $r3;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        r1 := @parameter0: org.apache.flink.configuration.ConfigOption;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration set(org.apache.flink.configuration.ConfigOption,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.flink.configuration.DelegatingConfiguration r0;
        org.apache.flink.configuration.Configuration $r1;

        r0 := @this: org.apache.flink.configuration.DelegatingConfiguration;

        $r1 = virtualinvoke r0.<org.apache.flink.configuration.DelegatingConfiguration: org.apache.flink.configuration.Configuration clone()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.configuration.DelegatingConfiguration: long serialVersionUID> = 1L;

        return;
    }
}
