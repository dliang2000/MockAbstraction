public class org.powermock.core.transformers.javassist.PackagePrivateClassesMockTransformer extends org.powermock.core.transformers.javassist.AbstractJavaAssistMockTransformer
{

    public void <init>(org.powermock.core.transformers.TransformStrategy)
    {
        org.powermock.core.transformers.javassist.PackagePrivateClassesMockTransformer r0;
        org.powermock.core.transformers.TransformStrategy r1;

        r0 := @this: org.powermock.core.transformers.javassist.PackagePrivateClassesMockTransformer;

        r1 := @parameter0: org.powermock.core.transformers.TransformStrategy;

        specialinvoke r0.<org.powermock.core.transformers.javassist.AbstractJavaAssistMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        return;
    }

    public javassist.CtClass transform(javassist.CtClass)
    {
        org.powermock.core.transformers.javassist.PackagePrivateClassesMockTransformer r0;
        javassist.CtClass r1;
        java.lang.String r2;
        org.powermock.core.transformers.TransformStrategy $r3, $r4;

        r0 := @this: org.powermock.core.transformers.javassist.PackagePrivateClassesMockTransformer;

        r1 := @parameter0: javassist.CtClass;

        r2 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<org.powermock.core.transformers.javassist.PackagePrivateClassesMockTransformer: org.powermock.core.transformers.TransformStrategy getStrategy()>();

        $r4 = <org.powermock.core.transformers.TransformStrategy: org.powermock.core.transformers.TransformStrategy INST_REDEFINE>;

        if $r3 == $r4 goto label1;

        staticinvoke <org.powermock.core.transformers.javassist.PackagePrivateClassesMockTransformer: void transform(javassist.CtClass,java.lang.String)>(r1, r2);

     label1:
        return r1;
    }

    private static void transform(javassist.CtClass, java.lang.String)
    {
        javassist.CtClass r0, $r2;
        java.lang.String r1;
        boolean $z0, $z1, $z2;
        int $i0, i1;
        javassist.NotFoundException $r3;

        r0 := @parameter0: javassist.CtClass;

        r1 := @parameter1: java.lang.String;

     label1:
        i1 = virtualinvoke r0.<javassist.CtClass: int getModifiers()>();

        $z0 = staticinvoke <javassist.Modifier: boolean isPackage(int)>(i1);

        if $z0 == 0 goto label3;

        $z1 = staticinvoke <org.powermock.core.transformers.javassist.PackagePrivateClassesMockTransformer: boolean isNotSystemClass(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r0.<javassist.CtClass: boolean isInterface()>();

        if $z2 == 0 goto label2;

        $r2 = virtualinvoke r0.<javassist.CtClass: javassist.CtClass getDeclaringClass()>();

        if $r2 != null goto label3;

     label2:
        $i0 = staticinvoke <javassist.Modifier: int setPublic(int)>(i1);

        virtualinvoke r0.<javassist.CtClass: void setModifiers(int)>($i0);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return;

        catch javassist.NotFoundException from label1 to label3 with label4;
    }

    private static boolean isNotSystemClass(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("java.");

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
