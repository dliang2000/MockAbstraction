public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException
{
    private static final long serialVersionUID;

    public void <init>(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: void <init>(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(r1, r2, null);

        return;
    }

    public void <init>(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation r2;
        java.lang.Throwable r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        r3 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: void <init>(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(r1, r2, r3);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        java.lang.String r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.String)>(r1, r2);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, java.lang.String, java.lang.Throwable)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        java.lang.String r2;
        java.lang.Throwable r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)>(r1, r2, r3);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation)>(r1, r2, r3);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation r3;
        java.lang.Throwable r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        r4 := @parameter3: java.lang.Throwable;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: void <init>(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(r2, r3, r4);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException withParser(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _processor> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException withRequestPayload(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload _requestPayload> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser getProcessor()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        $r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser getProcessor()>();

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload getRequestPayload()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        $r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload getRequestPayload()>();

        return $r1;
    }

    public java.lang.String getRequestPayloadAsString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        $r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: java.lang.String getRequestPayloadAsString()>();

        return $r1;
    }

    public java.lang.String getMessage()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        $r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: java.lang.String getMessage()>();

        return $r1;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException withRequestPayload(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException withRequestPayload(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException withParser(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException withParser(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

        return $r2;
    }

    public volatile java.lang.Object getProcessor()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser getProcessor()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException: long serialVersionUID> = 2L;

        return;
    }
}
