public class org.apache.flink.api.common.accumulators.LongMaximum extends java.lang.Object implements org.apache.flink.api.common.accumulators.SimpleAccumulator
{
    private static final long serialVersionUID;
    private long max;

    public void <init>()
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max> = -9223372036854775808L;

        return;
    }

    public void <init>(long)
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0;
        long l0;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max> = -9223372036854775808L;

        r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max> = l0;

        return;
    }

    public void add(java.lang.Long)
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0;
        java.lang.Long r1;
        long $l0, $l1, $l2;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        r1 := @parameter0: java.lang.Long;

        $l0 = r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max>;

        $l1 = virtualinvoke r1.<java.lang.Long: long longValue()>();

        $l2 = staticinvoke <java.lang.Math: long max(long,long)>($l0, $l1);

        r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max> = $l2;

        return;
    }

    public java.lang.Long getLocalValue()
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0;
        long $l0;
        java.lang.Long $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        $l0 = r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r1;
    }

    public void merge(org.apache.flink.api.common.accumulators.Accumulator)
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0;
        org.apache.flink.api.common.accumulators.Accumulator r1;
        long $l0, $l1, $l2;
        java.io.Serializable $r2;
        java.lang.Long $r3;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        r1 := @parameter0: org.apache.flink.api.common.accumulators.Accumulator;

        $l0 = r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max>;

        $r2 = interfaceinvoke r1.<org.apache.flink.api.common.accumulators.Accumulator: java.io.Serializable getLocalValue()>();

        $r3 = (java.lang.Long) $r2;

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $l2 = staticinvoke <java.lang.Math: long max(long,long)>($l0, $l1);

        r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max> = $l2;

        return;
    }

    public void resetLocal()
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max> = -9223372036854775808L;

        return;
    }

    public org.apache.flink.api.common.accumulators.LongMaximum clone()
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0, $r2;
        long $l0;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        $r2 = new org.apache.flink.api.common.accumulators.LongMaximum;

        specialinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: void <init>()>();

        $l0 = r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max>;

        $r2.<org.apache.flink.api.common.accumulators.LongMaximum: long max> = $l0;

        return $r2;
    }

    public void add(long)
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0;
        long l0, $l1, $l2;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        l0 := @parameter0: long;

        $l1 = r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max>;

        $l2 = staticinvoke <java.lang.Math: long max(long,long)>($l1, l0);

        r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max> = $l2;

        return;
    }

    public long getLocalValuePrimitive()
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0;
        long $l0;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        $l0 = r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max>;

        return $l0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        long $l0;
        java.lang.String $r4;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LongMaximum ");

        $l0 = r0.<org.apache.flink.api.common.accumulators.LongMaximum: long max>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0, $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.LongMaximum: org.apache.flink.api.common.accumulators.LongMaximum clone()>();

        return $r1;
    }

    public volatile org.apache.flink.api.common.accumulators.Accumulator clone()
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0, $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.LongMaximum: org.apache.flink.api.common.accumulators.LongMaximum clone()>();

        return $r1;
    }

    public volatile java.io.Serializable getLocalValue()
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0;
        java.lang.Long $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.LongMaximum: java.lang.Long getLocalValue()>();

        return $r1;
    }

    public volatile void add(java.lang.Object)
    {
        org.apache.flink.api.common.accumulators.LongMaximum r0;
        java.lang.Object r1;
        java.lang.Long $r2;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximum;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Long) r1;

        virtualinvoke r0.<org.apache.flink.api.common.accumulators.LongMaximum: void add(java.lang.Long)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.accumulators.LongMaximum: long serialVersionUID> = 1L;

        return;
    }
}
