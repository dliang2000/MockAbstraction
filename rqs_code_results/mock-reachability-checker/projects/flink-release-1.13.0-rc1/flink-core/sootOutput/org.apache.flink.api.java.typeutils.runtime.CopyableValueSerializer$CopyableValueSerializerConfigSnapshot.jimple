public final class org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerConfigSnapshot extends org.apache.flink.api.common.typeutils.GenericTypeSerializerConfigSnapshot
{
    private static final int VERSION;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerConfigSnapshot r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerConfigSnapshot;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.GenericTypeSerializerConfigSnapshot: void <init>()>();

        return;
    }

    public void <init>(java.lang.Class)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerConfigSnapshot r0;
        java.lang.Class r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerConfigSnapshot;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.GenericTypeSerializerConfigSnapshot: void <init>(java.lang.Class)>(r1);

        return;
    }

    public int getVersion()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerConfigSnapshot r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerConfigSnapshot;

        return 1;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility resolveSchemaCompatibility(org.apache.flink.api.common.typeutils.TypeSerializer)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerConfigSnapshot r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r1;
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot $r2;
        java.lang.Class $r3;
        org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility $r4;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerConfigSnapshot;

        r1 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializer;

        $r2 = new org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot;

        $r3 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerConfigSnapshot: java.lang.Class getTypeClass()>();

        specialinvoke $r2.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot: void <init>(java.lang.Class)>($r3);

        $r4 = virtualinvoke $r2.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot: org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility resolveSchemaCompatibility(org.apache.flink.api.common.typeutils.TypeSerializer)>(r1);

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerConfigSnapshot: int VERSION> = 1;

        return;
    }
}
