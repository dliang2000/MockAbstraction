public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode
{
    private static final long serialVersionUID;

    protected void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode: void <init>()>();

        return;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType getNodeType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType NUMBER>;

        return $r1;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType numberType();

    public abstract java.lang.Number numberValue();

    public abstract int intValue();

    public abstract long longValue();

    public abstract double doubleValue();

    public abstract java.math.BigDecimal decimalValue();

    public abstract java.math.BigInteger bigIntegerValue();

    public abstract boolean canConvertToInt();

    public abstract boolean canConvertToLong();

    public abstract java.lang.String asText();

    public final int asInt()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode;

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: int intValue()>();

        return $i0;
    }

    public final int asInt(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode r0;
        int i0, $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: int intValue()>();

        return $i1;
    }

    public final long asLong()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode r0;
        long $l0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode;

        $l0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: long longValue()>();

        return $l0;
    }

    public final long asLong(long)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode r0;
        long l0, $l1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: long longValue()>();

        return $l1;
    }

    public final double asDouble()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode r0;
        double $d0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode;

        $d0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: double doubleValue()>();

        return $d0;
    }

    public final double asDouble(double)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode r0;
        double d0, $d1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode;

        d0 := @parameter0: double;

        $d1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: double doubleValue()>();

        return $d1;
    }

    public boolean isNaN()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode;

        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: long serialVersionUID> = 1L;

        return;
    }
}
