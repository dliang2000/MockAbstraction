public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ContextualDeserializer
{
    protected final java.text.DateFormat _customFormat;
    protected final java.lang.String _formatString;

    protected void <init>(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer r0;
        java.lang.Class r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.text.DateFormat _customFormat> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.lang.String _formatString> = null;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer, java.text.DateFormat, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer r0, r1;
        java.text.DateFormat r2;
        java.lang.String r3;
        java.lang.Class $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer;

        r2 := @parameter1: java.text.DateFormat;

        r3 := @parameter2: java.lang.String;

        $r4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.lang.Class _valueClass>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>($r4);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.text.DateFormat _customFormat> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.lang.String _formatString> = r3;

        return;
    }

    protected abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat, java.lang.String);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType DateTime>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer r0, $r9, $r16, $r30;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r3;
        java.lang.Boolean r4;
        java.lang.Class $r5, $r7, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r6, $r12;
        java.lang.Object $r8, $r14;
        java.text.SimpleDateFormat $r10, $r15;
        java.util.TimeZone r17;
        java.lang.String r18, $r29, r32;
        java.util.Locale $r19, $r23;
        java.text.DateFormat r22, r28, r31, r35;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat r25, r26, r27, r33, r34;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.lang.Class handledType()>();

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(r1, r2, $r5);

        if r3 == null goto label15;

        r17 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.util.TimeZone getTimeZone()>();

        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getLenient()>();

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: boolean hasPattern()>();

        if $z0 == 0 goto label05;

        r18 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.String getPattern()>();

        $z5 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: boolean hasLocale()>();

        if $z5 == 0 goto label01;

        $r19 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.util.Locale getLocale()>();

        goto label02;

     label01:
        $r19 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.util.Locale getLocale()>();

     label02:
        $r15 = new java.text.SimpleDateFormat;

        specialinvoke $r15.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r18, $r19);

        if r17 != null goto label03;

        r17 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.util.TimeZone getTimeZone()>();

     label03:
        virtualinvoke $r15.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>(r17);

        if r4 == null goto label04;

        $z6 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r15.<java.text.SimpleDateFormat: void setLenient(boolean)>($z6);

     label04:
        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String)>($r15, r18);

        return $r16;

     label05:
        if r17 == null goto label11;

        $r12 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();

        r22 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: java.text.DateFormat getDateFormat()>();

        $r13 = virtualinvoke r22.<java.lang.Object: java.lang.Class getClass()>();

        if $r13 != class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/util/StdDateFormat;" goto label09;

        $z4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: boolean hasLocale()>();

        if $z4 == 0 goto label06;

        $r23 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.util.Locale getLocale()>();

        goto label07;

     label06:
        $r23 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.util.Locale getLocale()>();

     label07:
        r25 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat) r22;

        r26 = virtualinvoke r25.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat withTimeZone(java.util.TimeZone)>(r17);

        r27 = virtualinvoke r26.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat withLocale(java.util.Locale)>($r23);

        if r4 == null goto label08;

        r27 = virtualinvoke r27.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat withLenient(java.lang.Boolean)>(r4);

     label08:
        r28 = r27;

        goto label10;

     label09:
        $r14 = virtualinvoke r22.<java.text.DateFormat: java.lang.Object clone()>();

        r28 = (java.text.DateFormat) $r14;

        virtualinvoke r28.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r17);

        if r4 == null goto label10;

        $z3 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r28.<java.text.DateFormat: void setLenient(boolean)>($z3);

     label10:
        $r29 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.lang.String _formatString>;

        $r30 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String)>(r28, $r29);

        return $r30;

     label11:
        if r4 == null goto label15;

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();

        r31 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: java.text.DateFormat getDateFormat()>();

        r32 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.lang.String _formatString>;

        $r7 = virtualinvoke r31.<java.lang.Object: java.lang.Class getClass()>();

        if $r7 != class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/util/StdDateFormat;" goto label12;

        r33 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat) r31;

        r34 = virtualinvoke r33.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat withLenient(java.lang.Boolean)>(r4);

        r35 = r34;

        r32 = virtualinvoke r34.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat: java.lang.String toPattern()>();

        goto label13;

     label12:
        $r8 = virtualinvoke r31.<java.text.DateFormat: java.lang.Object clone()>();

        r35 = (java.text.DateFormat) $r8;

        $z1 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r35.<java.text.DateFormat: void setLenient(boolean)>($z1);

        $z2 = r35 instanceof java.text.SimpleDateFormat;

        if $z2 == 0 goto label13;

        $r10 = (java.text.SimpleDateFormat) r35;

        virtualinvoke $r10.<java.text.SimpleDateFormat: java.lang.String toPattern()>();

     label13:
        if r32 != null goto label14;

        r32 = "[unknown]";

     label14:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String)>(r35, r32);

        return $r9;

     label15:
        return r0;
    }

    protected java.util.Date _parseDate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.String r3, $r9, $r19;
        java.text.DateFormat $r6, $r10, $r11;
        java.util.Date $r7, $r12, $r14, $r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r8;
        boolean $z0, $z1;
        int[] $r13;
        int $i0, $i1;
        java.lang.Throwable $r15;
        java.text.ParseException $r16;
        java.lang.Class $r17;
        java.lang.Object[] $r18;
        java.lang.Object $r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction r22;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.text.DateFormat _customFormat>;

        if $r6 == null goto label11;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r8);

        if $z0 == 0 goto label11;

        $r9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        r3 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label03;

        r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r3);

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;

        $i0 = virtualinvoke r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();

        $i1 = $r13[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label02;
            default: goto label02;
        };

     label01:
        $r14 = new java.util.Date;

        specialinvoke $r14.<java.util.Date: void <init>(long)>(0L);

        return $r14;

     label02:
        return null;

     label03:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.text.DateFormat _customFormat>;

        entermonitor $r10;

     label04:
        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.text.DateFormat _customFormat>;

        $r12 = virtualinvoke $r11.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(r3);

     label05:
        exitmonitor $r10;

     label06:
        return $r12;

     label07:
        $r16 := @caughtexception;

        $r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.lang.Class handledType()>();

        $r18 = newarray (java.lang.Object)[1];

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer: java.lang.String _formatString>;

        $r18[0] = $r19;

        $r20 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r17, r3, "expected format \"%s\"", $r18);

        $r21 = (java.util.Date) $r20;

        exitmonitor $r10;

     label08:
        return $r21;

     label09:
        $r15 := @caughtexception;

        exitmonitor $r10;

     label10:
        throw $r15;

     label11:
        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: java.util.Date _parseDate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r7;

        catch java.text.ParseException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }
}
