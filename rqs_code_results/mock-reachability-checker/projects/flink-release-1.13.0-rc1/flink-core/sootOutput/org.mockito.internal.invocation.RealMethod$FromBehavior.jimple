public class org.mockito.internal.invocation.RealMethod$FromBehavior extends java.lang.Object implements org.mockito.internal.invocation.RealMethod
{
    private final org.mockito.invocation.InvocationFactory$RealMethodBehavior behavior;

    void <init>(org.mockito.invocation.InvocationFactory$RealMethodBehavior)
    {
        org.mockito.internal.invocation.RealMethod$FromBehavior r0;
        org.mockito.invocation.InvocationFactory$RealMethodBehavior r1;

        r0 := @this: org.mockito.internal.invocation.RealMethod$FromBehavior;

        r1 := @parameter0: org.mockito.invocation.InvocationFactory$RealMethodBehavior;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mockito.internal.invocation.RealMethod$FromBehavior: org.mockito.invocation.InvocationFactory$RealMethodBehavior behavior> = r1;

        return;
    }

    public boolean isInvokable()
    {
        org.mockito.internal.invocation.RealMethod$FromBehavior r0;

        r0 := @this: org.mockito.internal.invocation.RealMethod$FromBehavior;

        return 1;
    }

    public java.lang.Object invoke() throws java.lang.Throwable
    {
        org.mockito.internal.invocation.RealMethod$FromBehavior r0;
        org.mockito.invocation.InvocationFactory$RealMethodBehavior $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter $r5;

        r0 := @this: org.mockito.internal.invocation.RealMethod$FromBehavior;

     label1:
        $r2 = r0.<org.mockito.internal.invocation.RealMethod$FromBehavior: org.mockito.invocation.InvocationFactory$RealMethodBehavior behavior>;

        $r3 = interfaceinvoke $r2.<org.mockito.invocation.InvocationFactory$RealMethodBehavior: java.lang.Object call()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;

        specialinvoke $r5.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: void <init>()>();

        virtualinvoke $r5.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: void filter(java.lang.Throwable)>($r4);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
