public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer
{
    private static final long serialVersionUID;
    static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer primitiveInstance;
    static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer wrapperInstance;

    public void <init>(java.lang.Class, java.lang.Float)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer r0;
        java.lang.Class r1;
        java.lang.Float r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Float;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Float>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer: void <init>(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Object,java.lang.Object)>(r1, $r3, r2, $r4);

        return;
    }

    public java.lang.Float deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3;
        boolean $z0, $z1;
        java.lang.Float $r4, $r5, $r6;
        float $f0, $f1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r3);

        if $z0 == 0 goto label1;

        $f1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: float getFloatValue()>();

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        return $r6;

     label1:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: boolean _primitive>;

        if $z1 == 0 goto label2;

        $f0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: float _parseFloatPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r5;

     label2:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Float _parseFloat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r4;
    }

    protected final java.lang.Float _parseFloat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int $i0;
        java.lang.Object $r4, $r10, $r12, $r14, $r16, $r20, $r25;
        java.lang.Float $r5, $r6, $r9, $r11, $r13, $r15, $r17, $r21, $r26, r28;
        float $f0, $f1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r7, $r8, r29;
        boolean $z0;
        java.lang.Class $r18, $r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r19;
        java.lang.IllegalArgumentException $r22;
        java.lang.Object[] $r23;
        java.lang.String r27, r30;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label06;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label06;
            case 6: goto label01;
            case 7: goto label03;
            case 8: goto label03;
            case 9: goto label06;
            case 10: goto label06;
            case 11: goto label02;
            default: goto label06;
        };

     label01:
        r27 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label07;

     label02:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r5 = (java.lang.Float) $r4;

        return $r5;

     label03:
        $f0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: float getFloatValue()>();

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r6;

     label04:
        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Class _valueClass>;

        r27 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r18);

        goto label07;

     label05:
        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object _deserializeFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r17 = (java.lang.Float) $r16;

        return $r17;

     label06:
        $r19 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r20 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r19, r1);

        $r21 = (java.lang.Float) $r20;

        return $r21;

     label07:
        r28 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Float _checkFloatSpecialValue(java.lang.String)>(r27);

        if r28 == null goto label08;

        return r28;

     label08:
        r29 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r27);

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r29 != $r7 goto label09;

        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r15 = (java.lang.Float) $r14;

        return $r15;

     label09:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r29 != $r8 goto label10;

        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r13 = (java.lang.Float) $r12;

        return $r13;

     label10:
        r30 = virtualinvoke r27.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: boolean _checkTextualNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r30);

        if $z0 == 0 goto label11;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r11 = (java.lang.Float) $r10;

        return $r11;

     label11:
        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r30);

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

     label12:
        return $r9;

     label13:
        $r22 := @caughtexception;

        $r24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Class _valueClass>;

        $r23 = newarray (java.lang.Object)[0];

        $r25 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r24, r30, "not a valid `Float` value", $r23);

        $r26 = (java.lang.Float) $r25;

        return $r26;

        catch java.lang.IllegalArgumentException from label11 to label12 with label13;
    }

    public volatile java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;

        $r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern()>();

        return $r1;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Float $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Float deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer $r0, $r3;
        java.lang.Class $r1;
        java.lang.Float $r2;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: long serialVersionUID> = 1L;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;

        $r1 = <java.lang.Float: java.lang.Class TYPE>;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: void <init>(java.lang.Class,java.lang.Float)>($r1, $r2);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer primitiveInstance> = $r0;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: void <init>(java.lang.Class,java.lang.Float)>(class "Ljava/lang/Float;", null);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer wrapperInstance> = $r3;

        return;
    }
}
