public class org.mockito.internal.verification.checkers.NumberOfInvocationsChecker extends java.lang.Object
{

    private void <init>()
    {
        org.mockito.internal.verification.checkers.NumberOfInvocationsChecker r0;

        r0 := @this: org.mockito.internal.verification.checkers.NumberOfInvocationsChecker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void checkNumberOfInvocations(java.util.List, org.mockito.invocation.MatchableInvocation, int)
    {
        java.util.List r0, r2, r3, $r4, $r6;
        org.mockito.invocation.MatchableInvocation r1;
        int i0, i1;
        org.mockito.exceptions.base.MockitoAssertionError $r5, $r7, $r9;
        org.mockito.internal.reporting.Discrepancy $r8;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: org.mockito.invocation.MatchableInvocation;

        i0 := @parameter2: int;

        r2 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: java.util.List findInvocations(java.util.List,org.mockito.invocation.MatchableInvocation)>(r0, r1);

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 <= i1 goto label1;

        r3 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: java.util.List getAllLocations(java.util.List)>(r2);

        $r8 = new org.mockito.internal.reporting.Discrepancy;

        specialinvoke $r8.<org.mockito.internal.reporting.Discrepancy: void <init>(int,int)>(i0, i1);

        $r9 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoAssertionError tooLittleActualInvocations(org.mockito.internal.reporting.Discrepancy,org.mockito.invocation.DescribedInvocation,java.util.List)>($r8, r1, r3);

        throw $r9;

     label1:
        if i0 != 0 goto label2;

        if i1 <= 0 goto label2;

        $r6 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: java.util.List getAllLocations(java.util.List)>(r2);

        $r7 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoAssertionError neverWantedButInvoked(org.mockito.invocation.DescribedInvocation,java.util.List)>(r1, $r6);

        throw $r7;

     label2:
        if i0 >= i1 goto label3;

        $r4 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: java.util.List getAllLocations(java.util.List)>(r2);

        $r5 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoAssertionError tooManyActualInvocations(int,int,org.mockito.invocation.DescribedInvocation,java.util.List)>(i0, i1, r1, $r4);

        throw $r5;

     label3:
        staticinvoke <org.mockito.internal.invocation.InvocationMarker: void markVerified(java.util.List,org.mockito.invocation.MatchableInvocation)>(r2, r1);

        return;
    }

    public static void checkNumberOfInvocations(java.util.List, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)
    {
        java.util.List r0, r3, r4, $r5;
        org.mockito.invocation.MatchableInvocation r1;
        int i0, i1;
        org.mockito.internal.verification.api.InOrderContext r2;
        org.mockito.exceptions.base.MockitoAssertionError $r6, $r8;
        org.mockito.internal.reporting.Discrepancy $r7;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: org.mockito.invocation.MatchableInvocation;

        i0 := @parameter2: int;

        r2 := @parameter3: org.mockito.internal.verification.api.InOrderContext;

        r3 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: java.util.List findMatchingChunk(java.util.List,org.mockito.invocation.MatchableInvocation,int,org.mockito.internal.verification.api.InOrderContext)>(r0, r1, i0, r2);

        i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if i0 <= i1 goto label1;

        r4 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: java.util.List getAllLocations(java.util.List)>(r3);

        $r7 = new org.mockito.internal.reporting.Discrepancy;

        specialinvoke $r7.<org.mockito.internal.reporting.Discrepancy: void <init>(int,int)>(i0, i1);

        $r8 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoAssertionError tooLittleActualInvocationsInOrder(org.mockito.internal.reporting.Discrepancy,org.mockito.invocation.DescribedInvocation,java.util.List)>($r7, r1, r4);

        throw $r8;

     label1:
        if i0 >= i1 goto label2;

        $r5 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: java.util.List getAllLocations(java.util.List)>(r3);

        $r6 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoAssertionError tooManyActualInvocationsInOrder(int,int,org.mockito.invocation.DescribedInvocation,java.util.List)>(i0, i1, r1, $r5);

        throw $r6;

     label2:
        staticinvoke <org.mockito.internal.invocation.InvocationMarker: void markVerifiedInOrder(java.util.List,org.mockito.invocation.MatchableInvocation,org.mockito.internal.verification.api.InOrderContext)>(r3, r1, r2);

        return;
    }

    public static void checkNumberOfInvocationsNonGreedy(java.util.List, org.mockito.invocation.MatchableInvocation, int, org.mockito.internal.verification.api.InOrderContext)
    {
        java.util.List r0, $r6;
        org.mockito.invocation.MatchableInvocation r1;
        int i0, i1;
        org.mockito.internal.verification.api.InOrderContext r2;
        org.mockito.invocation.Invocation r3;
        org.mockito.internal.reporting.Discrepancy $r4;
        org.mockito.invocation.Location[] $r5;
        org.mockito.exceptions.base.MockitoAssertionError $r7;
        org.mockito.invocation.Location r8;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: org.mockito.invocation.MatchableInvocation;

        i0 := @parameter2: int;

        r2 := @parameter3: org.mockito.internal.verification.api.InOrderContext;

        i1 = 0;

        r8 = null;

     label1:
        if i1 >= i0 goto label3;

        r3 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: org.mockito.invocation.Invocation findFirstMatchingUnverifiedInvocation(java.util.List,org.mockito.invocation.MatchableInvocation,org.mockito.internal.verification.api.InOrderContext)>(r0, r1, r2);

        if r3 != null goto label2;

        $r4 = new org.mockito.internal.reporting.Discrepancy;

        specialinvoke $r4.<org.mockito.internal.reporting.Discrepancy: void <init>(int,int)>(i0, i1);

        $r5 = newarray (org.mockito.invocation.Location)[1];

        $r5[0] = r8;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        $r7 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoAssertionError tooLittleActualInvocationsInOrder(org.mockito.internal.reporting.Discrepancy,org.mockito.invocation.DescribedInvocation,java.util.List)>($r4, r1, $r6);

        throw $r7;

     label2:
        staticinvoke <org.mockito.internal.invocation.InvocationMarker: void markVerified(org.mockito.invocation.Invocation,org.mockito.invocation.MatchableInvocation)>(r3, r1);

        interfaceinvoke r2.<org.mockito.internal.verification.api.InOrderContext: void markVerified(org.mockito.invocation.Invocation)>(r3);

        r8 = interfaceinvoke r3.<org.mockito.invocation.Invocation: org.mockito.invocation.Location getLocation()>();

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }
}
