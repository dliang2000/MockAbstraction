public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
{
    private static final long serialVersionUID;
    private final java.util.Map fieldBitIndex;
    private final java.util.Map subtypeFingerprints;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig, java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r4;
        java.util.Collection r5;
        java.util.HashMap $r6;
        java.util.Map $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        r5 := @parameter4: java.util.Collection;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, null, 0, r3);

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex> = $r6;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map buildFingerprints(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,java.util.Collection)>(r4, r5);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map subtypeFingerprints> = $r7;

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        java.util.Map $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1, r2);

        $r3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex> = $r3;

        $r4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map subtypeFingerprints>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map subtypeFingerprints> = $r4;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;

        return null;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer r0, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1, $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        if r1 != $r2 goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r0, r1);

     label2:
        return $r3;
    }

    protected java.util.Map buildFingerprints(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig, java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r1;
        java.util.Collection r2;
        boolean z0, $z1, $z2;
        java.util.Iterator r4, r31;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r6;
        java.util.List r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r10;
        java.util.HashMap $r11;
        java.lang.Object $r12, $r19, $r25, $r27;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r13;
        java.lang.Class $r14, $r17, $r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription $r15;
        java.util.BitSet $r16;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r18, $r23, $r24, r32, r34;
        java.lang.IllegalStateException $r20;
        java.lang.Object[] $r21;
        java.util.Map $r26, $r28;
        java.lang.Integer $r29, r33;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        r2 := @parameter1: java.util.Collection;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_PROPERTIES>;

        z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r10);

        i4 = 0;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r12;

        $r13 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r14 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        r6 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>($r14);

        $r15 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspect(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r6);

        r7 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: java.util.List findProperties()>();

        $r16 = new java.util.BitSet;

        $i0 = interfaceinvoke r7.<java.util.List: int size()>();

        $i1 = i4 + $i0;

        specialinvoke $r16.<java.util.BitSet: void <init>(int)>($i1);

        r31 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r25 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) $r25;

        r32 = virtualinvoke r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: java.lang.String getName()>();

        if z0 == 0 goto label3;

        r32 = virtualinvoke r32.<java.lang.String: java.lang.String toLowerCase()>();

     label3:
        $r26 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex>;

        $r27 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>(r32);

        r33 = (java.lang.Integer) $r27;

        if r33 != null goto label4;

        r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r28 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex>;

        $i3 = i4;

        i4 = i4 + 1;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, $r29);

     label4:
        $i2 = virtualinvoke r33.<java.lang.Integer: int intValue()>();

        virtualinvoke $r16.<java.util.BitSet: void set(int)>($i2);

        goto label2;

     label5:
        $r17 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r18);

        r34 = (java.lang.String) $r19;

        if r34 == null goto label6;

        $r20 = new java.lang.IllegalStateException;

        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = r34;

        $r22 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.String getName()>();

        $r21[1] = $r23;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Subtypes %s and %s have the same signature and cannot be uniquely deduced.", $r21);

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label6:
        goto label1;

     label7:
        return $r11;
    }

    public java.lang.Object deserializeTypedFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        boolean z0;
        java.lang.Integer r5, $r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6, $r13, r28, r29;
        java.lang.Object $r7, $r22, $r24, $r25, $r27;
        java.util.LinkedList $r8;
        java.util.Map $r9, $r21, $r23;
        java.util.Set $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidTypeIdException $r14;
        java.lang.Object[] $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r16, $r20;
        java.lang.String $r17, $r19, $r26, r30;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r28 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r28 != $r6 goto label1;

        r29 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label2;

     label1:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.lang.Object _deserializeTypedUsingDefaultImpl(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer)>(r1, r2, null);

        return $r7;

     label2:
        $r8 = new java.util.LinkedList;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map subtypeFingerprints>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r8.<java.util.LinkedList: void <init>(java.util.Collection)>($r10);

        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_PROPERTIES>;

        z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r12);

     label3:
        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if r29 != $r13 goto label6;

        r30 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();

        if z0 == 0 goto label4;

        r30 = virtualinvoke r30.<java.lang.String: java.lang.String toLowerCase()>();

     label4:
        virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r30);

        r5 = (java.lang.Integer) $r22;

        if r5 == null goto label5;

        $i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: void prune(java.util.List,int)>($r8, $i1);

        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i2 != 1 goto label5;

        $r23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map subtypeFingerprints>;

        $r24 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r25 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24);

        $r26 = (java.lang.String) $r25;

        $r27 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.lang.Object _deserializeTypedForId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer,java.lang.String)>(r1, r2, $r11, $r26);

        return $r27;

     label5:
        r29 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label3;

     label6:
        $r14 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidTypeIdException;

        $r15 = newarray (java.lang.Object)[2];

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _baseType>;

        $r17 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r16);

        $r15[0] = $r17;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r15[1] = $r18;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot deduce unique subtype of %s (%d candidates match)", $r15);

        $r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _baseType>;

        specialinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidTypeIdException: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r1, $r19, $r20, "DEDUCED");

        throw $r14;
    }

    private static void prune(java.util.List, int)
    {
        java.util.List r0;
        int i0;
        java.util.Iterator r1;
        java.lang.Object $r2;
        java.util.BitSet $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.BitSet) $r2;

        $z0 = virtualinvoke $r3.<java.util.BitSet: boolean get(int)>(i0);

        if $z0 != 0 goto label1;

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: long serialVersionUID> = 1L;

        return;
    }
}
