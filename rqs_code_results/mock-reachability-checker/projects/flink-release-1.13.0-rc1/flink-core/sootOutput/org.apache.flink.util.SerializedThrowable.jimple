public class org.apache.flink.util.SerializedThrowable extends java.lang.Exception implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final byte[] serializedException;
    private final java.lang.String originalErrorClassName;
    private final java.lang.String fullStringifiedStackTrace;
    private transient java.lang.ref.WeakReference cachedException;

    public void <init>(java.lang.Throwable)
    {
        org.apache.flink.util.SerializedThrowable r0;
        java.lang.Throwable r1;
        java.util.HashSet $r2;

        r0 := @this: org.apache.flink.util.SerializedThrowable;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        specialinvoke r0.<org.apache.flink.util.SerializedThrowable: void <init>(java.lang.Throwable,java.util.Set)>(r1, $r2);

        return;
    }

    private void <init>(java.lang.Throwable, java.util.Set)
    {
        org.apache.flink.util.SerializedThrowable r0, $r18, r24;
        java.lang.Throwable r1, $r10, $r17, $r19, $r22;
        java.util.Set r2;
        java.lang.String $r4, $r6, $r7, $r14, $r15;
        boolean $z0, $z1;
        byte[] $r5, r23;
        java.lang.ref.WeakReference $r8, $r12;
        java.lang.StackTraceElement[] $r9, $r16;
        java.lang.Class $r13;

        r0 := @this: org.apache.flink.util.SerializedThrowable;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: java.util.Set;

        $r4 = staticinvoke <org.apache.flink.util.SerializedThrowable: java.lang.String getMessageOrError(java.lang.Throwable)>(r1);

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r4);

        $z0 = r1 instanceof org.apache.flink.util.SerializedThrowable;

        if $z0 != 0 goto label7;

     label1:
        r23 = staticinvoke <org.apache.flink.util.InstantiationUtil: byte[] serializeObject(java.lang.Object)>(r1);

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

        r23 = null;

     label4:
        r0.<org.apache.flink.util.SerializedThrowable: byte[] serializedException> = r23;

        $r12 = new java.lang.ref.WeakReference;

        specialinvoke $r12.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<org.apache.flink.util.SerializedThrowable: java.lang.ref.WeakReference cachedException> = $r12;

        $r13 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        r0.<org.apache.flink.util.SerializedThrowable: java.lang.String originalErrorClassName> = $r14;

        $r15 = staticinvoke <org.apache.flink.util.ExceptionUtils: java.lang.String stringifyException(java.lang.Throwable)>(r1);

        r0.<org.apache.flink.util.SerializedThrowable: java.lang.String fullStringifiedStackTrace> = $r15;

        $r16 = virtualinvoke r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke r0.<org.apache.flink.util.SerializedThrowable: void setStackTrace(java.lang.StackTraceElement[])>($r16);

        $r17 = virtualinvoke r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r17 != null goto label5;

        virtualinvoke r0.<org.apache.flink.util.SerializedThrowable: java.lang.Throwable initCause(java.lang.Throwable)>(null);

        goto label6;

     label5:
        $z1 = interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        if $z1 == 0 goto label6;

        $r18 = new org.apache.flink.util.SerializedThrowable;

        $r19 = virtualinvoke r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        specialinvoke $r18.<org.apache.flink.util.SerializedThrowable: void <init>(java.lang.Throwable,java.util.Set)>($r19, r2);

        virtualinvoke r0.<org.apache.flink.util.SerializedThrowable: java.lang.Throwable initCause(java.lang.Throwable)>($r18);

     label6:
        goto label8;

     label7:
        r24 = (org.apache.flink.util.SerializedThrowable) r1;

        $r5 = r24.<org.apache.flink.util.SerializedThrowable: byte[] serializedException>;

        r0.<org.apache.flink.util.SerializedThrowable: byte[] serializedException> = $r5;

        $r6 = r24.<org.apache.flink.util.SerializedThrowable: java.lang.String originalErrorClassName>;

        r0.<org.apache.flink.util.SerializedThrowable: java.lang.String originalErrorClassName> = $r6;

        $r7 = r24.<org.apache.flink.util.SerializedThrowable: java.lang.String fullStringifiedStackTrace>;

        r0.<org.apache.flink.util.SerializedThrowable: java.lang.String fullStringifiedStackTrace> = $r7;

        $r8 = r24.<org.apache.flink.util.SerializedThrowable: java.lang.ref.WeakReference cachedException>;

        r0.<org.apache.flink.util.SerializedThrowable: java.lang.ref.WeakReference cachedException> = $r8;

        $r9 = virtualinvoke r24.<org.apache.flink.util.SerializedThrowable: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke r0.<org.apache.flink.util.SerializedThrowable: void setStackTrace(java.lang.StackTraceElement[])>($r9);

        $r10 = virtualinvoke r24.<org.apache.flink.util.SerializedThrowable: java.lang.Throwable getCause()>();

        virtualinvoke r0.<org.apache.flink.util.SerializedThrowable: java.lang.Throwable initCause(java.lang.Throwable)>($r10);

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Throwable deserializeError(java.lang.ClassLoader)
    {
        org.apache.flink.util.SerializedThrowable r0;
        java.lang.ClassLoader r1;
        byte[] $r3, $r7;
        java.lang.ref.WeakReference $r4, $r5, $r9;
        java.lang.Object $r6, $r8;
        java.lang.Throwable $r10, $r11, r12;

        r0 := @this: org.apache.flink.util.SerializedThrowable;

        r1 := @parameter0: java.lang.ClassLoader;

        $r3 = r0.<org.apache.flink.util.SerializedThrowable: byte[] serializedException>;

        if $r3 != null goto label1;

        return r0;

     label1:
        $r4 = r0.<org.apache.flink.util.SerializedThrowable: java.lang.ref.WeakReference cachedException>;

        if $r4 != null goto label2;

        $r11 = null;

        goto label3;

     label2:
        $r5 = r0.<org.apache.flink.util.SerializedThrowable: java.lang.ref.WeakReference cachedException>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r11 = (java.lang.Throwable) $r6;

     label3:
        r12 = $r11;

        if $r11 != null goto label7;

     label4:
        $r7 = r0.<org.apache.flink.util.SerializedThrowable: byte[] serializedException>;

        $r8 = staticinvoke <org.apache.flink.util.InstantiationUtil: java.lang.Object deserializeObject(byte[],java.lang.ClassLoader)>($r7, r1);

        r12 = (java.lang.Throwable) $r8;

        $r9 = new java.lang.ref.WeakReference;

        specialinvoke $r9.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r12);

        r0.<org.apache.flink.util.SerializedThrowable: java.lang.ref.WeakReference cachedException> = $r9;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        return r0;

     label7:
        return r12;

        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public java.lang.String getOriginalErrorClassName()
    {
        org.apache.flink.util.SerializedThrowable r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.util.SerializedThrowable;

        $r1 = r0.<org.apache.flink.util.SerializedThrowable: java.lang.String originalErrorClassName>;

        return $r1;
    }

    public byte[] getSerializedException()
    {
        org.apache.flink.util.SerializedThrowable r0;
        byte[] $r1;

        r0 := @this: org.apache.flink.util.SerializedThrowable;

        $r1 = r0.<org.apache.flink.util.SerializedThrowable: byte[] serializedException>;

        return $r1;
    }

    public java.lang.String getFullStringifiedStackTrace()
    {
        org.apache.flink.util.SerializedThrowable r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.util.SerializedThrowable;

        $r1 = r0.<org.apache.flink.util.SerializedThrowable: java.lang.String fullStringifiedStackTrace>;

        return $r1;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        org.apache.flink.util.SerializedThrowable r0;
        java.io.PrintStream r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.util.SerializedThrowable;

        r1 := @parameter0: java.io.PrintStream;

        $r2 = r0.<org.apache.flink.util.SerializedThrowable: java.lang.String fullStringifiedStackTrace>;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>($r2);

        virtualinvoke r1.<java.io.PrintStream: void flush()>();

        return;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        org.apache.flink.util.SerializedThrowable r0;
        java.io.PrintWriter r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.util.SerializedThrowable;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<org.apache.flink.util.SerializedThrowable: java.lang.String fullStringifiedStackTrace>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

        return;
    }

    public java.lang.String toString()
    {
        org.apache.flink.util.SerializedThrowable r0;
        java.lang.String r1, $r3, $r7;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;

        r0 := @this: org.apache.flink.util.SerializedThrowable;

        r1 = virtualinvoke r0.<org.apache.flink.util.SerializedThrowable: java.lang.String getLocalizedMessage()>();

        if r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.apache.flink.util.SerializedThrowable: java.lang.String originalErrorClassName>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r7 = r0.<org.apache.flink.util.SerializedThrowable: java.lang.String originalErrorClassName>;

     label2:
        return $r7;
    }

    public static java.lang.Throwable get(java.lang.Throwable, java.lang.ClassLoader)
    {
        java.lang.Throwable r0, $r3;
        java.lang.ClassLoader r1;
        boolean $z0;
        org.apache.flink.util.SerializedThrowable $r2;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.ClassLoader;

        $z0 = r0 instanceof org.apache.flink.util.SerializedThrowable;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.flink.util.SerializedThrowable) r0;

        $r3 = virtualinvoke $r2.<org.apache.flink.util.SerializedThrowable: java.lang.Throwable deserializeError(java.lang.ClassLoader)>(r1);

        return $r3;

     label1:
        return r0;
    }

    private static java.lang.String getMessageOrError(java.lang.Throwable)
    {
        java.lang.Throwable r0, $r3;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Throwable;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Throwable: java.lang.String getMessage()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return "(failed to get message)";

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.flink.util.SerializedThrowable: long serialVersionUID> = 7284183123441947635L;

        return;
    }
}
