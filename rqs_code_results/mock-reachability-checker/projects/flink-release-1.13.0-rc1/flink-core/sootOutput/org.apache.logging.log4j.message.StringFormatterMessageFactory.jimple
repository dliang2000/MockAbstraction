public final class org.apache.logging.log4j.message.StringFormatterMessageFactory extends org.apache.logging.log4j.message.AbstractMessageFactory
{
    public static final org.apache.logging.log4j.message.StringFormatterMessageFactory INSTANCE;
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        specialinvoke r0.<org.apache.logging.log4j.message.AbstractMessageFactory: void <init>()>();

        return;
    }

    public transient org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        org.apache.logging.log4j.message.StringFormattedMessage $r3;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = new org.apache.logging.log4j.message.StringFormattedMessage;

        specialinvoke $r3.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, r2);

        return $r3;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.apache.logging.log4j.message.StringFormattedMessage $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = new org.apache.logging.log4j.message.StringFormattedMessage;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r2;

        specialinvoke $r3.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r4);

        return $r3;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.message.StringFormattedMessage $r4;
        java.lang.Object[] $r5;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = new org.apache.logging.log4j.message.StringFormattedMessage;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r2;

        $r5[1] = r3;

        specialinvoke $r4.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r5);

        return $r4;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4;
        org.apache.logging.log4j.message.StringFormattedMessage $r5;
        java.lang.Object[] $r6;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = new org.apache.logging.log4j.message.StringFormattedMessage;

        $r6 = newarray (java.lang.Object)[3];

        $r6[0] = r2;

        $r6[1] = r3;

        $r6[2] = r4;

        specialinvoke $r5.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r6);

        return $r5;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5;
        org.apache.logging.log4j.message.StringFormattedMessage $r6;
        java.lang.Object[] $r7;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r6 = new org.apache.logging.log4j.message.StringFormattedMessage;

        $r7 = newarray (java.lang.Object)[4];

        $r7[0] = r2;

        $r7[1] = r3;

        $r7[2] = r4;

        $r7[3] = r5;

        specialinvoke $r6.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r7);

        return $r6;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6;
        org.apache.logging.log4j.message.StringFormattedMessage $r7;
        java.lang.Object[] $r8;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r7 = new org.apache.logging.log4j.message.StringFormattedMessage;

        $r8 = newarray (java.lang.Object)[5];

        $r8[0] = r2;

        $r8[1] = r3;

        $r8[2] = r4;

        $r8[3] = r5;

        $r8[4] = r6;

        specialinvoke $r7.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r8);

        return $r7;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6, r7;
        org.apache.logging.log4j.message.StringFormattedMessage $r8;
        java.lang.Object[] $r9;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r8 = new org.apache.logging.log4j.message.StringFormattedMessage;

        $r9 = newarray (java.lang.Object)[6];

        $r9[0] = r2;

        $r9[1] = r3;

        $r9[2] = r4;

        $r9[3] = r5;

        $r9[4] = r6;

        $r9[5] = r7;

        specialinvoke $r8.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r9);

        return $r8;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.message.StringFormattedMessage $r9;
        java.lang.Object[] $r10;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r9 = new org.apache.logging.log4j.message.StringFormattedMessage;

        $r10 = newarray (java.lang.Object)[7];

        $r10[0] = r2;

        $r10[1] = r3;

        $r10[2] = r4;

        $r10[3] = r5;

        $r10[4] = r6;

        $r10[5] = r7;

        $r10[6] = r8;

        specialinvoke $r9.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r10);

        return $r9;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.message.StringFormattedMessage $r10;
        java.lang.Object[] $r11;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r10 = new org.apache.logging.log4j.message.StringFormattedMessage;

        $r11 = newarray (java.lang.Object)[8];

        $r11[0] = r2;

        $r11[1] = r3;

        $r11[2] = r4;

        $r11[3] = r5;

        $r11[4] = r6;

        $r11[5] = r7;

        $r11[6] = r8;

        $r11[7] = r9;

        specialinvoke $r10.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r11);

        return $r10;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.message.StringFormattedMessage $r11;
        java.lang.Object[] $r12;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r11 = new org.apache.logging.log4j.message.StringFormattedMessage;

        $r12 = newarray (java.lang.Object)[9];

        $r12[0] = r2;

        $r12[1] = r3;

        $r12[2] = r4;

        $r12[3] = r5;

        $r12[4] = r6;

        $r12[5] = r7;

        $r12[6] = r8;

        $r12[7] = r9;

        $r12[8] = r10;

        specialinvoke $r11.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r12);

        return $r11;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.message.StringFormattedMessage $r12;
        java.lang.Object[] $r13;

        r0 := @this: org.apache.logging.log4j.message.StringFormatterMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r12 = new org.apache.logging.log4j.message.StringFormattedMessage;

        $r13 = newarray (java.lang.Object)[10];

        $r13[0] = r2;

        $r13[1] = r3;

        $r13[2] = r4;

        $r13[3] = r5;

        $r13[4] = r6;

        $r13[5] = r7;

        $r13[6] = r8;

        $r13[7] = r9;

        $r13[8] = r10;

        $r13[9] = r11;

        specialinvoke $r12.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r13);

        return $r12;
    }

    static void <clinit>()
    {
        org.apache.logging.log4j.message.StringFormatterMessageFactory $r0;

        <org.apache.logging.log4j.message.StringFormatterMessageFactory: long serialVersionUID> = -1626332412176965642L;

        $r0 = new org.apache.logging.log4j.message.StringFormatterMessageFactory;

        specialinvoke $r0.<org.apache.logging.log4j.message.StringFormatterMessageFactory: void <init>()>();

        <org.apache.logging.log4j.message.StringFormatterMessageFactory: org.apache.logging.log4j.message.StringFormatterMessageFactory INSTANCE> = $r0;

        return;
    }
}
