public class org.apache.flink.api.common.resources.Driver extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.common.resources.Driver r0;

        r0 := @this: org.apache.flink.api.common.resources.Driver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void runall()
    {
        org.apache.flink.api.common.resources.Driver r0;
        org.apache.flink.api.common.resources.CPUResourceTest $r3;
        org.apache.flink.api.common.resources.ResourceTest $r4;

        r0 := @this: org.apache.flink.api.common.resources.Driver;

        $r3 = new org.apache.flink.api.common.resources.CPUResourceTest;

        specialinvoke $r3.<org.apache.flink.api.common.resources.CPUResourceTest: void <init>()>();

        virtualinvoke $r3.<org.apache.flink.api.common.resources.CPUResourceTest: void toHumanReadableString()>();

        $r4 = new org.apache.flink.api.common.resources.ResourceTest;

        specialinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void <init>()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testConstructorValid()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testConstructorInvalidValue()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testEquals()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testEqualsIgnoringScale()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testHashCodeIgnoringScale()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testMerge()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testMergeErrorOnDifferentTypes()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testSubtract()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testSubtractLargerValue()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testSubtractErrorOnDifferentTypes()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testDivide()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testDivideNegative()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testDivideInteger()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testDivideNegativeInteger()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testMultiply()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testMutiplyNegative()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testMultiplyInteger()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testMutiplyNegativeInteger()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testIsZero()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testCompareTo()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testCompareToFailNull()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testCompareToFailDifferentType()>();

        virtualinvoke $r4.<org.apache.flink.api.common.resources.ResourceTest: void testCompareToFailDifferentName()>();

        return;
    }
}
