public class javassist.bytecode.SignatureAttribute$BaseType extends javassist.bytecode.SignatureAttribute$Type
{
    char descriptor;

    void <init>(char)
    {
        javassist.bytecode.SignatureAttribute$BaseType r0;
        char c0;

        r0 := @this: javassist.bytecode.SignatureAttribute$BaseType;

        c0 := @parameter0: char;

        specialinvoke r0.<javassist.bytecode.SignatureAttribute$Type: void <init>()>();

        r0.<javassist.bytecode.SignatureAttribute$BaseType: char descriptor> = c0;

        return;
    }

    public void <init>(java.lang.String)
    {
        javassist.bytecode.SignatureAttribute$BaseType r0;
        java.lang.String r1, $r2;
        char $c0;

        r0 := @this: javassist.bytecode.SignatureAttribute$BaseType;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String of(java.lang.String)>(r1);

        $c0 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        specialinvoke r0.<javassist.bytecode.SignatureAttribute$BaseType: void <init>(char)>($c0);

        return;
    }

    public char getDescriptor()
    {
        javassist.bytecode.SignatureAttribute$BaseType r0;
        char $c0;

        r0 := @this: javassist.bytecode.SignatureAttribute$BaseType;

        $c0 = r0.<javassist.bytecode.SignatureAttribute$BaseType: char descriptor>;

        return $c0;
    }

    public javassist.CtClass getCtlass()
    {
        javassist.bytecode.SignatureAttribute$BaseType r0;
        char $c0;
        javassist.CtClass $r1;

        r0 := @this: javassist.bytecode.SignatureAttribute$BaseType;

        $c0 = r0.<javassist.bytecode.SignatureAttribute$BaseType: char descriptor>;

        $r1 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass toPrimitiveClass(char)>($c0);

        return $r1;
    }

    public java.lang.String toString()
    {
        javassist.bytecode.SignatureAttribute$BaseType r0;
        char $c0;
        java.lang.String $r1, $r2;

        r0 := @this: javassist.bytecode.SignatureAttribute$BaseType;

        $c0 = r0.<javassist.bytecode.SignatureAttribute$BaseType: char descriptor>;

        $r1 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c0);

        $r2 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String toClassName(java.lang.String)>($r1);

        return $r2;
    }

    void encode(java.lang.StringBuffer)
    {
        javassist.bytecode.SignatureAttribute$BaseType r0;
        java.lang.StringBuffer r1;
        char $c0;

        r0 := @this: javassist.bytecode.SignatureAttribute$BaseType;

        r1 := @parameter0: java.lang.StringBuffer;

        $c0 = r0.<javassist.bytecode.SignatureAttribute$BaseType: char descriptor>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        return;
    }
}
