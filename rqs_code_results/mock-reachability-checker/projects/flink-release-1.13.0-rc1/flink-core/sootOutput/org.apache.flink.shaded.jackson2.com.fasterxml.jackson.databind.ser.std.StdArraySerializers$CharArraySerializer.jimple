public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer
{

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class)>(class "[C");

        return;
    }

    public boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, char[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        char[] r2;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: char[];

        $i0 = lengthof r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void serialize(char[], org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer r0;
        char[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r4;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;

        r1 := @parameter0: char[];

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS>;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r4);

        if $z0 == 0 goto label1;

        $i1 = lengthof r1;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeStartArray(java.lang.Object,int)>(r1, $i1);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer: void _writeArrayContents(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,char[])>(r2, r1);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();

        goto label2;

     label1:
        $i0 = lengthof r1;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(char[],int,int)>(r1, 0, $i0);

     label2:
        return;
    }

    public void serializeWithType(char[], org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer r0;
        char[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId $r7, $r10, r11;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;

        r1 := @parameter0: char[];

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS>;

        z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r5);

        if z0 == 0 goto label1;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        $r10 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r1, $r9);

        r11 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, $r10);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer: void _writeArrayContents(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,char[])>(r2, r1);

        goto label2;

     label1:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        $r7 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r1, $r6);

        r11 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, $r7);

        $i0 = lengthof r1;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(char[],int,int)>(r1, 0, $i0);

     label2:
        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, r11);

        return;
    }

    private final void _writeArrayContents(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, char[]) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        char[] r2;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: char[];

        i1 = 0;

        i0 = lengthof r2;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(char[],int,int)>(r2, i1, 1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode getSchema(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.reflect.Type r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r3, r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("array", 1);

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String)>("string");

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.String)>("type", "string");

        $r6 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode set(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>("items", r4);

        return $r6;
    }

    public void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes STRING>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer: void visitArrayFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)>(r1, r2, $r3);

        return;
    }

    public volatile void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        char[] $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (char[]) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer: void serialize(char[],org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>($r4, r2, r3);

        return;
    }

    public volatile boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.Object r2;
        char[] $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.Object;

        $r3 = (char[]) r2;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,char[])>(r1, $r3);

        return $z0;
    }

    public volatile void serializeWithType(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        char[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r5 = (char[]) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer: void serializeWithType(char[],org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r5, r2, r3, r4);

        return;
    }
}
