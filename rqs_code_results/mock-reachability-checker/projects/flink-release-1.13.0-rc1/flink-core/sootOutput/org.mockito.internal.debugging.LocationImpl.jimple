public class org.mockito.internal.debugging.LocationImpl extends java.lang.Object implements org.mockito.invocation.Location, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final org.mockito.internal.exceptions.stacktrace.StackTraceFilter defaultStackTraceFilter;
    private final java.lang.Throwable stackTraceHolder;
    private final org.mockito.internal.exceptions.stacktrace.StackTraceFilter stackTraceFilter;

    public void <init>()
    {
        org.mockito.internal.debugging.LocationImpl r0;
        org.mockito.internal.exceptions.stacktrace.StackTraceFilter $r1;

        r0 := @this: org.mockito.internal.debugging.LocationImpl;

        $r1 = <org.mockito.internal.debugging.LocationImpl: org.mockito.internal.exceptions.stacktrace.StackTraceFilter defaultStackTraceFilter>;

        specialinvoke r0.<org.mockito.internal.debugging.LocationImpl: void <init>(org.mockito.internal.exceptions.stacktrace.StackTraceFilter)>($r1);

        return;
    }

    public void <init>(org.mockito.internal.exceptions.stacktrace.StackTraceFilter)
    {
        org.mockito.internal.debugging.LocationImpl r0;
        org.mockito.internal.exceptions.stacktrace.StackTraceFilter r1;
        java.lang.Throwable $r2;

        r0 := @this: org.mockito.internal.debugging.LocationImpl;

        r1 := @parameter0: org.mockito.internal.exceptions.stacktrace.StackTraceFilter;

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        specialinvoke r0.<org.mockito.internal.debugging.LocationImpl: void <init>(org.mockito.internal.exceptions.stacktrace.StackTraceFilter,java.lang.Throwable)>(r1, $r2);

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        org.mockito.internal.debugging.LocationImpl r0;
        java.lang.Throwable r1;
        org.mockito.internal.exceptions.stacktrace.StackTraceFilter $r2;

        r0 := @this: org.mockito.internal.debugging.LocationImpl;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = <org.mockito.internal.debugging.LocationImpl: org.mockito.internal.exceptions.stacktrace.StackTraceFilter defaultStackTraceFilter>;

        specialinvoke r0.<org.mockito.internal.debugging.LocationImpl: void <init>(org.mockito.internal.exceptions.stacktrace.StackTraceFilter,java.lang.Throwable)>($r2, r1);

        return;
    }

    private void <init>(org.mockito.internal.exceptions.stacktrace.StackTraceFilter, java.lang.Throwable)
    {
        org.mockito.internal.debugging.LocationImpl r0;
        org.mockito.internal.exceptions.stacktrace.StackTraceFilter r1;
        java.lang.Throwable r2;

        r0 := @this: org.mockito.internal.debugging.LocationImpl;

        r1 := @parameter0: org.mockito.internal.exceptions.stacktrace.StackTraceFilter;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mockito.internal.debugging.LocationImpl: org.mockito.internal.exceptions.stacktrace.StackTraceFilter stackTraceFilter> = r1;

        r0.<org.mockito.internal.debugging.LocationImpl: java.lang.Throwable stackTraceHolder> = r2;

        return;
    }

    public java.lang.String toString()
    {
        org.mockito.internal.debugging.LocationImpl r0;
        java.lang.StackTraceElement[] r1, $r4;
        java.lang.Throwable $r2;
        org.mockito.internal.exceptions.stacktrace.StackTraceFilter $r3;
        int $i0;
        java.lang.StringBuilder $r5, $r6, $r9;
        java.lang.StackTraceElement $r7;
        java.lang.String $r8, $r10;

        r0 := @this: org.mockito.internal.debugging.LocationImpl;

        $r3 = r0.<org.mockito.internal.debugging.LocationImpl: org.mockito.internal.exceptions.stacktrace.StackTraceFilter stackTraceFilter>;

        $r2 = r0.<org.mockito.internal.debugging.LocationImpl: java.lang.Throwable stackTraceHolder>;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        r1 = virtualinvoke $r3.<org.mockito.internal.exceptions.stacktrace.StackTraceFilter: java.lang.StackTraceElement[] filter(java.lang.StackTraceElement[],boolean)>($r4, 0);

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        return "-> at <<unknown line>>";

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-> at ");

        $r7 = r1[0];

        $r8 = virtualinvoke $r7.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    static void <clinit>()
    {
        org.mockito.internal.exceptions.stacktrace.StackTraceFilter $r0;

        <org.mockito.internal.debugging.LocationImpl: long serialVersionUID> = -9054861157390980624L;

        $r0 = new org.mockito.internal.exceptions.stacktrace.StackTraceFilter;

        specialinvoke $r0.<org.mockito.internal.exceptions.stacktrace.StackTraceFilter: void <init>()>();

        <org.mockito.internal.debugging.LocationImpl: org.mockito.internal.exceptions.stacktrace.StackTraceFilter defaultStackTraceFilter> = $r0;

        return;
    }
}
