public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdScalarSerializer implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer
{
    public static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer instance;
    protected static final int MAX_BIG_DECIMAL_SCALE;
    protected final boolean _isInt;

    public void <init>(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer r0;
        java.lang.Class r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class,boolean)>(r1, 0);

        if r1 != class "Ljava/math/BigInteger;" goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: boolean _isInt> = $z0;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r3;
        java.lang.Class $r4, $r7;
        int[] $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape $r6;
        int $i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: java.lang.Class handledType()>();

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(r1, r2, $r4);

        if r3 == null goto label3;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape>;

        $r6 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();

        $i0 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: int ordinal()>();

        $i1 = $r5[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: java.lang.Class handledType()>();

        if $r7 != class "Ljava/math/BigDecimal;" goto label2;

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer bigDecimalAsStringSerializer()>();

        return $r9;

     label2:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance>;

        return $r8;

     label3:
        return r0;
    }

    public void serialize(java.lang.Number, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer r0;
        java.lang.Number r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String $r4;
        float $f0;
        double $d0;
        long $l0;
        java.math.BigInteger $r5;
        java.math.BigDecimal $r6;
        int $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer;

        r1 := @parameter0: java.lang.Number;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $z0 = r1 instanceof java.math.BigDecimal;

        if $z0 == 0 goto label1;

        $r6 = (java.math.BigDecimal) r1;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigDecimal)>($r6);

        goto label8;

     label1:
        $z1 = r1 instanceof java.math.BigInteger;

        if $z1 == 0 goto label2;

        $r5 = (java.math.BigInteger) r1;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigInteger)>($r5);

        goto label8;

     label2:
        $z2 = r1 instanceof java.lang.Long;

        if $z2 == 0 goto label3;

        $l0 = virtualinvoke r1.<java.lang.Number: long longValue()>();

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>($l0);

        goto label8;

     label3:
        $z3 = r1 instanceof java.lang.Double;

        if $z3 == 0 goto label4;

        $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(double)>($d0);

        goto label8;

     label4:
        $z4 = r1 instanceof java.lang.Float;

        if $z4 == 0 goto label5;

        $f0 = virtualinvoke r1.<java.lang.Number: float floatValue()>();

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(float)>($f0);

        goto label8;

     label5:
        $z5 = r1 instanceof java.lang.Integer;

        if $z5 != 0 goto label6;

        $z6 = r1 instanceof java.lang.Byte;

        if $z6 != 0 goto label6;

        $z7 = r1 instanceof java.lang.Short;

        if $z7 == 0 goto label7;

     label6:
        $i1 = virtualinvoke r1.<java.lang.Number: int intValue()>();

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>($i1);

        goto label8;

     label7:
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.lang.String)>($r4);

     label8:
        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode getSchema(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.reflect.Type r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode $r3;
        java.lang.String $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.reflect.Type;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: boolean _isInt>;

        if $z0 == 0 goto label1;

        $r5 = "integer";

        goto label2;

     label1:
        $r5 = "number";

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>($r5, 1);

        return $r3;
    }

    public void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        boolean $z0;
        java.lang.Class $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: boolean _isInt>;

        if $z0 == 0 goto label1;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: void visitIntFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType)>(r1, r2, $r6);

        goto label3;

     label1:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: java.lang.Class handledType()>();

        if $r3 != class "Ljava/math/BigDecimal;" goto label2;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: void visitFloatFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType)>(r1, r2, $r5);

        goto label3;

     label2:
        interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor expectNumberFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

     label3:
        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer bigDecimalAsStringSerializer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer BD_INSTANCE>;

        return $r0;
    }

    public volatile void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.lang.Number $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.lang.Number) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: void serialize(java.lang.Number,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>($r4, r2, r3);

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: int MAX_BIG_DECIMAL_SCALE> = 9999;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: void <init>(java.lang.Class)>(class "Ljava/lang/Number;");

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer instance> = $r0;

        return;
    }
}
