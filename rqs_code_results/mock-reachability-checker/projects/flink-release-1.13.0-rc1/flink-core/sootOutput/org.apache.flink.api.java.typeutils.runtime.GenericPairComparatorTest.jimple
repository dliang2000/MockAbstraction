public class org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest extends org.apache.flink.api.java.typeutils.runtime.tuple.base.TuplePairComparatorTestBase
{
    private org.apache.flink.api.java.tuple.Tuple3[] dataISD;
    private org.apache.flink.api.java.tuple.Tuple4[] dataIDL;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest r0;
        org.apache.flink.api.java.tuple.Tuple3[] $r1;
        org.apache.flink.api.java.tuple.Tuple3 $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23;
        java.lang.Integer $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r28, $r33, $r38, $r43, $r48, $r53, $r58, $r63;
        java.lang.Double $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r31, $r36, $r41, $r46, $r51, $r56, $r61, $r66;
        org.apache.flink.api.java.tuple.Tuple4[] $r26;
        org.apache.flink.api.java.tuple.Tuple4 $r27, $r32, $r37, $r42, $r47, $r52, $r57, $r62;
        java.lang.Float $r29, $r34, $r39, $r44, $r49, $r54, $r59, $r64;
        java.lang.Long $r30, $r35, $r40, $r45, $r50, $r55, $r60, $r65;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.tuple.base.TuplePairComparatorTestBase: void <init>()>();

        $r1 = newarray (org.apache.flink.api.java.tuple.Tuple3)[8];

        $r2 = new org.apache.flink.api.java.tuple.Tuple3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(20.0);

        specialinvoke $r2.<org.apache.flink.api.java.tuple.Tuple3: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, "hello", $r4);

        $r1[0] = $r2;

        $r5 = new org.apache.flink.api.java.tuple.Tuple3;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(23.2);

        specialinvoke $r5.<org.apache.flink.api.java.tuple.Tuple3: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r6, "world", $r7);

        $r1[1] = $r5;

        $r8 = new org.apache.flink.api.java.tuple.Tuple3;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(18.0);

        specialinvoke $r8.<org.apache.flink.api.java.tuple.Tuple3: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r9, "hello", $r10);

        $r1[2] = $r8;

        $r11 = new org.apache.flink.api.java.tuple.Tuple3;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(19.2);

        specialinvoke $r11.<org.apache.flink.api.java.tuple.Tuple3: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r12, "world", $r13);

        $r1[3] = $r11;

        $r14 = new org.apache.flink.api.java.tuple.Tuple3;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(16.0);

        specialinvoke $r14.<org.apache.flink.api.java.tuple.Tuple3: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r15, "hello", $r16);

        $r1[4] = $r14;

        $r17 = new org.apache.flink.api.java.tuple.Tuple3;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(17.2);

        specialinvoke $r17.<org.apache.flink.api.java.tuple.Tuple3: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r18, "world", $r19);

        $r1[5] = $r17;

        $r20 = new org.apache.flink.api.java.tuple.Tuple3;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(14.0);

        specialinvoke $r20.<org.apache.flink.api.java.tuple.Tuple3: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r21, "hello", $r22);

        $r1[6] = $r20;

        $r23 = new org.apache.flink.api.java.tuple.Tuple3;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(15.2);

        specialinvoke $r23.<org.apache.flink.api.java.tuple.Tuple3: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r24, "world", $r25);

        $r1[7] = $r23;

        r0.<org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest: org.apache.flink.api.java.tuple.Tuple3[] dataISD> = $r1;

        $r26 = newarray (org.apache.flink.api.java.tuple.Tuple4)[8];

        $r27 = new org.apache.flink.api.java.tuple.Tuple4;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r29 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.11F);

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(14L);

        $r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(20.0);

        specialinvoke $r27.<org.apache.flink.api.java.tuple.Tuple4: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r28, $r29, $r30, $r31);

        $r26[0] = $r27;

        $r32 = new org.apache.flink.api.java.tuple.Tuple4;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r34 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.221F);

        $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(15L);

        $r36 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(23.2);

        specialinvoke $r32.<org.apache.flink.api.java.tuple.Tuple4: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r33, $r34, $r35, $r36);

        $r26[1] = $r32;

        $r37 = new org.apache.flink.api.java.tuple.Tuple4;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r39 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.33F);

        $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(15L);

        $r41 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(18.0);

        specialinvoke $r37.<org.apache.flink.api.java.tuple.Tuple4: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r38, $r39, $r40, $r41);

        $r26[2] = $r37;

        $r42 = new org.apache.flink.api.java.tuple.Tuple4;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r44 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.44F);

        $r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(20L);

        $r46 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(19.2);

        specialinvoke $r42.<org.apache.flink.api.java.tuple.Tuple4: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r43, $r44, $r45, $r46);

        $r26[3] = $r42;

        $r47 = new org.apache.flink.api.java.tuple.Tuple4;

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r49 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.55F);

        $r50 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(20L);

        $r51 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(16.0);

        specialinvoke $r47.<org.apache.flink.api.java.tuple.Tuple4: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r48, $r49, $r50, $r51);

        $r26[4] = $r47;

        $r52 = new org.apache.flink.api.java.tuple.Tuple4;

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r54 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.66F);

        $r55 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(29L);

        $r56 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(17.2);

        specialinvoke $r52.<org.apache.flink.api.java.tuple.Tuple4: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r53, $r54, $r55, $r56);

        $r26[5] = $r52;

        $r57 = new org.apache.flink.api.java.tuple.Tuple4;

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r59 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.77F);

        $r60 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(29L);

        $r61 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(14.0);

        specialinvoke $r57.<org.apache.flink.api.java.tuple.Tuple4: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r58, $r59, $r60, $r61);

        $r26[6] = $r57;

        $r62 = new org.apache.flink.api.java.tuple.Tuple4;

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r64 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.88F);

        $r65 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(34L);

        $r66 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(15.2);

        specialinvoke $r62.<org.apache.flink.api.java.tuple.Tuple4: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r63, $r64, $r65, $r66);

        $r26[7] = $r62;

        r0.<org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest: org.apache.flink.api.java.tuple.Tuple4[] dataIDL> = $r26;

        return;
    }

    protected org.apache.flink.api.common.typeutils.GenericPairComparator createComparator(boolean)
    {
        org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest r0;
        boolean z0;
        int[] $r9, $r10;
        org.apache.flink.api.common.typeutils.TypeComparator[] $r11, $r14;
        org.apache.flink.api.common.typeutils.base.IntComparator $r12, $r15;
        org.apache.flink.api.common.typeutils.base.DoubleComparator $r13, $r16;
        org.apache.flink.api.common.typeutils.TypeSerializer[] $r17, $r20;
        org.apache.flink.api.common.typeutils.base.IntSerializer $r18, $r21;
        org.apache.flink.api.common.typeutils.base.DoubleSerializer $r19, $r22;
        org.apache.flink.api.java.typeutils.runtime.TupleComparator $r23, $r24;
        org.apache.flink.api.common.typeutils.GenericPairComparator $r25;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest;

        z0 := @parameter0: boolean;

        $r9 = newarray (int)[2];

        $r9[0] = 0;

        $r9[1] = 2;

        $r10 = newarray (int)[2];

        $r10[0] = 0;

        $r10[1] = 3;

        $r11 = newarray (org.apache.flink.api.common.typeutils.TypeComparator)[2];

        $r12 = new org.apache.flink.api.common.typeutils.base.IntComparator;

        specialinvoke $r12.<org.apache.flink.api.common.typeutils.base.IntComparator: void <init>(boolean)>(z0);

        $r11[0] = $r12;

        $r13 = new org.apache.flink.api.common.typeutils.base.DoubleComparator;

        specialinvoke $r13.<org.apache.flink.api.common.typeutils.base.DoubleComparator: void <init>(boolean)>(z0);

        $r11[1] = $r13;

        $r14 = newarray (org.apache.flink.api.common.typeutils.TypeComparator)[2];

        $r15 = new org.apache.flink.api.common.typeutils.base.IntComparator;

        specialinvoke $r15.<org.apache.flink.api.common.typeutils.base.IntComparator: void <init>(boolean)>(z0);

        $r14[0] = $r15;

        $r16 = new org.apache.flink.api.common.typeutils.base.DoubleComparator;

        specialinvoke $r16.<org.apache.flink.api.common.typeutils.base.DoubleComparator: void <init>(boolean)>(z0);

        $r14[1] = $r16;

        $r17 = newarray (org.apache.flink.api.common.typeutils.TypeSerializer)[2];

        $r18 = <org.apache.flink.api.common.typeutils.base.IntSerializer: org.apache.flink.api.common.typeutils.base.IntSerializer INSTANCE>;

        $r17[0] = $r18;

        $r19 = <org.apache.flink.api.common.typeutils.base.DoubleSerializer: org.apache.flink.api.common.typeutils.base.DoubleSerializer INSTANCE>;

        $r17[1] = $r19;

        $r20 = newarray (org.apache.flink.api.common.typeutils.TypeSerializer)[2];

        $r21 = <org.apache.flink.api.common.typeutils.base.IntSerializer: org.apache.flink.api.common.typeutils.base.IntSerializer INSTANCE>;

        $r20[0] = $r21;

        $r22 = <org.apache.flink.api.common.typeutils.base.DoubleSerializer: org.apache.flink.api.common.typeutils.base.DoubleSerializer INSTANCE>;

        $r20[1] = $r22;

        $r23 = new org.apache.flink.api.java.typeutils.runtime.TupleComparator;

        specialinvoke $r23.<org.apache.flink.api.java.typeutils.runtime.TupleComparator: void <init>(int[],org.apache.flink.api.common.typeutils.TypeComparator[],org.apache.flink.api.common.typeutils.TypeSerializer[])>($r9, $r11, $r17);

        $r24 = new org.apache.flink.api.java.typeutils.runtime.TupleComparator;

        specialinvoke $r24.<org.apache.flink.api.java.typeutils.runtime.TupleComparator: void <init>(int[],org.apache.flink.api.common.typeutils.TypeComparator[],org.apache.flink.api.common.typeutils.TypeSerializer[])>($r10, $r14, $r20);

        $r25 = new org.apache.flink.api.common.typeutils.GenericPairComparator;

        specialinvoke $r25.<org.apache.flink.api.common.typeutils.GenericPairComparator: void <init>(org.apache.flink.api.common.typeutils.TypeComparator,org.apache.flink.api.common.typeutils.TypeComparator)>($r23, $r24);

        return $r25;
    }

    protected org.apache.flink.api.java.tuple.Tuple2 getSortedTestData()
    {
        org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest r0;
        org.apache.flink.api.java.tuple.Tuple2 $r1;
        org.apache.flink.api.java.tuple.Tuple4[] $r2;
        org.apache.flink.api.java.tuple.Tuple3[] $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest;

        $r1 = new org.apache.flink.api.java.tuple.Tuple2;

        $r3 = r0.<org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest: org.apache.flink.api.java.tuple.Tuple3[] dataISD>;

        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest: org.apache.flink.api.java.tuple.Tuple4[] dataIDL>;

        specialinvoke $r1.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $r1;
    }

    protected volatile org.apache.flink.api.common.typeutils.TypePairComparator createComparator(boolean)
    {
        org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest r0;
        boolean z0;
        org.apache.flink.api.common.typeutils.GenericPairComparator $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.GenericPairComparatorTest: org.apache.flink.api.common.typeutils.GenericPairComparator createComparator(boolean)>(z0);

        return $r1;
    }
}
