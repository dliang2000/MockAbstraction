final class org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource extends org.apache.flink.shaded.guava18.com.google.common.io.ByteSource
{
    private final long offset;
    private final long length;
    final org.apache.flink.shaded.guava18.com.google.common.io.ByteSource this$0;

    private void <init>(org.apache.flink.shaded.guava18.com.google.common.io.ByteSource, long, long)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource r0;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r1;
        long l0, l1;
        byte $b2, $b3;
        java.lang.Object[] $r2, $r4;
        java.lang.Long $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource this$0> = r1;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: void <init>()>();

        $b2 = l0 cmp 0L;

        if $b2 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r2[0] = $r3;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "offset (%s) may not be negative", $r2);

        $b3 = l1 cmp 0L;

        if $b3 < 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r4[0] = $r5;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z1, "length (%s) may not be negative", $r4);

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: long offset> = l0;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: long length> = l1;

        return;
    }

    public java.io.InputStream openStream() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource r0;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource $r1;
        java.io.InputStream $r2, $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource this$0>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openStream()>();

        $r3 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: java.io.InputStream sliceStream(java.io.InputStream)>($r2);

        return $r3;
    }

    public java.io.InputStream openBufferedStream() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource r0;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource $r1;
        java.io.InputStream $r2, $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource this$0>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openBufferedStream()>();

        $r3 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: java.io.InputStream sliceStream(java.io.InputStream)>($r2);

        return $r3;
    }

    private java.io.InputStream sliceStream(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource r0;
        java.io.InputStream r1, $r5;
        org.apache.flink.shaded.guava18.com.google.common.io.Closer r3;
        long $l0, $l2, $l3;
        byte $b1;
        java.lang.Throwable $r6, $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource;

        r1 := @parameter0: java.io.InputStream;

        $l0 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: long offset>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label7;

     label1:
        $l3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: long offset>;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteStreams: void skipFully(java.io.InputStream,long)>(r1, $l3);

     label2:
        goto label7;

     label3:
        $r7 := @caughtexception;

        r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.Closer: org.apache.flink.shaded.guava18.com.google.common.io.Closer create()>();

        virtualinvoke r3.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>(r1);

     label4:
        $r9 = virtualinvoke r3.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r7);

        throw $r9;

     label5:
        $r6 := @caughtexception;

     label6:
        virtualinvoke r3.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        throw $r6;

     label7:
        $l2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: long length>;

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteStreams: java.io.InputStream limit(java.io.InputStream,long)>(r1, $l2);

        return $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.ByteSource slice(long, long)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource r0;
        long l0, l1, l2, $l5, $l6, $l7, $l8;
        byte $b3, $b4;
        java.lang.Object[] $r1, $r3;
        java.lang.Long $r2, $r4;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b3 = l0 cmp 0L;

        if $b3 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r1[0] = $r2;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "offset (%s) may not be negative", $r1);

        $b4 = l1 cmp 0L;

        if $b4 < 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r3[0] = $r4;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z1, "length (%s) may not be negative", $r3);

        $l5 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: long length>;

        l2 = $l5 - l0;

        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource this$0>;

        $l6 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: long offset>;

        $l7 = $l6 + l0;

        $l8 = staticinvoke <java.lang.Math: long min(long,long)>(l1, l2);

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource slice(long,long)>($l7, $l8);

        return $r6;
    }

    public boolean isEmpty() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource r0;
        long $l0;
        byte $b1;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource;

        $l0 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: long length>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource r0;
        java.lang.String r1, $r3, $r4, $r12;
        long l0, l1;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource $r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i2, $i3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource this$0>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        l0 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: long offset>;

        l1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: long length>;

        $r5 = new java.lang.StringBuilder;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = 50 + $i2;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".slice(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    void <init>(org.apache.flink.shaded.guava18.com.google.common.io.ByteSource, long, long, org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$1)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource r0;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r1;
        long l0, l1;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$1 r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$1;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.ByteSource,long,long)>(r1, l0, l1);

        return;
    }
}
