public class org.apache.flink.api.common.ArchivedExecutionConfig extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.String executionMode;
    private final java.lang.String restartStrategyDescription;
    private final int parallelism;
    private final int maxParallelism;
    private final boolean objectReuseEnabled;
    private final java.util.Map globalJobParameters;

    public void <init>(org.apache.flink.api.common.ExecutionConfig)
    {
        org.apache.flink.api.common.ArchivedExecutionConfig r0;
        org.apache.flink.api.common.ExecutionConfig r1;
        org.apache.flink.api.common.ExecutionMode $r2;
        java.lang.String $r3, $r12;
        org.apache.flink.api.common.restartstrategy.RestartStrategies$RestartStrategyConfiguration $r4, $r11;
        int $i0, $i1;
        boolean $z0;
        org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters $r5, $r7, $r9;
        java.util.Map $r6, $r8, $r10;

        r0 := @this: org.apache.flink.api.common.ArchivedExecutionConfig;

        r1 := @parameter0: org.apache.flink.api.common.ExecutionConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.flink.api.common.ExecutionConfig: org.apache.flink.api.common.ExecutionMode getExecutionMode()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.api.common.ExecutionMode: java.lang.String name()>();

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: java.lang.String executionMode> = $r3;

        $r4 = virtualinvoke r1.<org.apache.flink.api.common.ExecutionConfig: org.apache.flink.api.common.restartstrategy.RestartStrategies$RestartStrategyConfiguration getRestartStrategy()>();

        if $r4 == null goto label1;

        $r11 = virtualinvoke r1.<org.apache.flink.api.common.ExecutionConfig: org.apache.flink.api.common.restartstrategy.RestartStrategies$RestartStrategyConfiguration getRestartStrategy()>();

        $r12 = virtualinvoke $r11.<org.apache.flink.api.common.restartstrategy.RestartStrategies$RestartStrategyConfiguration: java.lang.String getDescription()>();

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: java.lang.String restartStrategyDescription> = $r12;

        goto label2;

     label1:
        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: java.lang.String restartStrategyDescription> = "default";

     label2:
        $i0 = virtualinvoke r1.<org.apache.flink.api.common.ExecutionConfig: int getMaxParallelism()>();

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: int maxParallelism> = $i0;

        $i1 = virtualinvoke r1.<org.apache.flink.api.common.ExecutionConfig: int getParallelism()>();

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: int parallelism> = $i1;

        $z0 = virtualinvoke r1.<org.apache.flink.api.common.ExecutionConfig: boolean isObjectReuseEnabled()>();

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: boolean objectReuseEnabled> = $z0;

        $r5 = virtualinvoke r1.<org.apache.flink.api.common.ExecutionConfig: org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters getGlobalJobParameters()>();

        if $r5 == null goto label3;

        $r7 = virtualinvoke r1.<org.apache.flink.api.common.ExecutionConfig: org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters getGlobalJobParameters()>();

        $r8 = virtualinvoke $r7.<org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters: java.util.Map toMap()>();

        if $r8 == null goto label3;

        $r9 = virtualinvoke r1.<org.apache.flink.api.common.ExecutionConfig: org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters getGlobalJobParameters()>();

        $r10 = virtualinvoke $r9.<org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters: java.util.Map toMap()>();

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: java.util.Map globalJobParameters> = $r10;

        goto label4;

     label3:
        $r6 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: java.util.Map globalJobParameters> = $r6;

     label4:
        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, int, boolean, java.util.Map)
    {
        org.apache.flink.api.common.ArchivedExecutionConfig r0;
        java.lang.String r1, r2;
        int i0, i1;
        boolean z0;
        java.util.Map r3;

        r0 := @this: org.apache.flink.api.common.ArchivedExecutionConfig;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        r3 := @parameter5: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: java.lang.String executionMode> = r1;

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: java.lang.String restartStrategyDescription> = r2;

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: int maxParallelism> = i0;

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: int parallelism> = i1;

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: boolean objectReuseEnabled> = z0;

        r0.<org.apache.flink.api.common.ArchivedExecutionConfig: java.util.Map globalJobParameters> = r3;

        return;
    }

    public java.lang.String getExecutionMode()
    {
        org.apache.flink.api.common.ArchivedExecutionConfig r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.api.common.ArchivedExecutionConfig;

        $r1 = r0.<org.apache.flink.api.common.ArchivedExecutionConfig: java.lang.String executionMode>;

        return $r1;
    }

    public java.lang.String getRestartStrategyDescription()
    {
        org.apache.flink.api.common.ArchivedExecutionConfig r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.api.common.ArchivedExecutionConfig;

        $r1 = r0.<org.apache.flink.api.common.ArchivedExecutionConfig: java.lang.String restartStrategyDescription>;

        return $r1;
    }

    public int getMaxParallelism()
    {
        org.apache.flink.api.common.ArchivedExecutionConfig r0;
        int $i0;

        r0 := @this: org.apache.flink.api.common.ArchivedExecutionConfig;

        $i0 = r0.<org.apache.flink.api.common.ArchivedExecutionConfig: int maxParallelism>;

        return $i0;
    }

    public int getParallelism()
    {
        org.apache.flink.api.common.ArchivedExecutionConfig r0;
        int $i0;

        r0 := @this: org.apache.flink.api.common.ArchivedExecutionConfig;

        $i0 = r0.<org.apache.flink.api.common.ArchivedExecutionConfig: int parallelism>;

        return $i0;
    }

    public boolean getObjectReuseEnabled()
    {
        org.apache.flink.api.common.ArchivedExecutionConfig r0;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.ArchivedExecutionConfig;

        $z0 = r0.<org.apache.flink.api.common.ArchivedExecutionConfig: boolean objectReuseEnabled>;

        return $z0;
    }

    public java.util.Map getGlobalJobParameters()
    {
        org.apache.flink.api.common.ArchivedExecutionConfig r0;
        java.util.Map $r1;

        r0 := @this: org.apache.flink.api.common.ArchivedExecutionConfig;

        $r1 = r0.<org.apache.flink.api.common.ArchivedExecutionConfig: java.util.Map globalJobParameters>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.ArchivedExecutionConfig: long serialVersionUID> = 2907040336948181163L;

        return;
    }
}
