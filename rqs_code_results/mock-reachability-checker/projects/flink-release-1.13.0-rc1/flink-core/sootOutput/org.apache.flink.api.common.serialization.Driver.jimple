public class org.apache.flink.api.common.serialization.Driver extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.common.serialization.Driver r0;

        r0 := @this: org.apache.flink.api.common.serialization.Driver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void runall()
    {
        org.apache.flink.api.common.serialization.Driver r0;
        org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest $r3;
        org.apache.flink.api.common.serialization.SimpleStringSchemaTest $r4;
        org.apache.flink.api.common.serialization.TypeInformationSerializationSchemaTest $r5;
        java.lang.Exception $r6;

        r0 := @this: org.apache.flink.api.common.serialization.Driver;

        $r3 = new org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest;

        specialinvoke $r3.<org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest: void <init>()>();

        virtualinvoke $r3.<org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest: void testTypeExtractionTuple()>();

        virtualinvoke $r3.<org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest: void testTypeExtractionTupleAnonymous()>();

        virtualinvoke $r3.<org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest: void testTypeExtractionGeneric()>();

        virtualinvoke $r3.<org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest: void testTypeExtractionGenericAnonymous()>();

        virtualinvoke $r3.<org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest: void testTypeExtractionRawException()>();

        virtualinvoke $r3.<org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest: void testTypeExtractionGenericException()>();

        virtualinvoke $r3.<org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest: void testIndirectGenericExtension()>();

        $r4 = new org.apache.flink.api.common.serialization.SimpleStringSchemaTest;

        specialinvoke $r4.<org.apache.flink.api.common.serialization.SimpleStringSchemaTest: void <init>()>();

        virtualinvoke $r4.<org.apache.flink.api.common.serialization.SimpleStringSchemaTest: void testSerializationWithAnotherCharset()>();

     label1:
        virtualinvoke $r4.<org.apache.flink.api.common.serialization.SimpleStringSchemaTest: void testSerializability()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

     label4:
        $r5 = new org.apache.flink.api.common.serialization.TypeInformationSerializationSchemaTest;

        specialinvoke $r5.<org.apache.flink.api.common.serialization.TypeInformationSerializationSchemaTest: void <init>()>();

        virtualinvoke $r5.<org.apache.flink.api.common.serialization.TypeInformationSerializationSchemaTest: void testDeSerialization()>();

        virtualinvoke $r5.<org.apache.flink.api.common.serialization.TypeInformationSerializationSchemaTest: void testSerializability()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
