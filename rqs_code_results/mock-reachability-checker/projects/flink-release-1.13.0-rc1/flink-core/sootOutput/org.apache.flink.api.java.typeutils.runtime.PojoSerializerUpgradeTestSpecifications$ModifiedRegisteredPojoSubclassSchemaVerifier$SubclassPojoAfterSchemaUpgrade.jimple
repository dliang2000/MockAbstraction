public class org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade extends org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$BasePojo
{
    public boolean subclassFieldC;
    public long subclassFieldE;
    public double subclassFieldF;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$BasePojo: void <init>()>();

        return;
    }

    public void <init>(int, java.lang.String, boolean, long, double)
    {
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade r0;
        int i0;
        java.lang.String r1;
        boolean z0;
        long l1;
        double d0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        l1 := @parameter3: long;

        d0 := @parameter4: double;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$BasePojo: void <init>(int,java.lang.String)>(i0, r1);

        r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: boolean subclassFieldC> = z0;

        r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: long subclassFieldE> = l1;

        r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: double subclassFieldF> = d0;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1;
        java.lang.String $r3, $r4;
        long $l2, $l3;
        byte $b4, $b5;
        double $d0, $d1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = r1 instanceof org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade) r1;

        $i1 = r2.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: int baseFieldA>;

        $i0 = r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: int baseFieldA>;

        if $i1 != $i0 goto label3;

        $r4 = r2.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: java.lang.String baseFieldB>;

        $r3 = r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: java.lang.String baseFieldB>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label3;

        $z3 = r2.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: boolean subclassFieldC>;

        $z2 = r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: boolean subclassFieldC>;

        if $z3 != $z2 goto label3;

        $l3 = r2.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: long subclassFieldE>;

        $l2 = r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: long subclassFieldE>;

        $b4 = $l3 cmp $l2;

        if $b4 != 0 goto label3;

        $d1 = r2.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: double subclassFieldF>;

        $d0 = r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: double subclassFieldF>;

        $b5 = $d1 cmpl $d0;

        if $b5 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public int hashCode()
    {
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade r0;
        java.lang.Object[] $r1;
        int $i0, $i2;
        java.lang.Integer $r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.Boolean $r4;
        long $l1;
        java.lang.Long $r5;
        double $d0;
        java.lang.Double $r6;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade;

        $r1 = newarray (java.lang.Object)[5];

        $i0 = r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: int baseFieldA>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: java.lang.String baseFieldB>;

        $r1[1] = $r3;

        $z0 = r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: boolean subclassFieldC>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[2] = $r4;

        $l1 = r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: long subclassFieldE>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r1[3] = $r5;

        $d0 = r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier$SubclassPojoAfterSchemaUpgrade: double subclassFieldF>;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r1[4] = $r6;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }
}
