public class org.mockito.internal.invocation.MatcherApplicationStrategy extends java.lang.Object
{
    private final org.mockito.invocation.Invocation invocation;
    private final java.util.List matchers;
    private final org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType matchingType;

    private void <init>(org.mockito.invocation.Invocation, java.util.List, org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType)
    {
        org.mockito.internal.invocation.MatcherApplicationStrategy r0;
        org.mockito.invocation.Invocation r1;
        java.util.List r2, $r5;
        org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType r3, $r4;
        int i0;

        r0 := @this: org.mockito.internal.invocation.MatcherApplicationStrategy;

        r1 := @parameter0: org.mockito.invocation.Invocation;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mockito.internal.invocation.MatcherApplicationStrategy: org.mockito.invocation.Invocation invocation> = r1;

        $r4 = <org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType: org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType MATCH_EACH_VARARGS_WITH_LAST_MATCHER>;

        if r3 != $r4 goto label1;

        i0 = staticinvoke <org.mockito.internal.invocation.MatcherApplicationStrategy: int varargLength(org.mockito.invocation.Invocation)>(r1);

        $r5 = staticinvoke <org.mockito.internal.invocation.MatcherApplicationStrategy: java.util.List appendLastMatcherNTimes(java.util.List,int)>(r2, i0);

        r0.<org.mockito.internal.invocation.MatcherApplicationStrategy: java.util.List matchers> = $r5;

        goto label2;

     label1:
        r0.<org.mockito.internal.invocation.MatcherApplicationStrategy: java.util.List matchers> = r2;

     label2:
        r0.<org.mockito.internal.invocation.MatcherApplicationStrategy: org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType matchingType> = r3;

        return;
    }

    public static org.mockito.internal.invocation.MatcherApplicationStrategy getMatcherApplicationStrategyFor(org.mockito.invocation.Invocation, java.util.List)
    {
        org.mockito.invocation.Invocation r0;
        java.util.List r1;
        org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType r2;
        org.mockito.internal.invocation.MatcherApplicationStrategy $r3;

        r0 := @parameter0: org.mockito.invocation.Invocation;

        r1 := @parameter1: java.util.List;

        r2 = staticinvoke <org.mockito.internal.invocation.MatcherApplicationStrategy: org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType getMatcherApplicationType(org.mockito.invocation.Invocation,java.util.List)>(r0, r1);

        $r3 = new org.mockito.internal.invocation.MatcherApplicationStrategy;

        specialinvoke $r3.<org.mockito.internal.invocation.MatcherApplicationStrategy: void <init>(org.mockito.invocation.Invocation,java.util.List,org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType)>(r0, r1, r2);

        return $r3;
    }

    public boolean forEachMatcherAndArgument(org.mockito.internal.invocation.ArgumentMatcherAction)
    {
        org.mockito.internal.invocation.MatcherApplicationStrategy r0;
        org.mockito.internal.invocation.ArgumentMatcherAction r1;
        java.lang.Object[] r2;
        org.mockito.ArgumentMatcher r3;
        java.lang.Object r4, $r9;
        org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType $r5, $r6;
        org.mockito.invocation.Invocation $r7;
        int $i0, i1;
        java.util.List $r8;
        boolean $z0;

        r0 := @this: org.mockito.internal.invocation.MatcherApplicationStrategy;

        r1 := @parameter0: org.mockito.internal.invocation.ArgumentMatcherAction;

        $r6 = r0.<org.mockito.internal.invocation.MatcherApplicationStrategy: org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType matchingType>;

        $r5 = <org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType: org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType ERROR_UNSUPPORTED_NUMBER_OF_MATCHERS>;

        if $r6 != $r5 goto label1;

        return 0;

     label1:
        $r7 = r0.<org.mockito.internal.invocation.MatcherApplicationStrategy: org.mockito.invocation.Invocation invocation>;

        r2 = interfaceinvoke $r7.<org.mockito.invocation.Invocation: java.lang.Object[] getArguments()>();

        i1 = 0;

     label2:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label4;

        $r8 = r0.<org.mockito.internal.invocation.MatcherApplicationStrategy: java.util.List matchers>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (org.mockito.ArgumentMatcher) $r9;

        r4 = r2[i1];

        $z0 = interfaceinvoke r1.<org.mockito.internal.invocation.ArgumentMatcherAction: boolean apply(org.mockito.ArgumentMatcher,java.lang.Object)>(r3, r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    private static org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType getMatcherApplicationType(org.mockito.invocation.Invocation, java.util.List)
    {
        org.mockito.invocation.Invocation r0;
        java.util.List r1;
        int i0, i1, i2;
        java.lang.Object[] $r2, $r3;
        org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType $r4, $r5, $r6;
        boolean $z0;

        r0 := @parameter0: org.mockito.invocation.Invocation;

        r1 := @parameter1: java.util.List;

        $r2 = interfaceinvoke r0.<org.mockito.invocation.Invocation: java.lang.Object[] getRawArguments()>();

        i0 = lengthof $r2;

        $r3 = interfaceinvoke r0.<org.mockito.invocation.Invocation: java.lang.Object[] getArguments()>();

        i1 = lengthof $r3;

        i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 != i2 goto label1;

        $r6 = <org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType: org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType ONE_MATCHER_PER_ARGUMENT>;

        return $r6;

     label1:
        if i0 != i2 goto label2;

        $z0 = staticinvoke <org.mockito.internal.invocation.MatcherApplicationStrategy: boolean isLastMatcherVarargMatcher(java.util.List)>(r1);

        if $z0 == 0 goto label2;

        $r5 = <org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType: org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType MATCH_EACH_VARARGS_WITH_LAST_MATCHER>;

        return $r5;

     label2:
        $r4 = <org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType: org.mockito.internal.invocation.MatcherApplicationStrategy$MatcherApplicationType ERROR_UNSUPPORTED_NUMBER_OF_MATCHERS>;

        return $r4;
    }

    private static boolean isLastMatcherVarargMatcher(java.util.List)
    {
        java.util.List r0;
        org.mockito.ArgumentMatcher r1;
        boolean $z0, $z1, $z2;
        org.mockito.internal.hamcrest.HamcrestArgumentMatcher $r2;

        r0 := @parameter0: java.util.List;

        r1 = staticinvoke <org.mockito.internal.invocation.MatcherApplicationStrategy: org.mockito.ArgumentMatcher lastMatcher(java.util.List)>(r0);

        $z0 = r1 instanceof org.mockito.internal.hamcrest.HamcrestArgumentMatcher;

        if $z0 == 0 goto label1;

        $r2 = (org.mockito.internal.hamcrest.HamcrestArgumentMatcher) r1;

        $z2 = virtualinvoke $r2.<org.mockito.internal.hamcrest.HamcrestArgumentMatcher: boolean isVarargMatcher()>();

        return $z2;

     label1:
        $z1 = r1 instanceof org.mockito.internal.matchers.VarargMatcher;

        return $z1;
    }

    private static java.util.List appendLastMatcherNTimes(java.util.List, int)
    {
        java.util.List r0;
        int i0, i1;
        org.mockito.ArgumentMatcher r1;
        java.util.ArrayList $r3;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 = staticinvoke <org.mockito.internal.invocation.MatcherApplicationStrategy: org.mockito.ArgumentMatcher lastMatcher(java.util.List)>(r0);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    private static int varargLength(org.mockito.invocation.Invocation)
    {
        org.mockito.invocation.Invocation r0;
        int i0, i1, $i2;
        java.lang.Object[] $r1, $r2;

        r0 := @parameter0: org.mockito.invocation.Invocation;

        $r1 = interfaceinvoke r0.<org.mockito.invocation.Invocation: java.lang.Object[] getRawArguments()>();

        i0 = lengthof $r1;

        $r2 = interfaceinvoke r0.<org.mockito.invocation.Invocation: java.lang.Object[] getArguments()>();

        i1 = lengthof $r2;

        $i2 = i1 - i0;

        return $i2;
    }

    private static org.mockito.ArgumentMatcher lastMatcher(java.util.List)
    {
        java.util.List r0;
        int $i0, $i1;
        java.lang.Object $r1;
        org.mockito.ArgumentMatcher $r2;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i1);

        $r2 = (org.mockito.ArgumentMatcher) $r1;

        return $r2;
    }
}
