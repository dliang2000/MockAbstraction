public class org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo extends org.apache.flink.api.common.typeinfo.TypeInformation
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        specialinvoke r0.<org.apache.flink.api.common.typeinfo.TypeInformation: void <init>()>();

        return;
    }

    public boolean isBasicType()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        return 0;
    }

    public boolean isTupleType()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        return 0;
    }

    public int getArity()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        return 0;
    }

    public int getTotalFields()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        return 0;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        return null;
    }

    public boolean isKeyType()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        return 0;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;
        org.apache.flink.api.common.ExecutionConfig r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        r1 := @parameter0: org.apache.flink.api.common.ExecutionConfig;

        return null;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        return null;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;
        java.lang.Object r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        return 0;
    }

    public boolean canEqual(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo r0;
        java.lang.Object r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyFaultyTypeInfo;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }
}
