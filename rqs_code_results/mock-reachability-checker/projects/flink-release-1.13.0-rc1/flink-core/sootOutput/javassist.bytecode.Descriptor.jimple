public class javassist.bytecode.Descriptor extends java.lang.Object
{

    public void <init>()
    {
        javassist.bytecode.Descriptor r0;

        r0 := @this: javassist.bytecode.Descriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String toJvmName(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        return $r1;
    }

    public static java.lang.String toJavaName(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        return $r1;
    }

    public static java.lang.String toJvmName(javassist.CtClass)
    {
        javassist.CtClass r0;
        boolean $z0;
        java.lang.String $r1, $r2, $r3;

        r0 := @parameter0: javassist.CtClass;

        $z0 = virtualinvoke r0.<javassist.CtClass: boolean isArray()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String of(javassist.CtClass)>(r0);

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        $r2 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String toJvmName(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.String toClassName(java.lang.String)
    {
        java.lang.String r0, $r5, $r8, $r13, $r14, r15;
        java.lang.RuntimeException $r1, $r9;
        java.lang.StringBuilder $r2, $r3, $r4, $r10, $r11, $r12;
        java.lang.StringBuffer $r6;
        int i0, i1, i3, i4, $i5, $i6;
        char c2;

        r0 := @parameter0: java.lang.String;

        i0 = 0;

        i1 = 0;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

     label01:
        if c2 != 91 goto label02;

        i0 = i0 + 1;

        i1 = i1 + 1;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        goto label01;

     label02:
        if c2 != 76 goto label03;

        i3 = i1 + 1;

        i4 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(59, i1);

        $r14 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i3, i4);

        r15 = virtualinvoke $r14.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        i1 = i4;

        goto label13;

     label03:
        if c2 != 86 goto label04;

        r15 = "void";

        goto label13;

     label04:
        if c2 != 73 goto label05;

        r15 = "int";

        goto label13;

     label05:
        if c2 != 66 goto label06;

        r15 = "byte";

        goto label13;

     label06:
        if c2 != 74 goto label07;

        r15 = "long";

        goto label13;

     label07:
        if c2 != 68 goto label08;

        r15 = "double";

        goto label13;

     label08:
        if c2 != 70 goto label09;

        r15 = "float";

        goto label13;

     label09:
        if c2 != 67 goto label10;

        r15 = "char";

        goto label13;

     label10:
        if c2 != 83 goto label11;

        r15 = "short";

        goto label13;

     label11:
        if c2 != 90 goto label12;

        r15 = "boolean";

        goto label13;

     label12:
        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad descriptor: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label13:
        $i5 = i1 + 1;

        $i6 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i5 == $i6 goto label14;

        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multiple descriptors?: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label14:
        if i0 != 0 goto label15;

        return r15;

     label15:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>(r15);

     label16:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[]");

        i0 = i0 + -1;

        if i0 > 0 goto label16;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.String of(java.lang.String)
    {
        java.lang.String r0, $r3, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("void");

        if $z0 == 0 goto label1;

        return "V";

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z1 == 0 goto label2;

        return "I";

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z2 == 0 goto label3;

        return "B";

     label3:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z3 == 0 goto label4;

        return "J";

     label4:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z4 == 0 goto label5;

        return "D";

     label5:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z5 == 0 goto label6;

        return "F";

     label6:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z6 == 0 goto label7;

        return "C";

     label7:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z7 == 0 goto label8;

        return "S";

     label8:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z8 == 0 goto label9;

        return "Z";

     label9:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $r3 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String toJvmName(java.lang.String)>(r0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String rename(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r5, $r6, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, i10, i11, i12, i13;
        java.lang.StringBuffer $r4;
        boolean $z0;
        char $c6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1);

        if $i0 >= 0 goto label1;

        return r0;

     label1:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        i10 = 0;

        i11 = 0;

     label2:
        i12 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(76, i11);

        if i12 >= 0 goto label3;

        goto label6;

     label3:
        $i1 = i12 + 1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, $i1);

        if $z0 == 0 goto label4;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = i12 + $i3;

        $i5 = $i4 + 1;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        if $c6 != 59 goto label4;

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i10, i12);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        $i8 = i12 + $i7;

        $i9 = $i8 + 2;

        i11 = $i9;

        i10 = $i9;

        goto label5;

     label4:
        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(59, i12);

        i11 = $i2 + 1;

        if i11 >= 1 goto label5;

        goto label6;

     label5:
        goto label2;

     label6:
        if i10 != 0 goto label7;

        return r0;

     label7:
        i13 = virtualinvoke r0.<java.lang.String: int length()>();

        if i10 >= i13 goto label8;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i10, i13);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label8:
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String rename(java.lang.String, java.util.Map)
    {
        java.lang.String r0, r3, r4, $r7, $r12, $r13;
        java.util.Map r1;
        int i0, $i1, i2, i3, i4, i5;
        java.lang.StringBuffer $r5;
        java.lang.Object $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        if r1 != null goto label1;

        return r0;

     label1:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

        i3 = 0;

     label2:
        i4 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(76, i3);

        if i4 >= 0 goto label3;

        goto label6;

     label3:
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(59, i4);

        if i0 >= 0 goto label4;

        goto label6;

     label4:
        i3 = i0 + 1;

        $i1 = i4 + 1;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i1, i0);

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.lang.String) $r6;

        if r4 == null goto label5;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i4);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        i2 = i3;

     label5:
        goto label2;

     label6:
        if i2 != 0 goto label7;

        return r0;

     label7:
        i5 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= i5 goto label8;

        $r13 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i5);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

     label8:
        $r12 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    public static java.lang.String of(javassist.CtClass)
    {
        javassist.CtClass r0;
        java.lang.StringBuffer $r2;
        java.lang.String $r3;

        r0 := @parameter0: javassist.CtClass;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        staticinvoke <javassist.bytecode.Descriptor: void toDescriptor(java.lang.StringBuffer,javassist.CtClass)>($r2, r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private static void toDescriptor(java.lang.StringBuffer, javassist.CtClass)
    {
        java.lang.StringBuffer r0;
        javassist.CtClass r1, $r10;
        java.lang.String r2, $r4, $r5, $r13, $r14;
        boolean $z0, $z1;
        char $c0;
        javassist.NotFoundException $r11;
        int $i1, $i2;
        javassist.CtPrimitiveType r18;

        r0 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: javassist.CtClass;

        $z0 = virtualinvoke r1.<javassist.CtClass: boolean isArray()>();

        if $z0 == 0 goto label4;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

     label1:
        $r10 = virtualinvoke r1.<javassist.CtClass: javassist.CtClass getComponentType()>();

        staticinvoke <javassist.bytecode.Descriptor: void toDescriptor(java.lang.StringBuffer,javassist.CtClass)>(r0, $r10);

     label2:
        goto label6;

     label3:
        $r11 := @caughtexception;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        r2 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = $i1 - 2;

        $r13 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r14 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String toJvmName(java.lang.String)>($r13);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        goto label6;

     label4:
        $z1 = virtualinvoke r1.<javassist.CtClass: boolean isPrimitive()>();

        if $z1 == 0 goto label5;

        r18 = (javassist.CtPrimitiveType) r1;

        $c0 = virtualinvoke r18.<javassist.CtPrimitiveType: char getDescriptor()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        goto label6;

     label5:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        $r4 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

     label6:
        return;

        catch javassist.NotFoundException from label1 to label2 with label3;
    }

    public static java.lang.String ofConstructor(javassist.CtClass[])
    {
        javassist.CtClass[] r0;
        javassist.CtClass $r1;
        java.lang.String $r2;

        r0 := @parameter0: javassist.CtClass[];

        $r1 = <javassist.CtClass: javassist.CtClass voidType>;

        $r2 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String ofMethod(javassist.CtClass,javassist.CtClass[])>($r1, r0);

        return $r2;
    }

    public static java.lang.String ofMethod(javassist.CtClass, javassist.CtClass[])
    {
        javassist.CtClass r0, $r7;
        javassist.CtClass[] r1;
        int i0, i1;
        java.lang.StringBuffer $r3;
        java.lang.String $r6;

        r0 := @parameter0: javassist.CtClass;

        r1 := @parameter1: javassist.CtClass[];

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        if r1 == null goto label2;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r7 = r1[i1];

        staticinvoke <javassist.bytecode.Descriptor: void toDescriptor(java.lang.StringBuffer,javassist.CtClass)>($r3, $r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        if r0 == null goto label3;

        staticinvoke <javassist.bytecode.Descriptor: void toDescriptor(java.lang.StringBuffer,javassist.CtClass)>($r3, r0);

     label3:
        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String ofParameters(javassist.CtClass[])
    {
        javassist.CtClass[] r0;
        java.lang.String $r1;

        r0 := @parameter0: javassist.CtClass[];

        $r1 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String ofMethod(javassist.CtClass,javassist.CtClass[])>(null, r0);

        return $r1;
    }

    public static java.lang.String appendParameter(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4, $r7, $r10, $r12;
        int i0;
        java.lang.StringBuffer $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(41);

        if i0 >= 0 goto label1;

        return r1;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    public static java.lang.String insertParameter(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4, $r7, $r9;
        char $c0;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c0 == 40 goto label1;

        return r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(L");

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public static java.lang.String appendParameter(javassist.CtClass, java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1, $r4, $r6, $r8;
        int i0;
        java.lang.StringBuffer $r3;

        r0 := @parameter0: javassist.CtClass;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(41);

        if i0 >= 0 goto label1;

        return r1;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        staticinvoke <javassist.bytecode.Descriptor: void toDescriptor(java.lang.StringBuffer,javassist.CtClass)>($r3, r0);

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.String insertParameter(javassist.CtClass, java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1, $r4, $r6, $r8;
        char $c0;
        java.lang.StringBuilder $r2, $r3, $r5, $r7;

        r0 := @parameter0: javassist.CtClass;

        r1 := @parameter1: java.lang.String;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c0 == 40 goto label1;

        return r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r4 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String of(javassist.CtClass)>(r0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.String changeReturnType(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4, $r7, $r10;
        int i0, $i1;
        java.lang.StringBuffer $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(41);

        if i0 >= 0 goto label1;

        return r1;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $i1 = i0 + 1;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        $r10 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    public static javassist.CtClass[] getParameterTypes(java.lang.String, javassist.ClassPool) throws javassist.NotFoundException
    {
        java.lang.String r0;
        javassist.ClassPool r1;
        int i0, $i2, i3, i4;
        javassist.CtClass[] r2;
        char $c1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javassist.ClassPool;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 == 40 goto label1;

        return null;

     label1:
        i0 = staticinvoke <javassist.bytecode.Descriptor: int numOfParameters(java.lang.String)>(r0);

        r2 = newarray (javassist.CtClass)[i0];

        i3 = 0;

        i4 = 1;

     label2:
        $i2 = i3;

        i3 = i3 + 1;

        i4 = staticinvoke <javassist.bytecode.Descriptor: int toCtClass(javassist.ClassPool,java.lang.String,int,javassist.CtClass[],int)>(r1, r0, i4, r2, $i2);

        if i4 > 0 goto label2;

        return r2;
    }

    public static boolean eqParamTypes(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        char c0, $c1, $c2;
        int i3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 == 40 goto label1;

        return 0;

     label1:
        i3 = 0;

     label2:
        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        if c0 == $c2 goto label3;

        return 0;

     label3:
        if c0 != 41 goto label4;

        return 1;

     label4:
        i3 = i3 + 1;

        goto label2;
    }

    public static java.lang.String getParamDescriptor(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(41);

        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return $r1;
    }

    public static javassist.CtClass getReturnType(java.lang.String, javassist.ClassPool) throws javassist.NotFoundException
    {
        java.lang.String r0;
        javassist.ClassPool r1;
        int i0, $i1;
        javassist.CtClass[] r2;
        javassist.CtClass $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javassist.ClassPool;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(41);

        if i0 >= 0 goto label1;

        return null;

     label1:
        r2 = newarray (javassist.CtClass)[1];

        $i1 = i0 + 1;

        staticinvoke <javassist.bytecode.Descriptor: int toCtClass(javassist.ClassPool,java.lang.String,int,javassist.CtClass[],int)>(r1, r0, $i1, r2, 0);

        $r3 = r2[0];

        return $r3;
    }

    public static int numOfParameters(java.lang.String)
    {
        java.lang.String r0;
        int $i0, i1, i2;
        java.lang.IndexOutOfBoundsException $r1;
        char c3;

        r0 := @parameter0: java.lang.String;

        i1 = 0;

        i2 = 1;

     label1:
        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if c3 != 41 goto label2;

        goto label6;

     label2:
        if c3 != 91 goto label3;

        i2 = i2 + 1;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        goto label2;

     label3:
        if c3 != 76 goto label4;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(59, i2);

        i2 = $i0 + 1;

        if i2 > 0 goto label5;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("bad descriptor");

        throw $r1;

     label4:
        i2 = i2 + 1;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return i1;
    }

    public static javassist.CtClass toCtClass(java.lang.String, javassist.ClassPool) throws javassist.NotFoundException
    {
        java.lang.String r0, $r3;
        javassist.ClassPool r1;
        javassist.CtClass[] r2;
        int i0;
        javassist.CtClass $r4, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javassist.ClassPool;

        r2 = newarray (javassist.CtClass)[1];

        i0 = staticinvoke <javassist.bytecode.Descriptor: int toCtClass(javassist.ClassPool,java.lang.String,int,javassist.CtClass[],int)>(r1, r0, 0, r2, 0);

        if i0 < 0 goto label1;

        $r5 = r2[0];

        return $r5;

     label1:
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        $r4 = virtualinvoke r1.<javassist.ClassPool: javassist.CtClass get(java.lang.String)>($r3);

        return $r4;
    }

    private static int toCtClass(javassist.ClassPool, java.lang.String, int, javassist.CtClass[], int) throws javassist.NotFoundException
    {
        javassist.ClassPool r0;
        java.lang.String r1, $r6, r7;
        javassist.CtClass[] r2;
        int i0, $i1, i2, i3, i5, i6, i7;
        javassist.CtClass $r3, r8;
        java.lang.StringBuffer $r4;
        char c4;

        r0 := @parameter0: javassist.ClassPool;

        r1 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        r2 := @parameter3: javassist.CtClass[];

        i0 := @parameter4: int;

        i3 = 0;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

     label1:
        if c4 != 91 goto label2;

        i3 = i3 + 1;

        i2 = i2 + 1;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        goto label1;

     label2:
        if c4 != 76 goto label3;

        i5 = i2 + 1;

        i6 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(59, i5);

        i7 = i6 + 1;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i5, i6);

        r7 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        goto label6;

     label3:
        r8 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass toPrimitiveClass(char)>(c4);

        if r8 != null goto label4;

        return -1;

     label4:
        i7 = i2 + 1;

        if i3 != 0 goto label5;

        r2[i0] = r8;

        return i7;

     label5:
        r7 = virtualinvoke r8.<javassist.CtClass: java.lang.String getName()>();

     label6:
        if i3 <= 0 goto label9;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>(r7);

     label7:
        $i1 = i3;

        i3 = i3 + -1;

        if $i1 <= 0 goto label8;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[]");

        goto label7;

     label8:
        r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label9:
        $r3 = virtualinvoke r0.<javassist.ClassPool: javassist.CtClass get(java.lang.String)>(r7);

        r2[i0] = $r3;

        return i7;
    }

    static javassist.CtClass toPrimitiveClass(char)
    {
        char c0;
        javassist.CtClass r0;

        c0 := @parameter0: char;

        r0 = null;

        tableswitch(c0)
        {
            case 66: goto label03;
            case 67: goto label02;
            case 68: goto label08;
            case 69: goto label10;
            case 70: goto label07;
            case 71: goto label10;
            case 72: goto label10;
            case 73: goto label05;
            case 74: goto label06;
            case 75: goto label10;
            case 76: goto label10;
            case 77: goto label10;
            case 78: goto label10;
            case 79: goto label10;
            case 80: goto label10;
            case 81: goto label10;
            case 82: goto label10;
            case 83: goto label04;
            case 84: goto label10;
            case 85: goto label10;
            case 86: goto label09;
            case 87: goto label10;
            case 88: goto label10;
            case 89: goto label10;
            case 90: goto label01;
            default: goto label10;
        };

     label01:
        r0 = <javassist.CtClass: javassist.CtClass booleanType>;

        goto label10;

     label02:
        r0 = <javassist.CtClass: javassist.CtClass charType>;

        goto label10;

     label03:
        r0 = <javassist.CtClass: javassist.CtClass byteType>;

        goto label10;

     label04:
        r0 = <javassist.CtClass: javassist.CtClass shortType>;

        goto label10;

     label05:
        r0 = <javassist.CtClass: javassist.CtClass intType>;

        goto label10;

     label06:
        r0 = <javassist.CtClass: javassist.CtClass longType>;

        goto label10;

     label07:
        r0 = <javassist.CtClass: javassist.CtClass floatType>;

        goto label10;

     label08:
        r0 = <javassist.CtClass: javassist.CtClass doubleType>;

        goto label10;

     label09:
        r0 = <javassist.CtClass: javassist.CtClass voidType>;

     label10:
        return r0;
    }

    public static int arrayDimension(java.lang.String)
    {
        java.lang.String r0;
        char $c0;
        int i1;

        r0 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        if $c0 != 91 goto label2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return i1;
    }

    public static java.lang.String toArrayComponent(java.lang.String, int)
    {
        java.lang.String r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

        return $r1;
    }

    public static int dataSize(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String,boolean)>(r0, 1);

        return $i0;
    }

    public static int paramSize(java.lang.String)
    {
        java.lang.String r0;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String,boolean)>(r0, 0);

        $i1 = neg $i0;

        return $i1;
    }

    private static int dataSize(java.lang.String, boolean)
    {
        java.lang.String r0;
        boolean z0, z1;
        int $i0, $i1, i2, i4;
        java.lang.IndexOutOfBoundsException $r1;
        char c3, c5;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i2 = 0;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if c3 != 40 goto label10;

        i4 = 1;

     label01:
        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        if c5 != 41 goto label02;

        $i1 = i4 + 1;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1);

        goto label10;

     label02:
        z1 = 0;

     label03:
        if c5 != 91 goto label04;

        z1 = 1;

        i4 = i4 + 1;

        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        goto label03;

     label04:
        if c5 != 76 goto label05;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(59, i4);

        i4 = $i0 + 1;

        if i4 > 0 goto label06;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("bad descriptor");

        throw $r1;

     label05:
        i4 = i4 + 1;

     label06:
        if z1 != 0 goto label08;

        if c5 == 74 goto label07;

        if c5 != 68 goto label08;

     label07:
        i2 = i2 + -2;

        goto label09;

     label08:
        i2 = i2 + -1;

     label09:
        goto label01;

     label10:
        if z0 == 0 goto label13;

        if c3 == 74 goto label11;

        if c3 != 68 goto label12;

     label11:
        i2 = i2 + 2;

        goto label13;

     label12:
        if c3 == 86 goto label13;

        i2 = i2 + 1;

     label13:
        return i2;
    }

    public static java.lang.String toString(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <javassist.bytecode.Descriptor$PrettyPrinter: java.lang.String toString(java.lang.String)>(r0);

        return $r1;
    }
}
