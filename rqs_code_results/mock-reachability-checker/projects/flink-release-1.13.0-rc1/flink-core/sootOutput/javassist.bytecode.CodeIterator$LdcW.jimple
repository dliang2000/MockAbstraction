class javassist.bytecode.CodeIterator$LdcW extends javassist.bytecode.CodeIterator$Branch
{
    int index;
    boolean state;

    void <init>(int, int)
    {
        javassist.bytecode.CodeIterator$LdcW r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.CodeIterator$LdcW;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<javassist.bytecode.CodeIterator$Branch: void <init>(int)>(i0);

        r0.<javassist.bytecode.CodeIterator$LdcW: int index> = i1;

        r0.<javassist.bytecode.CodeIterator$LdcW: boolean state> = 1;

        return;
    }

    boolean expanded()
    {
        javassist.bytecode.CodeIterator$LdcW r0;
        boolean $z0;

        r0 := @this: javassist.bytecode.CodeIterator$LdcW;

        $z0 = r0.<javassist.bytecode.CodeIterator$LdcW: boolean state>;

        if $z0 == 0 goto label1;

        r0.<javassist.bytecode.CodeIterator$LdcW: boolean state> = 0;

        return 1;

     label1:
        return 0;
    }

    int deltaSize()
    {
        javassist.bytecode.CodeIterator$LdcW r0;

        r0 := @this: javassist.bytecode.CodeIterator$LdcW;

        return 1;
    }

    int write(int, byte[], int, byte[])
    {
        javassist.bytecode.CodeIterator$LdcW r0;
        int i0, i1, $i2, $i3;
        byte[] r1, r2;

        r0 := @this: javassist.bytecode.CodeIterator$LdcW;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        r2[i1] = 19;

        $i3 = r0.<javassist.bytecode.CodeIterator$LdcW: int index>;

        $i2 = i1 + 1;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i3, r2, $i2);

        return 2;
    }
}
