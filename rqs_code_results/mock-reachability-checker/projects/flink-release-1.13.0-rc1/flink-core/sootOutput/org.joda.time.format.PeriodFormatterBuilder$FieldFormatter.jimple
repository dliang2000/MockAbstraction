class org.joda.time.format.PeriodFormatterBuilder$FieldFormatter extends java.lang.Object implements org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser
{
    private final int iMinPrintedDigits;
    private final int iPrintZeroSetting;
    private final int iMaxParsedDigits;
    private final boolean iRejectSignedValues;
    private final int iFieldType;
    private final org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters;
    private final org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix;
    private final org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix;

    void <init>(int, int, int, boolean, int, org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[], org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix, org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        int i0, i1, i2, i3;
        boolean z0;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] r1;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix r2, r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        i3 := @parameter4: int;

        r1 := @parameter5: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[];

        r2 := @parameter6: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        r3 := @parameter7: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits> = i0;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting> = i1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits> = i2;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues> = z0;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> = i3;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = r1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = r2;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix> = r3;

        return;
    }

    void <init>(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter, org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0, r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r2;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r3, $r4, $r6, r7;
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix $r5;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r7 := @parameter1: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits> = $i0;

        $i1 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting> = $i1;

        $i2 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits> = $i2;

        $z0 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues> = $z0;

        $i3 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> = $i3;

        $r2 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r2;

        $r3 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = $r3;

        $r4 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r4 == null goto label1;

        $r5 = new org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r6 = r1.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        specialinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: void <init>(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r6, r7);

        r7 = $r5;

     label1:
        r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix> = r7;

        return;
    }

    public void finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[])
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0, r5;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] r1;
        int i0, i1;
        java.util.HashSet $r6, $r7;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r8, $r9, $r10, $r11, $r12, $r13;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[];

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r5 = r1[i1];

        if r5 == null goto label2;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z0 != 0 goto label2;

        $r12 = r5.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r12);

        $r13 = r5.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r13);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r8 == null goto label4;

        $r11 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        interfaceinvoke $r11.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void finish(java.util.Set)>($r6);

     label4:
        $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r9 == null goto label5;

        $r10 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        interfaceinvoke $r10.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void finish(java.util.Set)>($r7);

     label5:
        return;
    }

    public int countFieldsToPrint(org.joda.time.ReadablePeriod, int, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.ReadablePeriod r1;
        int i0, $i1;
        java.util.Locale r2;
        long $l2;
        byte $b3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.Locale;

        if i0 > 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        if $i1 == 4 goto label2;

        $l2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>(r1);

        $b3 = $l2 cmp 9223372036854775807L;

        if $b3 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public int calculatePrintedLength(org.joda.time.ReadablePeriod, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.ReadablePeriod r1;
        java.util.Locale r2;
        int i0, $i2, $i3, $i4, $i5, $i6, $i8, i13, $i14;
        byte $b1, $b7, $b11;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r3, $r4, $r5, $r6;
        long $l9, $l10, l12;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        r2 := @parameter1: java.util.Locale;

        l12 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>(r1);

        $b1 = l12 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        return 0;

     label1:
        $i2 = staticinvoke <org.joda.time.format.FormatUtils: int calculateDigitCount(long)>(l12);

        $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        i13 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $i4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i4 < 8 goto label5;

        $b7 = l12 cmp 0L;

        if $b7 >= 0 goto label2;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>(i13, 5);

        goto label3;

     label2:
        $i14 = staticinvoke <java.lang.Math: int max(int,int)>(i13, 4);

     label3:
        i13 = $i14 + 1;

        $i8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i8 != 9 goto label4;

        $l9 = staticinvoke <java.lang.Math: long abs(long)>(l12);

        $l10 = $l9 % 1000L;

        $b11 = $l10 cmp 0L;

        if $b11 != 0 goto label4;

        i13 = i13 + -4;

     label4:
        l12 = l12 / 1000L;

     label5:
        i0 = (int) l12;

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r6 == null goto label6;

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        $i6 = interfaceinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int calculatePrintedLength(int)>(i0);

        i13 = i13 + $i6;

     label6:
        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r3 == null goto label7;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        $i5 = interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int calculatePrintedLength(int)>(i0);

        i13 = i13 + $i5;

     label7:
        return i13;
    }

    public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePeriod, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        java.lang.StringBuffer r1;
        org.joda.time.ReadablePeriod r2;
        java.util.Locale r3;
        long l0, $l7, $l8, $l12;
        int i1, i2, i3, $i5, $i6, $i9, i13;
        byte $b4, $b10, $b11;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r4, $r5, $r8, $r9;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: org.joda.time.ReadablePeriod;

        r3 := @parameter2: java.util.Locale;

        l0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>(r2);

        $b4 = l0 cmp 9223372036854775807L;

        if $b4 != 0 goto label1;

        return;

     label1:
        i13 = (int) l0;

        $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i5 < 8 goto label2;

        $l12 = l0 / 1000L;

        i13 = (int) $l12;

     label2:
        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r4 == null goto label3;

        $r8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        interfaceinvoke $r8.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.lang.StringBuffer,int)>(r1, i13);

     label3:
        i1 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        i2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        if i2 > 1 goto label4;

        staticinvoke <org.joda.time.format.FormatUtils: void appendUnpaddedInteger(java.lang.StringBuffer,int)>(r1, i13);

        goto label5;

     label4:
        staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>(r1, i13, i2);

     label5:
        $i6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i6 < 8 goto label8;

        $l7 = staticinvoke <java.lang.Math: long abs(long)>(l0);

        $l8 = $l7 % 1000L;

        i3 = (int) $l8;

        $i9 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i9 == 8 goto label6;

        if i3 <= 0 goto label8;

     label6:
        $b10 = l0 cmp 0L;

        if $b10 >= 0 goto label7;

        $b11 = l0 cmp -1000L;

        if $b11 <= 0 goto label7;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(i1, 45);

     label7:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>(r1, i3, 3);

     label8:
        $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r9 == null goto label9;

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        interfaceinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.lang.StringBuffer,int)>(r1, i13);

     label9:
        return;
    }

    public void printTo(java.io.Writer, org.joda.time.ReadablePeriod, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        java.io.Writer r1;
        org.joda.time.ReadablePeriod r2;
        java.util.Locale r3;
        long l0, $l6, $l7, $l9;
        int i1, i2, $i4, $i5, $i8, i10;
        byte $b3;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r4, $r5, $r6, $r7;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: org.joda.time.ReadablePeriod;

        r3 := @parameter2: java.util.Locale;

        l0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: long getFieldValue(org.joda.time.ReadablePeriod)>(r2);

        $b3 = l0 cmp 9223372036854775807L;

        if $b3 != 0 goto label1;

        return;

     label1:
        i10 = (int) l0;

        $i4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i4 < 8 goto label2;

        $l9 = l0 / 1000L;

        i10 = (int) $l9;

     label2:
        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r4 == null goto label3;

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        interfaceinvoke $r6.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.io.Writer,int)>(r1, i10);

     label3:
        i1 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMinPrintedDigits>;

        if i1 > 1 goto label4;

        staticinvoke <org.joda.time.format.FormatUtils: void writeUnpaddedInteger(java.io.Writer,int)>(r1, i10);

        goto label5;

     label4:
        staticinvoke <org.joda.time.format.FormatUtils: void writePaddedInteger(java.io.Writer,int,int)>(r1, i10, i1);

     label5:
        $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i5 < 8 goto label7;

        $l6 = staticinvoke <java.lang.Math: long abs(long)>(l0);

        $l7 = $l6 % 1000L;

        i2 = (int) $l7;

        $i8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i8 == 8 goto label6;

        if i2 <= 0 goto label7;

     label6:
        virtualinvoke r1.<java.io.Writer: void write(int)>(46);

        staticinvoke <org.joda.time.format.FormatUtils: void writePaddedInteger(java.io.Writer,int,int)>(r1, i2, 3);

     label7:
        $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r7 == null goto label8;

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        interfaceinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.io.Writer,int)>(r1, i10);

     label8:
        return;
    }

    public int parseInto(org.joda.time.ReadWritablePeriod, java.lang.String, int, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.ReadWritablePeriod r1;
        java.lang.String r2;
        java.util.Locale r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i34, $i35, i36, i37, i38, i39, i42, i43, i44, i45, i46;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r4, $r5, $r6, $r7, $r9, $r10;
        boolean $z0, $z1, $z2, z3, z4, $z5;
        char $c25, c40;
        org.joda.time.PeriodType $r8;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.ReadWritablePeriod;

        r2 := @parameter1: java.lang.String;

        i34 := @parameter2: int;

        r3 := @parameter3: java.util.Locale;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        if $i0 != 4 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z3 = $z2;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if i34 < $i1 goto label05;

        if $z2 == 0 goto label03;

        $i35 = i34 ^ -1;

        goto label04;

     label03:
        $i35 = i34;

     label04:
        return $i35;

     label05:
        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r4 == null goto label08;

        $r10 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        i34 = interfaceinvoke $r10.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r2, i34);

        if i34 < 0 goto label06;

        z3 = 1;

        goto label08;

     label06:
        if $z2 != 0 goto label07;

        $i33 = i34 ^ -1;

        return $i33;

     label07:
        return i34;

     label08:
        i36 = -1;

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r5 == null goto label11;

        if z3 != 0 goto label11;

        $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        i36 = interfaceinvoke $r9.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>(r2, i34);

        if i36 < 0 goto label09;

        z3 = 1;

        goto label11;

     label09:
        if z3 != 0 goto label10;

        $i32 = i36 ^ -1;

        return $i32;

     label10:
        return i36;

     label11:
        if z3 != 0 goto label12;

        $r8 = interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: org.joda.time.PeriodType getPeriodType()>();

        $i31 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $z1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>($r8, $i31);

        if $z1 != 0 goto label12;

        return i34;

     label12:
        if i36 <= 0 goto label13;

        $i30 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits>;

        $i29 = i36 - i34;

        i37 = staticinvoke <java.lang.Math: int min(int,int)>($i30, $i29);

        goto label14;

     label13:
        $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits>;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        $i4 = $i3 - i34;

        i37 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i4);

     label14:
        i38 = 0;

        i39 = -1;

        z4 = 0;

     label15:
        if i38 >= i37 goto label28;

        $i15 = i34 + i38;

        c40 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i15);

        if i38 != 0 goto label22;

        if c40 == 45 goto label16;

        if c40 != 43 goto label22;

     label16:
        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues>;

        if $z0 != 0 goto label22;

        if c40 != 45 goto label17;

        $z5 = 1;

        goto label18;

     label17:
        $z5 = 0;

     label18:
        $i22 = i38 + 1;

        if $i22 >= i37 goto label28;

        $i23 = i34 + i38;

        $i24 = $i23 + 1;

        $c25 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i24);

        if $c25 < 48 goto label28;

        if $c25 <= 57 goto label19;

        goto label28;

     label19:
        if $z5 == 0 goto label20;

        i38 = i38 + 1;

        goto label21;

     label20:
        i34 = i34 + 1;

     label21:
        $i26 = i37 + 1;

        $i27 = virtualinvoke r2.<java.lang.String: int length()>();

        $i28 = $i27 - i34;

        i37 = staticinvoke <java.lang.Math: int min(int,int)>($i26, $i28);

        goto label15;

     label22:
        if c40 < 48 goto label23;

        if c40 > 57 goto label23;

        z4 = 1;

        goto label27;

     label23:
        if c40 == 46 goto label24;

        if c40 != 44 goto label28;

     label24:
        $i16 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i16 == 8 goto label25;

        $i21 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i21 != 9 goto label28;

     label25:
        if i39 < 0 goto label26;

        goto label28;

     label26:
        $i17 = i34 + i38;

        i39 = $i17 + 1;

        $i18 = i37 + 1;

        $i19 = virtualinvoke r2.<java.lang.String: int length()>();

        $i20 = $i19 - i34;

        i37 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i20);

     label27:
        i38 = i38 + 1;

        goto label15;

     label28:
        if z4 != 0 goto label29;

        $i14 = i34 ^ -1;

        return $i14;

     label29:
        if i36 < 0 goto label30;

        $i13 = i34 + i38;

        if $i13 == i36 goto label30;

        return i34;

     label30:
        $i5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i5 == 8 goto label31;

        $i10 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        if $i10 == 9 goto label31;

        $i11 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $i12 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i34, i38);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, $i11, $i12);

        goto label38;

     label31:
        if i39 >= 0 goto label32;

        $i9 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i34, i38);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 6, $i9);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 7, 0);

        goto label38;

     label32:
        $i6 = i39 - i34;

        $i7 = $i6 - 1;

        i42 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i34, $i7);

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 6, i42);

        $i8 = i34 + i38;

        i43 = $i8 - i39;

        if i43 > 0 goto label33;

        i44 = 0;

        goto label37;

     label33:
        if i43 < 3 goto label34;

        i44 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i39, 3);

        goto label36;

     label34:
        i45 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i39, i43);

        if i43 != 1 goto label35;

        i44 = i45 * 100;

        goto label36;

     label35:
        i44 = i45 * 10;

     label36:
        if i42 >= 0 goto label37;

        i44 = neg i44;

     label37:
        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 7, i44);

     label38:
        i46 = i34 + i38;

        if i46 < 0 goto label39;

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        if $r6 == null goto label39;

        $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>;

        i46 = interfaceinvoke $r7.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r2, i46);

     label39:
        return i46;
    }

    private int parseInt(java.lang.String, int, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        java.lang.String r1, $r2;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, i9, i10, i11, i13, i14, $i15, $i16;
        char $c4, c12;
        boolean z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: java.lang.String;

        i9 := @parameter1: int;

        i10 := @parameter2: int;

        if i10 < 10 goto label1;

        $i7 = i9 + i10;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i9, $i7);

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        return $i8;

     label1:
        if i10 > 0 goto label2;

        return 0;

     label2:
        i11 = i9 + 1;

        c12 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i9);

        i13 = i10 + -1;

        if c12 != 45 goto label4;

        i13 = i13 + -1;

        if i13 >= 0 goto label3;

        return 0;

     label3:
        z0 = 1;

        $i6 = i11;

        i11 = i11 + 1;

        c12 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);

        goto label5;

     label4:
        z0 = 0;

     label5:
        i14 = c12 + -48;

     label6:
        $i15 = i13;

        i13 = i13 - 1;

        if $i15 <= 0 goto label7;

        $i1 = i14 << 3;

        $i0 = i14 << 1;

        $i3 = $i1 + $i0;

        $i2 = i11;

        i11 = i11 + 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        $i5 = $i3 + $c4;

        i14 = $i5 - 48;

        goto label6;

     label7:
        if z0 == 0 goto label8;

        $i16 = neg i14;

        goto label9;

     label8:
        $i16 = i14;

     label9:
        return $i16;
    }

    long getFieldValue(org.joda.time.ReadablePeriod)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0, $r5, $r7, $r9, $r11;
        org.joda.time.ReadablePeriod r1;
        int i0, $i1, $i2, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i21, i23, i24, i25;
        org.joda.time.DurationFieldType $r2, $r3, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        long $l3, $l4, $l5, l20;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r4, $r6, $r8, $r10;
        org.joda.time.PeriodType r20;
        byte $b22;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        if $i1 != 4 goto label01;

        r20 = null;

        goto label02;

     label01:
        r20 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: org.joda.time.PeriodType getPeriodType()>();

     label02:
        if r20 == null goto label03;

        $i19 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $z4 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>(r20, $i19);

        if $z4 != 0 goto label03;

        return 9223372036854775807L;

     label03:
        $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        tableswitch($i2)
        {
            case 0: goto label05;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label10;
            case 6: goto label11;
            case 7: goto label12;
            case 8: goto label13;
            case 9: goto label13;
            default: goto label04;
        };

     label04:
        return 9223372036854775807L;

     label05:
        $r19 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $i18 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r19);

        l20 = (long) $i18;

        goto label14;

     label06:
        $r18 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();

        $i17 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r18);

        l20 = (long) $i17;

        goto label14;

     label07:
        $r17 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();

        $i16 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r17);

        l20 = (long) $i16;

        goto label14;

     label08:
        $r16 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $i15 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r16);

        l20 = (long) $i15;

        goto label14;

     label09:
        $r15 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $i14 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r15);

        l20 = (long) $i14;

        goto label14;

     label10:
        $r14 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $i13 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r14);

        l20 = (long) $i13;

        goto label14;

     label11:
        $r13 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $i12 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r13);

        l20 = (long) $i12;

        goto label14;

     label12:
        $r12 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $i11 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r12);

        l20 = (long) $i11;

        goto label14;

     label13:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        i21 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r2);

        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        i0 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r3);

        $l3 = (long) i21;

        $l5 = $l3 * 1000L;

        $l4 = (long) i0;

        l20 = $l5 + $l4;

     label14:
        $b22 = l20 cmp 0L;

        if $b22 != 0 goto label26;

        $i6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting>;

        tableswitch($i6)
        {
            case 1: goto label21;
            case 2: goto label16;
            case 3: goto label26;
            case 4: goto label26;
            case 5: goto label15;
            default: goto label26;
        };

     label15:
        return 9223372036854775807L;

     label16:
        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isZero(org.joda.time.ReadablePeriod)>(r1);

        if $z0 == 0 goto label20;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $i7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $r5 = $r4[$i7];

        if $r5 != r0 goto label20;

        $i8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        i23 = $i8 + 1;

     label17:
        if i23 > 9 goto label19;

        $z1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>(r20, i23);

        if $z1 == 0 goto label18;

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r7 = $r6[i23];

        if $r7 == null goto label18;

        return 9223372036854775807L;

     label18:
        i23 = i23 + 1;

        goto label17;

     label19:
        goto label26;

     label20:
        return 9223372036854775807L;

     label21:
        $z2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isZero(org.joda.time.ReadablePeriod)>(r1);

        if $z2 == 0 goto label25;

        $r8 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $i9 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        $r9 = $r8[$i9];

        if $r9 != r0 goto label25;

        $i10 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        i24 = staticinvoke <java.lang.Math: int min(int,int)>($i10, 8);

        i25 = i24 + -1;

     label22:
        if i25 < 0 goto label24;

        if i25 > 9 goto label24;

        $z3 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>(r20, i25);

        if $z3 == 0 goto label23;

        $r10 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r11 = $r10[i25];

        if $r11 == null goto label23;

        return 9223372036854775807L;

     label23:
        i25 = i25 + -1;

        goto label22;

     label24:
        goto label26;

     label25:
        return 9223372036854775807L;

     label26:
        return l20;
    }

    boolean isZero(org.joda.time.ReadablePeriod)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.ReadablePeriod r1;
        int i0, $i1, i2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        i2 = 0;

        i0 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int size()>();

     label1:
        if i2 >= i0 goto label3;

        $i1 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int getValue(int)>(i2);

        if $i1 == 0 goto label2;

        return 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    boolean isSupported(org.joda.time.PeriodType, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.PeriodType r1;
        int i0;
        org.joda.time.DurationFieldType $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.PeriodType;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label10;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        $r11 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $z9 = virtualinvoke r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r11);

        return $z9;

     label03:
        $r10 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();

        $z8 = virtualinvoke r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r10);

        return $z8;

     label04:
        $r9 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();

        $z7 = virtualinvoke r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r9);

        return $z7;

     label05:
        $r8 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $z6 = virtualinvoke r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r8);

        return $z6;

     label06:
        $r7 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $z5 = virtualinvoke r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r7);

        return $z5;

     label07:
        $r6 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $z4 = virtualinvoke r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r6);

        return $z4;

     label08:
        $r5 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $z3 = virtualinvoke r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r5);

        return $z3;

     label09:
        $r4 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $z2 = virtualinvoke r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r4);

        return $z2;

     label10:
        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $z0 = virtualinvoke r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r2);

        if $z0 != 0 goto label11;

        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $z1 = virtualinvoke r1.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r3);

        if $z1 == 0 goto label12;

     label11:
        $z10 = 1;

        goto label13;

     label12:
        $z10 = 0;

     label13:
        return $z10;
    }

    void setFieldValue(org.joda.time.ReadWritablePeriod, int, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        org.joda.time.ReadWritablePeriod r1;
        int i0, i1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        r1 := @parameter0: org.joda.time.ReadWritablePeriod;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            default: goto label01;
        };

     label01:
        goto label10;

     label02:
        interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: void setYears(int)>(i1);

        goto label10;

     label03:
        interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: void setMonths(int)>(i1);

        goto label10;

     label04:
        interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: void setWeeks(int)>(i1);

        goto label10;

     label05:
        interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: void setDays(int)>(i1);

        goto label10;

     label06:
        interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: void setHours(int)>(i1);

        goto label10;

     label07:
        interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: void setMinutes(int)>(i1);

        goto label10;

     label08:
        interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: void setSeconds(int)>(i1);

        goto label10;

     label09:
        interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: void setMillis(int)>(i1);

     label10:
        return;
    }

    int getFieldType()
    {
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r0;
        int $i0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $i0 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>;

        return $i0;
    }
}
