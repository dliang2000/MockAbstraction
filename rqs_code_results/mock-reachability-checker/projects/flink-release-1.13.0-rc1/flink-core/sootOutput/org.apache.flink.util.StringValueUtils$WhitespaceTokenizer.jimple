public final class org.apache.flink.util.StringValueUtils$WhitespaceTokenizer extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private org.apache.flink.types.StringValue toTokenize;
    private int pos;
    private int limit;

    public void <init>()
    {
        org.apache.flink.util.StringValueUtils$WhitespaceTokenizer r0;

        r0 := @this: org.apache.flink.util.StringValueUtils$WhitespaceTokenizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setStringToTokenize(org.apache.flink.types.StringValue)
    {
        org.apache.flink.util.StringValueUtils$WhitespaceTokenizer r0;
        org.apache.flink.types.StringValue r1;
        int $i0;

        r0 := @this: org.apache.flink.util.StringValueUtils$WhitespaceTokenizer;

        r1 := @parameter0: org.apache.flink.types.StringValue;

        r0.<org.apache.flink.util.StringValueUtils$WhitespaceTokenizer: org.apache.flink.types.StringValue toTokenize> = r1;

        r0.<org.apache.flink.util.StringValueUtils$WhitespaceTokenizer: int pos> = 0;

        $i0 = virtualinvoke r1.<org.apache.flink.types.StringValue: int length()>();

        r0.<org.apache.flink.util.StringValueUtils$WhitespaceTokenizer: int limit> = $i0;

        return;
    }

    public boolean next(org.apache.flink.types.StringValue)
    {
        org.apache.flink.util.StringValueUtils$WhitespaceTokenizer r0;
        org.apache.flink.types.StringValue r1, $r3, $r4;
        char[] r2;
        int i0, i1, $i2, i5;
        char $c3, $c4;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.util.StringValueUtils$WhitespaceTokenizer;

        r1 := @parameter0: org.apache.flink.types.StringValue;

        $r3 = r0.<org.apache.flink.util.StringValueUtils$WhitespaceTokenizer: org.apache.flink.types.StringValue toTokenize>;

        r2 = virtualinvoke $r3.<org.apache.flink.types.StringValue: char[] getCharArray()>();

        i0 = r0.<org.apache.flink.util.StringValueUtils$WhitespaceTokenizer: int limit>;

        i5 = r0.<org.apache.flink.util.StringValueUtils$WhitespaceTokenizer: int pos>;

     label1:
        if i5 >= i0 goto label2;

        $c4 = r2[i5];

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c4);

        if $z1 == 0 goto label2;

        i5 = i5 + 1;

        goto label1;

     label2:
        if i5 < i0 goto label3;

        r0.<org.apache.flink.util.StringValueUtils$WhitespaceTokenizer: int pos> = i5;

        return 0;

     label3:
        i1 = i5;

     label4:
        if i5 >= i0 goto label5;

        $c3 = r2[i5];

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);

        if $z0 != 0 goto label5;

        i5 = i5 + 1;

        goto label4;

     label5:
        r0.<org.apache.flink.util.StringValueUtils$WhitespaceTokenizer: int pos> = i5;

        $r4 = r0.<org.apache.flink.util.StringValueUtils$WhitespaceTokenizer: org.apache.flink.types.StringValue toTokenize>;

        $i2 = i5 - i1;

        virtualinvoke r1.<org.apache.flink.types.StringValue: void setValue(org.apache.flink.types.StringValue,int,int)>($r4, i1, $i2);

        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.util.StringValueUtils$WhitespaceTokenizer: long serialVersionUID> = 1L;

        return;
    }
}
