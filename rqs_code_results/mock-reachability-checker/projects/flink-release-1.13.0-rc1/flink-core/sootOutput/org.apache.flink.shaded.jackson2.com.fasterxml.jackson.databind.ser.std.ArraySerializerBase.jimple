public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer
{
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property;
    protected final java.lang.Boolean _unwrapSingle;

    protected void <init>(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase r0;
        java.lang.Class r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle> = null;

        return;
    }

    protected void <init>(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle> = null;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase r0, r1;
        java.lang.Class $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r3;
        java.lang.Boolean $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        $r2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Class _handledType>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>($r2, 0);

        $r3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = $r3;

        $r4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle> = $r4;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        java.lang.Boolean r3;
        java.lang.Class $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r3 := @parameter2: java.lang.Boolean;

        $r4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Class _handledType>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>($r4, 0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle> = r3;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        java.lang.Class $r3;
        java.lang.Boolean $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Class _handledType>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>($r3, 0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = r2;

        $r4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle> = $r4;

        return;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, java.lang.Boolean);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r3;
        java.lang.Class $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature $r5;
        java.lang.Boolean $r6, r8;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        if r2 == null goto label1;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Class handledType()>();

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(r1, r2, $r4);

        if r3 == null goto label1;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;

        r8 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getFeature(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature)>($r5);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r8, $r6);

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean)>(r2, r8);

        return $r7;

     label1:
        return r0;
    }

    public void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: boolean _shouldUnwrapSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r3);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: boolean hasSingleElement(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void serializeContents(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        return;

     label1:
        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeStartArray(java.lang.Object)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void serializeContents(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();

        return;
    }

    public final void serializeWithType(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId r5, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        $r7 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r1, $r6);

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, $r7);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void setCurrentValue(java.lang.Object)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void serializeContents(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, r5);

        return;
    }

    protected abstract void serializeContents(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;

    protected final boolean _shouldUnwrapSingle(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.Boolean $r2, $r3;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle>;

        if $r2 != null goto label1;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r4);

        return $z1;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle>;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }
}
