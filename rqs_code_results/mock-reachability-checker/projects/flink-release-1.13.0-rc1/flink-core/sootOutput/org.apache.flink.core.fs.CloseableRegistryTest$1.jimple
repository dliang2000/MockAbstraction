class org.apache.flink.core.fs.CloseableRegistryTest$1 extends org.apache.flink.core.fs.AbstractCloseableRegistryTest$ProducerThread
{
    final java.util.concurrent.atomic.AtomicInteger val$unclosedCounter;
    final org.apache.flink.core.fs.CloseableRegistryTest this$0;

    void <init>(org.apache.flink.core.fs.CloseableRegistryTest, org.apache.flink.util.AbstractCloseableRegistry, java.util.concurrent.atomic.AtomicInteger, int, java.util.concurrent.atomic.AtomicInteger)
    {
        org.apache.flink.core.fs.CloseableRegistryTest$1 r0;
        org.apache.flink.core.fs.CloseableRegistryTest r1;
        org.apache.flink.util.AbstractCloseableRegistry r2;
        java.util.concurrent.atomic.AtomicInteger r3, r4;
        int i0;

        r0 := @this: org.apache.flink.core.fs.CloseableRegistryTest$1;

        r1 := @parameter0: org.apache.flink.core.fs.CloseableRegistryTest;

        r2 := @parameter1: org.apache.flink.util.AbstractCloseableRegistry;

        r3 := @parameter2: java.util.concurrent.atomic.AtomicInteger;

        i0 := @parameter3: int;

        r4 := @parameter4: java.util.concurrent.atomic.AtomicInteger;

        r0.<org.apache.flink.core.fs.CloseableRegistryTest$1: org.apache.flink.core.fs.CloseableRegistryTest this$0> = r1;

        r0.<org.apache.flink.core.fs.CloseableRegistryTest$1: java.util.concurrent.atomic.AtomicInteger val$unclosedCounter> = r4;

        specialinvoke r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$ProducerThread: void <init>(org.apache.flink.util.AbstractCloseableRegistry,java.util.concurrent.atomic.AtomicInteger,int)>(r2, r3, i0);

        return;
    }

    protected void createAndRegisterStream() throws java.io.IOException
    {
        org.apache.flink.core.fs.CloseableRegistryTest$1 r0;
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestStream $r2;
        java.util.concurrent.atomic.AtomicInteger $r3;
        org.apache.flink.util.AbstractCloseableRegistry $r4;

        r0 := @this: org.apache.flink.core.fs.CloseableRegistryTest$1;

        $r2 = new org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestStream;

        $r3 = r0.<org.apache.flink.core.fs.CloseableRegistryTest$1: java.util.concurrent.atomic.AtomicInteger val$unclosedCounter>;

        specialinvoke $r2.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestStream: void <init>(java.util.concurrent.atomic.AtomicInteger)>($r3);

        $r4 = r0.<org.apache.flink.core.fs.CloseableRegistryTest$1: org.apache.flink.util.AbstractCloseableRegistry registry>;

        virtualinvoke $r4.<org.apache.flink.util.AbstractCloseableRegistry: void registerCloseable(java.io.Closeable)>($r2);

        return;
    }
}
