class org.apache.flink.core.io.DefaultSplitAssignerTest$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.apache.flink.api.common.io.DefaultInputSplitAssigner val$ia;
    final java.util.concurrent.atomic.AtomicInteger val$splitsRetrieved;
    final java.util.concurrent.atomic.AtomicInteger val$sumOfIds;
    final org.apache.flink.core.io.DefaultSplitAssignerTest this$0;

    void <init>(org.apache.flink.core.io.DefaultSplitAssignerTest, org.apache.flink.api.common.io.DefaultInputSplitAssigner, java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicInteger)
    {
        org.apache.flink.core.io.DefaultSplitAssignerTest$1 r0;
        org.apache.flink.core.io.DefaultSplitAssignerTest r1;
        org.apache.flink.api.common.io.DefaultInputSplitAssigner r2;
        java.util.concurrent.atomic.AtomicInteger r3, r4;

        r0 := @this: org.apache.flink.core.io.DefaultSplitAssignerTest$1;

        r1 := @parameter0: org.apache.flink.core.io.DefaultSplitAssignerTest;

        r2 := @parameter1: org.apache.flink.api.common.io.DefaultInputSplitAssigner;

        r3 := @parameter2: java.util.concurrent.atomic.AtomicInteger;

        r4 := @parameter3: java.util.concurrent.atomic.AtomicInteger;

        r0.<org.apache.flink.core.io.DefaultSplitAssignerTest$1: org.apache.flink.core.io.DefaultSplitAssignerTest this$0> = r1;

        r0.<org.apache.flink.core.io.DefaultSplitAssignerTest$1: org.apache.flink.api.common.io.DefaultInputSplitAssigner val$ia> = r2;

        r0.<org.apache.flink.core.io.DefaultSplitAssignerTest$1: java.util.concurrent.atomic.AtomicInteger val$splitsRetrieved> = r3;

        r0.<org.apache.flink.core.io.DefaultSplitAssignerTest$1: java.util.concurrent.atomic.AtomicInteger val$sumOfIds> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        org.apache.flink.core.io.DefaultSplitAssignerTest$1 r0;
        org.apache.flink.api.common.io.DefaultInputSplitAssigner $r3;
        org.apache.flink.core.io.InputSplit $r4;
        org.apache.flink.core.io.GenericInputSplit $r5;
        java.util.concurrent.atomic.AtomicInteger $r6, $r7;
        int $i1;

        r0 := @this: org.apache.flink.core.io.DefaultSplitAssignerTest$1;

     label1:
        $r3 = r0.<org.apache.flink.core.io.DefaultSplitAssignerTest$1: org.apache.flink.api.common.io.DefaultInputSplitAssigner val$ia>;

        $r4 = virtualinvoke $r3.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: org.apache.flink.core.io.InputSplit getNextInputSplit(java.lang.String,int)>("", 0);

        $r5 = (org.apache.flink.core.io.GenericInputSplit) $r4;

        if $r5 == null goto label2;

        $r6 = r0.<org.apache.flink.core.io.DefaultSplitAssignerTest$1: java.util.concurrent.atomic.AtomicInteger val$splitsRetrieved>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r7 = r0.<org.apache.flink.core.io.DefaultSplitAssignerTest$1: java.util.concurrent.atomic.AtomicInteger val$sumOfIds>;

        $i1 = virtualinvoke $r5.<org.apache.flink.core.io.GenericInputSplit: int getSplitNumber()>();

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i1);

        goto label1;

     label2:
        return;
    }
}
