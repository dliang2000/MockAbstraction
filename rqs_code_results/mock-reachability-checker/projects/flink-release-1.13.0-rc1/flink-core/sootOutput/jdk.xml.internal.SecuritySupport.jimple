class jdk.xml.internal.SecuritySupport extends java.lang.Object
{
    static final java.util.Properties cacheProps;
    static volatile boolean firstTime;

    private void <init>()
    {
        jdk.xml.internal.SecuritySupport r0;

        r0 := @this: jdk.xml.internal.SecuritySupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getSystemProperty(java.lang.String)
    {
        java.lang.String r0, $r3;
        jdk.xml.internal.SecuritySupport$1 $r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new jdk.xml.internal.SecuritySupport$1;

        specialinvoke $r1.<jdk.xml.internal.SecuritySupport$1: void <init>(java.lang.String)>(r0);

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public static java.lang.Object getJAXPSystemProperty(java.lang.Class, java.lang.String, java.lang.String)
    {
        java.lang.Class r0, $r3, $r4;
        java.lang.String r1, r2, r10;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5, $r7, $r9;
        java.lang.Boolean $r6;
        int $i0;
        java.lang.Integer $r8;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r10 = staticinvoke <jdk.xml.internal.SecuritySupport: java.lang.String getJAXPSystemProperty(java.lang.String)>(r1);

        if r10 != null goto label1;

        r10 = r2;

     label1:
        $r3 = class "Ljava/lang/Integer;";

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label2;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r10);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r8);

        return $r9;

     label2:
        $r4 = class "Ljava/lang/Boolean;";

        $z1 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 == 0 goto label3;

        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r10);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r7 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r6);

        return $r7;

     label3:
        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r10);

        return $r5;
    }

    public static java.lang.String getJAXPSystemProperty(java.lang.String)
    {
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <jdk.xml.internal.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>(r0);

        if r1 != null goto label1;

        r1 = staticinvoke <jdk.xml.internal.SecuritySupport: java.lang.String readJAXPProperty(java.lang.String)>(r0);

     label1:
        return r1;
    }

    public static java.lang.String readJAXPProperty(java.lang.String)
    {
        java.lang.String r0, r1, $r9, $r11, $r14, r25;
        boolean $z0, $z1, $z2;
        java.util.Properties $r6, $r7, $r18;
        java.lang.StringBuilder $r8, $r10, $r12, $r13, $r15, $r16;
        java.io.File $r17;
        java.io.IOException $r19, $r20, $r21, $r23;
        java.lang.Throwable $r22, $r24;
        java.io.FileInputStream r26;

        r0 := @parameter0: java.lang.String;

        r25 = null;

        r26 = null;

     label01:
        $z0 = <jdk.xml.internal.SecuritySupport: boolean firstTime>;

        if $z0 == 0 goto label08;

        $r7 = <jdk.xml.internal.SecuritySupport: java.util.Properties cacheProps>;

        entermonitor $r7;

     label02:
        $z1 = <jdk.xml.internal.SecuritySupport: boolean firstTime>;

        if $z1 == 0 goto label04;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = staticinvoke <jdk.xml.internal.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>("java.home");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = <java.io.File: java.lang.String separator>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");

        $r14 = <java.io.File: java.lang.String separator>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jaxp.properties");

        r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.io.File;

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>(r1);

        $z2 = staticinvoke <jdk.xml.internal.SecuritySupport: boolean getFileExists(java.io.File)>($r17);

        if $z2 == 0 goto label03;

        r26 = staticinvoke <jdk.xml.internal.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)>($r17);

        $r18 = <jdk.xml.internal.SecuritySupport: java.util.Properties cacheProps>;

        virtualinvoke $r18.<java.util.Properties: void load(java.io.InputStream)>(r26);

     label03:
        <jdk.xml.internal.SecuritySupport: boolean firstTime> = 0;

     label04:
        exitmonitor $r7;

     label05:
        goto label08;

     label06:
        $r22 := @caughtexception;

        exitmonitor $r7;

     label07:
        throw $r22;

     label08:
        $r6 = <jdk.xml.internal.SecuritySupport: java.util.Properties cacheProps>;

        r25 = virtualinvoke $r6.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

     label09:
        if r26 == null goto label23;

     label10:
        virtualinvoke r26.<java.io.InputStream: void close()>();

     label11:
        goto label23;

     label12:
        $r20 := @caughtexception;

        goto label23;

     label13:
        $r19 := @caughtexception;

        if r26 == null goto label23;

     label14:
        virtualinvoke r26.<java.io.InputStream: void close()>();

     label15:
        goto label23;

     label16:
        $r21 := @caughtexception;

        goto label23;

     label17:
        $r24 := @caughtexception;

     label18:
        if r26 == null goto label22;

     label19:
        virtualinvoke r26.<java.io.InputStream: void close()>();

     label20:
        goto label22;

     label21:
        $r23 := @caughtexception;

     label22:
        throw $r24;

     label23:
        return r25;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label01 to label09 with label13;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label01 to label09 with label17;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    static boolean getFileExists(java.io.File)
    {
        java.io.File r0;
        jdk.xml.internal.SecuritySupport$2 $r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r1 = new jdk.xml.internal.SecuritySupport$2;

        specialinvoke $r1.<jdk.xml.internal.SecuritySupport$2: void <init>(java.io.File)>(r0);

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    static java.io.FileInputStream getFileInputStream(java.io.File) throws java.io.FileNotFoundException
    {
        java.io.File r0;
        jdk.xml.internal.SecuritySupport$3 $r2;
        java.lang.Object $r3;
        java.io.FileInputStream $r4;
        java.security.PrivilegedActionException $r5;
        java.lang.Exception $r6;
        java.io.FileNotFoundException $r7;

        r0 := @parameter0: java.io.File;

     label1:
        $r2 = new jdk.xml.internal.SecuritySupport$3;

        specialinvoke $r2.<jdk.xml.internal.SecuritySupport$3: void <init>(java.io.File)>(r0);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r2);

        $r4 = (java.io.FileInputStream) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<java.security.PrivilegedActionException: java.lang.Exception getException()>();

        $r7 = (java.io.FileNotFoundException) $r6;

        throw $r7;

        catch java.security.PrivilegedActionException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.Properties $r0;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        <jdk.xml.internal.SecuritySupport: java.util.Properties cacheProps> = $r0;

        <jdk.xml.internal.SecuritySupport: boolean firstTime> = 1;

        return;
    }
}
