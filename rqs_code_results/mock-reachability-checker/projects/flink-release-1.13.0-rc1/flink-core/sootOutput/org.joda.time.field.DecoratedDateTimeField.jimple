public abstract class org.joda.time.field.DecoratedDateTimeField extends org.joda.time.field.BaseDateTimeField
{
    private static final long serialVersionUID;
    private final org.joda.time.DateTimeField iField;

    protected void <init>(org.joda.time.DateTimeField, org.joda.time.DateTimeFieldType)
    {
        org.joda.time.field.DecoratedDateTimeField r0;
        org.joda.time.DateTimeField r1;
        org.joda.time.DateTimeFieldType r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: org.joda.time.field.DecoratedDateTimeField;

        r1 := @parameter0: org.joda.time.DateTimeField;

        r2 := @parameter1: org.joda.time.DateTimeFieldType;

        specialinvoke r0.<org.joda.time.field.BaseDateTimeField: void <init>(org.joda.time.DateTimeFieldType)>(r2);

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The field must not be null");

        throw $r4;

     label1:
        $z0 = virtualinvoke r1.<org.joda.time.DateTimeField: boolean isSupported()>();

        if $z0 != 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The field must be supported");

        throw $r3;

     label2:
        r0.<org.joda.time.field.DecoratedDateTimeField: org.joda.time.DateTimeField iField> = r1;

        return;
    }

    public final org.joda.time.DateTimeField getWrappedField()
    {
        org.joda.time.field.DecoratedDateTimeField r0;
        org.joda.time.DateTimeField $r1;

        r0 := @this: org.joda.time.field.DecoratedDateTimeField;

        $r1 = r0.<org.joda.time.field.DecoratedDateTimeField: org.joda.time.DateTimeField iField>;

        return $r1;
    }

    public boolean isLenient()
    {
        org.joda.time.field.DecoratedDateTimeField r0;
        org.joda.time.DateTimeField $r1;
        boolean $z0;

        r0 := @this: org.joda.time.field.DecoratedDateTimeField;

        $r1 = r0.<org.joda.time.field.DecoratedDateTimeField: org.joda.time.DateTimeField iField>;

        $z0 = virtualinvoke $r1.<org.joda.time.DateTimeField: boolean isLenient()>();

        return $z0;
    }

    public int get(long)
    {
        org.joda.time.field.DecoratedDateTimeField r0;
        long l0;
        org.joda.time.DateTimeField $r1;
        int $i1;

        r0 := @this: org.joda.time.field.DecoratedDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.field.DecoratedDateTimeField: org.joda.time.DateTimeField iField>;

        $i1 = virtualinvoke $r1.<org.joda.time.DateTimeField: int get(long)>(l0);

        return $i1;
    }

    public long set(long, int)
    {
        org.joda.time.field.DecoratedDateTimeField r0;
        long l0, $l2;
        int i1;
        org.joda.time.DateTimeField $r1;

        r0 := @this: org.joda.time.field.DecoratedDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<org.joda.time.field.DecoratedDateTimeField: org.joda.time.DateTimeField iField>;

        $l2 = virtualinvoke $r1.<org.joda.time.DateTimeField: long set(long,int)>(l0, i1);

        return $l2;
    }

    public org.joda.time.DurationField getDurationField()
    {
        org.joda.time.field.DecoratedDateTimeField r0;
        org.joda.time.DateTimeField $r1;
        org.joda.time.DurationField $r2;

        r0 := @this: org.joda.time.field.DecoratedDateTimeField;

        $r1 = r0.<org.joda.time.field.DecoratedDateTimeField: org.joda.time.DateTimeField iField>;

        $r2 = virtualinvoke $r1.<org.joda.time.DateTimeField: org.joda.time.DurationField getDurationField()>();

        return $r2;
    }

    public org.joda.time.DurationField getRangeDurationField()
    {
        org.joda.time.field.DecoratedDateTimeField r0;
        org.joda.time.DateTimeField $r1;
        org.joda.time.DurationField $r2;

        r0 := @this: org.joda.time.field.DecoratedDateTimeField;

        $r1 = r0.<org.joda.time.field.DecoratedDateTimeField: org.joda.time.DateTimeField iField>;

        $r2 = virtualinvoke $r1.<org.joda.time.DateTimeField: org.joda.time.DurationField getRangeDurationField()>();

        return $r2;
    }

    public int getMinimumValue()
    {
        org.joda.time.field.DecoratedDateTimeField r0;
        org.joda.time.DateTimeField $r1;
        int $i0;

        r0 := @this: org.joda.time.field.DecoratedDateTimeField;

        $r1 = r0.<org.joda.time.field.DecoratedDateTimeField: org.joda.time.DateTimeField iField>;

        $i0 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getMinimumValue()>();

        return $i0;
    }

    public int getMaximumValue()
    {
        org.joda.time.field.DecoratedDateTimeField r0;
        org.joda.time.DateTimeField $r1;
        int $i0;

        r0 := @this: org.joda.time.field.DecoratedDateTimeField;

        $r1 = r0.<org.joda.time.field.DecoratedDateTimeField: org.joda.time.DateTimeField iField>;

        $i0 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getMaximumValue()>();

        return $i0;
    }

    public long roundFloor(long)
    {
        org.joda.time.field.DecoratedDateTimeField r0;
        long l0, $l1;
        org.joda.time.DateTimeField $r1;

        r0 := @this: org.joda.time.field.DecoratedDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.field.DecoratedDateTimeField: org.joda.time.DateTimeField iField>;

        $l1 = virtualinvoke $r1.<org.joda.time.DateTimeField: long roundFloor(long)>(l0);

        return $l1;
    }

    public static void <clinit>()
    {
        <org.joda.time.field.DecoratedDateTimeField: long serialVersionUID> = 203115783733757597L;

        return;
    }
}
