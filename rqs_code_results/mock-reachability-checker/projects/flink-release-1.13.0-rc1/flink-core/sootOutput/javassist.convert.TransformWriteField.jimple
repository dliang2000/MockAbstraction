public final class javassist.convert.TransformWriteField extends javassist.convert.TransformReadField
{

    public void <init>(javassist.convert.Transformer, javassist.CtField, java.lang.String, java.lang.String)
    {
        javassist.convert.TransformWriteField r0;
        javassist.convert.Transformer r1;
        javassist.CtField r2;
        java.lang.String r3, r4;

        r0 := @this: javassist.convert.TransformWriteField;

        r1 := @parameter0: javassist.convert.Transformer;

        r2 := @parameter1: javassist.CtField;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<javassist.convert.TransformReadField: void <init>(javassist.convert.Transformer,javassist.CtField,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    public int transform(javassist.CtClass, int, javassist.bytecode.CodeIterator, javassist.bytecode.ConstPool) throws javassist.bytecode.BadBytecode
    {
        javassist.convert.TransformWriteField r0;
        javassist.CtClass r1, $r7;
        javassist.bytecode.CodeIterator r2;
        javassist.bytecode.ConstPool r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i13, i14, i15, $i16;
        java.lang.String r4, $r6, $r9, r14, $r15;
        javassist.ClassPool $r5;
        boolean $z0;
        javassist.bytecode.CodeAttribute r8;
        char c12;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;

        r0 := @this: javassist.convert.TransformWriteField;

        r1 := @parameter0: javassist.CtClass;

        i11 := @parameter1: int;

        r2 := @parameter2: javassist.bytecode.CodeIterator;

        r3 := @parameter3: javassist.bytecode.ConstPool;

        i0 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>(i11);

        if i0 == 181 goto label1;

        if i0 != 179 goto label6;

     label1:
        $i3 = i11 + 1;

        i1 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i3);

        $r5 = virtualinvoke r1.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r7 = r0.<javassist.convert.TransformWriteField: javassist.CtClass fieldClass>;

        $r6 = r0.<javassist.convert.TransformWriteField: java.lang.String fieldname>;

        $z0 = r0.<javassist.convert.TransformWriteField: boolean isPrivate>;

        r4 = staticinvoke <javassist.convert.TransformWriteField: java.lang.String isField(javassist.ClassPool,javassist.bytecode.ConstPool,javassist.CtClass,java.lang.String,boolean,int)>($r5, r3, $r7, $r6, $z0, i1);

        if r4 == null goto label6;

        if i0 != 179 goto label5;

        r8 = virtualinvoke r2.<javassist.bytecode.CodeIterator: javassist.bytecode.CodeAttribute get()>();

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void move(int)>(i11);

        c12 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        if c12 == 74 goto label2;

        if c12 != 68 goto label3;

     label2:
        i13 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int insertGap(int)>(3);

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void writeByte(int,int)>(1, i13);

        $i4 = i13 + 1;

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void writeByte(int,int)>(91, $i4);

        $i5 = i13 + 2;

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void writeByte(int,int)>(87, $i5);

        $i6 = virtualinvoke r8.<javassist.bytecode.CodeAttribute: int getMaxStack()>();

        $i7 = $i6 + 2;

        virtualinvoke r8.<javassist.bytecode.CodeAttribute: void setMaxStack(int)>($i7);

        goto label4;

     label3:
        i14 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int insertGap(int)>(2);

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void writeByte(int,int)>(1, i14);

        $i8 = i14 + 1;

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void writeByte(int,int)>(95, $i8);

        $i9 = virtualinvoke r8.<javassist.bytecode.CodeAttribute: int getMaxStack()>();

        $i10 = $i9 + 1;

        virtualinvoke r8.<javassist.bytecode.CodeAttribute: void setMaxStack(int)>($i10);

     label4:
        i11 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int next()>();

     label5:
        $r9 = r0.<javassist.convert.TransformWriteField: java.lang.String methodClassname>;

        i15 = virtualinvoke r3.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Ljava/lang/Object;");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")V");

        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = r0.<javassist.convert.TransformWriteField: java.lang.String methodName>;

        i2 = virtualinvoke r3.<javassist.bytecode.ConstPool: int addMethodrefInfo(int,java.lang.String,java.lang.String)>(i15, $r15, r14);

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void writeByte(int,int)>(184, i11);

        $i16 = i11 + 1;

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void write16bit(int,int)>(i2, $i16);

     label6:
        return i11;
    }
}
