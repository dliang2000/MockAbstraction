public interface  org.apache.flink.util.AutoCloseableAsync extends java.lang.Object implements java.lang.AutoCloseable
{

    public abstract java.util.concurrent.CompletableFuture closeAsync();

    public void close() throws java.lang.Exception
    {
        org.apache.flink.util.AutoCloseableAsync r0;
        java.util.concurrent.CompletableFuture $r2;
        java.util.concurrent.ExecutionException $r4;
        org.apache.flink.util.FlinkException $r5;
        java.lang.Throwable $r6;

        r0 := @this: org.apache.flink.util.AutoCloseableAsync;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.flink.util.AutoCloseableAsync: java.util.concurrent.CompletableFuture closeAsync()>();

        virtualinvoke $r2.<java.util.concurrent.CompletableFuture: java.lang.Object get()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.flink.util.FlinkException;

        $r6 = staticinvoke <org.apache.flink.util.ExceptionUtils: java.lang.Throwable stripExecutionException(java.lang.Throwable)>($r4);

        specialinvoke $r5.<org.apache.flink.util.FlinkException: void <init>(java.lang.String,java.lang.Throwable)>("Could not close resource.", $r6);

        throw $r5;

     label4:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }
}
