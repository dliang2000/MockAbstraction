public class org.apache.logging.log4j.message.ReusableSimpleMessage extends java.lang.Object implements org.apache.logging.log4j.message.ReusableMessage, java.lang.CharSequence, org.apache.logging.log4j.message.ParameterVisitable, org.apache.logging.log4j.message.Clearable
{
    private static final long serialVersionUID;
    private static java.lang.Object[] EMPTY_PARAMS;
    private java.lang.CharSequence charSequence;

    public void <init>()
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void set(java.lang.String)
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        java.lang.String r1;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence> = r1;

        return;
    }

    public void set(java.lang.CharSequence)
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        java.lang.CharSequence r1;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence> = r1;

        return;
    }

    public java.lang.String getFormattedMessage()
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        $r1 = r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        return $r2;
    }

    public java.lang.String getFormat()
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        java.lang.CharSequence $r1, $r2;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        $r1 = r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence>;

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence>;

        $r3 = (java.lang.String) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.lang.Object[] getParameters()
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        java.lang.Object[] $r1;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        $r1 = <org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.Object[] EMPTY_PARAMS>;

        return $r1;
    }

    public java.lang.Throwable getThrowable()
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        return null;
    }

    public void formatTo(java.lang.StringBuilder)
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        java.lang.StringBuilder r1;
        java.lang.CharSequence $r2;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        r1 := @parameter0: java.lang.StringBuilder;

        $r2 = r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r2);

        return;
    }

    public java.lang.Object[] swapParameters(java.lang.Object[])
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        java.lang.Object[] r1;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        r1 := @parameter0: java.lang.Object[];

        return r1;
    }

    public short getParameterCount()
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        return 0;
    }

    public void forEachParameter(org.apache.logging.log4j.message.ParameterConsumer, java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        org.apache.logging.log4j.message.ParameterConsumer r1;
        java.lang.Object r2;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        r1 := @parameter0: org.apache.logging.log4j.message.ParameterConsumer;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public org.apache.logging.log4j.message.Message memento()
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        org.apache.logging.log4j.message.SimpleMessage $r1;
        java.lang.CharSequence $r2;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        $r1 = new org.apache.logging.log4j.message.SimpleMessage;

        $r2 = r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence>;

        specialinvoke $r1.<org.apache.logging.log4j.message.SimpleMessage: void <init>(java.lang.CharSequence)>($r2);

        return $r1;
    }

    public int length()
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        java.lang.CharSequence $r1, $r2;
        int $i0;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        $r1 = r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence>;

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

     label2:
        return $i0;
    }

    public char charAt(int)
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        int i0;
        java.lang.CharSequence $r1;
        char $c1;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence>;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(i0);

        return $c1;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;
        int i0, i1;
        java.lang.CharSequence $r1, $r2;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence>;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        return $r2;
    }

    public void clear()
    {
        org.apache.logging.log4j.message.ReusableSimpleMessage r0;

        r0 := @this: org.apache.logging.log4j.message.ReusableSimpleMessage;

        r0.<org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.CharSequence charSequence> = null;

        return;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        <org.apache.logging.log4j.message.ReusableSimpleMessage: long serialVersionUID> = -9199974506498249809L;

        $r0 = newarray (java.lang.Object)[0];

        <org.apache.logging.log4j.message.ReusableSimpleMessage: java.lang.Object[] EMPTY_PARAMS> = $r0;

        return;
    }
}
