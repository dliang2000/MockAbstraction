public abstract class org.apache.flink.api.common.operators.util.NonRichGenericInputFormat extends java.lang.Object implements org.apache.flink.api.common.io.InputFormat
{
    private static final long serialVersionUID;
    protected int partitionNumber;

    public void <init>()
    {
        org.apache.flink.api.common.operators.util.NonRichGenericInputFormat r0;

        r0 := @this: org.apache.flink.api.common.operators.util.NonRichGenericInputFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void configure(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.api.common.operators.util.NonRichGenericInputFormat r0;
        org.apache.flink.configuration.Configuration r1;

        r0 := @this: org.apache.flink.api.common.operators.util.NonRichGenericInputFormat;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        return;
    }

    public org.apache.flink.api.common.io.statistics.BaseStatistics getStatistics(org.apache.flink.api.common.io.statistics.BaseStatistics) throws java.io.IOException
    {
        org.apache.flink.api.common.operators.util.NonRichGenericInputFormat r0;
        org.apache.flink.api.common.io.statistics.BaseStatistics r1;

        r0 := @this: org.apache.flink.api.common.operators.util.NonRichGenericInputFormat;

        r1 := @parameter0: org.apache.flink.api.common.io.statistics.BaseStatistics;

        return r1;
    }

    public org.apache.flink.core.io.GenericInputSplit[] createInputSplits(int) throws java.io.IOException
    {
        org.apache.flink.api.common.operators.util.NonRichGenericInputFormat r0;
        org.apache.flink.core.io.GenericInputSplit[] r1;
        boolean $z0;
        org.apache.flink.core.io.GenericInputSplit $r2;
        java.lang.IllegalArgumentException $r3;
        int i0, $i1, i2, i3, $i4;

        r0 := @this: org.apache.flink.api.common.operators.util.NonRichGenericInputFormat;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Number of input splits has to be at least 1.");

        throw $r3;

     label1:
        $z0 = r0 instanceof org.apache.flink.api.common.io.NonParallelInput;

        if $z0 == 0 goto label2;

        $i1 = 1;

        goto label3;

     label2:
        $i1 = i0;

     label3:
        i2 = $i1;

        r1 = newarray (org.apache.flink.core.io.GenericInputSplit)[$i1];

        i3 = 0;

     label4:
        $i4 = lengthof r1;

        if i3 >= $i4 goto label5;

        $r2 = new org.apache.flink.core.io.GenericInputSplit;

        specialinvoke $r2.<org.apache.flink.core.io.GenericInputSplit: void <init>(int,int)>(i3, i2);

        r1[i3] = $r2;

        i3 = i3 + 1;

        goto label4;

     label5:
        return r1;
    }

    public org.apache.flink.api.common.io.DefaultInputSplitAssigner getInputSplitAssigner(org.apache.flink.core.io.GenericInputSplit[])
    {
        org.apache.flink.api.common.operators.util.NonRichGenericInputFormat r0;
        org.apache.flink.core.io.GenericInputSplit[] r1;
        org.apache.flink.api.common.io.DefaultInputSplitAssigner $r2;

        r0 := @this: org.apache.flink.api.common.operators.util.NonRichGenericInputFormat;

        r1 := @parameter0: org.apache.flink.core.io.GenericInputSplit[];

        $r2 = new org.apache.flink.api.common.io.DefaultInputSplitAssigner;

        specialinvoke $r2.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: void <init>(org.apache.flink.core.io.InputSplit[])>(r1);

        return $r2;
    }

    public void open(org.apache.flink.core.io.GenericInputSplit) throws java.io.IOException
    {
        org.apache.flink.api.common.operators.util.NonRichGenericInputFormat r0;
        org.apache.flink.core.io.GenericInputSplit r1;
        int $i0;

        r0 := @this: org.apache.flink.api.common.operators.util.NonRichGenericInputFormat;

        r1 := @parameter0: org.apache.flink.core.io.GenericInputSplit;

        $i0 = virtualinvoke r1.<org.apache.flink.core.io.GenericInputSplit: int getSplitNumber()>();

        r0.<org.apache.flink.api.common.operators.util.NonRichGenericInputFormat: int partitionNumber> = $i0;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.api.common.operators.util.NonRichGenericInputFormat r0;

        r0 := @this: org.apache.flink.api.common.operators.util.NonRichGenericInputFormat;

        return;
    }

    public volatile void open(org.apache.flink.core.io.InputSplit) throws java.io.IOException
    {
        org.apache.flink.api.common.operators.util.NonRichGenericInputFormat r0;
        org.apache.flink.core.io.InputSplit r1;
        org.apache.flink.core.io.GenericInputSplit $r2;

        r0 := @this: org.apache.flink.api.common.operators.util.NonRichGenericInputFormat;

        r1 := @parameter0: org.apache.flink.core.io.InputSplit;

        $r2 = (org.apache.flink.core.io.GenericInputSplit) r1;

        virtualinvoke r0.<org.apache.flink.api.common.operators.util.NonRichGenericInputFormat: void open(org.apache.flink.core.io.GenericInputSplit)>($r2);

        return;
    }

    public volatile org.apache.flink.core.io.InputSplitAssigner getInputSplitAssigner(org.apache.flink.core.io.InputSplit[])
    {
        org.apache.flink.api.common.operators.util.NonRichGenericInputFormat r0;
        org.apache.flink.core.io.InputSplit[] r1;
        org.apache.flink.core.io.GenericInputSplit[] $r2;
        org.apache.flink.api.common.io.DefaultInputSplitAssigner $r3;

        r0 := @this: org.apache.flink.api.common.operators.util.NonRichGenericInputFormat;

        r1 := @parameter0: org.apache.flink.core.io.InputSplit[];

        $r2 = (org.apache.flink.core.io.GenericInputSplit[]) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.common.operators.util.NonRichGenericInputFormat: org.apache.flink.api.common.io.DefaultInputSplitAssigner getInputSplitAssigner(org.apache.flink.core.io.GenericInputSplit[])>($r2);

        return $r3;
    }

    public volatile org.apache.flink.core.io.InputSplit[] createInputSplits(int) throws java.io.IOException
    {
        org.apache.flink.api.common.operators.util.NonRichGenericInputFormat r0;
        int i0;
        org.apache.flink.core.io.GenericInputSplit[] $r1;

        r0 := @this: org.apache.flink.api.common.operators.util.NonRichGenericInputFormat;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.operators.util.NonRichGenericInputFormat: org.apache.flink.core.io.GenericInputSplit[] createInputSplits(int)>(i0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.operators.util.NonRichGenericInputFormat: long serialVersionUID> = 1L;

        return;
    }
}
