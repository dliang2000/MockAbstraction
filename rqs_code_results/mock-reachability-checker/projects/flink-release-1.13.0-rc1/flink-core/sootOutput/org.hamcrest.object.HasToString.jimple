public class org.hamcrest.object.HasToString extends org.hamcrest.FeatureMatcher
{

    public void <init>(org.hamcrest.Matcher)
    {
        org.hamcrest.object.HasToString r0;
        org.hamcrest.Matcher r1;

        r0 := @this: org.hamcrest.object.HasToString;

        r1 := @parameter0: org.hamcrest.Matcher;

        specialinvoke r0.<org.hamcrest.FeatureMatcher: void <init>(org.hamcrest.Matcher,java.lang.String,java.lang.String)>(r1, "with toString()", "toString()");

        return;
    }

    protected java.lang.String featureValueOf(java.lang.Object)
    {
        org.hamcrest.object.HasToString r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: org.hamcrest.object.HasToString;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasToString(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;
        org.hamcrest.object.HasToString $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = new org.hamcrest.object.HasToString;

        specialinvoke $r1.<org.hamcrest.object.HasToString: void <init>(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher hasToString(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.object.HasToString $r1;
        org.hamcrest.Matcher $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.hamcrest.object.HasToString;

        $r2 = staticinvoke <org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>(r0);

        specialinvoke $r1.<org.hamcrest.object.HasToString: void <init>(org.hamcrest.Matcher)>($r2);

        return $r1;
    }

    protected volatile java.lang.Object featureValueOf(java.lang.Object)
    {
        org.hamcrest.object.HasToString r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: org.hamcrest.object.HasToString;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.hamcrest.object.HasToString: java.lang.String featureValueOf(java.lang.Object)>(r1);

        return $r2;
    }
}
