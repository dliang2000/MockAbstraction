public class org.apache.flink.api.java.typeutils.GenericTypeInfoTest extends org.apache.flink.api.common.typeutils.TypeInformationTestBase
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.GenericTypeInfoTest r0;

        r0 := @this: org.apache.flink.api.java.typeutils.GenericTypeInfoTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.TypeInformationTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.java.typeutils.GenericTypeInfo[] getTestData()
    {
        org.apache.flink.api.java.typeutils.GenericTypeInfoTest r0;
        org.apache.flink.api.java.typeutils.GenericTypeInfo[] $r1;
        org.apache.flink.api.java.typeutils.GenericTypeInfo $r2, $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.GenericTypeInfoTest;

        $r1 = newarray (org.apache.flink.api.java.typeutils.GenericTypeInfo)[2];

        $r2 = new org.apache.flink.api.java.typeutils.GenericTypeInfo;

        specialinvoke $r2.<org.apache.flink.api.java.typeutils.GenericTypeInfo: void <init>(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/GenericTypeInfoTest$TestClass;");

        $r1[0] = $r2;

        $r3 = new org.apache.flink.api.java.typeutils.GenericTypeInfo;

        specialinvoke $r3.<org.apache.flink.api.java.typeutils.GenericTypeInfo: void <init>(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/GenericTypeInfoTest$AlternativeClass;");

        $r1[1] = $r3;

        return $r1;
    }

    protected volatile org.apache.flink.api.common.typeinfo.TypeInformation[] getTestData()
    {
        org.apache.flink.api.java.typeutils.GenericTypeInfoTest r0;
        org.apache.flink.api.java.typeutils.GenericTypeInfo[] $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.GenericTypeInfoTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.GenericTypeInfoTest: org.apache.flink.api.java.typeutils.GenericTypeInfo[] getTestData()>();

        return $r1;
    }
}
