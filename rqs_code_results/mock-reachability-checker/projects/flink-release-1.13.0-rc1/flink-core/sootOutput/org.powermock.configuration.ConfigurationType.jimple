public final enum class org.powermock.configuration.ConfigurationType extends java.lang.Enum
{
    public static final enum org.powermock.configuration.ConfigurationType Mockito;
    public static final enum org.powermock.configuration.ConfigurationType PowerMock;
    private final java.lang.String prefix;
    private final java.lang.Class configurationClass;
    private static final org.powermock.configuration.ConfigurationType[] $VALUES;

    public static org.powermock.configuration.ConfigurationType[] values()
    {
        org.powermock.configuration.ConfigurationType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.powermock.configuration.ConfigurationType: org.powermock.configuration.ConfigurationType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.powermock.configuration.ConfigurationType[]) $r1;

        return $r2;
    }

    public static org.powermock.configuration.ConfigurationType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.powermock.configuration.ConfigurationType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/powermock/configuration/ConfigurationType;", r0);

        $r2 = (org.powermock.configuration.ConfigurationType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String, java.lang.Class)
    {
        org.powermock.configuration.ConfigurationType r0;
        java.lang.String r1, r2;
        int i0;
        java.lang.Class r3;

        r0 := @this: org.powermock.configuration.ConfigurationType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Class;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.powermock.configuration.ConfigurationType: java.lang.String prefix> = r2;

        r0.<org.powermock.configuration.ConfigurationType: java.lang.Class configurationClass> = r3;

        return;
    }

    public java.lang.String getPrefix()
    {
        org.powermock.configuration.ConfigurationType r0;
        java.lang.String $r1;

        r0 := @this: org.powermock.configuration.ConfigurationType;

        $r1 = r0.<org.powermock.configuration.ConfigurationType: java.lang.String prefix>;

        return $r1;
    }

    public static org.powermock.configuration.ConfigurationType forClass(java.lang.Class)
    {
        java.lang.Class r0, $r3;
        org.powermock.configuration.ConfigurationType[] r1;
        int i0, i1;
        org.powermock.configuration.ConfigurationType r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        r1 = staticinvoke <org.powermock.configuration.ConfigurationType: org.powermock.configuration.ConfigurationType[] values()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $r3 = r2.<org.powermock.configuration.ConfigurationType: java.lang.Class configurationClass>;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    static void <clinit>()
    {
        org.powermock.configuration.ConfigurationType $r0, $r1, $r3, $r4;
        org.powermock.configuration.ConfigurationType[] $r2;

        $r0 = new org.powermock.configuration.ConfigurationType;

        specialinvoke $r0.<org.powermock.configuration.ConfigurationType: void <init>(java.lang.String,int,java.lang.String,java.lang.Class)>("Mockito", 0, "mockito", class "Lorg/powermock/configuration/MockitoConfiguration;");

        <org.powermock.configuration.ConfigurationType: org.powermock.configuration.ConfigurationType Mockito> = $r0;

        $r1 = new org.powermock.configuration.ConfigurationType;

        specialinvoke $r1.<org.powermock.configuration.ConfigurationType: void <init>(java.lang.String,int,java.lang.String,java.lang.Class)>("PowerMock", 1, "powermock", class "Lorg/powermock/configuration/PowerMockConfiguration;");

        <org.powermock.configuration.ConfigurationType: org.powermock.configuration.ConfigurationType PowerMock> = $r1;

        $r2 = newarray (org.powermock.configuration.ConfigurationType)[2];

        $r3 = <org.powermock.configuration.ConfigurationType: org.powermock.configuration.ConfigurationType Mockito>;

        $r2[0] = $r3;

        $r4 = <org.powermock.configuration.ConfigurationType: org.powermock.configuration.ConfigurationType PowerMock>;

        $r2[1] = $r4;

        <org.powermock.configuration.ConfigurationType: org.powermock.configuration.ConfigurationType[] $VALUES> = $r2;

        return;
    }
}
