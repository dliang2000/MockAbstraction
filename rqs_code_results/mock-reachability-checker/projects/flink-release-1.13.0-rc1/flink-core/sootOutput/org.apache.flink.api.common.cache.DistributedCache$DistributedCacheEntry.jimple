public class org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry extends java.lang.Object implements java.io.Serializable
{
    public java.lang.String filePath;
    public java.lang.Boolean isExecutable;
    public boolean isZipped;
    public byte[] blobKey;

    public void <init>(java.lang.String, java.lang.Boolean)
    {
        org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry r0;
        java.lang.String r1;
        java.lang.Boolean r2;

        r0 := @this: org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        specialinvoke r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: void <init>(java.lang.String,java.lang.Boolean,byte[])>(r1, r2, null);

        return;
    }

    public void <init>(java.lang.String, boolean, boolean)
    {
        org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry r0;
        java.lang.String r1;
        boolean z0, z1;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        specialinvoke r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: void <init>(java.lang.String,java.lang.Boolean,byte[],boolean)>(r1, $r2, null, z1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Boolean, byte[], boolean)
    {
        org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry r0;
        java.lang.String r1;
        java.lang.Boolean r2;
        byte[] r3;
        boolean z0;

        r0 := @this: org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        r3 := @parameter2: byte[];

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: java.lang.String filePath> = r1;

        r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: java.lang.Boolean isExecutable> = r2;

        r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: byte[] blobKey> = r3;

        r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: boolean isZipped> = z0;

        return;
    }

    public void <init>(java.lang.String, java.lang.Boolean, byte[])
    {
        org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry r0;
        java.lang.String r1;
        java.lang.Boolean r2;
        byte[] r3;

        r0 := @this: org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        r3 := @parameter2: byte[];

        specialinvoke r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: void <init>(java.lang.String,java.lang.Boolean,byte[],boolean)>(r1, r2, r3, 0);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r5, $r6;
        java.lang.Boolean $r7, $r8;
        byte[] $r9, $r10;

        r0 := @this: org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry) r1;

        $z1 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: boolean isZipped>;

        $z0 = r2.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: boolean isZipped>;

        if $z1 != $z0 goto label4;

        $r6 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: java.lang.String filePath>;

        $r5 = r2.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: java.lang.String filePath>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label4;

        $r8 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: java.lang.Boolean isExecutable>;

        $r7 = r2.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: java.lang.Boolean isExecutable>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 == 0 goto label4;

        $r10 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: byte[] blobKey>;

        $r9 = r2.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: byte[] blobKey>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r10, $r9);

        if $z4 == 0 goto label4;

        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        return $z5;
    }

    public int hashCode()
    {
        org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        java.lang.Boolean $r3, $r4;
        boolean $z0;
        byte[] $r5;
        int $i0, $i1, i2, i3;

        r0 := @this: org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: java.lang.String filePath>;

        $r1[0] = $r2;

        $r3 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: java.lang.Boolean isExecutable>;

        $r1[1] = $r3;

        $z0 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: boolean isZipped>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[2] = $r4;

        i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        $i0 = 31 * i2;

        $r5 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: byte[] blobKey>;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r5);

        i3 = $i0 + $i1;

        return i3;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r14, $r15;
        java.lang.String $r3, $r13, $r16;
        java.lang.Boolean $r7;
        boolean $z0;
        byte[] $r12;

        r0 := @this: org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DistributedCacheEntry{filePath=\'");

        $r3 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: java.lang.String filePath>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isExecutable=");

        $r7 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: java.lang.Boolean isExecutable>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isZipped=");

        $z0 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: boolean isZipped>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", blobKey=");

        $r12 = r0.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: byte[] blobKey>;

        $r13 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }
}
