public class org.apache.flink.core.fs.FileInputSplit extends org.apache.flink.core.io.LocatableInputSplit
{
    private static final long serialVersionUID;
    private final org.apache.flink.core.fs.Path file;
    private final long start;
    private final long length;

    public void <init>(int, org.apache.flink.core.fs.Path, long, long, java.lang.String[])
    {
        org.apache.flink.core.fs.FileInputSplit r0;
        int i0;
        org.apache.flink.core.fs.Path r1;
        long l1, l2;
        java.lang.String[] r2;

        r0 := @this: org.apache.flink.core.fs.FileInputSplit;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.core.fs.Path;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        r2 := @parameter4: java.lang.String[];

        specialinvoke r0.<org.apache.flink.core.io.LocatableInputSplit: void <init>(int,java.lang.String[])>(i0, r2);

        r0.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path file> = r1;

        r0.<org.apache.flink.core.fs.FileInputSplit: long start> = l1;

        r0.<org.apache.flink.core.fs.FileInputSplit: long length> = l2;

        return;
    }

    public org.apache.flink.core.fs.Path getPath()
    {
        org.apache.flink.core.fs.FileInputSplit r0;
        org.apache.flink.core.fs.Path $r1;

        r0 := @this: org.apache.flink.core.fs.FileInputSplit;

        $r1 = r0.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path file>;

        return $r1;
    }

    public long getStart()
    {
        org.apache.flink.core.fs.FileInputSplit r0;
        long $l0;

        r0 := @this: org.apache.flink.core.fs.FileInputSplit;

        $l0 = r0.<org.apache.flink.core.fs.FileInputSplit: long start>;

        return $l0;
    }

    public long getLength()
    {
        org.apache.flink.core.fs.FileInputSplit r0;
        long $l0;

        r0 := @this: org.apache.flink.core.fs.FileInputSplit;

        $l0 = r0.<org.apache.flink.core.fs.FileInputSplit: long length>;

        return $l0;
    }

    public int hashCode()
    {
        org.apache.flink.core.fs.FileInputSplit r0;
        int $i0, $i1, $i2;
        org.apache.flink.core.fs.Path $r1, $r2;

        r0 := @this: org.apache.flink.core.fs.FileInputSplit;

        $i0 = virtualinvoke r0.<org.apache.flink.core.fs.FileInputSplit: int getSplitNumber()>();

        $r1 = r0.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path file>;

        if $r1 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path file>;

        $i2 = virtualinvoke $r2.<org.apache.flink.core.fs.Path: int hashCode()>();

     label2:
        $i1 = $i0 ^ $i2;

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.core.fs.FileInputSplit r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;
        org.apache.flink.core.fs.Path $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.flink.core.fs.FileInputSplit;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.flink.core.fs.FileInputSplit;

        if $z0 == 0 goto label6;

        $z1 = specialinvoke r0.<org.apache.flink.core.io.LocatableInputSplit: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label6;

        r2 = (org.apache.flink.core.fs.FileInputSplit) r1;

        $l1 = r0.<org.apache.flink.core.fs.FileInputSplit: long start>;

        $l0 = r2.<org.apache.flink.core.fs.FileInputSplit: long start>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label4;

        $l4 = r0.<org.apache.flink.core.fs.FileInputSplit: long length>;

        $l3 = r2.<org.apache.flink.core.fs.FileInputSplit: long length>;

        $b5 = $l4 cmp $l3;

        if $b5 != 0 goto label4;

        $r3 = r0.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path file>;

        if $r3 != null goto label2;

        $r7 = r2.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path file>;

        if $r7 != null goto label4;

        goto label3;

     label2:
        $r4 = r2.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path file>;

        if $r4 == null goto label4;

        $r6 = r0.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path file>;

        $r5 = r2.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path file>;

        $z2 = virtualinvoke $r6.<org.apache.flink.core.fs.Path: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label4;

     label3:
        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;

     label6:
        return 0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.core.fs.FileInputSplit r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        int $i0;
        org.apache.flink.core.fs.Path $r5;
        long $l1, $l2;
        java.lang.String $r11;

        r0 := @this: org.apache.flink.core.fs.FileInputSplit;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = virtualinvoke r0.<org.apache.flink.core.fs.FileInputSplit: int getSplitNumber()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r5 = r0.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path file>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $l1 = r0.<org.apache.flink.core.fs.FileInputSplit: long start>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $l2 = r0.<org.apache.flink.core.fs.FileInputSplit: long length>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public static void <clinit>()
    {
        <org.apache.flink.core.fs.FileInputSplit: long serialVersionUID> = 1L;

        return;
    }
}
