public class javassist.CtField extends javassist.CtMember
{
    static final java.lang.String javaLangString;
    protected javassist.bytecode.FieldInfo fieldInfo;

    public void <init>(javassist.CtClass, java.lang.String, javassist.CtClass) throws javassist.CannotCompileException
    {
        javassist.CtField r0;
        javassist.CtClass r1, r3;
        java.lang.String r2, $r4;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.CtClass;

        $r4 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String of(javassist.CtClass)>(r1);

        specialinvoke r0.<javassist.CtField: void <init>(java.lang.String,java.lang.String,javassist.CtClass)>($r4, r2, r3);

        return;
    }

    public void <init>(javassist.CtField, javassist.CtClass) throws javassist.CannotCompileException
    {
        javassist.CtField r0, r1;
        javassist.CtClass r2;
        javassist.bytecode.FieldInfo r3, $r8, $r10, $r12, $r13;
        javassist.bytecode.ConstPool r4;
        java.util.List r5;
        java.util.Iterator r6;
        javassist.bytecode.AttributeInfo r7, $r15;
        java.lang.String $r9, $r11;
        int $i0;
        boolean $z0;
        java.lang.Object $r14;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: javassist.CtField;

        r2 := @parameter1: javassist.CtClass;

        $r8 = r1.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r9 = virtualinvoke $r8.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        $r10 = r1.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r11 = virtualinvoke $r10.<javassist.bytecode.FieldInfo: java.lang.String getName()>();

        specialinvoke r0.<javassist.CtField: void <init>(java.lang.String,java.lang.String,javassist.CtClass)>($r9, $r11, r2);

        r3 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r12 = r1.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $i0 = virtualinvoke $r12.<javassist.bytecode.FieldInfo: int getAccessFlags()>();

        virtualinvoke r3.<javassist.bytecode.FieldInfo: void setAccessFlags(int)>($i0);

        r4 = virtualinvoke r3.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool getConstPool()>();

        $r13 = r1.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        r5 = virtualinvoke $r13.<javassist.bytecode.FieldInfo: java.util.List getAttributes()>();

        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javassist.bytecode.AttributeInfo) $r14;

        $r15 = virtualinvoke r7.<javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool,java.util.Map)>(r4, null);

        virtualinvoke r3.<javassist.bytecode.FieldInfo: void addAttribute(javassist.bytecode.AttributeInfo)>($r15);

        goto label1;

     label2:
        return;
    }

    private void <init>(java.lang.String, java.lang.String, javassist.CtClass) throws javassist.CannotCompileException
    {
        javassist.CtField r0;
        java.lang.String r1, r2, $r10, $r12;
        javassist.CtClass r3;
        javassist.bytecode.ClassFile r4;
        javassist.bytecode.FieldInfo $r5;
        javassist.bytecode.ConstPool $r6;
        javassist.CannotCompileException $r7;
        java.lang.StringBuilder $r8, $r9, $r11;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.CtClass;

        specialinvoke r0.<javassist.CtMember: void <init>(javassist.CtClass)>(r3);

        r4 = virtualinvoke r3.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile2()>();

        if r4 != null goto label1;

        $r7 = new javassist.CannotCompileException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad declaring class: ");

        $r10 = virtualinvoke r3.<javassist.CtClass: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<javassist.CannotCompileException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label1:
        $r5 = new javassist.bytecode.FieldInfo;

        $r6 = virtualinvoke r4.<javassist.bytecode.ClassFile: javassist.bytecode.ConstPool getConstPool()>();

        specialinvoke $r5.<javassist.bytecode.FieldInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,java.lang.String)>($r6, r2, r1);

        r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo> = $r5;

        return;
    }

    void <init>(javassist.bytecode.FieldInfo, javassist.CtClass)
    {
        javassist.CtField r0;
        javassist.bytecode.FieldInfo r1;
        javassist.CtClass r2;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: javassist.bytecode.FieldInfo;

        r2 := @parameter1: javassist.CtClass;

        specialinvoke r0.<javassist.CtMember: void <init>(javassist.CtClass)>(r2);

        r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo> = r1;

        return;
    }

    public java.lang.String toString()
    {
        javassist.CtField r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8, $r11;
        javassist.CtClass $r2;
        java.lang.String $r3, $r6, $r10, $r12;
        javassist.bytecode.FieldInfo $r9;

        r0 := @this: javassist.CtField;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<javassist.CtField: javassist.CtClass getDeclaringClass()>();

        $r3 = virtualinvoke $r2.<javassist.CtClass: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = virtualinvoke r0.<javassist.CtField: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r9 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r10 = virtualinvoke $r9.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    protected void extendToString(java.lang.StringBuffer)
    {
        javassist.CtField r0;
        java.lang.StringBuffer r1;
        java.lang.String $r3, $r7;
        javassist.bytecode.FieldInfo $r6;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: java.lang.StringBuffer;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r3 = virtualinvoke r0.<javassist.CtField: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r6 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r7 = virtualinvoke $r6.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        return;
    }

    protected javassist.compiler.ast.ASTree getInitAST()
    {
        javassist.CtField r0;

        r0 := @this: javassist.CtField;

        return null;
    }

    javassist.CtField$Initializer getInit()
    {
        javassist.CtField r0;
        javassist.compiler.ast.ASTree r1;
        javassist.CtField$Initializer $r2;

        r0 := @this: javassist.CtField;

        r1 = virtualinvoke r0.<javassist.CtField: javassist.compiler.ast.ASTree getInitAST()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <javassist.CtField$Initializer: javassist.CtField$Initializer byExpr(javassist.compiler.ast.ASTree)>(r1);

        return $r2;
    }

    public static javassist.CtField make(java.lang.String, javassist.CtClass) throws javassist.CannotCompileException
    {
        java.lang.String r0;
        javassist.CtClass r1;
        javassist.compiler.Javac $r3;
        boolean $z0;
        javassist.CannotCompileException $r4, $r7;
        javassist.CtField $r5;
        javassist.compiler.CompileError $r6;
        javassist.CtMember r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javassist.CtClass;

        $r3 = new javassist.compiler.Javac;

        specialinvoke $r3.<javassist.compiler.Javac: void <init>(javassist.CtClass)>(r1);

     label1:
        r8 = virtualinvoke $r3.<javassist.compiler.Javac: javassist.CtMember compile(java.lang.String)>(r0);

        $z0 = r8 instanceof javassist.CtField;

        if $z0 == 0 goto label3;

        $r5 = (javassist.CtField) r8;

     label2:
        return $r5;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = new javassist.CannotCompileException;

        specialinvoke $r7.<javassist.CannotCompileException: void <init>(javassist.compiler.CompileError)>($r6);

        throw $r7;

     label5:
        $r4 = new javassist.CannotCompileException;

        specialinvoke $r4.<javassist.CannotCompileException: void <init>(java.lang.String)>("not a field");

        throw $r4;

        catch javassist.compiler.CompileError from label1 to label2 with label4;
    }

    public javassist.bytecode.FieldInfo getFieldInfo()
    {
        javassist.CtField r0;
        javassist.CtClass $r1;
        javassist.bytecode.FieldInfo $r2;

        r0 := @this: javassist.CtField;

        $r1 = r0.<javassist.CtField: javassist.CtClass declaringClass>;

        virtualinvoke $r1.<javassist.CtClass: void checkModify()>();

        $r2 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        return $r2;
    }

    public javassist.bytecode.FieldInfo getFieldInfo2()
    {
        javassist.CtField r0;
        javassist.bytecode.FieldInfo $r1;

        r0 := @this: javassist.CtField;

        $r1 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        return $r1;
    }

    public javassist.CtClass getDeclaringClass()
    {
        javassist.CtField r0;
        javassist.CtClass $r1;

        r0 := @this: javassist.CtField;

        $r1 = specialinvoke r0.<javassist.CtMember: javassist.CtClass getDeclaringClass()>();

        return $r1;
    }

    public java.lang.String getName()
    {
        javassist.CtField r0;
        javassist.bytecode.FieldInfo $r1;
        java.lang.String $r2;

        r0 := @this: javassist.CtField;

        $r1 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.FieldInfo: java.lang.String getName()>();

        return $r2;
    }

    public void setName(java.lang.String)
    {
        javassist.CtField r0;
        java.lang.String r1;
        javassist.CtClass $r2;
        javassist.bytecode.FieldInfo $r3;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javassist.CtField: javassist.CtClass declaringClass>;

        virtualinvoke $r2.<javassist.CtClass: void checkModify()>();

        $r3 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        virtualinvoke $r3.<javassist.bytecode.FieldInfo: void setName(java.lang.String)>(r1);

        return;
    }

    public int getModifiers()
    {
        javassist.CtField r0;
        javassist.bytecode.FieldInfo $r1;
        int $i0, $i1;

        r0 := @this: javassist.CtField;

        $r1 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $i0 = virtualinvoke $r1.<javassist.bytecode.FieldInfo: int getAccessFlags()>();

        $i1 = staticinvoke <javassist.bytecode.AccessFlag: int toModifier(int)>($i0);

        return $i1;
    }

    public void setModifiers(int)
    {
        javassist.CtField r0;
        int i0, $i1;
        javassist.CtClass $r1;
        javassist.bytecode.FieldInfo $r2;

        r0 := @this: javassist.CtField;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.CtField: javassist.CtClass declaringClass>;

        virtualinvoke $r1.<javassist.CtClass: void checkModify()>();

        $r2 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $i1 = staticinvoke <javassist.bytecode.AccessFlag: int of(int)>(i0);

        virtualinvoke $r2.<javassist.bytecode.FieldInfo: void setAccessFlags(int)>($i1);

        return;
    }

    public boolean hasAnnotation(java.lang.String)
    {
        javassist.CtField r0;
        java.lang.String r1;
        javassist.bytecode.FieldInfo r2;
        javassist.bytecode.AnnotationsAttribute r3, r4;
        javassist.bytecode.AttributeInfo $r5, $r6;
        javassist.CtClass $r7;
        javassist.ClassPool $r8;
        boolean $z0;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<javassist.CtField: javassist.bytecode.FieldInfo getFieldInfo2()>();

        $r5 = virtualinvoke r2.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("RuntimeInvisibleAnnotations");

        r3 = (javassist.bytecode.AnnotationsAttribute) $r5;

        $r6 = virtualinvoke r2.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("RuntimeVisibleAnnotations");

        r4 = (javassist.bytecode.AnnotationsAttribute) $r6;

        $r7 = virtualinvoke r0.<javassist.CtField: javassist.CtClass getDeclaringClass()>();

        $r8 = virtualinvoke $r7.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $z0 = staticinvoke <javassist.CtClassType: boolean hasAnnotationType(java.lang.String,javassist.ClassPool,javassist.bytecode.AnnotationsAttribute,javassist.bytecode.AnnotationsAttribute)>(r1, $r8, r3, r4);

        return $z0;
    }

    public java.lang.Object getAnnotation(java.lang.Class) throws java.lang.ClassNotFoundException
    {
        javassist.CtField r0;
        java.lang.Class r1;
        javassist.bytecode.FieldInfo r2;
        javassist.bytecode.AnnotationsAttribute r3, r4;
        javassist.bytecode.AttributeInfo $r5, $r6;
        javassist.CtClass $r7;
        javassist.ClassPool $r8;
        java.lang.Object $r9;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: java.lang.Class;

        r2 = virtualinvoke r0.<javassist.CtField: javassist.bytecode.FieldInfo getFieldInfo2()>();

        $r5 = virtualinvoke r2.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("RuntimeInvisibleAnnotations");

        r3 = (javassist.bytecode.AnnotationsAttribute) $r5;

        $r6 = virtualinvoke r2.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("RuntimeVisibleAnnotations");

        r4 = (javassist.bytecode.AnnotationsAttribute) $r6;

        $r7 = virtualinvoke r0.<javassist.CtField: javassist.CtClass getDeclaringClass()>();

        $r8 = virtualinvoke $r7.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r9 = staticinvoke <javassist.CtClassType: java.lang.Object getAnnotationType(java.lang.Class,javassist.ClassPool,javassist.bytecode.AnnotationsAttribute,javassist.bytecode.AnnotationsAttribute)>(r1, $r8, r3, r4);

        return $r9;
    }

    public java.lang.Object[] getAnnotations() throws java.lang.ClassNotFoundException
    {
        javassist.CtField r0;
        java.lang.Object[] $r1;

        r0 := @this: javassist.CtField;

        $r1 = specialinvoke r0.<javassist.CtField: java.lang.Object[] getAnnotations(boolean)>(0);

        return $r1;
    }

    public java.lang.Object[] getAvailableAnnotations()
    {
        javassist.CtField r0;
        java.lang.Object[] $r2;
        java.lang.ClassNotFoundException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: javassist.CtField;

     label1:
        $r2 = specialinvoke r0.<javassist.CtField: java.lang.Object[] getAnnotations(boolean)>(1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected exception", $r3);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private java.lang.Object[] getAnnotations(boolean) throws java.lang.ClassNotFoundException
    {
        javassist.CtField r0;
        boolean z0;
        javassist.bytecode.FieldInfo r1;
        javassist.bytecode.AnnotationsAttribute r2, r3;
        javassist.bytecode.AttributeInfo $r4, $r5;
        javassist.CtClass $r6;
        javassist.ClassPool $r7;
        java.lang.Object[] $r8;

        r0 := @this: javassist.CtField;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<javassist.CtField: javassist.bytecode.FieldInfo getFieldInfo2()>();

        $r4 = virtualinvoke r1.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("RuntimeInvisibleAnnotations");

        r2 = (javassist.bytecode.AnnotationsAttribute) $r4;

        $r5 = virtualinvoke r1.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("RuntimeVisibleAnnotations");

        r3 = (javassist.bytecode.AnnotationsAttribute) $r5;

        $r6 = virtualinvoke r0.<javassist.CtField: javassist.CtClass getDeclaringClass()>();

        $r7 = virtualinvoke $r6.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r8 = staticinvoke <javassist.CtClassType: java.lang.Object[] toAnnotationType(boolean,javassist.ClassPool,javassist.bytecode.AnnotationsAttribute,javassist.bytecode.AnnotationsAttribute)>(z0, $r7, r2, r3);

        return $r8;
    }

    public java.lang.String getSignature()
    {
        javassist.CtField r0;
        javassist.bytecode.FieldInfo $r1;
        java.lang.String $r2;

        r0 := @this: javassist.CtField;

        $r1 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        return $r2;
    }

    public java.lang.String getGenericSignature()
    {
        javassist.CtField r0;
        javassist.bytecode.SignatureAttribute r1;
        javassist.bytecode.FieldInfo $r2;
        javassist.bytecode.AttributeInfo $r3;
        java.lang.String $r4;

        r0 := @this: javassist.CtField;

        $r2 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r3 = virtualinvoke $r2.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("Signature");

        r1 = (javassist.bytecode.SignatureAttribute) $r3;

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<javassist.bytecode.SignatureAttribute: java.lang.String getSignature()>();

     label2:
        return $r4;
    }

    public void setGenericSignature(java.lang.String)
    {
        javassist.CtField r0;
        java.lang.String r1;
        javassist.CtClass $r2;
        javassist.bytecode.SignatureAttribute $r3;
        javassist.bytecode.FieldInfo $r4, $r5;
        javassist.bytecode.ConstPool $r6;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javassist.CtField: javassist.CtClass declaringClass>;

        virtualinvoke $r2.<javassist.CtClass: void checkModify()>();

        $r5 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r3 = new javassist.bytecode.SignatureAttribute;

        $r4 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r6 = virtualinvoke $r4.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool getConstPool()>();

        specialinvoke $r3.<javassist.bytecode.SignatureAttribute: void <init>(javassist.bytecode.ConstPool,java.lang.String)>($r6, r1);

        virtualinvoke $r5.<javassist.bytecode.FieldInfo: void addAttribute(javassist.bytecode.AttributeInfo)>($r3);

        return;
    }

    public javassist.CtClass getType() throws javassist.NotFoundException
    {
        javassist.CtField r0;
        javassist.bytecode.FieldInfo $r1;
        java.lang.String $r2;
        javassist.CtClass $r3, $r5;
        javassist.ClassPool $r4;

        r0 := @this: javassist.CtField;

        $r1 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        $r3 = r0.<javassist.CtField: javassist.CtClass declaringClass>;

        $r4 = virtualinvoke $r3.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r5 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass toCtClass(java.lang.String,javassist.ClassPool)>($r2, $r4);

        return $r5;
    }

    public void setType(javassist.CtClass)
    {
        javassist.CtField r0;
        javassist.CtClass r1, $r2;
        javassist.bytecode.FieldInfo $r3;
        java.lang.String $r4;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: javassist.CtClass;

        $r2 = r0.<javassist.CtField: javassist.CtClass declaringClass>;

        virtualinvoke $r2.<javassist.CtClass: void checkModify()>();

        $r3 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r4 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String of(javassist.CtClass)>(r1);

        virtualinvoke $r3.<javassist.bytecode.FieldInfo: void setDescriptor(java.lang.String)>($r4);

        return;
    }

    public java.lang.Object getConstantValue()
    {
        javassist.CtField r0;
        int i0, i1, $i2, $i4;
        javassist.bytecode.ConstPool r1;
        javassist.bytecode.FieldInfo $r2, $r3, $r8;
        java.lang.String $r4, $r9, $r10, $r19;
        double $d0;
        java.lang.Double $r5;
        long $l3;
        java.lang.Long $r6;
        float $f0;
        java.lang.Float $r7;
        boolean $z0, $z1;
        java.lang.Integer $r11;
        java.lang.Boolean $r12;
        java.lang.RuntimeException $r13;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18;

        r0 := @this: javassist.CtField;

        $r2 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        i0 = virtualinvoke $r2.<javassist.bytecode.FieldInfo: int getConstantValue()>();

        if i0 != 0 goto label01;

        return null;

     label01:
        $r3 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        r1 = virtualinvoke $r3.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool getConstPool()>();

        $i2 = virtualinvoke r1.<javassist.bytecode.ConstPool: int getTag(int)>(i0);

        tableswitch($i2)
        {
            case 3: goto label05;
            case 4: goto label03;
            case 5: goto label02;
            case 6: goto label04;
            case 7: goto label10;
            case 8: goto label09;
            default: goto label10;
        };

     label02:
        $l3 = virtualinvoke r1.<javassist.bytecode.ConstPool: long getLongInfo(int)>(i0);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        return $r6;

     label03:
        $f0 = virtualinvoke r1.<javassist.bytecode.ConstPool: float getFloatInfo(int)>(i0);

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;

     label04:
        $d0 = virtualinvoke r1.<javassist.bytecode.ConstPool: double getDoubleInfo(int)>(i0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r5;

     label05:
        i1 = virtualinvoke r1.<javassist.bytecode.ConstPool: int getIntegerInfo(int)>(i0);

        $r9 = "Z";

        $r8 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r10 = virtualinvoke $r8.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label08;

        if i1 == 0 goto label06;

        $z1 = 1;

        goto label07;

     label06:
        $z1 = 0;

     label07:
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r12;

     label08:
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        return $r11;

     label09:
        $r4 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getStringInfo(int)>(i0);

        return $r4;

     label10:
        $r13 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad tag: ");

        $i4 = virtualinvoke r1.<javassist.bytecode.ConstPool: int getTag(int)>(i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r13;
    }

    public byte[] getAttribute(java.lang.String)
    {
        javassist.CtField r0;
        java.lang.String r1;
        javassist.bytecode.AttributeInfo r2;
        javassist.bytecode.FieldInfo $r3;
        byte[] $r4;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        r2 = virtualinvoke $r3.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r2.<javassist.bytecode.AttributeInfo: byte[] get()>();

        return $r4;
    }

    public void setAttribute(java.lang.String, byte[])
    {
        javassist.CtField r0;
        java.lang.String r1;
        byte[] r2;
        javassist.CtClass $r3;
        javassist.bytecode.AttributeInfo $r4;
        javassist.bytecode.FieldInfo $r5, $r6;
        javassist.bytecode.ConstPool $r7;

        r0 := @this: javassist.CtField;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r3 = r0.<javassist.CtField: javassist.CtClass declaringClass>;

        virtualinvoke $r3.<javassist.CtClass: void checkModify()>();

        $r6 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r4 = new javassist.bytecode.AttributeInfo;

        $r5 = r0.<javassist.CtField: javassist.bytecode.FieldInfo fieldInfo>;

        $r7 = virtualinvoke $r5.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool getConstPool()>();

        specialinvoke $r4.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>($r7, r1, r2);

        virtualinvoke $r6.<javassist.bytecode.FieldInfo: void addAttribute(javassist.bytecode.AttributeInfo)>($r4);

        return;
    }

    public static void <clinit>()
    {
        <javassist.CtField: java.lang.String javaLangString> = "java.lang.String";

        return;
    }
}
