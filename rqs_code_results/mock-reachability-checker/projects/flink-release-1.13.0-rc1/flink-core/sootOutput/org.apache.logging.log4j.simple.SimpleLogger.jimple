public class org.apache.logging.log4j.simple.SimpleLogger extends org.apache.logging.log4j.spi.AbstractLogger
{
    private static final long serialVersionUID;
    private static final char SPACE;
    private final java.text.DateFormat dateFormatter;
    private org.apache.logging.log4j.Level level;
    private final boolean showDateTime;
    private final boolean showContextMap;
    private java.io.PrintStream stream;
    private final java.lang.String logName;

    public void <init>(java.lang.String, org.apache.logging.log4j.Level, boolean, boolean, boolean, boolean, java.lang.String, org.apache.logging.log4j.message.MessageFactory, org.apache.logging.log4j.util.PropertiesUtil, java.io.PrintStream)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        java.lang.String r1, r3, r7, $r13, $r16;
        org.apache.logging.log4j.Level r2, $r14;
        boolean z0, z1, z2, z3;
        org.apache.logging.log4j.message.MessageFactory r4;
        org.apache.logging.log4j.util.PropertiesUtil r5;
        java.io.PrintStream r6;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        java.text.SimpleDateFormat $r15, $r18, r19;
        int $i0, $i1, i2;
        java.lang.IllegalArgumentException $r17;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        r3 := @parameter6: java.lang.String;

        r4 := @parameter7: org.apache.logging.log4j.message.MessageFactory;

        r5 := @parameter8: org.apache.logging.log4j.util.PropertiesUtil;

        r6 := @parameter9: java.io.PrintStream;

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void <init>(java.lang.String,org.apache.logging.log4j.message.MessageFactory)>(r1, r4);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.apache.logging.log4j.simplelog.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".level");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = virtualinvoke r5.<org.apache.logging.log4j.util.PropertiesUtil: java.lang.String getStringProperty(java.lang.String)>($r13);

        $r14 = staticinvoke <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level toLevel(java.lang.String,org.apache.logging.log4j.Level)>(r7, r2);

        r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level> = $r14;

        if z1 == 0 goto label03;

        i2 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if i2 <= 0 goto label01;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label01;

        $i1 = i2 + 1;

        $r16 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        r0.<org.apache.logging.log4j.simple.SimpleLogger: java.lang.String logName> = $r16;

        goto label02;

     label01:
        r0.<org.apache.logging.log4j.simple.SimpleLogger: java.lang.String logName> = r1;

     label02:
        goto label05;

     label03:
        if z0 == 0 goto label04;

        r0.<org.apache.logging.log4j.simple.SimpleLogger: java.lang.String logName> = r1;

        goto label05;

     label04:
        r0.<org.apache.logging.log4j.simple.SimpleLogger: java.lang.String logName> = null;

     label05:
        r0.<org.apache.logging.log4j.simple.SimpleLogger: boolean showDateTime> = z2;

        r0.<org.apache.logging.log4j.simple.SimpleLogger: boolean showContextMap> = z3;

        r0.<org.apache.logging.log4j.simple.SimpleLogger: java.io.PrintStream stream> = r6;

        if z2 == 0 goto label10;

     label06:
        $r15 = new java.text.SimpleDateFormat;

        specialinvoke $r15.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(r3);

        r19 = $r15;

     label07:
        goto label09;

     label08:
        $r17 := @caughtexception;

        $r18 = new java.text.SimpleDateFormat;

        specialinvoke $r18.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy/MM/dd HH:mm:ss:SSS zzz");

        r19 = $r18;

     label09:
        r0.<org.apache.logging.log4j.simple.SimpleLogger: java.text.DateFormat dateFormatter> = r19;

        goto label11;

     label10:
        r0.<org.apache.logging.log4j.simple.SimpleLogger: java.text.DateFormat dateFormatter> = null;

     label11:
        return;

        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
    }

    public org.apache.logging.log4j.Level getLevel()
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level $r1;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        $r1 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        return $r1;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r5;
        org.apache.logging.log4j.Marker r2;
        org.apache.logging.log4j.message.Message r3;
        java.lang.Throwable r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: org.apache.logging.log4j.message.Message;

        r4 := @parameter3: java.lang.Throwable;

        $r5 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r5.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r5;
        org.apache.logging.log4j.Marker r2;
        java.lang.CharSequence r3;
        java.lang.Throwable r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.CharSequence;

        r4 := @parameter3: java.lang.Throwable;

        $r5 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r5.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r5;
        org.apache.logging.log4j.Marker r2;
        java.lang.Object r3;
        java.lang.Throwable r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Throwable;

        $r5 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r5.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r4;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r4.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public transient boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r5;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Object[] r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object[];

        $r5 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r5.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r5;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Object r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        $r5 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r5.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r6;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Object r4, r5;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r6 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r6.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r7;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Object r4, r5, r6;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r7 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r7.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r8;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Object r4, r5, r6, r7;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r8 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r8.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r9;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Object r4, r5, r6, r7, r8;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r9 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r9.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r10;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Object r4, r5, r6, r7, r8, r9;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r10 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r10.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r11;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Object r4, r5, r6, r7, r8, r9, r10;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r11 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r11.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r12;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Object r4, r5, r6, r7, r8, r9, r10, r11;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r12 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r12.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r13;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Object r4, r5, r6, r7, r8, r9, r10, r11, r12;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        $r13 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r13.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r14;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Object r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        r13 := @parameter12: java.lang.Object;

        $r14 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r14.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1, $r5;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.Throwable r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Throwable;

        $r5 = r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level>;

        $i0 = virtualinvoke $r5.<org.apache.logging.log4j.Level: int intLevel()>();

        $i1 = virtualinvoke r1.<org.apache.logging.log4j.Level: int intLevel()>();

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        java.lang.String r1, $r10, $r13, $r14, $r21, $r24, r34, $r39;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        org.apache.logging.log4j.message.Message r4;
        java.lang.Throwable r5, $r32, r37;
        java.lang.StringBuilder $r9;
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintStream $r16, $r17, $r38;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r18, $r19;
        java.util.Date $r27;
        java.text.DateFormat $r28, $r29;
        java.util.Map r35;
        java.lang.Object[] r36;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: org.apache.logging.log4j.message.Message;

        r5 := @parameter4: java.lang.Throwable;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $z0 = r0.<org.apache.logging.log4j.simple.SimpleLogger: boolean showDateTime>;

        if $z0 == 0 goto label06;

        $r27 = new java.util.Date;

        specialinvoke $r27.<java.util.Date: void <init>()>();

        $r28 = r0.<org.apache.logging.log4j.simple.SimpleLogger: java.text.DateFormat dateFormatter>;

        entermonitor $r28;

     label01:
        $r29 = r0.<org.apache.logging.log4j.simple.SimpleLogger: java.text.DateFormat dateFormatter>;

        r34 = virtualinvoke $r29.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r27);

        exitmonitor $r28;

     label02:
        goto label05;

     label03:
        $r32 := @caughtexception;

        exitmonitor $r28;

     label04:
        throw $r32;

     label05:
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label06:
        $r10 = virtualinvoke r2.<org.apache.logging.log4j.Level: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r13 = r0.<org.apache.logging.log4j.simple.SimpleLogger: java.lang.String logName>;

        $z1 = staticinvoke <org.apache.logging.log4j.util.Strings: boolean isNotEmpty(java.lang.CharSequence)>($r13);

        if $z1 == 0 goto label07;

        $r24 = r0.<org.apache.logging.log4j.simple.SimpleLogger: java.lang.String logName>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label07:
        $r14 = interfaceinvoke r4.<org.apache.logging.log4j.message.Message: java.lang.String getFormattedMessage()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $z2 = r0.<org.apache.logging.log4j.simple.SimpleLogger: boolean showContextMap>;

        if $z2 == 0 goto label08;

        r35 = staticinvoke <org.apache.logging.log4j.ThreadContext: java.util.Map getImmutableContext()>();

        $i5 = interfaceinvoke r35.<java.util.Map: int size()>();

        if $i5 <= 0 goto label08;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r21 = virtualinvoke r35.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label08:
        r36 = interfaceinvoke r4.<org.apache.logging.log4j.message.Message: java.lang.Object[] getParameters()>();

        if r5 != null goto label09;

        if r36 == null goto label09;

        $i0 = lengthof r36;

        if $i0 <= 0 goto label09;

        $i1 = lengthof r36;

        $i2 = $i1 - 1;

        $r18 = r36[$i2];

        $z3 = $r18 instanceof java.lang.Throwable;

        if $z3 == 0 goto label09;

        $i3 = lengthof r36;

        $i4 = $i3 - 1;

        $r19 = r36[$i4];

        r37 = (java.lang.Throwable) $r19;

        goto label10;

     label09:
        r37 = r5;

     label10:
        $r38 = r0.<org.apache.logging.log4j.simple.SimpleLogger: java.io.PrintStream stream>;

        $r39 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r39);

        if r37 == null goto label11;

        $r16 = r0.<org.apache.logging.log4j.simple.SimpleLogger: java.io.PrintStream stream>;

        virtualinvoke $r16.<java.io.PrintStream: void print(char)>(32);

        $r17 = r0.<org.apache.logging.log4j.simple.SimpleLogger: java.io.PrintStream stream>;

        virtualinvoke r37.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r17);

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
    }

    public void setLevel(org.apache.logging.log4j.Level)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        org.apache.logging.log4j.Level r1;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        if r1 == null goto label1;

        r0.<org.apache.logging.log4j.simple.SimpleLogger: org.apache.logging.log4j.Level level> = r1;

     label1:
        return;
    }

    public void setStream(java.io.PrintStream)
    {
        org.apache.logging.log4j.simple.SimpleLogger r0;
        java.io.PrintStream r1;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLogger;

        r1 := @parameter0: java.io.PrintStream;

        r0.<org.apache.logging.log4j.simple.SimpleLogger: java.io.PrintStream stream> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.logging.log4j.simple.SimpleLogger: char SPACE> = 32;

        <org.apache.logging.log4j.simple.SimpleLogger: long serialVersionUID> = 1L;

        return;
    }
}
