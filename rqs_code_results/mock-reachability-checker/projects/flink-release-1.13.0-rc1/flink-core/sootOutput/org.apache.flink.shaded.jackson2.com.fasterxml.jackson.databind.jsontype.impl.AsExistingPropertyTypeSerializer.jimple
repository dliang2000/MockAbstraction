public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer
{

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        java.lang.String r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.String)>(r1, r2, r3);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer r0, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1, $r2;
        java.lang.String $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        if $r2 != r1 goto label1;

        $r5 = r0;

        goto label2;

     label1:
        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: java.lang.String _typePropertyName>;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.String)>($r4, r1, $r3);

     label2:
        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As EXISTING_PROPERTY>;

        return $r1;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1);

        return $r2;
    }
}
