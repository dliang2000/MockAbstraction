public class org.mockito.internal.reporting.PrintSettings extends java.lang.Object
{
    public static final int MAX_LINE_LENGTH;
    private boolean multiline;
    private java.util.List withTypeInfo;

    public void <init>()
    {
        org.mockito.internal.reporting.PrintSettings r0;
        java.util.LinkedList $r1;

        r0 := @this: org.mockito.internal.reporting.PrintSettings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.mockito.internal.reporting.PrintSettings: java.util.List withTypeInfo> = $r1;

        return;
    }

    public void setMultiline(boolean)
    {
        org.mockito.internal.reporting.PrintSettings r0;
        boolean z0;

        r0 := @this: org.mockito.internal.reporting.PrintSettings;

        z0 := @parameter0: boolean;

        r0.<org.mockito.internal.reporting.PrintSettings: boolean multiline> = z0;

        return;
    }

    public boolean isMultiline()
    {
        org.mockito.internal.reporting.PrintSettings r0;
        boolean $z0;

        r0 := @this: org.mockito.internal.reporting.PrintSettings;

        $z0 = r0.<org.mockito.internal.reporting.PrintSettings: boolean multiline>;

        return $z0;
    }

    public static transient org.mockito.internal.reporting.PrintSettings verboseMatchers(java.lang.Integer[])
    {
        java.lang.Integer[] r0;
        org.mockito.internal.reporting.PrintSettings $r2;

        r0 := @parameter0: java.lang.Integer[];

        $r2 = new org.mockito.internal.reporting.PrintSettings;

        specialinvoke $r2.<org.mockito.internal.reporting.PrintSettings: void <init>()>();

        virtualinvoke $r2.<org.mockito.internal.reporting.PrintSettings: void setMatchersToBeDescribedWithExtraTypeInfo(java.lang.Integer[])>(r0);

        return $r2;
    }

    public boolean extraTypeInfoFor(int)
    {
        org.mockito.internal.reporting.PrintSettings r0;
        int i0;
        java.util.List $r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @this: org.mockito.internal.reporting.PrintSettings;

        i0 := @parameter0: int;

        $r1 = r0.<org.mockito.internal.reporting.PrintSettings: java.util.List withTypeInfo>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    public void setMatchersToBeDescribedWithExtraTypeInfo(java.lang.Integer[])
    {
        org.mockito.internal.reporting.PrintSettings r0;
        java.lang.Integer[] r1;
        java.util.List $r2;

        r0 := @this: org.mockito.internal.reporting.PrintSettings;

        r1 := @parameter0: java.lang.Integer[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        r0.<org.mockito.internal.reporting.PrintSettings: java.util.List withTypeInfo> = $r2;

        return;
    }

    public java.lang.String print(java.util.List, org.mockito.invocation.Invocation)
    {
        org.mockito.internal.reporting.PrintSettings r0;
        java.util.List r1;
        org.mockito.invocation.Invocation r2;
        java.lang.String r4, r5, $r13, $r17, $r21, $r23;
        org.mockito.internal.matchers.text.MatchersPrinter $r6;
        java.lang.StringBuilder $r7, $r10, $r11, $r14, $r15, $r16, $r18, $r19, $r20, $r22;
        java.lang.Object $r8;
        org.mockito.mock.MockName $r9;
        java.lang.reflect.Method $r12;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: org.mockito.internal.reporting.PrintSettings;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.mockito.invocation.Invocation;

        $r6 = new org.mockito.internal.matchers.text.MatchersPrinter;

        specialinvoke $r6.<org.mockito.internal.matchers.text.MatchersPrinter: void <init>()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke r2.<org.mockito.invocation.Invocation: java.lang.Object getMock()>();

        $r9 = staticinvoke <org.mockito.internal.util.MockUtil: org.mockito.mock.MockName getMockName(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = interfaceinvoke r2.<org.mockito.invocation.Invocation: java.lang.reflect.Method getMethod()>();

        $r13 = virtualinvoke $r12.<java.lang.reflect.Method: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r17 = virtualinvoke $r6.<org.mockito.internal.matchers.text.MatchersPrinter: java.lang.String getArgumentsLine(java.util.List,org.mockito.internal.reporting.PrintSettings)>(r1, r0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        r5 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<org.mockito.internal.reporting.PrintSettings: boolean isMultiline()>();

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 <= 45 goto label2;

     label1:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r6.<org.mockito.internal.matchers.text.MatchersPrinter: java.lang.String getArgumentsBlock(java.util.List,org.mockito.internal.reporting.PrintSettings)>(r1, r0);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;

     label2:
        return r5;
    }

    public java.lang.String print(org.mockito.invocation.Invocation)
    {
        org.mockito.internal.reporting.PrintSettings r0;
        org.mockito.invocation.Invocation r1;
        java.lang.Object[] $r2;
        java.util.List $r3;
        java.lang.String $r4;

        r0 := @this: org.mockito.internal.reporting.PrintSettings;

        r1 := @parameter0: org.mockito.invocation.Invocation;

        $r2 = interfaceinvoke r1.<org.mockito.invocation.Invocation: java.lang.Object[] getArguments()>();

        $r3 = staticinvoke <org.mockito.internal.invocation.ArgumentsProcessor: java.util.List argumentsToMatchers(java.lang.Object[])>($r2);

        $r4 = virtualinvoke r0.<org.mockito.internal.reporting.PrintSettings: java.lang.String print(java.util.List,org.mockito.invocation.Invocation)>($r3, r1);

        return $r4;
    }

    public java.lang.String print(org.mockito.invocation.MatchableInvocation)
    {
        org.mockito.internal.reporting.PrintSettings r0;
        org.mockito.invocation.MatchableInvocation r1;
        java.util.List $r2;
        org.mockito.invocation.Invocation $r3;
        java.lang.String $r4;

        r0 := @this: org.mockito.internal.reporting.PrintSettings;

        r1 := @parameter0: org.mockito.invocation.MatchableInvocation;

        $r2 = interfaceinvoke r1.<org.mockito.invocation.MatchableInvocation: java.util.List getMatchers()>();

        $r3 = interfaceinvoke r1.<org.mockito.invocation.MatchableInvocation: org.mockito.invocation.Invocation getInvocation()>();

        $r4 = virtualinvoke r0.<org.mockito.internal.reporting.PrintSettings: java.lang.String print(java.util.List,org.mockito.invocation.Invocation)>($r2, $r3);

        return $r4;
    }

    public static void <clinit>()
    {
        <org.mockito.internal.reporting.PrintSettings: int MAX_LINE_LENGTH> = 45;

        return;
    }
}
