class org.joda.time.format.DateTimeFormatterBuilder$StringLiteral extends java.lang.Object implements org.joda.time.format.InternalPrinter, org.joda.time.format.InternalParser
{
    private final java.lang.String iValue;

    void <init>(java.lang.String)
    {
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r0;
        java.lang.String r1;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue> = r1;

        return;
    }

    public int estimatePrintedLength()
    {
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        $r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public void printTo(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r0;
        java.lang.Appendable r1;
        long l0;
        org.joda.time.Chronology r2;
        int i1;
        org.joda.time.DateTimeZone r3;
        java.util.Locale r4;
        java.lang.String $r5;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        r1 := @parameter0: java.lang.Appendable;

        l0 := @parameter1: long;

        r2 := @parameter2: org.joda.time.Chronology;

        i1 := @parameter3: int;

        r3 := @parameter4: org.joda.time.DateTimeZone;

        r4 := @parameter5: java.util.Locale;

        $r5 = r0.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r5);

        return;
    }

    public void printTo(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r0;
        java.lang.Appendable r1;
        org.joda.time.ReadablePartial r2;
        java.util.Locale r3;
        java.lang.String $r4;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: org.joda.time.ReadablePartial;

        r3 := @parameter2: java.util.Locale;

        $r4 = r0.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

        return;
    }

    public int estimateParsedLength()
    {
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        $r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int)
    {
        org.joda.time.format.DateTimeFormatterBuilder$StringLiteral r0;
        org.joda.time.format.DateTimeParserBucket r1;
        java.lang.CharSequence r2;
        int i0, $i1, $i2, $i3;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$StringLiteral;

        r1 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        $r3 = r0.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        $z0 = staticinvoke <org.joda.time.format.DateTimeFormatterBuilder: boolean csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)>(r2, i0, $r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.joda.time.format.DateTimeFormatterBuilder$StringLiteral: java.lang.String iValue>;

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i3 = i0 + $i2;

        return $i3;

     label1:
        $i1 = i0 ^ -1;

        return $i1;
    }
}
