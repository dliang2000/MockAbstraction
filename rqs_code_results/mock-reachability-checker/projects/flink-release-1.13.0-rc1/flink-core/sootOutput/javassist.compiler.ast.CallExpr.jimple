public class javassist.compiler.ast.CallExpr extends javassist.compiler.ast.Expr
{
    private static final long serialVersionUID;
    private javassist.compiler.MemberResolver$Method method;

    private void <init>(javassist.compiler.ast.ASTree, javassist.compiler.ast.ASTList)
    {
        javassist.compiler.ast.CallExpr r0;
        javassist.compiler.ast.ASTree r1;
        javassist.compiler.ast.ASTList r2;

        r0 := @this: javassist.compiler.ast.CallExpr;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        r2 := @parameter1: javassist.compiler.ast.ASTList;

        specialinvoke r0.<javassist.compiler.ast.Expr: void <init>(int,javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTList)>(67, r1, r2);

        r0.<javassist.compiler.ast.CallExpr: javassist.compiler.MemberResolver$Method method> = null;

        return;
    }

    public void setMethod(javassist.compiler.MemberResolver$Method)
    {
        javassist.compiler.ast.CallExpr r0;
        javassist.compiler.MemberResolver$Method r1;

        r0 := @this: javassist.compiler.ast.CallExpr;

        r1 := @parameter0: javassist.compiler.MemberResolver$Method;

        r0.<javassist.compiler.ast.CallExpr: javassist.compiler.MemberResolver$Method method> = r1;

        return;
    }

    public javassist.compiler.MemberResolver$Method getMethod()
    {
        javassist.compiler.ast.CallExpr r0;
        javassist.compiler.MemberResolver$Method $r1;

        r0 := @this: javassist.compiler.ast.CallExpr;

        $r1 = r0.<javassist.compiler.ast.CallExpr: javassist.compiler.MemberResolver$Method method>;

        return $r1;
    }

    public static javassist.compiler.ast.CallExpr makeCall(javassist.compiler.ast.ASTree, javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.ASTree r0, r1;
        javassist.compiler.ast.CallExpr $r2;
        javassist.compiler.ast.ASTList $r3;

        r0 := @parameter0: javassist.compiler.ast.ASTree;

        r1 := @parameter1: javassist.compiler.ast.ASTree;

        $r2 = new javassist.compiler.ast.CallExpr;

        $r3 = new javassist.compiler.ast.ASTList;

        specialinvoke $r3.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree)>(r1);

        specialinvoke $r2.<javassist.compiler.ast.CallExpr: void <init>(javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTList)>(r0, $r3);

        return $r2;
    }

    public void accept(javassist.compiler.ast.Visitor) throws javassist.compiler.CompileError
    {
        javassist.compiler.ast.CallExpr r0;
        javassist.compiler.ast.Visitor r1;

        r0 := @this: javassist.compiler.ast.CallExpr;

        r1 := @parameter0: javassist.compiler.ast.Visitor;

        virtualinvoke r1.<javassist.compiler.ast.Visitor: void atCallExpr(javassist.compiler.ast.CallExpr)>(r0);

        return;
    }

    public static void <clinit>()
    {
        <javassist.compiler.ast.CallExpr: long serialVersionUID> = 1L;

        return;
    }
}
