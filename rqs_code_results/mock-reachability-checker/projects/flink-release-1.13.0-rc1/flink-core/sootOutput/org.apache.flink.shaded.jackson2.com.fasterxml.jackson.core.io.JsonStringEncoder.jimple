public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder extends java.lang.Object
{
    private static final char[] HC;
    private static final byte[] HB;
    private static final int SURR1_FIRST;
    private static final int SURR1_LAST;
    private static final int SURR2_FIRST;
    private static final int SURR2_LAST;
    private static final int INITIAL_CHAR_BUFFER_SIZE;
    private static final int INITIAL_BYTE_BUFFER_SIZE;
    private static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder instance;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder getInstance()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder instance>;

        return $r0;
    }

    public char[] quoteAsString(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder r0;
        java.lang.String r1;
        int[] r2;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i15, $i17;
        char[] $r3, $r4, r5, r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r6;
        char c14, c16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        r1 := @parameter0: java.lang.String;

        r5 = newarray (char)[120];

        r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes()>();

        i0 = lengthof r2;

        i12 = 0;

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        r6 = null;

        i13 = 0;

        r7 = null;

     label01:
        if i12 >= i1 goto label15;

     label02:
        c14 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i12);

        if c14 >= i0 goto label03;

        $i7 = r2[c14];

        if $i7 == 0 goto label03;

        goto label07;

     label03:
        $i6 = lengthof r5;

        if i13 < $i6 goto label05;

        if r6 != null goto label04;

        r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[])>(r5);

     label04:
        r5 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i13 = 0;

     label05:
        $i15 = i13;

        i13 = i13 + 1;

        r5[$i15] = c14;

        i12 = i12 + 1;

        if i12 < i1 goto label06;

        goto label15;

     label06:
        goto label02;

     label07:
        if r7 != null goto label08;

        r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: char[] _qbuf()>();

     label08:
        $i8 = i12;

        i12 = i12 + 1;

        c16 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i8);

        i2 = r2[c16];

        if i2 >= 0 goto label09;

        $i17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNumeric(int,char[])>(c16, r7);

        goto label10;

     label09:
        $i17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNamed(int,char[])>(i2, r7);

     label10:
        i3 = $i17;

        $i10 = i13 + $i17;

        $i9 = lengthof r5;

        if $i10 <= $i9 goto label13;

        $i11 = lengthof r5;

        i4 = $i11 - i13;

        if i4 <= 0 goto label11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r5, i13, i4);

     label11:
        if r6 != null goto label12;

        r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[])>(r5);

     label12:
        r5 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i5 = i3 - i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, i4, r5, 0, i5);

        i13 = i5;

        goto label14;

     label13:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r5, i13, $i17);

        i13 = i13 + $i17;

     label14:
        goto label01;

     label15:
        if r6 != null goto label16;

        $r4 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(r5, 0, i13);

        return $r4;

     label16:
        virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i13);

        $r3 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] contentsAsArray()>();

        return $r3;
    }

    public char[] quoteAsString(java.lang.CharSequence)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder r0;
        java.lang.CharSequence r1;
        int[] r2;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i15, $i17;
        boolean $z0;
        char[] $r3, $r4, $r6, r8, r9;
        java.lang.String $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r7;
        char c14, c16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label01;

        $r5 = (java.lang.String) r1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: char[] quoteAsString(java.lang.String)>($r5);

        return $r6;

     label01:
        r7 = null;

        r8 = newarray (char)[120];

        r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes()>();

        i0 = lengthof r2;

        i12 = 0;

        i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i13 = 0;

        r9 = null;

     label02:
        if i12 >= i1 goto label16;

     label03:
        c14 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i12);

        if c14 >= i0 goto label04;

        $i7 = r2[c14];

        if $i7 == 0 goto label04;

        goto label08;

     label04:
        $i6 = lengthof r8;

        if i13 < $i6 goto label06;

        if r7 != null goto label05;

        r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[])>(r8);

     label05:
        r8 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i13 = 0;

     label06:
        $i15 = i13;

        i13 = i13 + 1;

        r8[$i15] = c14;

        i12 = i12 + 1;

        if i12 < i1 goto label07;

        goto label16;

     label07:
        goto label03;

     label08:
        if r9 != null goto label09;

        r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: char[] _qbuf()>();

     label09:
        $i8 = i12;

        i12 = i12 + 1;

        c16 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i8);

        i2 = r2[c16];

        if i2 >= 0 goto label10;

        $i17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNumeric(int,char[])>(c16, r9);

        goto label11;

     label10:
        $i17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNamed(int,char[])>(i2, r9);

     label11:
        i3 = $i17;

        $i10 = i13 + $i17;

        $i9 = lengthof r8;

        if $i10 <= $i9 goto label14;

        $i11 = lengthof r8;

        i4 = $i11 - i13;

        if i4 <= 0 goto label12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, r8, i13, i4);

     label12:
        if r7 != null goto label13;

        r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[])>(r8);

     label13:
        r8 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i5 = i3 - i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, i4, r8, 0, i5);

        i13 = i5;

        goto label15;

     label14:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, r8, i13, $i17);

        i13 = i13 + $i17;

     label15:
        goto label02;

     label16:
        if r7 != null goto label17;

        $r4 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(r8, 0, i13);

        return $r4;

     label17:
        virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i13);

        $r3 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] contentsAsArray()>();

        return $r3;
    }

    public void quoteAsString(java.lang.CharSequence, java.lang.StringBuilder)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder r0;
        java.lang.CharSequence r1;
        java.lang.StringBuilder r2;
        int[] r3;
        int i0, i1, i2, $i4, $i5, i6, $i9;
        char[] r6;
        char c7, c8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.StringBuilder;

        r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes()>();

        i0 = lengthof r3;

        i6 = 0;

        i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        r6 = null;

     label1:
        if i6 >= i1 goto label9;

     label2:
        c7 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i6);

        if c7 >= i0 goto label3;

        $i4 = r3[c7];

        if $i4 == 0 goto label3;

        goto label5;

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c7);

        i6 = i6 + 1;

        if i6 < i1 goto label4;

        goto label9;

     label4:
        goto label2;

     label5:
        if r6 != null goto label6;

        r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: char[] _qbuf()>();

     label6:
        $i5 = i6;

        i6 = i6 + 1;

        c8 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i5);

        i2 = r3[c8];

        if i2 >= 0 goto label7;

        $i9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNumeric(int,char[])>(c8, r6);

        goto label8;

     label7:
        $i9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendNamed(int,char[])>(i2, r6);

     label8:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r6, 0, $i9);

        goto label1;

     label9:
        return;
    }

    public byte[] quoteAsUTF8(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i7, $i14, $i16, $i17, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i29, $i34, $i35, i36, i37, $i39, i42, i43, i44, i45, i46, i47, $i48;
        int[] r2;
        byte[] $r3, $r4, r5;
        char $c4, $c5, $c8, $c9, $c10, $c12, $c15, $c30, $c31, $c33, c38, c41;
        byte $b6, $b11, $b13, $b18, $b23, $b28, $b32, $b40;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        r1 := @parameter0: java.lang.String;

        i36 = 0;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i37 = 0;

        r5 = newarray (byte)[200];

        r6 = null;

     label01:
        if i36 >= i0 goto label22;

        r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes()>();

     label02:
        c38 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i36);

        if c38 > 127 goto label07;

        $i34 = r2[c38];

        if $i34 == 0 goto label03;

        goto label07;

     label03:
        $i35 = lengthof r5;

        if i37 < $i35 goto label05;

        if r6 != null goto label04;

        r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(r5, i37);

     label04:
        r5 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i37 = 0;

     label05:
        $i39 = i37;

        i37 = i37 + 1;

        $b40 = (byte) c38;

        r5[$i39] = $b40;

        i36 = i36 + 1;

        if i36 < i0 goto label06;

        goto label22;

     label06:
        goto label02;

     label07:
        if r6 != null goto label08;

        r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(r5, i37);

     label08:
        $i2 = lengthof r5;

        if i37 < $i2 goto label09;

        r5 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i37 = 0;

     label09:
        $i3 = i36;

        i36 = i36 + 1;

        c41 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        if c41 > 127 goto label10;

        i1 = r2[c41];

        i37 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int _appendByte(int,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder,int)>(c41, i1, r6, i37);

        r5 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] getCurrentSegment()>();

        goto label01;

     label10:
        if c41 > 2047 goto label11;

        i42 = i37 + 1;

        $c30 = c41 >> 6;

        $c31 = 192 | $c30;

        $b32 = (byte) $c31;

        r5[i37] = $b32;

        $c33 = c41 & 63;

        i43 = 128 | $c33;

        goto label20;

     label11:
        if c41 < 55296 goto label12;

        if c41 <= 57343 goto label14;

     label12:
        i44 = i37 + 1;

        $c4 = c41 >> 12;

        $c5 = 224 | $c4;

        $b6 = (byte) $c5;

        r5[i37] = $b6;

        $i7 = lengthof r5;

        if i44 < $i7 goto label13;

        r5 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i44 = 0;

     label13:
        i42 = i44 + 1;

        $c8 = c41 >> 6;

        $c9 = $c8 & 63;

        $c10 = 128 | $c9;

        $b11 = (byte) $c10;

        r5[i44] = $b11;

        $c12 = c41 & 63;

        i43 = 128 | $c12;

        goto label20;

     label14:
        if c41 <= 56319 goto label15;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(c41);

     label15:
        if i36 < i0 goto label16;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(c41);

     label16:
        $i14 = i36;

        i36 = i36 + 1;

        $c15 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i14);

        i45 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int _convert(int,int)>(c41, $c15);

        if i45 <= 1114111 goto label17;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(i45);

     label17:
        i46 = i37 + 1;

        $i16 = i45 >> 18;

        $i17 = 240 | $i16;

        $b18 = (byte) $i17;

        r5[i37] = $b18;

        $i19 = lengthof r5;

        if i46 < $i19 goto label18;

        r5 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i46 = 0;

     label18:
        i47 = i46 + 1;

        $i20 = i45 >> 12;

        $i21 = $i20 & 63;

        $i22 = 128 | $i21;

        $b23 = (byte) $i22;

        r5[i46] = $b23;

        $i24 = lengthof r5;

        if i47 < $i24 goto label19;

        r5 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i47 = 0;

     label19:
        i42 = i47 + 1;

        $i25 = i45 >> 6;

        $i26 = $i25 & 63;

        $i27 = 128 | $i26;

        $b28 = (byte) $i27;

        r5[i47] = $b28;

        $i29 = i45 & 63;

        i43 = 128 | $i29;

     label20:
        $i48 = lengthof r5;

        if i42 < $i48 goto label21;

        r5 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i42 = 0;

     label21:
        i37 = i42 + 1;

        $b13 = (byte) i43;

        r5[i42] = $b13;

        goto label01;

     label22:
        if r6 != null goto label23;

        $r4 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r5, 0, i37);

        return $r4;

     label23:
        $r3 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] completeAndCoalesce(int)>(i37);

        return $r3;
    }

    public byte[] encodeAsUTF8(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i12, $i14, $i15, $i17, $i18, $i19, $i21, $i22, $i23, $i25, $i26, $i28, i29, i30, i31, i32, $i33, i35, i36, i37, i38;
        byte[] $r2, $r3, r4;
        byte $b4, $b8, $b11, $b16, $b20, $b24, $b27, $b34;
        char $c13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        r1 := @parameter0: java.lang.String;

        i29 = 0;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i30 = 0;

        r4 = newarray (byte)[200];

        i31 = lengthof r4;

        r5 = null;

     label01:
        if i29 >= i0 goto label20;

        $i1 = i29;

        i29 = i29 + 1;

        i32 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i1);

     label02:
        if i32 > 127 goto label06;

        if i30 < i31 goto label04;

        if r5 != null goto label03;

        r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(r4, i30);

     label03:
        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i30 = 0;

     label04:
        $i33 = i30;

        i30 = i30 + 1;

        $b34 = (byte) i32;

        r4[$i33] = $b34;

        if i29 < i0 goto label05;

        goto label20;

     label05:
        $i28 = i29;

        i29 = i29 + 1;

        i32 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i28);

        goto label02;

     label06:
        if r5 != null goto label07;

        r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(r4, i30);

     label07:
        if i30 < i31 goto label08;

        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i30 = 0;

     label08:
        if i32 >= 2048 goto label09;

        i35 = i30 + 1;

        $i25 = i32 >> 6;

        $i26 = 192 | $i25;

        $b27 = (byte) $i26;

        r4[i30] = $b27;

        goto label18;

     label09:
        if i32 < 55296 goto label10;

        if i32 <= 57343 goto label12;

     label10:
        i36 = i30 + 1;

        $i2 = i32 >> 12;

        $i3 = 224 | $i2;

        $b4 = (byte) $i3;

        r4[i30] = $b4;

        if i36 < i31 goto label11;

        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i36 = 0;

     label11:
        i35 = i36 + 1;

        $i5 = i32 >> 6;

        $i6 = $i5 & 63;

        $i7 = 128 | $i6;

        $b8 = (byte) $i7;

        r4[i36] = $b8;

        goto label18;

     label12:
        if i32 <= 56319 goto label13;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(i32);

     label13:
        if i29 < i0 goto label14;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(i32);

     label14:
        $i12 = i29;

        i29 = i29 + 1;

        $c13 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i12);

        i32 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int _convert(int,int)>(i32, $c13);

        if i32 <= 1114111 goto label15;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(i32);

     label15:
        i37 = i30 + 1;

        $i14 = i32 >> 18;

        $i15 = 240 | $i14;

        $b16 = (byte) $i15;

        r4[i30] = $b16;

        if i37 < i31 goto label16;

        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i37 = 0;

     label16:
        i38 = i37 + 1;

        $i17 = i32 >> 12;

        $i18 = $i17 & 63;

        $i19 = 128 | $i18;

        $b20 = (byte) $i19;

        r4[i37] = $b20;

        if i38 < i31 goto label17;

        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i38 = 0;

     label17:
        i35 = i38 + 1;

        $i21 = i32 >> 6;

        $i22 = $i21 & 63;

        $i23 = 128 | $i22;

        $b24 = (byte) $i23;

        r4[i38] = $b24;

     label18:
        if i35 < i31 goto label19;

        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i35 = 0;

     label19:
        i30 = i35 + 1;

        $i9 = i32 & 63;

        $i10 = 128 | $i9;

        $b11 = (byte) $i10;

        r4[i35] = $b11;

        goto label01;

     label20:
        if r5 != null goto label21;

        $r3 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r4, 0, i30);

        return $r3;

     label21:
        $r2 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] completeAndCoalesce(int)>(i30);

        return $r2;
    }

    public byte[] encodeAsUTF8(java.lang.CharSequence)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder r0;
        java.lang.CharSequence r1;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i12, $i14, $i15, $i17, $i18, $i19, $i21, $i22, $i23, $i25, $i26, $i28, i29, i30, i31, i32, $i33, i35, i36, i37, i38;
        byte[] $r2, $r3, r4;
        byte $b4, $b8, $b11, $b16, $b20, $b24, $b27, $b34;
        char $c13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        r1 := @parameter0: java.lang.CharSequence;

        i29 = 0;

        i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i30 = 0;

        r4 = newarray (byte)[200];

        i31 = lengthof r4;

        r5 = null;

     label01:
        if i29 >= i0 goto label20;

        $i1 = i29;

        i29 = i29 + 1;

        i32 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i1);

     label02:
        if i32 > 127 goto label06;

        if i30 < i31 goto label04;

        if r5 != null goto label03;

        r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(r4, i30);

     label03:
        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i30 = 0;

     label04:
        $i33 = i30;

        i30 = i30 + 1;

        $b34 = (byte) i32;

        r4[$i33] = $b34;

        if i29 < i0 goto label05;

        goto label20;

     label05:
        $i28 = i29;

        i29 = i29 + 1;

        i32 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i28);

        goto label02;

     label06:
        if r5 != null goto label07;

        r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int)>(r4, i30);

     label07:
        if i30 < i31 goto label08;

        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i30 = 0;

     label08:
        if i32 >= 2048 goto label09;

        i35 = i30 + 1;

        $i25 = i32 >> 6;

        $i26 = 192 | $i25;

        $b27 = (byte) $i26;

        r4[i30] = $b27;

        goto label18;

     label09:
        if i32 < 55296 goto label10;

        if i32 <= 57343 goto label12;

     label10:
        i36 = i30 + 1;

        $i2 = i32 >> 12;

        $i3 = 224 | $i2;

        $b4 = (byte) $i3;

        r4[i30] = $b4;

        if i36 < i31 goto label11;

        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i36 = 0;

     label11:
        i35 = i36 + 1;

        $i5 = i32 >> 6;

        $i6 = $i5 & 63;

        $i7 = 128 | $i6;

        $b8 = (byte) $i7;

        r4[i36] = $b8;

        goto label18;

     label12:
        if i32 <= 56319 goto label13;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(i32);

     label13:
        if i29 < i0 goto label14;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(i32);

     label14:
        $i12 = i29;

        i29 = i29 + 1;

        $c13 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i12);

        i32 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int _convert(int,int)>(i32, $c13);

        if i32 <= 1114111 goto label15;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>(i32);

     label15:
        i37 = i30 + 1;

        $i14 = i32 >> 18;

        $i15 = 240 | $i14;

        $b16 = (byte) $i15;

        r4[i30] = $b16;

        if i37 < i31 goto label16;

        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i37 = 0;

     label16:
        i38 = i37 + 1;

        $i17 = i32 >> 12;

        $i18 = $i17 & 63;

        $i19 = 128 | $i18;

        $b20 = (byte) $i19;

        r4[i37] = $b20;

        if i38 < i31 goto label17;

        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i38 = 0;

     label17:
        i35 = i38 + 1;

        $i21 = i32 >> 6;

        $i22 = $i21 & 63;

        $i23 = 128 | $i22;

        $b24 = (byte) $i23;

        r4[i38] = $b24;

     label18:
        if i35 < i31 goto label19;

        r4 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i31 = lengthof r4;

        i35 = 0;

     label19:
        i30 = i35 + 1;

        $i9 = i32 & 63;

        $i10 = 128 | $i9;

        $b11 = (byte) $i10;

        r4[i35] = $b11;

        goto label01;

     label20:
        if r5 != null goto label21;

        $r3 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r4, 0, i30);

        return $r3;

     label21:
        $r2 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] completeAndCoalesce(int)>(i30);

        return $r2;
    }

    private char[] _qbuf()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder r0;
        char[] r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        r1 = newarray (char)[6];

        r1[0] = 92;

        r1[2] = 48;

        r1[3] = 48;

        return r1;
    }

    private int _appendNumeric(int, char[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder r0;
        int i0, $i1, $i3;
        char[] r1, $r2, $r3;
        char $c2, $c4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: char[];

        r1[1] = 117;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: char[] HC>;

        $i1 = i0 >> 4;

        $c2 = $r2[$i1];

        r1[4] = $c2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: char[] HC>;

        $i3 = i0 & 15;

        $c4 = $r3[$i3];

        r1[5] = $c4;

        return 6;
    }

    private int _appendNamed(int, char[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder r0;
        int i0;
        char[] r1;
        char $c1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        i0 := @parameter0: int;

        r1 := @parameter1: char[];

        $c1 = (char) i0;

        r1[1] = $c1;

        return 2;
    }

    private int _appendByte(int, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder r0;
        int i0, i1, i2, $i4, $i5, $i7, $i9, $i11, i13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r1;
        byte $b3, $b6, $b8, $b10, $b12;
        byte[] $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        i13 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        i1 := @parameter3: int;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void setCurrentSegmentLength(int)>(i1);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(92);

        if i0 >= 0 goto label3;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(117);

        if i13 <= 255 goto label1;

        i2 = i13 >> 8;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] HB>;

        $i9 = i2 >> 4;

        $b10 = $r4[$i9];

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>($b10);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] HB>;

        $i11 = i2 & 15;

        $b12 = $r5[$i11];

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>($b12);

        i13 = i13 & 255;

        goto label2;

     label1:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(48);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(48);

     label2:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] HB>;

        $i5 = i13 >> 4;

        $b6 = $r2[$i5];

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>($b6);

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] HB>;

        $i7 = i13 & 15;

        $b8 = $r3[$i7];

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>($b8);

        goto label4;

     label3:
        $b3 = (byte) i0;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>($b3);

     label4:
        $i4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int getCurrentSegmentLength()>();

        return $i4;
    }

    private static int _convert(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r6, $r9;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 < 56320 goto label1;

        if i1 <= 57343 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broken surrogate pair: first char 0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", second 0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; illegal combination");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r0;

     label2:
        $i2 = i0 - 55296;

        $i3 = $i2 << 10;

        $i5 = 65536 + $i3;

        $i4 = i1 - 56320;

        $i6 = $i5 + $i4;

        return $i6;
    }

    private static void _illegal(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.lang.String illegalSurrogateDesc(int)>(i0);

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r0;
    }

    static void <clinit>()
    {
        char[] $r0;
        byte[] $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r2;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int INITIAL_BYTE_BUFFER_SIZE> = 200;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int INITIAL_CHAR_BUFFER_SIZE> = 120;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int SURR2_LAST> = 57343;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int SURR2_FIRST> = 56320;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int SURR1_LAST> = 56319;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: int SURR1_FIRST> = 55296;

        $r0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: char[] copyHexChars()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: char[] HC> = $r0;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: byte[] copyHexBytes()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] HB> = $r1;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder instance> = $r2;

        return;
    }
}
