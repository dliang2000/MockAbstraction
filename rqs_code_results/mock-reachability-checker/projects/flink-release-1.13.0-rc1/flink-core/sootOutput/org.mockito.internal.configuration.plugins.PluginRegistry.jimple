class org.mockito.internal.configuration.plugins.PluginRegistry extends java.lang.Object
{
    private final org.mockito.plugins.PluginSwitch pluginSwitch;
    private final org.mockito.plugins.MockMaker mockMaker;
    private final org.mockito.plugins.StackTraceCleanerProvider stackTraceCleanerProvider;
    private final org.mockito.plugins.InstantiatorProvider2 instantiatorProvider;
    private org.mockito.plugins.AnnotationEngine annotationEngine;

    void <init>()
    {
        org.mockito.internal.configuration.plugins.PluginRegistry r0;
        java.lang.Object r1, $r4, $r8, $r12, $r16;
        org.mockito.internal.configuration.plugins.PluginLoader $r2, $r6, $r10, $r14, $r18;
        org.mockito.internal.configuration.plugins.DefaultPluginSwitch $r3;
        org.mockito.plugins.PluginSwitch $r5, $r7, $r11, $r15, $r19;
        org.mockito.plugins.MockMaker $r9;
        org.mockito.plugins.StackTraceCleanerProvider $r13;
        org.mockito.plugins.AnnotationEngine $r17;
        boolean $z0;
        org.mockito.plugins.InstantiatorProvider2 $r20;
        org.mockito.internal.creation.instance.InstantiatorProviderAdapter $r21;
        org.mockito.plugins.InstantiatorProvider $r22;

        r0 := @this: org.mockito.internal.configuration.plugins.PluginRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.mockito.internal.configuration.plugins.PluginLoader;

        $r3 = new org.mockito.internal.configuration.plugins.DefaultPluginSwitch;

        specialinvoke $r3.<org.mockito.internal.configuration.plugins.DefaultPluginSwitch: void <init>()>();

        specialinvoke $r2.<org.mockito.internal.configuration.plugins.PluginLoader: void <init>(org.mockito.plugins.PluginSwitch)>($r3);

        $r4 = virtualinvoke $r2.<org.mockito.internal.configuration.plugins.PluginLoader: java.lang.Object loadPlugin(java.lang.Class)>(class "Lorg/mockito/plugins/PluginSwitch;");

        $r5 = (org.mockito.plugins.PluginSwitch) $r4;

        r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.PluginSwitch pluginSwitch> = $r5;

        $r6 = new org.mockito.internal.configuration.plugins.PluginLoader;

        $r7 = r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.PluginSwitch pluginSwitch>;

        specialinvoke $r6.<org.mockito.internal.configuration.plugins.PluginLoader: void <init>(org.mockito.plugins.PluginSwitch,java.lang.String)>($r7, "mock-maker-inline");

        $r8 = virtualinvoke $r6.<org.mockito.internal.configuration.plugins.PluginLoader: java.lang.Object loadPlugin(java.lang.Class)>(class "Lorg/mockito/plugins/MockMaker;");

        $r9 = (org.mockito.plugins.MockMaker) $r8;

        r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.MockMaker mockMaker> = $r9;

        $r10 = new org.mockito.internal.configuration.plugins.PluginLoader;

        $r11 = r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.PluginSwitch pluginSwitch>;

        specialinvoke $r10.<org.mockito.internal.configuration.plugins.PluginLoader: void <init>(org.mockito.plugins.PluginSwitch)>($r11);

        $r12 = virtualinvoke $r10.<org.mockito.internal.configuration.plugins.PluginLoader: java.lang.Object loadPlugin(java.lang.Class)>(class "Lorg/mockito/plugins/StackTraceCleanerProvider;");

        $r13 = (org.mockito.plugins.StackTraceCleanerProvider) $r12;

        r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.StackTraceCleanerProvider stackTraceCleanerProvider> = $r13;

        $r14 = new org.mockito.internal.configuration.plugins.PluginLoader;

        $r15 = r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.PluginSwitch pluginSwitch>;

        specialinvoke $r14.<org.mockito.internal.configuration.plugins.PluginLoader: void <init>(org.mockito.plugins.PluginSwitch)>($r15);

        $r16 = virtualinvoke $r14.<org.mockito.internal.configuration.plugins.PluginLoader: java.lang.Object loadPlugin(java.lang.Class)>(class "Lorg/mockito/plugins/AnnotationEngine;");

        $r17 = (org.mockito.plugins.AnnotationEngine) $r16;

        r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.AnnotationEngine annotationEngine> = $r17;

        $r18 = new org.mockito.internal.configuration.plugins.PluginLoader;

        $r19 = r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.PluginSwitch pluginSwitch>;

        specialinvoke $r18.<org.mockito.internal.configuration.plugins.PluginLoader: void <init>(org.mockito.plugins.PluginSwitch)>($r19);

        r1 = virtualinvoke $r18.<org.mockito.internal.configuration.plugins.PluginLoader: java.lang.Object loadPlugin(java.lang.Class,java.lang.Class)>(class "Lorg/mockito/plugins/InstantiatorProvider2;", class "Lorg/mockito/plugins/InstantiatorProvider;");

        $z0 = r1 instanceof org.mockito.plugins.InstantiatorProvider;

        if $z0 == 0 goto label1;

        $r21 = new org.mockito.internal.creation.instance.InstantiatorProviderAdapter;

        $r22 = (org.mockito.plugins.InstantiatorProvider) r1;

        specialinvoke $r21.<org.mockito.internal.creation.instance.InstantiatorProviderAdapter: void <init>(org.mockito.plugins.InstantiatorProvider)>($r22);

        r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.InstantiatorProvider2 instantiatorProvider> = $r21;

        goto label2;

     label1:
        $r20 = (org.mockito.plugins.InstantiatorProvider2) r1;

        r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.InstantiatorProvider2 instantiatorProvider> = $r20;

     label2:
        return;
    }

    org.mockito.plugins.StackTraceCleanerProvider getStackTraceCleanerProvider()
    {
        org.mockito.internal.configuration.plugins.PluginRegistry r0;
        org.mockito.plugins.StackTraceCleanerProvider $r1;

        r0 := @this: org.mockito.internal.configuration.plugins.PluginRegistry;

        $r1 = r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.StackTraceCleanerProvider stackTraceCleanerProvider>;

        return $r1;
    }

    org.mockito.plugins.MockMaker getMockMaker()
    {
        org.mockito.internal.configuration.plugins.PluginRegistry r0;
        org.mockito.plugins.MockMaker $r1;

        r0 := @this: org.mockito.internal.configuration.plugins.PluginRegistry;

        $r1 = r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.MockMaker mockMaker>;

        return $r1;
    }

    org.mockito.plugins.InstantiatorProvider2 getInstantiatorProvider()
    {
        org.mockito.internal.configuration.plugins.PluginRegistry r0;
        org.mockito.plugins.InstantiatorProvider2 $r1;

        r0 := @this: org.mockito.internal.configuration.plugins.PluginRegistry;

        $r1 = r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.InstantiatorProvider2 instantiatorProvider>;

        return $r1;
    }

    org.mockito.plugins.AnnotationEngine getAnnotationEngine()
    {
        org.mockito.internal.configuration.plugins.PluginRegistry r0;
        org.mockito.plugins.AnnotationEngine $r1;

        r0 := @this: org.mockito.internal.configuration.plugins.PluginRegistry;

        $r1 = r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.AnnotationEngine annotationEngine>;

        return $r1;
    }
}
