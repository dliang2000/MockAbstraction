public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers extends java.lang.Object
{
    public static final java.lang.String SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS;
    private static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager _bufferRecyclerTracker;
    protected static final java.lang.ThreadLocal _recyclerRef;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler getBufferRecycler()
    {
        java.lang.ThreadLocal $r0, $r6;
        java.lang.Object $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r3, $r9, r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager $r4, $r7;
        java.lang.ref.SoftReference $r5, r8, r11;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers: java.lang.ThreadLocal _recyclerRef>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r8 = (java.lang.ref.SoftReference) $r1;

        if r8 != null goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r8.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r9 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler) $r2;

     label2:
        r10 = $r9;

        if $r9 != null goto label5;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: void <init>()>();

        r10 = $r3;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager _bufferRecyclerTracker>;

        if $r4 == null goto label3;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager _bufferRecyclerTracker>;

        r11 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.lang.ref.SoftReference wrapAndTrack(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler)>($r3);

        goto label4;

     label3:
        $r5 = new java.lang.ref.SoftReference;

        specialinvoke $r5.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r3);

        r11 = $r5;

     label4:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers: java.lang.ThreadLocal _recyclerRef>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>(r11);

     label5:
        return r10;
    }

    public static int releaseBuffers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager $r0, $r1;
        int $i0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager _bufferRecyclerTracker>;

        if $r0 == null goto label1;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager _bufferRecyclerTracker>;

        $i0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: int releaseBuffers()>();

        return $i0;

     label1:
        return -1;
    }

    static void <clinit>()
    {
        java.lang.String $r1, $r2;
        java.lang.ThreadLocal $r3;
        java.lang.SecurityException $r4;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager $r5;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers: java.lang.String SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS> = "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers.trackReusableBuffers";

        z0 = 0;

     label1:
        $r1 = "true";

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers.trackReusableBuffers");

        z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        if z0 == 0 goto label5;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager instance()>();

        goto label6;

     label5:
        $r5 = null;

     label6:
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager _bufferRecyclerTracker> = $r5;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers: java.lang.ThreadLocal _recyclerRef> = $r3;

        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }
}
