class javassist.bytecode.AnnotationsAttribute$Renamer extends javassist.bytecode.AnnotationsAttribute$Walker
{
    javassist.bytecode.ConstPool cpool;
    java.util.Map classnames;

    void <init>(byte[], javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.AnnotationsAttribute$Renamer r0;
        byte[] r1;
        javassist.bytecode.ConstPool r2;
        java.util.Map r3;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Renamer;

        r1 := @parameter0: byte[];

        r2 := @parameter1: javassist.bytecode.ConstPool;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: void <init>(byte[])>(r1);

        r0.<javassist.bytecode.AnnotationsAttribute$Renamer: javassist.bytecode.ConstPool cpool> = r2;

        r0.<javassist.bytecode.AnnotationsAttribute$Renamer: java.util.Map classnames> = r3;

        return;
    }

    int 'annotation'(int, int, int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Renamer r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Renamer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = i0 - 4;

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Renamer: void renameType(int,int)>($i3, i1);

        $i4 = specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: int 'annotation'(int,int,int)>(i0, i1, i2);

        return $i4;
    }

    void enumMemberValue(int, int, int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Renamer r0;
        int i0, i1, i2, $i3;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Renamer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = i0 + 1;

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Renamer: void renameType(int,int)>($i3, i1);

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: void enumMemberValue(int,int,int)>(i0, i1, i2);

        return;
    }

    void classMemberValue(int, int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Renamer r0;
        int i0, i1, $i2;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Renamer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + 1;

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Renamer: void renameType(int,int)>($i2, i1);

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: void classMemberValue(int,int)>(i0, i1);

        return;
    }

    private void renameType(int, int)
    {
        javassist.bytecode.AnnotationsAttribute$Renamer r0;
        int i0, i1, i2;
        java.lang.String r1, r2;
        javassist.bytecode.ConstPool $r3, $r5;
        java.util.Map $r4;
        boolean $z0;
        byte[] $r6;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Renamer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<javassist.bytecode.AnnotationsAttribute$Renamer: javassist.bytecode.ConstPool cpool>;

        r1 = virtualinvoke $r3.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>(i1);

        $r4 = r0.<javassist.bytecode.AnnotationsAttribute$Renamer: java.util.Map classnames>;

        r2 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String rename(java.lang.String,java.util.Map)>(r1, $r4);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r5 = r0.<javassist.bytecode.AnnotationsAttribute$Renamer: javassist.bytecode.ConstPool cpool>;

        i2 = virtualinvoke $r5.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r2);

        $r6 = r0.<javassist.bytecode.AnnotationsAttribute$Renamer: byte[] info>;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i2, $r6, i0);

     label1:
        return;
    }
}
