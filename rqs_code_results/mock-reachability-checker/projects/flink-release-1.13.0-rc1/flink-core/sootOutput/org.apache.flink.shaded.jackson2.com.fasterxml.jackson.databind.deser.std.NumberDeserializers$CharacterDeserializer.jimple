public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer
{
    private static final long serialVersionUID;
    static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer primitiveInstance;
    static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer wrapperInstance;

    public void <init>(java.lang.Class, java.lang.Character)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer r0;
        java.lang.Class r1;
        java.lang.Character r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Character;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(0);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer: void <init>(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Object,java.lang.Object)>(r1, $r3, r2, $r4);

        return;
    }

    public java.lang.Character deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int i0, $i1, $i2, $i3, $i5;
        boolean $z0, $z1;
        java.lang.Object $r3, $r9, $r11, $r25, $r32, $r34, $r36, $r38, $r41, $r45;
        java.lang.Character $r4, $r10, $r12, $r26, $r27, $r33, $r35, $r37, $r39, $r40, $r42, $r46;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape $r6;
        java.lang.Class $r7, $r13, $r22, $r30, $r43;
        int[] $r8;
        java.lang.Number $r14;
        java.lang.StringBuilder $r15, $r16, $r18, $r19;
        java.lang.String $r17, $r20, r47, r50;
        java.lang.Integer $r23;
        java.lang.Object[] $r24, $r31;
        char $c4, $c6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction $r28, $r29, r48, r49;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r44;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i1)
        {
            case 1: goto label10;
            case 2: goto label12;
            case 3: goto label11;
            case 4: goto label12;
            case 5: goto label12;
            case 6: goto label01;
            case 7: goto label02;
            case 8: goto label12;
            case 9: goto label12;
            case 10: goto label12;
            case 11: goto label08;
            default: goto label12;
        };

     label01:
        r47 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label13;

     label02:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()>();

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Class _valueClass>;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape Integer>;

        r48 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>($r5, $r7, $r6);

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$1: int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction>;

        $i2 = virtualinvoke r48.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: int ordinal()>();

        $i3 = $r8[$i2];

        tableswitch($i3)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            default: goto label06;
        };

     label03:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Class _valueClass>;

        $r14 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Integer value (");

        $r17 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String)>(r2, r48, $r13, $r14, $r20);

     label04:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r12 = (java.lang.Character) $r11;

        return $r12;

     label05:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r10 = (java.lang.Character) $r9;

        return $r10;

     label06:
        i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getIntValue()>();

        if i0 < 0 goto label07;

        if i0 > 65535 goto label07;

        $c4 = (char) i0;

        $r27 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c4);

        return $r27;

     label07:
        $r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Class handledType()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r24 = newarray (java.lang.Object)[0];

        $r25 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdNumberValue(java.lang.Class,java.lang.Number,java.lang.String,java.lang.Object[])>($r22, $r23, "value outside valid Character range (0x0000 - 0xFFFF)", $r24);

        $r26 = (java.lang.Character) $r25;

        return $r26;

     label08:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: boolean _primitive>;

        if $z0 == 0 goto label09;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

     label09:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r4 = (java.lang.Character) $r3;

        return $r4;

     label10:
        $r43 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Class _valueClass>;

        r47 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r43);

        goto label13;

     label11:
        $r41 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Object _deserializeFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r42 = (java.lang.Character) $r41;

        return $r42;

     label12:
        $r44 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r45 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r44, r1);

        $r46 = (java.lang.Character) $r45;

        return $r46;

     label13:
        $i5 = virtualinvoke r47.<java.lang.String: int length()>();

        if $i5 != 1 goto label14;

        $c6 = virtualinvoke r47.<java.lang.String: char charAt(int)>(0);

        $r40 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c6);

        return $r40;

     label14:
        r49 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r47);

        $r28 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r49 != $r28 goto label15;

        $r38 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r39 = (java.lang.Character) $r38;

        return $r39;

     label15:
        $r29 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r49 != $r29 goto label16;

        $r36 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r37 = (java.lang.Character) $r36;

        return $r37;

     label16:
        r50 = virtualinvoke r47.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: boolean _checkTextualNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r50);

        if $z1 == 0 goto label17;

        $r34 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r35 = (java.lang.Character) $r34;

        return $r35;

     label17:
        $r30 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Class handledType()>();

        $r31 = newarray (java.lang.Object)[0];

        $r32 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r30, r50, "Expected either Integer value code or 1-character String", $r31);

        $r33 = (java.lang.Character) $r32;

        return $r33;
    }

    public volatile java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer;

        $r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern()>();

        return $r1;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Character $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: java.lang.Character deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer $r0, $r3;
        java.lang.Class $r1;
        java.lang.Character $r2;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: long serialVersionUID> = 1L;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer;

        $r1 = <java.lang.Character: java.lang.Class TYPE>;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(0);

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: void <init>(java.lang.Class,java.lang.Character)>($r1, $r2);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer primitiveInstance> = $r0;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: void <init>(java.lang.Class,java.lang.Character)>(class "Ljava/lang/Character;", null);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer wrapperInstance> = $r3;

        return;
    }
}
