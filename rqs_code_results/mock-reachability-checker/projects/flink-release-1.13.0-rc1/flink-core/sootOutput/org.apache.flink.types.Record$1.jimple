final class org.apache.flink.types.Record$1 extends java.lang.Object implements org.apache.flink.types.Value
{
    private static final long serialVersionUID;

    void <init>()
    {
        org.apache.flink.types.Record$1 r0;

        r0 := @this: org.apache.flink.types.Record$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void write(org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.types.Record$1 r0;
        org.apache.flink.core.memory.DataOutputView r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.types.Record$1;

        r1 := @parameter0: org.apache.flink.core.memory.DataOutputView;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void read(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.types.Record$1 r0;
        org.apache.flink.core.memory.DataInputView r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.types.Record$1;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public static void <clinit>()
    {
        <org.apache.flink.types.Record$1: long serialVersionUID> = 1L;

        return;
    }
}
