public class javassist.bytecode.InnerClassesAttribute extends javassist.bytecode.AttributeInfo
{
    public static final java.lang.String tag;

    void <init>(javassist.bytecode.ConstPool, int, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.InnerClassesAttribute r0;
        javassist.bytecode.ConstPool r1;
        int i0;
        java.io.DataInputStream r2;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.DataInputStream;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r1, i0, r2);

        return;
    }

    private void <init>(javassist.bytecode.ConstPool, byte[])
    {
        javassist.bytecode.InnerClassesAttribute r0;
        javassist.bytecode.ConstPool r1;
        byte[] r2;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: byte[];

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, "InnerClasses", r2);

        return;
    }

    public void <init>(javassist.bytecode.ConstPool)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        javassist.bytecode.ConstPool r1;
        byte[] $r2, $r3;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        $r2 = newarray (byte)[2];

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, "InnerClasses", $r2);

        $r3 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(0, $r3, 0);

        return;
    }

    public int tableLength()
    {
        javassist.bytecode.InnerClassesAttribute r0;
        byte[] $r1;
        int $i0;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        $r1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        $i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, 0);

        return $i0;
    }

    public int innerClassIndex(int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        $i1 = i0 * 8;

        $i2 = $i1 + 2;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    public java.lang.String innerClass(int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, i1;
        javassist.bytecode.ConstPool $r1;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: int innerClassIndex(int)>(i0);

        if i1 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<javassist.bytecode.InnerClassesAttribute: javassist.bytecode.ConstPool constPool>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>(i1);

        return $r2;
    }

    public void setInnerClassIndex(int, int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        $i2 = i0 * 8;

        $i3 = $i2 + 2;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i1, $r1, $i3);

        return;
    }

    public int outerClassIndex(int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        $i1 = i0 * 8;

        $i2 = $i1 + 4;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    public java.lang.String outerClass(int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, i1;
        javassist.bytecode.ConstPool $r1;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: int outerClassIndex(int)>(i0);

        if i1 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<javassist.bytecode.InnerClassesAttribute: javassist.bytecode.ConstPool constPool>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>(i1);

        return $r2;
    }

    public void setOuterClassIndex(int, int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        $i2 = i0 * 8;

        $i3 = $i2 + 4;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i1, $r1, $i3);

        return;
    }

    public int innerNameIndex(int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        $i1 = i0 * 8;

        $i2 = $i1 + 6;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    public java.lang.String innerName(int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, i1;
        javassist.bytecode.ConstPool $r1;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: int innerNameIndex(int)>(i0);

        if i1 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<javassist.bytecode.InnerClassesAttribute: javassist.bytecode.ConstPool constPool>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>(i1);

        return $r2;
    }

    public void setInnerNameIndex(int, int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        $i2 = i0 * 8;

        $i3 = $i2 + 6;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i1, $r1, $i3);

        return;
    }

    public int accessFlags(int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        $i1 = i0 * 8;

        $i2 = $i1 + 8;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    public void setAccessFlags(int, int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        $i2 = i0 * 8;

        $i3 = $i2 + 8;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i1, $r1, $i3);

        return;
    }

    public int find(java.lang.String)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        java.lang.String r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: int tableLength()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: java.lang.String innerClass(int)>(i1);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public void append(java.lang.String, java.lang.String, java.lang.String, int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        java.lang.String r1, r2, r3;
        int i0, i1, i2, i3;
        javassist.bytecode.ConstPool $r4, $r5, $r6;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r4 = r0.<javassist.bytecode.InnerClassesAttribute: javassist.bytecode.ConstPool constPool>;

        i1 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        $r5 = r0.<javassist.bytecode.InnerClassesAttribute: javassist.bytecode.ConstPool constPool>;

        i2 = virtualinvoke $r5.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r2);

        $r6 = r0.<javassist.bytecode.InnerClassesAttribute: javassist.bytecode.ConstPool constPool>;

        i3 = virtualinvoke $r6.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r3);

        virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: void append(int,int,int,int)>(i1, i2, i3, i0);

        return;
    }

    public void append(int, int, int, int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, i11, i12;
        byte[] r1, r2;
        byte $b10;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        i4 = lengthof r1;

        $i5 = i4 + 8;

        r2 = newarray (byte)[$i5];

        i11 = 2;

     label1:
        if i11 >= i4 goto label2;

        $b10 = r1[i11];

        r2[i11] = $b10;

        i11 = i11 + 1;

        goto label1;

     label2:
        i12 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r1, 0);

        $i6 = i12 + 1;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i6, r2, 0);

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i0, r2, i4);

        $i7 = i4 + 2;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i1, r2, $i7);

        $i8 = i4 + 4;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i2, r2, $i8);

        $i9 = i4 + 6;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i3, r2, $i9);

        virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: void set(byte[])>(r2);

        return;
    }

    public int remove(int)
    {
        javassist.bytecode.InnerClassesAttribute r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i11, i12;
        byte[] r1, r2;
        byte $b10;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        i1 = lengthof r1;

        if i1 >= 10 goto label1;

        return 0;

     label1:
        i2 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r1, 0);

        $i4 = i0 * 8;

        i3 = 2 + $i4;

        if i2 > i0 goto label2;

        return i2;

     label2:
        $i5 = i1 - 8;

        r2 = newarray (byte)[$i5];

        $i6 = i2 - 1;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i6, r2, 0);

        i11 = 2;

        i12 = 2;

     label3:
        if i11 >= i1 goto label5;

        if i11 != i3 goto label4;

        i11 = i11 + 8;

        goto label3;

     label4:
        $i8 = i12;

        i12 = i12 + 1;

        $i9 = i11;

        i11 = i11 + 1;

        $b10 = r1[$i9];

        r2[$i8] = $b10;

        goto label3;

     label5:
        virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: void set(byte[])>(r2);

        $i7 = i2 - 1;

        return $i7;
    }

    public javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.InnerClassesAttribute r0, $r7;
        javassist.bytecode.ConstPool r1, r5;
        java.util.Map r2;
        byte[] r3, r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13;

        r0 := @this: javassist.bytecode.InnerClassesAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        r3 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: byte[] get()>();

        $i2 = lengthof r3;

        r4 = newarray (byte)[$i2];

        r5 = virtualinvoke r0.<javassist.bytecode.InnerClassesAttribute: javassist.bytecode.ConstPool getConstPool()>();

        $r7 = new javassist.bytecode.InnerClassesAttribute;

        specialinvoke $r7.<javassist.bytecode.InnerClassesAttribute: void <init>(javassist.bytecode.ConstPool,byte[])>(r1, r4);

        i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, 0);

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i0, r4, 0);

        i9 = 2;

        i10 = 0;

     label1:
        if i10 >= i0 goto label5;

        i11 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, i9);

        $i3 = i9 + 2;

        i12 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, $i3);

        $i4 = i9 + 4;

        i13 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, $i4);

        $i5 = i9 + 6;

        i1 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, $i5);

        if i11 == 0 goto label2;

        i11 = virtualinvoke r5.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>(i11, r1, r2);

     label2:
        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i11, r4, i9);

        if i12 == 0 goto label3;

        i12 = virtualinvoke r5.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>(i12, r1, r2);

     label3:
        $i6 = i9 + 2;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i12, r4, $i6);

        if i13 == 0 goto label4;

        i13 = virtualinvoke r5.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>(i13, r1, r2);

     label4:
        $i7 = i9 + 4;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i13, r4, $i7);

        $i8 = i9 + 6;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i1, r4, $i8);

        i9 = i9 + 8;

        i10 = i10 + 1;

        goto label1;

     label5:
        return $r7;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.InnerClassesAttribute: java.lang.String tag> = "InnerClasses";

        return;
    }
}
