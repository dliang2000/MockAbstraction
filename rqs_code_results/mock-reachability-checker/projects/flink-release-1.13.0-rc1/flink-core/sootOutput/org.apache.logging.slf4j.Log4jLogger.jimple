public class org.apache.logging.slf4j.Log4jLogger extends java.lang.Object implements org.slf4j.spi.LocationAwareLogger, java.io.Serializable
{
    public static final java.lang.String FQCN;
    private static final long serialVersionUID;
    private static final org.slf4j.Marker EVENT_MARKER;
    private final boolean eventLogger;
    private transient org.apache.logging.log4j.spi.ExtendedLogger logger;
    private final java.lang.String name;
    private transient org.apache.logging.slf4j.EventDataConverter converter;

    public void <init>(org.apache.logging.log4j.spi.ExtendedLogger, java.lang.String)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.apache.logging.log4j.spi.ExtendedLogger r1;
        java.lang.String r2, $r3;
        boolean $z0;
        org.apache.logging.slf4j.EventDataConverter $r4;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.apache.logging.log4j.spi.ExtendedLogger;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger> = r1;

        $r3 = "EventLogger";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        r0.<org.apache.logging.slf4j.Log4jLogger: boolean eventLogger> = $z0;

        r0.<org.apache.logging.slf4j.Log4jLogger: java.lang.String name> = r2;

        $r4 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.slf4j.EventDataConverter createConverter()>();

        r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.slf4j.EventDataConverter converter> = $r4;

        return;
    }

    public void trace(java.lang.String)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r3;
        org.apache.logging.log4j.Level $r2;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r3 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r3, $r2, null, r1);

        return;
    }

    public void trace(java.lang.String, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, $r3, null, r1, r2);

        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.Level $r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r6;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r6 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        interfaceinvoke $r6.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, $r4, null, r1, r2, r3);

        return;
    }

    public transient void trace(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void trace(java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public boolean isTraceEnabled()
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.apache.logging.log4j.Level $r1;
        org.apache.logging.log4j.spi.ExtendedLogger $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        $r2 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $z0 = interfaceinvoke $r2.<org.apache.logging.log4j.spi.ExtendedLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r1, null, null);

        return $z0;
    }

    public boolean isTraceEnabled(org.slf4j.Marker)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        org.apache.logging.log4j.spi.ExtendedLogger $r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.Marker $r4;
        boolean $z0;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        $r2 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r4 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        $z0 = interfaceinvoke $r2.<org.apache.logging.log4j.spi.ExtendedLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r3, $r4, null);

        return $z0;
    }

    public void trace(org.slf4j.Marker, java.lang.String)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r3;
        org.apache.logging.log4j.Level $r5;
        org.apache.logging.log4j.Marker $r6;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r6 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r3.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r4, $r5, $r6, r2);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;
        org.apache.logging.log4j.Level $r7;
        org.apache.logging.log4j.Marker $r8;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r6 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r8 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, $r7, $r8, r2, r3, r4);

        return;
    }

    public transient void trace(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void debug(java.lang.String)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r3;
        org.apache.logging.log4j.Level $r2;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r3 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r3, $r2, null, r1);

        return;
    }

    public void debug(java.lang.String, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, $r3, null, r1, r2);

        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.Level $r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r6;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r6 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        interfaceinvoke $r6.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, $r4, null, r1, r2, r3);

        return;
    }

    public transient void debug(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void debug(java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public boolean isDebugEnabled()
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.apache.logging.log4j.Level $r1;
        org.apache.logging.log4j.spi.ExtendedLogger $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        $r2 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $z0 = interfaceinvoke $r2.<org.apache.logging.log4j.spi.ExtendedLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r1, null, null);

        return $z0;
    }

    public boolean isDebugEnabled(org.slf4j.Marker)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        org.apache.logging.log4j.spi.ExtendedLogger $r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.Marker $r4;
        boolean $z0;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        $r2 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r4 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        $z0 = interfaceinvoke $r2.<org.apache.logging.log4j.spi.ExtendedLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r3, $r4, null);

        return $z0;
    }

    public void debug(org.slf4j.Marker, java.lang.String)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r3;
        org.apache.logging.log4j.Level $r5;
        org.apache.logging.log4j.Marker $r6;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r6 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r3.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r4, $r5, $r6, r2);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;
        org.apache.logging.log4j.Level $r7;
        org.apache.logging.log4j.Marker $r8;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r6 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r8 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, $r7, $r8, r2, r3, r4);

        return;
    }

    public transient void debug(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void info(java.lang.String)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r3;
        org.apache.logging.log4j.Level $r2;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r3 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r3, $r2, null, r1);

        return;
    }

    public void info(java.lang.String, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, $r3, null, r1, r2);

        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.Level $r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r6;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r6 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        interfaceinvoke $r6.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, $r4, null, r1, r2, r3);

        return;
    }

    public transient void info(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void info(java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public boolean isInfoEnabled()
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.apache.logging.log4j.Level $r1;
        org.apache.logging.log4j.spi.ExtendedLogger $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        $r2 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $z0 = interfaceinvoke $r2.<org.apache.logging.log4j.spi.ExtendedLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r1, null, null);

        return $z0;
    }

    public boolean isInfoEnabled(org.slf4j.Marker)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        org.apache.logging.log4j.spi.ExtendedLogger $r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.Marker $r4;
        boolean $z0;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        $r2 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r4 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        $z0 = interfaceinvoke $r2.<org.apache.logging.log4j.spi.ExtendedLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r3, $r4, null);

        return $z0;
    }

    public void info(org.slf4j.Marker, java.lang.String)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r3;
        org.apache.logging.log4j.Level $r5;
        org.apache.logging.log4j.Marker $r6;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r6 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r3.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r4, $r5, $r6, r2);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;
        org.apache.logging.log4j.Level $r7;
        org.apache.logging.log4j.Marker $r8;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r6 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r8 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, $r7, $r8, r2, r3, r4);

        return;
    }

    public transient void info(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void warn(java.lang.String)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r3;
        org.apache.logging.log4j.Level $r2;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r3 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r3, $r2, null, r1);

        return;
    }

    public void warn(java.lang.String, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, $r3, null, r1, r2);

        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.Level $r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r6;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r6 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        interfaceinvoke $r6.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, $r4, null, r1, r2, r3);

        return;
    }

    public transient void warn(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void warn(java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public boolean isWarnEnabled()
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.apache.logging.log4j.Level $r1;
        org.apache.logging.log4j.spi.ExtendedLogger $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        $r2 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $z0 = interfaceinvoke $r2.<org.apache.logging.log4j.spi.ExtendedLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r1, null, null);

        return $z0;
    }

    public boolean isWarnEnabled(org.slf4j.Marker)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        org.apache.logging.log4j.spi.ExtendedLogger $r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.Marker $r4;
        boolean $z0;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        $r2 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r4 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        $z0 = interfaceinvoke $r2.<org.apache.logging.log4j.spi.ExtendedLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r3, $r4, null);

        return $z0;
    }

    public void warn(org.slf4j.Marker, java.lang.String)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r3;
        org.apache.logging.log4j.Level $r5;
        org.apache.logging.log4j.Marker $r6;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r6 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r3.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r4, $r5, $r6, r2);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;
        org.apache.logging.log4j.Level $r7;
        org.apache.logging.log4j.Marker $r8;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r6 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r8 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, $r7, $r8, r2, r3, r4);

        return;
    }

    public transient void warn(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void error(java.lang.String)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r3;
        org.apache.logging.log4j.Level $r2;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r3 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r3, $r2, null, r1);

        return;
    }

    public void error(java.lang.String, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, $r3, null, r1, r2);

        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.Level $r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r6;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r6 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        interfaceinvoke $r6.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, $r4, null, r1, r2, r3);

        return;
    }

    public transient void error(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void error(java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public boolean isErrorEnabled()
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.apache.logging.log4j.Level $r1;
        org.apache.logging.log4j.spi.ExtendedLogger $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        $r2 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $z0 = interfaceinvoke $r2.<org.apache.logging.log4j.spi.ExtendedLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r1, null, null);

        return $z0;
    }

    public boolean isErrorEnabled(org.slf4j.Marker)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        org.apache.logging.log4j.spi.ExtendedLogger $r2;
        org.apache.logging.log4j.Level $r3;
        org.apache.logging.log4j.Marker $r4;
        boolean $z0;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        $r2 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r4 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        $z0 = interfaceinvoke $r2.<org.apache.logging.log4j.spi.ExtendedLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r3, $r4, null);

        return $z0;
    }

    public void error(org.slf4j.Marker, java.lang.String)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r3;
        org.apache.logging.log4j.Level $r5;
        org.apache.logging.log4j.Marker $r6;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r4 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r6 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r3.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r4, $r5, $r6, r2);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        org.apache.logging.log4j.spi.ExtendedLogger $r5;
        org.apache.logging.log4j.Level $r7;
        org.apache.logging.log4j.Marker $r8;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r6 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r8 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r5.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, $r7, $r8, r2, r3, r4);

        return;
    }

    public transient void error(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.log4j.Level $r6;
        org.apache.logging.log4j.Marker $r7;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $r5 = <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r7 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        interfaceinvoke $r4.<org.apache.logging.log4j.spi.ExtendedLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r6, $r7, r2, r3);

        return;
    }

    public void log(org.slf4j.Marker, java.lang.String, int, java.lang.String, java.lang.Object[], java.lang.Throwable)
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        org.slf4j.Marker r1, $r10;
        java.lang.String r2, r3;
        int i0;
        java.lang.Object[] r4;
        org.apache.logging.log4j.Level r5;
        org.apache.logging.log4j.Marker r6;
        org.apache.logging.log4j.spi.ExtendedLogger $r7, $r15;
        boolean $z0, $z1, $z2;
        org.apache.logging.log4j.message.ParameterizedMessage $r8;
        org.apache.logging.log4j.message.SimpleMessage $r9;
        org.apache.logging.slf4j.EventDataConverter $r11, $r12;
        java.lang.Throwable r13;
        org.apache.logging.log4j.message.Message r14;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object[];

        r13 := @parameter5: java.lang.Throwable;

        r5 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Level getLevel(int)>(i0);

        r6 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)>(r1);

        $r7 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        $z0 = interfaceinvoke $r7.<org.apache.logging.log4j.spi.ExtendedLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>(r5, r6, r3, r4);

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = r0.<org.apache.logging.slf4j.Log4jLogger: boolean eventLogger>;

        if $z1 == 0 goto label2;

        if r1 == null goto label2;

        $r10 = <org.apache.logging.slf4j.Log4jLogger: org.slf4j.Marker EVENT_MARKER>;

        $z2 = interfaceinvoke r1.<org.slf4j.Marker: boolean contains(org.slf4j.Marker)>($r10);

        if $z2 == 0 goto label2;

        $r11 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.slf4j.EventDataConverter converter>;

        if $r11 == null goto label2;

        $r12 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.slf4j.EventDataConverter converter>;

        r14 = virtualinvoke $r12.<org.apache.logging.slf4j.EventDataConverter: org.apache.logging.log4j.message.Message convertEvent(java.lang.String,java.lang.Object[],java.lang.Throwable)>(r3, r4, r13);

        goto label4;

     label2:
        if r4 != null goto label3;

        $r9 = new org.apache.logging.log4j.message.SimpleMessage;

        specialinvoke $r9.<org.apache.logging.log4j.message.SimpleMessage: void <init>(java.lang.String)>(r3);

        r14 = $r9;

        goto label4;

     label3:
        $r8 = new org.apache.logging.log4j.message.ParameterizedMessage;

        specialinvoke $r8.<org.apache.logging.log4j.message.ParameterizedMessage: void <init>(java.lang.String,java.lang.Object[],java.lang.Throwable)>(r3, r4, r13);

        r14 = $r8;

        if r13 == null goto label4;

        r13 = interfaceinvoke $r8.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

     label4:
        $r15 = r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger>;

        interfaceinvoke $r15.<org.apache.logging.log4j.spi.ExtendedLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r2, r5, r6, r14, r13);

        return;
    }

    private static org.apache.logging.log4j.Marker getMarker(org.slf4j.Marker)
    {
        org.slf4j.Marker r0, $r4;
        org.apache.logging.slf4j.Log4jMarkerFactory r1;
        boolean $z0;
        org.slf4j.impl.StaticMarkerBinder $r2;
        org.slf4j.IMarkerFactory $r3;
        org.apache.logging.slf4j.Log4jMarker $r5, $r7;
        org.apache.logging.log4j.Marker $r6, $r8;

        r0 := @parameter0: org.slf4j.Marker;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof org.apache.logging.slf4j.Log4jMarker;

        if $z0 == 0 goto label2;

        $r7 = (org.apache.logging.slf4j.Log4jMarker) r0;

        $r8 = virtualinvoke $r7.<org.apache.logging.slf4j.Log4jMarker: org.apache.logging.log4j.Marker getLog4jMarker()>();

        return $r8;

     label2:
        $r2 = <org.slf4j.impl.StaticMarkerBinder: org.slf4j.impl.StaticMarkerBinder SINGLETON>;

        $r3 = virtualinvoke $r2.<org.slf4j.impl.StaticMarkerBinder: org.slf4j.IMarkerFactory getMarkerFactory()>();

        r1 = (org.apache.logging.slf4j.Log4jMarkerFactory) $r3;

        $r4 = virtualinvoke r1.<org.apache.logging.slf4j.Log4jMarkerFactory: org.slf4j.Marker getMarker(org.slf4j.Marker)>(r0);

        $r5 = (org.apache.logging.slf4j.Log4jMarker) $r4;

        $r6 = virtualinvoke $r5.<org.apache.logging.slf4j.Log4jMarker: org.apache.logging.log4j.Marker getLog4jMarker()>();

        return $r6;
    }

    public java.lang.String getName()
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.lang.String $r1;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        $r1 = r0.<org.apache.logging.slf4j.Log4jLogger: java.lang.String name>;

        return $r1;
    }

    private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.io.ObjectInputStream r1;
        org.apache.logging.log4j.spi.LoggerContext $r2;
        java.lang.String $r3;
        org.apache.logging.log4j.spi.ExtendedLogger $r4;
        org.apache.logging.slf4j.EventDataConverter $r5;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = staticinvoke <org.apache.logging.log4j.LogManager: org.apache.logging.log4j.spi.LoggerContext getContext()>();

        $r3 = r0.<org.apache.logging.slf4j.Log4jLogger: java.lang.String name>;

        $r4 = interfaceinvoke $r2.<org.apache.logging.log4j.spi.LoggerContext: org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String)>($r3);

        r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.log4j.spi.ExtendedLogger logger> = $r4;

        $r5 = staticinvoke <org.apache.logging.slf4j.Log4jLogger: org.apache.logging.slf4j.EventDataConverter createConverter()>();

        r0.<org.apache.logging.slf4j.Log4jLogger: org.apache.logging.slf4j.EventDataConverter converter> = $r5;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.logging.slf4j.Log4jLogger r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: org.apache.logging.slf4j.Log4jLogger;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    private static org.apache.logging.slf4j.EventDataConverter createConverter()
    {
        org.apache.logging.slf4j.EventDataConverter $r2;
        java.lang.ClassNotFoundException $r3;

     label1:
        staticinvoke <org.apache.logging.log4j.util.LoaderUtil: java.lang.Class loadClass(java.lang.String)>("org.slf4j.ext.EventData");

        $r2 = new org.apache.logging.slf4j.EventDataConverter;

        specialinvoke $r2.<org.apache.logging.slf4j.EventDataConverter: void <init>()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private static org.apache.logging.log4j.Level getLevel(int)
    {
        int i0;
        org.apache.logging.log4j.Level $r0, $r1, $r2, $r3, $r4, $r5;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 10: goto label2;
            case 20: goto label3;
            case 30: goto label4;
            case 40: goto label5;
            default: goto label6;
        };

     label1:
        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        return $r4;

     label2:
        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        return $r3;

     label3:
        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        return $r2;

     label4:
        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        return $r1;

     label5:
        $r0 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        return $r0;

     label6:
        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        return $r5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        org.slf4j.Marker $r2;

        <org.apache.logging.slf4j.Log4jLogger: long serialVersionUID> = 7869000638091304316L;

        $r0 = class "Lorg/apache/logging/slf4j/Log4jLogger;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <org.apache.logging.slf4j.Log4jLogger: java.lang.String FQCN> = $r1;

        $r2 = staticinvoke <org.slf4j.MarkerFactory: org.slf4j.Marker getMarker(java.lang.String)>("EVENT");

        <org.apache.logging.slf4j.Log4jLogger: org.slf4j.Marker EVENT_MARKER> = $r2;

        return;
    }
}
