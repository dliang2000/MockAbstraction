public class org.mockito.internal.stubbing.ConsecutiveStubbing extends org.mockito.internal.stubbing.BaseStubbing
{
    private final org.mockito.internal.stubbing.InvocationContainerImpl invocationContainerImpl;

    public void <init>(org.mockito.internal.stubbing.InvocationContainerImpl)
    {
        org.mockito.internal.stubbing.ConsecutiveStubbing r0;
        org.mockito.internal.stubbing.InvocationContainerImpl r1;

        r0 := @this: org.mockito.internal.stubbing.ConsecutiveStubbing;

        r1 := @parameter0: org.mockito.internal.stubbing.InvocationContainerImpl;

        specialinvoke r0.<org.mockito.internal.stubbing.BaseStubbing: void <init>()>();

        r0.<org.mockito.internal.stubbing.ConsecutiveStubbing: org.mockito.internal.stubbing.InvocationContainerImpl invocationContainerImpl> = r1;

        return;
    }

    public org.mockito.stubbing.OngoingStubbing thenAnswer(org.mockito.stubbing.Answer)
    {
        org.mockito.internal.stubbing.ConsecutiveStubbing r0;
        org.mockito.stubbing.Answer r1;
        org.mockito.internal.stubbing.InvocationContainerImpl $r2;

        r0 := @this: org.mockito.internal.stubbing.ConsecutiveStubbing;

        r1 := @parameter0: org.mockito.stubbing.Answer;

        $r2 = r0.<org.mockito.internal.stubbing.ConsecutiveStubbing: org.mockito.internal.stubbing.InvocationContainerImpl invocationContainerImpl>;

        virtualinvoke $r2.<org.mockito.internal.stubbing.InvocationContainerImpl: void addConsecutiveAnswer(org.mockito.stubbing.Answer)>(r1);

        return r0;
    }

    public org.mockito.stubbing.OngoingStubbing then(org.mockito.stubbing.Answer)
    {
        org.mockito.internal.stubbing.ConsecutiveStubbing r0;
        org.mockito.stubbing.Answer r1;
        org.mockito.stubbing.OngoingStubbing $r2;

        r0 := @this: org.mockito.internal.stubbing.ConsecutiveStubbing;

        r1 := @parameter0: org.mockito.stubbing.Answer;

        $r2 = virtualinvoke r0.<org.mockito.internal.stubbing.ConsecutiveStubbing: org.mockito.stubbing.OngoingStubbing thenAnswer(org.mockito.stubbing.Answer)>(r1);

        return $r2;
    }

    public java.lang.Object getMock()
    {
        org.mockito.internal.stubbing.ConsecutiveStubbing r0;
        org.mockito.internal.stubbing.InvocationContainerImpl $r1;
        java.lang.Object $r2;

        r0 := @this: org.mockito.internal.stubbing.ConsecutiveStubbing;

        $r1 = r0.<org.mockito.internal.stubbing.ConsecutiveStubbing: org.mockito.internal.stubbing.InvocationContainerImpl invocationContainerImpl>;

        $r2 = virtualinvoke $r1.<org.mockito.internal.stubbing.InvocationContainerImpl: java.lang.Object invokedMock()>();

        return $r2;
    }
}
