public abstract class org.apache.flink.api.common.typeutils.CompositeTypeComparator extends org.apache.flink.api.common.typeutils.TypeComparator
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.CompositeTypeComparator r0;

        r0 := @this: org.apache.flink.api.common.typeutils.CompositeTypeComparator;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.TypeComparator: void <init>()>();

        return;
    }

    public org.apache.flink.api.common.typeutils.TypeComparator[] getFlatComparators()
    {
        org.apache.flink.api.common.typeutils.CompositeTypeComparator r0;
        java.util.LinkedList $r2;
        int $i0;
        org.apache.flink.api.common.typeutils.TypeComparator[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.flink.api.common.typeutils.CompositeTypeComparator;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        virtualinvoke r0.<org.apache.flink.api.common.typeutils.CompositeTypeComparator: void getFlatComparator(java.util.List)>($r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = newarray (org.apache.flink.api.common.typeutils.TypeComparator)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.flink.api.common.typeutils.TypeComparator[]) $r4;

        return $r5;
    }

    public abstract void getFlatComparator(java.util.List);

    public static void <clinit>()
    {
        <org.apache.flink.api.common.typeutils.CompositeTypeComparator: long serialVersionUID> = 1L;

        return;
    }
}
