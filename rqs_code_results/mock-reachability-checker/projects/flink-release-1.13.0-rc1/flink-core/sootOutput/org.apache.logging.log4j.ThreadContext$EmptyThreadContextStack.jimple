class org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack extends java.util.AbstractCollection implements org.apache.logging.log4j.spi.ThreadContextStack
{
    private static final long serialVersionUID;
    private static final java.util.Iterator EMPTY_ITERATOR;

    private void <init>()
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        return;
    }

    public java.lang.String pop()
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        return null;
    }

    public java.lang.String peek()
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        return null;
    }

    public void push(java.lang.String)
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public int getDepth()
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        return 0;
    }

    public java.util.List asList()
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        java.util.List $r1;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;
    }

    public void trim(int)
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        int i0;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        i0 := @parameter0: int;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.util.Collection $r2;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Collection) r1;

        $z1 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        return 1;
    }

    public org.apache.logging.log4j.ThreadContext$ContextStack copy()
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        return r0;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        java.lang.Object[] r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        r1 := @parameter0: java.lang.Object[];

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean add(java.lang.String)
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean containsAll(java.util.Collection)
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        java.util.Collection r1;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        r1 := @parameter0: java.util.Collection;

        return 0;
    }

    public boolean addAll(java.util.Collection)
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean removeAll(java.util.Collection)
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean retainAll(java.util.Collection)
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public java.util.Iterator iterator()
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        java.util.Iterator $r1;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        $r1 = <org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack: java.util.Iterator EMPTY_ITERATOR>;

        return $r1;
    }

    public int size()
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        return 0;
    }

    public org.apache.logging.log4j.ThreadContext$ContextStack getImmutableStackOrNull()
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        return r0;
    }

    public volatile boolean add(java.lang.Object)
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        java.lang.Object r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack: boolean add(java.lang.String)>($r2);

        return $z0;
    }

    void <init>(org.apache.logging.log4j.ThreadContext$1)
    {
        org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack r0;
        org.apache.logging.log4j.ThreadContext$1 r1;

        r0 := @this: org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack;

        r1 := @parameter0: org.apache.logging.log4j.ThreadContext$1;

        specialinvoke r0.<org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.logging.log4j.ThreadContext$EmptyIterator $r0;

        <org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack: long serialVersionUID> = 1L;

        $r0 = new org.apache.logging.log4j.ThreadContext$EmptyIterator;

        specialinvoke $r0.<org.apache.logging.log4j.ThreadContext$EmptyIterator: void <init>(org.apache.logging.log4j.ThreadContext$1)>(null);

        <org.apache.logging.log4j.ThreadContext$EmptyThreadContextStack: java.util.Iterator EMPTY_ITERATOR> = $r0;

        return;
    }
}
