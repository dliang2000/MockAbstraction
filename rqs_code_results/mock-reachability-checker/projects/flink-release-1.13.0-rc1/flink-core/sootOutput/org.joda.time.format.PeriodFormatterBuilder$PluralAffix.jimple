class org.joda.time.format.PeriodFormatterBuilder$PluralAffix extends org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix
{
    private final java.lang.String iSingularText;
    private final java.lang.String iPluralText;

    void <init>(java.lang.String, java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.lang.String r1, r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText> = r1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText> = r2;

        return;
    }

    public int calculatePrintedLength(int)
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

        goto label2;

     label1:
        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

     label2:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i1;
    }

    public void printTo(java.lang.StringBuffer, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.lang.StringBuffer r1;
        int i0;
        java.lang.String $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

        goto label2;

     label1:
        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

     label2:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        return;
    }

    public void printTo(java.io.Writer, int) throws java.io.IOException
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.io.Writer r1;
        int i0;
        java.lang.String $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        r1 := @parameter0: java.io.Writer;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

        goto label2;

     label1:
        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

     label2:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r3);

        return;
    }

    public int parse(java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.lang.String r1, r2, r3, r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

        r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label1;

        r2 = r3;

        r3 = r4;

        r4 = r2;

     label1:
        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i0, r3, 0, $i3);

        if $z0 == 0 goto label2;

        $i9 = virtualinvoke r3.<java.lang.String: int length()>();

        $z3 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i9, r1, i0);

        if $z3 != 0 goto label2;

        $i10 = virtualinvoke r3.<java.lang.String: int length()>();

        $i11 = i0 + $i10;

        return $i11;

     label2:
        $i4 = virtualinvoke r4.<java.lang.String: int length()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i0, r4, 0, $i4);

        if $z1 == 0 goto label3;

        $i6 = virtualinvoke r4.<java.lang.String: int length()>();

        $z2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i6, r1, i0);

        if $z2 != 0 goto label3;

        $i7 = virtualinvoke r4.<java.lang.String: int length()>();

        $i8 = i0 + $i7;

        return $i8;

     label3:
        $i5 = i0 ^ -1;

        return $i5;
    }

    public int scan(java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.lang.String r1, r2, r3, r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

        r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        $i4 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i3 >= $i4 goto label1;

        r4 = r2;

        r2 = r3;

        r3 = r4;

     label1:
        i8 = virtualinvoke r2.<java.lang.String: int length()>();

        i1 = virtualinvoke r3.<java.lang.String: int length()>();

        i2 = virtualinvoke r1.<java.lang.String: int length()>();

        i9 = i0;

     label2:
        if i9 >= i2 goto label5;

        $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i9, r2, 0, i8);

        if $z0 == 0 goto label3;

        $i7 = virtualinvoke r2.<java.lang.String: int length()>();

        $z3 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i7, r1, i9);

        if $z3 != 0 goto label3;

        return i9;

     label3:
        $z1 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i9, r3, 0, i1);

        if $z1 == 0 goto label4;

        $i6 = virtualinvoke r3.<java.lang.String: int length()>();

        $z2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i6, r1, i9);

        if $z2 != 0 goto label4;

        return i9;

     label4:
        i9 = i9 + 1;

        goto label2;

     label5:
        $i5 = i0 ^ -1;

        return $i5;
    }

    public java.lang.String[] getAffixes()
    {
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix r0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        $r1 = newarray (java.lang.String)[2];

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iSingularText>;

        $r1[0] = $r2;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: java.lang.String iPluralText>;

        $r1[1] = $r3;

        return $r1;
    }
}
