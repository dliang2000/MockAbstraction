public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{

    public static java.lang.Class[] types()
    {
        java.lang.Class[] $r0;

        $r0 = newarray (java.lang.Class)[13];

        $r0[0] = class "Ljava/io/File;";

        $r0[1] = class "Ljava/net/URL;";

        $r0[2] = class "Ljava/net/URI;";

        $r0[3] = class "Ljava/lang/Class;";

        $r0[4] = class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JavaType;";

        $r0[5] = class "Ljava/util/Currency;";

        $r0[6] = class "Ljava/util/regex/Pattern;";

        $r0[7] = class "Ljava/util/Locale;";

        $r0[8] = class "Ljava/nio/charset/Charset;";

        $r0[9] = class "Ljava/util/TimeZone;";

        $r0[10] = class "Ljava/net/InetAddress;";

        $r0[11] = class "Ljava/net/InetSocketAddress;";

        $r0[12] = class "Ljava/lang/StringBuilder;";

        return $r0;
    }

    protected void <init>(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer r0;
        java.lang.Class r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(r1);

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer findDeserializer(java.lang.Class)
    {
        java.lang.Class r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBuilderDeserializer $r1;
        byte b0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std $r2;

        r0 := @parameter0: java.lang.Class;

        if r0 != class "Ljava/io/File;" goto label01;

        b0 = 1;

        goto label14;

     label01:
        if r0 != class "Ljava/net/URL;" goto label02;

        b0 = 2;

        goto label14;

     label02:
        if r0 != class "Ljava/net/URI;" goto label03;

        b0 = 3;

        goto label14;

     label03:
        if r0 != class "Ljava/lang/Class;" goto label04;

        b0 = 4;

        goto label14;

     label04:
        if r0 != class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JavaType;" goto label05;

        b0 = 5;

        goto label14;

     label05:
        if r0 != class "Ljava/util/Currency;" goto label06;

        b0 = 6;

        goto label14;

     label06:
        if r0 != class "Ljava/util/regex/Pattern;" goto label07;

        b0 = 7;

        goto label14;

     label07:
        if r0 != class "Ljava/util/Locale;" goto label08;

        b0 = 8;

        goto label14;

     label08:
        if r0 != class "Ljava/nio/charset/Charset;" goto label09;

        b0 = 9;

        goto label14;

     label09:
        if r0 != class "Ljava/util/TimeZone;" goto label10;

        b0 = 10;

        goto label14;

     label10:
        if r0 != class "Ljava/net/InetAddress;" goto label11;

        b0 = 11;

        goto label14;

     label11:
        if r0 != class "Ljava/net/InetSocketAddress;" goto label12;

        b0 = 12;

        goto label14;

     label12:
        if r0 != class "Ljava/lang/StringBuilder;" goto label13;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBuilderDeserializer;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBuilderDeserializer: void <init>()>();

        return $r1;

     label13:
        return null;

     label14:
        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: void <init>(java.lang.Class,int)>(r0, b0);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType OtherScalar>;

        return $r1;
    }

    public java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.String r3, $r6, r17, r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException r4;
        boolean $z0, $z1;
        java.lang.Object $r5, $r7, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r8, r18;
        java.lang.Class $r9, $r12;
        java.lang.Exception $r11;
        java.lang.StringBuilder $r13, $r14, $r15, $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r17 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getValueAsString()>();

        if r17 != null goto label2;

        r18 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r18 == $r8 goto label1;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeFromOther(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r1, r2, r18);

        return $r10;

     label1:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;

        r17 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r9);

     label2:
        $z0 = virtualinvoke r17.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r6 = virtualinvoke r17.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label4;

     label3:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeFromEmptyString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return $r5;

     label4:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserialize(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>($r6, r2);

     label5:
        return $r7;

     label6:
        $r11 := @caughtexception;

        r22 = "not a valid textual representation";

        r3 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        if r3 == null goto label7;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a valid textual representation");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", problem: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r22 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String)>($r6, $r12, r22);

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: java.lang.Throwable initCause(java.lang.Throwable)>($r11);

        throw r4;

        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
        catch java.net.MalformedURLException from label4 to label5 with label6;
    }

    protected abstract java.lang.Object _deserialize(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException;

    protected java.lang.Object _deserializeFromOther(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r3, $r5, $r6;
        java.lang.Object r4, $r8, $r11, $r12;
        java.lang.Class $r7, $r9, $r10;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r3 != $r5 goto label1;

        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r12;

     label1:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        if r3 != $r6 goto label4;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();

        if r4 != null goto label2;

        return null;

     label2:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;

        $r10 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r10);

        if $z0 == 0 goto label3;

        return r4;

     label3:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeEmbedded(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r4, r2);

        return $r11;

     label4:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;

        $r8 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r7, r1);

        return $r8;
    }

    protected java.lang.Object _deserializeEmbedded(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Object[] $r3;
        java.lang.Class $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3[0] = $r5;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r3[1] = $r7;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(r0, "Don\'t know how to convert embedded Object of type %s into %s", $r3);

        return null;
    }

    protected final java.lang.Object _deserializeFromEmptyString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;

        return null;
    }

    protected java.lang.Object _deserializeFromEmptyString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction r2, $r6, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape $r4;
        java.lang.Class $r5;
        java.lang.Object $r9, $r10, $r11;
        java.lang.Object[] $r12;
        java.lang.String $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()>();

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Class _valueClass>;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>;

        r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionInputShape)>($r3, $r5, $r4);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction Fail>;

        if r2 != $r6 goto label1;

        $r12 = newarray (java.lang.Object)[1];

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.String _coercedTypeDesc()>();

        $r12[0] = $r13;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(r0, "Cannot coerce empty String (\"\") to %s (but could if enabling coercion using `CoercionConfig`)", $r12);

     label1:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r2 != $r7 goto label2;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r11;

     label2:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r2 != $r8 goto label3;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r10;

     label3:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeFromEmptyStringDefault(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r9;
    }

    protected java.lang.Object _deserializeFromEmptyStringDefault(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r2;
    }
}
