public class org.apache.flink.core.fs.local.LocalDataInputStream extends org.apache.flink.core.fs.FSDataInputStream
{
    private final java.io.FileInputStream fis;
    private final java.nio.channels.FileChannel fileChannel;

    public void <init>(java.io.File) throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataInputStream r0;
        java.io.File r1;
        java.io.FileInputStream $r2, $r3;
        java.nio.channels.FileChannel $r4;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataInputStream;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.flink.core.fs.FSDataInputStream: void <init>()>();

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r0.<org.apache.flink.core.fs.local.LocalDataInputStream: java.io.FileInputStream fis> = $r2;

        $r3 = r0.<org.apache.flink.core.fs.local.LocalDataInputStream: java.io.FileInputStream fis>;

        $r4 = virtualinvoke $r3.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        r0.<org.apache.flink.core.fs.local.LocalDataInputStream: java.nio.channels.FileChannel fileChannel> = $r4;

        return;
    }

    public void seek(long) throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataInputStream r0;
        long l0, $l1;
        byte $b2;
        java.nio.channels.FileChannel $r1;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataInputStream;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.apache.flink.core.fs.local.LocalDataInputStream: long getPos()>();

        $b2 = l0 cmp $l1;

        if $b2 == 0 goto label1;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalDataInputStream: java.nio.channels.FileChannel fileChannel>;

        virtualinvoke $r1.<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>(l0);

     label1:
        return;
    }

    public long getPos() throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataInputStream r0;
        java.nio.channels.FileChannel $r1;
        long $l0;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataInputStream;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalDataInputStream: java.nio.channels.FileChannel fileChannel>;

        $l0 = virtualinvoke $r1.<java.nio.channels.FileChannel: long position()>();

        return $l0;
    }

    public int read() throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataInputStream r0;
        java.io.FileInputStream $r1;
        int $i0;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataInputStream;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalDataInputStream: java.io.FileInputStream fis>;

        $i0 = virtualinvoke $r1.<java.io.FileInputStream: int read()>();

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataInputStream r0;
        byte[] r1;
        int i0, i1, $i2;
        java.io.FileInputStream $r2;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.flink.core.fs.local.LocalDataInputStream: java.io.FileInputStream fis>;

        $i2 = virtualinvoke $r2.<java.io.FileInputStream: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataInputStream r0;
        java.io.FileInputStream $r1;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataInputStream;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalDataInputStream: java.io.FileInputStream fis>;

        virtualinvoke $r1.<java.io.FileInputStream: void close()>();

        return;
    }

    public int available() throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataInputStream r0;
        java.io.FileInputStream $r1;
        int $i0;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataInputStream;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalDataInputStream: java.io.FileInputStream fis>;

        $i0 = virtualinvoke $r1.<java.io.FileInputStream: int available()>();

        return $i0;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataInputStream r0;
        long l0, $l1;
        java.io.FileInputStream $r1;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataInputStream;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalDataInputStream: java.io.FileInputStream fis>;

        $l1 = virtualinvoke $r1.<java.io.FileInputStream: long skip(long)>(l0);

        return $l1;
    }
}
