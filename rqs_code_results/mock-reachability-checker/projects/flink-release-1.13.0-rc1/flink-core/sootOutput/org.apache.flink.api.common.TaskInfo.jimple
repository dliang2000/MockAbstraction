public class org.apache.flink.api.common.TaskInfo extends java.lang.Object
{
    private final java.lang.String taskName;
    private final java.lang.String taskNameWithSubtasks;
    private final java.lang.String allocationIDAsString;
    private final int maxNumberOfParallelSubtasks;
    private final int indexOfSubtask;
    private final int numberOfParallelSubtasks;
    private final int attemptNumber;

    public void <init>(java.lang.String, int, int, int, int)
    {
        org.apache.flink.api.common.TaskInfo r0;
        java.lang.String r1;
        int i0, i1, i2, i3;

        r0 := @this: org.apache.flink.api.common.TaskInfo;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<org.apache.flink.api.common.TaskInfo: void <init>(java.lang.String,int,int,int,int,java.lang.String)>(r1, i0, i1, i2, i3, "UNKNOWN");

        return;
    }

    public void <init>(java.lang.String, int, int, int, int, java.lang.String)
    {
        org.apache.flink.api.common.TaskInfo r0;
        java.lang.String r1, r2, $r4, $r14, $r16;
        int i0, i1, i2, i3, $i4;
        java.lang.Object $r3, $r15;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.flink.api.common.TaskInfo;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i1 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <org.apache.flink.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Task index must be a non-negative number.");

        if i0 < 1 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <org.apache.flink.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "Max parallelism must be a positive number.");

        if i0 < i2 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <org.apache.flink.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z2, "Max parallelism must be >= than parallelism.");

        if i2 < 1 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <org.apache.flink.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z3, "Parallelism must be a positive number.");

        if i1 >= i2 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <org.apache.flink.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z4, "Task index must be less than parallelism.");

        if i3 < 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        staticinvoke <org.apache.flink.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z5, "Attempt number must be a non-negative number.");

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "Task Name must not be null.");

        $r4 = (java.lang.String) $r3;

        r0.<org.apache.flink.api.common.TaskInfo: java.lang.String taskName> = $r4;

        r0.<org.apache.flink.api.common.TaskInfo: int maxNumberOfParallelSubtasks> = i0;

        r0.<org.apache.flink.api.common.TaskInfo: int indexOfSubtask> = i1;

        r0.<org.apache.flink.api.common.TaskInfo: int numberOfParallelSubtasks> = i2;

        r0.<org.apache.flink.api.common.TaskInfo: int attemptNumber> = i3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i4 = i1 + 1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.flink.api.common.TaskInfo: java.lang.String taskNameWithSubtasks> = $r14;

        $r15 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r16 = (java.lang.String) $r15;

        r0.<org.apache.flink.api.common.TaskInfo: java.lang.String allocationIDAsString> = $r16;

        return;
    }

    public java.lang.String getTaskName()
    {
        org.apache.flink.api.common.TaskInfo r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.api.common.TaskInfo;

        $r1 = r0.<org.apache.flink.api.common.TaskInfo: java.lang.String taskName>;

        return $r1;
    }

    public int getMaxNumberOfParallelSubtasks()
    {
        org.apache.flink.api.common.TaskInfo r0;
        int $i0;

        r0 := @this: org.apache.flink.api.common.TaskInfo;

        $i0 = r0.<org.apache.flink.api.common.TaskInfo: int maxNumberOfParallelSubtasks>;

        return $i0;
    }

    public int getIndexOfThisSubtask()
    {
        org.apache.flink.api.common.TaskInfo r0;
        int $i0;

        r0 := @this: org.apache.flink.api.common.TaskInfo;

        $i0 = r0.<org.apache.flink.api.common.TaskInfo: int indexOfSubtask>;

        return $i0;
    }

    public int getNumberOfParallelSubtasks()
    {
        org.apache.flink.api.common.TaskInfo r0;
        int $i0;

        r0 := @this: org.apache.flink.api.common.TaskInfo;

        $i0 = r0.<org.apache.flink.api.common.TaskInfo: int numberOfParallelSubtasks>;

        return $i0;
    }

    public int getAttemptNumber()
    {
        org.apache.flink.api.common.TaskInfo r0;
        int $i0;

        r0 := @this: org.apache.flink.api.common.TaskInfo;

        $i0 = r0.<org.apache.flink.api.common.TaskInfo: int attemptNumber>;

        return $i0;
    }

    public java.lang.String getTaskNameWithSubtasks()
    {
        org.apache.flink.api.common.TaskInfo r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.api.common.TaskInfo;

        $r1 = r0.<org.apache.flink.api.common.TaskInfo: java.lang.String taskNameWithSubtasks>;

        return $r1;
    }

    public java.lang.String getAllocationIDAsString()
    {
        org.apache.flink.api.common.TaskInfo r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.api.common.TaskInfo;

        $r1 = r0.<org.apache.flink.api.common.TaskInfo: java.lang.String allocationIDAsString>;

        return $r1;
    }
}
