public final class org.apache.flink.util.LambdaUtilTest$lambda_testRunWithContextClassLoaderSupplier_1__19 extends java.lang.Object implements org.apache.flink.util.function.SupplierWithException
{
    java.lang.ClassLoader cap0;

    public static org.apache.flink.util.function.SupplierWithException bootstrap$(java.lang.ClassLoader)
    {
        java.lang.ClassLoader $r0;
        org.apache.flink.util.LambdaUtilTest$lambda_testRunWithContextClassLoaderSupplier_1__19 $r1;

        $r0 := @parameter0: java.lang.ClassLoader;

        $r1 = new org.apache.flink.util.LambdaUtilTest$lambda_testRunWithContextClassLoaderSupplier_1__19;

        specialinvoke $r1.<org.apache.flink.util.LambdaUtilTest$lambda_testRunWithContextClassLoaderSupplier_1__19: void <init>(java.lang.ClassLoader)>($r0);

        return $r1;
    }

    public void <init>(java.lang.ClassLoader)
    {
        org.apache.flink.util.LambdaUtilTest$lambda_testRunWithContextClassLoaderSupplier_1__19 $r0;
        java.lang.ClassLoader $r1;

        $r0 := @this: org.apache.flink.util.LambdaUtilTest$lambda_testRunWithContextClassLoaderSupplier_1__19;

        $r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.flink.util.LambdaUtilTest$lambda_testRunWithContextClassLoaderSupplier_1__19: java.lang.ClassLoader cap0> = $r1;

        return;
    }

    public java.lang.Object get()
    {
        org.apache.flink.util.LambdaUtilTest$lambda_testRunWithContextClassLoaderSupplier_1__19 $r0;
        java.lang.ClassLoader $r1;
        java.lang.Boolean $r2;

        $r0 := @this: org.apache.flink.util.LambdaUtilTest$lambda_testRunWithContextClassLoaderSupplier_1__19;

        $r1 = $r0.<org.apache.flink.util.LambdaUtilTest$lambda_testRunWithContextClassLoaderSupplier_1__19: java.lang.ClassLoader cap0>;

        $r2 = staticinvoke <org.apache.flink.util.LambdaUtilTest: java.lang.Boolean lambda$testRunWithContextClassLoaderSupplier$1(java.lang.ClassLoader)>($r1);

        return $r2;
    }
}
