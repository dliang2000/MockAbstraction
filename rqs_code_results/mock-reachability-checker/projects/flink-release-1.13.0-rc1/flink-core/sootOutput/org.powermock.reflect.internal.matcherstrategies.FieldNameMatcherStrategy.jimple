public class org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy extends org.powermock.reflect.internal.matcherstrategies.FieldMatcherStrategy
{
    private final java.lang.String fieldName;

    public void <init>(java.lang.String)
    {
        org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy r0;
        java.lang.String r1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.powermock.reflect.internal.matcherstrategies.FieldMatcherStrategy: void <init>()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(" ");

        if $z1 == 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("field name cannot be null.");

        throw $r2;

     label2:
        r0.<org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy: java.lang.String fieldName> = r1;

        return;
    }

    public boolean matches(java.lang.reflect.Field)
    {
        org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy r0;
        java.lang.reflect.Field r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy;

        r1 := @parameter0: java.lang.reflect.Field;

        $r2 = r0.<org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy: java.lang.String fieldName>;

        $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public void notFound(java.lang.Class, boolean) throws org.powermock.reflect.exceptions.FieldNotFoundException
    {
        org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy r0;
        java.lang.Class r1;
        boolean z0;
        org.powermock.reflect.exceptions.FieldNotFoundException $r2;
        java.lang.Object[] $r3;
        java.lang.String $r4, $r6, $r7, $r8;

        r0 := @this: org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        $r2 = new org.powermock.reflect.exceptions.FieldNotFoundException;

        $r3 = newarray (java.lang.Object)[3];

        if z0 == 0 goto label1;

        $r8 = "instance";

        goto label2;

     label1:
        $r8 = "static";

     label2:
        $r3[0] = $r8;

        $r4 = r0.<org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy: java.lang.String fieldName>;

        $r3[1] = $r4;

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r3[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No %s field named \"%s\" could be found in the class hierarchy of %s.", $r3);

        specialinvoke $r2.<org.powermock.reflect.exceptions.FieldNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public java.lang.String toString()
    {
        org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fieldName ");

        $r3 = r0.<org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy: java.lang.String fieldName>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
