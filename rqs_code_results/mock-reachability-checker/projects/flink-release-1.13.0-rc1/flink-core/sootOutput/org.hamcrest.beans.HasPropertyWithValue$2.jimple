final class org.hamcrest.beans.HasPropertyWithValue$2 extends java.lang.Object implements org.hamcrest.Condition$Step
{

    void <init>()
    {
        org.hamcrest.beans.HasPropertyWithValue$2 r0;

        r0 := @this: org.hamcrest.beans.HasPropertyWithValue$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.hamcrest.Condition apply(java.beans.PropertyDescriptor, org.hamcrest.Description)
    {
        org.hamcrest.beans.HasPropertyWithValue$2 r0;
        java.beans.PropertyDescriptor r1;
        org.hamcrest.Description r2;
        java.lang.reflect.Method r3;
        org.hamcrest.Condition $r4, $r12;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        java.lang.String $r7, $r10;

        r0 := @this: org.hamcrest.beans.HasPropertyWithValue$2;

        r1 := @parameter0: java.beans.PropertyDescriptor;

        r2 := @parameter1: org.hamcrest.Description;

        r3 = virtualinvoke r1.<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>();

        if null != r3 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("property \"");

        $r7 = virtualinvoke r1.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is not readable");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r10);

        $r12 = staticinvoke <org.hamcrest.Condition: org.hamcrest.Condition notMatched()>();

        return $r12;

     label1:
        $r4 = staticinvoke <org.hamcrest.Condition: org.hamcrest.Condition matched(java.lang.Object,org.hamcrest.Description)>(r3, r2);

        return $r4;
    }

    public volatile org.hamcrest.Condition apply(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.beans.HasPropertyWithValue$2 r0;
        java.lang.Object r1;
        org.hamcrest.Description r2;
        java.beans.PropertyDescriptor $r3;
        org.hamcrest.Condition $r4;

        r0 := @this: org.hamcrest.beans.HasPropertyWithValue$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        $r3 = (java.beans.PropertyDescriptor) r1;

        $r4 = virtualinvoke r0.<org.hamcrest.beans.HasPropertyWithValue$2: org.hamcrest.Condition apply(java.beans.PropertyDescriptor,org.hamcrest.Description)>($r3, r2);

        return $r4;
    }
}
