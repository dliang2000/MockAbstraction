class org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource extends org.apache.flink.shaded.guava18.com.google.common.io.CharSource
{
    private static final org.apache.flink.shaded.guava18.com.google.common.base.Splitter LINE_SPLITTER;
    private final java.lang.CharSequence seq;

    protected void <init>(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource r0;
        java.lang.CharSequence r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSource: void <init>()>();

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.CharSequence) $r2;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource: java.lang.CharSequence seq> = $r3;

        return;
    }

    public java.io.Reader openStream()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource r0;
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader $r1;
        java.lang.CharSequence $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource: java.lang.CharSequence seq>;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: void <init>(java.lang.CharSequence)>($r2);

        return $r1;
    }

    public java.lang.String read()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource r0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource: java.lang.CharSequence seq>;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        return $r2;
    }

    public boolean isEmpty()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource: java.lang.CharSequence seq>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private java.lang.Iterable lines()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource r0;
        org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource$1 $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource$1;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource$1: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource)>(r0);

        return $r1;
    }

    public java.lang.String readFirstLine()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource r0;
        java.util.Iterator r1;
        java.lang.Iterable $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource;

        $r2 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource: java.lang.Iterable lines()>();

        r1 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList readLines()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource r0;
        java.lang.Iterable $r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource;

        $r1 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource: java.lang.Iterable lines()>();

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>($r1);

        return $r2;
    }

    public java.lang.Object readLines(org.apache.flink.shaded.guava18.com.google.common.io.LineProcessor) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource r0;
        org.apache.flink.shaded.guava18.com.google.common.io.LineProcessor r1;
        java.util.Iterator r2;
        java.lang.String r3;
        java.lang.Iterable $r4;
        boolean $z0, $z1;
        java.lang.Object $r5, $r6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.LineProcessor;

        $r4 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource: java.lang.Iterable lines()>();

        r2 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r6;

        $z1 = interfaceinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.LineProcessor: boolean processLine(java.lang.String)>(r3);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        $r5 = interfaceinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.LineProcessor: java.lang.Object getResult()>();

        return $r5;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource r0;
        java.lang.String r1, $r3, $r4, $r9;
        java.lang.CharSequence $r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource: java.lang.CharSequence seq>;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Ascii: java.lang.String truncate(java.lang.CharSequence,int,java.lang.String)>($r2, 30, "...");

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $r5 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = 17 + $i0;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CharSource.wrap(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    static java.lang.CharSequence access$100(org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource r0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource: java.lang.CharSequence seq>;

        return $r1;
    }

    static org.apache.flink.shaded.guava18.com.google.common.base.Splitter access$200()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Splitter $r0;

        $r0 = <org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource: org.apache.flink.shaded.guava18.com.google.common.base.Splitter LINE_SPLITTER>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Splitter $r1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\r\n|\n|\r");

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Splitter: org.apache.flink.shaded.guava18.com.google.common.base.Splitter on(java.util.regex.Pattern)>($r0);

        <org.apache.flink.shaded.guava18.com.google.common.io.CharSource$CharSequenceCharSource: org.apache.flink.shaded.guava18.com.google.common.base.Splitter LINE_SPLITTER> = $r1;

        return;
    }
}
