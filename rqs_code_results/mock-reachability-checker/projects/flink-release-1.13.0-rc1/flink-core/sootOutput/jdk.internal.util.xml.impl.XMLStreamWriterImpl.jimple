public class jdk.internal.util.xml.impl.XMLStreamWriterImpl extends java.lang.Object implements jdk.internal.util.xml.XMLStreamWriter
{
    static final int STATE_XML_DECL;
    static final int STATE_PROLOG;
    static final int STATE_DTD_DECL;
    static final int STATE_ELEMENT;
    static final int ELEMENT_STARTTAG_OPEN;
    static final int ELEMENT_STARTTAG_CLOSE;
    static final int ELEMENT_ENDTAG_OPEN;
    static final int ELEMENT_ENDTAG_CLOSE;
    public static final char CLOSE_START_TAG;
    public static final char OPEN_START_TAG;
    public static final java.lang.String OPEN_END_TAG;
    public static final char CLOSE_END_TAG;
    public static final java.lang.String START_CDATA;
    public static final java.lang.String END_CDATA;
    public static final java.lang.String CLOSE_EMPTY_ELEMENT;
    public static final java.lang.String ENCODING_PREFIX;
    public static final char SPACE;
    public static final char AMPERSAND;
    public static final char DOUBLEQUOT;
    public static final char SEMICOLON;
    private int _state;
    private jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle;
    private jdk.internal.util.xml.impl.XMLWriter _writer;
    private java.lang.String _encoding;
    boolean _escapeCharacters;
    private boolean _doIndent;
    private char[] _lineSep;

    public void <init>(java.io.OutputStream) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.io.OutputStream r1;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void <init>(java.io.OutputStream,java.lang.String)>(r1, "UTF-8");

        return;
    }

    public void <init>(java.io.OutputStream, java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.io.OutputStream r1;
        java.lang.String r2, $r4;
        char[] $r5;
        jdk.internal.util.xml.impl.XMLWriter $r6;
        java.io.UnsupportedEncodingException $r7;
        jdk.internal.util.xml.XMLStreamException $r8;
        java.nio.charset.Charset r9;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: int _state> = 0;

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: boolean _escapeCharacters> = 1;

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: boolean _doIndent> = 1;

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: char[] _lineSep> = $r5;

        r9 = null;

        if r2 != null goto label1;

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.lang.String _encoding> = "UTF-8";

        goto label5;

     label1:
        r9 = specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.nio.charset.Charset getCharset(java.lang.String)>(r2);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r8.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.lang.String _encoding> = r2;

     label5:
        $r6 = new jdk.internal.util.xml.impl.XMLWriter;

        specialinvoke $r6.<jdk.internal.util.xml.impl.XMLWriter: void <init>(java.io.OutputStream,java.lang.String,java.nio.charset.Charset)>(r1, r2, r9);

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer> = $r6;

        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void writeStartDocument() throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String $r1;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        $r1 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.lang.String _encoding>;

        virtualinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void writeStartDocument(java.lang.String,java.lang.String)>($r1, "1.0");

        return;
    }

    public void writeStartDocument(java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1, $r2;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.lang.String _encoding>;

        virtualinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void writeStartDocument(java.lang.String,java.lang.String,java.lang.String)>($r2, r1, null);

        return;
    }

    public void writeStartDocument(java.lang.String, java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1, r2;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void writeStartDocument(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, null);

        return;
    }

    public void writeStartDocument(java.lang.String, java.lang.String, java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1, r2, r18, r19;
        int $i0;
        jdk.internal.util.xml.impl.XMLWriter $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        jdk.internal.util.xml.XMLStreamException $r15, $r17;
        java.io.UnsupportedEncodingException $r16;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i0 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: int _state>;

        if $i0 <= 0 goto label1;

        $r15 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r15.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.String)>("XML declaration must be as the first line in the XML document.");

        throw $r15;

     label1:
        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: int _state> = 1;

        r19 = r1;

        if r1 != null goto label2;

        r19 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.lang.String _encoding>;

        goto label5;

     label2:
        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.nio.charset.Charset getCharset(java.lang.String)>(r1);

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        $r17 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r17.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label5:
        if r18 != null goto label6;

        r18 = "1.0";

     label6:
        $r5 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r5.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("<?xml version=\"");

        $r6 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r6.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>(r18);

        $r7 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r7.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(34);

        if r19 == null goto label7;

        $r12 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r12.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>(" encoding=\"");

        $r13 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r13.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>(r19);

        $r14 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r14.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(34);

     label7:
        if r2 == null goto label8;

        $r9 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r9.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>(" standalone=\"");

        $r10 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r10.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>(r2);

        $r11 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r11.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(34);

     label8:
        $r8 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r8.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("?>");

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void writeLineSeparator()>();

        return;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public void writeDTD(java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1;
        jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element $r2, $r3;
        int $i0;
        jdk.internal.util.xml.impl.XMLWriter $r4;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        if $r2 == null goto label1;

        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $i0 = virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: int getState()>();

        if $i0 != 10 goto label1;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void closeStartTag()>();

     label1:
        $r4 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r4.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>(r1);

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void writeLineSeparator()>();

        return;
    }

    public void writeStartElement(java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1;
        jdk.internal.util.xml.XMLStreamException $r2;
        int $i0, $i1;
        jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element $r3, $r4, $r5, $r6;
        jdk.internal.util.xml.impl.XMLWriter $r7;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r2.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.String)>("Local Name cannot be null or empty");

        throw $r2;

     label2:
        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: int _state> = 4;

        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        if $r3 == null goto label3;

        $r4 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $i1 = virtualinvoke $r4.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: int getState()>();

        if $i1 != 10 goto label3;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void closeStartTag()>();

     label3:
        $r5 = new jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element;

        $r6 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        specialinvoke $r5.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: void <init>(jdk.internal.util.xml.impl.XMLStreamWriterImpl,jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element,java.lang.String,boolean)>(r0, $r6, r1, 0);

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle> = $r5;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void openStartTag()>();

        $r7 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r7.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>(r1);

        return;
    }

    public void writeEmptyElement(java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1;
        jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element $r2, $r3, $r4, $r5;
        int $i0;
        jdk.internal.util.xml.impl.XMLWriter $r6;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        if $r2 == null goto label1;

        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $i0 = virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: int getState()>();

        if $i0 != 10 goto label1;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void closeStartTag()>();

     label1:
        $r4 = new jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element;

        $r5 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        specialinvoke $r4.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: void <init>(jdk.internal.util.xml.impl.XMLStreamWriterImpl,jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element,java.lang.String,boolean)>(r0, $r5, r1, 1);

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle> = $r4;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void openStartTag()>();

        $r6 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r6.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>(r1);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1, r2;
        jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element $r3;
        int $i0;
        jdk.internal.util.xml.impl.XMLWriter $r4, $r5, $r6, $r7;
        jdk.internal.util.xml.XMLStreamException $r8;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $i0 = virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: int getState()>();

        if $i0 == 10 goto label1;

        $r8 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r8.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.String)>("Attribute not associated with any element");

        throw $r8;

     label1:
        $r4 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r4.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(32);

        $r5 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r5.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>(r1);

        $r6 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r6.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("=\"");

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void writeXMLContent(java.lang.String,boolean,boolean)>(r2, 1, 1);

        $r7 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r7.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(34);

        return;
    }

    public void writeEndDocument() throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element $r1, $r2, $r3, $r4, $r6, $r10, $r11;
        boolean $z0;
        jdk.internal.util.xml.impl.XMLWriter $r5, $r7, $r9;
        java.lang.String $r8;
        int $i0;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        $r1 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        if $r1 == null goto label1;

        $r10 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $i0 = virtualinvoke $r10.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: int getState()>();

        if $i0 != 10 goto label1;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void closeStartTag()>();

     label1:
        $r11 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        if $r11 == null goto label3;

        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $z0 = virtualinvoke $r2.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r5 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r5.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("</");

        $r7 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $r6 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $r8 = virtualinvoke $r6.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: java.lang.String getLocalName()>();

        virtualinvoke $r7.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>($r8);

        $r9 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r9.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(62);

     label2:
        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $r4 = virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element getParent()>();

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle> = $r4;

        goto label1;

     label3:
        return;
    }

    public void writeEndElement() throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element $r1, $r2, $r4, $r8, $r9, $r11, $r12;
        boolean $z0;
        jdk.internal.util.xml.impl.XMLWriter $r3, $r5, $r7;
        java.lang.String $r6;
        jdk.internal.util.xml.XMLStreamException $r10;
        int $i0;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        $r1 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        if $r1 == null goto label1;

        $r11 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $i0 = virtualinvoke $r11.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: int getState()>();

        if $i0 != 10 goto label1;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void closeStartTag()>();

     label1:
        $r12 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        if $r12 != null goto label2;

        $r10 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r10.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.String)>("No element was found to write");

        throw $r10;

     label2:
        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $z0 = virtualinvoke $r2.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        return;

     label3:
        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("</");

        $r5 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $r4 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $r6 = virtualinvoke $r4.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: java.lang.String getLocalName()>();

        virtualinvoke $r5.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>($r6);

        $r7 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r7.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(62);

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void writeLineSeparator()>();

        $r8 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $r9 = virtualinvoke $r8.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element getParent()>();

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle> = $r9;

        return;
    }

    public void writeCData(java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1;
        jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element $r2, $r3;
        int $i0;
        jdk.internal.util.xml.XMLStreamException $r4;
        jdk.internal.util.xml.impl.XMLWriter $r5, $r6, $r7;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r4.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.String)>("cdata cannot be null");

        throw $r4;

     label1:
        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        if $r2 == null goto label2;

        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $i0 = virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: int getState()>();

        if $i0 != 10 goto label2;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void closeStartTag()>();

     label2:
        $r5 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r5.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("<![CDATA[");

        $r6 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r6.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>(r1);

        $r7 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r7.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("]]>");

        return;
    }

    public void writeCharacters(java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1;
        jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element $r2, $r3;
        int $i0;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        if $r2 == null goto label1;

        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $i0 = virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: int getState()>();

        if $i0 != 10 goto label1;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void closeStartTag()>();

     label1:
        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void writeXMLContent(java.lang.String)>(r1);

        return;
    }

    public void writeCharacters(char[], int, int) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        char[] r1;
        int i0, i1, $i2;
        jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element $r2, $r3;
        boolean $z0;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        if $r2 == null goto label1;

        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $i2 = virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: int getState()>();

        if $i2 != 10 goto label1;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void closeStartTag()>();

     label1:
        $z0 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: boolean _escapeCharacters>;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void writeXMLContent(char[],int,int,boolean)>(r1, i0, i1, $z0);

        return;
    }

    public void close() throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        jdk.internal.util.xml.impl.XMLWriter $r1, $r2;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        $r1 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        if $r1 == null goto label1;

        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r2.<jdk.internal.util.xml.impl.XMLWriter: void close()>();

     label1:
        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer> = null;

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle> = null;

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: int _state> = 0;

        return;
    }

    public void flush() throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        jdk.internal.util.xml.impl.XMLWriter $r1, $r2;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        $r1 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        if $r1 == null goto label1;

        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r2.<jdk.internal.util.xml.impl.XMLWriter: void flush()>();

     label1:
        return;
    }

    public void setDoIndent(boolean)
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        boolean z0;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        z0 := @parameter0: boolean;

        r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: boolean _doIndent> = z0;

        return;
    }

    private void writeXMLContent(char[], int, int, boolean) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        char[] r1;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, i9, i10;
        boolean z0, $z1;
        char c3;
        jdk.internal.util.xml.impl.XMLWriter $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15;
        java.lang.String $r13;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        if z0 != 0 goto label1;

        $r15 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r15.<jdk.internal.util.xml.impl.XMLWriter: void write(char[],int,int)>(r1, i0, i1);

        return;

     label1:
        i9 = i0;

        i2 = i0 + i1;

        i10 = i0;

     label2:
        if i10 >= i2 goto label8;

        c3 = r1[i10];

        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $z1 = virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLWriter: boolean canEncode(char)>(c3);

        if $z1 != 0 goto label3;

        $r10 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $i8 = i10 - i9;

        virtualinvoke $r10.<jdk.internal.util.xml.impl.XMLWriter: void write(char[],int,int)>(r1, i9, $i8);

        $r11 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r11.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("&#x");

        $r12 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c3);

        virtualinvoke $r12.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>($r13);

        $r14 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r14.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(59);

        i9 = i10 + 1;

        goto label7;

     label3:
        lookupswitch(c3)
        {
            case 38: goto label5;
            case 60: goto label4;
            case 62: goto label6;
            default: goto label7;
        };

     label4:
        $r6 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $i6 = i10 - i9;

        virtualinvoke $r6.<jdk.internal.util.xml.impl.XMLWriter: void write(char[],int,int)>(r1, i9, $i6);

        $r7 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r7.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("&lt;");

        i9 = i10 + 1;

        goto label7;

     label5:
        $r8 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $i7 = i10 - i9;

        virtualinvoke $r8.<jdk.internal.util.xml.impl.XMLWriter: void write(char[],int,int)>(r1, i9, $i7);

        $r9 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r9.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("&amp;");

        i9 = i10 + 1;

        goto label7;

     label6:
        $r4 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $i5 = i10 - i9;

        virtualinvoke $r4.<jdk.internal.util.xml.impl.XMLWriter: void write(char[],int,int)>(r1, i9, $i5);

        $r5 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r5.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("&gt;");

        i9 = i10 + 1;

     label7:
        i10 = i10 + 1;

        goto label2;

     label8:
        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $i4 = i2 - i9;

        virtualinvoke $r2.<jdk.internal.util.xml.impl.XMLWriter: void write(char[],int,int)>(r1, i9, $i4);

        return;
    }

    private void writeXMLContent(java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1;
        int $i0;
        boolean $z0;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: boolean _escapeCharacters>;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void writeXMLContent(java.lang.String,boolean,boolean)>(r1, $z0, 0);

     label1:
        return;
    }

    private void writeXMLContent(java.lang.String, boolean, boolean) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1, $r16;
        boolean z0, z1, $z2;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        char c1;
        jdk.internal.util.xml.impl.XMLWriter $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 != 0 goto label01;

        $r18 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r18.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>(r1);

        return;

     label01:
        i8 = 0;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i9 = 0;

     label02:
        if i9 >= i0 goto label11;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i9);

        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $z2 = virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLWriter: boolean canEncode(char)>(c1);

        if $z2 != 0 goto label03;

        $r13 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $i7 = i9 - i8;

        virtualinvoke $r13.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String,int,int)>(r1, i8, $i7);

        $r14 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r14.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("&#x");

        $r15 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1);

        virtualinvoke $r15.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>($r16);

        $r17 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r17.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(59);

        i8 = i9 + 1;

        goto label10;

     label03:
        lookupswitch(c1)
        {
            case 34: goto label07;
            case 38: goto label05;
            case 60: goto label04;
            case 62: goto label06;
            default: goto label10;
        };

     label04:
        $r6 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $i4 = i9 - i8;

        virtualinvoke $r6.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String,int,int)>(r1, i8, $i4);

        $r7 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r7.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("&lt;");

        i8 = i9 + 1;

        goto label10;

     label05:
        $r8 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $i5 = i9 - i8;

        virtualinvoke $r8.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String,int,int)>(r1, i8, $i5);

        $r9 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r9.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("&amp;");

        i8 = i9 + 1;

        goto label10;

     label06:
        $r4 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $i3 = i9 - i8;

        virtualinvoke $r4.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String,int,int)>(r1, i8, $i3);

        $r5 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r5.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("&gt;");

        i8 = i9 + 1;

        goto label10;

     label07:
        $r10 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $i6 = i9 - i8;

        virtualinvoke $r10.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String,int,int)>(r1, i8, $i6);

        if z1 == 0 goto label08;

        $r12 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r12.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("&quot;");

        goto label09;

     label08:
        $r11 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r11.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(34);

     label09:
        i8 = i9 + 1;

     label10:
        i9 = i9 + 1;

        goto label02;

     label11:
        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $i2 = i0 - i8;

        virtualinvoke $r2.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String,int,int)>(r1, i8, $i2);

        return;
    }

    private void openStartTag() throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element $r1;
        jdk.internal.util.xml.impl.XMLWriter $r2;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        $r1 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        virtualinvoke $r1.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: void setState(int)>(10);

        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r2.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(60);

        return;
    }

    private void closeStartTag() throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element $r1, $r3, $r4, $r5;
        boolean $z0;
        jdk.internal.util.xml.impl.XMLWriter $r2, $r6;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        $r1 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $z0 = virtualinvoke $r1.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r6.<jdk.internal.util.xml.impl.XMLWriter: void write(java.lang.String)>("/>");

        goto label2;

     label1:
        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        virtualinvoke $r2.<jdk.internal.util.xml.impl.XMLWriter: void write(int)>(62);

     label2:
        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        $r4 = virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element getParent()>();

        if $r4 != null goto label3;

        specialinvoke r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void writeLineSeparator()>();

     label3:
        $r5 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element _currentEle>;

        virtualinvoke $r5.<jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element: void setState(int)>(11);

        return;
    }

    private void writeLineSeparator() throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        boolean $z0;
        char[] $r1, $r2;
        int $i0;
        jdk.internal.util.xml.impl.XMLWriter $r3;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        $z0 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: boolean _doIndent>;

        if $z0 == 0 goto label1;

        $r3 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: jdk.internal.util.xml.impl.XMLWriter _writer>;

        $r2 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: char[] _lineSep>;

        $r1 = r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: char[] _lineSep>;

        $i0 = lengthof $r1;

        virtualinvoke $r3.<jdk.internal.util.xml.impl.XMLWriter: void write(char[],int,int)>($r2, 0, $i0);

     label1:
        return;
    }

    private java.nio.charset.Charset getCharset(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl r0;
        java.lang.String r1, $r8;
        java.nio.charset.Charset r2;
        boolean $z0;
        java.io.UnsupportedEncodingException $r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("UTF-32");

        if $z0 == 0 goto label1;

        $r4 = new java.io.UnsupportedEncodingException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The basic XMLWriter does not support ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.io.UnsupportedEncodingException;

        specialinvoke $r10.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r1);

        throw $r10;

     label4:
        return r2;

        catch java.nio.charset.IllegalCharsetNameException from label1 to label2 with label3;
        catch java.nio.charset.UnsupportedCharsetException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: char SEMICOLON> = 59;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: char DOUBLEQUOT> = 34;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: char AMPERSAND> = 38;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: char SPACE> = 32;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.lang.String ENCODING_PREFIX> = "&#x";

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.lang.String CLOSE_EMPTY_ELEMENT> = "/>";

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.lang.String END_CDATA> = "]]>";

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.lang.String START_CDATA> = "<![CDATA[";

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: char CLOSE_END_TAG> = 62;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: java.lang.String OPEN_END_TAG> = "</";

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: char OPEN_START_TAG> = 60;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: char CLOSE_START_TAG> = 62;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: int ELEMENT_ENDTAG_CLOSE> = 13;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: int ELEMENT_ENDTAG_OPEN> = 12;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: int ELEMENT_STARTTAG_CLOSE> = 11;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: int ELEMENT_STARTTAG_OPEN> = 10;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: int STATE_ELEMENT> = 4;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: int STATE_DTD_DECL> = 3;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: int STATE_PROLOG> = 2;

        <jdk.internal.util.xml.impl.XMLStreamWriterImpl: int STATE_XML_DECL> = 1;

        return;
    }
}
