public abstract class org.hamcrest.Condition extends java.lang.Object
{
    public static final org.hamcrest.Condition$NotMatched NOT_MATCHED;

    private void <init>()
    {
        org.hamcrest.Condition r0;

        r0 := @this: org.hamcrest.Condition;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract boolean matching(org.hamcrest.Matcher, java.lang.String);

    public abstract org.hamcrest.Condition and(org.hamcrest.Condition$Step);

    public final boolean matching(org.hamcrest.Matcher)
    {
        org.hamcrest.Condition r0;
        org.hamcrest.Matcher r1;
        boolean $z0;

        r0 := @this: org.hamcrest.Condition;

        r1 := @parameter0: org.hamcrest.Matcher;

        $z0 = virtualinvoke r0.<org.hamcrest.Condition: boolean matching(org.hamcrest.Matcher,java.lang.String)>(r1, "");

        return $z0;
    }

    public final org.hamcrest.Condition then(org.hamcrest.Condition$Step)
    {
        org.hamcrest.Condition r0, $r2;
        org.hamcrest.Condition$Step r1;

        r0 := @this: org.hamcrest.Condition;

        r1 := @parameter0: org.hamcrest.Condition$Step;

        $r2 = virtualinvoke r0.<org.hamcrest.Condition: org.hamcrest.Condition and(org.hamcrest.Condition$Step)>(r1);

        return $r2;
    }

    public static org.hamcrest.Condition notMatched()
    {
        org.hamcrest.Condition$NotMatched $r0;

        $r0 = <org.hamcrest.Condition: org.hamcrest.Condition$NotMatched NOT_MATCHED>;

        return $r0;
    }

    public static org.hamcrest.Condition matched(java.lang.Object, org.hamcrest.Description)
    {
        java.lang.Object r0;
        org.hamcrest.Description r1;
        org.hamcrest.Condition$Matched $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.hamcrest.Description;

        $r2 = new org.hamcrest.Condition$Matched;

        specialinvoke $r2.<org.hamcrest.Condition$Matched: void <init>(java.lang.Object,org.hamcrest.Description,org.hamcrest.Condition$1)>(r0, r1, null);

        return $r2;
    }

    void <init>(org.hamcrest.Condition$1)
    {
        org.hamcrest.Condition r0;
        org.hamcrest.Condition$1 r1;

        r0 := @this: org.hamcrest.Condition;

        r1 := @parameter0: org.hamcrest.Condition$1;

        specialinvoke r0.<org.hamcrest.Condition: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.hamcrest.Condition$NotMatched $r0;

        $r0 = new org.hamcrest.Condition$NotMatched;

        specialinvoke $r0.<org.hamcrest.Condition$NotMatched: void <init>(org.hamcrest.Condition$1)>(null);

        <org.hamcrest.Condition: org.hamcrest.Condition$NotMatched NOT_MATCHED> = $r0;

        return;
    }
}
