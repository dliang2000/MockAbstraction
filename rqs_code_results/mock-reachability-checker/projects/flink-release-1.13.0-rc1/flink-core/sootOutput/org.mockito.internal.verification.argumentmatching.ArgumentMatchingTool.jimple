public class org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool extends java.lang.Object
{

    private void <init>()
    {
        org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool r0;

        r0 := @this: org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Integer[] getSuspiciouslyNotMatchingArgsIndexes(java.util.List, java.lang.Object[])
    {
        java.util.List r0;
        java.lang.Object[] r1, $r7;
        java.util.Iterator r3;
        org.mockito.ArgumentMatcher r4;
        int $i0, $i1, i2;
        java.util.LinkedList $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Integer[] $r6, $r8, $r15;
        java.lang.Object $r9, $r10, $r11, $r12;
        org.mockito.internal.matchers.ContainsExtraTypeInfo $r13;
        java.lang.Integer $r14;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Object[];

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = lengthof r1;

        if $i0 == $i1 goto label1;

        $r15 = newarray (java.lang.Integer)[0];

        return $r15;

     label1:
        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        i2 = 0;

        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.mockito.ArgumentMatcher) $r9;

        $z1 = r4 instanceof org.mockito.internal.matchers.ContainsExtraTypeInfo;

        if $z1 == 0 goto label3;

        $r10 = r1[i2];

        $z2 = staticinvoke <org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool: boolean safelyMatches(org.mockito.ArgumentMatcher,java.lang.Object)>(r4, $r10);

        if $z2 != 0 goto label3;

        $r11 = r1[i2];

        $z3 = staticinvoke <org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool: boolean toStringEquals(org.mockito.ArgumentMatcher,java.lang.Object)>(r4, $r11);

        if $z3 == 0 goto label3;

        $r13 = (org.mockito.internal.matchers.ContainsExtraTypeInfo) r4;

        $r12 = r1[i2];

        $z4 = interfaceinvoke $r13.<org.mockito.internal.matchers.ContainsExtraTypeInfo: boolean typeMatches(java.lang.Object)>($r12);

        if $z4 != 0 goto label3;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r14);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        $r6 = newarray (java.lang.Integer)[0];

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.lang.Integer[]) $r7;

        return $r8;
    }

    private static boolean safelyMatches(org.mockito.ArgumentMatcher, java.lang.Object)
    {
        org.mockito.ArgumentMatcher r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        r1 := @parameter1: java.lang.Object;

     label1:
        $z0 = interfaceinvoke r0.<org.mockito.ArgumentMatcher: boolean matches(java.lang.Object)>(r1);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static boolean toStringEquals(org.mockito.ArgumentMatcher, java.lang.Object)
    {
        org.mockito.ArgumentMatcher r0;
        java.lang.Object r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        r1 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        if r1 != null goto label1;

        $r3 = "null";

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

     label2:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }
}
