class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter extends java.lang.Object implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter
{
    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _inputType;
    private final int _kind;

    void <init>(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _inputType> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: int _kind> = i0;

        return;
    }

    public java.lang.Object convert(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter r0;
        java.lang.Object r1, $r19, $r20, $r21, $r23, $r26;
        java.util.Map$Entry r2;
        int $i0, $i1, $i2, $i3;
        java.util.Map $r3, $r4, $r11, $r12, $r22, r30;
        java.util.List $r5, $r6, $r13, $r14, $r24, r29;
        java.util.Collection $r7, $r8;
        java.util.Set $r9, $r10, $r15, $r16, $r17, $r27, r28;
        java.util.Iterator $r18, $r25;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        return null;

     label01:
        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: int _kind>;

        tableswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label10;
            case 9: goto label09;
            case 10: goto label11;
            case 11: goto label12;
            default: goto label12;
        };

     label02:
        r28 = (java.util.Set) r1;

        $i3 = interfaceinvoke r28.<java.util.Set: int size()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: void _checkSingleton(int)>($i3);

        $r25 = interfaceinvoke r28.<java.util.Set: java.util.Iterator iterator()>();

        $r26 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        $r27 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r26);

        return $r27;

     label03:
        r29 = (java.util.List) r1;

        $i2 = interfaceinvoke r29.<java.util.List: int size()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: void _checkSingleton(int)>($i2);

        $r23 = interfaceinvoke r29.<java.util.List: java.lang.Object get(int)>(0);

        $r24 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r23);

        return $r24;

     label04:
        r30 = (java.util.Map) r1;

        $i1 = interfaceinvoke r30.<java.util.Map: int size()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: void _checkSingleton(int)>($i1);

        $r17 = interfaceinvoke r30.<java.util.Map: java.util.Set entrySet()>();

        $r18 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r19;

        $r20 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r20, $r21);

        return $r22;

     label05:
        $r15 = (java.util.Set) r1;

        $r16 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r15);

        return $r16;

     label06:
        $r13 = (java.util.List) r1;

        $r14 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r13);

        return $r14;

     label07:
        $r11 = (java.util.Map) r1;

        $r12 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r11);

        return $r12;

     label08:
        $r9 = (java.util.Set) r1;

        $r10 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r9);

        return $r10;

     label09:
        $r5 = (java.util.List) r1;

        $r6 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r5);

        return $r6;

     label10:
        $r7 = (java.util.Collection) r1;

        $r8 = staticinvoke <java.util.Collections: java.util.Collection synchronizedCollection(java.util.Collection)>($r7);

        return $r8;

     label11:
        $r3 = (java.util.Map) r1;

        $r4 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r3);

        return $r4;

     label12:
        return r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getInputType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _inputType>;

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getOutputType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _inputType>;

        return $r2;
    }

    private void _checkSingleton(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Singleton container from ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label1:
        return;
    }
}
