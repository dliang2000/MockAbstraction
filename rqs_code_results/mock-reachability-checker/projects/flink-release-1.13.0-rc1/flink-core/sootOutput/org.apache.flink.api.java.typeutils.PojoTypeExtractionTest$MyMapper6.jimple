public class org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$MyMapper6 extends java.lang.Object implements org.apache.flink.api.common.functions.MapFunction
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$MyMapper6 r0;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$MyMapper6;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object map(org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$PojoWithParameterizedFields3) throws java.lang.Exception
    {
        org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$MyMapper6 r0;
        org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$PojoWithParameterizedFields3 r1;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$MyMapper6;

        r1 := @parameter0: org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$PojoWithParameterizedFields3;

        return null;
    }

    public volatile java.lang.Object map(java.lang.Object) throws java.lang.Exception
    {
        org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$MyMapper6 r0;
        java.lang.Object r1, $r3;
        org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$PojoWithParameterizedFields3 $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$MyMapper6;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$PojoWithParameterizedFields3) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$MyMapper6: java.lang.Object map(org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$PojoWithParameterizedFields3)>($r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$MyMapper6: long serialVersionUID> = 1L;

        return;
    }
}
