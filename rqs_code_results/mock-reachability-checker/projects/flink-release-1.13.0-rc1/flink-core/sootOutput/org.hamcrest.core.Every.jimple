public class org.hamcrest.core.Every extends org.hamcrest.TypeSafeDiagnosingMatcher
{
    private final org.hamcrest.Matcher matcher;

    public void <init>(org.hamcrest.Matcher)
    {
        org.hamcrest.core.Every r0;
        org.hamcrest.Matcher r1;

        r0 := @this: org.hamcrest.core.Every;

        r1 := @parameter0: org.hamcrest.Matcher;

        specialinvoke r0.<org.hamcrest.TypeSafeDiagnosingMatcher: void <init>()>();

        r0.<org.hamcrest.core.Every: org.hamcrest.Matcher matcher> = r1;

        return;
    }

    public boolean matchesSafely(java.lang.Iterable, org.hamcrest.Description)
    {
        org.hamcrest.core.Every r0;
        java.lang.Iterable r1;
        org.hamcrest.Description r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        boolean $z0, $z1;
        org.hamcrest.Matcher $r5, $r7;

        r0 := @this: org.hamcrest.core.Every;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: org.hamcrest.Description;

        r3 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = r0.<org.hamcrest.core.Every: org.hamcrest.Matcher matcher>;

        $z1 = interfaceinvoke $r5.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r4);

        if $z1 != 0 goto label2;

        interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("an item ");

        $r7 = r0.<org.hamcrest.core.Every: org.hamcrest.Matcher matcher>;

        interfaceinvoke $r7.<org.hamcrest.Matcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>(r4, r2);

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.core.Every r0;
        org.hamcrest.Description r1, $r2;
        org.hamcrest.Matcher $r3;

        r0 := @this: org.hamcrest.core.Every;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("every item is ");

        $r3 = r0.<org.hamcrest.core.Every: org.hamcrest.Matcher matcher>;

        interfaceinvoke $r2.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public static org.hamcrest.Matcher everyItem(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;
        org.hamcrest.core.Every $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = new org.hamcrest.core.Every;

        specialinvoke $r1.<org.hamcrest.core.Every: void <init>(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public volatile boolean matchesSafely(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.core.Every r0;
        java.lang.Object r1;
        org.hamcrest.Description r2;
        java.lang.Iterable $r3;
        boolean $z0;

        r0 := @this: org.hamcrest.core.Every;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        $r3 = (java.lang.Iterable) r1;

        $z0 = virtualinvoke r0.<org.hamcrest.core.Every: boolean matchesSafely(java.lang.Iterable,org.hamcrest.Description)>($r3, r2);

        return $z0;
    }
}
