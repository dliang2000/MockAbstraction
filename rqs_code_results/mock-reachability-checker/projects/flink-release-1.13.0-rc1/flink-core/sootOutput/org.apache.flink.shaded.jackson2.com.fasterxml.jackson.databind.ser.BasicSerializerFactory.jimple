public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory implements java.io.Serializable
{
    protected static final java.util.HashMap _concrete;
    protected static final java.util.HashMap _concreteLazy;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig;

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig r1, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory: void <init>()>();

        if r1 != null goto label1;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: void <init>()>();

        goto label2;

     label1:
        $r3 = r1;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig> = $r3;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig getFactoryConfig()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        return $r1;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig);

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalSerializers(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>($r3);

        return $r4;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalKeySerializers(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>($r3);

        return $r4;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withSerializerModifier(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>($r3);

        return $r4;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException;

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3, r20, r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r6, $r7, $r17, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Iterable $r8, $r18;
        java.lang.Object $r9, $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass $r10;
        java.lang.Class $r11, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.JsonValueSerializer $r14;
        java.lang.reflect.Member $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r16;
        java.util.Iterator r21, r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember r23;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier r27;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspect(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

        r20 = null;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z0 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasKeySerializers()>();

        if $z0 == 0 goto label3;

        $r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r18 = virtualinvoke $r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable keySerializers()>();

        r21 = interfaceinvoke $r18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label3;

        $r19 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers) $r19;

        r20 = interfaceinvoke r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r4, r2, r5);

        if r20 == null goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        if r20 != null goto label7;

        $r10 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        r20 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r1, $r10);

        if r20 != null goto label7;

        r20 = r3;

        if r3 != null goto label7;

        $r11 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r20 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,boolean)>(r4, $r11, 0);

        if r20 != null goto label7;

        r23 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonKeyAccessor()>();

        if r23 != null goto label4;

        r23 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor()>();

     label4:
        if r23 == null goto label6;

        $r13 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getType()>();

        r24 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, $r13, r3);

        $z2 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();

        if $z2 == 0 goto label5;

        $r15 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.reflect.Member getMember()>();

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature OVERRIDE_PUBLIC_ACCESS_MODIFIERS>;

        $z3 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r16);

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member,boolean)>($r15, $z3);

     label5:
        $r14 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.JsonValueSerializer;

        specialinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r23, null, r24);

        r20 = $r14;

        goto label7;

     label6:
        $r12 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r20 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class)>(r4, $r12);

     label7:
        $r25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z5 = virtualinvoke $r25.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z5 == 0 goto label9;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        r26 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label8:
        $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r9 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r27 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r9;

        r20 = virtualinvoke r27.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer modifyKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r4, r2, r5, r20);

        goto label8;

     label9:
        return r20;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3, r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r5, $r6, $r11, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Iterable $r7, $r12;
        java.lang.Object $r8, $r13;
        java.lang.Class $r9, $r10;
        java.util.Iterator r15, r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier r19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspect(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

        r14 = null;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z0 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasKeySerializers()>();

        if $z0 == 0 goto label3;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable keySerializers()>();

        r15 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r13 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers) $r13;

        r14 = interfaceinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r2, r4);

        if r14 == null goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        if r14 != null goto label4;

        r14 = r3;

        if r3 != null goto label4;

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,boolean)>(r1, $r9, 0);

        if r14 != null goto label4;

        $r10 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class)>(r1, $r10);

     label4:
        $r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z3 = virtualinvoke $r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z3 == 0 goto label6;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        r18 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r8;

        r14 = virtualinvoke r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer modifyKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r2, r4, r14);

        goto label5;

     label6:
        return r14;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r5;
        java.lang.Class $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder r9;
        java.util.Collection r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r6 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class)>($r6);

        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        r9 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r4, r2);

        r10 = null;

        if r9 != null goto label1;

        r9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getDefaultTyper(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

        goto label2;

     label1:
        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();

        r10 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver: java.util.Collection collectAndResolveSubtypesByClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(r1, r4);

     label2:
        if r9 != null goto label3;

        return null;

     label3:
        $r8 = interfaceinvoke r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.util.Collection)>(r1, r2, r10);

        return $r8;
    }

    protected abstract java.lang.Iterable customSerializers();

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializerByLookup(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0;
        java.lang.Class r4, r7;
        java.lang.String r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r6, $r13;
        java.util.HashMap $r8, $r10;
        java.lang.Object $r9, $r11, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r5 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.util.HashMap _concrete>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) $r9;

        if r6 != null goto label1;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.util.HashMap _concreteLazy>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (java.lang.Class) $r11;

        if r7 == null goto label1;

        $r12 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r7, 0);

        $r13 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) $r12;

        return $r13;

     label1:
        return r6;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        java.lang.Class r4, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.JsonValueSerializer $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r10;
        java.lang.reflect.Member $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.SerializableSerializer $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r7 = class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonSerializable;";

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z0 == 0 goto label1;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.SerializableSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.SerializableSerializer instance>;

        return $r14;

     label1:
        r5 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor()>();

        if r5 == null goto label5;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean canOverrideAccessModifiers()>();

        if $z1 == 0 goto label2;

        $r12 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.reflect.Member getMember()>();

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature OVERRIDE_PUBLIC_ACCESS_MODIFIERS>;

        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r13);

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member,boolean)>($r12, $z2);

     label2:
        r6 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getType()>();

        r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r1, r5);

        if r15 != null goto label3;

        $r11 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();

        r15 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) $r11;

     label3:
        $r8 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Object getTypeHandler()>();

        r16 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) $r8;

        if r16 != null goto label4;

        $r10 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r10, r6);

     label4:
        $r9 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.JsonValueSerializer;

        specialinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r5, r16, r15);

        return $r9;

     label5:
        return null;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializerByPrimaryType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r6, r7, r31;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Class r4, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r5, $r26, $r30;
        int[] $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape $r18;
        int $i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer $r19, $r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer $r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer $r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer $r23;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer $r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer $r25;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.DateSerializer $r27;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CalendarSerializer $r28;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r29;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r32;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isEnumType()>();

        if $z1 == 0 goto label01;

        $r29 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r30 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildEnumSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>($r29, r2, r3);

        return $r30;

     label01:
        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findOptionalStdSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,boolean)>(r1, r2, r3, z0);

        if r5 == null goto label02;

        return r5;

     label02:
        $r8 = class "Ljava/util/Calendar;";

        $z2 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z2 == 0 goto label03;

        $r28 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CalendarSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CalendarSerializer instance>;

        return $r28;

     label03:
        $r9 = class "Ljava/util/Date;";

        $z3 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z3 == 0 goto label04;

        $r27 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.DateSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.DateSerializer instance>;

        return $r27;

     label04:
        $r10 = class "Ljava/util/Map$Entry;";

        $z4 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z4 == 0 goto label05;

        r31 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(class "Ljava/util/Map$Entry;");

        r6 = virtualinvoke r31.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType containedTypeOrUnknown(int)>(0);

        r7 = virtualinvoke r31.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType containedTypeOrUnknown(int)>(1);

        $r26 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildMapEntrySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r3, z0, r6, r7);

        return $r26;

     label05:
        $r11 = class "Ljava/nio/ByteBuffer;";

        $z5 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z5 == 0 goto label06;

        $r25 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer;

        specialinvoke $r25.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer: void <init>()>();

        return $r25;

     label06:
        $r12 = class "Ljava/net/InetAddress;";

        $z6 = virtualinvoke $r12.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z6 == 0 goto label07;

        $r24 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;

        specialinvoke $r24.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void <init>()>();

        return $r24;

     label07:
        $r13 = class "Ljava/net/InetSocketAddress;";

        $z7 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z7 == 0 goto label08;

        $r23 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer;

        specialinvoke $r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer: void <init>()>();

        return $r23;

     label08:
        $r14 = class "Ljava/util/TimeZone;";

        $z8 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z8 == 0 goto label09;

        $r22 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer;

        specialinvoke $r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer: void <init>()>();

        return $r22;

     label09:
        $r15 = class "Ljava/nio/charset/Charset;";

        $z9 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z9 == 0 goto label10;

        $r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance>;

        return $r21;

     label10:
        $r16 = class "Ljava/lang/Number;";

        $z10 = virtualinvoke $r16.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z10 == 0 goto label14;

        r32 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape>;

        $r18 = virtualinvoke r32.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();

        $i0 = virtualinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: int ordinal()>();

        $i1 = $r17[$i0];

        tableswitch($i1)
        {
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label12;
            default: goto label13;
        };

     label11:
        $r19 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance>;

        return $r19;

     label12:
        return null;

     label13:
        $r20 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer instance>;

        return $r20;

     label14:
        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findOptionalStdSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance>;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r6 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>($r5, r2, r3);

        return $r6;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializerByAddonType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, $r14, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0, $z1, $z2, $z3;
        java.lang.Class r4, $r5, $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r9, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r10, $r12;
        int $i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r13, r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r5 = class "Ljava/util/Iterator;";

        $z1 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z1 == 0 goto label4;

        $r11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        r13 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] findTypeParameters(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(r2, class "Ljava/util/Iterator;");

        if r13 == null goto label1;

        $i1 = lengthof r13;

        if $i1 == 1 goto label2;

     label1:
        $r14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        goto label3;

     label2:
        $r14 = r13[0];

     label3:
        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildIteratorSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r3, z0, $r14);

        return $r12;

     label4:
        $r6 = class "Ljava/lang/Iterable;";

        $z2 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z2 == 0 goto label8;

        $r9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        r16 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] findTypeParameters(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(r2, class "Ljava/lang/Iterable;");

        if r16 == null goto label5;

        $i0 = lengthof r16;

        if $i0 == 1 goto label6;

     label5:
        $r17 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        goto label7;

     label6:
        $r17 = r16[0];

     label7:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildIterableSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r3, z0, $r17);

        return $r10;

     label8:
        $r7 = class "Ljava/lang/CharSequence;";

        $z3 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z3 == 0 goto label9;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance>;

        return $r8;

     label9:
        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r2;
        java.lang.Object r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        r3 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r2);

        if r3 != null goto label1;

        return null;

     label1:
        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(r2, r3);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r2, r4);

        return $r6;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter findConverter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r1, r2);

        if r4 != null goto label1;

        return r3;

     label1:
        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        r5 = interfaceinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getOutputType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>($r6);

        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r4, r5, r3);

        return $r7;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter findConverter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r2;
        java.lang.Object r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        r3 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findSerializationConverter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r2);

        if r3 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter converterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(r2, r3);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildContainerSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r5, $r28;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r7, $r10, $r18, $r27, r30, r31, r38;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass $r8, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType $r9;
        java.lang.Iterable $r11, $r14, $r20, $r23;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r12, $r13, $r21, $r22;
        java.lang.Object $r15, $r16, $r24, $r25;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType $r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType r29, r32;
        java.util.Iterator r33, r35, r40, r42;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers r34, r41;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier r36, r43;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType r37, r39;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z14 := @parameter3: boolean;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        if z14 != 0 goto label02;

        $z11 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean useStaticType()>();

        if $z11 == 0 goto label02;

        $z12 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z12 == 0 goto label01;

        $r28 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        $z13 = virtualinvoke $r28.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();

        if $z13 != 0 goto label02;

     label01:
        z14 = 1;

     label02:
        r5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r4, r5);

        if r6 == null goto label03;

        z14 = 0;

     label03:
        $r8 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findContentSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r1, $r8);

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();

        if $z0 == 0 goto label11;

        r29 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType) r2;

        $r19 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        r30 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r1, $r19);

        $z7 = r29 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType;

        if $z7 == 0 goto label04;

        $r26 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType) r29;

        $r27 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildMapSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, $r26, r3, z14, r30, r6, r7);

        return $r27;

     label04:
        r31 = null;

        r32 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType) r2;

        $r20 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();

        r33 = interfaceinvoke $r20.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z8 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label07;

        $r25 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r34 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers) $r25;

        r31 = interfaceinvoke r34.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r4, r32, r3, r30, r6, r7);

        if r31 == null goto label06;

        goto label07;

     label06:
        goto label05;

     label07:
        if r31 != null goto label08;

        r31 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r2, r3);

     label08:
        if r31 == null goto label10;

        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z9 = virtualinvoke $r21.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z9 == 0 goto label10;

        $r22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r23 = virtualinvoke $r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        r35 = interfaceinvoke $r23.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z10 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label10;

        $r24 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r36 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r24;

        r31 = virtualinvoke r36.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer modifyMapLikeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r4, r32, r3, r31);

        goto label09;

     label10:
        return r31;

     label11:
        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isCollectionLikeType()>();

        if $z1 == 0 goto label19;

        r37 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType) r2;

        $z3 = r37 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType;

        if $z3 == 0 goto label12;

        $r17 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType) r37;

        $r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildCollectionSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, $r17, r3, z14, r6, r7);

        return $r18;

     label12:
        r38 = null;

        r39 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType) r2;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();

        r40 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label13:
        $z4 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        $r16 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r41 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers) $r16;

        r38 = interfaceinvoke r41.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r4, r39, r3, r6, r7);

        if r38 == null goto label14;

        goto label15;

     label14:
        goto label13;

     label15:
        if r38 != null goto label16;

        r38 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r2, r3);

     label16:
        if r38 == null goto label18;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z5 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z5 == 0 goto label18;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        r42 = interfaceinvoke $r14.<java.lang.Iterable: java.util.Iterator iterator()>();

     label17:
        $z6 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label18;

        $r15 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r43 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r15;

        r38 = virtualinvoke r43.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer modifyCollectionLikeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r4, r39, r3, r38);

        goto label17;

     label18:
        return r38;

     label19:
        $z2 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isArrayType()>();

        if $z2 == 0 goto label20;

        $r9 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType) r2;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildArraySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, $r9, r3, z14, r6, r7);

        return $r10;

     label20:
        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildCollectionSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r5, r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r6;
        java.lang.Iterable $r7, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r8, $r25;
        java.lang.Object $r10, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape $r11, $r12;
        java.lang.Class $r13, r22, r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r14, $r15, $r16, r23;
        java.util.Iterator r19, r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier r27;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r5 := @parameter5: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        r18 = null;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();

        r19 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r17 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers) $r17;

        r18 = interfaceinvoke r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r6, r2, r3, r4, r5);

        if r18 == null goto label02;

        goto label03;

     label02:
        goto label01;

     label03:
        if r18 != null goto label10;

        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r2, r3);

        if r18 != null goto label10;

        r21 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);

        $r11 = virtualinvoke r21.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;

        if $r11 != $r12 goto label04;

        return null;

     label04:
        r22 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType: java.lang.Class getRawClass()>();

        $r13 = class "Ljava/util/EnumSet;";

        $z3 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r22);

        if $z3 == 0 goto label06;

        r23 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        $z7 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isEnumImplType()>();

        if $z7 != 0 goto label05;

        r23 = null;

     label05:
        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildEnumSetSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r23);

        goto label10;

     label06:
        $r14 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        r24 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: boolean isIndexedList(java.lang.Class)>(r22);

        if $z4 == 0 goto label08;

        if r24 != class "Ljava/lang/String;" goto label07;

        $z6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isJacksonStdImpl(java.lang.Object)>(r5);

        if $z6 == 0 goto label09;

        r18 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer instance>;

        goto label09;

     label07:
        $r16 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer buildIndexedListSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>($r16, z0, r4, r5);

        goto label09;

     label08:
        if r24 != class "Ljava/lang/String;" goto label09;

        $z5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isJacksonStdImpl(java.lang.Object)>(r5);

        if $z5 == 0 goto label09;

        r18 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer instance>;

     label09:
        if r18 != null goto label10;

        $r15 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer buildCollectionSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>($r15, z0, r4, r5);

     label10:
        $r25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z8 = virtualinvoke $r25.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z8 == 0 goto label12;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        r26 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r10 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r27 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r10;

        r18 = virtualinvoke r27.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer modifyCollectionSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r6, r2, r3, r18);

        goto label11;

     label12:
        return r18;
    }

    protected boolean isIndexedList(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        java.lang.Class r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = class "Ljava/util/RandomAccess;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer buildIndexedListSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, z0, r2, r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer buildCollectionSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, z0, r2, r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildEnumSetSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSetSerializer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSetSerializer;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSetSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        return $r2;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildMapSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4, r6, r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r8;
        java.util.Set r9, $r27, $r28;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape $r13, $r14;
        java.lang.Iterable $r15, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r16, $r29;
        java.lang.Object $r18, $r21, r25;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass $r19, $r20;
        java.util.Iterator r23, r30;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier r31;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r5 := @parameter5: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r6 := @parameter6: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r7 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);

        $r13 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;

        if $r13 != $r14 goto label01;

        return null;

     label01:
        r22 = null;

        r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();

        r23 = interfaceinvoke $r15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r21 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r24 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers) $r21;

        r22 = interfaceinvoke r24.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r8, r2, r3, r4, r5, r6);

        if r22 == null goto label03;

        goto label04;

     label03:
        goto label02;

     label04:
        if r22 != null goto label09;

        r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r2, r3);

        if r22 != null goto label09;

        r25 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Object findFilterId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r8, r3);

        $r19 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        r26 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(class "Ljava/util/Map;", $r19);

        if r26 != null goto label05;

        $r27 = null;

        goto label06;

     label05:
        $r27 = virtualinvoke r26.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value: java.util.Set findIgnoredForSerialization()>();

     label06:
        r9 = $r27;

        $r20 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        r10 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value getDefaultPropertyInclusions(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(class "Ljava/util/Map;", $r20);

        if r10 != null goto label07;

        $r28 = null;

        goto label08;

     label07:
        $r28 = virtualinvoke r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value: java.util.Set getIncluded()>();

     label08:
        r12 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,java.util.Set,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object)>(r9, $r28, r2, z0, r5, r4, r6, r25);

        r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer _checkMapContentInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer)>(r1, r3, r12);

     label09:
        $r29 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z3 = virtualinvoke $r29.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z3 == 0 goto label11;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r17 = virtualinvoke $r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        r30 = interfaceinvoke $r17.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r18 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r18;

        r22 = virtualinvoke r31.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer modifyMapSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r8, r2, r3, r22);

        goto label10;

     label11:
        return r22;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer _checkMapContentInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r3, $r9, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include $r7, $r10, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r8;
        boolean $z0, $z1, $z2, z3;
        int[] $r11;
        int $i0, $i1;
        java.lang.Class $r12, $r13;
        java.lang.Object r15, $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value _findInclusionWithContent(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(r1, r2, r4, class "Ljava/util/Map;");

        if r5 != null goto label01;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;

        goto label02;

     label01:
        $r14 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include getContentInclusion()>();

     label02:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;

        if $r14 == $r7 goto label03;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include ALWAYS>;

        if $r14 != $r10 goto label05;

     label03:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r8);

        if $z0 != 0 goto label04;

        $r9 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object,boolean)>(null, 1);

        return $r9;

     label04:
        return r3;

     label05:
        z3 = 1;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;

        $i0 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();

        $i1 = $r11[$i0];

        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label13;
            default: goto label13;
        };

     label06:
        r15 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r4);

        if r15 == null goto label14;

        $r13 = virtualinvoke r15.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r13.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label14;

        r15 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object getArrayComparator(java.lang.Object)>(r15);

        goto label14;

     label07:
        $z1 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();

        if $z1 == 0 goto label08;

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        goto label09;

     label08:
        $r16 = null;

     label09:
        r15 = $r16;

        goto label14;

     label10:
        r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        goto label14;

     label11:
        $r12 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();

        r15 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object includeFilterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(null, $r12);

        if r15 != null goto label12;

        z3 = 1;

        goto label14;

     label12:
        z3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>(r15);

        goto label14;

     label13:
        r15 = null;

     label14:
        $r17 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object,boolean)>(r15, z3);

        return $r17;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildMapEntrySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r4, r5, r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0, $z1, $z2, z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r6, r7, r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape $r13, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer $r15, $r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include $r18, $r19, $r23;
        int[] $r20;
        int $i0, $i1;
        java.lang.Class $r21, $r22;
        java.lang.Object r24, $r25;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r5 := @parameter5: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class)>(class "Ljava/util/Map$Entry;");

        r7 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);

        r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value merge(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(r7, r6);

        $r13 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;

        if $r13 != $r14 goto label01;

        return null;

     label01:
        $r15 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer;

        $r16 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r16, r5);

        specialinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r5, r4, r5, z0, $r17, null);

        r10 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value _findInclusionWithContent(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(r1, r3, r10, class "Ljava/util/Map$Entry;");

        if r11 != null goto label02;

        $r23 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;

        goto label03;

     label02:
        $r23 = virtualinvoke r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include getContentInclusion()>();

     label03:
        $r18 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;

        if $r23 == $r18 goto label04;

        $r19 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include ALWAYS>;

        if $r23 != $r19 goto label05;

     label04:
        return $r15;

     label05:
        z3 = 1;

        $r20 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;

        $i0 = virtualinvoke $r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();

        $i1 = $r20[$i0];

        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label13;
            default: goto label13;
        };

     label06:
        r24 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r10);

        if r24 == null goto label14;

        $r22 = virtualinvoke r24.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r22.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label14;

        r24 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object getArrayComparator(java.lang.Object)>(r24);

        goto label14;

     label07:
        $z1 = virtualinvoke r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();

        if $z1 == 0 goto label08;

        $r25 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        goto label09;

     label08:
        $r25 = null;

     label09:
        r24 = $r25;

        goto label14;

     label10:
        r24 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        goto label14;

     label11:
        $r21 = virtualinvoke r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();

        r24 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object includeFilterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(null, $r21);

        if r24 != null goto label12;

        z3 = 1;

        goto label14;

     label12:
        z3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>(r24);

        goto label14;

     label13:
        r24 = null;

     label14:
        $r26 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer withContentInclusion(java.lang.Object,boolean)>(r24, z3);

        return $r26;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value _findInclusionWithContent(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.Class) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        java.lang.Class r4, $r8, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r6, $r7, r13, r14;
        int[] $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include $r10, $r12;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 := @parameter3: java.lang.Class;

        r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r7 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion()>();

        r13 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value findPropertyInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)>($r7);

        r14 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(r4, r13);

        $r8 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r6 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)>($r8, null);

        if r6 == null goto label4;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;

        $r10 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include getValueInclusion()>();

        $i0 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();

        $i1 = $r9[$i0];

        lookupswitch($i1)
        {
            case 4: goto label2;
            case 6: goto label1;
            default: goto label3;
        };

     label1:
        goto label4;

     label2:
        $r11 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();

        r14 = virtualinvoke r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value withContentFilter(java.lang.Class)>($r11);

        goto label4;

     label3:
        $r12 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include getValueInclusion()>();

        r14 = virtualinvoke r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value withContentInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include)>($r12);

     label4:
        return r14;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildArraySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0, $z1, $z2, $z3, $z4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r5, r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r6;
        java.lang.Iterable $r7, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r8, $r18;
        java.lang.Object $r10, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r12;
        java.util.Iterator r15, r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers r16;
        java.lang.Class r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier r20;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r5 := @parameter5: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        r14 = null;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();

        r15 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r13 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers) $r13;

        r14 = interfaceinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r6, r2, r3, r4, r5);

        if r14 == null goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        if r14 != null goto label7;

        r17 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType: java.lang.Class getRawClass()>();

        if r5 == null goto label4;

        $z3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isJacksonStdImpl(java.lang.Object)>(r5);

        if $z3 == 0 goto label6;

     label4:
        if class "[Ljava/lang/String;" != r17 goto label5;

        r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.StringArraySerializer instance>;

        goto label6;

     label5:
        r14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findStandardImpl(java.lang.Class)>(r17);

     label6:
        if r14 != null goto label7;

        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;

        $r12 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>($r12, z0, r4, r5);

        r14 = $r11;

     label7:
        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z4 = virtualinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z4 == 0 goto label9;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        r19 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label8:
        $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r10 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r10;

        r14 = virtualinvoke r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer modifyArraySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r6, r2, r3, r14);

        goto label8;

     label9:
        return r14;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r6, r9, $r13;
        java.util.Iterator r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers r8;
        java.lang.Object $r10, $r11, $r14;
        java.lang.Iterable $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r10 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Object getTypeHandler()>();

        r15 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) $r10;

        r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        if r15 != null goto label1;

        r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r5, r4);

     label1:
        $r11 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();

        r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) $r11;

        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();

        r7 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers) $r14;

        r9 = interfaceinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r5, r2, r3, r15, r6);

        if r9 == null goto label3;

        return r9;

     label3:
        goto label2;

     label4:
        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType: boolean isTypeOrSubTypeOf(java.lang.Class)>(class "Ljava/util/concurrent/atomic/AtomicReference;");

        if $z1 == 0 goto label5;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildAtomicReferenceSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r2, r3, z0, r15, r6);

        return $r13;

     label5:
        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildAtomicReferenceSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0, $z1, $z2, z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include $r10, $r11, $r15;
        int[] $r12;
        int $i0, $i1;
        java.lang.Class $r13, $r14;
        java.lang.Object r16, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer $r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer $r19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r5 := @parameter5: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r6 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getReferencedType()>();

        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value _findInclusionWithContent(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(r1, r3, r6, class "Ljava/util/concurrent/atomic/AtomicReference;");

        if r7 != null goto label01;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;

        goto label02;

     label01:
        $r15 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include getContentInclusion()>();

     label02:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;

        if $r15 == $r10 goto label03;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include ALWAYS>;

        if $r15 != $r11 goto label04;

     label03:
        r16 = null;

        z3 = 0;

        goto label13;

     label04:
        z3 = 1;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;

        $i0 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();

        $i1 = $r12[$i0];

        tableswitch($i1)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label09;
            case 4: goto label10;
            case 5: goto label12;
            default: goto label12;
        };

     label05:
        r16 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r6);

        if r16 == null goto label13;

        $r14 = virtualinvoke r16.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r14.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label13;

        r16 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object getArrayComparator(java.lang.Object)>(r16);

        goto label13;

     label06:
        $z1 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();

        if $z1 == 0 goto label07;

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        goto label08;

     label07:
        $r17 = null;

     label08:
        r16 = $r17;

        goto label13;

     label09:
        r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        goto label13;

     label10:
        $r13 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();

        r16 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object includeFilterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(null, $r13);

        if r16 != null goto label11;

        z3 = 1;

        goto label13;

     label11:
        z3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>(r16);

        goto label13;

     label12:
        r16 = null;

     label13:
        $r18 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;

        specialinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r2, z0, r4, r5);

        $r19 = virtualinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean)>(r16, z3);

        return $r19;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildIteratorSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.IteratorSerializer $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.IteratorSerializer;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r4);

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(r4, z0, $r6);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildIterableSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.IterableSerializer $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.IterableSerializer;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r4);

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(r4, z0, $r6);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer buildEnumSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r4;
        java.lang.Class r5;
        java.util.Iterator r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape $r8, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig $r10, $r11;
        boolean $z0, $z1;
        java.lang.Iterable $r12;
        java.lang.Object $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BasicBeanDescription $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);

        $r8 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;

        if $r8 != $r9 goto label1;

        $r14 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BasicBeanDescription) r3;

        virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BasicBeanDescription: boolean removeProperty(java.lang.String)>("declaringClass");

        return null;

     label1:
        r5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r15 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(r5, r1, r3, r4);

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $z0 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();

        if $z0 == 0 goto label3;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();

        r6 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier) $r13;

        r15 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerModifier: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer modifyEnumSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r2, r3, r15);

        goto label2;

     label3:
        return r15;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r3;
        java.lang.Object r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r2);

        if r4 == null goto label1;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(r2, r4);

        return $r5;

     label1:
        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findContentSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r3;
        java.lang.Object r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findContentSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r2);

        if r4 == null goto label1;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(r2, r4);

        return $r5;

     label1:
        return null;
    }

    protected java.lang.Object findFilterId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findFilterId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>($r4);

        return $r5;
    }

    protected boolean usesStaticTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing r5, $r8, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        if r3 == null goto label1;

        return 0;

     label1:
        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r6 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing findSerializationTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>($r6);

        if r5 == null goto label4;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing DEFAULT_TYPING>;

        if r5 == $r8 goto label4;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing STATIC>;

        if r5 != $r9 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r7);

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.Object r5, $r53, $r54, $r58;
        java.lang.Class r6, $r9, $r13, $r16, $r19, $r22, $r25, $r29, $r33, $r37, $r41, $r45, $r50, $r55, $r59;
        java.util.HashMap $r7, $r8;
        java.lang.String $r10, $r14, $r17, $r20, $r23, $r26, $r30, $r34, $r38, $r42, $r46, $r51, $r56, $r60;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StringSerializer $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BooleanSerializer $r27, $r31;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer $r35, $r39;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CalendarSerializer $r43;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.DateSerializer $r47;
        java.util.Collection $r49;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r61;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = class "Ljava/lang/String;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StringSerializer;

        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StringSerializer: void <init>()>();

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance>;

        $r13 = class "Ljava/lang/StringBuffer;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r2);

        $r16 = class "Ljava/lang/StringBuilder;";

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r2);

        $r19 = class "Ljava/lang/Character;";

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r2);

        $r22 = <java.lang.Character: java.lang.Class TYPE>;

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, r2);

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializers: void addAll(java.util.Map)>($r8);

        $r25 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r27 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BooleanSerializer;

        specialinvoke $r27.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BooleanSerializer: void <init>(boolean)>(1);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r27);

        $r29 = class "Ljava/lang/Boolean;";

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        $r31 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BooleanSerializer;

        specialinvoke $r31.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BooleanSerializer: void <init>(boolean)>(0);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r31);

        $r33 = class "Ljava/math/BigInteger;";

        $r34 = virtualinvoke $r33.<java.lang.Class: java.lang.String getName()>();

        $r35 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer;

        specialinvoke $r35.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: void <init>(java.lang.Class)>(class "Ljava/math/BigInteger;");

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r35);

        $r37 = class "Ljava/math/BigDecimal;";

        $r38 = virtualinvoke $r37.<java.lang.Class: java.lang.String getName()>();

        $r39 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer;

        specialinvoke $r39.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NumberSerializer: void <init>(java.lang.Class)>(class "Ljava/math/BigDecimal;");

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r39);

        $r41 = class "Ljava/util/Calendar;";

        $r42 = virtualinvoke $r41.<java.lang.Class: java.lang.String getName()>();

        $r43 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CalendarSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CalendarSerializer instance>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, $r43);

        $r45 = class "Ljava/util/Date;";

        $r46 = virtualinvoke $r45.<java.lang.Class: java.lang.String getName()>();

        $r47 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.DateSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.DateSerializer instance>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, $r47);

        $r49 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdJdkSerializers: java.util.Collection all()>();

        r3 = interfaceinvoke $r49.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r53 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r53;

        r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = r5 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        if $z1 == 0 goto label2;

        $r58 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r59 = (java.lang.Class) $r58;

        $r60 = virtualinvoke $r59.<java.lang.Class: java.lang.String getName()>();

        $r61 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) r5;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r60, $r61);

        goto label3;

     label2:
        r6 = (java.lang.Class) r5;

        $r54 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r55 = (java.lang.Class) $r54;

        $r56 = virtualinvoke $r55.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r56, r6);

     label3:
        goto label1;

     label4:
        $r50 = class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/util/TokenBuffer;";

        $r51 = virtualinvoke $r50.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r51, class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/ser/std/TokenBufferSerializer;");

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.util.HashMap _concrete> = $r8;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.util.HashMap _concreteLazy> = $r7;

        return;
    }
}
