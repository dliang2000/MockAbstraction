class javassist.bytecode.StackMapTable$SwitchShifter extends javassist.bytecode.StackMapTable$Shifter
{

    void <init>(javassist.bytecode.StackMapTable, int, int)
    {
        javassist.bytecode.StackMapTable$SwitchShifter r0;
        javassist.bytecode.StackMapTable r1;
        int i0, i1;

        r0 := @this: javassist.bytecode.StackMapTable$SwitchShifter;

        r1 := @parameter0: javassist.bytecode.StackMapTable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<javassist.bytecode.StackMapTable$Shifter: void <init>(javassist.bytecode.StackMapTable,int,int,boolean)>(r1, i0, i1, 0);

        return;
    }

    void update(int, int, int, int)
    {
        javassist.bytecode.StackMapTable$SwitchShifter r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i18, i21;
        byte[] $r1, $r2, $r3, $r4, r6, r7;
        byte $b13, $b14, $b17, $b19;

        r0 := @this: javassist.bytecode.StackMapTable$SwitchShifter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int position>;

        $i5 = i4 + i1;

        if i4 != 0 goto label1;

        $b19 = 0;

        goto label2;

     label1:
        $b19 = 1;

     label2:
        $i6 = $i5 + $b19;

        r0.<javassist.bytecode.StackMapTable$SwitchShifter: int position> = $i6;

        $i8 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int where>;

        $i7 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int position>;

        if $i8 != $i7 goto label3;

        $i18 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int gap>;

        i21 = i1 - $i18;

        goto label5;

     label3:
        $i9 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int where>;

        if $i9 != i4 goto label4;

        $i10 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int gap>;

        i21 = i1 + $i10;

        goto label5;

     label4:
        return;

     label5:
        if i1 >= 64 goto label7;

        if i21 >= 64 goto label6;

        $r4 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: byte[] info>;

        $i16 = i21 + i2;

        $b17 = (byte) $i16;

        $r4[i0] = $b17;

        goto label9;

     label6:
        $r3 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: byte[] info>;

        r6 = staticinvoke <javassist.bytecode.StackMapTable$SwitchShifter: byte[] insertGap(byte[],int,int)>($r3, i0, 2);

        $b14 = (byte) i3;

        r6[i0] = $b14;

        $i15 = i0 + 1;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i21, r6, $i15);

        r0.<javassist.bytecode.StackMapTable$SwitchShifter: byte[] updatedInfo> = r6;

        goto label9;

     label7:
        if i21 >= 64 goto label8;

        $r2 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: byte[] info>;

        r7 = staticinvoke <javassist.bytecode.StackMapTable$SwitchShifter: byte[] deleteGap(byte[],int,int)>($r2, i0, 2);

        $i12 = i21 + i2;

        $b13 = (byte) $i12;

        r7[i0] = $b13;

        r0.<javassist.bytecode.StackMapTable$SwitchShifter: byte[] updatedInfo> = r7;

        goto label9;

     label8:
        $r1 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: byte[] info>;

        $i11 = i0 + 1;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i21, $r1, $i11);

     label9:
        return;
    }

    static byte[] deleteGap(byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1, $i2, $i4, $i5, i6, i7, i8, $i9;
        byte $b3;

        r0 := @parameter0: byte[];

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        i7 = i6 + i0;

        i1 = lengthof r0;

        $i2 = i1 - i0;

        r1 = newarray (byte)[$i2];

        i8 = 0;

     label1:
        if i8 >= i1 goto label4;

        $i5 = i8;

        if i8 >= i7 goto label2;

        $i9 = 0;

        goto label3;

     label2:
        $i9 = i0;

     label3:
        $i4 = $i5 - $i9;

        $b3 = r0[i8];

        r1[$i4] = $b3;

        i8 = i8 + 1;

        goto label1;

     label4:
        return r1;
    }

    void update(int, int)
    {
        javassist.bytecode.StackMapTable$SwitchShifter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i13;
        byte[] $r1;
        byte $b11;

        r0 := @this: javassist.bytecode.StackMapTable$SwitchShifter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int position>;

        $i3 = i2 + i1;

        if i2 != 0 goto label1;

        $b11 = 0;

        goto label2;

     label1:
        $b11 = 1;

     label2:
        $i4 = $i3 + $b11;

        r0.<javassist.bytecode.StackMapTable$SwitchShifter: int position> = $i4;

        $i6 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int where>;

        $i5 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int position>;

        if $i6 != $i5 goto label3;

        $i10 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int gap>;

        i13 = i1 - $i10;

        goto label5;

     label3:
        $i7 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int where>;

        if $i7 != i2 goto label4;

        $i8 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: int gap>;

        i13 = i1 + $i8;

        goto label5;

     label4:
        return;

     label5:
        $r1 = r0.<javassist.bytecode.StackMapTable$SwitchShifter: byte[] info>;

        $i9 = i0 + 1;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i13, $r1, $i9);

        return;
    }
}
