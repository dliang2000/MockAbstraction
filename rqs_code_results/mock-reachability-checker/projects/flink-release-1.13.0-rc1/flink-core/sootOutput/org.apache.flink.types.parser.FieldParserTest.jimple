public class org.apache.flink.types.parser.FieldParserTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.types.parser.FieldParserTest r0;

        r0 := @this: org.apache.flink.types.parser.FieldParserTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testDelimiterNext() throws java.lang.Exception
    {
        org.apache.flink.types.parser.FieldParserTest r0;
        byte[] r1, r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.types.parser.FieldParserTest;

        $r3 = "aaabc";

        r1 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        $r4 = "aa";

        r2 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        $z0 = staticinvoke <org.apache.flink.types.parser.FieldParser: boolean delimiterNext(byte[],int,byte[])>(r1, 0, r2);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $z1 = staticinvoke <org.apache.flink.types.parser.FieldParser: boolean delimiterNext(byte[],int,byte[])>(r1, 1, r2);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $z2 = staticinvoke <org.apache.flink.types.parser.FieldParser: boolean delimiterNext(byte[],int,byte[])>(r1, 2, r2);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2);

        return;
    }

    public void testEndsWithDelimiter() throws java.lang.Exception
    {
        org.apache.flink.types.parser.FieldParserTest r0;
        byte[] r1, r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.flink.types.parser.FieldParserTest;

        $r3 = "aabc";

        r1 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        $r4 = "ab";

        r2 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        $z0 = staticinvoke <org.apache.flink.types.parser.FieldParser: boolean endsWithDelimiter(byte[],int,byte[])>(r1, 0, r2);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        $z1 = staticinvoke <org.apache.flink.types.parser.FieldParser: boolean endsWithDelimiter(byte[],int,byte[])>(r1, 1, r2);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        $z2 = staticinvoke <org.apache.flink.types.parser.FieldParser: boolean endsWithDelimiter(byte[],int,byte[])>(r1, 2, r2);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $z3 = staticinvoke <org.apache.flink.types.parser.FieldParser: boolean endsWithDelimiter(byte[],int,byte[])>(r1, 3, r2);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

        return;
    }

    public void testNextStringEndPos() throws java.lang.Exception
    {
        org.apache.flink.types.parser.FieldParserTest r0;
        byte[] r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.flink.types.parser.TestFieldParser $r12;
        java.nio.charset.Charset $r13, $r15, $r23, $r27, $r33, $r37, $r39, $r45, $r49, $r55;
        java.lang.String $r14, $r16, $r24, $r28, $r34, $r38, $r40, $r46, $r50, $r56;
        int $i0, $i1, $i3, $i4, $i6, $i8, $i9, $i11, $i12, $i14, $i15, $i17, $i18, $i20, $i21, $i23, $i24, $i26, $i27, $i29, $i31, $i32, $i34, $i35, $i37, $i38, $i40, $i41;
        long $l2, $l5, $l7, $l10, $l13, $l16, $l19, $l22, $l25, $l28, $l30, $l33, $l36, $l39, $l42;
        org.apache.flink.types.parser.FieldParser$ParseErrorState $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r29, $r30, $r31, $r32, $r35, $r36, $r41, $r42, $r43, $r44, $r47, $r48, $r51, $r52, $r53, $r54, $r57, $r58;

        r0 := @this: org.apache.flink.types.parser.FieldParserTest;

        $r12 = new org.apache.flink.types.parser.TestFieldParser;

        specialinvoke $r12.<org.apache.flink.types.parser.TestFieldParser: void <init>()>();

        $r14 = "|";

        $r13 = <org.apache.flink.configuration.ConfigConstants: java.nio.charset.Charset DEFAULT_CHARSET>;

        r2 = virtualinvoke $r14.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r13);

        $r16 = "a|";

        $r15 = <org.apache.flink.configuration.ConfigConstants: java.nio.charset.Charset DEFAULT_CHARSET>;

        r3 = virtualinvoke $r16.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r15);

        $i0 = lengthof r3;

        $i1 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r3, 0, $i0, r2);

        $l2 = (long) $i1;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2);

        $i3 = lengthof r3;

        $i4 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r3, 1, $i3, r2);

        $l5 = (long) $i4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l5);

        $r17 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState EMPTY_COLUMN>;

        $r18 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i6 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r3, 1, 1, r2);

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l7);

        $r19 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState EMPTY_COLUMN>;

        $r20 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i8 = lengthof r3;

        $i9 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r3, 2, $i8, r2);

        $l10 = (long) $i9;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l10);

        $r21 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState EMPTY_COLUMN>;

        $r22 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22);

        $r24 = "a||";

        $r23 = <org.apache.flink.configuration.ConfigConstants: java.nio.charset.Charset DEFAULT_CHARSET>;

        r4 = virtualinvoke $r24.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r23);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i11 = lengthof r4;

        $i12 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r4, 1, $i11, r2);

        $l13 = (long) $i12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l13);

        $r25 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState EMPTY_COLUMN>;

        $r26 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r25, $r26);

        $r28 = "a|c";

        $r27 = <org.apache.flink.configuration.ConfigConstants: java.nio.charset.Charset DEFAULT_CHARSET>;

        r5 = virtualinvoke $r28.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r27);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i14 = lengthof r5;

        $i15 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r5, 1, $i14, r2);

        $l16 = (long) $i15;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l16);

        $r29 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState EMPTY_COLUMN>;

        $r30 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r29, $r30);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i17 = lengthof r5;

        $i18 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r5, 2, $i17, r2);

        $l19 = (long) $i18;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l19);

        $r31 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState NONE>;

        $r32 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r31, $r32);

        $r34 = "a|c|";

        $r33 = <org.apache.flink.configuration.ConfigConstants: java.nio.charset.Charset DEFAULT_CHARSET>;

        r6 = virtualinvoke $r34.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r33);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i20 = lengthof r6;

        $i21 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r6, 2, $i20, r2);

        $l22 = (long) $i21;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l22);

        $r35 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState NONE>;

        $r36 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r35, $r36);

        $r38 = "|#|";

        $r37 = <org.apache.flink.configuration.ConfigConstants: java.nio.charset.Charset DEFAULT_CHARSET>;

        r7 = virtualinvoke $r38.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r37);

        $r40 = "a|#|";

        $r39 = <org.apache.flink.configuration.ConfigConstants: java.nio.charset.Charset DEFAULT_CHARSET>;

        r8 = virtualinvoke $r40.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r39);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i23 = lengthof r8;

        $i24 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r8, 0, $i23, r7);

        $l25 = (long) $i24;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l25);

        $i26 = lengthof r8;

        $i27 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r8, 1, $i26, r7);

        $l28 = (long) $i27;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l28);

        $r41 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState EMPTY_COLUMN>;

        $r42 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r41, $r42);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i29 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r8, 1, 1, r7);

        $l30 = (long) $i29;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l30);

        $r43 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState EMPTY_COLUMN>;

        $r44 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r43, $r44);

        $r46 = "a|#||#|";

        $r45 = <org.apache.flink.configuration.ConfigConstants: java.nio.charset.Charset DEFAULT_CHARSET>;

        r9 = virtualinvoke $r46.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r45);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i31 = lengthof r9;

        $i32 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r9, 1, $i31, r7);

        $l33 = (long) $i32;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l33);

        $r47 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState EMPTY_COLUMN>;

        $r48 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r47, $r48);

        $r50 = "a|#|b";

        $r49 = <org.apache.flink.configuration.ConfigConstants: java.nio.charset.Charset DEFAULT_CHARSET>;

        r10 = virtualinvoke $r50.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r49);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i34 = lengthof r10;

        $i35 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r10, 1, $i34, r7);

        $l36 = (long) $i35;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l36);

        $r51 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState EMPTY_COLUMN>;

        $r52 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r51, $r52);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i37 = lengthof r10;

        $i38 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r10, 2, $i37, r7);

        $l39 = (long) $i38;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(5L, $l39);

        $r53 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState NONE>;

        $r54 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r53, $r54);

        $r56 = "a|#|b|#|";

        $r55 = <org.apache.flink.configuration.ConfigConstants: java.nio.charset.Charset DEFAULT_CHARSET>;

        r11 = virtualinvoke $r56.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r55);

        virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: void resetParserState()>();

        $i40 = lengthof r11;

        $i41 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: int nextStringEndPos(byte[],int,int,byte[])>(r11, 2, $i40, r7);

        $l42 = (long) $i41;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(5L, $l42);

        $r57 = <org.apache.flink.types.parser.FieldParser$ParseErrorState: org.apache.flink.types.parser.FieldParser$ParseErrorState NONE>;

        $r58 = virtualinvoke $r12.<org.apache.flink.types.parser.FieldParser: org.apache.flink.types.parser.FieldParser$ParseErrorState getErrorState()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r57, $r58);

        return;
    }
}
