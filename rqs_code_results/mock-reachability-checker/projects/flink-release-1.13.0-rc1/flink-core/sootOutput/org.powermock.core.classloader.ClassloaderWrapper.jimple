public class org.powermock.core.classloader.ClassloaderWrapper extends java.lang.Object
{

    public void <init>()
    {
        org.powermock.core.classloader.ClassloaderWrapper r0;

        r0 := @this: org.powermock.core.classloader.ClassloaderWrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void runWithClass(java.lang.Runnable)
    {
        java.lang.Runnable r0;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;

        r0 := @parameter0: java.lang.Runnable;

        $r1 = class "Lorg/powermock/core/classloader/ClassloaderWrapper;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        staticinvoke <org.powermock.core.classloader.ClassloaderWrapper: void runWithClassClassLoader(java.lang.ClassLoader,java.lang.Runnable)>($r2, r0);

        return;
    }

    public static void runWithClassClassLoader(java.lang.ClassLoader, java.lang.Runnable)
    {
        java.lang.ClassLoader r0, r2;
        java.lang.Runnable r1;
        java.lang.Thread $r4, $r5, $r6, $r8;
        java.lang.Throwable $r7;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.Runnable;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r2 = virtualinvoke $r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r5.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r0);

     label1:
        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label2:
        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r6.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r2);

        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r8.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r2);

        throw $r7;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.lang.Object runWithClass(java.util.concurrent.Callable)
    {
        java.util.concurrent.Callable r0;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.concurrent.Callable;

        $r1 = class "Lorg/powermock/core/classloader/ClassloaderWrapper;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = staticinvoke <org.powermock.core.classloader.ClassloaderWrapper: java.lang.Object runWithClassClassLoader(java.lang.ClassLoader,java.util.concurrent.Callable)>($r2, r0);

        return $r3;
    }

    public static java.lang.Object runWithClassClassLoader(java.lang.ClassLoader, java.util.concurrent.Callable)
    {
        java.lang.ClassLoader r0, r2;
        java.util.concurrent.Callable r1;
        java.lang.Thread $r4, $r5, $r6, $r8;
        java.lang.Throwable $r7;
        java.lang.Exception $r9;
        org.powermock.core.InvocationException $r10;
        java.lang.Object r11;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.util.concurrent.Callable;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r2 = virtualinvoke $r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r5.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r0);

     label1:
        r11 = interfaceinvoke r1.<java.util.concurrent.Callable: java.lang.Object call()>();

     label2:
        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r6.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r2);

        return r11;

     label3:
        $r9 := @caughtexception;

        $r10 = new org.powermock.core.InvocationException;

        specialinvoke $r10.<org.powermock.core.InvocationException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

     label5:
        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r8.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r2);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }
}
