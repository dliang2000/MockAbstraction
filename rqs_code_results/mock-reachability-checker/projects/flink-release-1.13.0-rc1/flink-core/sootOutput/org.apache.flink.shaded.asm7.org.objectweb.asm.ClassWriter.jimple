public class org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter extends org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor
{
    public static final int COMPUTE_MAXS;
    public static final int COMPUTE_FRAMES;
    private int version;
    private final org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable;
    private int accessFlags;
    private int thisClass;
    private int superClass;
    private int interfaceCount;
    private int[] interfaces;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter firstField;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter lastField;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter firstMethod;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter lastMethod;
    private int numberOfInnerClasses;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses;
    private int enclosingClassIndex;
    private int enclosingMethodIndex;
    private int signatureIndex;
    private int sourceFileIndex;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector debugExtension;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter moduleWriter;
    private int nestHostClassIndex;
    private int numberOfNestMemberClasses;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector nestMemberClasses;
    private org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute;
    private int compute;

    public void <init>(int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        int i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader,int)>(null, i0);

        return;
    }

    public void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader r1;
        int i0, $i1, $i2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: void <init>(int)>(458752);

        if r1 != null goto label1;

        $r3 = new org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable;

        specialinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter)>(r0);

        goto label2;

     label1:
        $r3 = new org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable;

        specialinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader)>(r0, r1);

     label2:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable> = $r3;

        $i1 = i0 & 2;

        if $i1 == 0 goto label3;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int compute> = 4;

        goto label5;

     label3:
        $i2 = i0 & 1;

        if $i2 == 0 goto label4;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int compute> = 1;

        goto label5;

     label4:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int compute> = 0;

     label5:
        return;
    }

    public final void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13;
        java.lang.String r1, r2, r3, $r9;
        java.lang.String[] r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r5, $r6, $r10, $r14;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r7, $r12;
        int[] $r8, $r11;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String[];

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int version> = i0;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int accessFlags> = i1;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i2 = i0 & 65535;

        $i3 = virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int setMajorVersionAndClassName(int,java.lang.String)>($i2, r1);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int thisClass> = $i3;

        if r2 == null goto label1;

        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i10 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r2);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int signatureIndex> = $i10;

     label1:
        if r3 != null goto label2;

        $i11 = 0;

        goto label3;

     label2:
        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r3);

        $i11 = $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

     label3:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int superClass> = $i11;

        if r4 == null goto label5;

        $i5 = lengthof r4;

        if $i5 <= 0 goto label5;

        $i6 = lengthof r4;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int interfaceCount> = $i6;

        $i7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int interfaceCount>;

        $r8 = newarray (int)[$i7];

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int[] interfaces> = $r8;

        i12 = 0;

     label4:
        $i8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int interfaceCount>;

        if i12 >= $i8 goto label5;

        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int[] interfaces>;

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r9 = r4[i12];

        $r12 = virtualinvoke $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>($r9);

        $i9 = $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        $r11[i12] = $i9;

        i12 = i12 + 1;

        goto label4;

     label5:
        $i13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int compute>;

        if $i13 != 1 goto label6;

        $i4 = i0 & 65535;

        if $i4 < 51 goto label6;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int compute> = 2;

     label6:
        return;
    }

    public final void visitSource(java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r3, $r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r5;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i0 = virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r1);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int sourceFileIndex> = $i0;

     label1:
        if r2 == null goto label2;

        $r3 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector encodeUtf8(java.lang.String,int,int)>(r2, 0, 2147483647);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector debugExtension> = $r4;

     label2:
        return;
    }

    public final org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleVisitor visitModule(java.lang.String, int, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2;
        int i0, $i1, $i3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter $r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4, $r5, $r7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r6;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r6 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantModule(java.lang.String)>(r1);

        $i1 = $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        if r2 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i3 = virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r2);

     label2:
        specialinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,int,int)>($r5, $i1, i0, $i3);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter moduleWriter> = $r3;

        return $r3;
    }

    public void visitNestHost(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r1);

        $i0 = $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int nestHostClassIndex> = $i0;

        return;
    }

    public final void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2, r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4, $r6;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r5;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r1);

        $i0 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int enclosingClassIndex> = $i0;

        if r2 == null goto label1;

        if r3 == null goto label1;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i1 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantNameAndType(java.lang.String,java.lang.String)>(r2, r3);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int enclosingMethodIndex> = $i1;

     label1:
        return;
    }

    public final org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r2, $r4, $r5, $r7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r3, $r6;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation>;

        $r7 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r6, r1, $r5);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation> = $r7;

        return $r7;

     label1:
        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation>;

        $r4 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r3, r1, $r2);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation> = $r4;

        return $r4;
    }

    public final org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        int i0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath r1;
        java.lang.String r2;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r3, $r5, $r6, $r8;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4, $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation>;

        $r8 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r7, i0, r1, r2, $r6);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation> = $r8;

        return $r8;

     label1:
        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation>;

        $r5 = staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter create(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter)>($r4, i0, r1, r2, $r3);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation> = $r5;

        return $r5;
    }

    public final void visitAttribute(org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r1, $r2;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute nextAttribute> = $r2;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute> = r1;

        return;
    }

    public void visitNestMember(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r2, $r4, $r7;
        int $i0, $i1, $i2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r5;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector nestMemberClasses>;

        if $r2 != null goto label1;

        $r7 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector nestMemberClasses> = $r7;

     label1:
        $i0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int numberOfNestMemberClasses>;

        $i1 = $i0 + 1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int numberOfNestMemberClasses> = $i1;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector nestMemberClasses>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r1);

        $i2 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i2);

        return;
    }

    public final void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol r4, $r11;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r5, $r7, $r10, $r14, $r16, $r18;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r6, $r9, $r13;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses>;

        if $r5 != null goto label1;

        $r18 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r18.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses> = $r18;

     label1:
        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        r4 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r1);

        $i1 = r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int info>;

        if $i1 != 0 goto label6;

        $i2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int numberOfInnerClasses>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int numberOfInnerClasses> = $i3;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses>;

        $i4 = r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i4);

        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses>;

        if r2 != null goto label2;

        $i6 = 0;

        goto label3;

     label2:
        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r11 = virtualinvoke $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r2);

        $i6 = $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

     label3:
        virtualinvoke $r10.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i6);

        $r14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses>;

        if r3 != null goto label4;

        $i7 = 0;

        goto label5;

     label4:
        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i7 = virtualinvoke $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r3);

     label5:
        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i7);

        $r16 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses>;

        virtualinvoke $r16.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i0);

        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int numberOfInnerClasses>;

        r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int info> = $i5;

     label6:
        return;
    }

    public final org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        int i0;
        java.lang.String r1, r2, r3;
        java.lang.Object r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter $r6, $r8, $r9;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        $r6 = new org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        specialinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($r7, i0, r1, r2, r3, r4);

        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter firstField>;

        if $r8 != null goto label1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter firstField> = $r6;

        goto label2;

     label1:
        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter lastField>;

        $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor fv> = $r6;

     label2:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter lastField> = $r6;

        return $r6;
    }

    public final org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        int i0, $i1;
        java.lang.String r1, r2, r3;
        java.lang.String[] r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter $r6, $r8, $r9;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        $r6 = new org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i1 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int compute>;

        specialinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int)>($r7, i0, r1, r2, r3, r4, $i1);

        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter firstMethod>;

        if $r8 != null goto label1;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter firstMethod> = $r6;

        goto label2;

     label1:
        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter lastMethod>;

        $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor mv> = $r6;

     label2:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter lastMethod> = $r6;

        return $r6;
    }

    public final void visitEnd()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        return;
    }

    public byte[] toByteArray()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i69, $i70, $i74, $i75, $i78, $i79, $i81, $i82, i83, i84, i85, i86, $i87, i88, $i89, i90, $i91, $i92;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r2, $r3, $r10, $r14, $r15, $r18, $r19, $r25, $r26, $r34, $r42, $r43, $r44, $r45, $r46, $r47, $r51, $r52, $r56, $r58, $r60, $r61, $r62, $r66, $r67, $r70, $r71, $r74, $r77, $r78, $r79, $r82, $r83, $r84, $r85, $r86, $r87, $r100, $r111, $r117;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter $r4, $r5, $r6, $r7, $r27, $r28, $r29, $r30, $r106, $r107, $r108, $r109;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r8, $r12, $r13, $r17, $r31, $r32, $r39, $r41, $r50, $r55, $r59, $r65, $r69, $r73, $r76, $r81, $r95, $r98, $r101, $r102, $r105, $r110, $r112, $r113, $r114, $r115, $r116, $r118;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter $r9, $r33, $r54, $r103, $r104;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute $r11, $r35, $r40, $r97, $r99;
        byte[] $r36, $r37, $r38, $r48, $r63, $r88;
        boolean $z0, $z1, z2, z3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor $r90, $r119;
        org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor $r91, $r120;
        int[] $r92;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassTooLargeException $r94;
        java.lang.String $r96;
        org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter r121, r123;
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r122, r124;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        $i3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int interfaceCount>;

        $i4 = 2 * $i3;

        i83 = 24 + $i4;

        i84 = 0;

        r121 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter firstField>;

     label01:
        if r121 == null goto label02;

        i84 = i84 + 1;

        $i82 = virtualinvoke r121.<org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter: int computeFieldInfoSize()>();

        i83 = i83 + $i82;

        $r120 = r121.<org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor fv>;

        r121 = (org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter) $r120;

        goto label01;

     label02:
        i85 = 0;

        r122 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter firstMethod>;

     label03:
        if r122 == null goto label04;

        i85 = i85 + 1;

        $i81 = virtualinvoke r122.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: int computeMethodInfoSize()>();

        i83 = i83 + $i81;

        $r119 = r122.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor mv>;

        r122 = (org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter) $r119;

        goto label03;

     label04:
        i86 = 0;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses>;

        if $r2 == null goto label05;

        i86 = 0 + 1;

        $r117 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses>;

        $i78 = $r117.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i79 = 8 + $i78;

        i83 = i83 + $i79;

        $r118 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r118.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("InnerClasses");

     label05:
        $i5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int enclosingClassIndex>;

        if $i5 == 0 goto label06;

        i86 = i86 + 1;

        i83 = i83 + 10;

        $r116 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r116.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("EnclosingMethod");

     label06:
        $i6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int accessFlags>;

        $i7 = $i6 & 4096;

        if $i7 == 0 goto label07;

        $i74 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int version>;

        $i75 = $i74 & 65535;

        if $i75 >= 49 goto label07;

        i86 = i86 + 1;

        i83 = i83 + 6;

        $r115 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r115.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Synthetic");

     label07:
        $i87 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int signatureIndex>;

        if $i87 == 0 goto label08;

        i86 = i86 + 1;

        i83 = i83 + 8;

        $r114 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r114.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Signature");

     label08:
        $i8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int sourceFileIndex>;

        if $i8 == 0 goto label09;

        i86 = i86 + 1;

        i83 = i83 + 8;

        $r113 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r113.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("SourceFile");

     label09:
        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector debugExtension>;

        if $r3 == null goto label10;

        i86 = i86 + 1;

        $r111 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector debugExtension>;

        $i69 = $r111.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i70 = 6 + $i69;

        i83 = i83 + $i70;

        $r112 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r112.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("SourceDebugExtension");

     label10:
        $i9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int accessFlags>;

        $i10 = $i9 & 131072;

        if $i10 == 0 goto label11;

        i86 = i86 + 1;

        i83 = i83 + 6;

        $r110 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r110.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Deprecated");

     label11:
        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation>;

        if $r4 == null goto label12;

        i86 = i86 + 1;

        $r109 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation>;

        $i67 = virtualinvoke $r109.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: int computeAnnotationsSize(java.lang.String)>("RuntimeVisibleAnnotations");

        i83 = i83 + $i67;

     label12:
        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation>;

        if $r5 == null goto label13;

        i86 = i86 + 1;

        $r108 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation>;

        $i66 = virtualinvoke $r108.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: int computeAnnotationsSize(java.lang.String)>("RuntimeInvisibleAnnotations");

        i83 = i83 + $i66;

     label13:
        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation>;

        if $r6 == null goto label14;

        i86 = i86 + 1;

        $r107 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation>;

        $i65 = virtualinvoke $r107.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: int computeAnnotationsSize(java.lang.String)>("RuntimeVisibleTypeAnnotations");

        i83 = i83 + $i65;

     label14:
        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation>;

        if $r7 == null goto label15;

        i86 = i86 + 1;

        $r106 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation>;

        $i64 = virtualinvoke $r106.<org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: int computeAnnotationsSize(java.lang.String)>("RuntimeInvisibleTypeAnnotations");

        i83 = i83 + $i64;

     label15:
        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i11 = virtualinvoke $r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int computeBootstrapMethodsSize()>();

        if $i11 <= 0 goto label16;

        i86 = i86 + 1;

        $r105 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i63 = virtualinvoke $r105.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int computeBootstrapMethodsSize()>();

        i83 = i83 + $i63;

     label16:
        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter moduleWriter>;

        if $r9 == null goto label17;

        $r103 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter moduleWriter>;

        $i61 = virtualinvoke $r103.<org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter: int getAttributeCount()>();

        i86 = i86 + $i61;

        $r104 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter moduleWriter>;

        $i62 = virtualinvoke $r104.<org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter: int computeAttributesSize()>();

        i83 = i83 + $i62;

     label17:
        $i12 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int nestHostClassIndex>;

        if $i12 == 0 goto label18;

        i86 = i86 + 1;

        i83 = i83 + 8;

        $r102 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r102.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("NestHost");

     label18:
        $r10 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector nestMemberClasses>;

        if $r10 == null goto label19;

        i86 = i86 + 1;

        $r100 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector nestMemberClasses>;

        $i57 = $r100.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i58 = 8 + $i57;

        i83 = i83 + $i58;

        $r101 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r101.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("NestMembers");

     label19:
        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        if $r11 == null goto label20;

        $r97 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        $i55 = virtualinvoke $r97.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: int getAttributeCount()>();

        i86 = i86 + $i55;

        $r99 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        $r98 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i56 = virtualinvoke $r99.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: int computeAttributesSize(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)>($r98);

        i83 = i83 + $i56;

     label20:
        $r12 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i13 = virtualinvoke $r12.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int getConstantPoolLength()>();

        i88 = i83 + $i13;

        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        i0 = virtualinvoke $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int getConstantPoolCount()>();

        if i0 <= 65535 goto label21;

        $r94 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ClassTooLargeException;

        $r95 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r96 = virtualinvoke $r95.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: java.lang.String getClassName()>();

        specialinvoke $r94.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassTooLargeException: void <init>(java.lang.String,int)>($r96, i0);

        throw $r94;

     label21:
        $r14 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        specialinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>(int)>(i88);

        $r15 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(-889275714);

        $i14 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int version>;

        virtualinvoke $r15.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i14);

        $r17 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r17.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: void putConstantPool(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r14);

        $i15 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int version>;

        $i16 = $i15 & 65535;

        if $i16 >= 49 goto label22;

        $i89 = 4096;

        goto label23;

     label22:
        $i89 = 0;

     label23:
        $i18 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int accessFlags>;

        $i17 = $i89 ^ -1;

        $i19 = $i18 & $i17;

        $r18 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i19);

        $i20 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int thisClass>;

        $r19 = virtualinvoke $r18.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i20);

        $i21 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int superClass>;

        virtualinvoke $r19.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i21);

        $i22 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int interfaceCount>;

        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i22);

        i90 = 0;

     label24:
        $i91 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int interfaceCount>;

        if i90 >= $i91 goto label25;

        $r92 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int[] interfaces>;

        $i54 = $r92[i90];

        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i54);

        i90 = i90 + 1;

        goto label24;

     label25:
        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i84);

        r123 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter firstField>;

     label26:
        if r123 == null goto label27;

        virtualinvoke r123.<org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter: void putFieldInfo(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r14);

        $r91 = r123.<org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor fv>;

        r123 = (org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter) $r91;

        goto label26;

     label27:
        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i85);

        z2 = 0;

        z3 = 0;

        r124 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter firstMethod>;

     label28:
        if r124 == null goto label29;

        $z0 = virtualinvoke r124.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: boolean hasFrames()>();

        z2 = z2 | $z0;

        $z1 = virtualinvoke r124.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: boolean hasAsmInstructions()>();

        z3 = z3 | $z1;

        virtualinvoke r124.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void putMethodInfo(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r14);

        $r90 = r124.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor mv>;

        r124 = (org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter) $r90;

        goto label28;

     label29:
        virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i86);

        $r25 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses>;

        if $r25 == null goto label30;

        $r81 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i49 = virtualinvoke $r81.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("InnerClasses");

        $r82 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i49);

        $r83 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses>;

        $i50 = $r83.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i51 = $i50 + 2;

        $r84 = virtualinvoke $r82.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i51);

        $i52 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int numberOfInnerClasses>;

        $r85 = virtualinvoke $r84.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i52);

        $r86 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses>;

        $r88 = $r86.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r87 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector innerClasses>;

        $i53 = $r87.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r85.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r88, 0, $i53);

     label30:
        $i23 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int enclosingClassIndex>;

        if $i23 == 0 goto label31;

        $r76 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i46 = virtualinvoke $r76.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("EnclosingMethod");

        $r77 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i46);

        $r78 = virtualinvoke $r77.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(4);

        $i47 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int enclosingClassIndex>;

        $r79 = virtualinvoke $r78.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i47);

        $i48 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int enclosingMethodIndex>;

        virtualinvoke $r79.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i48);

     label31:
        $i24 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int accessFlags>;

        $i25 = $i24 & 4096;

        if $i25 == 0 goto label32;

        $i43 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int version>;

        $i44 = $i43 & 65535;

        if $i44 >= 49 goto label32;

        $r73 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i45 = virtualinvoke $r73.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Synthetic");

        $r74 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i45);

        virtualinvoke $r74.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(0);

     label32:
        $i92 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int signatureIndex>;

        if $i92 == 0 goto label33;

        $r69 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i41 = virtualinvoke $r69.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Signature");

        $r70 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i41);

        $r71 = virtualinvoke $r70.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(2);

        $i42 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int signatureIndex>;

        virtualinvoke $r71.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i42);

     label33:
        $i26 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int sourceFileIndex>;

        if $i26 == 0 goto label34;

        $r65 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i39 = virtualinvoke $r65.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("SourceFile");

        $r66 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i39);

        $r67 = virtualinvoke $r66.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(2);

        $i40 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int sourceFileIndex>;

        virtualinvoke $r67.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i40);

     label34:
        $r26 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector debugExtension>;

        if $r26 == null goto label35;

        $r58 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector debugExtension>;

        i2 = $r58.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $r59 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i38 = virtualinvoke $r59.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("SourceDebugExtension");

        $r60 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i38);

        $r61 = virtualinvoke $r60.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(i2);

        $r62 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector debugExtension>;

        $r63 = $r62.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        virtualinvoke $r61.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r63, 0, i2);

     label35:
        $i27 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int accessFlags>;

        $i28 = $i27 & 131072;

        if $i28 == 0 goto label36;

        $r55 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i37 = virtualinvoke $r55.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Deprecated");

        $r56 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i37);

        virtualinvoke $r56.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(0);

     label36:
        $r31 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r30 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation>;

        $r29 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation>;

        $r28 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation>;

        $r27 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation>;

        staticinvoke <org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter: void putAnnotations(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r31, $r30, $r29, $r28, $r27, $r14);

        $r32 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r32.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: void putBootstrapMethods(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r14);

        $r33 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter moduleWriter>;

        if $r33 == null goto label37;

        $r54 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter moduleWriter>;

        virtualinvoke $r54.<org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter: void putAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r14);

     label37:
        $i29 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int nestHostClassIndex>;

        if $i29 == 0 goto label38;

        $r50 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i35 = virtualinvoke $r50.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("NestHost");

        $r51 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i35);

        $r52 = virtualinvoke $r51.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(2);

        $i36 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int nestHostClassIndex>;

        virtualinvoke $r52.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i36);

     label38:
        $r34 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector nestMemberClasses>;

        if $r34 == null goto label39;

        $r41 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i30 = virtualinvoke $r41.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("NestMembers");

        $r42 = virtualinvoke $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i30);

        $r43 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector nestMemberClasses>;

        $i31 = $r43.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i32 = $i31 + 2;

        $r44 = virtualinvoke $r42.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i32);

        $i33 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int numberOfNestMemberClasses>;

        $r45 = virtualinvoke $r44.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i33);

        $r46 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector nestMemberClasses>;

        $r48 = $r46.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r47 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector nestMemberClasses>;

        $i34 = $r47.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r45.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r48, 0, $i34);

     label39:
        $r35 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        if $r35 == null goto label40;

        $r40 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        $r39 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r40.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: void putAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>($r39, $r14);

     label40:
        if z3 == 0 goto label41;

        $r37 = $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $r38 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: byte[] replaceAsmInstructions(byte[],boolean)>($r37, z2);

        return $r38;

     label41:
        $r36 = $r14.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        return $r36;
    }

    private byte[] replaceAsmInstructions(byte[], boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        byte[] r1, $r4;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute[] r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader $r3;
        short $s0, $s2;
        byte $b1;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        r2 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute[] getAttributePrototypes()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter firstField> = null;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter lastField> = null;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter firstMethod> = null;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter lastMethod> = null;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleAnnotation> = null;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleAnnotation> = null;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeVisibleTypeAnnotation> = null;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationWriter lastRuntimeInvisibleTypeAnnotation> = null;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleWriter moduleWriter> = null;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int nestHostClassIndex> = 0;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int numberOfNestMemberClasses> = 0;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector nestMemberClasses> = null;

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute> = null;

        if z0 == 0 goto label1;

        $b1 = 3;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int compute> = $b1;

        $r3 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader;

        specialinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader: void <init>(byte[],int,boolean)>(r1, 0, 0);

        if z0 == 0 goto label3;

        $s2 = 8;

        goto label4;

     label3:
        $s2 = 0;

     label4:
        $s0 = $s2 | 256;

        virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader: void accept(org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor,org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute[],int)>(r0, r2, $s0);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: byte[] toByteArray()>();

        return $r4;
    }

    private org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute[] getAttributePrototypes()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute $r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute[] $r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor $r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor $r6;
        org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter r7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter r8;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        $r2 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set;

        specialinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set: void <init>()>();

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute firstAttribute>;

        virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set: void addAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute)>($r3);

        r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter firstField>;

     label1:
        if r7 == null goto label2;

        virtualinvoke r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter: void collectAttributePrototypes(org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set)>($r2);

        $r6 = r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor fv>;

        r7 = (org.apache.flink.shaded.asm7.org.objectweb.asm.FieldWriter) $r6;

        goto label1;

     label2:
        r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter firstMethod>;

     label3:
        if r8 == null goto label4;

        virtualinvoke r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: void collectAttributePrototypes(org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set)>($r2);

        $r5 = r8.<org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor mv>;

        r8 = (org.apache.flink.shaded.asm7.org.objectweb.asm.MethodWriter) $r5;

        goto label3;

     label4:
        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute$Set: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute[] toArray()>();

        return $r4;
    }

    public int newConst(java.lang.Object)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.Object r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstant(java.lang.Object)>(r1);

        $i0 = $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        return $i0;
    }

    public int newUTF8(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i0 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r1);

        return $i0;
    }

    public int newClass(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r1);

        $i0 = $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        return $i0;
    }

    public int newMethodType(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantMethodType(java.lang.String)>(r1);

        $i0 = $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        return $i0;
    }

    public int newModule(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantModule(java.lang.String)>(r1);

        $i0 = $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        return $i0;
    }

    public int newPackage(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantPackage(java.lang.String)>(r1);

        $i0 = $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        return $i0;
    }

    public int newHandle(int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        int i0, $i1;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        if i0 != 9 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i1 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int newHandle(int,java.lang.String,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, r3, $z0);

        return $i1;
    }

    public int newHandle(int, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        int i0, $i1;
        java.lang.String r1, r2, r3;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r5;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantMethodHandle(int,java.lang.String,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, r3, z0);

        $i1 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        return $i1;
    }

    public transient int newConstantDynamic(java.lang.String, java.lang.String, org.apache.flink.shaded.asm7.org.objectweb.asm.Handle, java.lang.Object[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Handle r3;
        java.lang.Object[] r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r6;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.asm7.org.objectweb.asm.Handle;

        r4 := @parameter3: java.lang.Object[];

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantDynamic(java.lang.String,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.Handle,java.lang.Object[])>(r1, r2, r3, r4);

        $i0 = $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        return $i0;
    }

    public transient int newInvokeDynamic(java.lang.String, java.lang.String, org.apache.flink.shaded.asm7.org.objectweb.asm.Handle, java.lang.Object[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Handle r3;
        java.lang.Object[] r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r6;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.asm7.org.objectweb.asm.Handle;

        r4 := @parameter3: java.lang.Object[];

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantInvokeDynamic(java.lang.String,java.lang.String,org.apache.flink.shaded.asm7.org.objectweb.asm.Handle,java.lang.Object[])>(r1, r2, r3, r4);

        $i0 = $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        return $i0;
    }

    public int newField(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2, r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r5;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantFieldref(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        $i0 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        return $i0;
    }

    public int newMethod(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2, r3;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol $r5;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol addConstantMethodref(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, z0);

        $i0 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Symbol: int index>;

        return $i0;
    }

    public int newNameType(java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable symbolTable>;

        $i0 = virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantNameAndType(java.lang.String,java.lang.String)>(r1, r2);

        return $i0;
    }

    protected java.lang.String getCommonSuperClass(java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2, $r5, $r6, $r7, $r8;
        java.lang.ClassLoader r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.ClassNotFoundException $r9, $r11;
        java.lang.TypeNotPresentException $r10, $r12;
        java.lang.Class r13, r15;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: java.lang.ClassLoader getClassLoader()>();

     label01:
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        r13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r5, 0, r3);

     label02:
        goto label04;

     label03:
        $r9 := @caughtexception;

        $r10 = new java.lang.TypeNotPresentException;

        specialinvoke $r10.<java.lang.TypeNotPresentException: void <init>(java.lang.String,java.lang.Throwable)>(r1, $r9);

        throw $r10;

     label04:
        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        r15 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r6, 0, r3);

     label05:
        goto label07;

     label06:
        $r11 := @caughtexception;

        $r12 = new java.lang.TypeNotPresentException;

        specialinvoke $r12.<java.lang.TypeNotPresentException: void <init>(java.lang.String,java.lang.Throwable)>(r2, $r11);

        throw $r12;

     label07:
        $z0 = virtualinvoke r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r15);

        if $z0 == 0 goto label08;

        return r1;

     label08:
        $z1 = virtualinvoke r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r13);

        if $z1 == 0 goto label09;

        return r2;

     label09:
        $z2 = virtualinvoke r13.<java.lang.Class: boolean isInterface()>();

        if $z2 != 0 goto label10;

        $z3 = virtualinvoke r15.<java.lang.Class: boolean isInterface()>();

        if $z3 == 0 goto label11;

     label10:
        return "java/lang/Object";

     label11:
        r13 = virtualinvoke r13.<java.lang.Class: java.lang.Class getSuperclass()>();

        $z4 = virtualinvoke r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r15);

        if $z4 == 0 goto label11;

        $r7 = virtualinvoke r13.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        return $r8;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
        catch java.lang.ClassNotFoundException from label04 to label05 with label06;
    }

    protected java.lang.ClassLoader getClassLoader()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r0;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int COMPUTE_FRAMES> = 2;

        <org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter: int COMPUTE_MAXS> = 1;

        return;
    }
}
