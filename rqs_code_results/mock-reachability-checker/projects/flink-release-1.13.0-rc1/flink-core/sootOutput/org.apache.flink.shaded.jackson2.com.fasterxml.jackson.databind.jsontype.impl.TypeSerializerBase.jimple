public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer
{
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property;

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = r2;

        return;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion();

    public java.lang.String getPropertyName()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;

        return null;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: void _generateTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2);

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2);

        return $r3;
    }

    protected void _generateTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId r1;
        java.lang.Object r2, r4;
        java.lang.Class r3;
        java.lang.String r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId;

        r4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId: java.lang.Object id>;

        if r4 != null goto label3;

        r2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId: java.lang.Object forValue>;

        r3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId: java.lang.Class forValueType>;

        if r3 != null goto label1;

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: java.lang.String idFromValue(java.lang.Object)>(r2);

        goto label2;

     label1:
        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class)>(r2, r3);

     label2:
        r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId: java.lang.Object id> = r5;

     label3:
        return;
    }

    protected java.lang.String idFromValue(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase r0;
        java.lang.Object r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;

        r2 = interfaceinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver: java.lang.String idFromValue(java.lang.Object)>(r1);

        if r2 != null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: void handleMissingId(java.lang.Object)>(r1);

     label1:
        return r2;
    }

    protected java.lang.String idFromValueAndType(java.lang.Object, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase r0;
        java.lang.Object r1;
        java.lang.Class r2;
        java.lang.String r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;

        r3 = interfaceinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver: java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class)>(r1, r2);

        if r3 != null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: void handleMissingId(java.lang.Object)>(r1);

     label1:
        return r3;
    }

    protected void handleMissingId(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase r0;
        java.lang.Object r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;

        r1 := @parameter0: java.lang.Object;

        return;
    }
}
