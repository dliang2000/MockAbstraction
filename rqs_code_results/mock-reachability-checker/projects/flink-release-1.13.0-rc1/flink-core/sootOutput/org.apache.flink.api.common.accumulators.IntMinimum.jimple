public class org.apache.flink.api.common.accumulators.IntMinimum extends java.lang.Object implements org.apache.flink.api.common.accumulators.SimpleAccumulator
{
    private static final long serialVersionUID;
    private int min;

    public void <init>()
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min> = 2147483647;

        return;
    }

    public void <init>(int)
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0;
        int i0;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min> = 2147483647;

        r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min> = i0;

        return;
    }

    public void add(java.lang.Integer)
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0;
        java.lang.Integer r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        r1 := @parameter0: java.lang.Integer;

        $i0 = r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min>;

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min> = $i2;

        return;
    }

    public java.lang.Integer getLocalValue()
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        $i0 = r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    public void merge(org.apache.flink.api.common.accumulators.Accumulator)
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0;
        org.apache.flink.api.common.accumulators.Accumulator r1;
        int $i0, $i1, $i2;
        java.io.Serializable $r2;
        java.lang.Integer $r3;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        r1 := @parameter0: org.apache.flink.api.common.accumulators.Accumulator;

        $i0 = r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min>;

        $r2 = interfaceinvoke r1.<org.apache.flink.api.common.accumulators.Accumulator: java.io.Serializable getLocalValue()>();

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min> = $i2;

        return;
    }

    public void resetLocal()
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min> = 2147483647;

        return;
    }

    public org.apache.flink.api.common.accumulators.IntMinimum clone()
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0, $r2;
        int $i0;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        $r2 = new org.apache.flink.api.common.accumulators.IntMinimum;

        specialinvoke $r2.<org.apache.flink.api.common.accumulators.IntMinimum: void <init>()>();

        $i0 = r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min>;

        $r2.<org.apache.flink.api.common.accumulators.IntMinimum: int min> = $i0;

        return $r2;
    }

    public void add(int)
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min>;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0);

        r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min> = $i2;

        return;
    }

    public int getLocalValuePrimitive()
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0;
        int $i0;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        $i0 = r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i0;
        java.lang.String $r4;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IntMinimum ");

        $i0 = r0.<org.apache.flink.api.common.accumulators.IntMinimum: int min>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0, $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.IntMinimum: org.apache.flink.api.common.accumulators.IntMinimum clone()>();

        return $r1;
    }

    public volatile org.apache.flink.api.common.accumulators.Accumulator clone()
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0, $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.IntMinimum: org.apache.flink.api.common.accumulators.IntMinimum clone()>();

        return $r1;
    }

    public volatile java.io.Serializable getLocalValue()
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.IntMinimum: java.lang.Integer getLocalValue()>();

        return $r1;
    }

    public volatile void add(java.lang.Object)
    {
        org.apache.flink.api.common.accumulators.IntMinimum r0;
        java.lang.Object r1;
        java.lang.Integer $r2;

        r0 := @this: org.apache.flink.api.common.accumulators.IntMinimum;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Integer) r1;

        virtualinvoke r0.<org.apache.flink.api.common.accumulators.IntMinimum: void add(java.lang.Integer)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.accumulators.IntMinimum: long serialVersionUID> = 1L;

        return;
    }
}
