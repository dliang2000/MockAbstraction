public abstract class org.apache.flink.api.common.functions.AbstractRichFunction extends java.lang.Object implements org.apache.flink.api.common.functions.RichFunction, java.io.Serializable
{
    private static final long serialVersionUID;
    private transient org.apache.flink.api.common.functions.RuntimeContext runtimeContext;

    public void <init>()
    {
        org.apache.flink.api.common.functions.AbstractRichFunction r0;

        r0 := @this: org.apache.flink.api.common.functions.AbstractRichFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setRuntimeContext(org.apache.flink.api.common.functions.RuntimeContext)
    {
        org.apache.flink.api.common.functions.AbstractRichFunction r0;
        org.apache.flink.api.common.functions.RuntimeContext r1;

        r0 := @this: org.apache.flink.api.common.functions.AbstractRichFunction;

        r1 := @parameter0: org.apache.flink.api.common.functions.RuntimeContext;

        r0.<org.apache.flink.api.common.functions.AbstractRichFunction: org.apache.flink.api.common.functions.RuntimeContext runtimeContext> = r1;

        return;
    }

    public org.apache.flink.api.common.functions.RuntimeContext getRuntimeContext()
    {
        org.apache.flink.api.common.functions.AbstractRichFunction r0;
        org.apache.flink.api.common.functions.RuntimeContext $r1, $r3;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.apache.flink.api.common.functions.AbstractRichFunction;

        $r1 = r0.<org.apache.flink.api.common.functions.AbstractRichFunction: org.apache.flink.api.common.functions.RuntimeContext runtimeContext>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.flink.api.common.functions.AbstractRichFunction: org.apache.flink.api.common.functions.RuntimeContext runtimeContext>;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The runtime context has not been initialized.");

        throw $r2;
    }

    public org.apache.flink.api.common.functions.IterationRuntimeContext getIterationRuntimeContext()
    {
        org.apache.flink.api.common.functions.AbstractRichFunction r0;
        org.apache.flink.api.common.functions.RuntimeContext $r1, $r2, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r3, $r6;
        org.apache.flink.api.common.functions.IterationRuntimeContext $r5;

        r0 := @this: org.apache.flink.api.common.functions.AbstractRichFunction;

        $r1 = r0.<org.apache.flink.api.common.functions.AbstractRichFunction: org.apache.flink.api.common.functions.RuntimeContext runtimeContext>;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The runtime context has not been initialized.");

        throw $r6;

     label1:
        $r2 = r0.<org.apache.flink.api.common.functions.AbstractRichFunction: org.apache.flink.api.common.functions.RuntimeContext runtimeContext>;

        $z0 = $r2 instanceof org.apache.flink.api.common.functions.IterationRuntimeContext;

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.flink.api.common.functions.AbstractRichFunction: org.apache.flink.api.common.functions.RuntimeContext runtimeContext>;

        $r5 = (org.apache.flink.api.common.functions.IterationRuntimeContext) $r4;

        return $r5;

     label2:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This stub is not part of an iteration step function.");

        throw $r3;
    }

    public void open(org.apache.flink.configuration.Configuration) throws java.lang.Exception
    {
        org.apache.flink.api.common.functions.AbstractRichFunction r0;
        org.apache.flink.configuration.Configuration r1;

        r0 := @this: org.apache.flink.api.common.functions.AbstractRichFunction;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        return;
    }

    public void close() throws java.lang.Exception
    {
        org.apache.flink.api.common.functions.AbstractRichFunction r0;

        r0 := @this: org.apache.flink.api.common.functions.AbstractRichFunction;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.functions.AbstractRichFunction: long serialVersionUID> = 1L;

        return;
    }
}
