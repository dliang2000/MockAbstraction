public class org.apache.flink.core.fs.ConnectionLimitingFactory extends java.lang.Object implements org.apache.flink.core.fs.FileSystemFactory
{
    private final org.apache.flink.core.fs.FileSystemFactory factory;
    private final org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings settings;

    private void <init>(org.apache.flink.core.fs.FileSystemFactory, org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings)
    {
        org.apache.flink.core.fs.ConnectionLimitingFactory r0;
        org.apache.flink.core.fs.FileSystemFactory r1, $r4;
        org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: org.apache.flink.core.fs.ConnectionLimitingFactory;

        r1 := @parameter0: org.apache.flink.core.fs.FileSystemFactory;

        r2 := @parameter1: org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.apache.flink.core.fs.FileSystemFactory) $r3;

        r0.<org.apache.flink.core.fs.ConnectionLimitingFactory: org.apache.flink.core.fs.FileSystemFactory factory> = $r4;

        $r5 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings) $r5;

        r0.<org.apache.flink.core.fs.ConnectionLimitingFactory: org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings settings> = $r6;

        return;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        org.apache.flink.core.fs.ConnectionLimitingFactory r0;
        org.apache.flink.core.fs.FileSystemFactory $r1;
        java.lang.ClassLoader $r2;

        r0 := @this: org.apache.flink.core.fs.ConnectionLimitingFactory;

        $r1 = r0.<org.apache.flink.core.fs.ConnectionLimitingFactory: org.apache.flink.core.fs.FileSystemFactory factory>;

        $r2 = interfaceinvoke $r1.<org.apache.flink.core.fs.FileSystemFactory: java.lang.ClassLoader getClassLoader()>();

        return $r2;
    }

    public java.lang.String getScheme()
    {
        org.apache.flink.core.fs.ConnectionLimitingFactory r0;
        org.apache.flink.core.fs.FileSystemFactory $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.core.fs.ConnectionLimitingFactory;

        $r1 = r0.<org.apache.flink.core.fs.ConnectionLimitingFactory: org.apache.flink.core.fs.FileSystemFactory factory>;

        $r2 = interfaceinvoke $r1.<org.apache.flink.core.fs.FileSystemFactory: java.lang.String getScheme()>();

        return $r2;
    }

    public void configure(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.core.fs.ConnectionLimitingFactory r0;
        org.apache.flink.configuration.Configuration r1;
        org.apache.flink.core.fs.FileSystemFactory $r2;

        r0 := @this: org.apache.flink.core.fs.ConnectionLimitingFactory;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        $r2 = r0.<org.apache.flink.core.fs.ConnectionLimitingFactory: org.apache.flink.core.fs.FileSystemFactory factory>;

        interfaceinvoke $r2.<org.apache.flink.core.fs.FileSystemFactory: void configure(org.apache.flink.configuration.Configuration)>(r1);

        return;
    }

    public org.apache.flink.core.fs.FileSystem create(java.net.URI) throws java.io.IOException
    {
        org.apache.flink.core.fs.ConnectionLimitingFactory r0;
        java.net.URI r1;
        org.apache.flink.core.fs.FileSystem r2;
        org.apache.flink.core.fs.FileSystemFactory $r3;
        org.apache.flink.core.fs.LimitedConnectionsFileSystem $r4;
        org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings $r5, $r6, $r7, $r8, $r9;
        long $l0, $l1;
        int $i2, $i3, $i4;

        r0 := @this: org.apache.flink.core.fs.ConnectionLimitingFactory;

        r1 := @parameter0: java.net.URI;

        $r3 = r0.<org.apache.flink.core.fs.ConnectionLimitingFactory: org.apache.flink.core.fs.FileSystemFactory factory>;

        r2 = interfaceinvoke $r3.<org.apache.flink.core.fs.FileSystemFactory: org.apache.flink.core.fs.FileSystem create(java.net.URI)>(r1);

        $r4 = new org.apache.flink.core.fs.LimitedConnectionsFileSystem;

        $r5 = r0.<org.apache.flink.core.fs.ConnectionLimitingFactory: org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings settings>;

        $i4 = $r5.<org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings: int limitTotal>;

        $r6 = r0.<org.apache.flink.core.fs.ConnectionLimitingFactory: org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings settings>;

        $i3 = $r6.<org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings: int limitOutput>;

        $r7 = r0.<org.apache.flink.core.fs.ConnectionLimitingFactory: org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings settings>;

        $i2 = $r7.<org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings: int limitInput>;

        $r8 = r0.<org.apache.flink.core.fs.ConnectionLimitingFactory: org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings settings>;

        $l1 = $r8.<org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings: long streamOpenTimeout>;

        $r9 = r0.<org.apache.flink.core.fs.ConnectionLimitingFactory: org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings settings>;

        $l0 = $r9.<org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings: long streamInactivityTimeout>;

        specialinvoke $r4.<org.apache.flink.core.fs.LimitedConnectionsFileSystem: void <init>(org.apache.flink.core.fs.FileSystem,int,int,int,long,long)>(r2, $i4, $i3, $i2, $l1, $l0);

        return $r4;
    }

    public static org.apache.flink.core.fs.FileSystemFactory decorateIfLimited(org.apache.flink.core.fs.FileSystemFactory, java.lang.String, org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.core.fs.FileSystemFactory r0;
        java.lang.String r1;
        org.apache.flink.configuration.Configuration r2;
        org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings r3;
        org.apache.flink.core.fs.ConnectionLimitingFactory $r5;

        r0 := @parameter0: org.apache.flink.core.fs.FileSystemFactory;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.flink.configuration.Configuration;

        staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r0, "factory");

        r3 = staticinvoke <org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings: org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings fromConfig(org.apache.flink.configuration.Configuration,java.lang.String)>(r2, r1);

        if r3 != null goto label1;

        return r0;

     label1:
        $r5 = new org.apache.flink.core.fs.ConnectionLimitingFactory;

        specialinvoke $r5.<org.apache.flink.core.fs.ConnectionLimitingFactory: void <init>(org.apache.flink.core.fs.FileSystemFactory,org.apache.flink.core.fs.LimitedConnectionsFileSystem$ConnectionLimitingSettings)>(r0, r3);

        return $r5;
    }
}
