public class org.apache.flink.api.common.JobExecutionResult extends org.apache.flink.api.common.JobSubmissionResult
{
    private final long netRuntime;
    private final java.util.Map accumulatorResults;

    public void <init>(org.apache.flink.api.common.JobID, long, java.util.Map)
    {
        org.apache.flink.api.common.JobExecutionResult r0;
        org.apache.flink.api.common.JobID r1;
        long l0;
        java.util.Map r2, $r3;

        r0 := @this: org.apache.flink.api.common.JobExecutionResult;

        r1 := @parameter0: org.apache.flink.api.common.JobID;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.Map;

        specialinvoke r0.<org.apache.flink.api.common.JobSubmissionResult: void <init>(org.apache.flink.api.common.JobID)>(r1);

        r0.<org.apache.flink.api.common.JobExecutionResult: long netRuntime> = l0;

        if r2 == null goto label1;

        r0.<org.apache.flink.api.common.JobExecutionResult: java.util.Map accumulatorResults> = r2;

        goto label2;

     label1:
        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.flink.api.common.JobExecutionResult: java.util.Map accumulatorResults> = $r3;

     label2:
        return;
    }

    public boolean isJobExecutionResult()
    {
        org.apache.flink.api.common.JobExecutionResult r0;

        r0 := @this: org.apache.flink.api.common.JobExecutionResult;

        return 1;
    }

    public org.apache.flink.api.common.JobExecutionResult getJobExecutionResult()
    {
        org.apache.flink.api.common.JobExecutionResult r0;

        r0 := @this: org.apache.flink.api.common.JobExecutionResult;

        return r0;
    }

    public long getNetRuntime()
    {
        org.apache.flink.api.common.JobExecutionResult r0;
        long $l0;

        r0 := @this: org.apache.flink.api.common.JobExecutionResult;

        $l0 = r0.<org.apache.flink.api.common.JobExecutionResult: long netRuntime>;

        return $l0;
    }

    public long getNetRuntime(java.util.concurrent.TimeUnit)
    {
        org.apache.flink.api.common.JobExecutionResult r0;
        java.util.concurrent.TimeUnit r1, $r2;
        long $l0, $l1;

        r0 := @this: org.apache.flink.api.common.JobExecutionResult;

        r1 := @parameter0: java.util.concurrent.TimeUnit;

        $l0 = virtualinvoke r0.<org.apache.flink.api.common.JobExecutionResult: long getNetRuntime()>();

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($l0, $r2);

        return $l1;
    }

    public java.lang.Object getAccumulatorResult(java.lang.String)
    {
        org.apache.flink.api.common.JobExecutionResult r0;
        java.lang.String r1;
        org.apache.flink.util.OptionalFailure r2;
        java.util.Map $r3;
        java.lang.Object $r4, $r5;

        r0 := @this: org.apache.flink.api.common.JobExecutionResult;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.flink.api.common.JobExecutionResult: java.util.Map accumulatorResults>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (org.apache.flink.util.OptionalFailure) $r4;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<org.apache.flink.util.OptionalFailure: java.lang.Object getUnchecked()>();

        return $r5;

     label1:
        return null;
    }

    public java.util.Map getAllAccumulatorResults()
    {
        org.apache.flink.api.common.JobExecutionResult r0;
        java.util.Map $r1, $r8;
        java.util.Set $r2;
        java.util.stream.Stream $r3;
        java.util.function.Function $r4, $r5;
        java.util.stream.Collector $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.api.common.JobExecutionResult;

        $r1 = r0.<org.apache.flink.api.common.JobExecutionResult: java.util.Map accumulatorResults>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.stream.Stream stream()>();

        $r4 = staticinvoke <org.apache.flink.api.common.JobExecutionResult$getKey__270: java.util.function.Function bootstrap$()>();

        $r5 = staticinvoke <org.apache.flink.api.common.JobExecutionResult$lambda_getAllAccumulatorResults_0__271: java.util.function.Function bootstrap$()>();

        $r6 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function)>($r4, $r5);

        $r7 = interfaceinvoke $r3.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r6);

        $r8 = (java.util.Map) $r7;

        return $r8;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.common.JobExecutionResult r0;
        java.util.Map r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r8, $r9, $r11, $r12, $r13, $r16, $r19;
        org.apache.flink.api.common.JobID $r7;
        long $l0;
        int $i1;
        java.lang.String $r15, $r18;

        r0 := @this: org.apache.flink.api.common.JobExecutionResult;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Program execution finished");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job with JobID ");

        $r7 = virtualinvoke r0.<org.apache.flink.api.common.JobExecutionResult: org.apache.flink.api.common.JobID getJobID()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has finished.");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Runtime: ");

        $l0 = virtualinvoke r0.<org.apache.flink.api.common.JobExecutionResult: long getNetRuntime()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r2 = virtualinvoke r0.<org.apache.flink.api.common.JobExecutionResult: java.util.Map getAllAccumulatorResults()>();

        $i1 = interfaceinvoke r2.<java.util.Map: int size()>();

        if $i1 <= 0 goto label1;

        $r16 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Accumulator Results: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r18 = staticinvoke <org.apache.flink.api.common.accumulators.AccumulatorHelper: java.lang.String getResultsFormatted(java.util.Map)>(r2);

        $r19 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label1:
        $r15 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public java.lang.Integer getIntCounterResult(java.lang.String)
    {
        org.apache.flink.api.common.JobExecutionResult r0;
        java.lang.String r1, $r14;
        java.lang.Object r2, $r4;
        java.util.Map $r3;
        org.apache.flink.util.OptionalFailure $r5;
        boolean $z0;
        java.lang.Integer $r6;
        java.lang.ClassCastException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13;
        java.lang.Class $r12;

        r0 := @this: org.apache.flink.api.common.JobExecutionResult;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.flink.api.common.JobExecutionResult: java.util.Map accumulatorResults>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (org.apache.flink.util.OptionalFailure) $r4;

        r2 = virtualinvoke $r5.<org.apache.flink.util.OptionalFailure: java.lang.Object getUnchecked()>();

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = r2 instanceof java.lang.Integer;

        if $z0 != 0 goto label2;

        $r7 = new java.lang.ClassCastException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested result of the accumulator \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' should be Integer but has type ");

        $r12 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.ClassCastException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label2:
        $r6 = (java.lang.Integer) r2;

        return $r6;
    }

    public static org.apache.flink.api.common.JobExecutionResult fromJobSubmissionResult(org.apache.flink.api.common.JobSubmissionResult)
    {
        org.apache.flink.api.common.JobSubmissionResult r0;
        org.apache.flink.api.common.JobExecutionResult $r1;
        org.apache.flink.api.common.JobID $r2;

        r0 := @parameter0: org.apache.flink.api.common.JobSubmissionResult;

        $r1 = new org.apache.flink.api.common.JobExecutionResult;

        $r2 = virtualinvoke r0.<org.apache.flink.api.common.JobSubmissionResult: org.apache.flink.api.common.JobID getJobID()>();

        specialinvoke $r1.<org.apache.flink.api.common.JobExecutionResult: void <init>(org.apache.flink.api.common.JobID,long,java.util.Map)>($r2, -1L, null);

        return $r1;
    }

    public static java.lang.Object lambda$getAllAccumulatorResults$0(java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        java.lang.Object $r1, $r3;
        org.apache.flink.util.OptionalFailure $r2;

        r0 := @parameter0: java.util.Map$Entry;

        $r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r2 = (org.apache.flink.util.OptionalFailure) $r1;

        $r3 = virtualinvoke $r2.<org.apache.flink.util.OptionalFailure: java.lang.Object getUnchecked()>();

        return $r3;
    }
}
