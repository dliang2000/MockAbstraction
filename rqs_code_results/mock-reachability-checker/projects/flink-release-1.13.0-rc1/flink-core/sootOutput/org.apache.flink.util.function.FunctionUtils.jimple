public class org.apache.flink.util.function.FunctionUtils extends java.lang.Object
{
    private static final java.util.function.Function NULL_FN;
    private static final java.util.function.Consumer IGNORE_FN;

    private void <init>()
    {
        org.apache.flink.util.function.FunctionUtils r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.flink.util.function.FunctionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This class should never be instantiated.");

        throw $r1;
    }

    public static java.util.function.Function nullFn()
    {
        java.util.function.Function $r0;

        $r0 = <org.apache.flink.util.function.FunctionUtils: java.util.function.Function NULL_FN>;

        return $r0;
    }

    public static java.util.function.Consumer ignoreFn()
    {
        java.util.function.Consumer $r0;

        $r0 = <org.apache.flink.util.function.FunctionUtils: java.util.function.Consumer IGNORE_FN>;

        return $r0;
    }

    public static java.util.function.Function uncheckedFunction(org.apache.flink.util.function.FunctionWithException)
    {
        org.apache.flink.util.function.FunctionWithException r0;
        java.util.function.Function $r1;

        r0 := @parameter0: org.apache.flink.util.function.FunctionWithException;

        $r1 = staticinvoke <org.apache.flink.util.function.FunctionUtils$lambda_uncheckedFunction_2__210: java.util.function.Function bootstrap$(org.apache.flink.util.function.FunctionWithException)>(r0);

        return $r1;
    }

    public static java.util.function.Consumer uncheckedConsumer(org.apache.flink.util.function.ThrowingConsumer)
    {
        org.apache.flink.util.function.ThrowingConsumer r0;
        java.util.function.Consumer $r1;

        r0 := @parameter0: org.apache.flink.util.function.ThrowingConsumer;

        $r1 = staticinvoke <org.apache.flink.util.function.FunctionUtils$lambda_uncheckedConsumer_3__483: java.util.function.Consumer bootstrap$(org.apache.flink.util.function.ThrowingConsumer)>(r0);

        return $r1;
    }

    public static java.util.function.Supplier uncheckedSupplier(org.apache.flink.util.function.SupplierWithException)
    {
        org.apache.flink.util.function.SupplierWithException r0;
        java.util.function.Supplier $r1;

        r0 := @parameter0: org.apache.flink.util.function.SupplierWithException;

        $r1 = staticinvoke <org.apache.flink.util.function.FunctionUtils$lambda_uncheckedSupplier_4__481: java.util.function.Supplier bootstrap$(org.apache.flink.util.function.SupplierWithException)>(r0);

        return $r1;
    }

    public static java.util.concurrent.Callable asCallable(org.apache.flink.util.function.RunnableWithException, java.lang.Object)
    {
        org.apache.flink.util.function.RunnableWithException r0;
        java.lang.Object r1;
        java.util.concurrent.Callable $r2;

        r0 := @parameter0: org.apache.flink.util.function.RunnableWithException;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.apache.flink.util.function.FunctionUtils$lambda_asCallable_5__482: java.util.concurrent.Callable bootstrap$(org.apache.flink.util.function.RunnableWithException,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public static java.lang.Object lambda$asCallable$5(org.apache.flink.util.function.RunnableWithException, java.lang.Object) throws java.lang.Exception
    {
        org.apache.flink.util.function.RunnableWithException r0;
        java.lang.Object r1;

        r0 := @parameter0: org.apache.flink.util.function.RunnableWithException;

        r1 := @parameter1: java.lang.Object;

        interfaceinvoke r0.<org.apache.flink.util.function.RunnableWithException: void run()>();

        return r1;
    }

    public static java.lang.Object lambda$uncheckedSupplier$4(org.apache.flink.util.function.SupplierWithException)
    {
        org.apache.flink.util.function.SupplierWithException r0;
        java.lang.Throwable $r2;
        java.lang.Object r3;

        r0 := @parameter0: org.apache.flink.util.function.SupplierWithException;

        r3 = null;

     label1:
        r3 = interfaceinvoke r0.<org.apache.flink.util.function.SupplierWithException: java.lang.Object get()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <org.apache.flink.util.ExceptionUtils: void rethrow(java.lang.Throwable)>($r2);

     label4:
        return r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void lambda$uncheckedConsumer$3(org.apache.flink.util.function.ThrowingConsumer, java.lang.Object)
    {
        org.apache.flink.util.function.ThrowingConsumer r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @parameter0: org.apache.flink.util.function.ThrowingConsumer;

        r1 := @parameter1: java.lang.Object;

     label1:
        interfaceinvoke r0.<org.apache.flink.util.function.ThrowingConsumer: void accept(java.lang.Object)>(r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <org.apache.flink.util.ExceptionUtils: void rethrow(java.lang.Throwable)>($r3);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.lang.Object lambda$uncheckedFunction$2(org.apache.flink.util.function.FunctionWithException, java.lang.Object)
    {
        org.apache.flink.util.function.FunctionWithException r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable $r4;

        r0 := @parameter0: org.apache.flink.util.function.FunctionWithException;

        r1 := @parameter1: java.lang.Object;

     label1:
        $r3 = interfaceinvoke r0.<org.apache.flink.util.function.FunctionWithException: java.lang.Object apply(java.lang.Object)>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        staticinvoke <org.apache.flink.util.ExceptionUtils: void rethrow(java.lang.Throwable)>($r4);

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void lambda$static$1(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        return;
    }

    public static java.lang.Void lambda$static$0(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        return null;
    }

    static void <clinit>()
    {
        java.util.function.Function $r0;
        java.util.function.Consumer $r1;

        $r0 = staticinvoke <org.apache.flink.util.function.FunctionUtils$lambda_static_0__211: java.util.function.Function bootstrap$()>();

        <org.apache.flink.util.function.FunctionUtils: java.util.function.Function NULL_FN> = $r0;

        $r1 = staticinvoke <org.apache.flink.util.function.FunctionUtils$lambda_static_1__212: java.util.function.Consumer bootstrap$()>();

        <org.apache.flink.util.function.FunctionUtils: java.util.function.Consumer IGNORE_FN> = $r1;

        return;
    }
}
