final class org.apache.flink.api.java.typeutils.runtime.PojoFieldUtils extends java.lang.Object
{

    void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.PojoFieldUtils r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.PojoFieldUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void writeField(org.apache.flink.core.memory.DataOutputView, java.lang.reflect.Field) throws java.io.IOException
    {
        org.apache.flink.core.memory.DataOutputView r0;
        java.lang.reflect.Field r1;
        java.lang.Class r2;
        java.lang.String $r3, $r4;

        r0 := @parameter0: org.apache.flink.core.memory.DataOutputView;

        r1 := @parameter1: java.lang.reflect.Field;

        r2 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r0.<org.apache.flink.core.memory.DataOutputView: void writeUTF(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        interfaceinvoke r0.<org.apache.flink.core.memory.DataOutputView: void writeUTF(java.lang.String)>($r4);

        return;
    }

    static java.lang.reflect.Field readField(org.apache.flink.core.memory.DataInputView, java.lang.ClassLoader) throws java.io.IOException
    {
        org.apache.flink.core.memory.DataInputView r0;
        java.lang.ClassLoader r1;
        java.lang.Class r2;
        java.lang.String r3;
        java.lang.reflect.Field $r4;

        r0 := @parameter0: org.apache.flink.core.memory.DataInputView;

        r1 := @parameter1: java.lang.ClassLoader;

        r2 = staticinvoke <org.apache.flink.util.InstantiationUtil: java.lang.Class resolveClassByName(org.apache.flink.core.memory.DataInputView,java.lang.ClassLoader)>(r0, r1);

        r3 = interfaceinvoke r0.<org.apache.flink.core.memory.DataInputView: java.lang.String readUTF()>();

        $r4 = staticinvoke <org.apache.flink.api.java.typeutils.runtime.PojoFieldUtils: java.lang.reflect.Field getField(java.lang.String,java.lang.Class)>(r3, r2);

        return $r4;
    }

    static java.lang.reflect.Field getField(java.lang.String, java.lang.Class)
    {
        java.lang.String r0;
        java.lang.Class r1, r3;
        java.lang.NoSuchFieldException $r2;
        java.lang.reflect.Field r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r3 = r1;

     label1:
        if r3 == null goto label5;

     label2:
        r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r0);

        virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label3:
        return r4;

     label4:
        $r2 := @caughtexception;

        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label5:
        return null;

        catch java.lang.NoSuchFieldException from label2 to label3 with label4;
    }
}
