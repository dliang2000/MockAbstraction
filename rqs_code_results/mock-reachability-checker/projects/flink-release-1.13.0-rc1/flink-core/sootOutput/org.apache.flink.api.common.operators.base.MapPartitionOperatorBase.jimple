public class org.apache.flink.api.common.operators.base.MapPartitionOperatorBase extends org.apache.flink.api.common.operators.SingleInputOperator
{

    public void <init>(org.apache.flink.api.common.operators.util.UserCodeWrapper, org.apache.flink.api.common.operators.UnaryOperatorInformation, java.lang.String)
    {
        org.apache.flink.api.common.operators.base.MapPartitionOperatorBase r0;
        org.apache.flink.api.common.operators.util.UserCodeWrapper r1;
        org.apache.flink.api.common.operators.UnaryOperatorInformation r2;
        java.lang.String r3;

        r0 := @this: org.apache.flink.api.common.operators.base.MapPartitionOperatorBase;

        r1 := @parameter0: org.apache.flink.api.common.operators.util.UserCodeWrapper;

        r2 := @parameter1: org.apache.flink.api.common.operators.UnaryOperatorInformation;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.flink.api.common.operators.SingleInputOperator: void <init>(org.apache.flink.api.common.operators.util.UserCodeWrapper,org.apache.flink.api.common.operators.UnaryOperatorInformation,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void <init>(org.apache.flink.api.common.functions.MapPartitionFunction, org.apache.flink.api.common.operators.UnaryOperatorInformation, java.lang.String)
    {
        org.apache.flink.api.common.operators.base.MapPartitionOperatorBase r0;
        org.apache.flink.api.common.functions.MapPartitionFunction r1;
        org.apache.flink.api.common.operators.UnaryOperatorInformation r2;
        java.lang.String r3;
        org.apache.flink.api.common.operators.util.UserCodeObjectWrapper $r4;

        r0 := @this: org.apache.flink.api.common.operators.base.MapPartitionOperatorBase;

        r1 := @parameter0: org.apache.flink.api.common.functions.MapPartitionFunction;

        r2 := @parameter1: org.apache.flink.api.common.operators.UnaryOperatorInformation;

        r3 := @parameter2: java.lang.String;

        $r4 = new org.apache.flink.api.common.operators.util.UserCodeObjectWrapper;

        specialinvoke $r4.<org.apache.flink.api.common.operators.util.UserCodeObjectWrapper: void <init>(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.flink.api.common.operators.SingleInputOperator: void <init>(org.apache.flink.api.common.operators.util.UserCodeWrapper,org.apache.flink.api.common.operators.UnaryOperatorInformation,java.lang.String)>($r4, r2, r3);

        return;
    }

    public void <init>(java.lang.Class, org.apache.flink.api.common.operators.UnaryOperatorInformation, java.lang.String)
    {
        org.apache.flink.api.common.operators.base.MapPartitionOperatorBase r0;
        java.lang.Class r1;
        org.apache.flink.api.common.operators.UnaryOperatorInformation r2;
        java.lang.String r3;
        org.apache.flink.api.common.operators.util.UserCodeClassWrapper $r4;

        r0 := @this: org.apache.flink.api.common.operators.base.MapPartitionOperatorBase;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.api.common.operators.UnaryOperatorInformation;

        r3 := @parameter2: java.lang.String;

        $r4 = new org.apache.flink.api.common.operators.util.UserCodeClassWrapper;

        specialinvoke $r4.<org.apache.flink.api.common.operators.util.UserCodeClassWrapper: void <init>(java.lang.Class)>(r1);

        specialinvoke r0.<org.apache.flink.api.common.operators.SingleInputOperator: void <init>(org.apache.flink.api.common.operators.util.UserCodeWrapper,org.apache.flink.api.common.operators.UnaryOperatorInformation,java.lang.String)>($r4, r2, r3);

        return;
    }

    protected java.util.List executeOnCollections(java.util.List, org.apache.flink.api.common.functions.RuntimeContext, org.apache.flink.api.common.ExecutionConfig) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.base.MapPartitionOperatorBase r0;
        java.util.List r1;
        org.apache.flink.api.common.functions.RuntimeContext r2;
        org.apache.flink.api.common.ExecutionConfig r3;
        org.apache.flink.api.common.functions.MapPartitionFunction r4;
        org.apache.flink.api.common.typeutils.TypeSerializer r6, r7;
        org.apache.flink.api.common.operators.util.UserCodeWrapper $r10;
        java.lang.Object $r11;
        org.apache.flink.configuration.Configuration $r12;
        java.util.ArrayList $r13;
        int $i0, $i1;
        org.apache.flink.api.common.operators.UnaryOperatorInformation $r14, $r16;
        org.apache.flink.api.common.typeinfo.TypeInformation $r15, $r17;
        org.apache.flink.api.common.functions.util.CopyingIterator $r18;
        java.util.Iterator $r19;
        org.apache.flink.api.common.functions.util.CopyingListCollector $r20;

        r0 := @this: org.apache.flink.api.common.operators.base.MapPartitionOperatorBase;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.apache.flink.api.common.functions.RuntimeContext;

        r3 := @parameter2: org.apache.flink.api.common.ExecutionConfig;

        $r10 = r0.<org.apache.flink.api.common.operators.base.MapPartitionOperatorBase: org.apache.flink.api.common.operators.util.UserCodeWrapper userFunction>;

        $r11 = interfaceinvoke $r10.<org.apache.flink.api.common.operators.util.UserCodeWrapper: java.lang.Object getUserCodeObject()>();

        r4 = (org.apache.flink.api.common.functions.MapPartitionFunction) $r11;

        staticinvoke <org.apache.flink.api.common.functions.util.FunctionUtils: void setFunctionRuntimeContext(org.apache.flink.api.common.functions.Function,org.apache.flink.api.common.functions.RuntimeContext)>(r4, r2);

        $r12 = r0.<org.apache.flink.api.common.operators.base.MapPartitionOperatorBase: org.apache.flink.configuration.Configuration parameters>;

        staticinvoke <org.apache.flink.api.common.functions.util.FunctionUtils: void openFunction(org.apache.flink.api.common.functions.Function,org.apache.flink.configuration.Configuration)>(r4, $r12);

        $r13 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i0 / 4;

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i1);

        $r14 = virtualinvoke r0.<org.apache.flink.api.common.operators.base.MapPartitionOperatorBase: org.apache.flink.api.common.operators.UnaryOperatorInformation getOperatorInfo()>();

        $r15 = virtualinvoke $r14.<org.apache.flink.api.common.operators.UnaryOperatorInformation: org.apache.flink.api.common.typeinfo.TypeInformation getInputType()>();

        r6 = virtualinvoke $r15.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>(r3);

        $r16 = virtualinvoke r0.<org.apache.flink.api.common.operators.base.MapPartitionOperatorBase: org.apache.flink.api.common.operators.UnaryOperatorInformation getOperatorInfo()>();

        $r17 = virtualinvoke $r16.<org.apache.flink.api.common.operators.UnaryOperatorInformation: org.apache.flink.api.common.typeinfo.TypeInformation getOutputType()>();

        r7 = virtualinvoke $r17.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>(r3);

        $r18 = new org.apache.flink.api.common.functions.util.CopyingIterator;

        $r19 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r18.<org.apache.flink.api.common.functions.util.CopyingIterator: void <init>(java.util.Iterator,org.apache.flink.api.common.typeutils.TypeSerializer)>($r19, r6);

        $r20 = new org.apache.flink.api.common.functions.util.CopyingListCollector;

        specialinvoke $r20.<org.apache.flink.api.common.functions.util.CopyingListCollector: void <init>(java.util.List,org.apache.flink.api.common.typeutils.TypeSerializer)>($r13, r7);

        interfaceinvoke r4.<org.apache.flink.api.common.functions.MapPartitionFunction: void mapPartition(java.lang.Iterable,org.apache.flink.util.Collector)>($r18, $r20);

        virtualinvoke $r13.<java.util.ArrayList: void trimToSize()>();

        staticinvoke <org.apache.flink.api.common.functions.util.FunctionUtils: void closeFunction(org.apache.flink.api.common.functions.Function)>(r4);

        return $r13;
    }
}
