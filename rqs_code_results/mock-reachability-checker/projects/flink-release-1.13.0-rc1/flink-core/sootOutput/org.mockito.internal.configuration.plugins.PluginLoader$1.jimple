class org.mockito.internal.configuration.plugins.PluginLoader$1 extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
    final java.lang.Class val$preferredPluginType;
    final java.lang.Class val$alternatePluginType;
    final java.lang.Throwable val$t;
    final org.mockito.internal.configuration.plugins.PluginLoader this$0;

    void <init>(org.mockito.internal.configuration.plugins.PluginLoader, java.lang.Class, java.lang.Class, java.lang.Throwable)
    {
        org.mockito.internal.configuration.plugins.PluginLoader$1 r0;
        org.mockito.internal.configuration.plugins.PluginLoader r1;
        java.lang.Class r2, r3;
        java.lang.Throwable r4;

        r0 := @this: org.mockito.internal.configuration.plugins.PluginLoader$1;

        r1 := @parameter0: org.mockito.internal.configuration.plugins.PluginLoader;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.lang.Throwable;

        r0.<org.mockito.internal.configuration.plugins.PluginLoader$1: org.mockito.internal.configuration.plugins.PluginLoader this$0> = r1;

        r0.<org.mockito.internal.configuration.plugins.PluginLoader$1: java.lang.Class val$preferredPluginType> = r2;

        r0.<org.mockito.internal.configuration.plugins.PluginLoader$1: java.lang.Class val$alternatePluginType> = r3;

        r0.<org.mockito.internal.configuration.plugins.PluginLoader$1: java.lang.Throwable val$t> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        org.mockito.internal.configuration.plugins.PluginLoader$1 r0;
        java.lang.Object r1;
        java.lang.reflect.Method r2;
        java.lang.Object[] r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12;
        java.lang.Class $r7, $r10;
        java.lang.String $r13;
        java.lang.Throwable $r14;

        r0 := @this: org.mockito.internal.configuration.plugins.PluginLoader$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object[];

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not initialize plugin: ");

        $r7 = r0.<org.mockito.internal.configuration.plugins.PluginLoader$1: java.lang.Class val$preferredPluginType>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (alternate: ");

        $r10 = r0.<org.mockito.internal.configuration.plugins.PluginLoader$1: java.lang.Class val$alternatePluginType>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r0.<org.mockito.internal.configuration.plugins.PluginLoader$1: java.lang.Throwable val$t>;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r14);

        throw $r4;
    }
}
