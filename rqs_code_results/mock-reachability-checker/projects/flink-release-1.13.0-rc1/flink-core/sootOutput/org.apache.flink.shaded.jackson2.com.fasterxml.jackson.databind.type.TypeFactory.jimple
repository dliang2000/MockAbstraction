public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] NO_TYPES;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory instance;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS;
    private static final java.lang.Class CLS_STRING;
    private static final java.lang.Class CLS_OBJECT;
    private static final java.lang.Class CLS_COMPARABLE;
    private static final java.lang.Class CLS_CLASS;
    private static final java.lang.Class CLS_ENUM;
    private static final java.lang.Class CLS_JSON_NODE;
    private static final java.lang.Class CLS_BOOL;
    private static final java.lang.Class CLS_INT;
    private static final java.lang.Class CLS_LONG;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_COMPARABLE;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_ENUM;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_CLASS;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_JSON_NODE;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache _typeCache;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser _parser;
    protected final java.lang.ClassLoader _classLoader;

    private void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $r1 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache) null;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache)>($r1);

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache)>(r1);

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r3 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r3 != null goto label1;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap: void <init>(int,int)>(16, 200);

        r3 = $r2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache _typeCache> = r3;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>(r0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser _parser> = $r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader> = null;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[], java.lang.ClassLoader)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] r3;
        java.lang.ClassLoader r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[];

        r4 := @parameter3: java.lang.ClassLoader;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader)>(r1, r2, r3, r4);

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[], java.lang.ClassLoader)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser r1, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] r2;
        java.lang.ClassLoader r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r6 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[];

        r3 := @parameter3: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r6 != null goto label1;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap: void <init>(int,int)>(16, 200);

        r6 = $r5;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache _typeCache> = r6;

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser withFactory(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>(r0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser _parser> = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader> = r3;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory withModifier(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] $r2, $r3, $r5, r7;
        java.lang.Object[] $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser $r9;
        java.lang.ClassLoader $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier;

        r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache _typeCache>;

        if r1 != null goto label1;

        r7 = null;

        r6 = null;

        goto label3;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;

        if $r2 != null goto label2;

        $r5 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier)[1];

        $r5[0] = r1;

        r7 = $r5;

        r6 = null;

        goto label3;

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r3, r1);

        r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[]) $r4;

     label3:
        $r8 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser _parser>;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader>;

        specialinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader)>(r6, $r9, r7, $r10);

        return $r8;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory withClassLoader(java.lang.ClassLoader)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0, $r2;
        java.lang.ClassLoader r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.ClassLoader;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache _typeCache>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser _parser>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader)>($r5, $r4, $r3, r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory withCache(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap r1;
        java.lang.ClassLoader $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser _parser>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader>;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader)>(r1, $r5, $r4, $r3);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory withCache(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache r1;
        java.lang.ClassLoader $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser _parser>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader>;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader)>(r1, $r5, $r4, $r3);

        return $r2;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory instance>;

        return $r0;
    }

    public void clearCache()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache _typeCache>;

        interfaceinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache: void clear()>();

        return;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.ClassLoader $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader>;

        return $r1;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r1;

        $r0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();

        $r1 = virtualinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _unknownType()>();

        return $r1;
    }

    public static java.lang.Class rawClass(java.lang.reflect.Type)
    {
        java.lang.reflect.Type r0;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2;
        java.lang.Class $r3, $r4;

        r0 := @parameter0: java.lang.reflect.Type;

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Class) r0;

        return $r4;

     label1:
        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r0);

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        return $r3;
    }

    public java.lang.Class findClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.String r1, $r8;
        int $i0;
        java.lang.Class $r2, $r3, r10;
        java.lang.Thread $r4;
        java.lang.Exception $r5, $r9;
        java.lang.ClassNotFoundException $r7;
        java.lang.Throwable r11;
        java.lang.ClassLoader r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46);

        if $i0 >= 0 goto label1;

        r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class _findPrimitive(java.lang.String)>(r1);

        if r10 == null goto label1;

        return r10;

     label1:
        r11 = null;

        r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader getClassLoader()>();

        if r12 != null goto label2;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r12 = virtualinvoke $r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label2:
        if r12 == null goto label6;

     label3:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 1, r12);

     label4:
        return $r3;

     label5:
        $r9 := @caughtexception;

        r11 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable getRootCause(java.lang.Throwable)>($r9);

     label6:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class classForName(java.lang.String)>(r1);

     label7:
        return $r2;

     label8:
        $r5 := @caughtexception;

        if r11 != null goto label9;

        r11 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable getRootCause(java.lang.Throwable)>($r5);

     label9:
        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable throwIfRTE(java.lang.Throwable)>(r11);

        $r7 = new java.lang.ClassNotFoundException;

        $r8 = virtualinvoke r11.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>($r8, r11);

        throw $r7;

        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    protected java.lang.Class classForName(java.lang.String, boolean, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.String r1;
        boolean z0;
        java.lang.ClassLoader r2;
        java.lang.Class $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.ClassLoader;

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 1, r2);

        return $r3;
    }

    protected java.lang.Class classForName(java.lang.String) throws java.lang.ClassNotFoundException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.String r1;
        java.lang.Class $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        return $r2;
    }

    protected java.lang.Class _findPrimitive(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Class $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = "int";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r19 = <java.lang.Integer: java.lang.Class TYPE>;

        return $r19;

     label1:
        $r3 = "long";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r18 = <java.lang.Long: java.lang.Class TYPE>;

        return $r18;

     label2:
        $r4 = "float";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        $r17 = <java.lang.Float: java.lang.Class TYPE>;

        return $r17;

     label3:
        $r5 = "double";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label4;

        $r16 = <java.lang.Double: java.lang.Class TYPE>;

        return $r16;

     label4:
        $r6 = "boolean";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label5;

        $r15 = <java.lang.Boolean: java.lang.Class TYPE>;

        return $r15;

     label5:
        $r7 = "byte";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label6;

        $r14 = <java.lang.Byte: java.lang.Class TYPE>;

        return $r14;

     label6:
        $r8 = "char";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 == 0 goto label7;

        $r13 = <java.lang.Character: java.lang.Class TYPE>;

        return $r13;

     label7:
        $r9 = "short";

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label8;

        $r12 = <java.lang.Short: java.lang.Class TYPE>;

        return $r12;

     label8:
        $r10 = "void";

        $z8 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z8 == 0 goto label9;

        $r11 = <java.lang.Void: java.lang.Class TYPE>;

        return $r11;

     label9:
        return null;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.Class) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, $r3;
        java.lang.Class r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean)>(r1, r2, 0);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.Class, boolean) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r14, $r15, $r16, $r18, r21;
        java.lang.Class r2, r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r4, $r6, $r7, $r13, $r17, $r19, $r20;
        java.lang.reflect.TypeVariable[] $r5;
        java.lang.IllegalArgumentException $r8;
        java.lang.Object[] $r9;
        java.lang.String $r10, $r11, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if r3 != r2 goto label01;

        return r1;

     label01:
        if r3 != class "Ljava/lang/Object;" goto label02;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r2, $r13);

        goto label11;

     label02:
        $z1 = virtualinvoke r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z1 != 0 goto label03;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(r2);

        $r9[0] = $r10;

        $r11 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        $r9[1] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Class %s not subtype of %s", $r9);

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label03:
        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z2 == 0 goto label08;

        $z3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();

        if $z3 == 0 goto label05;

        if r2 == class "Ljava/util/HashMap;" goto label04;

        if r2 == class "Ljava/util/LinkedHashMap;" goto label04;

        if r2 == class "Ljava/util/EnumMap;" goto label04;

        if r2 != class "Ljava/util/TreeMap;" goto label08;

     label04:
        $r15 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getKeyType()>();

        $r16 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r17 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, $r15, $r16);

        r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r2, $r17);

        goto label11;

     label05:
        $z4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isCollectionLikeType()>();

        if $z4 == 0 goto label08;

        if r2 == class "Ljava/util/ArrayList;" goto label06;

        if r2 == class "Ljava/util/LinkedList;" goto label06;

        if r2 == class "Ljava/util/HashSet;" goto label06;

        if r2 != class "Ljava/util/TreeSet;" goto label07;

     label06:
        $r18 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        $r19 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, $r18);

        r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r2, $r19);

        goto label11;

     label07:
        if r3 != class "Ljava/util/EnumSet;" goto label08;

        return r1;

     label08:
        $r20 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();

        $z5 = virtualinvoke $r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();

        if $z5 == 0 goto label09;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r2, $r7);

        goto label11;

     label09:
        $r5 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        i0 = lengthof $r5;

        if i0 != 0 goto label10;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r2, $r6);

        goto label11;

     label10:
        r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings _bindingsForSubtype(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,int,java.lang.Class,boolean)>(r1, i0, r2, z0);

        r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r2, r4);

     label11:
        r21 = virtualinvoke r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType withHandlersFrom(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        return r21;
    }

    private org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings _bindingsForSubtype(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, int, java.lang.Class, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r4, r5, r30;
        int i0, i1, i2;
        java.lang.Class r2, $r8, $r24;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.PlaceholderForType[] r3;
        java.lang.String r6, $r14, $r17, $r21, $r25, $r26, $r27;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r9, r29;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.PlaceholderForType $r10, $r28;
        java.lang.IllegalArgumentException $r11, $r22;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r18, $r19, $r20;
        java.lang.Object[] $r23;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Class;

        z0 := @parameter3: boolean;

        r3 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.PlaceholderForType)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r28 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.PlaceholderForType;

        specialinvoke $r28.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.PlaceholderForType: void <init>(int)>(i1);

        r3[i1] = $r28;

        i1 = i1 + 1;

        goto label1;

     label2:
        r29 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r2, r3);

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r2, r29);

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>($r8);

        if r5 != null goto label3;

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = newarray (java.lang.Object)[2];

        $r24 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();

        $r23[0] = $r25;

        $r26 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r23[1] = $r26;

        $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Internal error: unable to locate supertype (%s) from resolved subtype %s", $r23);

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r22;

     label3:
        r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.String _resolveTypePlaceholders(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r5);

        if r6 == null goto label4;

        if z0 != 0 goto label4;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to specialize base type ");

        $r14 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.String toCanonical()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as ");

        $r17 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", problem: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r11;

     label4:
        r7 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)[i0];

        i2 = 0;

     label5:
        if i2 >= i0 goto label7;

        $r10 = r3[i2];

        r30 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.PlaceholderForType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType actualType()>();

        if r30 != null goto label6;

        r30 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

     label6:
        r7[i2] = r30;

        i2 = i2 + 1;

        goto label5;

     label7:
        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r2, r7);

        return $r9;
    }

    private java.lang.String _resolveTypePlaceholders(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r2, r5, r6, $r18;
        java.util.List r3, r4;
        int i0, i1, $i2, i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r7, $r8;
        java.lang.Object $r9, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object[] $r10;
        java.lang.Integer $r11, $r12;
        java.lang.String $r13, $r14, $r15;
        java.lang.Class $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();

        r3 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();

        $r8 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();

        r4 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();

        i0 = interfaceinvoke r4.<java.util.List: int size()>();

        i3 = 0;

        i1 = interfaceinvoke r3.<java.util.List: int size()>();

     label1:
        if i3 >= i1 goto label8;

        $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i3);

        r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r9;

        if i3 >= i0 goto label2;

        $r17 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i3);

        $r18 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r17;

        goto label3;

     label2:
        $r18 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

     label3:
        r6 = $r18;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: boolean _verifyAndResolvePlaceholders(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r5, $r18);

        if $z0 != 0 goto label7;

        $z1 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/lang/Object;");

        if $z1 == 0 goto label4;

        goto label7;

     label4:
        if i3 != 0 goto label5;

        $z3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();

        if $z3 == 0 goto label5;

        $z4 = virtualinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/lang/Object;");

        if $z4 == 0 goto label5;

        goto label7;

     label5:
        $z5 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isInterface()>();

        if $z5 == 0 goto label6;

        $r16 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z2 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSuperTypeOf(java.lang.Class)>($r16);

        if $z2 == 0 goto label6;

        goto label7;

     label6:
        $r10 = newarray (java.lang.Object)[4];

        $i2 = i3 + 1;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r10[0] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r10[1] = $r12;

        $r13 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.String toCanonical()>();

        $r10[2] = $r13;

        $r14 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.String toCanonical()>();

        $r10[3] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Type parameter #%d/%d differs; can not specialize %s with %s", $r10);

        return $r15;

     label7:
        i3 = i3 + 1;

        goto label1;

     label8:
        return null;
    }

    private boolean _verifyAndResolvePlaceholders(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r2, r5, r6;
        java.util.List r3, r4;
        int i0, i1;
        boolean $z0, $z1;
        java.lang.Class $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r9, $r10;
        java.lang.Object $r11, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.PlaceholderForType $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $z0 = r2 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.PlaceholderForType;

        if $z0 == 0 goto label1;

        $r13 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.PlaceholderForType) r2;

        virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.PlaceholderForType: void actualType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        return 1;

     label1:
        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r8 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if $r7 == $r8 goto label2;

        return 0;

     label2:
        $r9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();

        r3 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();

        $r10 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();

        r4 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();

        i1 = 0;

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

     label3:
        if i1 >= i0 goto label5;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r11;

        $r12 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r12;

        $z1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: boolean _verifyAndResolvePlaceholders(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r5, r6);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return 1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructGeneralizedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r4;
        java.lang.Class r2, r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r5, $r9;
        java.lang.Object[] $r6, $r10;
        java.lang.String $r7, $r8, $r11, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.Class;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if r3 != r2 goto label1;

        return r1;

     label1:
        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(r2);

        if r4 != null goto label3;

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);

        if $z0 != 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = newarray (java.lang.Object)[2];

        $r11 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r10[0] = $r11;

        $r10[1] = r1;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Class %s not a super-type of %s", $r10);

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r6[0] = $r7;

        $r6[1] = r1;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Internal error: class %s not included as super-type for %s", $r6);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label3:
        return r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser _parser>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType parse(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] findTypeParameters(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r3;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.Class;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(r2);

        if r3 != null goto label1;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] NO_TYPES>;

        return $r6;

     label1:
        $r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] typeParameterArray()>();

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, r3);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] findTypeParameters(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r4, r2);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] findTypeParameters(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r3, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType moreSpecificType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r2;
        java.lang.Class r3, r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        if r1 != null goto label1;

        return r2;

     label1:
        if r2 != null goto label2;

        return r1;

     label2:
        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if r3 != r4 goto label3;

        return r1;

     label3:
        $z0 = virtualinvoke r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z0 == 0 goto label4;

        return r2;

     label4:
        return r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.reflect.Type r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.reflect.Type;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r1;
        java.lang.reflect.Type $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        $r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference: java.lang.reflect.Type getType()>();

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, $r2, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType resolveMemberType(java.lang.reflect.Type, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.reflect.Type r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r1, r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.reflect.Type r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, $r4, $r6;
        boolean $z0;
        java.lang.Class $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        $z0 = r1 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r5 = (java.lang.Class) r1;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, $r5, r2);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _applyModifiers(java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r3);

        return $r6;

     label1:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r1, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.reflect.Type r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.lang.Class;

        if r2 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

     label2:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r5);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.reflect.Type r1;
        java.lang.Class $r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.reflect.Type;

        r3 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        if r3 != null goto label1;

        r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        goto label4;

     label1:
        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == class "Ljava/lang/Class;" goto label4;

     label2:
        $z0 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        r3 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getSuperClass()>();

        if r3 != null goto label3;

        goto label4;

     label3:
        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();

        goto label2;

     label4:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r1, r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType constructArrayType(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r1, null);

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>($r2, null);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType constructArrayType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, null);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r2, $r3);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r5, r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType r4;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r8;
        java.lang.Object[] $r9;
        java.lang.String $r10, $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r1, r3);

        r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType) $r7;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        if r2 == null goto label1;

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(class "Ljava/util/Collection;");

        r6 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        $z1 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = newarray (java.lang.Object)[3];

        $r10 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(r1);

        $r9[0] = $r10;

        $r9[1] = r2;

        $r9[2] = r6;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Non-generic Collection class %s did not resolve to something with element type %s but %s ", $r9);

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label1:
        return r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r2, $r3);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r4;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2);

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r1, $r4);

        $z0 = r3 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType;

        if $z0 == 0 goto label1;

        $r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType) r3;

        return $r6;

     label1:
        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType upgradeFrom(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r3, r2);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class, java.lang.Class, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, r2, r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r4, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r8, r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.Class;

        if r1 != class "Ljava/util/Properties;" goto label1;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING>;

        r8 = $r7;

        r9 = $r7;

        goto label2;

     label1:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r2, $r4);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r3, $r5);

     label2:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r9, r8);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r3, r6, r7, r8, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] $r9;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r11, $r15;
        java.lang.Object[] $r12, $r16;
        java.lang.String $r13, $r14, $r17, $r18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r9 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)[2];

        $r9[0] = r2;

        $r9[1] = r3;

        r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, $r9);

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r1, r4);

        r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType) $r10;

        $z0 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        r6 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(class "Ljava/util/Map;");

        r7 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getKeyType()>();

        $z1 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = newarray (java.lang.Object)[3];

        $r17 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(r1);

        $r16[0] = $r17;

        $r16[1] = r2;

        $r16[2] = r7;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Non-generic Map class %s did not resolve to something with key type %s but %s ", $r16);

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r15;

     label1:
        r8 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        $z2 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>(r3);

        if $z2 != 0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = newarray (java.lang.Object)[3];

        $r13 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(r1);

        $r12[0] = $r13;

        $r12[1] = r3;

        $r12[2] = r8;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Non-generic Map class %s did not resolve to something with value type %s but %s ", $r12);

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r11;

     label2:
        return r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class, java.lang.Class, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, r2, r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r5, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.Class;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r2, $r4);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r3, $r6);

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r5, $r7);

        return $r8;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r3, r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r6;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType $r7, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r5 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)[2];

        $r5[0] = r2;

        $r5[1] = r3;

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, $r5);

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r1, $r6);

        $z0 = r4 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType;

        if $z0 == 0 goto label1;

        $r8 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType) r4;

        return $r8;

     label1:
        $r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType upgradeFrom(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r4, r2, r3);

        return $r7;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r1, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructReferenceType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2);

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType construct(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[],org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r3, null, null, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType uncheckedSimpleType(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _constructSimple(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, $r2, null, null);

        return $r3;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class, java.lang.Class[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, $r6;
        java.lang.Class[] r2;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        i0 = lengthof r2;

        r3 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r2[i1];

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, $r6, $r5);

        r3[i1] = $r7;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, r3);

        return $r4;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(null, r1, r2);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _applyModifiers(java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r3);

        return $r4;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructParametrizedType(java.lang.Class, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, r3);

        return $r4;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructParametrizedType(java.lang.Class, java.lang.Class, java.lang.Class[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, r2;
        java.lang.Class[] r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.Class[];

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,java.lang.Class[])>(r1, r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType constructRawCollectionType(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType constructRawCollectionLikeType(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType constructRawMapType(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r2, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType constructRawMapLikeType(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r2, $r3);

        return $r4;
    }

    private org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _mapType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, $r8, r16, r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r4;
        java.util.List r5;
        int i0;
        java.lang.Object $r6, $r7;
        java.lang.IllegalArgumentException $r9;
        java.lang.Object[] $r10;
        java.lang.String $r12, $r14, $r18;
        java.lang.Integer $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType $r19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        if r1 != class "Ljava/util/Properties;" goto label1;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING>;

        r16 = $r15;

        r17 = $r15;

        goto label7;

     label1:
        r5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();

        i0 = interfaceinvoke r5.<java.util.List: int size()>();

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _unknownType()>();

        r16 = $r8;

        r17 = $r8;

        goto label7;

     label3:
        $r6 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0);

        r17 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r6;

        $r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(1);

        r16 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r7;

        goto label7;

     label4:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = newarray (java.lang.Object)[4];

        $r12 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>(r1);

        $r10[0] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10[1] = $r13;

        if i0 != 1 goto label5;

        $r18 = "";

        goto label6;

     label5:
        $r18 = "s";

     label6:
        $r10[2] = $r18;

        $r10[3] = r2;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Strange Map type %s with %d type parameter%s (%s), can not resolve", $r10);

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label7:
        $r19 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[],org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r3, r4, r17, r16);

        return $r19;
    }

    private org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _collectionType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r4;
        java.util.List r5;
        boolean $z0;
        int $i0;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.String $r9, $r12;
        java.lang.Object $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        r5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();

        $z0 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _unknownType()>();

        goto label3;

     label1:
        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0);

        r15 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r13;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Strange Collection type ");

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": cannot determine type parameters");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label3:
        $r14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType construct(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[],org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r3, r4, r15);

        return $r14;
    }

    private org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referenceType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r4;
        java.util.List r5;
        boolean $z0;
        int $i0;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.String $r9, $r12;
        java.lang.Object $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        r5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: java.util.List getTypeParameters()>();

        $z0 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _unknownType()>();

        goto label3;

     label1:
        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0);

        r15 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r13;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Strange Reference type ");

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": cannot determine type parameters");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label3:
        $r14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType construct(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[],org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r3, r4, r15);

        return $r14;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _constructSimple(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _findWellKnownSimple(java.lang.Class)>(r1);

        if r5 == null goto label1;

        return r5;

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _newSimpleType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, r2, r3, r4);

        return $r6;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _newSimpleType(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, r2, r3, r4);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _unknownType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT>;

        return $r1;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _findWellKnownSimple(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, $r2, $r3, $r4, $r8, $r9, $r10;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType $r5, $r6, $r7, $r11, $r12, $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label3;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_BOOL>;

        if r1 != $r8 goto label1;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL>;

        return $r13;

     label1:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_INT>;

        if r1 != $r9 goto label2;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT>;

        return $r12;

     label2:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_LONG>;

        if r1 != $r10 goto label6;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG>;

        return $r11;

     label3:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_STRING>;

        if r1 != $r2 goto label4;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING>;

        return $r7;

     label4:
        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_OBJECT>;

        if r1 != $r3 goto label5;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT>;

        return $r6;

     label5:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_JSON_NODE>;

        if r1 != $r4 goto label6;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_JSON_NODE>;

        return $r5;

     label6:
        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack, java.lang.reflect.Type, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack r1;
        java.lang.reflect.Type r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r3, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8, $r17;
        java.lang.reflect.WildcardType $r9;
        java.lang.reflect.TypeVariable $r10;
        java.lang.reflect.GenericArrayType $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r12, r16, $r18;
        java.lang.reflect.ParameterizedType $r13;
        java.lang.Class $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        $z0 = r2 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r15 = (java.lang.Class) r2;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, $r15, $r14);

        goto label9;

     label1:
        $z1 = r2 instanceof java.lang.reflect.ParameterizedType;

        if $z1 == 0 goto label2;

        $r13 = (java.lang.reflect.ParameterizedType) r2;

        r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromParamType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.ParameterizedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, $r13, r3);

        goto label9;

     label2:
        $z2 = r2 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        if $z2 == 0 goto label3;

        $r12 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) r2;

        return $r12;

     label3:
        $z3 = r2 instanceof java.lang.reflect.GenericArrayType;

        if $z3 == 0 goto label4;

        $r11 = (java.lang.reflect.GenericArrayType) r2;

        r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromArrayType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.GenericArrayType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, $r11, r3);

        goto label9;

     label4:
        $z4 = r2 instanceof java.lang.reflect.TypeVariable;

        if $z4 == 0 goto label5;

        $r10 = (java.lang.reflect.TypeVariable) r2;

        r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromVariable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.TypeVariable,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, $r10, r3);

        goto label9;

     label5:
        $z5 = r2 instanceof java.lang.reflect.WildcardType;

        if $z5 == 0 goto label6;

        $r9 = (java.lang.reflect.WildcardType) r2;

        r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromWildcard(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.WildcardType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, $r9, r3);

        goto label9;

     label6:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized Type: ");

        if r2 != null goto label7;

        $r17 = "[null]";

        goto label8;

     label7:
        $r17 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

     label8:
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label9:
        $r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _applyModifiers(java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, r16);

        return $r18;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _applyModifiers(java.lang.reflect.Type, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.reflect.Type r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r5, r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] r3, $r6;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier r4;
        java.lang.IllegalStateException $r7;
        java.lang.Object[] $r8;
        java.lang.Class $r9;
        java.lang.String $r10, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;

        if $r6 != null goto label1;

        return r2;

     label1:
        r12 = r2;

        r13 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();

        if r13 != null goto label2;

        r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

     label2:
        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers>;

        i0 = lengthof r3;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r4 = r3[i1];

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeModifier: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType modifyType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>(r12, r1, r13, r0);

        if r5 != null goto label4;

        $r7 = new java.lang.IllegalStateException;

        $r8 = newarray (java.lang.Object)[3];

        $r8[0] = r4;

        $r9 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r8[1] = $r10;

        $r8[2] = r12;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("TypeModifier %s (of type %s) return null for type %s", $r8);

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label4:
        r12 = r5;

        i1 = i1 + 1;

        goto label3;

     label5:
        return r12;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        java.lang.Class r1, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r2, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache $r3, $r5;
        java.lang.Object $r4, r16;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r10, r15, r17, r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ResolvedRecursiveType $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack $r13, r14, r18, r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r22;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r14 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _findWellKnownSimple(java.lang.Class)>(r1);

        if r15 == null goto label01;

        return r15;

     label01:
        if r2 == null goto label02;

        $z2 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();

        if $z2 == 0 goto label03;

     label02:
        r16 = r1;

        goto label04;

     label03:
        r16 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: java.lang.Object asKey(java.lang.Class)>(r1);

     label04:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache _typeCache>;

        $r4 = interfaceinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache: java.lang.Object get(java.lang.Object)>(r16);

        r17 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r4;

        if r17 == null goto label05;

        return r17;

     label05:
        if r14 != null goto label06;

        $r13 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack;

        specialinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack: void <init>(java.lang.Class)>(r1);

        r18 = $r13;

        goto label08;

     label06:
        r19 = virtualinvoke r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack find(java.lang.Class)>(r1);

        if r19 == null goto label07;

        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ResolvedRecursiveType;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ResolvedRecursiveType: void <init>(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, $r12);

        virtualinvoke r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack: void addSelfReference(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ResolvedRecursiveType)>($r11);

        return $r11;

     label07:
        r18 = virtualinvoke r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack child(java.lang.Class)>(r1);

     label08:
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label09;

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r18, $r9, r2);

        r17 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>($r10, r2);

        goto label14;

     label09:
        $z1 = virtualinvoke r1.<java.lang.Class: boolean isInterface()>();

        if $z1 == 0 goto label10;

        r21 = null;

        r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _resolveSuperInterfaces(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r18, r1, r2);

        goto label11;

     label10:
        r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _resolveSuperClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r18, r1, r2);

        r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _resolveSuperInterfaces(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r18, r1, r2);

     label11:
        if r1 != class "Ljava/util/Properties;" goto label12;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING>;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING>;

        r17 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[],org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r21, r22, $r8, $r7);

        goto label13;

     label12:
        if r21 == null goto label13;

        r17 = virtualinvoke r21.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, r2, r21, r22);

     label13:
        if r17 != null goto label14;

        r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromWellKnownClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r18, r1, r2, r21, r22);

        if r17 != null goto label14;

        r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromWellKnownInterface(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r18, r1, r2, r21, r22);

        if r17 != null goto label14;

        r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _newSimpleType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r1, r2, r21, r22);

     label14:
        virtualinvoke r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack: void resolveSelfReferences(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r17);

        $z3 = virtualinvoke r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean hasHandlers()>();

        if $z3 != 0 goto label15;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache _typeCache>;

        interfaceinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LookupCache: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r16, r17);

     label15:
        return r17;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _resolveSuperClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r3;
        java.lang.reflect.Type r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Type getGenericSuperclass(java.lang.Class)>(r2);

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, r4, r3);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _resolveSuperInterfaces(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r3;
        java.lang.reflect.Type[] r4;
        int i0, $i1, i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r5, $r7;
        java.lang.reflect.Type r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Type[] getGenericInterfaces(java.lang.Class)>(r2);

        if r4 == null goto label1;

        $i1 = lengthof r4;

        if $i1 != 0 goto label2;

     label1:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] NO_TYPES>;

        return $r7;

     label2:
        i0 = lengthof r4;

        r5 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)[i0];

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        r6 = r4[i2];

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, r6, r3);

        r5[i2] = $r8;

        i2 = i2 + 1;

        goto label3;

     label4:
        return r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromWellKnownClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, $r5, $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack;

        r2 := @parameter1: java.lang.Class;

        r8 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        if r8 != null goto label1;

        r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

     label1:
        if r2 != class "Ljava/util/Map;" goto label2;

        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _mapType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r2, r8, r3, r4);

        return $r7;

     label2:
        if r2 != class "Ljava/util/Collection;" goto label3;

        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _collectionType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r2, r8, r3, r4);

        return $r6;

     label3:
        if r2 != class "Ljava/util/concurrent/atomic/AtomicReference;" goto label4;

        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referenceType(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r2, r8, r3, r4);

        return $r5;

     label4:
        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromWellKnownInterface(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r4, r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r5;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r5 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        i0 = lengthof r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r7 = r5[i1];

        r6 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r2, r3, r4, r5);

        if r6 == null goto label2;

        return r6;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromParamType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack, java.lang.reflect.ParameterizedType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack r1;
        java.lang.reflect.ParameterizedType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r3, r17;
        java.lang.Class r4, $r8, $r9, $r10;
        java.lang.reflect.Type[] r5;
        int i0, $i1, i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r6;
        java.lang.reflect.Type $r7, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r11, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType $r14, $r15, $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack;

        r2 := @parameter1: java.lang.reflect.ParameterizedType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        $r7 = interfaceinvoke r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        r4 = (java.lang.Class) $r7;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_ENUM>;

        if r4 != $r8 goto label1;

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_ENUM>;

        return $r16;

     label1:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_COMPARABLE>;

        if r4 != $r9 goto label2;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_COMPARABLE>;

        return $r15;

     label2:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_CLASS>;

        if r4 != $r10 goto label3;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_CLASS>;

        return $r14;

     label3:
        r5 = interfaceinvoke r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        if r5 != null goto label4;

        $i1 = 0;

        goto label5;

     label4:
        $i1 = lengthof r5;

     label5:
        i0 = $i1;

        if $i1 != 0 goto label6;

        r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS>;

        goto label9;

     label6:
        r6 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)[$i1];

        i2 = 0;

     label7:
        if i2 >= i0 goto label8;

        $r12 = r5[i2];

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, $r12, r3);

        r6[i2] = $r13;

        i2 = i2 + 1;

        goto label7;

     label8:
        r17 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[])>(r4, r6);

     label9:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, r4, r17);

        return $r11;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromArrayType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack, java.lang.reflect.GenericArrayType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack r1;
        java.lang.reflect.GenericArrayType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r4;
        java.lang.reflect.Type $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack;

        r2 := @parameter1: java.lang.reflect.GenericArrayType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        $r5 = interfaceinvoke r2.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, $r5, r3);

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r4, r3);

        return $r6;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromVariable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack, java.lang.reflect.TypeVariable, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack r1;
        java.lang.reflect.TypeVariable r2;
        java.lang.String r3, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r4, $r10;
        java.lang.reflect.Type[] r5;
        boolean $z0;
        java.lang.reflect.Type $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16;
        java.lang.Throwable $r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r19, r20;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack;

        r2 := @parameter1: java.lang.reflect.TypeVariable;

        r19 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r3 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        if r19 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null `bindings` passed (type variable \"");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label1:
        r4 = virtualinvoke r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType findBoundType(java.lang.String)>(r3);

        if r4 == null goto label2;

        return r4;

     label2:
        $z0 = virtualinvoke r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: boolean hasUnbound(java.lang.String)>(r3);

        if $z0 == 0 goto label3;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT>;

        return $r11;

     label3:
        r20 = virtualinvoke r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings withUnboundVariable(java.lang.String)>(r3);

        entermonitor r2;

     label4:
        r5 = interfaceinvoke r2.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r18 := @caughtexception;

        exitmonitor r2;

     label7:
        throw $r18;

     label8:
        $r9 = r5[0];

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, $r9, r20);

        return $r10;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromWildcard(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack, java.lang.reflect.WildcardType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack r1;
        java.lang.reflect.WildcardType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r3;
        java.lang.reflect.Type[] $r4;
        java.lang.reflect.Type $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack;

        r2 := @parameter1: java.lang.reflect.WildcardType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        $r4 = interfaceinvoke r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r5 = $r4[0];

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings)>(r1, $r5, r3);

        return $r6;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] $r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r2;
        java.lang.Class $r3, $r4, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: long serialVersionUID> = 1L;

        $r0 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)[0];

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] NO_TYPES> = $r0;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory instance> = $r1;

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings emptyBindings()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS> = $r2;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_STRING> = class "Ljava/lang/String;";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_OBJECT> = class "Ljava/lang/Object;";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_COMPARABLE> = class "Ljava/lang/Comparable;";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_CLASS> = class "Ljava/lang/Class;";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_ENUM> = class "Ljava/lang/Enum;";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_JSON_NODE> = class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonNode;";

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_BOOL> = $r3;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_INT> = $r4;

        $r5 = <java.lang.Long: java.lang.Class TYPE>;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_LONG> = $r5;

        $r6 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_BOOL>;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>($r7);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL> = $r6;

        $r8 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_INT>;

        specialinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>($r9);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT> = $r8;

        $r10 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_LONG>;

        specialinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>($r11);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG> = $r10;

        $r12 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_STRING>;

        specialinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>($r13);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING> = $r12;

        $r14 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_OBJECT>;

        specialinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>($r15);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT> = $r14;

        $r16 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType;

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_COMPARABLE>;

        specialinvoke $r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>($r17);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_COMPARABLE> = $r16;

        $r18 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType;

        $r19 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_ENUM>;

        specialinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>($r19);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_ENUM> = $r18;

        $r20 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType;

        $r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_CLASS>;

        specialinvoke $r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>($r21);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_CLASS> = $r20;

        $r22 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType;

        $r23 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class CLS_JSON_NODE>;

        specialinvoke $r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class)>($r23);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_JSON_NODE> = $r22;

        return;
    }
}
