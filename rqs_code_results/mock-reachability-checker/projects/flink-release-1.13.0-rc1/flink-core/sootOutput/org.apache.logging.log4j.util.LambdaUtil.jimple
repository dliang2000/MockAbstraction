public final class org.apache.logging.log4j.util.LambdaUtil extends java.lang.Object
{

    private void <init>()
    {
        org.apache.logging.log4j.util.LambdaUtil r0;

        r0 := @this: org.apache.logging.log4j.util.LambdaUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient java.lang.Object[] getAll(org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.util.Supplier[] r0;
        java.lang.Object[] r1;
        int $i0, $i1, i2;
        org.apache.logging.log4j.util.Supplier $r2;
        java.lang.Object $r3;

        r0 := @parameter0: org.apache.logging.log4j.util.Supplier[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (java.lang.Object)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label3;

        $r2 = r0[i2];

        $r3 = staticinvoke <org.apache.logging.log4j.util.LambdaUtil: java.lang.Object get(org.apache.logging.log4j.util.Supplier)>($r2);

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static java.lang.Object get(org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.util.Supplier r0;
        java.lang.Object r1, $r3;
        boolean $z0;
        org.apache.logging.log4j.message.Message $r2;

        r0 := @parameter0: org.apache.logging.log4j.util.Supplier;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<org.apache.logging.log4j.util.Supplier: java.lang.Object get()>();

        $z0 = r1 instanceof org.apache.logging.log4j.message.Message;

        if $z0 == 0 goto label2;

        $r2 = (org.apache.logging.log4j.message.Message) r1;

        $r3 = interfaceinvoke $r2.<org.apache.logging.log4j.message.Message: java.lang.String getFormattedMessage()>();

        goto label3;

     label2:
        $r3 = r1;

     label3:
        return $r3;
    }

    public static org.apache.logging.log4j.message.Message get(org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.util.MessageSupplier r0;
        org.apache.logging.log4j.message.Message $r1;

        r0 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.logging.log4j.util.MessageSupplier: org.apache.logging.log4j.message.Message get()>();

        return $r1;
    }

    public static org.apache.logging.log4j.message.Message getMessage(org.apache.logging.log4j.util.Supplier, org.apache.logging.log4j.message.MessageFactory)
    {
        org.apache.logging.log4j.util.Supplier r0;
        org.apache.logging.log4j.message.MessageFactory r1;
        java.lang.Object r2;
        boolean $z0;
        org.apache.logging.log4j.message.Message $r3;

        r0 := @parameter0: org.apache.logging.log4j.util.Supplier;

        r1 := @parameter1: org.apache.logging.log4j.message.MessageFactory;

        if r0 != null goto label1;

        return null;

     label1:
        r2 = interfaceinvoke r0.<org.apache.logging.log4j.util.Supplier: java.lang.Object get()>();

        $z0 = r2 instanceof org.apache.logging.log4j.message.Message;

        if $z0 == 0 goto label2;

        $r3 = (org.apache.logging.log4j.message.Message) r2;

        goto label3;

     label2:
        $r3 = interfaceinvoke r1.<org.apache.logging.log4j.message.MessageFactory: org.apache.logging.log4j.message.Message newMessage(java.lang.Object)>(r2);

     label3:
        return $r3;
    }
}
