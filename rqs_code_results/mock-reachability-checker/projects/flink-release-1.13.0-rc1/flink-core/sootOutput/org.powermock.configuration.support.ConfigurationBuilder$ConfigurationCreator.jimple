class org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator extends java.lang.Object
{
    private final org.powermock.configuration.support.ValueAliases alias;

    private void <init>(java.util.Map)
    {
        org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator r0;
        java.util.Map r1;
        org.powermock.configuration.support.ValueAliases $r2;

        r0 := @this: org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.powermock.configuration.support.ValueAliases;

        specialinvoke $r2.<org.powermock.configuration.support.ValueAliases: void <init>(java.util.Map)>(r1);

        r0.<org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator: org.powermock.configuration.support.ValueAliases alias> = $r2;

        return;
    }

    public org.powermock.configuration.Configuration create(java.lang.Class, java.util.Properties)
    {
        org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator r0;
        java.lang.Class r1;
        java.util.Properties r2;
        java.lang.Object $r3;
        java.lang.Exception $r5;
        org.powermock.PowerMockInternalException $r6;
        org.powermock.configuration.Configuration r7;

        r0 := @this: org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.util.Properties;

     label1:
        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>();

        r7 = (org.powermock.configuration.Configuration) $r3;

        if r2 == null goto label2;

        specialinvoke r0.<org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator: void mapConfiguration(java.lang.Class,org.powermock.configuration.Configuration,java.util.Properties)>(r1, r7, r2);

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.powermock.PowerMockInternalException;

        specialinvoke $r6.<org.powermock.PowerMockInternalException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void mapConfiguration(java.lang.Class, org.powermock.configuration.Configuration, java.util.Properties)
    {
        org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator r0;
        java.lang.Class r1;
        org.powermock.configuration.Configuration r2;
        java.util.Properties r3;
        org.powermock.configuration.support.ConfigurationMapper $r4;
        org.powermock.configuration.support.ValueAliases $r5;

        r0 := @this: org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.powermock.configuration.Configuration;

        r3 := @parameter2: java.util.Properties;

        $r4 = new org.powermock.configuration.support.ConfigurationMapper;

        $r5 = r0.<org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator: org.powermock.configuration.support.ValueAliases alias>;

        specialinvoke $r4.<org.powermock.configuration.support.ConfigurationMapper: void <init>(java.lang.Class,org.powermock.configuration.Configuration,org.powermock.configuration.support.ValueAliases)>(r1, r2, $r5);

        virtualinvoke $r4.<org.powermock.configuration.support.ConfigurationMapper: void map(java.util.Properties)>(r3);

        return;
    }

    void <init>(java.util.Map, org.powermock.configuration.support.ConfigurationBuilder$1)
    {
        org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator r0;
        java.util.Map r1;
        org.powermock.configuration.support.ConfigurationBuilder$1 r2;

        r0 := @this: org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.powermock.configuration.support.ConfigurationBuilder$1;

        specialinvoke r0.<org.powermock.configuration.support.ConfigurationBuilder$ConfigurationCreator: void <init>(java.util.Map)>(r1);

        return;
    }
}
