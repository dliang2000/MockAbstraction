public class javassist.bytecode.LineNumberAttribute extends javassist.bytecode.AttributeInfo
{
    public static final java.lang.String tag;

    void <init>(javassist.bytecode.ConstPool, int, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.LineNumberAttribute r0;
        javassist.bytecode.ConstPool r1;
        int i0;
        java.io.DataInputStream r2;

        r0 := @this: javassist.bytecode.LineNumberAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.DataInputStream;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r1, i0, r2);

        return;
    }

    private void <init>(javassist.bytecode.ConstPool, byte[])
    {
        javassist.bytecode.LineNumberAttribute r0;
        javassist.bytecode.ConstPool r1;
        byte[] r2;

        r0 := @this: javassist.bytecode.LineNumberAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: byte[];

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, "LineNumberTable", r2);

        return;
    }

    public int tableLength()
    {
        javassist.bytecode.LineNumberAttribute r0;
        byte[] $r1;
        int $i0;

        r0 := @this: javassist.bytecode.LineNumberAttribute;

        $r1 = r0.<javassist.bytecode.LineNumberAttribute: byte[] info>;

        $i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, 0);

        return $i0;
    }

    public int startPc(int)
    {
        javassist.bytecode.LineNumberAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.LineNumberAttribute;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.LineNumberAttribute: byte[] info>;

        $i1 = i0 * 4;

        $i2 = $i1 + 2;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    public int lineNumber(int)
    {
        javassist.bytecode.LineNumberAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.LineNumberAttribute;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.LineNumberAttribute: byte[] info>;

        $i1 = i0 * 4;

        $i2 = $i1 + 4;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    public int toLineNumber(int)
    {
        javassist.bytecode.LineNumberAttribute r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;

        r0 := @this: javassist.bytecode.LineNumberAttribute;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int tableLength()>();

        i6 = 0;

     label1:
        if i6 >= i1 goto label3;

        $i4 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int startPc(int)>(i6);

        if i0 >= $i4 goto label2;

        if i6 != 0 goto label3;

        $i5 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int lineNumber(int)>(0);

        return $i5;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        $i2 = i6 - 1;

        $i3 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int lineNumber(int)>($i2);

        return $i3;
    }

    public int toStartPc(int)
    {
        javassist.bytecode.LineNumberAttribute r0;
        int i0, i1, $i2, $i3, i4;

        r0 := @this: javassist.bytecode.LineNumberAttribute;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int tableLength()>();

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        $i2 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int lineNumber(int)>(i4);

        if i0 != $i2 goto label2;

        $i3 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int startPc(int)>(i4);

        return $i3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return -1;
    }

    public javassist.bytecode.LineNumberAttribute$Pc toNearPc(int)
    {
        javassist.bytecode.LineNumberAttribute r0;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7, i8;
        javassist.bytecode.LineNumberAttribute$Pc $r1;

        r0 := @this: javassist.bytecode.LineNumberAttribute;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int tableLength()>();

        i6 = 0;

        i7 = 0;

        if i1 <= 0 goto label1;

        $i5 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int lineNumber(int)>(0);

        i7 = $i5 - i0;

        i6 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int startPc(int)>(0);

     label1:
        i8 = 1;

     label2:
        if i8 >= i1 goto label6;

        $i4 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int lineNumber(int)>(i8);

        i2 = $i4 - i0;

        if i2 >= 0 goto label3;

        if i2 > i7 goto label4;

     label3:
        if i2 < 0 goto label5;

        if i2 < i7 goto label4;

        if i7 >= 0 goto label5;

     label4:
        i7 = i2;

        i6 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int startPc(int)>(i8);

     label5:
        i8 = i8 + 1;

        goto label2;

     label6:
        $r1 = new javassist.bytecode.LineNumberAttribute$Pc;

        specialinvoke $r1.<javassist.bytecode.LineNumberAttribute$Pc: void <init>()>();

        $r1.<javassist.bytecode.LineNumberAttribute$Pc: int index> = i6;

        $i3 = i0 + i7;

        $r1.<javassist.bytecode.LineNumberAttribute$Pc: int line> = $i3;

        return $r1;
    }

    public javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.LineNumberAttribute r0, $r5;
        javassist.bytecode.ConstPool r1;
        java.util.Map r2;
        byte[] r3, r4;
        int i0, i2;
        byte $b1;

        r0 := @this: javassist.bytecode.LineNumberAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        r3 = r0.<javassist.bytecode.LineNumberAttribute: byte[] info>;

        i0 = lengthof r3;

        r4 = newarray (byte)[i0];

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $b1 = r3[i2];

        r4[i2] = $b1;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r5 = new javassist.bytecode.LineNumberAttribute;

        specialinvoke $r5.<javassist.bytecode.LineNumberAttribute: void <init>(javassist.bytecode.ConstPool,byte[])>(r1, r4);

        return $r5;
    }

    void shiftPc(int, int, boolean)
    {
        javassist.bytecode.LineNumberAttribute r0;
        int i0, i1, i2, i3, i4, $i5, $i6, i7;
        boolean z0;
        byte[] $r1, $r2;

        r0 := @this: javassist.bytecode.LineNumberAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 = virtualinvoke r0.<javassist.bytecode.LineNumberAttribute: int tableLength()>();

        i7 = 0;

     label1:
        if i7 >= i2 goto label4;

        $i5 = i7 * 4;

        i3 = $i5 + 2;

        $r1 = r0.<javassist.bytecode.LineNumberAttribute: byte[] info>;

        i4 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, i3);

        if i4 > i0 goto label2;

        if z0 == 0 goto label3;

        if i4 != i0 goto label3;

     label2:
        $i6 = i4 + i1;

        $r2 = r0.<javassist.bytecode.LineNumberAttribute: byte[] info>;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i6, $r2, i3);

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.LineNumberAttribute: java.lang.String tag> = "LineNumberTable";

        return;
    }
}
