public class org.apache.flink.configuration.ConfigOption extends java.lang.Object
{
    private static final org.apache.flink.configuration.FallbackKey[] EMPTY;
    static final org.apache.flink.configuration.description.Description EMPTY_DESCRIPTION;
    private final java.lang.String key;
    private final org.apache.flink.configuration.FallbackKey[] fallbackKeys;
    private final java.lang.Object defaultValue;
    private final org.apache.flink.configuration.description.Description description;
    private final java.lang.Class clazz;
    private final boolean isList;

    java.lang.Class getClazz()
    {
        org.apache.flink.configuration.ConfigOption r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $r1 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Class clazz>;

        return $r1;
    }

    boolean isList()
    {
        org.apache.flink.configuration.ConfigOption r0;
        boolean $z0;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $z0 = r0.<org.apache.flink.configuration.ConfigOption: boolean isList>;

        return $z0;
    }

    transient void <init>(java.lang.String, java.lang.Class, org.apache.flink.configuration.description.Description, java.lang.Object, boolean, org.apache.flink.configuration.FallbackKey[])
    {
        org.apache.flink.configuration.ConfigOption r0;
        java.lang.String r1, $r7;
        java.lang.Class r2, $r9;
        org.apache.flink.configuration.description.Description r3;
        java.lang.Object r4, $r6, $r8;
        boolean z0;
        org.apache.flink.configuration.FallbackKey[] r5, $r11;
        int $i0;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.flink.configuration.description.Description;

        r4 := @parameter3: java.lang.Object;

        z0 := @parameter4: boolean;

        r5 := @parameter5: org.apache.flink.configuration.FallbackKey[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (java.lang.String) $r6;

        r0.<org.apache.flink.configuration.ConfigOption: java.lang.String key> = $r7;

        r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.description.Description description> = r3;

        r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue> = r4;

        if r5 == null goto label1;

        $i0 = lengthof r5;

        if $i0 != 0 goto label2;

     label1:
        $r11 = <org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] EMPTY>;

        goto label3;

     label2:
        $r11 = r5;

     label3:
        r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys> = $r11;

        $r8 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r9 = (java.lang.Class) $r8;

        r0.<org.apache.flink.configuration.ConfigOption: java.lang.Class clazz> = $r9;

        r0.<org.apache.flink.configuration.ConfigOption: boolean isList> = z0;

        return;
    }

    public transient org.apache.flink.configuration.ConfigOption withFallbackKeys(java.lang.String[])
    {
        org.apache.flink.configuration.ConfigOption r0, $r11;
        java.lang.String[] r1;
        java.util.stream.Stream r2, r3, $r5, $r8;
        org.apache.flink.configuration.FallbackKey[] r4, $r7;
        java.util.function.Function $r6;
        java.util.function.IntFunction $r9;
        java.lang.Object[] $r10;
        boolean $z0;
        java.lang.Object $r12;
        org.apache.flink.configuration.description.Description $r13;
        java.lang.Class $r14;
        java.lang.String $r15;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        r1 := @parameter0: java.lang.String[];

        $r5 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>(r1);

        $r6 = staticinvoke <org.apache.flink.configuration.ConfigOption$createFallbackKey__246: java.util.function.Function bootstrap$()>();

        r2 = interfaceinvoke $r5.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r6);

        $r7 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        r3 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>($r7);

        $r8 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream concat(java.util.stream.Stream,java.util.stream.Stream)>(r2, r3);

        $r9 = staticinvoke <org.apache.flink.configuration.ConfigOption$lambda_withFallbackKeys_0__247: java.util.function.IntFunction bootstrap$()>();

        $r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>($r9);

        r4 = (org.apache.flink.configuration.FallbackKey[]) $r10;

        $r11 = new org.apache.flink.configuration.ConfigOption;

        $r15 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.String key>;

        $r14 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Class clazz>;

        $r13 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.description.Description description>;

        $r12 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        $z0 = r0.<org.apache.flink.configuration.ConfigOption: boolean isList>;

        specialinvoke $r11.<org.apache.flink.configuration.ConfigOption: void <init>(java.lang.String,java.lang.Class,org.apache.flink.configuration.description.Description,java.lang.Object,boolean,org.apache.flink.configuration.FallbackKey[])>($r15, $r14, $r13, $r12, $z0, r4);

        return $r11;
    }

    public transient org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])
    {
        org.apache.flink.configuration.ConfigOption r0, $r11;
        java.lang.String[] r1;
        java.util.stream.Stream r2, r3, $r5, $r8;
        org.apache.flink.configuration.FallbackKey[] r4, $r7;
        java.util.function.Function $r6;
        java.util.function.IntFunction $r9;
        java.lang.Object[] $r10;
        boolean $z0;
        java.lang.Object $r12;
        org.apache.flink.configuration.description.Description $r13;
        java.lang.Class $r14;
        java.lang.String $r15;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        r1 := @parameter0: java.lang.String[];

        $r5 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>(r1);

        $r6 = staticinvoke <org.apache.flink.configuration.ConfigOption$createDeprecatedKey__149: java.util.function.Function bootstrap$()>();

        r2 = interfaceinvoke $r5.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r6);

        $r7 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        r3 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>($r7);

        $r8 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream concat(java.util.stream.Stream,java.util.stream.Stream)>(r3, r2);

        $r9 = staticinvoke <org.apache.flink.configuration.ConfigOption$lambda_withDeprecatedKeys_1__150: java.util.function.IntFunction bootstrap$()>();

        $r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>($r9);

        r4 = (org.apache.flink.configuration.FallbackKey[]) $r10;

        $r11 = new org.apache.flink.configuration.ConfigOption;

        $r15 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.String key>;

        $r14 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Class clazz>;

        $r13 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.description.Description description>;

        $r12 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        $z0 = r0.<org.apache.flink.configuration.ConfigOption: boolean isList>;

        specialinvoke $r11.<org.apache.flink.configuration.ConfigOption: void <init>(java.lang.String,java.lang.Class,org.apache.flink.configuration.description.Description,java.lang.Object,boolean,org.apache.flink.configuration.FallbackKey[])>($r15, $r14, $r13, $r12, $z0, r4);

        return $r11;
    }

    public org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)
    {
        org.apache.flink.configuration.ConfigOption r0, $r5;
        java.lang.String r1;
        org.apache.flink.configuration.description.Description$DescriptionBuilder $r2, $r3;
        org.apache.flink.configuration.description.Description $r4;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r5 = virtualinvoke r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r4);

        return $r5;
    }

    public org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)
    {
        org.apache.flink.configuration.ConfigOption r0, $r2;
        org.apache.flink.configuration.description.Description r1;
        org.apache.flink.configuration.FallbackKey[] $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Class $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        r1 := @parameter0: org.apache.flink.configuration.description.Description;

        $r2 = new org.apache.flink.configuration.ConfigOption;

        $r6 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.String key>;

        $r5 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Class clazz>;

        $r4 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        $z0 = r0.<org.apache.flink.configuration.ConfigOption: boolean isList>;

        $r3 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        specialinvoke $r2.<org.apache.flink.configuration.ConfigOption: void <init>(java.lang.String,java.lang.Class,org.apache.flink.configuration.description.Description,java.lang.Object,boolean,org.apache.flink.configuration.FallbackKey[])>($r6, $r5, r1, $r4, $z0, $r3);

        return $r2;
    }

    public java.lang.String key()
    {
        org.apache.flink.configuration.ConfigOption r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $r1 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.String key>;

        return $r1;
    }

    public boolean hasDefaultValue()
    {
        org.apache.flink.configuration.ConfigOption r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $r1 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object defaultValue()
    {
        org.apache.flink.configuration.ConfigOption r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $r1 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        return $r1;
    }

    public boolean hasDeprecatedKeys()
    {
        org.apache.flink.configuration.ConfigOption r0;
        org.apache.flink.configuration.FallbackKey[] $r1, $r2, $r3;
        java.util.stream.Stream $r4;
        java.util.function.Predicate $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $r2 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        $r1 = <org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] EMPTY>;

        if $r2 == $r1 goto label1;

        $r3 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        $r4 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>($r3);

        $r5 = staticinvoke <org.apache.flink.configuration.ConfigOption$isDeprecated__248: java.util.function.Predicate bootstrap$()>();

        $z0 = interfaceinvoke $r4.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r5);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.Iterable deprecatedKeys()
    {
        org.apache.flink.configuration.ConfigOption r0;
        org.apache.flink.configuration.FallbackKey[] $r1, $r2, $r3;
        java.util.stream.Stream $r4, $r6, $r8;
        java.util.function.Predicate $r5;
        java.util.function.Function $r7;
        java.util.stream.Collector $r9;
        java.lang.Object $r10;
        java.lang.Iterable $r11;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $r2 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        $r1 = <org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] EMPTY>;

        if $r2 != $r1 goto label1;

        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label2;

     label1:
        $r3 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        $r4 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>($r3);

        $r5 = staticinvoke <org.apache.flink.configuration.ConfigOption$isDeprecated__249: java.util.function.Predicate bootstrap$()>();

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r5);

        $r7 = staticinvoke <org.apache.flink.configuration.ConfigOption$getKey__250: java.util.function.Function bootstrap$()>();

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r7);

        $r9 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r9);

        $r11 = (java.lang.Iterable) $r10;

     label2:
        return $r11;
    }

    public boolean hasFallbackKeys()
    {
        org.apache.flink.configuration.ConfigOption r0;
        org.apache.flink.configuration.FallbackKey[] $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $r2 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        $r1 = <org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] EMPTY>;

        if $r2 == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Iterable fallbackKeys()
    {
        org.apache.flink.configuration.ConfigOption r0;
        org.apache.flink.configuration.FallbackKey[] $r1, $r2, $r3;
        java.util.List $r4;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $r2 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        $r1 = <org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] EMPTY>;

        if $r2 != $r1 goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label2;

     label1:
        $r3 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

     label2:
        return $r4;
    }

    public org.apache.flink.configuration.description.Description description()
    {
        org.apache.flink.configuration.ConfigOption r0;
        org.apache.flink.configuration.description.Description $r1;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $r1 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.description.Description description>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.configuration.ConfigOption r0, r2;
        java.lang.Object r1, $r8, $r9, $r10, $r11, $r12;
        java.lang.Class $r3;
        java.lang.String $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.configuration.FallbackKey[] $r6, $r7;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label6;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 != class "Lorg/apache/flink/configuration/ConfigOption;" goto label6;

        r2 = (org.apache.flink.configuration.ConfigOption) r1;

        $r5 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.String key>;

        $r4 = r2.<org.apache.flink.configuration.ConfigOption: java.lang.String key>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $r7 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        $r6 = r2.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r6);

        if $z1 == 0 goto label4;

        $r8 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        if $r8 != null goto label2;

        $r12 = r2.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        if $r12 != null goto label4;

        goto label3;

     label2:
        $r9 = r2.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        if $r9 == null goto label4;

        $r11 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        $r10 = r2.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        $z2 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label4;

     label3:
        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;

     label6:
        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.configuration.ConfigOption r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.flink.configuration.FallbackKey[] $r2;
        java.lang.Object $r3, $r4;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $r1 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.String key>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = 31 * $i0;

        $r2 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r2);

        $i3 = 17 * $i2;

        $i4 = $i1 + $i3;

        $r3 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        $i6 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i6 = 0;

     label2:
        $i5 = $i4 + $i6;

        return $i5;
    }

    public java.lang.String toString()
    {
        org.apache.flink.configuration.ConfigOption r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r5, $r6;
        java.lang.Object $r3;
        org.apache.flink.configuration.FallbackKey[] $r4;

        r0 := @this: org.apache.flink.configuration.ConfigOption;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.String key>;

        $r1[0] = $r2;

        $r3 = r0.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue>;

        $r1[1] = $r3;

        $r4 = r0.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] fallbackKeys>;

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r4);

        $r1[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Key: \'%s\' , default: %s (fallback keys: %s)", $r1);

        return $r6;
    }

    public static org.apache.flink.configuration.FallbackKey[] lambda$withDeprecatedKeys$1(int)
    {
        int i0;
        org.apache.flink.configuration.FallbackKey[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (org.apache.flink.configuration.FallbackKey)[i0];

        return $r0;
    }

    public static org.apache.flink.configuration.FallbackKey[] lambda$withFallbackKeys$0(int)
    {
        int i0;
        org.apache.flink.configuration.FallbackKey[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (org.apache.flink.configuration.FallbackKey)[i0];

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.flink.configuration.FallbackKey[] $r0;
        org.apache.flink.configuration.description.Description$DescriptionBuilder $r1, $r2;
        org.apache.flink.configuration.description.Description $r3;

        $r0 = newarray (org.apache.flink.configuration.FallbackKey)[0];

        <org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.FallbackKey[] EMPTY> = $r0;

        $r1 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r2 = virtualinvoke $r1.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        <org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.description.Description EMPTY_DESCRIPTION> = $r3;

        return;
    }
}
