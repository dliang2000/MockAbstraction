class org.joda.time.convert.LongConverter extends org.joda.time.convert.AbstractConverter implements org.joda.time.convert.InstantConverter, org.joda.time.convert.PartialConverter, org.joda.time.convert.DurationConverter
{
    static final org.joda.time.convert.LongConverter INSTANCE;

    protected void <init>()
    {
        org.joda.time.convert.LongConverter r0;

        r0 := @this: org.joda.time.convert.LongConverter;

        specialinvoke r0.<org.joda.time.convert.AbstractConverter: void <init>()>();

        return;
    }

    public long getInstantMillis(java.lang.Object, org.joda.time.Chronology)
    {
        org.joda.time.convert.LongConverter r0;
        java.lang.Object r1;
        org.joda.time.Chronology r2;
        java.lang.Long $r3;
        long $l0;

        r0 := @this: org.joda.time.convert.LongConverter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.joda.time.Chronology;

        $r3 = (java.lang.Long) r1;

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public long getDurationMillis(java.lang.Object)
    {
        org.joda.time.convert.LongConverter r0;
        java.lang.Object r1;
        java.lang.Long $r2;
        long $l0;

        r0 := @this: org.joda.time.convert.LongConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Long) r1;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public java.lang.Class getSupportedType()
    {
        org.joda.time.convert.LongConverter r0;

        r0 := @this: org.joda.time.convert.LongConverter;

        return class "Ljava/lang/Long;";
    }

    static void <clinit>()
    {
        org.joda.time.convert.LongConverter $r0;

        $r0 = new org.joda.time.convert.LongConverter;

        specialinvoke $r0.<org.joda.time.convert.LongConverter: void <init>()>();

        <org.joda.time.convert.LongConverter: org.joda.time.convert.LongConverter INSTANCE> = $r0;

        return;
    }
}
