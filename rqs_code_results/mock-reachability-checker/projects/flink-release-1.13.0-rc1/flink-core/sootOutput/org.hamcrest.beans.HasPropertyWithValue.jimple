public class org.hamcrest.beans.HasPropertyWithValue extends org.hamcrest.TypeSafeDiagnosingMatcher
{
    private static final org.hamcrest.Condition$Step WITH_READ_METHOD;
    private final java.lang.String propertyName;
    private final org.hamcrest.Matcher valueMatcher;

    public void <init>(java.lang.String, org.hamcrest.Matcher)
    {
        org.hamcrest.beans.HasPropertyWithValue r0;
        java.lang.String r1;
        org.hamcrest.Matcher r2, $r3;

        r0 := @this: org.hamcrest.beans.HasPropertyWithValue;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.hamcrest.Matcher;

        specialinvoke r0.<org.hamcrest.TypeSafeDiagnosingMatcher: void <init>()>();

        r0.<org.hamcrest.beans.HasPropertyWithValue: java.lang.String propertyName> = r1;

        $r3 = staticinvoke <org.hamcrest.beans.HasPropertyWithValue: org.hamcrest.Matcher nastyGenericsWorkaround(org.hamcrest.Matcher)>(r2);

        r0.<org.hamcrest.beans.HasPropertyWithValue: org.hamcrest.Matcher valueMatcher> = $r3;

        return;
    }

    public boolean matchesSafely(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.beans.HasPropertyWithValue r0;
        java.lang.Object r1;
        org.hamcrest.Description r2;
        org.hamcrest.Condition $r3, $r5, $r7;
        org.hamcrest.Condition$Step $r4, $r6;
        java.lang.StringBuilder $r8, $r10, $r12, $r13;
        org.hamcrest.Matcher $r9;
        java.lang.String $r11, $r14;
        boolean $z0;

        r0 := @this: org.hamcrest.beans.HasPropertyWithValue;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        $r3 = specialinvoke r0.<org.hamcrest.beans.HasPropertyWithValue: org.hamcrest.Condition propertyOn(java.lang.Object,org.hamcrest.Description)>(r1, r2);

        $r4 = <org.hamcrest.beans.HasPropertyWithValue: org.hamcrest.Condition$Step WITH_READ_METHOD>;

        $r5 = virtualinvoke $r3.<org.hamcrest.Condition: org.hamcrest.Condition and(org.hamcrest.Condition$Step)>($r4);

        $r6 = specialinvoke r0.<org.hamcrest.beans.HasPropertyWithValue: org.hamcrest.Condition$Step withPropertyValue(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r5.<org.hamcrest.Condition: org.hamcrest.Condition and(org.hamcrest.Condition$Step)>($r6);

        $r9 = r0.<org.hamcrest.beans.HasPropertyWithValue: org.hamcrest.Matcher valueMatcher>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("property \'");

        $r11 = r0.<org.hamcrest.beans.HasPropertyWithValue: java.lang.String propertyName>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r7.<org.hamcrest.Condition: boolean matching(org.hamcrest.Matcher,java.lang.String)>($r9, $r14);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.beans.HasPropertyWithValue r0;
        org.hamcrest.Description r1, $r2, $r4, $r5, $r7;
        java.lang.String $r3;
        org.hamcrest.Matcher $r6;

        r0 := @this: org.hamcrest.beans.HasPropertyWithValue;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("hasProperty(");

        $r3 = r0.<org.hamcrest.beans.HasPropertyWithValue: java.lang.String propertyName>;

        $r4 = interfaceinvoke $r2.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r4.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(", ");

        $r6 = r0.<org.hamcrest.beans.HasPropertyWithValue: org.hamcrest.Matcher valueMatcher>;

        $r7 = interfaceinvoke $r5.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r6);

        interfaceinvoke $r7.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(")");

        return;
    }

    private org.hamcrest.Condition propertyOn(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.beans.HasPropertyWithValue r0;
        java.lang.Object r1;
        org.hamcrest.Description r2;
        java.beans.PropertyDescriptor r3;
        java.lang.String $r4, $r8, $r11;
        org.hamcrest.Condition $r5, $r13;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;

        r0 := @this: org.hamcrest.beans.HasPropertyWithValue;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        $r4 = r0.<org.hamcrest.beans.HasPropertyWithValue: java.lang.String propertyName>;

        r3 = staticinvoke <org.hamcrest.beans.PropertyUtil: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String,java.lang.Object)>($r4, r1);

        if r3 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No property \"");

        $r8 = r0.<org.hamcrest.beans.HasPropertyWithValue: java.lang.String propertyName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r11);

        $r13 = staticinvoke <org.hamcrest.Condition: org.hamcrest.Condition notMatched()>();

        return $r13;

     label1:
        $r5 = staticinvoke <org.hamcrest.Condition: org.hamcrest.Condition matched(java.lang.Object,org.hamcrest.Description)>(r3, r2);

        return $r5;
    }

    private org.hamcrest.Condition$Step withPropertyValue(java.lang.Object)
    {
        org.hamcrest.beans.HasPropertyWithValue r0;
        java.lang.Object r1;
        org.hamcrest.beans.HasPropertyWithValue$1 $r2;

        r0 := @this: org.hamcrest.beans.HasPropertyWithValue;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.hamcrest.beans.HasPropertyWithValue$1;

        specialinvoke $r2.<org.hamcrest.beans.HasPropertyWithValue$1: void <init>(org.hamcrest.beans.HasPropertyWithValue,java.lang.Object)>(r0, r1);

        return $r2;
    }

    private static org.hamcrest.Matcher nastyGenericsWorkaround(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;

        r0 := @parameter0: org.hamcrest.Matcher;

        return r0;
    }

    private static org.hamcrest.Condition$Step withReadMethod()
    {
        org.hamcrest.beans.HasPropertyWithValue$2 $r0;

        $r0 = new org.hamcrest.beans.HasPropertyWithValue$2;

        specialinvoke $r0.<org.hamcrest.beans.HasPropertyWithValue$2: void <init>()>();

        return $r0;
    }

    public static org.hamcrest.Matcher hasProperty(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1;
        org.hamcrest.beans.HasPropertyWithValue $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = new org.hamcrest.beans.HasPropertyWithValue;

        specialinvoke $r2.<org.hamcrest.beans.HasPropertyWithValue: void <init>(java.lang.String,org.hamcrest.Matcher)>(r0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        org.hamcrest.Condition$Step $r0;

        $r0 = staticinvoke <org.hamcrest.beans.HasPropertyWithValue: org.hamcrest.Condition$Step withReadMethod()>();

        <org.hamcrest.beans.HasPropertyWithValue: org.hamcrest.Condition$Step WITH_READ_METHOD> = $r0;

        return;
    }
}
