public class org.apache.flink.api.common.state.ReducingStateDescriptorTest extends org.apache.flink.util.TestLogger
{

    public void <init>()
    {
        org.apache.flink.api.common.state.ReducingStateDescriptorTest r0;

        r0 := @this: org.apache.flink.api.common.state.ReducingStateDescriptorTest;

        specialinvoke r0.<org.apache.flink.util.TestLogger: void <init>()>();

        return;
    }

    public void testReducingStateDescriptor() throws java.lang.Exception
    {
        org.apache.flink.api.common.state.ReducingStateDescriptorTest r0;
        org.apache.flink.api.common.functions.ReduceFunction r1, $r11;
        org.apache.flink.api.common.state.ReducingStateDescriptor r4, $r7;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer $r5;
        org.apache.flink.api.common.ExecutionConfig $r6;
        java.lang.String $r8, $r13;
        org.apache.flink.api.common.typeutils.TypeSerializer $r9, $r10, $r14, $r15;
        java.io.Serializable $r12;

        r0 := @this: org.apache.flink.api.common.state.ReducingStateDescriptorTest;

        r1 = staticinvoke <org.apache.flink.api.common.state.ReducingStateDescriptorTest$lambda_testReducingStateDescriptor_1e92f7b0_1__91: org.apache.flink.api.common.functions.ReduceFunction bootstrap$()>();

        $r5 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer;

        $r6 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r6.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        specialinvoke $r5.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: void <init>(java.lang.Class,org.apache.flink.api.common.ExecutionConfig)>(class "Ljava/lang/String;", $r6);

        $r7 = new org.apache.flink.api.common.state.ReducingStateDescriptor;

        specialinvoke $r7.<org.apache.flink.api.common.state.ReducingStateDescriptor: void <init>(java.lang.String,org.apache.flink.api.common.functions.ReduceFunction,org.apache.flink.api.common.typeutils.TypeSerializer)>("testName", r1, $r5);

        $r8 = virtualinvoke $r7.<org.apache.flink.api.common.state.ReducingStateDescriptor: java.lang.String getName()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("testName", $r8);

        $r9 = virtualinvoke $r7.<org.apache.flink.api.common.state.ReducingStateDescriptor: org.apache.flink.api.common.typeutils.TypeSerializer getSerializer()>();

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r9);

        $r10 = virtualinvoke $r7.<org.apache.flink.api.common.state.ReducingStateDescriptor: org.apache.flink.api.common.typeutils.TypeSerializer getSerializer()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r10);

        $r11 = virtualinvoke $r7.<org.apache.flink.api.common.state.ReducingStateDescriptor: org.apache.flink.api.common.functions.ReduceFunction getReduceFunction()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r11);

        $r12 = staticinvoke <org.apache.flink.core.testutils.CommonTestUtils: java.io.Serializable createCopySerializable(java.io.Serializable)>($r7);

        r4 = (org.apache.flink.api.common.state.ReducingStateDescriptor) $r12;

        $r13 = virtualinvoke r4.<org.apache.flink.api.common.state.ReducingStateDescriptor: java.lang.String getName()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("testName", $r13);

        $r14 = virtualinvoke r4.<org.apache.flink.api.common.state.ReducingStateDescriptor: org.apache.flink.api.common.typeutils.TypeSerializer getSerializer()>();

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r14);

        $r15 = virtualinvoke r4.<org.apache.flink.api.common.state.ReducingStateDescriptor: org.apache.flink.api.common.typeutils.TypeSerializer getSerializer()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r15);

        return;
    }

    public void testHashCodeEquals() throws java.lang.Exception
    {
        org.apache.flink.api.common.state.ReducingStateDescriptorTest r0;
        org.apache.flink.api.common.functions.ReduceFunction r2;
        org.apache.flink.api.common.state.ReducingStateDescriptor r6, $r7, $r8, $r9;
        org.apache.flink.api.common.typeutils.base.StringSerializer $r10;
        int $i0, $i2, $i4, $i6;
        long $l1, $l3, $l5, $l7;
        java.io.Serializable $r11;
        org.apache.flink.api.common.ExecutionConfig $r12, $r13;

        r0 := @this: org.apache.flink.api.common.state.ReducingStateDescriptorTest;

        r2 = staticinvoke <org.apache.flink.api.common.state.ReducingStateDescriptorTest$lambda_testHashCodeEquals_1e92f7b0_1__92: org.apache.flink.api.common.functions.ReduceFunction bootstrap$()>();

        $r7 = new org.apache.flink.api.common.state.ReducingStateDescriptor;

        specialinvoke $r7.<org.apache.flink.api.common.state.ReducingStateDescriptor: void <init>(java.lang.String,org.apache.flink.api.common.functions.ReduceFunction,java.lang.Class)>("testName", r2, class "Ljava/lang/String;");

        $r8 = new org.apache.flink.api.common.state.ReducingStateDescriptor;

        specialinvoke $r8.<org.apache.flink.api.common.state.ReducingStateDescriptor: void <init>(java.lang.String,org.apache.flink.api.common.functions.ReduceFunction,java.lang.Class)>("testName", r2, class "Ljava/lang/String;");

        $r9 = new org.apache.flink.api.common.state.ReducingStateDescriptor;

        $r10 = <org.apache.flink.api.common.typeutils.base.StringSerializer: org.apache.flink.api.common.typeutils.base.StringSerializer INSTANCE>;

        specialinvoke $r9.<org.apache.flink.api.common.state.ReducingStateDescriptor: void <init>(java.lang.String,org.apache.flink.api.common.functions.ReduceFunction,org.apache.flink.api.common.typeutils.TypeSerializer)>("testName", r2, $r10);

        $i0 = virtualinvoke $r7.<org.apache.flink.api.common.state.ReducingStateDescriptor: int hashCode()>();

        $l1 = (long) $i0;

        $i2 = virtualinvoke $r8.<org.apache.flink.api.common.state.ReducingStateDescriptor: int hashCode()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3);

        $i4 = virtualinvoke $r7.<org.apache.flink.api.common.state.ReducingStateDescriptor: int hashCode()>();

        $l5 = (long) $i4;

        $i6 = virtualinvoke $r9.<org.apache.flink.api.common.state.ReducingStateDescriptor: int hashCode()>();

        $l7 = (long) $i6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r9);

        $r11 = staticinvoke <org.apache.flink.core.testutils.CommonTestUtils: java.io.Serializable createCopySerializable(java.io.Serializable)>($r7);

        r6 = (org.apache.flink.api.common.state.ReducingStateDescriptor) $r11;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, r6);

        $r12 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r12.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        virtualinvoke r6.<org.apache.flink.api.common.state.ReducingStateDescriptor: void initializeSerializerUnlessSet(org.apache.flink.api.common.ExecutionConfig)>($r12);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, r6);

        $r13 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r13.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        virtualinvoke $r7.<org.apache.flink.api.common.state.ReducingStateDescriptor: void initializeSerializerUnlessSet(org.apache.flink.api.common.ExecutionConfig)>($r13);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8);

        return;
    }

    private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda)
    {
        java.lang.invoke.SerializedLambda r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.apache.flink.api.common.functions.ReduceFunction $r7, $r13;
        byte b3;
        java.lang.IllegalArgumentException $r14;

        r0 := @parameter0: java.lang.invoke.SerializedLambda;

        r1 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getImplMethodName()>();

        b3 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case 1054968527: goto label2;
            case 1678514804: goto label1;
            default: goto label3;
        };

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$testHashCodeEquals$1e92f7b0$1");

        if $z0 == 0 goto label3;

        b3 = 0;

        goto label3;

     label2:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$testReducingStateDescriptor$1e92f7b0$1");

        if $z11 == 0 goto label3;

        b3 = 1;

     label3:
        lookupswitch(b3)
        {
            case 0: goto label4;
            case 1: goto label5;
            default: goto label6;
        };

     label4:
        $i2 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();

        if $i2 != 6 goto label6;

        $r8 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getFunctionalInterfaceClass()>();

        $z6 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>("org/apache/flink/api/common/functions/ReduceFunction");

        if $z6 == 0 goto label6;

        $r9 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getFunctionalInterfaceMethodName()>();

        $z7 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>("reduce");

        if $z7 == 0 goto label6;

        $r10 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getFunctionalInterfaceMethodSignature()>();

        $z8 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>("(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");

        if $z8 == 0 goto label6;

        $r11 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getImplClass()>();

        $z9 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>("org/apache/flink/api/common/state/ReducingStateDescriptorTest");

        if $z9 == 0 goto label6;

        $r12 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getImplMethodSignature()>();

        $z10 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>("(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");

        if $z10 == 0 goto label6;

        $r13 = staticinvoke <org.apache.flink.api.common.state.ReducingStateDescriptorTest$lambda_testHashCodeEquals_1e92f7b0_1__554: org.apache.flink.api.common.functions.ReduceFunction bootstrap$()>();

        return $r13;

     label5:
        $i1 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();

        if $i1 != 6 goto label6;

        $r2 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getFunctionalInterfaceClass()>();

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>("org/apache/flink/api/common/functions/ReduceFunction");

        if $z1 == 0 goto label6;

        $r3 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getFunctionalInterfaceMethodName()>();

        $z2 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>("reduce");

        if $z2 == 0 goto label6;

        $r4 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getFunctionalInterfaceMethodSignature()>();

        $z3 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>("(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");

        if $z3 == 0 goto label6;

        $r5 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getImplClass()>();

        $z4 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>("org/apache/flink/api/common/state/ReducingStateDescriptorTest");

        if $z4 == 0 goto label6;

        $r6 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getImplMethodSignature()>();

        $z5 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>("(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");

        if $z5 == 0 goto label6;

        $r7 = staticinvoke <org.apache.flink.api.common.state.ReducingStateDescriptorTest$lambda_testReducingStateDescriptor_1e92f7b0_1__553: org.apache.flink.api.common.functions.ReduceFunction bootstrap$()>();

        return $r7;

     label6:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid lambda deserialization");

        throw $r14;
    }

    public static java.lang.String lambda$testHashCodeEquals$1e92f7b0$1(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        return r0;
    }

    public static java.lang.String lambda$testReducingStateDescriptor$1e92f7b0$1(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        return r0;
    }
}
