public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase
{
    private static final int FEAT_MASK_TRAILING_COMMA;
    private static final int FEAT_MASK_LEADING_ZEROS;
    private static final int FEAT_MASK_NON_NUM_NUMBERS;
    private static final int FEAT_MASK_ALLOW_MISSING;
    private static final int FEAT_MASK_ALLOW_SINGLE_QUOTES;
    private static final int FEAT_MASK_ALLOW_UNQUOTED_NAMES;
    private static final int FEAT_MASK_ALLOW_JAVA_COMMENTS;
    private static final int FEAT_MASK_ALLOW_YAML_COMMENTS;
    protected static final int[] _icLatin1;
    protected java.io.Reader _reader;
    protected char[] _inputBuffer;
    protected boolean _bufferRecyclable;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols;
    protected final int _hashSeed;
    protected boolean _tokenIncomplete;
    protected long _nameStartOffset;
    protected int _nameStartRow;
    protected int _nameStartCol;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer, char[], int, int, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        int i0, i1, i2, $i3;
        java.io.Reader r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer r4;
        char[] r5;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.Reader;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        r5 := @parameter5: char[];

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        z0 := @parameter8: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int)>(r1, i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.io.Reader _reader> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer> = r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd> = i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols> = r4;

        $i3 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int hashSeed()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _hashSeed> = $i3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _bufferRecyclable> = z0;

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, int, java.io.Reader, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        int i0, $i1;
        java.io.Reader r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer r4;
        char[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.Reader;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int)>(r1, i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.io.Reader _reader> = r2;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] allocTokenBuffer()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer> = $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols> = r4;

        $i1 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int hashSeed()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _hashSeed> = $i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _bufferRecyclable> = 1;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec getCodec()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        return $r1;
    }

    public void setCodec(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r1;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet JSON_READ_CAPABILITIES>;

        return $r1;
    }

    public int releaseBuffered(java.io.Writer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.io.Writer r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        char[] $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: java.io.Writer;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i0 = $i3 - $i2;

        if i0 >= 1 goto label1;

        return 0;

     label1:
        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i5 = $i4 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i5;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r2, i1, i0);

        return i0;
    }

    public java.lang.Object getInputSource()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.io.Reader $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.io.Reader _reader>;

        return $r1;
    }

    protected char getNextChar(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.lang.String r1;
        char $c0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char getNextChar(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r1, null);

        return $c0;
    }

    protected char getNextChar(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        char[] $r3;
        char $c4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label1;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r1, r2);

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i3;

        $c4 = $r3[$i2];

        return $c4;
    }

    protected void _closeInput() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.io.Reader $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r2;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.io.Reader _reader>;

        if $r1 == null goto label3;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        $z0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: boolean isResourceManaged()>();

        if $z0 != 0 goto label1;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature AUTO_CLOSE_SOURCE>;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)>($r4);

        if $z1 == 0 goto label2;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.io.Reader _reader>;

        virtualinvoke $r3.<java.io.Reader: void close()>();

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.io.Reader _reader> = null;

     label3:
        return;
    }

    protected void _releaseBuffers() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase: void _releaseBuffers()>();

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void release()>();

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _bufferRecyclable>;

        if $z0 == 0 goto label1;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        if r1 == null goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer> = null;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseTokenBuffer(char[])>(r1);

     label1:
        return;
    }

    protected void _loadMoreGuaranteed() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOF()>();

     label1:
        return;
    }

    protected boolean _loadMore() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, i1, $i2, $i3, $i7, $i8;
        java.io.Reader $r1, $r4;
        char[] $r2, $r3;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        long $l4, $l5, $l6, $l9, $l10, $l11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.io.Reader _reader>;

        if $r1 == null goto label2;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.io.Reader _reader>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i2 = lengthof $r2;

        i0 = virtualinvoke $r4.<java.io.Reader: int read(char[],int,int)>($r3, 0, $i2);

        if i0 <= 0 goto label1;

        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        $l5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long _currInputProcessed>;

        $l4 = (long) i1;

        $l6 = $l5 + $l4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long _currInputProcessed> = $l6;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart>;

        $i8 = $i7 - i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart> = $i8;

        $l10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long _nameStartOffset>;

        $l9 = (long) i1;

        $l11 = $l10 - $l9;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long _nameStartOffset> = $l11;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd> = i0;

        return 1;

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _closeInput()>();

        if i0 != 0 goto label2;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reader returned 0 characters when trying to read ");

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label2:
        return 0;
    }

    public final java.lang.String getText() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3;
        java.lang.String $r4, $r6;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r2 != $r1 goto label2;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString()>();

     label1:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r6;

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _getText2(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r3);

        return $r4;
    }

    public int getText(java.io.Writer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.io.Writer r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r2, $r3, $r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r5, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r6;
        java.lang.String r8;
        char[] r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: java.io.Writer;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if r2 != $r3 goto label2;

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z1 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString()>();

     label1:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i3 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int contentsToWriter(java.io.Writer)>(r1);

        return $i3;

     label2:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if r2 != $r4 goto label3;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        r8 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String getCurrentName()>();

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(r8);

        $i2 = virtualinvoke r8.<java.lang.String: int length()>();

        return $i2;

     label3:
        if r2 == null goto label5;

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: boolean isNumeric()>();

        if $z0 == 0 goto label4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i1 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int contentsToWriter(java.io.Writer)>(r1);

        return $i1;

     label4:
        r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: char[] asCharArray()>();

        virtualinvoke r1.<java.io.Writer: void write(char[])>(r9);

        $i0 = lengthof r9;

        return $i0;

     label5:
        return 0;
    }

    public final java.lang.String getValueAsString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3, $r4;
        java.lang.String $r5, $r6, $r8;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r2 != $r1 goto label2;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString()>();

     label1:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r8;

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r4 != $r3 goto label3;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String getCurrentName()>();

        return $r6;

     label3:
        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase: java.lang.String getValueAsString(java.lang.String)>(null);

        return $r5;
    }

    public final java.lang.String getValueAsString(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.lang.String r1, $r6, $r7, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r5;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r3 != $r2 goto label2;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString()>();

     label1:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r9;

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r5 != $r4 goto label3;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String getCurrentName()>();

        return $r7;

     label3:
        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase: java.lang.String getValueAsString(java.lang.String)>(r1);

        return $r6;
    }

    protected final java.lang.String _getText2(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2;
        java.lang.String $r3, $r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        if r1 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int id()>();

        tableswitch($i0)
        {
            case 5: goto label2;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label3;
            default: goto label4;
        };

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String getCurrentName()>();

        return $r5;

     label3:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r3;

     label4:
        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: java.lang.String asString()>();

        return $r6;
    }

    public final char[] getTextCharacters() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r10;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4;
        char[] $r5, $r6, $r7, $r9, $r11, $r12, $r13, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        if $r2 == null goto label8;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $i1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int id()>();

        tableswitch($i1)
        {
            case 5: goto label1;
            case 6: goto label5;
            case 7: goto label6;
            case 8: goto label6;
            default: goto label7;
        };

     label1:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _nameCopied>;

        if $z1 != 0 goto label4;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        r1 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String getCurrentName()>();

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _nameCopyBuffer>;

        if $r5 != null goto label2;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] allocNameCopyBuffer(int)>(i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _nameCopyBuffer> = $r9;

        goto label3;

     label2:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _nameCopyBuffer>;

        $i2 = lengthof $r6;

        if $i2 >= i0 goto label3;

        $r7 = newarray (char)[i0];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _nameCopyBuffer> = $r7;

     label3:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _nameCopyBuffer>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, $r12, 0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _nameCopied> = 1;

     label4:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _nameCopyBuffer>;

        return $r13;

     label5:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString()>();

     label6:
        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r15 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getTextBuffer()>();

        return $r15;

     label7:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r11 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: char[] asCharArray()>();

        return $r11;

     label8:
        return null;
    }

    public final int getTextLength() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r5;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r3;
        java.lang.String $r4;
        char[] $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        if $r1 == null goto label5;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $i0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int id()>();

        tableswitch($i0)
        {
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label3;
            case 8: goto label3;
            default: goto label4;
        };

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String getCurrentName()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        return $i1;

     label2:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString()>();

     label3:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i3 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int size()>();

        return $i3;

     label4:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: char[] asCharArray()>();

        $i2 = lengthof $r6;

        return $i2;

     label5:
        return 0;
    }

    public final int getTextOffset() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        if $r1 == null goto label4;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $i0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int id()>();

        tableswitch($i0)
        {
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label3;
            case 8: goto label3;
            default: goto label4;
        };

     label1:
        return 0;

     label2:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString()>();

     label3:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getTextOffset()>();

        return $i1;

     label4:
        return 0;
    }

    public byte[] getBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r5, $r12;
        boolean $z0;
        byte[] $r6, $r8, $r9, $r16, $r17, $r29;
        java.lang.String $r7, $r15, $r23, $r25;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r19, $r20, $r21, $r22, $r24;
        java.lang.IllegalArgumentException $r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException $r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r28;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        if $r3 != $r2 goto label1;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] _binaryValue>;

        if $r16 == null goto label1;

        $r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] _binaryValue>;

        return $r17;

     label1:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r5 == $r4 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current token (");

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportError(java.lang.String)>($r15);

     label2:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label7;

     label3:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] _decodeBase64(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] _binaryValue> = $r9;

     label4:
        goto label6;

     label5:
        $r18 := @caughtexception;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to decode VALUE_STRING as base64 (");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r23 = virtualinvoke $r18.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String)>($r25);

        throw $r26;

     label6:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        goto label8;

     label7:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] _binaryValue>;

        if $r6 != null goto label8;

        r28 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder()>();

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String getText()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _decodeBase64(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>($r7, r28, r1);

        $r8 = virtualinvoke r28.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] _binaryValue> = $r8;

     label8:
        $r29 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] _binaryValue>;

        return $r29;

        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
    }

    public int readBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.OutputStream r2;
        int i0, $i1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r6, $r7, $r9;
        java.lang.Throwable $r8;
        byte[] r10, r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.OutputStream;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r5 == $r4 goto label2;

     label1:
        r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] getBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r10);

        $i1 = lengthof r10;

        return $i1;

     label2:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        r11 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] allocBase64Buffer()>();

     label3:
        i0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _readBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[])>(r1, r2, r11);

     label4:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseBase64Buffer(byte[])>(r11);

        return i0;

     label5:
        $r8 := @caughtexception;

     label6:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseBase64Buffer(byte[])>(r11);

        throw $r8;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected int _readBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[]) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.OutputStream r2;
        byte[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i24, $i27, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38, $i40, $i42, $i43, i44, i45, $i46, $i47, i49, i50, i52, i53, i55, i56, i58, i59, i61, i62, i63, i64, i65, i66, i67, i68;
        char[] $r4, $r5, $r6, $r7, $r9;
        byte $b20, $b22, $b23, $b25, $b26, $b28, $b29, $b37, $b41;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        char $c39, c48, c51, c54, c57, c60;
        java.lang.String $r14;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.OutputStream;

        r3 := @parameter2: byte[];

        i44 = 0;

        $i1 = lengthof r3;

        i0 = $i1 - 3;

        i45 = 0;

     label01:
        $i46 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i47 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i46 < $i47 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _loadMoreGuaranteed()>();

     label02:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i3;

        c48 = $r4[$i2];

        if c48 <= 32 goto label01;

        i49 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(char)>(c48);

        if i49 >= 0 goto label04;

        if c48 != 34 goto label03;

        goto label18;

     label03:
        i49 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,char,int)>(r1, c48, 0);

        if i49 >= 0 goto label04;

        goto label01;

     label04:
        if i44 <= i0 goto label05;

        i45 = i45 + i44;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, i44);

        i44 = 0;

     label05:
        i50 = i49;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i5 < $i4 goto label06;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _loadMoreGuaranteed()>();

     label06:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i7;

        c51 = $r5[$i6];

        i52 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(char)>(c51);

        if i52 >= 0 goto label07;

        i52 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,char,int)>(r1, c51, 1);

     label07:
        $i8 = i50 << 6;

        i53 = $i8 | i52;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i10 < $i9 goto label08;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _loadMoreGuaranteed()>();

     label08:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i12;

        c54 = $r6[$i11];

        i55 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(char)>(c54);

        if i55 >= 0 goto label13;

        if i55 == -2 goto label10;

        if c54 != 34 goto label09;

        i56 = i53 >> 4;

        $i40 = i44;

        i44 = i44 + 1;

        $b41 = (byte) i56;

        r3[$i40] = $b41;

        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPadding()>();

        if $z2 == 0 goto label18;

        $i42 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i43 = $i42 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i43;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _handleBase64MissingPadding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        goto label18;

     label09:
        i55 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,char,int)>(r1, c54, 2);

     label10:
        if i55 != -2 goto label13;

        $i33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i32 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i33 < $i32 goto label11;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _loadMoreGuaranteed()>();

     label11:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i34 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i35 = $i34 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i35;

        c57 = $r9[$i34];

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPaddingChar(char)>(c57);

        if $z1 != 0 goto label12;

        $i38 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,char,int)>(r1, c57, 3);

        if $i38 == -2 goto label12;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected padding character \'");

        $c39 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: char getPaddingChar()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c39);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.IllegalArgumentException reportInvalidBase64Char(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)>(r1, c57, 3, $r14);

        throw $r15;

     label12:
        i58 = i53 >> 4;

        $i36 = i44;

        i44 = i44 + 1;

        $b37 = (byte) i58;

        r3[$i36] = $b37;

        goto label01;

     label13:
        $i13 = i53 << 6;

        i59 = $i13 | i55;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i15 < $i14 goto label14;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _loadMoreGuaranteed()>();

     label14:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i17 = $i16 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i17;

        c60 = $r7[$i16];

        i61 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(char)>(c60);

        if i61 >= 0 goto label17;

        if i61 == -2 goto label16;

        if c60 != 34 goto label15;

        i62 = i59 >> 2;

        i63 = i44 + 1;

        $i27 = i62 >> 8;

        $b28 = (byte) $i27;

        r3[i44] = $b28;

        i44 = i63 + 1;

        $b29 = (byte) i62;

        r3[i63] = $b29;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPadding()>();

        if $z0 == 0 goto label18;

        $i30 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i31 = $i30 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i31;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _handleBase64MissingPadding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        goto label18;

     label15:
        i61 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,char,int)>(r1, c60, 3);

     label16:
        if i61 != -2 goto label17;

        i64 = i59 >> 2;

        i65 = i44 + 1;

        $i24 = i64 >> 8;

        $b25 = (byte) $i24;

        r3[i44] = $b25;

        i44 = i65 + 1;

        $b26 = (byte) i64;

        r3[i65] = $b26;

        goto label01;

     label17:
        $i18 = i59 << 6;

        i66 = $i18 | i61;

        i67 = i44 + 1;

        $i19 = i66 >> 16;

        $b20 = (byte) $i19;

        r3[i44] = $b20;

        i68 = i67 + 1;

        $i21 = i66 >> 8;

        $b22 = (byte) $i21;

        r3[i67] = $b22;

        i44 = i68 + 1;

        $b23 = (byte) i66;

        r3[i68] = $b23;

        goto label01;

     label18:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        if i44 <= 0 goto label19;

        i45 = i45 + i44;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, i44);

     label19:
        return i45;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        boolean z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3, $r5, $r11, $r12, $r13, r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4, $r6, $r7, $r8, $r9, $r10, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r2 != $r1 goto label01;

        $r13 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextAfterName()>();

        return $r13;

     label01:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _numTypesValid> = 0;

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z1 == 0 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipString()>();

     label02:
        i7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipWSOrEnd()>();

        if i7 >= 0 goto label03;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void close()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = null;

        return null;

     label03:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] _binaryValue> = null;

        if i7 == 93 goto label04;

        if i7 != 125 goto label05;

     label04:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _closeScope(int)>(i7);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r3;

     label05:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z2 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean expectComma()>();

        if $z2 == 0 goto label07;

        i7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipComma(int)>(i7);

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_TRAILING_COMMA>;

        $i6 = $i5 & $i4;

        if $i6 == 0 goto label07;

        if i7 == 93 goto label06;

        if i7 != 125 goto label07;

     label06:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _closeScope(int)>(i7);

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r12;

     label07:
        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        z0 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inObject()>();

        if z0 == 0 goto label10;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _updateNameLocation()>();

        if i7 != 34 goto label08;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _parseName()>();

        goto label09;

     label08:
        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _handleOddName(int)>(i7);

     label09:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: void setCurrentName(java.lang.String)>($r15);

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r11;

        i7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon()>();

     label10:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _updateLocation()>();

        lookupswitch(i7)
        {
            case 34: goto label11;
            case 45: goto label20;
            case 46: goto label21;
            case 48: goto label22;
            case 49: goto label22;
            case 50: goto label22;
            case 51: goto label22;
            case 52: goto label22;
            case 53: goto label22;
            case 54: goto label22;
            case 55: goto label22;
            case 56: goto label22;
            case 57: goto label22;
            case 91: goto label12;
            case 102: goto label18;
            case 110: goto label19;
            case 116: goto label17;
            case 123: goto label14;
            case 125: goto label16;
            default: goto label23;
        };

     label11:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 1;

        r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        goto label24;

     label12:
        if z0 != 0 goto label13;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i3, $i2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r9;

     label13:
        r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        goto label24;

     label14:
        if z0 != 0 goto label15;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i1, $i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r7;

     label15:
        r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        goto label24;

     label16:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i7, "expected a value");

     label17:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchTrue()>();

        r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        goto label24;

     label18:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchFalse()>();

        r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        goto label24;

     label19:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchNull()>();

        r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        goto label24;

     label20:
        r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber()>();

        goto label24;

     label21:
        r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod()>();

        goto label24;

     label22:
        r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>(i7);

        goto label24;

     label23:
        r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleOddValue(int)>(i7);

     label24:
        if z0 == 0 goto label25;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = r17;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r5;

     label25:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r17;

        return r17;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextAfterName()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r2, $r3;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _nameCopied> = 0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = null;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r1 != $r2 goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i3, $i2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r7;

        goto label2;

     label1:
        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r1 != $r3 goto label2;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i1, $i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r5;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r1;

        return r1;
    }

    public void finishToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString()>();

     label1:
        return;
    }

    public boolean nextFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        char[] r2, $r6, $r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i10, $i11, $i12, $i13, $i14, i15, i16, i17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r5, $r8, $r12;
        char $c7, $c8, $c9;
        java.lang.String $r9, $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _numTypesValid> = 0;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r4 != $r3 goto label01;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextAfterName()>();

        return 0;

     label01:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipString()>();

     label02:
        i15 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipWSOrEnd()>();

        if i15 >= 0 goto label03;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void close()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = null;

        return 0;

     label03:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] _binaryValue> = null;

        if i15 == 93 goto label04;

        if i15 != 125 goto label05;

     label04:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _closeScope(int)>(i15);

        return 0;

     label05:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean expectComma()>();

        if $z1 == 0 goto label07;

        i15 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipComma(int)>(i15);

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_TRAILING_COMMA>;

        $i14 = $i13 & $i12;

        if $i14 == 0 goto label07;

        if i15 == 93 goto label06;

        if i15 != 125 goto label07;

     label06:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _closeScope(int)>(i15);

        return 0;

     label07:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z2 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inObject()>();

        if $z2 != 0 goto label08;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _updateLocation()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int)>(i15);

        return 0;

     label08:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _updateNameLocation()>();

        if i15 != 34 goto label12;

        r2 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: char[] asQuotedChars()>();

        i0 = lengthof r2;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i3 = $i2 + i0;

        $i5 = $i3 + 4;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i5 >= $i4 goto label12;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i1 = $i6 + i0;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $c7 = $r6[i1];

        if $c7 != 34 goto label12;

        i16 = 0;

        i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

     label09:
        if i17 != i1 goto label10;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r9 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: void setCurrentName(java.lang.String)>($r9);

        $i10 = i17 + 1;

        $i11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColonFast(int)>($i10);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _isNextTokenNameYes(int)>($i11);

        return 1;

     label10:
        $c9 = r2[i16];

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $c8 = $r7[i17];

        if $c9 == $c8 goto label11;

        goto label12;

     label11:
        i16 = i16 + 1;

        i17 = i17 + 1;

        goto label09;

     label12:
        $r13 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        $z3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _isNextTokenNameMaybe(int,java.lang.String)>(i15, $r13);

        return $z3;
    }

    public java.lang.String nextFieldName() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.lang.String r1, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r6, $r7, r12;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4, $r5, $r10;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _numTypesValid> = 0;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r3 != $r2 goto label01;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextAfterName()>();

        return null;

     label01:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipString()>();

     label02:
        i3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipWSOrEnd()>();

        if i3 >= 0 goto label03;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void close()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = null;

        return null;

     label03:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] _binaryValue> = null;

        if i3 == 93 goto label04;

        if i3 != 125 goto label05;

     label04:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _closeScope(int)>(i3);

        return null;

     label05:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean expectComma()>();

        if $z1 == 0 goto label07;

        i3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipComma(int)>(i3);

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_TRAILING_COMMA>;

        $i2 = $i1 & $i0;

        if $i2 == 0 goto label07;

        if i3 == 93 goto label06;

        if i3 != 125 goto label07;

     label06:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _closeScope(int)>(i3);

        return null;

     label07:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z2 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inObject()>();

        if $z2 != 0 goto label08;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _updateLocation()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int)>(i3);

        return null;

     label08:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _updateNameLocation()>();

        if i3 != 34 goto label09;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _parseName()>();

        goto label10;

     label09:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _handleOddName(int)>(i3);

     label10:
        r1 = $r11;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: void setCurrentName(java.lang.String)>($r11);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r6;

        i4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _updateLocation()>();

        if i4 != 34 goto label11;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 1;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r7;

        return $r11;

     label11:
        lookupswitch(i4)
        {
            case 45: goto label12;
            case 46: goto label13;
            case 48: goto label14;
            case 49: goto label14;
            case 50: goto label14;
            case 51: goto label14;
            case 52: goto label14;
            case 53: goto label14;
            case 54: goto label14;
            case 55: goto label14;
            case 56: goto label14;
            case 57: goto label14;
            case 91: goto label18;
            case 102: goto label15;
            case 110: goto label16;
            case 116: goto label17;
            case 123: goto label19;
            default: goto label20;
        };

     label12:
        r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber()>();

        goto label21;

     label13:
        r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod()>();

        goto label21;

     label14:
        r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>(i4);

        goto label21;

     label15:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchFalse()>();

        r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        goto label21;

     label16:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchNull()>();

        r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        goto label21;

     label17:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchTrue()>();

        r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        goto label21;

     label18:
        r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        goto label21;

     label19:
        r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        goto label21;

     label20:
        r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleOddValue(int)>(i4);

     label21:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = r12;

        return r1;
    }

    private final void _isNextTokenNameYes(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 := @parameter0: int;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _updateLocation()>();

        lookupswitch(i0)
        {
            case 34: goto label01;
            case 45: goto label07;
            case 46: goto label08;
            case 48: goto label09;
            case 49: goto label09;
            case 50: goto label09;
            case 51: goto label09;
            case 52: goto label09;
            case 53: goto label09;
            case 54: goto label09;
            case 55: goto label09;
            case 56: goto label09;
            case 57: goto label09;
            case 91: goto label02;
            case 102: goto label05;
            case 110: goto label06;
            case 116: goto label04;
            case 123: goto label03;
            default: goto label10;
        };

     label01:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 1;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r10;

        return;

     label02:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r6;

        return;

     label03:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r2;

        return;

     label04:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>("true", 1);

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r3;

        return;

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>("false", 1);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r5;

        return;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>("null", 1);

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r4;

        return;

     label07:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r9;

        return;

     label08:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r8;

        return;

     label09:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>(i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r7;

        return;

     label10:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleOddValue(int)>(i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r11;

        return;
    }

    protected boolean _isNextTokenNameMaybe(int, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.lang.String r1, r2, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4, $r5, r7;
        boolean $z0, $z1;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if i0 != 34 goto label01;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _parseName()>();

        goto label02;

     label01:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _handleOddName(int)>(i0);

     label02:
        r2 = $r6;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: void setCurrentName(java.lang.String)>($r6);

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r4;

        i1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _updateLocation()>();

        if i1 != 34 goto label03;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 1;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r5;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        return $z0;

     label03:
        lookupswitch(i1)
        {
            case 45: goto label04;
            case 46: goto label05;
            case 48: goto label06;
            case 49: goto label06;
            case 50: goto label06;
            case 51: goto label06;
            case 52: goto label06;
            case 53: goto label06;
            case 54: goto label06;
            case 55: goto label06;
            case 56: goto label06;
            case 57: goto label06;
            case 91: goto label10;
            case 102: goto label07;
            case 110: goto label08;
            case 116: goto label09;
            case 123: goto label11;
            default: goto label12;
        };

     label04:
        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber()>();

        goto label13;

     label05:
        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod()>();

        goto label13;

     label06:
        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>(i1);

        goto label13;

     label07:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchFalse()>();

        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        goto label13;

     label08:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchNull()>();

        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        goto label13;

     label09:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchTrue()>();

        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        goto label13;

     label10:
        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        goto label13;

     label11:
        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        goto label13;

     label12:
        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleOddValue(int)>(i1);

     label13:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = r7;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        return $z1;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r1, $r2, $r7, $r8, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r14, $r15, $r16;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 := @parameter0: int;

        if i0 != 34 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 1;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r15;

        return $r15;

     label01:
        tableswitch(i0)
        {
            case 44: goto label10;
            case 45: goto label07;
            case 46: goto label08;
            case 47: goto label11;
            case 48: goto label09;
            case 49: goto label09;
            case 50: goto label09;
            case 51: goto label09;
            case 52: goto label09;
            case 53: goto label09;
            case 54: goto label09;
            case 55: goto label09;
            case 56: goto label09;
            case 57: goto label09;
            case 58: goto label11;
            case 59: goto label11;
            case 60: goto label11;
            case 61: goto label11;
            case 62: goto label11;
            case 63: goto label11;
            case 64: goto label11;
            case 65: goto label11;
            case 66: goto label11;
            case 67: goto label11;
            case 68: goto label11;
            case 69: goto label11;
            case 70: goto label11;
            case 71: goto label11;
            case 72: goto label11;
            case 73: goto label11;
            case 74: goto label11;
            case 75: goto label11;
            case 76: goto label11;
            case 77: goto label11;
            case 78: goto label11;
            case 79: goto label11;
            case 80: goto label11;
            case 81: goto label11;
            case 82: goto label11;
            case 83: goto label11;
            case 84: goto label11;
            case 85: goto label11;
            case 86: goto label11;
            case 87: goto label11;
            case 88: goto label11;
            case 89: goto label11;
            case 90: goto label11;
            case 91: goto label02;
            case 92: goto label11;
            case 93: goto label11;
            case 94: goto label11;
            case 95: goto label11;
            case 96: goto label11;
            case 97: goto label11;
            case 98: goto label11;
            case 99: goto label11;
            case 100: goto label11;
            case 101: goto label11;
            case 102: goto label05;
            case 103: goto label11;
            case 104: goto label11;
            case 105: goto label11;
            case 106: goto label11;
            case 107: goto label11;
            case 108: goto label11;
            case 109: goto label11;
            case 110: goto label06;
            case 111: goto label11;
            case 112: goto label11;
            case 113: goto label11;
            case 114: goto label11;
            case 115: goto label11;
            case 116: goto label04;
            case 117: goto label11;
            case 118: goto label11;
            case 119: goto label11;
            case 120: goto label11;
            case 121: goto label11;
            case 122: goto label11;
            case 123: goto label03;
            default: goto label11;
        };

     label02:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i4, $i3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r8;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r9;

        return $r9;

     label03:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i2, $i1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r3;

        return $r3;

     label04:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>("true", 1);

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r4;

        return $r4;

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>("false", 1);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r6;

        return $r6;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>("null", 1);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r5;

        return $r5;

     label07:
        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r12;

        return $r12;

     label08:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r11;

        return $r11;

     label09:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>(i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r10;

        return $r10;

     label10:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z0 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z0 != 0 goto label11;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_MISSING>;

        $i7 = $i6 & $i5;

        if $i7 == 0 goto label11;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i9 = $i8 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i9;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r14;

        return $r14;

     label11:
        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleOddValue(int)>(i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r16;

        return $r16;
    }

    public final java.lang.String nextTextValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r9, $r10, $r11, $r12;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r13;
        java.lang.String $r14, $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r3 != $r2 goto label5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _nameCopied> = 0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r1;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if r1 != $r6 goto label2;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString()>();

     label1:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r14;

     label2:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r1 != $r7 goto label3;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i3, $i2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r12;

        goto label4;

     label3:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r1 != $r8 goto label4;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i1, $i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r10;

     label4:
        return null;

     label5:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r4 != $r5 goto label6;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String getText()>();

        goto label7;

     label6:
        $r15 = null;

     label7:
        return $r15;
    }

    public final int nextIntValue(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 := @parameter0: int;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r3 != $r2 goto label4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _nameCopied> = 0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r1;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if r1 != $r6 goto label1;

        $i5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int getIntValue()>();

        return $i5;

     label1:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r1 != $r7 goto label2;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i4, $i3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r12;

        goto label3;

     label2:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r1 != $r8 goto label3;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i2, $i1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r10;

     label3:
        return i0;

     label4:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if $r4 != $r5 goto label5;

        $i6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int getIntValue()>();

        goto label6;

     label5:
        $i6 = i0;

     label6:
        return $i6;
    }

    public final long nextLongValue(long) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        long l0, $l5, $l6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i1, $i2, $i3, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        l0 := @parameter0: long;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r3 != $r2 goto label4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _nameCopied> = 0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r1;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if r1 != $r6 goto label1;

        $l5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long getLongValue()>();

        return $l5;

     label1:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r1 != $r7 goto label2;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i4, $i3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r12;

        goto label3;

     label2:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r1 != $r8 goto label3;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i2, $i1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r10;

     label3:
        return l0;

     label4:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if $r4 != $r5 goto label5;

        $l6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long getLongValue()>();

        goto label6;

     label5:
        $l6 = l0;

     label6:
        return $l6;
    }

    public final java.lang.Boolean nextBooleanValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r5, $r6, $r7, $r8, r15, r16;
        java.lang.Boolean $r3, $r4, $r13, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r2 != $r1 goto label5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _nameCopied> = 0;

        r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r15;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        if r15 != $r5 goto label1;

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r14;

     label1:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        if r15 != $r6 goto label2;

        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r13;

     label2:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r15 != $r7 goto label3;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i4, $i3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r12;

        goto label4;

     label3:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r15 != $r8 goto label4;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i2, $i1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r10;

     label4:
        return null;

     label5:
        r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if r16 == null goto label7;

        i0 = virtualinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int id()>();

        if i0 != 9 goto label6;

        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r4;

     label6:
        if i0 != 10 goto label7;

        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r3;

     label7:
        return null;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature $r2;
        boolean $z0;
        int $i0, $i1, $i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)>($r2);

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleOddValue(int)>(46);

        return $r4;

     label1:
        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = $i0 - 1;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloat(int,int,int,boolean,int)>(46, $i2, $i1, 0, 0);

        return $r3;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, i1, i2, $i3, i4, i5, i6, i8;
        char[] $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, $r6, $r7, $r8;
        char c7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i4 := @parameter0: int;

        i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i0 = i5 - 1;

        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if i4 != 48 goto label1;

        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int)>(0, i0);

        return $r7;

     label1:
        i6 = 1;

     label2:
        if i5 < i1 goto label3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i0;

        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int)>(0, i0);

        return $r6;

     label3:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i3 = i5;

        i5 = i5 + 1;

        c7 = $r1[$i3];

        if c7 < 48 goto label5;

        if c7 <= 57 goto label4;

        goto label5;

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        if c7 == 46 goto label6;

        if c7 == 101 goto label6;

        if c7 != 69 goto label7;

     label6:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i5;

        $r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloat(int,int,int,boolean,int)>(c7, i0, i5, 0, i6);

        return $r8;

     label7:
        i8 = i5 + -1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i8;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z0 == 0 goto label8;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _verifyRootSpace(int)>(c7);

     label8:
        i2 = i8 - i0;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void resetWithShared(char[],int,int)>($r3, i0, i2);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetInt(boolean,int)>(0, i6);

        return $r5;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloat(int, int, int, boolean, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12;
        boolean z0, $z1;
        char[] $r1, $r2, $r3, $r6, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, $r7, $r8, $r9, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i8 := @parameter0: int;

        i0 := @parameter1: int;

        i9 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        i10 = 0;

        if i8 != 46 goto label05;

     label01:
        if i9 < i2 goto label02;

        $r11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int)>(z0, i0);

        return $r11;

     label02:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i7 = i9;

        i9 = i9 + 1;

        i8 = $r10[$i7];

        if i8 < 48 goto label04;

        if i8 <= 57 goto label03;

        goto label04;

     label03:
        i10 = i10 + 1;

        goto label01;

     label04:
        if i10 != 0 goto label05;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(i8, "Decimal point not followed by a digit");

     label05:
        i11 = 0;

        if i8 == 101 goto label06;

        if i8 != 69 goto label13;

     label06:
        if i9 < i2 goto label07;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i0;

        $r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int)>(z0, i0);

        return $r9;

     label07:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i4 = i9;

        i9 = i9 + 1;

        i8 = $r1[$i4];

        if i8 == 45 goto label08;

        if i8 != 43 goto label10;

     label08:
        if i9 < i2 goto label09;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i0;

        $r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int)>(z0, i0);

        return $r8;

     label09:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i5 = i9;

        i9 = i9 + 1;

        i8 = $r2[$i5];

     label10:
        if i8 > 57 goto label12;

        if i8 < 48 goto label12;

        i11 = i11 + 1;

        if i9 < i2 goto label11;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i0;

        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int)>(z0, i0);

        return $r7;

     label11:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i6 = i9;

        i9 = i9 + 1;

        i8 = $r6[$i6];

        goto label10;

     label12:
        if i11 != 0 goto label13;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(i8, "Exponent indicator not followed by a digit");

     label13:
        i12 = i9 + -1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i12;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z1 == 0 goto label14;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _verifyRootSpace(int)>(i8);

     label14:
        i3 = i12 - i0;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void resetWithShared(char[],int,int)>($r3, i0, i3);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetFloat(boolean,int,int,int)>(z0, i1, i10, i11);

        return $r5;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, i1, i2, $i3, i4, i5, i7, i9;
        char[] $r1, $r3, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r7, $r8, $r9, $r10, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r6;
        char c6, c8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i0 = i4 - 1;

        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if i4 < i1 goto label01;

        $r10 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int)>(1, i0);

        return $r10;

     label01:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        i5 = i4 + 1;

        c6 = $r1[i4];

        if c6 > 57 goto label02;

        if c6 >= 48 goto label03;

     label02:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i5;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean)>(c6, 1);

        return $r2;

     label03:
        if c6 != 48 goto label04;

        $r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int)>(1, i0);

        return $r9;

     label04:
        i7 = 1;

     label05:
        if i5 < i1 goto label06;

        $r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int)>(1, i0);

        return $r8;

     label06:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i3 = i5;

        i5 = i5 + 1;

        c8 = $r3[$i3];

        if c8 < 48 goto label08;

        if c8 <= 57 goto label07;

        goto label08;

     label07:
        i7 = i7 + 1;

        goto label05;

     label08:
        if c8 == 46 goto label09;

        if c8 == 101 goto label09;

        if c8 != 69 goto label10;

     label09:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i5;

        $r11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloat(int,int,int,boolean,int)>(c8, i0, i5, 1, i7);

        return $r11;

     label10:
        i9 = i5 + -1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i9;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z0 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z0 == 0 goto label11;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _verifyRootSpace(int)>(c8);

     label11:
        i2 = i9 - i0;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void resetWithShared(char[],int,int)>($r5, i0, i2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetInt(boolean,int)>(1, i7);

        return $r7;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38, i39, i40, i43, $i44, $i45, i46;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r1, $r6, $r8, $r10, $r12, $r14, $r18, $r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r15, $r23;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r3;
        char[] $r4, $r7, $r9, $r11, $r16, $r19, r21;
        char $c41, c42, $c47, $c48;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        if z0 == 0 goto label01;

        $i38 = i0 + 1;

        goto label02;

     label01:
        $i38 = i0;

     label02:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i38;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r21 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        i39 = 0;

        if z0 == 0 goto label03;

        i39 = 0 + 1;

        r21[0] = 45;

     label03:
        i40 = 0;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label04;

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i35 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i36 = $i35 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i36;

        $c41 = $r19[$i35];

        goto label05;

     label04:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        $c41 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char getNextChar(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>("No digit following minus sign", $r2);

     label05:
        c42 = $c41;

        if $c41 != 48 goto label06;

        c42 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char _verifyNoLeadingZeroes()>();

     label06:
        z5 = 0;

     label07:
        if c42 < 48 goto label10;

        if c42 > 57 goto label10;

        i40 = i40 + 1;

        $i29 = lengthof r21;

        if i39 < $i29 goto label08;

        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r21 = virtualinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i39 = 0;

     label08:
        $i30 = i39;

        i39 = i39 + 1;

        r21[$i30] = c42;

        $i32 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i31 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i32 < $i31 goto label09;

        $z4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z4 != 0 goto label09;

        c42 = 0;

        z5 = 1;

        goto label10;

     label09:
        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i34 = $i33 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i34;

        c42 = $r16[$i33];

        goto label07;

     label10:
        if i40 != 0 goto label11;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean)>(c42, z0);

        return $r15;

     label11:
        i43 = 0;

        if c42 != 46 goto label18;

        $i23 = lengthof r21;

        if i39 < $i23 goto label12;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r21 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i39 = 0;

     label12:
        $i24 = i39;

        i39 = i39 + 1;

        r21[$i24] = c42;

     label13:
        $i44 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i45 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i44 < $i45 goto label14;

        $z3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z3 != 0 goto label14;

        z5 = 1;

        goto label17;

     label14:
        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i26 = $i25 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i26;

        c42 = $r11[$i25];

        if c42 < 48 goto label17;

        if c42 <= 57 goto label15;

        goto label17;

     label15:
        i43 = i43 + 1;

        $i27 = lengthof r21;

        if i39 < $i27 goto label16;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r21 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i39 = 0;

     label16:
        $i28 = i39;

        i39 = i39 + 1;

        r21[$i28] = c42;

        goto label13;

     label17:
        if i43 != 0 goto label18;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(c42, "Decimal point not followed by a digit");

     label18:
        i46 = 0;

        if c42 == 101 goto label19;

        if c42 != 69 goto label31;

     label19:
        $i3 = lengthof r21;

        if i39 < $i3 goto label20;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r21 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i39 = 0;

     label20:
        $i4 = i39;

        i39 = i39 + 1;

        r21[$i4] = c42;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i6 >= $i5 goto label21;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i22 = $i21 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i22;

        $c47 = $r9[$i21];

        goto label22;

     label21:
        $c47 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char getNextChar(java.lang.String)>("expected a digit for number exponent");

     label22:
        c42 = $c47;

        if $c47 == 45 goto label23;

        if $c47 != 43 goto label27;

     label23:
        $i7 = lengthof r21;

        if i39 < $i7 goto label24;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r21 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i39 = 0;

     label24:
        $i8 = i39;

        i39 = i39 + 1;

        r21[$i8] = c42;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i10 >= $i9 goto label25;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i20 = $i19 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i20;

        $c48 = $r7[$i19];

        goto label26;

     label25:
        $c48 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char getNextChar(java.lang.String)>("expected a digit for number exponent");

     label26:
        c42 = $c48;

     label27:
        if c42 > 57 goto label30;

        if c42 < 48 goto label30;

        i46 = i46 + 1;

        $i13 = lengthof r21;

        if i39 < $i13 goto label28;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r21 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i39 = 0;

     label28:
        $i14 = i39;

        i39 = i39 + 1;

        r21[$i14] = c42;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i16 < $i15 goto label29;

        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z2 != 0 goto label29;

        z5 = 1;

        goto label30;

     label29:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i18 = $i17 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i18;

        c42 = $r4[$i17];

        goto label27;

     label30:
        if i46 != 0 goto label31;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(c42, "Exponent indicator not followed by a digit");

     label31:
        if z5 != 0 goto label32;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i12 = $i11 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i12;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z1 == 0 goto label32;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _verifyRootSpace(int)>(c42);

     label32:
        $r22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i39);

        $r23 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken reset(boolean,int,int,int)>(z0, i40, i43, i46);

        return $r23;
    }

    private final char _verifyNoLeadingZeroes() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char c0, $c3;
        int $i1, $i2, $i4;
        char[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label2;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        c0 = $r1[$i4];

        if c0 < 48 goto label1;

        if c0 <= 57 goto label2;

     label1:
        return 48;

     label2:
        $c3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char _verifyNLZ2()>();

        return $c3;
    }

    private char _verifyNLZ2() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        char[] $r1, $r2;
        boolean $z0, $z1;
        char c13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z1 != 0 goto label1;

        return 48;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        c13 = $r1[$i2];

        if c13 < 48 goto label2;

        if c13 <= 57 goto label3;

     label2:
        return 48;

     label3:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_LEADING_ZEROS>;

        $i5 = $i4 & $i3;

        if $i5 != 0 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void reportInvalidNumber(java.lang.String)>("Leading zeroes not allowed");

     label4:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i7;

        if c13 != 48 goto label9;

     label5:
        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i9 < $i8 goto label6;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 == 0 goto label9;

     label6:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        c13 = $r2[$i10];

        if c13 < 48 goto label7;

        if c13 <= 57 goto label8;

     label7:
        return 48;

     label8:
        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i12;

        if c13 == 48 goto label5;

        goto label9;

     label9:
        return c13;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int, boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r9, $r10, $r11, $r12;
        java.lang.String $r5, $r13, $r20, r21, $r22, r23;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6, $r14, $r17;
        char[] $r18;
        double $d0, $d1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i8 := @parameter0: int;

        z0 := @parameter1: boolean;

        if i8 != 73 goto label13;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label01;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z1 != 0 goto label01;

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOFInValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r17);

     label01:
        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i10;

        i8 = $r18[$i9];

        if i8 != 78 goto label07;

        if z0 == 0 goto label02;

        $r20 = "-INF";

        goto label03;

     label02:
        $r20 = "+INF";

     label03:
        r21 = $r20;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>($r20, 3);

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_NON_NUM_NUMBERS>;

        $i7 = $i6 & $i5;

        if $i7 == 0 goto label06;

        if z0 == 0 goto label04;

        $d0 = #-Infinity;

        goto label05;

     label04:
        $d0 = #Infinity;

     label05:
        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double)>(r21, $d0);

        return $r14;

     label06:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-standard token \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportError(java.lang.String)>($r13);

        goto label13;

     label07:
        if i8 != 110 goto label13;

        if z0 == 0 goto label08;

        $r22 = "-Infinity";

        goto label09;

     label08:
        $r22 = "+Infinity";

     label09:
        r23 = $r22;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>($r22, 3);

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_NON_NUM_NUMBERS>;

        $i4 = $i3 & $i2;

        if $i4 == 0 goto label12;

        if z0 == 0 goto label10;

        $d1 = #-Infinity;

        goto label11;

     label10:
        $d1 = #Infinity;

     label11:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double)>(r23, $d1);

        return $r6;

     label12:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-standard token \'");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportError(java.lang.String)>($r5);

     label13:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(i8, "expected digit (0-9) to follow minus sign, for valid numeric value");

        return null;
    }

    private final void _verifyRootSpace(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i2;

        lookupswitch(i0)
        {
            case 9: goto label1;
            case 10: goto label3;
            case 13: goto label2;
            case 32: goto label1;
            default: goto label4;
        };

     label1:
        return;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCR()>();

        return;

     label3:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow> = $i4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart> = $i5;

        return;

     label4:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportMissingRootWS(int)>(i0);

        return;
    }

    protected final java.lang.String _parseName() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i10;
        java.lang.String $r2, $r6;
        char[] $r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r5;
        char c9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _hashSeed>;

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int[] _icLatin1>;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if i7 >= $i1 goto label3;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        c9 = $r3[i7];

        $i2 = lengthof r1;

        if c9 >= $i2 goto label2;

        $i4 = r1[c9];

        if $i4 == 0 goto label2;

        if c9 != 34 goto label3;

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i5 = i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i5;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i6 = i7 - i0;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String findSymbol(char[],int,int,int)>($r4, i0, $i6, i8);

        return $r6;

     label2:
        $i3 = i8 * 33;

        i8 = $i3 + c9;

        i7 = i7 + 1;

        goto label1;

     label3:
        i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i7;

        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _parseName2(int,int,int)>(i10, i8, 34);

        return $r2;
    }

    private java.lang.String _parseName2(int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8, i9, $i10, $i11, $i14, $i15, $i16;
        char[] $r1, r10, $r11, r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2, $r3, $r4, $r5, $r6, r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r7;
        java.lang.String $r8;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r9;
        char c12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 := @parameter0: int;

        i8 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i5 = $i4 - i0;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void resetWithShared(char[],int,int)>($r1, i0, $i5);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r10 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getCurrentSegment()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        i9 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

     label1:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i7 < $i6 goto label2;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label2;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in field name", $r9);

     label2:
        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i11;

        c12 = $r11[$i10];

        if c12 > 92 goto label5;

        if c12 != 92 goto label3;

        c12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char _decodeEscaped()>();

        goto label5;

     label3:
        if c12 > i1 goto label5;

        if c12 != i1 goto label4;

        goto label7;

     label4:
        if c12 >= 32 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(c12, "name");

     label5:
        $i14 = i8 * 33;

        i8 = $i14 + c12;

        $i15 = i9;

        i9 = i9 + 1;

        r10[$i15] = c12;

        $i16 = lengthof r10;

        if i9 < $i16 goto label6;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r10 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i9 = 0;

     label6:
        goto label1;

     label7:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i9);

        r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r14 = virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getTextBuffer()>();

        i2 = virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getTextOffset()>();

        i3 = virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int size()>();

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String findSymbol(char[],int,int,int)>(r14, i2, i3, i8);

        return $r8;
    }

    protected java.lang.String _handleOddName(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i22, i23, i24;
        int[] r1;
        char $c6, $c8, c21;
        java.lang.String $r2, $r6, $r9, $r10;
        char[] $r3, $r4, $r7;
        boolean $z0, $z1, z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r5, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 := @parameter0: int;

        if i0 != 39 goto label01;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_SINGLE_QUOTES>;

        $i18 = $i17 & $i16;

        if $i18 == 0 goto label01;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _parseAposName()>();

        return $r10;

     label01:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_UNQUOTED_NAMES>;

        $i5 = $i4 & $i3;

        if $i5 != 0 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i0, "was expecting double-quote to start field name");

     label02:
        r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeLatin1JsNames()>();

        i1 = lengthof r1;

        if i0 >= i1 goto label05;

        $i15 = r1[i0];

        if $i15 != 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        z2 = $z1;

        goto label06;

     label05:
        $c6 = (char) i0;

        z2 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c6);

     label06:
        if z2 != 0 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i0, "was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name");

     label07:
        i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _hashSeed>;

        i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if i19 >= i2 goto label11;

     label08:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        c21 = $r3[i19];

        if c21 >= i1 goto label09;

        $i12 = r1[c21];

        if $i12 == 0 goto label10;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i22 = $i13 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i19;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols>;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i14 = i19 - i22;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String findSymbol(char[],int,int,int)>($r7, i22, $i14, i20);

        return $r9;

     label09:
        $c8 = (char) c21;

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c8);

        if $z0 != 0 goto label10;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i23 = $i10 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i19;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i11 = i19 - i23;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String findSymbol(char[],int,int,int)>($r4, i23, $i11, i20);

        return $r6;

     label10:
        $i9 = i20 * 33;

        i20 = $i9 + c21;

        i19 = i19 + 1;

        if i19 < i2 goto label08;

     label11:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i24 = $i7 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i19;

        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _handleOddName2(int,int,int[])>(i24, i20, r1);

        return $r2;
    }

    protected java.lang.String _parseAposName() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, i1, i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        char c2;
        char[] $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r3;
        java.lang.String $r4, $r6;
        int[] r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _hashSeed>;

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if i8 >= i0 goto label4;

        r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int[] _icLatin1>;

        i1 = lengthof r5;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        c2 = $r1[i8];

        if c2 != 39 goto label2;

        i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i6 = i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i6;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i7 = i8 - i3;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String findSymbol(char[],int,int,int)>($r2, i3, $i7, i9);

        return $r4;

     label2:
        if c2 >= i1 goto label3;

        $i5 = r5[c2];

        if $i5 == 0 goto label3;

        goto label4;

     label3:
        $i4 = i9 * 33;

        i9 = $i4 + c2;

        i8 = i8 + 1;

        if i8 < i0 goto label1;

     label4:
        i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i8;

        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _parseName2(int,int,int)>(i10, i9, 39);

        return $r6;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleOddValue(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r1, $r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r3, $r4, $r6, $r8, $r9, $r10;
        java.lang.String $r5, $r7, $r11, $r12;
        char $c1, $c20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r13, $r14, $r15, $r16, $r17, $r20;
        char[] $r18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 39: goto label01;
            case 43: goto label08;
            case 44: goto label03;
            case 73: goto label06;
            case 78: goto label04;
            case 93: goto label02;
            default: goto label10;
        };

     label01:
        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_SINGLE_QUOTES>;

        $i17 = $i16 & $i15;

        if $i17 == 0 goto label10;

        $r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleApos()>();

        return $r17;

     label02:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inArray()>();

        if $z0 != 0 goto label03;

        goto label10;

     label03:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z1 != 0 goto label10;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_MISSING>;

        $i4 = $i3 & $i2;

        if $i4 == 0 goto label10;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i6 = $i5 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i6;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        return $r13;

     label04:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>("NaN", 1);

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_NON_NUM_NUMBERS>;

        $i9 = $i8 & $i7;

        if $i9 == 0 goto label05;

        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double)>("NaN", #NaN);

        return $r14;

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportError(java.lang.String)>("Non-standard token \'NaN\': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow");

        goto label10;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>("Infinity", 1);

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_NON_NUM_NUMBERS>;

        $i12 = $i11 & $i10;

        if $i12 == 0 goto label07;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double)>("Infinity", #Infinity);

        return $r15;

     label07:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportError(java.lang.String)>("Non-standard token \'Infinity\': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow");

        goto label10;

     label08:
        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i14 < $i13 goto label09;

        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z2 != 0 goto label09;

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOFInValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r16);

     label09:
        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i19 = $i18 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i19;

        $c20 = $r18[$i18];

        $r20 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean)>($c20, 0);

        return $r20;

     label10:
        $z3 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(int)>(i0);

        if $z3 == 0 goto label11;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c1 = (char) i0;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _validJsonTokenList()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidToken(java.lang.String,java.lang.String)>($r11, $r12);

     label11:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected a valid value ");

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _validJsonValueList()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i0, $r7);

        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleApos() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r1, $r2, $r3, $r4;
        int $i1, $i2, $i3, i4, $i5, $i6, $i8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, $r6;
        boolean $z0;
        char[] r7, $r8;
        char c7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r7 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        i4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label2;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label2;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(": was expecting closing quote for a string value", $r6);

     label2:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i6;

        c7 = $r8[$i5];

        if c7 > 92 goto label5;

        if c7 != 92 goto label3;

        c7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char _decodeEscaped()>();

        goto label5;

     label3:
        if c7 > 39 goto label5;

        if c7 != 39 goto label4;

        goto label7;

     label4:
        if c7 >= 32 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(c7, "string value");

     label5:
        $i8 = lengthof r7;

        if i4 < $i8 goto label6;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r7 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i4 = 0;

     label6:
        $i3 = i4;

        i4 = i4 + 1;

        r7[$i3] = c7;

        goto label1;

     label7:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i4);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        return $r5;
    }

    private java.lang.String _handleOddName2(int, int, int[]) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        int[] r1;
        char[] $r2, $r6, r9, r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3, $r4, $r5, $r7, $r10, r11;
        boolean $z0, $z1;
        char c17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r13;
        java.lang.String $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 := @parameter0: int;

        i15 := @parameter1: int;

        r1 := @parameter2: int[];

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i5 = $i4 - i0;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void resetWithShared(char[],int,int)>($r2, i0, $i5);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getCurrentSegment()>();

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        i16 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

        i1 = lengthof r1;

     label1:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i7 < $i6 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z1 != 0 goto label2;

        goto label6;

     label2:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        c17 = $r6[$i8];

        if c17 >= i1 goto label3;

        $i14 = r1[c17];

        if $i14 == 0 goto label4;

        goto label6;

     label3:
        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>(c17);

        if $z0 != 0 goto label4;

        goto label6;

     label4:
        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i10;

        $i11 = i15 * 33;

        i15 = $i11 + c17;

        $i12 = i16;

        i16 = i16 + 1;

        r9[$i12] = c17;

        $i13 = lengthof r9;

        if i16 < $i13 goto label5;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i16 = 0;

     label5:
        goto label1;

     label6:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i16);

        r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r12 = virtualinvoke r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getTextBuffer()>();

        i2 = virtualinvoke r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getTextOffset()>();

        i3 = virtualinvoke r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int size()>();

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String findSymbol(char[],int,int,int)>(r12, i2, i3, i15);

        return $r14;
    }

    protected final void _finishString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11;
        int[] r1;
        char c2;
        char[] $r2, $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if i8 >= i0 goto label3;

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int[] _icLatin1>;

        i1 = lengthof r1;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        c2 = $r2[i8];

        if c2 >= i1 goto label2;

        $i3 = r1[c2];

        if $i3 == 0 goto label2;

        if c2 != 34 goto label3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i5 = i8 - $i4;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void resetWithShared(char[],int,int)>($r3, $i6, $i5);

        $i7 = i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i7;

        return;

     label2:
        i8 = i8 + 1;

        if i8 < i0 goto label1;

     label3:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i11 = i8 - $i10;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void resetWithCopy(char[],int,int)>($r6, $i9, $i11);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i8;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString2()>();

        return;
    }

    protected void _finishString2() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int[] r1;
        int i0, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2, $r3, $r4, $r5;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6;
        char[] r7, $r8;
        char c9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r7 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getCurrentSegment()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        i6 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int[] _icLatin1>;

        i0 = lengthof r1;

     label1:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i3 < $i2 goto label2;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label2;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(": was expecting closing quote for a string value", $r6);

     label2:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i8;

        c9 = $r8[$i7];

        if c9 >= i0 goto label5;

        $i5 = r1[c9];

        if $i5 == 0 goto label5;

        if c9 != 34 goto label3;

        goto label7;

     label3:
        if c9 != 92 goto label4;

        c9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char _decodeEscaped()>();

        goto label5;

     label4:
        if c9 >= 32 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(c9, "string value");

     label5:
        $i10 = lengthof r7;

        if i6 < $i10 goto label6;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r7 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i6 = 0;

     label6:
        $i4 = i6;

        i6 = i6 + 1;

        r7[$i4] = c9;

        goto label1;

     label7:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i6);

        return;
    }

    protected final void _skipString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char[] r1;
        char c0;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;
        int i3, i4, $i5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _tokenIncomplete> = 0;

        i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

     label1:
        if i3 < i4 goto label3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i3;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label2;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(": was expecting closing quote for a string value", $r2);

     label2:
        i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

     label3:
        $i5 = i3;

        i3 = i3 + 1;

        c0 = r1[$i5];

        if c0 > 92 goto label6;

        if c0 != 92 goto label4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char _decodeEscaped()>();

        i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        goto label6;

     label4:
        if c0 > 34 goto label6;

        if c0 != 34 goto label5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i3;

        goto label7;

     label5:
        if c0 >= 32 goto label6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(c0, "string value");

     label6:
        goto label1;

     label7:
        return;
    }

    protected final void _skipCR() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8;
        char[] $r1;
        char $c3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label1;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 == 0 goto label2;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $c3 = $r1[$i2];

        if $c3 != 10 goto label2;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i5;

     label2:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow> = $i7;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart> = $i8;

        return;
    }

    private final int _skipColon() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        char[] $r1, $r2, $r3, $r4, $r7, $r8;
        char c30, c31, c32, c33, c34;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = $i0 + 4;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label01;

        $i29 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon2(boolean)>(0);

        return $i29;

     label01:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        c30 = $r1[$i3];

        if c30 != 58 goto label09;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i19 = $i18 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i19;

        c31 = $r7[$i19];

        if c31 <= 32 goto label04;

        if c31 == 47 goto label02;

        if c31 != 35 goto label03;

     label02:
        $i26 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon2(boolean)>(1);

        return $i26;

     label03:
        $i27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i28 = $i27 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i28;

        return c31;

     label04:
        if c31 == 32 goto label05;

        if c31 != 9 goto label08;

     label05:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i21 = $i20 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i21;

        c32 = $r8[$i21];

        if c32 <= 32 goto label08;

        if c32 == 47 goto label06;

        if c32 != 35 goto label07;

     label06:
        $i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon2(boolean)>(1);

        return $i23;

     label07:
        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i25 = $i24 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i25;

        return c32;

     label08:
        $i22 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon2(boolean)>(1);

        return $i22;

     label09:
        if c30 == 32 goto label10;

        if c30 != 9 goto label11;

     label10:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i5;

        c30 = $r2[$i5];

     label11:
        if c30 != 58 goto label19;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i8;

        c33 = $r3[$i8];

        if c33 <= 32 goto label14;

        if c33 == 47 goto label12;

        if c33 != 35 goto label13;

     label12:
        $i15 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon2(boolean)>(1);

        return $i15;

     label13:
        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i17 = $i16 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i17;

        return c33;

     label14:
        if c33 == 32 goto label15;

        if c33 != 9 goto label18;

     label15:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i10;

        c34 = $r4[$i10];

        if c34 <= 32 goto label18;

        if c34 == 47 goto label16;

        if c34 != 35 goto label17;

     label16:
        $i12 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon2(boolean)>(1);

        return $i12;

     label17:
        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i14;

        return c34;

     label18:
        $i11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon2(boolean)>(1);

        return $i11;

     label19:
        $i6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon2(boolean)>(0);

        return $i6;
    }

    private final int _skipColon2(boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        char[] $r1;
        boolean $z0, $z1, z2;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4;
        java.lang.String $r5, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        z2 := @parameter0: boolean;

     label01:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i6 < $i7 goto label02;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z1 == 0 goto label11;

     label02:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i2;

        c0 = $r1[$i1];

        if c0 <= 32 goto label07;

        if c0 != 47 goto label03;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipComment()>();

        goto label01;

     label03:
        if c0 != 35 goto label04;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _skipYAMLComment()>();

        if $z0 == 0 goto label04;

        goto label01;

     label04:
        if z2 == 0 goto label05;

        return c0;

     label05:
        if c0 == 58 goto label06;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(c0, "was expecting a colon to separate field name and value");

     label06:
        z2 = 1;

        goto label01;

     label07:
        if c0 >= 32 goto label10;

        if c0 != 10 goto label08;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow> = $i4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart> = $i5;

        goto label10;

     label08:
        if c0 != 13 goto label09;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCR()>();

        goto label10;

     label09:
        if c0 == 9 goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwInvalidSpace(int)>(c0);

     label10:
        goto label01;

     label11:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" within/between ");

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String typeDesc()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r8, null);

        return -1;
    }

    private final int _skipColonFast(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        boolean z0, $z1;
        char[] $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, i4, i5, i7, $i10, $i11, $i14, $i15;
        char c6, c8, c9, c12, c13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i4 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        i5 = i4 + 1;

        c6 = $r1[i4];

        if c6 != 58 goto label04;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        i7 = i5 + 1;

        c8 = $r5[i5];

        if c8 <= 32 goto label01;

        if c8 == 47 goto label03;

        if c8 == 35 goto label03;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i7;

        return c8;

     label01:
        if c8 == 32 goto label02;

        if c8 != 9 goto label03;

     label02:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i3 = i7;

        i7 = i7 + 1;

        c9 = $r6[$i3];

        if c9 <= 32 goto label03;

        if c9 == 47 goto label03;

        if c9 == 35 goto label03;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i7;

        return c9;

     label03:
        $i10 = i7 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i10;

        $i11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon2(boolean)>(1);

        return $i11;

     label04:
        if c6 == 32 goto label05;

        if c6 != 9 goto label06;

     label05:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i0 = i5;

        i5 = i5 + 1;

        c6 = $r2[$i0];

     label06:
        if c6 != 58 goto label07;

        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        z0 = $z1;

        if $z1 == 0 goto label11;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i1 = i5;

        i5 = i5 + 1;

        c12 = $r3[$i1];

        if c12 <= 32 goto label09;

        if c12 == 47 goto label11;

        if c12 == 35 goto label11;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i5;

        return c12;

     label09:
        if c12 == 32 goto label10;

        if c12 != 9 goto label11;

     label10:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i2 = i5;

        i5 = i5 + 1;

        c13 = $r4[$i2];

        if c13 <= 32 goto label11;

        if c13 == 47 goto label11;

        if c13 == 35 goto label11;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i5;

        return c13;

     label11:
        $i14 = i5 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i14;

        $i15 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon2(boolean)>(z0);

        return $i15;
    }

    private final int _skipComma(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11;
        char[] $r1;
        java.lang.StringBuilder $r3, $r4, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r5;
        java.lang.String $r6, $r9;
        char c12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i9 := @parameter0: int;

        if i9 == 44 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("was expecting comma to separate ");

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String typeDesc()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i9, $r9);

     label1:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i10 >= $i11 goto label7;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i2;

        c12 = $r1[$i1];

        if c12 <= 32 goto label4;

        if c12 == 47 goto label2;

        if c12 != 35 goto label3;

     label2:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i7 = $i6 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i7;

        $i8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipAfterComma2()>();

        return $i8;

     label3:
        return c12;

     label4:
        if c12 >= 32 goto label1;

        if c12 != 10 goto label5;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow> = $i4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart> = $i5;

        goto label1;

     label5:
        if c12 != 13 goto label6;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCR()>();

        goto label1;

     label6:
        if c12 == 9 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwInvalidSpace(int)>(c12);

        goto label1;

     label7:
        $i0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipAfterComma2()>();

        return $i0;
    }

    private final int _skipAfterComma2() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        char[] $r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4;
        java.lang.String $r5, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

     label1:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i6 < $i7 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z1 == 0 goto label9;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i2;

        c0 = $r1[$i1];

        if c0 <= 32 goto label5;

        if c0 != 47 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipComment()>();

        goto label1;

     label3:
        if c0 != 35 goto label4;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _skipYAMLComment()>();

        if $z0 == 0 goto label4;

        goto label1;

     label4:
        return c0;

     label5:
        if c0 >= 32 goto label8;

        if c0 != 10 goto label6;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow> = $i4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart> = $i5;

        goto label8;

     label6:
        if c0 != 13 goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCR()>();

        goto label8;

     label7:
        if c0 == 9 goto label8;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwInvalidSpace(int)>(c0);

     label8:
        goto label1;

     label9:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end-of-input within/between ");

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String typeDesc()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String)>($r8);

        throw $r9;
    }

    private final int _skipWSOrEnd() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22;
        char[] $r1, $r2;
        boolean $z0;
        char c20, c23;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label01;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label01;

        $i19 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _eofAsNextChar()>();

        return $i19;

     label01:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i3;

        c20 = $r1[$i2];

        if c20 <= 32 goto label04;

        if c20 == 47 goto label02;

        if c20 != 35 goto label03;

     label02:
        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i17 = $i16 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i17;

        $i18 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipWSOrEnd2()>();

        return $i18;

     label03:
        return c20;

     label04:
        if c20 == 32 goto label07;

        if c20 != 10 goto label05;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow> = $i14;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart> = $i15;

        goto label07;

     label05:
        if c20 != 13 goto label06;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCR()>();

        goto label07;

     label06:
        if c20 == 9 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwInvalidSpace(int)>(c20);

     label07:
        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i21 >= $i22 goto label13;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i6;

        c23 = $r2[$i5];

        if c23 <= 32 goto label10;

        if c23 == 47 goto label08;

        if c23 != 35 goto label09;

     label08:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i11 = $i10 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i11;

        $i12 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipWSOrEnd2()>();

        return $i12;

     label09:
        return c23;

     label10:
        if c23 == 32 goto label07;

        if c23 != 10 goto label11;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow> = $i8;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart> = $i9;

        goto label07;

     label11:
        if c23 != 13 goto label12;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCR()>();

        goto label07;

     label12:
        if c23 == 9 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwInvalidSpace(int)>(c23);

        goto label07;

     label13:
        $i4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipWSOrEnd2()>();

        return $i4;
    }

    private int _skipWSOrEnd2() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char[] $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

     label1:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i7 < $i8 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z1 != 0 goto label2;

        $i6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _eofAsNextChar()>();

        return $i6;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i2;

        c0 = $r1[$i1];

        if c0 <= 32 goto label5;

        if c0 != 47 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipComment()>();

        goto label1;

     label3:
        if c0 != 35 goto label4;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _skipYAMLComment()>();

        if $z0 == 0 goto label4;

        goto label1;

     label4:
        return c0;

     label5:
        if c0 == 32 goto label8;

        if c0 != 10 goto label6;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow> = $i4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart> = $i5;

        goto label8;

     label6:
        if c0 != 13 goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCR()>();

        goto label8;

     label7:
        if c0 == 9 goto label8;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwInvalidSpace(int)>(c0);

     label8:
        goto label1;
    }

    private void _skipComment() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        char[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_JAVA_COMMENTS>;

        $i3 = $i2 & $i1;

        if $i3 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(47, "maybe a (non-standard) comment? (not recognized as one since Feature \'ALLOW_COMMENTS\' not enabled for parser)");

     label1:
        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i5 < $i4 goto label2;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in a comment", null);

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i7;

        c0 = $r1[$i6];

        if c0 != 47 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipLine()>();

        goto label5;

     label3:
        if c0 != 42 goto label4;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCComment()>();

        goto label5;

     label4:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(c0, "was expecting either \'*\' or \'/\' for a comment");

     label5:
        return;
    }

    private void _skipCComment() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char c0, $c9;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13;
        char[] $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

     label1:
        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i12 < $i13 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z1 == 0 goto label8;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i2;

        c0 = $r1[$i1];

        if c0 > 42 goto label7;

        if c0 != 42 goto label4;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i7 < $i6 goto label3;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label3;

        goto label8;

     label3:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $c9 = $r2[$i8];

        if $c9 != 47 goto label1;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i11;

        return;

     label4:
        if c0 >= 32 goto label7;

        if c0 != 10 goto label5;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow> = $i4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart> = $i5;

        goto label7;

     label5:
        if c0 != 13 goto label6;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCR()>();

        goto label7;

     label6:
        if c0 == 9 goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwInvalidSpace(int)>(c0);

     label7:
        goto label1;

     label8:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in a comment", null);

        return;
    }

    private boolean _skipYAMLComment() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _features>;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_YAML_COMMENTS>;

        $i2 = $i1 & $i0;

        if $i2 != 0 goto label1;

        return 0;

     label1:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipLine()>();

        return 1;
    }

    private void _skipLine() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label2;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 == 0 goto label6;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i4;

        c0 = $r1[$i3];

        if c0 >= 32 goto label5;

        if c0 != 10 goto label3;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow> = $i6;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart> = $i7;

        goto label6;

     label3:
        if c0 != 13 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCR()>();

        goto label6;

     label4:
        if c0 == 9 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _throwInvalidSpace(int)>(c0);

     label5:
        goto label1;

     label6:
        return;
    }

    protected char _decodeEscaped() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char c0, c1, $c5, $c9;
        int i2, $i3, $i4, $i6, $i7, $i8, $i10, $i11, i12, i13, $i14, $i15;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2;
        char[] $r3, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i4 < $i3 goto label01;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z1 != 0 goto label01;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in character escape sequence", $r2);

     label01:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i11;

        c0 = $r3[$i10];

        lookupswitch(c0)
        {
            case 34: goto label07;
            case 47: goto label07;
            case 92: goto label07;
            case 98: goto label02;
            case 102: goto label05;
            case 110: goto label04;
            case 114: goto label06;
            case 116: goto label03;
            case 117: goto label08;
            default: goto label09;
        };

     label02:
        return 8;

     label03:
        return 9;

     label04:
        return 10;

     label05:
        return 12;

     label06:
        return 13;

     label07:
        return c0;

     label08:
        goto label10;

     label09:
        $c9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char _handleUnrecognizedCharacterEscape(char)>(c0);

        return $c9;

     label10:
        i12 = 0;

        i13 = 0;

     label11:
        if i13 >= 4 goto label14;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i7 < $i6 goto label12;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label12;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in character escape sequence", $r1);

     label12:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i15 = $i14 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i15;

        c1 = $r5[$i14];

        i2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int charToHex(int)>(c1);

        if i2 >= 0 goto label13;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(c1, "expected a hex-digit for character escape sequence");

     label13:
        $i8 = i12 << 4;

        i12 = $i8 | i2;

        i13 = i13 + 1;

        goto label11;

     label14:
        $c5 = (char) i12;

        return $c5;
    }

    private final void _matchTrue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char[] r1;
        char c0, $c3, $c4, $c5;
        int $i1, $i2, i6, i7, i8, i9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = i6 + 3;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label2;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $c3 = r1[i6];

        if $c3 != 114 goto label2;

        i7 = i6 + 1;

        $c4 = r1[i7];

        if $c4 != 117 goto label2;

        i8 = i7 + 1;

        $c5 = r1[i8];

        if $c5 != 101 goto label2;

        i9 = i8 + 1;

        c0 = r1[i9];

        if c0 < 48 goto label1;

        if c0 == 93 goto label1;

        if c0 != 125 goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i9;

        return;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>("true", 1);

        return;
    }

    private final void _matchFalse() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char[] r1;
        char c0, $c3, $c4, $c5, $c6;
        int $i1, $i2, i7, i8, i9, i10, i11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = i7 + 4;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label2;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $c3 = r1[i7];

        if $c3 != 97 goto label2;

        i8 = i7 + 1;

        $c4 = r1[i8];

        if $c4 != 108 goto label2;

        i9 = i8 + 1;

        $c5 = r1[i9];

        if $c5 != 115 goto label2;

        i10 = i9 + 1;

        $c6 = r1[i10];

        if $c6 != 101 goto label2;

        i11 = i10 + 1;

        c0 = r1[i11];

        if c0 < 48 goto label1;

        if c0 == 93 goto label1;

        if c0 != 125 goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i11;

        return;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>("false", 1);

        return;
    }

    private final void _matchNull() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        char[] r1;
        char c0, $c3, $c4, $c5;
        int $i1, $i2, i6, i7, i8, i9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = i6 + 3;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label2;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $c3 = r1[i6];

        if $c3 != 117 goto label2;

        i7 = i6 + 1;

        $c4 = r1[i7];

        if $c4 != 108 goto label2;

        i8 = i7 + 1;

        $c5 = r1[i8];

        if $c5 != 108 goto label2;

        i9 = i8 + 1;

        c0 = r1[i9];

        if c0 < 48 goto label1;

        if c0 == 93 goto label1;

        if c0 != 125 goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = i9;

        return;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>("null", 1);

        return;
    }

    protected final void _matchToken(java.lang.String, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.lang.String r1, $r4;
        int i0, $i2, $i3, $i4, $i5, $i8, $i9, $i10, i11;
        char c1, $c6, $c7;
        char[] $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: java.lang.String;

        i11 := @parameter1: int;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i4 = $i2 + i0;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i4 < $i3 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken2(java.lang.String,int)>(r1, i11);

        return;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $c6 = $r2[$i5];

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i11);

        if $c6 == $c7 goto label2;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i11);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidToken(java.lang.String)>($r4);

     label2:
        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i9 = $i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i9;

        i11 = i11 + 1;

        if i11 < i0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        c1 = $r3[$i10];

        if c1 < 48 goto label3;

        if c1 == 93 goto label3;

        if c1 == 125 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _checkMatchEnd(java.lang.String,int,int)>(r1, i11, c1);

     label3:
        return;
    }

    private final void _matchToken2(java.lang.String, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.lang.String r1, $r4;
        int i0, $i2, $i3, $i4, $i7, $i8, $i9, i10, $i11, $i12;
        char c1, $c5, $c6;
        char[] $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: java.lang.String;

        i10 := @parameter1: int;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i3 < $i2 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z1 == 0 goto label3;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $c5 = $r2[$i4];

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10);

        if $c5 == $c6 goto label4;

     label3:
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i10);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidToken(java.lang.String)>($r4);

     label4:
        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i12;

        i10 = i10 + 1;

        if i10 < i0 goto label1;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i8 < $i7 goto label5;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label5;

        return;

     label5:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        c1 = $r3[$i9];

        if c1 < 48 goto label6;

        if c1 == 93 goto label6;

        if c1 == 125 goto label6;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _checkMatchEnd(java.lang.String,int,int)>(r1, i10, c1);

     label6:
        return;
    }

    private final void _checkMatchEnd(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.lang.String r1, $r2;
        int i0, i1;
        char c2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        c2 = (char) i1;

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>(c2);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidToken(java.lang.String)>($r2);

     label1:
        return;
    }

    protected byte[] _decodeBase64(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, i30, i31, i33, i34, i36, i37, i39, i40, i42, i43, i44, i45;
        char[] $r3, $r4, $r5, $r6, $r9;
        boolean $z0, $z1, $z2;
        byte[] $r7, $r17, $r20;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        char $c24, c29, c32, c35, c38, c41;
        java.lang.String $r14;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder()>();

     label01:
        $i27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i28 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i27 < $i28 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _loadMoreGuaranteed()>();

     label02:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i1 = $i0 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i1;

        c29 = $r3[$i0];

        if c29 <= 32 goto label01;

        i30 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(char)>(c29);

        if i30 >= 0 goto label04;

        if c29 != 34 goto label03;

        $r20 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();

        return $r20;

     label03:
        i30 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,char,int)>(r1, c29, 0);

        if i30 >= 0 goto label04;

        goto label01;

     label04:
        i31 = i30;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i3 < $i2 goto label05;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _loadMoreGuaranteed()>();

     label05:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i5;

        c32 = $r4[$i4];

        i33 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(char)>(c32);

        if i33 >= 0 goto label06;

        i33 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,char,int)>(r1, c32, 1);

     label06:
        $i6 = i31 << 6;

        i34 = $i6 | i33;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i8 < $i7 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _loadMoreGuaranteed()>();

     label07:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i10;

        c35 = $r5[$i9];

        i36 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(char)>(c35);

        if i36 >= 0 goto label13;

        if i36 == -2 goto label10;

        if c35 != 34 goto label09;

        i37 = i34 >> 4;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(i37);

        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPadding()>();

        if $z2 == 0 goto label08;

        $i25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i26 = $i25 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i26;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _handleBase64MissingPadding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

     label08:
        $r17 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();

        return $r17;

     label09:
        i36 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,char,int)>(r1, c35, 2);

     label10:
        if i36 != -2 goto label13;

        $i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i20 < $i19 goto label11;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _loadMoreGuaranteed()>();

     label11:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i22 = $i21 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i22;

        c38 = $r9[$i21];

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPaddingChar(char)>(c38);

        if $z1 != 0 goto label12;

        $i23 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,char,int)>(r1, c38, 3);

        if $i23 == -2 goto label12;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected padding character \'");

        $c24 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: char getPaddingChar()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c24);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.IllegalArgumentException reportInvalidBase64Char(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)>(r1, c38, 3, $r14);

        throw $r15;

     label12:
        i39 = i34 >> 4;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(i39);

        goto label01;

     label13:
        $i11 = i34 << 6;

        i40 = $i11 | i36;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i13 < $i12 goto label14;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _loadMoreGuaranteed()>();

     label14:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i15 = $i14 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i15;

        c41 = $r6[$i14];

        i42 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(char)>(c41);

        if i42 >= 0 goto label18;

        if i42 == -2 goto label17;

        if c41 != 34 goto label16;

        i43 = i40 >> 2;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void appendTwoBytes(int)>(i43);

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPadding()>();

        if $z0 == 0 goto label15;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i18 = $i17 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i18;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _handleBase64MissingPadding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

     label15:
        $r7 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();

        return $r7;

     label16:
        i42 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,char,int)>(r1, c41, 3);

     label17:
        if i42 != -2 goto label18;

        i44 = i40 >> 2;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void appendTwoBytes(int)>(i44);

        goto label01;

     label18:
        $i16 = i40 << 6;

        i45 = $i16 | i42;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void appendThreeBytes(int)>(i45);

        goto label01;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation getTokenLocation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        long l0, $l1, $l4, $l5, $l6, $l7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation $r3, $r5;
        java.lang.Object $r4, $r6;
        int $i2, $i3, $i8, $i9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r2 != $r1 goto label1;

        $l7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long _currInputProcessed>;

        $l5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long _nameStartOffset>;

        $l6 = $l5 - 1L;

        l0 = $l7 + $l6;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.Object _getSourceReference()>();

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _nameStartRow>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _nameStartCol>;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation: void <init>(java.lang.Object,long,long,int,int)>($r6, -1L, l0, $i9, $i8);

        return $r5;

     label1:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.Object _getSourceReference()>();

        $l1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long _tokenInputTotal>;

        $l4 = $l1 - 1L;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol>;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation: void <init>(java.lang.Object,long,long,int,int)>($r4, -1L, $l4, $i3, $i2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation getCurrentLocation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation $r1;
        java.lang.Object $r2;
        long $l5, $l6, $l8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart>;

        $i3 = $i2 - $i1;

        i0 = $i3 + 1;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.Object _getSourceReference()>();

        $l6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long _currInputProcessed>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $l5 = (long) $i4;

        $l8 = $l6 + $l5;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation: void <init>(java.lang.Object,long,long,int,int)>($r2, -1L, $l8, $i7, i0);

        return $r1;
    }

    private final void _updateLocation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, $i4, $i5, $i6;
        long $l1, $l2, $l3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $l2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long _currInputProcessed>;

        $l1 = (long) i0;

        $l3 = $l2 + $l1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long _tokenInputTotal> = $l3;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputRow> = $i4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart>;

        $i6 = i0 - $i5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _tokenInputCol> = $i6;

        return;
    }

    private final void _updateNameLocation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0, $i2, $i3, $i4;
        long $l1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $l1 = (long) i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: long _nameStartOffset> = $l1;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRow>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _nameStartRow> = $i2;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _currInputRowStart>;

        $i4 = i0 - $i3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _nameStartCol> = $i4;

        return;
    }

    protected void _reportInvalidToken(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _validJsonTokenList()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidToken(java.lang.String,java.lang.String)>(r1, $r2);

        return;
    }

    protected void _reportInvalidToken(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        java.lang.String r1, r2;
        char c0;
        java.lang.StringBuilder $r4;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        char[] $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _loadMore()>();

        if $z1 == 0 goto label5;

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        c0 = $r5[$i3];

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>(c0);

        if $z0 != 0 goto label3;

        goto label5;

     label3:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _inputPtr> = $i5;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $i6 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();

        if $i6 < 256 goto label4;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        goto label5;

     label4:
        goto label1;

     label5:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportError(java.lang.String,java.lang.Object,java.lang.Object)>("Unrecognized token \'%s\': was expecting %s", $r4, r2);

        return;
    }

    private void _closeScope(int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r1, $r2, $r3, $r5, $r6, $r7;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        i0 := @parameter0: int;

        if i0 != 93 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _updateLocation()>();

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inArray()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportMismatchedEndMarker(int,char)>(i0, 125);

     label1:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext clearAndGetParent()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r7;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r8;

     label2:
        if i0 != 125 goto label4;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _updateLocation()>();

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inObject()>();

        if $z0 != 0 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportMismatchedEndMarker(int,char)>(i0, 93);

     label3:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext clearAndGetParent()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r3;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r4;

     label4:
        return;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r8;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_TRAILING_COMMA>;

        $i0 = virtualinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_TRAILING_COMMA> = $i0;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS>;

        $i1 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_LEADING_ZEROS> = $i1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS>;

        $i2 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_NON_NUM_NUMBERS> = $i2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_MISSING_VALUES>;

        $i3 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_MISSING> = $i3;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_SINGLE_QUOTES>;

        $i4 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_SINGLE_QUOTES> = $i4;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES>;

        $i5 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_UNQUOTED_NAMES> = $i5;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_COMMENTS>;

        $i6 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_JAVA_COMMENTS> = $i6;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_YAML_COMMENTS>;

        $i7 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int FEAT_MASK_ALLOW_YAML_COMMENTS> = $i7;

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeLatin1()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int[] _icLatin1> = $r8;

        return;
    }
}
