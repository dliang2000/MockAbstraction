public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer implements java.io.Serializable
{
    private static final long serialVersionUID;
    public static final int TYPE_BOOLEAN;
    public static final int TYPE_BYTE;
    public static final int TYPE_SHORT;
    public static final int TYPE_CHAR;
    public static final int TYPE_INT;
    public static final int TYPE_LONG;
    public static final int TYPE_FLOAT;
    public static final int TYPE_DOUBLE;
    public static final int TYPE_LOCALE;
    public static final int TYPE_DATE;
    public static final int TYPE_CALENDAR;
    public static final int TYPE_UUID;
    public static final int TYPE_URI;
    public static final int TYPE_URL;
    public static final int TYPE_CLASS;
    public static final int TYPE_CURRENCY;
    public static final int TYPE_BYTE_ARRAY;
    protected final int _kind;
    protected final java.lang.Class _keyClass;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser;

    protected void <init>(int, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer r0;
        int i0;
        java.lang.Class r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Class;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: void <init>(int,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer)>(i0, r1, null);

        return;
    }

    protected void <init>(int, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer r0;
        int i0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int _kind> = i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser> = r2;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer forType(java.lang.Class)
    {
        java.lang.Class r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer $r1, $r2, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD $r3;
        byte b0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer r4, r5;

        r0 := @parameter0: java.lang.Class;

        if r0 == class "Ljava/lang/String;" goto label01;

        if r0 == class "Ljava/lang/Object;" goto label01;

        if r0 == class "Ljava/lang/CharSequence;" goto label01;

        if r0 != class "Ljava/io/Serializable;" goto label02;

     label01:
        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class)>(r0);

        return $r3;

     label02:
        if r0 != class "Ljava/util/UUID;" goto label03;

        b0 = 12;

        goto label20;

     label03:
        if r0 != class "Ljava/lang/Integer;" goto label04;

        b0 = 5;

        goto label20;

     label04:
        if r0 != class "Ljava/lang/Long;" goto label05;

        b0 = 6;

        goto label20;

     label05:
        if r0 != class "Ljava/util/Date;" goto label06;

        b0 = 10;

        goto label20;

     label06:
        if r0 != class "Ljava/util/Calendar;" goto label07;

        b0 = 11;

        goto label20;

     label07:
        if r0 != class "Ljava/lang/Boolean;" goto label08;

        b0 = 1;

        goto label20;

     label08:
        if r0 != class "Ljava/lang/Byte;" goto label09;

        b0 = 2;

        goto label20;

     label09:
        if r0 != class "Ljava/lang/Character;" goto label10;

        b0 = 4;

        goto label20;

     label10:
        if r0 != class "Ljava/lang/Short;" goto label11;

        b0 = 3;

        goto label20;

     label11:
        if r0 != class "Ljava/lang/Float;" goto label12;

        b0 = 7;

        goto label20;

     label12:
        if r0 != class "Ljava/lang/Double;" goto label13;

        b0 = 8;

        goto label20;

     label13:
        if r0 != class "Ljava/net/URI;" goto label14;

        b0 = 13;

        goto label20;

     label14:
        if r0 != class "Ljava/net/URL;" goto label15;

        b0 = 14;

        goto label20;

     label15:
        if r0 != class "Ljava/lang/Class;" goto label16;

        b0 = 15;

        goto label20;

     label16:
        if r0 != class "Ljava/util/Locale;" goto label17;

        r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer findDeserializer(java.lang.Class)>(class "Ljava/util/Locale;");

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: void <init>(int,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer)>(9, r0, r4);

        return $r2;

     label17:
        if r0 != class "Ljava/util/Currency;" goto label18;

        r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer findDeserializer(java.lang.Class)>(class "Ljava/util/Currency;");

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: void <init>(int,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer)>(16, r0, r5);

        return $r1;

     label18:
        if r0 != class "[B" goto label19;

        b0 = 17;

        goto label20;

     label19:
        return null;

     label20:
        $r6 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: void <init>(int,java.lang.Class)>(b0, r0);

        return $r6;
    }

    public java.lang.Object deserializeKey(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer r0;
        java.lang.String r1, $r13, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Class $r3, $r5, $r11, $r12;
        boolean $z0, $z1;
        java.lang.Object[] $r4, $r10;
        java.lang.Object $r6, $r15, r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r8;
        java.lang.Exception $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        if r1 != null goto label1;

        return null;

     label1:
        r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _parse(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        if r16 == null goto label3;

     label2:
        return r16;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;

        $r10 = newarray (java.lang.Object)[2];

        $r12 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r10[0] = $r13;

        $r14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>($r9);

        $r10[1] = $r14;

        $r15 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r11, r1, "not a valid representation, problem: (%s) %s", $r10);

        return $r15;

     label5:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;

        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isEnumType(java.lang.Class)>($r3);

        if $z0 == 0 goto label6;

        $r7 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature READ_UNKNOWN_ENUM_VALUES_AS_NULL>;

        $z1 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r8);

        if $z1 == 0 goto label6;

        return null;

     label6:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;

        $r4 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r5, r1, "not a valid representation", $r4);

        return $r6;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public java.lang.Class getKeyClass()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;

        return $r1;
    }

    protected java.lang.Object _parse(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.lang.Exception
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer r0;
        java.lang.String r1, $r33, $r34, $r45;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int $i0, $i2, $i3, i7, i8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant $r4;
        byte[] $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer $r6, $r15;
        java.lang.Object $r7, $r16, $r23, $r27, $r31, $r37, $r47, $r51, $r53, $r55, $r57, $r59, $r61;
        java.lang.Class $r8, $r22, $r26, $r30, $r36, $r43, $r50;
        java.net.URL $r9;
        java.net.URI $r10;
        java.util.UUID $r11;
        java.util.Date $r12, $r14;
        java.util.Calendar $r13;
        double $d0, $d1;
        java.lang.Double $r17;
        float $f0;
        java.lang.Float $r18;
        long $l1;
        java.lang.Long $r19;
        java.lang.Integer $r20;
        java.lang.Object[] $r21, $r25, $r29, $r35, $r49;
        char $c4;
        java.lang.Character $r24;
        short $s5;
        java.lang.Short $r28;
        byte $b6;
        java.lang.Byte $r32;
        boolean $z0, $z1;
        java.lang.Boolean $r38, $r39;
        java.lang.IllegalStateException $r40;
        java.lang.StringBuilder $r41, $r42, $r44;
        java.lang.IllegalArgumentException $r46, $r52, $r56;
        java.lang.Exception $r48, $r58, $r60;
        java.net.MalformedURLException $r54;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int _kind>;

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label04;
            case 3: goto label07;
            case 4: goto label10;
            case 5: goto label12;
            case 6: goto label13;
            case 7: goto label14;
            case 8: goto label15;
            case 9: goto label16;
            case 10: goto label22;
            case 11: goto label23;
            case 12: goto label24;
            case 13: goto label27;
            case 14: goto label30;
            case 15: goto label33;
            case 16: goto label19;
            case 17: goto label36;
            default: goto label39;
        };

     label01:
        $r33 = "true";

        $z0 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label02;

        $r39 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r39;

     label02:
        $r34 = "false";

        $z1 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label03;

        $r38 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r38;

     label03:
        $r36 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;

        $r35 = newarray (java.lang.Object)[0];

        $r37 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r36, r1, "value not \'true\' or \'false\'", $r35);

        return $r37;

     label04:
        i7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int _parseInt(java.lang.String)>(r1);

        if i7 < -128 goto label05;

        if i7 <= 255 goto label06;

     label05:
        $r30 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;

        $r29 = newarray (java.lang.Object)[0];

        $r31 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r30, r1, "overflow, value cannot be represented as 8-bit value", $r29);

        return $r31;

     label06:
        $b6 = (byte) i7;

        $r32 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b6);

        return $r32;

     label07:
        i8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int _parseInt(java.lang.String)>(r1);

        if i8 < -32768 goto label08;

        if i8 <= 32767 goto label09;

     label08:
        $r26 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;

        $r25 = newarray (java.lang.Object)[0];

        $r27 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r26, r1, "overflow, value cannot be represented as 16-bit value", $r25);

        return $r27;

     label09:
        $s5 = (short) i8;

        $r28 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s5);

        return $r28;

     label10:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 != 1 goto label11;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $r24 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c4);

        return $r24;

     label11:
        $r22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;

        $r21 = newarray (java.lang.Object)[0];

        $r23 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r22, r1, "can only convert 1-character Strings", $r21);

        return $r23;

     label12:
        $i2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int _parseInt(java.lang.String)>(r1);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r20;

     label13:
        $l1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: long _parseLong(java.lang.String)>(r1);

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r19;

     label14:
        $d1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: double _parseDouble(java.lang.String)>(r1);

        $f0 = (float) $d1;

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r18;

     label15:
        $d0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: double _parseDouble(java.lang.String)>(r1);

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r17;

     label16:
        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser>;

        $r16 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserialize(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

     label17:
        return $r16;

     label18:
        $r46 := @caughtexception;

        $r47 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(r2, r1, $r46);

        return $r47;

     label19:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserialize(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

     label20:
        return $r7;

     label21:
        $r56 := @caughtexception;

        $r57 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(r2, r1, $r56);

        return $r57;

     label22:
        $r14 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.util.Date parseDate(java.lang.String)>(r1);

        return $r14;

     label23:
        $r12 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.util.Date parseDate(java.lang.String)>(r1);

        $r13 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.util.Calendar constructCalendar(java.util.Date)>($r12);

        return $r13;

     label24:
        $r11 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>(r1);

     label25:
        return $r11;

     label26:
        $r60 := @caughtexception;

        $r61 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(r2, r1, $r60);

        return $r61;

     label27:
        $r10 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r1);

     label28:
        return $r10;

     label29:
        $r58 := @caughtexception;

        $r59 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(r2, r1, $r58);

        return $r59;

     label30:
        $r9 = new java.net.URL;

        specialinvoke $r9.<java.net.URL: void <init>(java.lang.String)>(r1);

     label31:
        return $r9;

     label32:
        $r54 := @caughtexception;

        $r55 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(r2, r1, $r54);

        return $r55;

     label33:
        $r8 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class findClass(java.lang.String)>(r1);

     label34:
        return $r8;

     label35:
        $r48 := @caughtexception;

        $r50 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;

        $r49 = newarray (java.lang.Object)[0];

        $r51 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r50, r1, "unable to parse key as Class", $r49);

        return $r51;

     label36:
        $r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: byte[] decode(java.lang.String)>(r1);

     label37:
        return $r5;

     label38:
        $r52 := @caughtexception;

        $r53 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(r2, r1, $r52);

        return $r53;

     label39:
        $r40 = new java.lang.IllegalStateException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Internal error: unknown key type ");

        $r43 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r45);

        throw $r40;

        catch java.lang.IllegalArgumentException from label16 to label17 with label18;
        catch java.lang.IllegalArgumentException from label19 to label20 with label21;
        catch java.lang.Exception from label24 to label25 with label26;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.net.MalformedURLException from label30 to label31 with label32;
        catch java.lang.Exception from label33 to label34 with label35;
        catch java.lang.IllegalArgumentException from label36 to label37 with label38;
    }

    protected int _parseInt(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        return $i0;
    }

    protected long _parseLong(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        r1 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

        return $l0;
    }

    protected double _parseDouble(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer r0;
        java.lang.String r1;
        double $d0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        r1 := @parameter0: java.lang.String;

        $d0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String)>(r1);

        return $d0;
    }

    protected java.lang.Object _weirdKey(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.String, java.lang.Exception) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2, $r6;
        java.lang.Exception r3;
        java.lang.Object[] $r4;
        java.lang.Class $r5;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Exception;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(r3);

        $r4[0] = $r6;

        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r5, r2, "problem: %s", $r4);

        return $r7;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_BYTE_ARRAY> = 17;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_CURRENCY> = 16;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_CLASS> = 15;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_URL> = 14;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_URI> = 13;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_UUID> = 12;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_CALENDAR> = 11;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_DATE> = 10;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_LOCALE> = 9;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_DOUBLE> = 8;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_FLOAT> = 7;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_LONG> = 6;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_INT> = 5;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_CHAR> = 4;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_SHORT> = 3;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_BYTE> = 2;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int TYPE_BOOLEAN> = 1;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: long serialVersionUID> = 1L;

        return;
    }
}
