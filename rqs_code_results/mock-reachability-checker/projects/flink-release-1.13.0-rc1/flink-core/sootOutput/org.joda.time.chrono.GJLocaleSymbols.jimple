class org.joda.time.chrono.GJLocaleSymbols extends java.lang.Object
{
    private static java.util.concurrent.ConcurrentMap cCache;
    private final java.lang.String[] iEras;
    private final java.lang.String[] iDaysOfWeek;
    private final java.lang.String[] iShortDaysOfWeek;
    private final java.lang.String[] iMonths;
    private final java.lang.String[] iShortMonths;
    private final java.lang.String[] iHalfday;
    private final java.util.TreeMap iParseEras;
    private final java.util.TreeMap iParseDaysOfWeek;
    private final java.util.TreeMap iParseMonths;
    private final int iMaxEraLength;
    private final int iMaxDayOfWeekLength;
    private final int iMaxShortDayOfWeekLength;
    private final int iMaxMonthLength;
    private final int iMaxShortMonthLength;
    private final int iMaxHalfdayLength;

    static org.joda.time.chrono.GJLocaleSymbols forLocale(java.util.Locale)
    {
        org.joda.time.chrono.GJLocaleSymbols r0, $r3, r7;
        java.util.concurrent.ConcurrentMap $r1, $r4;
        java.lang.Object $r2, $r5;
        java.util.Locale r6;

        r6 := @parameter0: java.util.Locale;

        if r6 != null goto label1;

        r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label1:
        $r1 = <org.joda.time.chrono.GJLocaleSymbols: java.util.concurrent.ConcurrentMap cCache>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (org.joda.time.chrono.GJLocaleSymbols) $r2;

        if r7 != null goto label2;

        $r3 = new org.joda.time.chrono.GJLocaleSymbols;

        specialinvoke $r3.<org.joda.time.chrono.GJLocaleSymbols: void <init>(java.util.Locale)>(r6);

        r7 = $r3;

        $r4 = <org.joda.time.chrono.GJLocaleSymbols: java.util.concurrent.ConcurrentMap cCache>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r6, $r3);

        r0 = (org.joda.time.chrono.GJLocaleSymbols) $r5;

        if r0 == null goto label2;

        r7 = r0;

     label2:
        return r7;
    }

    private static java.lang.String[] realignMonths(java.lang.String[])
    {
        java.lang.String[] r0, r1;
        int $i0, i1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.String[];

        r1 = newarray (java.lang.String)[13];

        i1 = 1;

     label1:
        if i1 >= 13 goto label2;

        $i0 = i1 - 1;

        $r2 = r0[$i0];

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    private static java.lang.String[] realignDaysOfWeek(java.lang.String[])
    {
        java.lang.String[] r0, r1;
        java.lang.String $r2;
        int $i0, i1, $i2;

        r0 := @parameter0: java.lang.String[];

        r1 = newarray (java.lang.String)[8];

        i1 = 1;

     label1:
        if i1 >= 8 goto label4;

        $i0 = i1;

        if i1 >= 7 goto label2;

        $i2 = i1 + 1;

        goto label3;

     label2:
        $i2 = 1;

     label3:
        $r2 = r0[$i2];

        r1[$i0] = $r2;

        i1 = i1 + 1;

        goto label1;

     label4:
        return r1;
    }

    private static void addSymbols(java.util.TreeMap, java.lang.String[], java.lang.Integer[])
    {
        java.util.TreeMap r0;
        java.lang.String[] r1;
        java.lang.Integer[] r2;
        java.lang.String r3;
        java.lang.Integer $r4;
        int i0;

        r0 := @parameter0: java.util.TreeMap;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.Integer[];

        i0 = lengthof r1;

     label1:
        i0 = i0 + -1;

        if i0 < 0 goto label3;

        r3 = r1[i0];

        if r3 == null goto label2;

        $r4 = r2[i0];

        virtualinvoke r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r4);

     label2:
        goto label1;

     label3:
        return;
    }

    private static void addNumerals(java.util.TreeMap, int, int, java.lang.Integer[])
    {
        java.util.TreeMap r0;
        int i0, i1, i2;
        java.lang.Integer[] r1;
        java.lang.String $r2, $r3;
        java.lang.Integer $r4;

        r0 := @parameter0: java.util.TreeMap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.Integer[];

        i2 = i0;

     label1:
        if i2 > i1 goto label2;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i2);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String intern()>();

        $r4 = r1[i2];

        virtualinvoke r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private static int maxLength(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.String r1;
        int i0, i1, i2;

        r0 := @parameter0: java.lang.String[];

        i1 = 0;

        i2 = lengthof r0;

     label1:
        i2 = i2 + -1;

        if i2 < 0 goto label3;

        r1 = r0[i2];

        if r1 == null goto label2;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 <= i1 goto label2;

        i1 = i0;

     label2:
        goto label1;

     label3:
        return i1;
    }

    private void <init>(java.util.Locale)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        java.util.Locale r1;
        java.text.DateFormatSymbols r2;
        java.lang.Integer[] r3;
        java.lang.String[] $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r22, $r24, $r29, $r31, $r34, $r35, $r36, $r37, $r38, $r39;
        java.util.TreeMap $r14, $r17, $r20, $r23, $r25, $r26, $r27, $r30, $r32, $r33, $r41, $r44;
        java.util.Comparator $r15, $r21, $r28;
        java.lang.String $r18, $r19;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Integer $r40, $r43, $r46;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = staticinvoke <org.joda.time.DateTimeUtils: java.text.DateFormatSymbols getDateFormatSymbols(java.util.Locale)>(r1);

        $r4 = virtualinvoke r2.<java.text.DateFormatSymbols: java.lang.String[] getEras()>();

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iEras> = $r4;

        $r5 = virtualinvoke r2.<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>();

        $r6 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] realignDaysOfWeek(java.lang.String[])>($r5);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iDaysOfWeek> = $r6;

        $r7 = virtualinvoke r2.<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>();

        $r8 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] realignDaysOfWeek(java.lang.String[])>($r7);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortDaysOfWeek> = $r8;

        $r9 = virtualinvoke r2.<java.text.DateFormatSymbols: java.lang.String[] getMonths()>();

        $r10 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] realignMonths(java.lang.String[])>($r9);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iMonths> = $r10;

        $r11 = virtualinvoke r2.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>();

        $r12 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] realignMonths(java.lang.String[])>($r11);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortMonths> = $r12;

        $r13 = virtualinvoke r2.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>();

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iHalfday> = $r13;

        r3 = newarray (java.lang.Integer)[13];

        i6 = 0;

     label1:
        if i6 >= 13 goto label2;

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        r3[i6] = $r46;

        i6 = i6 + 1;

        goto label1;

     label2:
        $r14 = new java.util.TreeMap;

        $r15 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r14.<java.util.TreeMap: void <init>(java.util.Comparator)>($r15);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseEras> = $r14;

        $r17 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseEras>;

        $r16 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iEras>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])>($r17, $r16, r3);

        $r18 = "en";

        $r19 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();

        $z0 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z0 == 0 goto label3;

        $r41 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseEras>;

        $r40 = r3[0];

        virtualinvoke $r41.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BCE", $r40);

        $r44 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseEras>;

        $r43 = r3[1];

        virtualinvoke $r44.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CE", $r43);

     label3:
        $r20 = new java.util.TreeMap;

        $r21 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r20.<java.util.TreeMap: void <init>(java.util.Comparator)>($r21);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseDaysOfWeek> = $r20;

        $r23 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseDaysOfWeek>;

        $r22 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iDaysOfWeek>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])>($r23, $r22, r3);

        $r25 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseDaysOfWeek>;

        $r24 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortDaysOfWeek>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])>($r25, $r24, r3);

        $r26 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseDaysOfWeek>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addNumerals(java.util.TreeMap,int,int,java.lang.Integer[])>($r26, 1, 7, r3);

        $r27 = new java.util.TreeMap;

        $r28 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r27.<java.util.TreeMap: void <init>(java.util.Comparator)>($r28);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseMonths> = $r27;

        $r30 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseMonths>;

        $r29 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iMonths>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])>($r30, $r29, r3);

        $r32 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseMonths>;

        $r31 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortMonths>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])>($r32, $r31, r3);

        $r33 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseMonths>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addNumerals(java.util.TreeMap,int,int,java.lang.Integer[])>($r33, 1, 12, r3);

        $r34 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iEras>;

        $i0 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r34);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxEraLength> = $i0;

        $r35 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iDaysOfWeek>;

        $i1 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r35);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxDayOfWeekLength> = $i1;

        $r36 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortDaysOfWeek>;

        $i2 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r36);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxShortDayOfWeekLength> = $i2;

        $r37 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iMonths>;

        $i3 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r37);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxMonthLength> = $i3;

        $r38 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortMonths>;

        $i4 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r38);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxShortMonthLength> = $i4;

        $r39 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iHalfday>;

        $i5 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r39);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxHalfdayLength> = $i5;

        return;
    }

    public java.lang.String eraValueToText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iEras>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int eraTextToValue(java.lang.String)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        java.lang.String r1;
        java.lang.Integer r2;
        java.util.TreeMap $r3;
        java.lang.Object $r4;
        org.joda.time.IllegalFieldValueException $r5;
        org.joda.time.DateTimeFieldType $r6;
        int $i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseEras>;

        $r4 = virtualinvoke $r3.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $r5 = new org.joda.time.IllegalFieldValueException;

        $r6 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType era()>();

        specialinvoke $r5.<org.joda.time.IllegalFieldValueException: void <init>(org.joda.time.DateTimeFieldType,java.lang.String)>($r6, r1);

        throw $r5;
    }

    public int getEraMaxTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxEraLength>;

        return $i0;
    }

    public java.lang.String monthOfYearValueToText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iMonths>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.lang.String monthOfYearValueToShortText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortMonths>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int monthOfYearTextToValue(java.lang.String)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        java.lang.String r1;
        java.lang.Integer r2;
        java.util.TreeMap $r3;
        java.lang.Object $r4;
        org.joda.time.IllegalFieldValueException $r5;
        org.joda.time.DateTimeFieldType $r6;
        int $i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseMonths>;

        $r4 = virtualinvoke $r3.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $r5 = new org.joda.time.IllegalFieldValueException;

        $r6 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        specialinvoke $r5.<org.joda.time.IllegalFieldValueException: void <init>(org.joda.time.DateTimeFieldType,java.lang.String)>($r6, r1);

        throw $r5;
    }

    public int getMonthMaxTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxMonthLength>;

        return $i0;
    }

    public int getMonthMaxShortTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxShortMonthLength>;

        return $i0;
    }

    public java.lang.String dayOfWeekValueToText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iDaysOfWeek>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.lang.String dayOfWeekValueToShortText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortDaysOfWeek>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int dayOfWeekTextToValue(java.lang.String)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        java.lang.String r1;
        java.lang.Integer r2;
        java.util.TreeMap $r3;
        java.lang.Object $r4;
        org.joda.time.IllegalFieldValueException $r5;
        org.joda.time.DateTimeFieldType $r6;
        int $i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseDaysOfWeek>;

        $r4 = virtualinvoke $r3.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $r5 = new org.joda.time.IllegalFieldValueException;

        $r6 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        specialinvoke $r5.<org.joda.time.IllegalFieldValueException: void <init>(org.joda.time.DateTimeFieldType,java.lang.String)>($r6, r1);

        throw $r5;
    }

    public int getDayOfWeekMaxTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxDayOfWeekLength>;

        return $i0;
    }

    public int getDayOfWeekMaxShortTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxShortDayOfWeekLength>;

        return $i0;
    }

    public java.lang.String halfdayValueToText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iHalfday>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int halfdayTextToValue(java.lang.String)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        java.lang.String r1, $r5;
        java.lang.String[] r2;
        org.joda.time.IllegalFieldValueException $r3;
        org.joda.time.DateTimeFieldType $r4;
        boolean $z0;
        int i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iHalfday>;

        i0 = lengthof r2;

     label1:
        i0 = i0 + -1;

        if i0 < 0 goto label2;

        $r5 = r2[i0];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        return i0;

     label2:
        $r3 = new org.joda.time.IllegalFieldValueException;

        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType halfdayOfDay()>();

        specialinvoke $r3.<org.joda.time.IllegalFieldValueException: void <init>(org.joda.time.DateTimeFieldType,java.lang.String)>($r4, r1);

        throw $r3;
    }

    public int getHalfdayMaxTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxHalfdayLength>;

        return $i0;
    }

    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <org.joda.time.chrono.GJLocaleSymbols: java.util.concurrent.ConcurrentMap cCache> = $r0;

        return;
    }
}
