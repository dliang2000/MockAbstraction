public class org.hamcrest.collection.IsArray extends org.hamcrest.TypeSafeMatcher
{
    private final org.hamcrest.Matcher[] elementMatchers;

    public void <init>(org.hamcrest.Matcher[])
    {
        org.hamcrest.collection.IsArray r0;
        org.hamcrest.Matcher[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.hamcrest.collection.IsArray;

        r1 := @parameter0: org.hamcrest.Matcher[];

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.hamcrest.Matcher[]) $r2;

        r0.<org.hamcrest.collection.IsArray: org.hamcrest.Matcher[] elementMatchers> = $r3;

        return;
    }

    public boolean matchesSafely(java.lang.Object[])
    {
        org.hamcrest.collection.IsArray r0;
        java.lang.Object[] r1;
        org.hamcrest.Matcher[] $r2, $r3;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r4;
        org.hamcrest.Matcher $r5;
        boolean $z0;

        r0 := @this: org.hamcrest.collection.IsArray;

        r1 := @parameter0: java.lang.Object[];

        $i1 = lengthof r1;

        $r2 = r0.<org.hamcrest.collection.IsArray: org.hamcrest.Matcher[] elementMatchers>;

        $i0 = lengthof $r2;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        i3 = 0;

     label2:
        $i2 = lengthof r1;

        if i3 >= $i2 goto label4;

        $r3 = r0.<org.hamcrest.collection.IsArray: org.hamcrest.Matcher[] elementMatchers>;

        $r5 = $r3[i3];

        $r4 = r1[i3];

        $z0 = interfaceinvoke $r5.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 1;
    }

    public void describeMismatchSafely(java.lang.Object[], org.hamcrest.Description)
    {
        org.hamcrest.collection.IsArray r0;
        java.lang.Object[] r1;
        org.hamcrest.Description r2, $r12;
        org.hamcrest.Matcher[] $r3, $r4;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Object $r5, $r13;
        org.hamcrest.Matcher $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r15, $r16, $r17;
        java.lang.String $r11, $r18;

        r0 := @this: org.hamcrest.collection.IsArray;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: org.hamcrest.Description;

        $i1 = lengthof r1;

        $r3 = r0.<org.hamcrest.collection.IsArray: org.hamcrest.Matcher[] elementMatchers>;

        $i0 = lengthof $r3;

        if $i1 == $i0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("array length was ");

        $i3 = lengthof r1;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r18);

        return;

     label1:
        i4 = 0;

     label2:
        $i2 = lengthof r1;

        if i4 >= $i2 goto label4;

        $r4 = r0.<org.hamcrest.collection.IsArray: org.hamcrest.Matcher[] elementMatchers>;

        $r6 = $r4[i4];

        $r5 = r1[i4];

        $z0 = interfaceinvoke $r6.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r5);

        if $z0 != 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r11);

        $r13 = r1[i4];

        interfaceinvoke $r12.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r13);

        return;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.collection.IsArray r0;
        org.hamcrest.Description r1;
        java.lang.String $r2, $r3, $r4;
        org.hamcrest.Matcher[] $r5;
        java.util.List $r6;

        r0 := @this: org.hamcrest.collection.IsArray;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = virtualinvoke r0.<org.hamcrest.collection.IsArray: java.lang.String descriptionStart()>();

        $r3 = virtualinvoke r0.<org.hamcrest.collection.IsArray: java.lang.String descriptionSeparator()>();

        $r4 = virtualinvoke r0.<org.hamcrest.collection.IsArray: java.lang.String descriptionEnd()>();

        $r5 = r0.<org.hamcrest.collection.IsArray: org.hamcrest.Matcher[] elementMatchers>;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendList(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable)>($r2, $r3, $r4, $r6);

        return;
    }

    protected java.lang.String descriptionStart()
    {
        org.hamcrest.collection.IsArray r0;

        r0 := @this: org.hamcrest.collection.IsArray;

        return "[";
    }

    protected java.lang.String descriptionSeparator()
    {
        org.hamcrest.collection.IsArray r0;

        r0 := @this: org.hamcrest.collection.IsArray;

        return ", ";
    }

    protected java.lang.String descriptionEnd()
    {
        org.hamcrest.collection.IsArray r0;

        r0 := @this: org.hamcrest.collection.IsArray;

        return "]";
    }

    public static transient org.hamcrest.collection.IsArray array(org.hamcrest.Matcher[])
    {
        org.hamcrest.Matcher[] r0;
        org.hamcrest.collection.IsArray $r1;

        r0 := @parameter0: org.hamcrest.Matcher[];

        $r1 = new org.hamcrest.collection.IsArray;

        specialinvoke $r1.<org.hamcrest.collection.IsArray: void <init>(org.hamcrest.Matcher[])>(r0);

        return $r1;
    }

    public volatile void describeMismatchSafely(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.collection.IsArray r0;
        java.lang.Object r1;
        org.hamcrest.Description r2;
        java.lang.Object[] $r3;

        r0 := @this: org.hamcrest.collection.IsArray;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        $r3 = (java.lang.Object[]) r1;

        virtualinvoke r0.<org.hamcrest.collection.IsArray: void describeMismatchSafely(java.lang.Object[],org.hamcrest.Description)>($r3, r2);

        return;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        org.hamcrest.collection.IsArray r0;
        java.lang.Object r1;
        java.lang.Object[] $r2;
        boolean $z0;

        r0 := @this: org.hamcrest.collection.IsArray;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Object[]) r1;

        $z0 = virtualinvoke r0.<org.hamcrest.collection.IsArray: boolean matchesSafely(java.lang.Object[])>($r2);

        return $z0;
    }
}
