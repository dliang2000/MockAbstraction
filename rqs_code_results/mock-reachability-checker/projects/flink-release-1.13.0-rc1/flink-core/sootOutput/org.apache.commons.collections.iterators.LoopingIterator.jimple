public class org.apache.commons.collections.iterators.LoopingIterator extends java.lang.Object implements org.apache.commons.collections.ResettableIterator
{
    private java.util.Collection collection;
    private java.util.Iterator iterator;

    public void <init>(java.util.Collection)
    {
        org.apache.commons.collections.iterators.LoopingIterator r0;
        java.util.Collection r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.apache.commons.collections.iterators.LoopingIterator;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("The collection must not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.collections.iterators.LoopingIterator: java.util.Collection collection> = r1;

        virtualinvoke r0.<org.apache.commons.collections.iterators.LoopingIterator: void reset()>();

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections.iterators.LoopingIterator r0;
        java.util.Collection $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.iterators.LoopingIterator;

        $r1 = r0.<org.apache.commons.collections.iterators.LoopingIterator: java.util.Collection collection>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections.iterators.LoopingIterator r0;
        java.util.Collection $r1;
        int $i0;
        java.util.Iterator $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.NoSuchElementException $r5;

        r0 := @this: org.apache.commons.collections.iterators.LoopingIterator;

        $r1 = r0.<org.apache.commons.collections.iterators.LoopingIterator: java.util.Collection collection>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 != 0 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("There are no elements for this iterator to loop on");

        throw $r5;

     label1:
        $r2 = r0.<org.apache.commons.collections.iterators.LoopingIterator: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<org.apache.commons.collections.iterators.LoopingIterator: void reset()>();

     label2:
        $r3 = r0.<org.apache.commons.collections.iterators.LoopingIterator: java.util.Iterator iterator>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        return $r4;
    }

    public void remove()
    {
        org.apache.commons.collections.iterators.LoopingIterator r0;
        java.util.Iterator $r1;

        r0 := @this: org.apache.commons.collections.iterators.LoopingIterator;

        $r1 = r0.<org.apache.commons.collections.iterators.LoopingIterator: java.util.Iterator iterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }

    public void reset()
    {
        org.apache.commons.collections.iterators.LoopingIterator r0;
        java.util.Collection $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.commons.collections.iterators.LoopingIterator;

        $r1 = r0.<org.apache.commons.collections.iterators.LoopingIterator: java.util.Collection collection>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        r0.<org.apache.commons.collections.iterators.LoopingIterator: java.util.Iterator iterator> = $r2;

        return;
    }

    public int size()
    {
        org.apache.commons.collections.iterators.LoopingIterator r0;
        java.util.Collection $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections.iterators.LoopingIterator;

        $r1 = r0.<org.apache.commons.collections.iterators.LoopingIterator: java.util.Collection collection>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        return $i0;
    }
}
