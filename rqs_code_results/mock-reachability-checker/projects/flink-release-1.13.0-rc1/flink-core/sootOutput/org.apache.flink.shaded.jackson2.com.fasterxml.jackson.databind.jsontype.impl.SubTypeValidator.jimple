public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator extends java.lang.Object
{
    protected static final java.lang.String PREFIX_SPRING;
    protected static final java.lang.String PREFIX_C3P0;
    protected static final java.util.Set DEFAULT_NO_DESER_CLASS_NAMES;
    protected java.util.Set _cfgIllegalClassNames;
    private static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance;

    protected void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator r0;
        java.util.Set $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator: java.util.Set DEFAULT_NO_DESER_CLASS_NAMES>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator: java.util.Set _cfgIllegalClassNames> = $r1;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance>;

        return $r0;
    }

    public void validateSubType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        java.lang.Class r4, r11;
        java.lang.String r5, r6, $r9, $r10;
        java.util.Set $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object[] $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r5 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator: java.util.Set _cfgIllegalClassNames>;

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z0 == 0 goto label1;

        goto label8;

     label1:
        $z1 = virtualinvoke r4.<java.lang.Class: boolean isInterface()>();

        if $z1 == 0 goto label2;

        goto label7;

     label2:
        $z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("org.springframework.");

        if $z2 == 0 goto label6;

        r11 = r4;

     label3:
        if r11 == null goto label5;

        if r11 == class "Ljava/lang/Object;" goto label5;

        r6 = virtualinvoke r11.<java.lang.Class: java.lang.String getSimpleName()>();

        $r9 = "AbstractPointcutAdvisor";

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z5 != 0 goto label8;

        $r10 = "AbstractApplicationContext";

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z6 == 0 goto label4;

        goto label8;

     label4:
        r11 = virtualinvoke r11.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label3;

     label5:
        goto label7;

     label6:
        $z3 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("com.mchange.v2.c3p0.");

        if $z3 == 0 goto label7;

        $z4 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("DataSource");

        if $z4 == 0 goto label7;

        goto label8;

     label7:
        return;

     label8:
        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r5;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadTypeDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object[])>(r3, "Illegal type (%s) to deserialize: prevented for security reasons", $r12);

        return;
    }

    static void <clinit>()
    {
        java.util.HashSet $r1;
        java.util.Set $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator $r3;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator: java.lang.String PREFIX_C3P0> = "com.mchange.v2.c3p0.";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator: java.lang.String PREFIX_SPRING> = "org.springframework.";

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.collections.functors.InvokerTransformer");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.collections.functors.InstantiateTransformer");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.collections4.functors.InvokerTransformer");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.collections4.functors.InstantiateTransformer");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.codehaus.groovy.runtime.ConvertedClosure");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.codehaus.groovy.runtime.MethodClosure");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.springframework.beans.factory.ObjectFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.xalan.xsltc.trax.TemplatesImpl");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.sun.rowset.JdbcRowSetImpl");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("java.util.logging.FileHandler");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("java.rmi.server.UnicastRemoteObject");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.springframework.beans.factory.config.PropertyPathFactoryBean");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.springframework.aop.config.MethodLocatingFactoryBean");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.springframework.beans.factory.config.BeanReferenceFactoryBean");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.tomcat.dbcp.dbcp2.BasicDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.sun.org.apache.bcel.internal.util.ClassLoader");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.hibernate.jmx.StatisticsService");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.ibatis.datasource.jndi.JndiDataSourceFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.ibatis.parsing.XPathParser");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("jodd.db.connection.DataSourceConnectionProvider");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("oracle.jdbc.connector.OracleManagedConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("oracle.jdbc.rowset.OracleJDBCRowSet");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.slf4j.ext.EventData");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("flex.messaging.util.concurrent.AsynchBeansWorkManagerExecutor");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.sun.deploy.security.ruleset.DRSHelper");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.axis2.jaxws.spi.handler.HandlerResolverImpl");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.jboss.util.propertyeditor.DocumentEditor");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.openjpa.ee.RegistryManagedRuntime");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.openjpa.ee.JNDIManagedRuntime");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.openjpa.ee.WASRegistryManagedRuntime");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.axis2.transport.jms.JMSOutTransportInfo");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.mysql.cj.jdbc.admin.MiniAdmin");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("ch.qos.logback.core.db.DriverManagerConnectionSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.jdom.transform.XSLTransformer");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.jdom2.transform.XSLTransformer");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("ch.qos.logback.core.db.JNDIConnectionSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.zaxxer.hikari.HikariConfig");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.zaxxer.hikari.HikariDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.cxf.jaxrs.provider.XSLTJaxbProvider");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.configuration.JNDIConfiguration");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.configuration2.JNDIConfiguration");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.xalan.lib.sql.JNDIConnectionPool");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.dbcp.datasources.PerUserPoolDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.dbcp.datasources.SharedPoolDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.p6spy.engine.spy.P6DataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.log4j.receivers.db.DriverManagerConnectionSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.log4j.receivers.db.JNDIConnectionSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("net.sf.ehcache.transaction.manager.selector.GenericJndiSelector");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("net.sf.ehcache.transaction.manager.selector.GlassfishSelector");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.xbean.propertyeditor.JndiConverter");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("br.com.anteros.dbcp.AnterosDBCPConfig");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("br.com.anteros.dbcp.AnterosDBCPDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("javax.swing.JEditorPane");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("javax.swing.JTextPane");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.shiro.realm.jndi.JndiRealmFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.shiro.jndi.JndiObjectFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.ignite.cache.jta.jndi.CacheJndiTmFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.quartz.utils.JNDIConnectionProvider");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.aries.transaction.jms.RecoverablePooledConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.caucho.config.types.ResourceRef");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.aoju.bus.proxy.provider.RmiProvider");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.aoju.bus.proxy.provider.remoting.RmiProvider");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.activemq.ActiveMQConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.activemq.ActiveMQXAConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.activemq.spring.ActiveMQConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.activemq.spring.ActiveMQXAConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.activemq.pool.JcaPooledConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.activemq.pool.PooledConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.activemq.pool.XaPooledConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.activemq.jms.pool.XaPooledConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.activemq.jms.pool.JcaPooledConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.proxy.provider.remoting.RmiProvider");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.jelly.impl.Embedded");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("oadd.org.apache.xalan.lib.sql.JNDIConnectionPool");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("oadd.org.apache.commons.dbcp.datasources.PerUserPoolDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("oadd.org.apache.commons.dbcp.datasources.SharedPoolDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("oracle.jms.AQjmsQueueConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("oracle.jms.AQjmsXATopicConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("oracle.jms.AQjmsTopicConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("oracle.jms.AQjmsXAQueueConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("oracle.jms.AQjmsXAConnectionFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.jsecurity.realm.jndi.JndiRealmFactory");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.pastdev.httpcomponents.configuration.JndiConfiguration");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.nqadmin.rowset.JdbcRowSetImpl");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.arrah.framework.rdbms.UpdatableJdbcRowsetImpl");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.dbcp2.datasources.PerUserPoolDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.dbcp2.datasources.SharedPoolDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("org.docx4j.org.apache.xalan.lib.sql.JNDIConnectionPool");

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator: java.util.Set DEFAULT_NO_DESER_CLASS_NAMES> = $r2;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance> = $r3;

        return;
    }
}
