public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter extends java.io.Writer
{
    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _buffer;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _buffer> = $r2;

        return;
    }

    public java.io.Writer append(char)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        char c0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        c0 := @parameter0: char;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: void write(int)>(c0);

        return r0;
    }

    public java.io.Writer append(java.lang.CharSequence)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        java.lang.CharSequence r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        r1 := @parameter0: java.lang.CharSequence;

        r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _buffer>;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(java.lang.String,int,int)>(r2, 0, $i0);

        return r0;
    }

    public java.io.Writer append(java.lang.CharSequence, int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        java.lang.CharSequence r1, $r3;
        int i0, i1, $i2;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        r2 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _buffer>;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(java.lang.String,int,int)>(r2, 0, $i2);

        return r0;
    }

    public void close()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        return;
    }

    public void flush()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        return;
    }

    public void write(char[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        char[] r1;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        r1 := @parameter0: char[];

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _buffer>;

        $i0 = lengthof r1;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(char[], int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        char[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _buffer>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void write(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        int i0;
        char $c1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _buffer>;

        $c1 = (char) i0;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>($c1);

        return;
    }

    public void write(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _buffer>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(java.lang.String,int,int)>(r1, 0, $i0);

        return;
    }

    public void write(java.lang.String, int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        java.lang.String r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _buffer>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    public java.lang.String getAndClear()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _buffer>;

        r1 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _buffer>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void releaseBuffers()>();

        return r1;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        char c0;
        java.io.Writer $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: java.io.Writer append(char)>(c0);

        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        java.lang.CharSequence r1;
        int i0, i1;
        java.io.Writer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: java.io.Writer append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter r0;
        java.lang.CharSequence r1;
        java.io.Writer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: java.io.Writer append(java.lang.CharSequence)>(r1);

        return $r2;
    }
}
