public abstract class org.apache.flink.shaded.guava18.com.google.common.base.Equivalence extends java.lang.Object
{

    protected void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean equivalent(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 != r2 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        if r2 != null goto label3;

     label2:
        return 0;

     label3:
        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Equivalence: boolean doEquivalent(java.lang.Object,java.lang.Object)>(r1, r2);

        return $z0;
    }

    protected abstract boolean doEquivalent(java.lang.Object, java.lang.Object);

    public final int hash(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence r0;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Equivalence: int doHash(java.lang.Object)>(r1);

        return $i0;
    }

    protected abstract int doHash(java.lang.Object);

    public final org.apache.flink.shaded.guava18.com.google.common.base.Equivalence onResultOf(org.apache.flink.shaded.guava18.com.google.common.base.Function)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Function r1;
        org.apache.flink.shaded.guava18.com.google.common.base.FunctionalEquivalence $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.Function;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.base.FunctionalEquivalence;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.base.FunctionalEquivalence: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Function,org.apache.flink.shaded.guava18.com.google.common.base.Equivalence)>(r1, r0);

        return $r2;
    }

    public final org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$Wrapper wrap(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence r0;
        java.lang.Object r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$Wrapper $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$Wrapper;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$Wrapper: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Equivalence,java.lang.Object,org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$1)>(r0, r1, null);

        return $r2;
    }

    public final org.apache.flink.shaded.guava18.com.google.common.base.Equivalence pairwise()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence r0;
        org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Equivalence)>(r0);

        return $r1;
    }

    public final org.apache.flink.shaded.guava18.com.google.common.base.Predicate equivalentTo(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence r0;
        java.lang.Object r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$EquivalentToPredicate $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$EquivalentToPredicate;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$EquivalentToPredicate: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Equivalence,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.base.Equivalence equals()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$Equals $r0;

        $r0 = <org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$Equals: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$Equals INSTANCE>;

        return $r0;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.base.Equivalence identity()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$Identity $r0;

        $r0 = <org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$Identity: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence$Identity INSTANCE>;

        return $r0;
    }
}
