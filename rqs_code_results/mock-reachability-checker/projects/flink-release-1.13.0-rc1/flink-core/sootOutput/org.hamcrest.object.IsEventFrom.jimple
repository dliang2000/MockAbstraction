public class org.hamcrest.object.IsEventFrom extends org.hamcrest.TypeSafeDiagnosingMatcher
{
    private final java.lang.Class eventClass;
    private final java.lang.Object source;

    public void <init>(java.lang.Class, java.lang.Object)
    {
        org.hamcrest.object.IsEventFrom r0;
        java.lang.Class r1;
        java.lang.Object r2;

        r0 := @this: org.hamcrest.object.IsEventFrom;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.hamcrest.TypeSafeDiagnosingMatcher: void <init>()>();

        r0.<org.hamcrest.object.IsEventFrom: java.lang.Class eventClass> = r1;

        r0.<org.hamcrest.object.IsEventFrom: java.lang.Object source> = r2;

        return;
    }

    public boolean matchesSafely(java.util.EventObject, org.hamcrest.Description)
    {
        org.hamcrest.object.IsEventFrom r0;
        java.util.EventObject r1;
        org.hamcrest.Description r2, $r4;
        java.lang.Class $r3, $r9;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: org.hamcrest.object.IsEventFrom;

        r1 := @parameter0: java.util.EventObject;

        r2 := @parameter1: org.hamcrest.Description;

        $r3 = r0.<org.hamcrest.object.IsEventFrom: java.lang.Class eventClass>;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("item type was ");

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r12);

        return 0;

     label1:
        $z1 = specialinvoke r0.<org.hamcrest.object.IsEventFrom: boolean eventHasSameSource(java.util.EventObject)>(r1);

        if $z1 != 0 goto label2;

        $r4 = interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("source was ");

        $r5 = virtualinvoke r1.<java.util.EventObject: java.lang.Object getSource()>();

        interfaceinvoke $r4.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r5);

        return 0;

     label2:
        return 1;
    }

    private boolean eventHasSameSource(java.util.EventObject)
    {
        org.hamcrest.object.IsEventFrom r0;
        java.util.EventObject r1;
        java.lang.Object $r2, $r3;
        boolean $z0;

        r0 := @this: org.hamcrest.object.IsEventFrom;

        r1 := @parameter0: java.util.EventObject;

        $r2 = virtualinvoke r1.<java.util.EventObject: java.lang.Object getSource()>();

        $r3 = r0.<org.hamcrest.object.IsEventFrom: java.lang.Object source>;

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.object.IsEventFrom r0;
        org.hamcrest.Description r1, $r2, $r5, $r6;
        java.lang.Class $r3;
        java.lang.String $r4;
        java.lang.Object $r7;

        r0 := @this: org.hamcrest.object.IsEventFrom;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("an event of type ");

        $r3 = r0.<org.hamcrest.object.IsEventFrom: java.lang.Class eventClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = interfaceinvoke $r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r5.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" from ");

        $r7 = r0.<org.hamcrest.object.IsEventFrom: java.lang.Object source>;

        interfaceinvoke $r6.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r7);

        return;
    }

    public static org.hamcrest.Matcher eventFrom(java.lang.Class, java.lang.Object)
    {
        java.lang.Class r0;
        java.lang.Object r1;
        org.hamcrest.object.IsEventFrom $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object;

        $r2 = new org.hamcrest.object.IsEventFrom;

        specialinvoke $r2.<org.hamcrest.object.IsEventFrom: void <init>(java.lang.Class,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public static org.hamcrest.Matcher eventFrom(java.lang.Object)
    {
        java.lang.Object r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.hamcrest.object.IsEventFrom: org.hamcrest.Matcher eventFrom(java.lang.Class,java.lang.Object)>(class "Ljava/util/EventObject;", r0);

        return $r1;
    }

    public volatile boolean matchesSafely(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.object.IsEventFrom r0;
        java.lang.Object r1;
        org.hamcrest.Description r2;
        java.util.EventObject $r3;
        boolean $z0;

        r0 := @this: org.hamcrest.object.IsEventFrom;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        $r3 = (java.util.EventObject) r1;

        $z0 = virtualinvoke r0.<org.hamcrest.object.IsEventFrom: boolean matchesSafely(java.util.EventObject,org.hamcrest.Description)>($r3, r2);

        return $z0;
    }
}
