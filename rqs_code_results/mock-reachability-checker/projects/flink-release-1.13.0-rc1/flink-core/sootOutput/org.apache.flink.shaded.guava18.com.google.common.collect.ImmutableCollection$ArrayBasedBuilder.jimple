abstract class org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder extends org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$Builder
{
    java.lang.Object[] contents;
    int size;

    void <init>(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder r0;
        int i0;
        java.lang.Object[] $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$Builder: void <init>()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>(i0, "initialCapacity");

        $r1 = newarray (java.lang.Object)[i0];

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents> = $r1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: int size> = 0;

        return;
    }

    private void ensureCapacity(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object[] $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>;

        $i1 = lengthof $r1;

        if $i1 >= i0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>;

        $i2 = lengthof $r2;

        $i3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: int expandedCapacity(int,int)>($i2, i0);

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ObjectArrays: java.lang.Object[] arraysCopyOf(java.lang.Object[],int)>($r3, $i3);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents> = $r4;

     label1:
        return;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder r0;
        java.lang.Object r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: int size>;

        $i1 = $i0 + 1;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void ensureCapacity(int)>($i1);

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>;

        $i2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: int size>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: int size> = $i3;

        $r3[$i2] = r1;

        return r0;
    }

    public transient org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[])
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder r0;
        java.lang.Object[] r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ObjectArrays: java.lang.Object[] checkElementsNotNull(java.lang.Object[])>(r1);

        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: int size>;

        $i0 = lengthof r1;

        $i2 = $i1 + $i0;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void ensureCapacity(int)>($i2);

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: java.lang.Object[] contents>;

        $i4 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: int size>;

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, $i4, $i3);

        $i6 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: int size>;

        $i5 = lengthof r1;

        $i7 = $i6 + $i5;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: int size> = $i7;

        return r0;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder r0;
        java.lang.Iterable r1;
        java.util.Collection r2;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder;

        r1 := @parameter0: java.lang.Iterable;

        $z0 = r1 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        r2 = (java.util.Collection) r1;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: int size>;

        $i1 = interfaceinvoke r2.<java.util.Collection: int size()>();

        $i2 = $i0 + $i1;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void ensureCapacity(int)>($i2);

     label1:
        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$Builder: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)>(r1);

        return r0;
    }

    public volatile org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object)>(r1);

        return $r2;
    }
}
