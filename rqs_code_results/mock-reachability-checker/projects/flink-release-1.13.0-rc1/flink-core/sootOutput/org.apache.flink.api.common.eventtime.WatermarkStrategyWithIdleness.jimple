final class org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness extends java.lang.Object implements org.apache.flink.api.common.eventtime.WatermarkStrategy
{
    private static final long serialVersionUID;
    private final org.apache.flink.api.common.eventtime.WatermarkStrategy baseStrategy;
    private final java.time.Duration idlenessTimeout;

    void <init>(org.apache.flink.api.common.eventtime.WatermarkStrategy, java.time.Duration)
    {
        org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness r0;
        org.apache.flink.api.common.eventtime.WatermarkStrategy r1;
        java.time.Duration r2;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness;

        r1 := @parameter0: org.apache.flink.api.common.eventtime.WatermarkStrategy;

        r2 := @parameter1: java.time.Duration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness: org.apache.flink.api.common.eventtime.WatermarkStrategy baseStrategy> = r1;

        r0.<org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness: java.time.Duration idlenessTimeout> = r2;

        return;
    }

    public org.apache.flink.api.common.eventtime.TimestampAssigner createTimestampAssigner(org.apache.flink.api.common.eventtime.TimestampAssignerSupplier$Context)
    {
        org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness r0;
        org.apache.flink.api.common.eventtime.TimestampAssignerSupplier$Context r1;
        org.apache.flink.api.common.eventtime.WatermarkStrategy $r2;
        org.apache.flink.api.common.eventtime.TimestampAssigner $r3;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness;

        r1 := @parameter0: org.apache.flink.api.common.eventtime.TimestampAssignerSupplier$Context;

        $r2 = r0.<org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness: org.apache.flink.api.common.eventtime.WatermarkStrategy baseStrategy>;

        $r3 = interfaceinvoke $r2.<org.apache.flink.api.common.eventtime.WatermarkStrategy: org.apache.flink.api.common.eventtime.TimestampAssigner createTimestampAssigner(org.apache.flink.api.common.eventtime.TimestampAssignerSupplier$Context)>(r1);

        return $r3;
    }

    public org.apache.flink.api.common.eventtime.WatermarkGenerator createWatermarkGenerator(org.apache.flink.api.common.eventtime.WatermarkGeneratorSupplier$Context)
    {
        org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness r0;
        org.apache.flink.api.common.eventtime.WatermarkGeneratorSupplier$Context r1;
        org.apache.flink.api.common.eventtime.WatermarksWithIdleness $r2;
        org.apache.flink.api.common.eventtime.WatermarkStrategy $r3;
        org.apache.flink.api.common.eventtime.WatermarkGenerator $r4;
        java.time.Duration $r5;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness;

        r1 := @parameter0: org.apache.flink.api.common.eventtime.WatermarkGeneratorSupplier$Context;

        $r2 = new org.apache.flink.api.common.eventtime.WatermarksWithIdleness;

        $r3 = r0.<org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness: org.apache.flink.api.common.eventtime.WatermarkStrategy baseStrategy>;

        $r4 = interfaceinvoke $r3.<org.apache.flink.api.common.eventtime.WatermarkStrategy: org.apache.flink.api.common.eventtime.WatermarkGenerator createWatermarkGenerator(org.apache.flink.api.common.eventtime.WatermarkGeneratorSupplier$Context)>(r1);

        $r5 = r0.<org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness: java.time.Duration idlenessTimeout>;

        specialinvoke $r2.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness: void <init>(org.apache.flink.api.common.eventtime.WatermarkGenerator,java.time.Duration)>($r4, $r5);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.eventtime.WatermarkStrategyWithIdleness: long serialVersionUID> = 1L;

        return;
    }
}
