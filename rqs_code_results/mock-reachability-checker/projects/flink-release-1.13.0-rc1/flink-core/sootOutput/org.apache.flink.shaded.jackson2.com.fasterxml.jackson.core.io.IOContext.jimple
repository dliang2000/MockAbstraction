public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext extends java.lang.Object
{
    protected final java.lang.Object _sourceRef;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding _encoding;
    protected final boolean _managedResource;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler;
    protected byte[] _readIOBuffer;
    protected byte[] _writeEncodingBuffer;
    protected byte[] _base64Buffer;
    protected char[] _tokenCBuffer;
    protected char[] _concatCBuffer;
    protected char[] _nameCopyBuffer;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler, java.lang.Object, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler r1;
        java.lang.Object r2;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler;

        r2 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: java.lang.Object _sourceRef> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: boolean _managedResource> = z0;

        return;
    }

    public void setEncoding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding _encoding> = r1;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext withEncoding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding _encoding> = r1;

        return r0;
    }

    public java.lang.Object getSourceReference()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: java.lang.Object _sourceRef>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding getEncoding()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding _encoding>;

        return $r1;
    }

    public boolean isResourceManaged()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: boolean _managedResource>;

        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer constructTextBuffer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler)>($r2);

        return $r1;
    }

    public byte[] allocReadIOBuffer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        byte[] $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int)>(0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer> = $r3;

        return $r3;
    }

    public byte[] allocReadIOBuffer(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        int i0;
        byte[] $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int,int)>(0, i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer> = $r3;

        return $r3;
    }

    public byte[] allocWriteEncodingBuffer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        byte[] $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int)>(1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer> = $r3;

        return $r3;
    }

    public byte[] allocWriteEncodingBuffer(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        int i0;
        byte[] $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int,int)>(1, i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer> = $r3;

        return $r3;
    }

    public byte[] allocBase64Buffer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        byte[] $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int)>(3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer> = $r3;

        return $r3;
    }

    public byte[] allocBase64Buffer(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        int i0;
        byte[] $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int,int)>(3, i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer> = $r3;

        return $r3;
    }

    public char[] allocTokenBuffer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        char[] $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(int)>(0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer> = $r3;

        return $r3;
    }

    public char[] allocTokenBuffer(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        int i0;
        char[] $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(int,int)>(0, i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer> = $r3;

        return $r3;
    }

    public char[] allocConcatBuffer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        char[] $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _concatCBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(int)>(1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _concatCBuffer> = $r3;

        return $r3;
    }

    public char[] allocNameCopyBuffer(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        int i0;
        char[] $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _nameCopyBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(int,int)>(3, i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _nameCopyBuffer> = $r3;

        return $r3;
    }

    public void releaseReadIOBuffer(byte[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        byte[] r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: byte[];

        if r1 == null goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(byte[],byte[])>(r1, $r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _readIOBuffer> = null;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: void releaseByteBuffer(int,byte[])>(0, r1);

     label1:
        return;
    }

    public void releaseWriteEncodingBuffer(byte[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        byte[] r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: byte[];

        if r1 == null goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(byte[],byte[])>(r1, $r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _writeEncodingBuffer> = null;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: void releaseByteBuffer(int,byte[])>(1, r1);

     label1:
        return;
    }

    public void releaseBase64Buffer(byte[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        byte[] r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: byte[];

        if r1 == null goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(byte[],byte[])>(r1, $r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] _base64Buffer> = null;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: void releaseByteBuffer(int,byte[])>(3, r1);

     label1:
        return;
    }

    public void releaseTokenBuffer(char[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        char[] r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: char[];

        if r1 == null goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(char[],char[])>(r1, $r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _tokenCBuffer> = null;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: void releaseCharBuffer(int,char[])>(0, r1);

     label1:
        return;
    }

    public void releaseConcatBuffer(char[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        char[] r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: char[];

        if r1 == null goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _concatCBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(char[],char[])>(r1, $r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _concatCBuffer> = null;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: void releaseCharBuffer(int,char[])>(1, r1);

     label1:
        return;
    }

    public void releaseNameCopyBuffer(char[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        char[] r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: char[];

        if r1 == null goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _nameCopyBuffer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(char[],char[])>(r1, $r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] _nameCopyBuffer> = null;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: void releaseCharBuffer(int,char[])>(3, r1);

     label1:
        return;
    }

    protected final void _verifyAlloc(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        java.lang.Object r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call same allocXxx() method second time");

        throw $r2;

     label1:
        return;
    }

    protected final void _verifyRelease(byte[], byte[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        byte[] r1, r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        if r1 == r2 goto label1;

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 >= $i0 goto label1;

        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: java.lang.IllegalArgumentException wrongBuf()>();

        throw $r3;

     label1:
        return;
    }

    protected final void _verifyRelease(char[], char[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        char[] r1, r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r1 := @parameter0: char[];

        r2 := @parameter1: char[];

        if r1 == r2 goto label1;

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 >= $i0 goto label1;

        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: java.lang.IllegalArgumentException wrongBuf()>();

        throw $r3;

     label1:
        return;
    }

    private java.lang.IllegalArgumentException wrongBuf()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Trying to release buffer smaller than original");

        return $r1;
    }
}
