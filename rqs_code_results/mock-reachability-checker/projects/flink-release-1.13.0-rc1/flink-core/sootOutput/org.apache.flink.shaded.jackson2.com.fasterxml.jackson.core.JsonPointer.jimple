public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer extends java.lang.Object
{
    public static final char SEPARATOR;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment;
    protected volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _head;
    protected final java.lang.String _asString;
    protected final java.lang.String _matchingPropertyName;
    protected final int _matchingElementIndex;

    protected void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName> = "";

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex> = -1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString> = "";

        return;
    }

    protected void <init>(java.lang.String, java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, r3;
        java.lang.String r1, r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName> = r2;

        $i0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: int _parseIndex(java.lang.String)>(r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex> = $i0;

        return;
    }

    protected void <init>(java.lang.String, java.lang.String, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, r3;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex> = i0;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer compile(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer $r1, $r2;
        int $i0;
        char $c1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        return $r1;

     label2:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 == 47 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid input: JSON Pointer expression must start with \'/\': \"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label3:
        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _parseTail(java.lang.String)>(r0);

        return $r2;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer valueOf(java.lang.String)
    {
        java.lang.String r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer compile(java.lang.String)>(r0);

        return $r1;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer empty()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        return $r0;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer forPath(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext, boolean)
    {
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String r0, $r3, $r5, r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer $r1, $r2, $r4, $r6, r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext r7;
        int i0;

        r7 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext;

        z0 := @parameter1: boolean;

        if r7 != null goto label01;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        return $r6;

     label01:
        $z1 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: boolean hasPathSegment()>();

        if $z1 != 0 goto label03;

        if z0 == 0 goto label02;

        $z4 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: boolean inRoot()>();

        if $z4 == 0 goto label02;

        $z5 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: boolean hasCurrentIndex()>();

        if $z5 != 0 goto label03;

     label02:
        r7 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext getParent()>();

     label03:
        r8 = null;

     label04:
        if r7 == null goto label09;

        $z2 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: boolean inObject()>();

        if $z2 == 0 goto label06;

        r9 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: java.lang.String getCurrentName()>();

        if r9 != null goto label05;

        r9 = "";

     label05:
        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _fullPath(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer,java.lang.String)>(r8, r9);

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)>($r5, r9, r8);

        r8 = $r4;

        goto label08;

     label06:
        $z3 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: boolean inArray()>();

        if $z3 != 0 goto label07;

        if z0 == 0 goto label08;

     label07:
        i0 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: int getCurrentIndex()>();

        r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _fullPath(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer,java.lang.String)>(r8, r0);

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)>($r3, r0, i0, r8);

        r8 = $r2;

     label08:
        r7 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext getParent()>();

        goto label04;

     label09:
        if r8 != null goto label10;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        return $r1;

     label10:
        return r8;
    }

    private static java.lang.String _fullPath(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0;
        java.lang.String r1, $r6, $r9, r11;
        java.lang.StringBuilder $r3, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r7 = new java.lang.StringBuilder;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $i5 = $i4 + 1;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i5);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void _appendEscaped(java.lang.StringBuilder,java.lang.String)>($r7, r1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label1:
        r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;

        $r3 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r11.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void _appendEscaped(java.lang.StringBuilder,java.lang.String)>($r3, r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static void _appendEscaped(java.lang.StringBuilder, java.lang.String)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        int i0, i2;
        char c1;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.String;

        i2 = 0;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        if i2 >= i0 goto label5;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if c1 != 47 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("~1");

        goto label4;

     label2:
        if c1 != 126 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("~0");

        goto label4;

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }

    public boolean matches()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getMatchingProperty()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;

        return $r1;
    }

    public int getMatchingIndex()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;

        return $i0;
    }

    public boolean mayMatchProperty()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean mayMatchElement()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer last()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, $r2, $r3, $r4, r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        r5 = r0;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        if r0 != $r2 goto label1;

        return null;

     label1:
        $r3 = r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment>;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        if $r3 == $r4 goto label2;

        r5 = $r3;

        goto label1;

     label2:
        return r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer append(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, r1, $r2, $r3, $r9;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8, r10;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        if r0 != $r2 goto label1;

        return r1;

     label1:
        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        if r1 != $r3 goto label2;

        return r0;

     label2:
        r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;

        $z0 = virtualinvoke r10.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r10.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        r10 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r6 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer compile(java.lang.String)>($r8);

        return $r9;
    }

    public boolean matchesProperty(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, $r2;
        java.lang.String r1, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer matchProperty(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, $r2, $r4;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment>;

        return $r4;

     label1:
        return null;
    }

    public boolean matchesElement(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;

        if i0 != $i1 goto label1;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer matchElement(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, $r1;
        int i0, $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;

        if i0 != $i1 goto label1;

        if i0 >= 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer tail()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer head()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, $r1, r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _head>;

        if r2 != null goto label2;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        if r0 == $r1 goto label1;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _constructHead()>();

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _head> = r2;

     label2:
        return r2;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;

        return $r1;
    }

    public int hashCode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;

        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer) r1;

        $r3 = $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    private static final int _parseIndex(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, i5;
        byte $b2, $b4;
        char c3, c6;
        long l7;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 == 0 goto label01;

        if i0 <= 10 goto label02;

     label01:
        return -1;

     label02:
        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if c3 > 48 goto label05;

        if i0 != 1 goto label03;

        if c3 != 48 goto label03;

        $b4 = 0;

        goto label04;

     label03:
        $b4 = -1;

     label04:
        return $b4;

     label05:
        if c3 <= 57 goto label06;

        return -1;

     label06:
        i5 = 1;

     label07:
        if i5 >= i0 goto label10;

        c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        if c6 > 57 goto label08;

        if c6 >= 48 goto label09;

     label08:
        return -1;

     label09:
        i5 = i5 + 1;

        goto label07;

     label10:
        if i0 != 10 goto label11;

        l7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(r0);

        $b2 = l7 cmp 2147483647L;

        if $b2 <= 0 goto label11;

        return -1;

     label11:
        $i1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(r0);

        return $i1;
    }

    protected static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _parseTail(java.lang.String)
    {
        java.lang.String r0, $r2, $r6, $r7;
        int i0, i2;
        char c1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer $r1, $r3, $r4, $r5, $r8;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i2 = 1;

     label1:
        if i2 >= i0 goto label4;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if c1 != 47 goto label2;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, i2);

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i2);

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _parseTail(java.lang.String)>($r7);

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)>(r0, $r6, $r8);

        return $r5;

     label2:
        i2 = i2 + 1;

        if c1 != 126 goto label3;

        if i2 >= i0 goto label3;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _parseQuotedTail(java.lang.String,int)>(r0, i2);

        return $r4;

     label3:
        goto label1;

     label4:
        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)>(r0, $r2, $r3);

        return $r1;
    }

    protected static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _parseQuotedTail(java.lang.String, int)
    {
        java.lang.String r0, $r4, $r8, $r9;
        int i0, $i2, $i4, $i6, i7, i8;
        char c1, $c3, $c5;
        java.lang.StringBuilder $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer $r3, $r5, $r7, $r10;

        r0 := @parameter0: java.lang.String;

        i7 := @parameter1: int;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = new java.lang.StringBuilder;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(16, i0);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);

        if i7 <= 2 goto label1;

        $i6 = i7 - 1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r0, 1, $i6);

     label1:
        i8 = i7 + 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void _appendEscape(java.lang.StringBuilder,char)>($r2, $c3);

     label2:
        if i8 >= i0 goto label5;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        if c1 != 47 goto label3;

        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i8);

        $r10 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _parseTail(java.lang.String)>($r9);

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)>(r0, $r8, $r10);

        return $r7;

     label3:
        i8 = i8 + 1;

        if c1 != 126 goto label4;

        if i8 >= i0 goto label4;

        $i4 = i8;

        i8 = i8 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void _appendEscape(java.lang.StringBuilder,char)>($r2, $c5);

        goto label2;

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        goto label2;

     label5:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)>(r0, $r4, $r5);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _constructHead()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, r1, r2, $r4, $r9, $r10;
        int i0, $i1, $i2, $i3;
        java.lang.String $r3, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer last()>();

        if r1 != r0 goto label1;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        return $r10;

     label1:
        $r3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;

        i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment>;

        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i2 = $i1 - i0;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _constructHead(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)>(i0, r1);

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)>($r7, $r8, $i3, $r9);

        return $r4;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _constructHead(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer r0, r1, r2, $r4, $r7, $r8;
        int i0, $i1, $i2, $i3;
        java.lang.String r3, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        if r0 != r1 goto label1;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY>;

        return $r8;

     label1:
        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _nextSegment>;

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;

        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        $i2 = $i1 - i0;

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;

        $r7 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer _constructHead(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)>(i0, r1);

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer)>($r5, $r6, $i3, $r7);

        return $r4;
    }

    private static void _appendEscape(java.lang.StringBuilder, char)
    {
        java.lang.StringBuilder r0;
        char c0;

        r0 := @parameter0: java.lang.StringBuilder;

        c0 := @parameter1: char;

        if c0 != 48 goto label1;

        c0 = 126;

        goto label3;

     label1:
        if c0 != 49 goto label2;

        c0 = 47;

        goto label3;

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(126);

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: char SEPARATOR> = 47;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonPointer EMPTY> = $r0;

        return;
    }
}
