public class org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory extends java.lang.Object implements org.apache.flink.api.common.io.compression.InflaterInputStreamFactory
{
    private static final org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory INSTANCE;

    public void <init>()
    {
        org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory r0;

        r0 := @this: org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory getInstance()
    {
        org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory $r0;

        $r0 = <org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory: org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory INSTANCE>;

        return $r0;
    }

    public java.util.zip.InflaterInputStream create(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory r0;
        java.io.InputStream r1;
        java.util.zip.InflaterInputStream $r2;

        r0 := @this: org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory;

        r1 := @parameter0: java.io.InputStream;

        $r2 = new java.util.zip.InflaterInputStream;

        specialinvoke $r2.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>(r1);

        return $r2;
    }

    public java.util.Collection getCommonFileExtensions()
    {
        org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory r0;
        java.util.Set $r1;

        r0 := @this: org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("deflate");

        return $r1;
    }

    public volatile java.io.InputStream create(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory r0;
        java.io.InputStream r1;
        java.util.zip.InflaterInputStream $r2;

        r0 := @this: org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory: java.util.zip.InflaterInputStream create(java.io.InputStream)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory $r0;

        $r0 = new org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory;

        specialinvoke $r0.<org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory: void <init>()>();

        <org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory: org.apache.flink.api.common.io.compression.DeflateInflaterInputStreamFactory INSTANCE> = $r0;

        return;
    }
}
