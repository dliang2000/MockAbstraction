public final class org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer extends org.apache.flink.api.common.typeutils.TypeSerializer
{
    private static final long serialVersionUID;
    private final java.lang.Class valueClass;
    private transient org.apache.flink.types.CopyableValue instance;

    public void <init>(java.lang.Class)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        java.lang.Class r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.TypeSerializer: void <init>()>();

        $r2 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.Class) $r2;

        r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: java.lang.Class valueClass> = $r3;

        return;
    }

    private java.lang.Class getValueClass()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: java.lang.Class valueClass>;

        return $r1;
    }

    public boolean isImmutableType()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        return 0;
    }

    public org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer duplicate()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        return r0;
    }

    public org.apache.flink.types.CopyableValue createInstance()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        org.apache.flink.types.CopyableValue $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: java.lang.Class valueClass>;

        $r2 = staticinvoke <org.apache.flink.util.InstantiationUtil: java.lang.Object instantiate(java.lang.Class)>($r1);

        $r3 = (org.apache.flink.types.CopyableValue) $r2;

        return $r3;
    }

    public org.apache.flink.types.CopyableValue copy(org.apache.flink.types.CopyableValue)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        org.apache.flink.types.CopyableValue r1, $r2, $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: org.apache.flink.types.CopyableValue;

        $r2 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue createInstance()>();

        $r3 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue copy(org.apache.flink.types.CopyableValue,org.apache.flink.types.CopyableValue)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.types.CopyableValue copy(org.apache.flink.types.CopyableValue, org.apache.flink.types.CopyableValue)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        org.apache.flink.types.CopyableValue r1, r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: org.apache.flink.types.CopyableValue;

        r2 := @parameter1: org.apache.flink.types.CopyableValue;

        interfaceinvoke r1.<org.apache.flink.types.CopyableValue: void copyTo(java.lang.Object)>(r2);

        return r2;
    }

    public int getLength()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        org.apache.flink.types.CopyableValue $r1;
        int $i0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: void ensureInstanceInstantiated()>();

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue instance>;

        $i0 = interfaceinvoke $r1.<org.apache.flink.types.CopyableValue: int getBinaryLength()>();

        return $i0;
    }

    public void serialize(org.apache.flink.types.CopyableValue, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        org.apache.flink.types.CopyableValue r1;
        org.apache.flink.core.memory.DataOutputView r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: org.apache.flink.types.CopyableValue;

        r2 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        interfaceinvoke r1.<org.apache.flink.types.CopyableValue: void write(org.apache.flink.core.memory.DataOutputView)>(r2);

        return;
    }

    public org.apache.flink.types.CopyableValue deserialize(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        org.apache.flink.core.memory.DataInputView r1;
        org.apache.flink.types.CopyableValue $r2, $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        $r2 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue createInstance()>();

        $r3 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue deserialize(org.apache.flink.types.CopyableValue,org.apache.flink.core.memory.DataInputView)>($r2, r1);

        return $r3;
    }

    public org.apache.flink.types.CopyableValue deserialize(org.apache.flink.types.CopyableValue, org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        org.apache.flink.types.CopyableValue r1;
        org.apache.flink.core.memory.DataInputView r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: org.apache.flink.types.CopyableValue;

        r2 := @parameter1: org.apache.flink.core.memory.DataInputView;

        interfaceinvoke r1.<org.apache.flink.types.CopyableValue: void read(org.apache.flink.core.memory.DataInputView)>(r2);

        return r1;
    }

    public void copy(org.apache.flink.core.memory.DataInputView, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        org.apache.flink.core.memory.DataInputView r1;
        org.apache.flink.core.memory.DataOutputView r2;
        org.apache.flink.types.CopyableValue $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        r2 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: void ensureInstanceInstantiated()>();

        $r3 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue instance>;

        interfaceinvoke $r3.<org.apache.flink.types.CopyableValue: void copy(org.apache.flink.core.memory.DataInputView,org.apache.flink.core.memory.DataOutputView)>(r1, r2);

        return;
    }

    private void ensureInstanceInstantiated()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        org.apache.flink.types.CopyableValue $r1, $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue instance>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue createInstance()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue instance> = $r2;

     label1:
        return;
    }

    public int hashCode()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        java.lang.Class $r1;
        int $i0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: java.lang.Class valueClass>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.Class $r3, $r4;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        if $z0 == 0 goto label3;

        r2 = (org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer) r1;

        $r4 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: java.lang.Class valueClass>;

        $r3 = r2.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: java.lang.Class valueClass>;

        if $r4 != $r3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializerSnapshot snapshotConfiguration()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot $r1;
        java.lang.Class $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        $r1 = new org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot;

        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: java.lang.Class valueClass>;

        specialinvoke $r1.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot: void <init>(java.lang.Class)>($r2);

        return $r1;
    }

    public volatile java.lang.Object deserialize(java.lang.Object, org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        java.lang.Object r1;
        org.apache.flink.core.memory.DataInputView r2;
        org.apache.flink.types.CopyableValue $r3, $r4;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.core.memory.DataInputView;

        $r3 = (org.apache.flink.types.CopyableValue) r1;

        $r4 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue deserialize(org.apache.flink.types.CopyableValue,org.apache.flink.core.memory.DataInputView)>($r3, r2);

        return $r4;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        org.apache.flink.core.memory.DataInputView r1;
        org.apache.flink.types.CopyableValue $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        $r2 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue deserialize(org.apache.flink.core.memory.DataInputView)>(r1);

        return $r2;
    }

    public volatile void serialize(java.lang.Object, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        java.lang.Object r1;
        org.apache.flink.core.memory.DataOutputView r2;
        org.apache.flink.types.CopyableValue $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        $r3 = (org.apache.flink.types.CopyableValue) r1;

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: void serialize(org.apache.flink.types.CopyableValue,org.apache.flink.core.memory.DataOutputView)>($r3, r2);

        return;
    }

    public volatile java.lang.Object copy(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        java.lang.Object r1, r2;
        org.apache.flink.types.CopyableValue $r3, $r4, $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.flink.types.CopyableValue) r1;

        $r3 = (org.apache.flink.types.CopyableValue) r2;

        $r5 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue copy(org.apache.flink.types.CopyableValue,org.apache.flink.types.CopyableValue)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object copy(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        java.lang.Object r1;
        org.apache.flink.types.CopyableValue $r2, $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.flink.types.CopyableValue) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue copy(org.apache.flink.types.CopyableValue)>($r2);

        return $r3;
    }

    public volatile java.lang.Object createInstance()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        org.apache.flink.types.CopyableValue $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.types.CopyableValue createInstance()>();

        return $r1;
    }

    public volatile org.apache.flink.api.common.typeutils.TypeSerializer duplicate()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0, $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer duplicate()>();

        return $r1;
    }

    static java.lang.Class access$000(org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r0;
        java.lang.Class $r1;

        r0 := @parameter0: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        $r1 = specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: java.lang.Class getValueClass()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: long serialVersionUID> = 1L;

        return;
    }
}
