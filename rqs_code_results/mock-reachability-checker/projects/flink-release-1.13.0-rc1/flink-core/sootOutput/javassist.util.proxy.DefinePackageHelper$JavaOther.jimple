class javassist.util.proxy.DefinePackageHelper$JavaOther extends javassist.util.proxy.DefinePackageHelper$Helper
{
    private final javassist.util.proxy.SecurityActions stack;
    private final java.lang.reflect.Method definePackage;

    private void <init>()
    {
        javassist.util.proxy.DefinePackageHelper$JavaOther r0;
        javassist.util.proxy.SecurityActions $r1;
        java.lang.reflect.Method $r2;

        r0 := @this: javassist.util.proxy.DefinePackageHelper$JavaOther;

        specialinvoke r0.<javassist.util.proxy.DefinePackageHelper$Helper: void <init>(javassist.util.proxy.DefinePackageHelper$1)>(null);

        $r1 = <javassist.util.proxy.SecurityActions: javassist.util.proxy.SecurityActions stack>;

        r0.<javassist.util.proxy.DefinePackageHelper$JavaOther: javassist.util.proxy.SecurityActions stack> = $r1;

        $r2 = specialinvoke r0.<javassist.util.proxy.DefinePackageHelper$JavaOther: java.lang.reflect.Method getDefinePackageMethod()>();

        r0.<javassist.util.proxy.DefinePackageHelper$JavaOther: java.lang.reflect.Method definePackage> = $r2;

        return;
    }

    private java.lang.reflect.Method getDefinePackageMethod()
    {
        javassist.util.proxy.DefinePackageHelper$JavaOther r0;
        javassist.util.proxy.SecurityActions $r2;
        java.lang.Class $r3, $r4;
        java.lang.Class[] $r5;
        java.lang.reflect.Method $r6;
        java.lang.IllegalAccessError $r7;
        java.lang.NoSuchMethodException $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: javassist.util.proxy.DefinePackageHelper$JavaOther;

        $r2 = r0.<javassist.util.proxy.DefinePackageHelper$JavaOther: javassist.util.proxy.SecurityActions stack>;

        $r3 = virtualinvoke $r2.<javassist.util.proxy.SecurityActions: java.lang.Class getCallerClass()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label1;

        $r7 = new java.lang.IllegalAccessError;

        specialinvoke $r7.<java.lang.IllegalAccessError: void <init>(java.lang.String)>("Access denied for caller.");

        throw $r7;

     label1:
        $r5 = newarray (java.lang.Class)[8];

        $r5[0] = class "Ljava/lang/String;";

        $r5[1] = class "Ljava/lang/String;";

        $r5[2] = class "Ljava/lang/String;";

        $r5[3] = class "Ljava/lang/String;";

        $r5[4] = class "Ljava/lang/String;";

        $r5[5] = class "Ljava/lang/String;";

        $r5[6] = class "Ljava/lang/String;";

        $r5[7] = class "Ljava/net/URL;";

        $r6 = staticinvoke <javassist.util.proxy.SecurityActions: java.lang.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Ljava/lang/ClassLoader;", "definePackage", $r5);

     label2:
        return $r6;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("cannot initialize", $r8);

        throw $r9;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    java.lang.Package definePackage(java.lang.ClassLoader, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL) throws java.lang.IllegalArgumentException
    {
        javassist.util.proxy.DefinePackageHelper$JavaOther r0;
        java.lang.ClassLoader r1;
        java.lang.String r2, r3, r4, r5, r6, r7, r8;
        java.net.URL r9;
        java.lang.Throwable r10, $r20, $r22;
        javassist.util.proxy.SecurityActions $r12;
        java.lang.Class $r13;
        java.lang.reflect.Method $r14, $r16, $r18, $r21, $r23;
        java.lang.Object[] $r15;
        java.lang.Object $r17;
        java.lang.IllegalAccessError $r19;
        boolean $z0, $z1, $z2;
        java.lang.RuntimeException $r24;
        java.lang.reflect.InvocationTargetException $r25;
        java.lang.IllegalArgumentException $r26;
        java.lang.Package r27;

        r0 := @this: javassist.util.proxy.DefinePackageHelper$JavaOther;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.lang.String;

        r9 := @parameter8: java.net.URL;

        $r12 = r0.<javassist.util.proxy.DefinePackageHelper$JavaOther: javassist.util.proxy.SecurityActions stack>;

        $r13 = virtualinvoke $r12.<javassist.util.proxy.SecurityActions: java.lang.Class getCallerClass()>();

        if $r13 == class "Ljavassist/util/proxy/DefinePackageHelper;" goto label1;

        $r19 = new java.lang.IllegalAccessError;

        specialinvoke $r19.<java.lang.IllegalAccessError: void <init>(java.lang.String)>("Access denied for caller.");

        throw $r19;

     label1:
        $r14 = r0.<javassist.util.proxy.DefinePackageHelper$JavaOther: java.lang.reflect.Method definePackage>;

        virtualinvoke $r14.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r16 = r0.<javassist.util.proxy.DefinePackageHelper$JavaOther: java.lang.reflect.Method definePackage>;

        $r15 = newarray (java.lang.Object)[8];

        $r15[0] = r2;

        $r15[1] = r3;

        $r15[2] = r4;

        $r15[3] = r5;

        $r15[4] = r6;

        $r15[5] = r7;

        $r15[6] = r8;

        $r15[7] = r9;

        $r17 = virtualinvoke $r16.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r15);

        r27 = (java.lang.Package) $r17;

     label2:
        $r18 = r0.<javassist.util.proxy.DefinePackageHelper$JavaOther: java.lang.reflect.Method definePackage>;

        virtualinvoke $r18.<java.lang.reflect.Method: void setAccessible(boolean)>(0);

        return r27;

     label3:
        $r22 := @caughtexception;

        $z0 = $r22 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label4;

        $r25 = (java.lang.reflect.InvocationTargetException) $r22;

        r10 = virtualinvoke $r25.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z2 = r10 instanceof java.lang.IllegalArgumentException;

        if $z2 == 0 goto label4;

        $r26 = (java.lang.IllegalArgumentException) r10;

        throw $r26;

     label4:
        $z1 = $r22 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label5;

        $r24 = (java.lang.RuntimeException) $r22;

        throw $r24;

     label5:
        $r23 = r0.<javassist.util.proxy.DefinePackageHelper$JavaOther: java.lang.reflect.Method definePackage>;

        virtualinvoke $r23.<java.lang.reflect.Method: void setAccessible(boolean)>(0);

        goto label8;

     label6:
        $r20 := @caughtexception;

     label7:
        $r21 = r0.<javassist.util.proxy.DefinePackageHelper$JavaOther: java.lang.reflect.Method definePackage>;

        virtualinvoke $r21.<java.lang.reflect.Method: void setAccessible(boolean)>(0);

        throw $r20;

     label8:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void <init>(javassist.util.proxy.DefinePackageHelper$1)
    {
        javassist.util.proxy.DefinePackageHelper$JavaOther r0;
        javassist.util.proxy.DefinePackageHelper$1 r1;

        r0 := @this: javassist.util.proxy.DefinePackageHelper$JavaOther;

        r1 := @parameter0: javassist.util.proxy.DefinePackageHelper$1;

        specialinvoke r0.<javassist.util.proxy.DefinePackageHelper$JavaOther: void <init>()>();

        return;
    }
}
