public class org.apache.flink.api.common.operators.util.TestNonRichInputFormat extends org.apache.flink.api.common.operators.util.NonRichGenericInputFormat implements org.apache.flink.api.common.io.NonParallelInput
{
    private static final long serialVersionUID;
    private static final int NUM;
    private static final java.lang.String[] NAMES;
    private int count;

    public void <init>()
    {
        org.apache.flink.api.common.operators.util.TestNonRichInputFormat r0;

        r0 := @this: org.apache.flink.api.common.operators.util.TestNonRichInputFormat;

        specialinvoke r0.<org.apache.flink.api.common.operators.util.NonRichGenericInputFormat: void <init>()>();

        r0.<org.apache.flink.api.common.operators.util.TestNonRichInputFormat: int count> = 0;

        return;
    }

    public boolean reachedEnd() throws java.io.IOException
    {
        org.apache.flink.api.common.operators.util.TestNonRichInputFormat r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.operators.util.TestNonRichInputFormat;

        $i0 = r0.<org.apache.flink.api.common.operators.util.TestNonRichInputFormat: int count>;

        if $i0 < 5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String nextRecord(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.api.common.operators.util.TestNonRichInputFormat r0;
        java.lang.String r1, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String[] $r2;

        r0 := @this: org.apache.flink.api.common.operators.util.TestNonRichInputFormat;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.apache.flink.api.common.operators.util.TestNonRichInputFormat: int count>;

        $i1 = $i0 + 1;

        r0.<org.apache.flink.api.common.operators.util.TestNonRichInputFormat: int count> = $i1;

        $r2 = <org.apache.flink.api.common.operators.util.TestNonRichInputFormat: java.lang.String[] NAMES>;

        $i2 = r0.<org.apache.flink.api.common.operators.util.TestNonRichInputFormat: int count>;

        $i3 = $i2 - 1;

        $r3 = $r2[$i3];

        return $r3;
    }

    public void reset()
    {
        org.apache.flink.api.common.operators.util.TestNonRichInputFormat r0;

        r0 := @this: org.apache.flink.api.common.operators.util.TestNonRichInputFormat;

        r0.<org.apache.flink.api.common.operators.util.TestNonRichInputFormat: int count> = 0;

        return;
    }

    public volatile java.lang.Object nextRecord(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.api.common.operators.util.TestNonRichInputFormat r0;
        java.lang.Object r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.flink.api.common.operators.util.TestNonRichInputFormat;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.common.operators.util.TestNonRichInputFormat: java.lang.String nextRecord(java.lang.String)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <org.apache.flink.api.common.operators.util.TestNonRichInputFormat: int NUM> = 5;

        <org.apache.flink.api.common.operators.util.TestNonRichInputFormat: long serialVersionUID> = 1L;

        $r0 = <org.apache.flink.api.common.operators.util.TestIOData: java.lang.String[] NAMES>;

        <org.apache.flink.api.common.operators.util.TestNonRichInputFormat: java.lang.String[] NAMES> = $r0;

        return;
    }
}
