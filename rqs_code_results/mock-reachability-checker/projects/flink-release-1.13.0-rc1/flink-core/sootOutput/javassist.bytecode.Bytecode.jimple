public class javassist.bytecode.Bytecode extends javassist.bytecode.ByteVector implements java.lang.Cloneable, javassist.bytecode.Opcode
{
    public static final javassist.CtClass THIS;
    javassist.bytecode.ConstPool constPool;
    int maxStack;
    int maxLocals;
    javassist.bytecode.ExceptionTable tryblocks;
    private int stackDepth;

    public void <init>(javassist.bytecode.ConstPool, int, int)
    {
        javassist.bytecode.Bytecode r0;
        javassist.bytecode.ConstPool r1;
        int i0, i1;
        javassist.bytecode.ExceptionTable $r2;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<javassist.bytecode.ByteVector: void <init>()>();

        r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool> = r1;

        r0.<javassist.bytecode.Bytecode: int maxStack> = i0;

        r0.<javassist.bytecode.Bytecode: int maxLocals> = i1;

        $r2 = new javassist.bytecode.ExceptionTable;

        specialinvoke $r2.<javassist.bytecode.ExceptionTable: void <init>(javassist.bytecode.ConstPool)>(r1);

        r0.<javassist.bytecode.Bytecode: javassist.bytecode.ExceptionTable tryblocks> = $r2;

        r0.<javassist.bytecode.Bytecode: int stackDepth> = 0;

        return;
    }

    public void <init>(javassist.bytecode.ConstPool)
    {
        javassist.bytecode.Bytecode r0;
        javassist.bytecode.ConstPool r1;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        specialinvoke r0.<javassist.bytecode.Bytecode: void <init>(javassist.bytecode.ConstPool,int,int)>(r1, 0, 0);

        return;
    }

    public java.lang.Object clone()
    {
        javassist.bytecode.Bytecode r0, r7;
        java.lang.Object $r1, $r3;
        javassist.bytecode.ExceptionTable $r2, $r4;
        java.lang.CloneNotSupportedException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: javassist.bytecode.Bytecode;

     label1:
        $r1 = specialinvoke r0.<javassist.bytecode.ByteVector: java.lang.Object clone()>();

        r7 = (javassist.bytecode.Bytecode) $r1;

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ExceptionTable tryblocks>;

        $r3 = virtualinvoke $r2.<javassist.bytecode.ExceptionTable: java.lang.Object clone()>();

        $r4 = (javassist.bytecode.ExceptionTable) $r3;

        r7.<javassist.bytecode.Bytecode: javassist.bytecode.ExceptionTable tryblocks> = $r4;

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public javassist.bytecode.ConstPool getConstPool()
    {
        javassist.bytecode.Bytecode r0;
        javassist.bytecode.ConstPool $r1;

        r0 := @this: javassist.bytecode.Bytecode;

        $r1 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        return $r1;
    }

    public javassist.bytecode.ExceptionTable getExceptionTable()
    {
        javassist.bytecode.Bytecode r0;
        javassist.bytecode.ExceptionTable $r1;

        r0 := @this: javassist.bytecode.Bytecode;

        $r1 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ExceptionTable tryblocks>;

        return $r1;
    }

    public javassist.bytecode.CodeAttribute toCodeAttribute()
    {
        javassist.bytecode.Bytecode r0;
        javassist.bytecode.CodeAttribute $r1;
        javassist.bytecode.ConstPool $r2;
        int $i0, $i1;
        byte[] $r3;
        javassist.bytecode.ExceptionTable $r4;

        r0 := @this: javassist.bytecode.Bytecode;

        $r1 = new javassist.bytecode.CodeAttribute;

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = r0.<javassist.bytecode.Bytecode: int maxStack>;

        $i1 = r0.<javassist.bytecode.Bytecode: int maxLocals>;

        $r3 = virtualinvoke r0.<javassist.bytecode.Bytecode: byte[] get()>();

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ExceptionTable tryblocks>;

        specialinvoke $r1.<javassist.bytecode.CodeAttribute: void <init>(javassist.bytecode.ConstPool,int,int,byte[],javassist.bytecode.ExceptionTable)>($r2, $i0, $i1, $r3, $r4);

        return $r1;
    }

    public int length()
    {
        javassist.bytecode.Bytecode r0;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        $i0 = virtualinvoke r0.<javassist.bytecode.Bytecode: int getSize()>();

        return $i0;
    }

    public byte[] get()
    {
        javassist.bytecode.Bytecode r0;
        byte[] $r1;

        r0 := @this: javassist.bytecode.Bytecode;

        $r1 = virtualinvoke r0.<javassist.bytecode.Bytecode: byte[] copy()>();

        return $r1;
    }

    public int getMaxStack()
    {
        javassist.bytecode.Bytecode r0;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        $i0 = r0.<javassist.bytecode.Bytecode: int maxStack>;

        return $i0;
    }

    public void setMaxStack(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r0.<javassist.bytecode.Bytecode: int maxStack> = i0;

        return;
    }

    public int getMaxLocals()
    {
        javassist.bytecode.Bytecode r0;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        $i0 = r0.<javassist.bytecode.Bytecode: int maxLocals>;

        return $i0;
    }

    public void setMaxLocals(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r0.<javassist.bytecode.Bytecode: int maxLocals> = i0;

        return;
    }

    public void setMaxLocals(boolean, javassist.CtClass[], int)
    {
        javassist.bytecode.Bytecode r0;
        boolean z0;
        javassist.CtClass[] r1;
        javassist.CtClass r2, r3, r4;
        int i0, i1, i2;

        r0 := @this: javassist.bytecode.Bytecode;

        z0 := @parameter0: boolean;

        r1 := @parameter1: javassist.CtClass[];

        i1 := @parameter2: int;

        if z0 != 0 goto label1;

        i1 = i1 + 1;

     label1:
        if r1 == null goto label6;

        r2 = <javassist.CtClass: javassist.CtClass doubleType>;

        r3 = <javassist.CtClass: javassist.CtClass longType>;

        i0 = lengthof r1;

        i2 = 0;

     label2:
        if i2 >= i0 goto label6;

        r4 = r1[i2];

        if r4 == r2 goto label3;

        if r4 != r3 goto label4;

     label3:
        i1 = i1 + 2;

        goto label5;

     label4:
        i1 = i1 + 1;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        r0.<javassist.bytecode.Bytecode: int maxLocals> = i1;

        return;
    }

    public void incMaxLocals(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1, $i2;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        $i1 = r0.<javassist.bytecode.Bytecode: int maxLocals>;

        $i2 = $i1 + i0;

        r0.<javassist.bytecode.Bytecode: int maxLocals> = $i2;

        return;
    }

    public void addExceptionHandler(int, int, int, javassist.CtClass)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1, i2, $i3;
        javassist.CtClass r1;
        javassist.bytecode.ConstPool $r2;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: javassist.CtClass;

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i3 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addExceptionHandler(int,int,int,int)>(i0, i1, i2, $i3);

        return;
    }

    public void addExceptionHandler(int, int, int, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1, i2, $i3;
        java.lang.String r1;
        javassist.bytecode.ConstPool $r2;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i3 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addExceptionHandler(int,int,int,int)>(i0, i1, i2, $i3);

        return;
    }

    public void addExceptionHandler(int, int, int, int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1, i2, i3;
        javassist.bytecode.ExceptionTable $r1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ExceptionTable tryblocks>;

        virtualinvoke $r1.<javassist.bytecode.ExceptionTable: void add(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public int currentPc()
    {
        javassist.bytecode.Bytecode r0;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        $i0 = virtualinvoke r0.<javassist.bytecode.Bytecode: int getSize()>();

        return $i0;
    }

    public int read(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<javassist.bytecode.ByteVector: int read(int)>(i0);

        return $i1;
    }

    public int read16bit(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<javassist.bytecode.Bytecode: int read(int)>(i0);

        $i3 = i0 + 1;

        i2 = virtualinvoke r0.<javassist.bytecode.Bytecode: int read(int)>($i3);

        $i5 = i1 << 8;

        $i4 = i2 & 255;

        $i6 = $i5 + $i4;

        return $i6;
    }

    public int read32bit(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<javassist.bytecode.Bytecode: int read16bit(int)>(i0);

        $i3 = i0 + 2;

        i2 = virtualinvoke r0.<javassist.bytecode.Bytecode: int read16bit(int)>($i3);

        $i5 = i1 << 16;

        $i4 = i2 & 65535;

        $i6 = $i5 + $i4;

        return $i6;
    }

    public void write(int, int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<javassist.bytecode.ByteVector: void write(int,int)>(i0, i1);

        return;
    }

    public void write16bit(int, int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1, $i2, $i3;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 >> 8;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void write(int,int)>(i0, $i2);

        $i3 = i0 + 1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void write(int,int)>($i3, i1);

        return;
    }

    public void write32bit(int, int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1, $i2, $i3;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 >> 16;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void write16bit(int,int)>(i0, $i2);

        $i3 = i0 + 2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void write16bit(int,int)>($i3, i1);

        return;
    }

    public void add(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        specialinvoke r0.<javassist.bytecode.ByteVector: void add(int)>(i0);

        return;
    }

    public void add32bit(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        $i3 = i0 >> 24;

        $i2 = i0 >> 16;

        $i1 = i0 >> 8;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int,int,int,int)>($i3, $i2, $i1, i0);

        return;
    }

    public void addGap(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        specialinvoke r0.<javassist.bytecode.ByteVector: void addGap(int)>(i0);

        return;
    }

    public void addOpcode(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        $r1 = <javassist.bytecode.Bytecode: int[] STACK_GROW>;

        $i1 = $r1[i0];

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i1);

        return;
    }

    public void growStack(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1, $i2;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        $i1 = r0.<javassist.bytecode.Bytecode: int stackDepth>;

        $i2 = $i1 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void setStackDepth(int)>($i2);

        return;
    }

    public int getStackDepth()
    {
        javassist.bytecode.Bytecode r0;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        $i0 = r0.<javassist.bytecode.Bytecode: int stackDepth>;

        return $i0;
    }

    public void setStackDepth(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r0.<javassist.bytecode.Bytecode: int stackDepth> = i0;

        $i2 = r0.<javassist.bytecode.Bytecode: int stackDepth>;

        $i1 = r0.<javassist.bytecode.Bytecode: int maxStack>;

        if $i2 <= $i1 goto label1;

        $i3 = r0.<javassist.bytecode.Bytecode: int stackDepth>;

        r0.<javassist.bytecode.Bytecode: int maxStack> = $i3;

     label1:
        return;
    }

    public void addIndex(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        $i1 = i0 >> 8;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int,int)>($i1, i0);

        return;
    }

    public void addAload(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 4 goto label1;

        $i1 = 42 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i1);

        goto label3;

     label1:
        if i0 >= 256 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(25);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(196);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(25);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

     label3:
        return;
    }

    public void addAstore(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 4 goto label1;

        $i1 = 75 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i1);

        goto label3;

     label1:
        if i0 >= 256 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(58);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(196);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(58);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

     label3:
        return;
    }

    public void addIconst(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1, $i2, $i3;
        javassist.bytecode.ConstPool $r1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 6 goto label1;

        if -2 >= i0 goto label1;

        $i3 = 3 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i3);

        goto label4;

     label1:
        if i0 > 127 goto label2;

        if -128 > i0 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(16);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label4;

     label2:
        if i0 > 32767 goto label3;

        if -32768 > i0 goto label3;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(17);

        $i2 = i0 >> 8;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>($i2);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label4;

     label3:
        $r1 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r1.<javassist.bytecode.ConstPool: int addIntegerInfo(int)>(i0);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addLdc(int)>($i1);

     label4:
        return;
    }

    public void addConstZero(javassist.CtClass)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1, $r2, $r3, $r4, $r5;
        boolean $z0;
        java.lang.RuntimeException $r6;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        $z0 = virtualinvoke r1.<javassist.CtClass: boolean isPrimitive()>();

        if $z0 == 0 goto label5;

        $r2 = <javassist.CtClass: javassist.CtClass longType>;

        if r1 != $r2 goto label1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(9);

        goto label6;

     label1:
        $r3 = <javassist.CtClass: javassist.CtClass floatType>;

        if r1 != $r3 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(11);

        goto label6;

     label2:
        $r4 = <javassist.CtClass: javassist.CtClass doubleType>;

        if r1 != $r4 goto label3;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(14);

        goto label6;

     label3:
        $r5 = <javassist.CtClass: javassist.CtClass voidType>;

        if r1 != $r5 goto label4;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("void type?");

        throw $r6;

     label4:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(3);

        goto label6;

     label5:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(1);

     label6:
        return;
    }

    public void addIload(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 4 goto label1;

        $i1 = 26 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i1);

        goto label3;

     label1:
        if i0 >= 256 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(21);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(196);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(21);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

     label3:
        return;
    }

    public void addIstore(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 4 goto label1;

        $i1 = 59 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i1);

        goto label3;

     label1:
        if i0 >= 256 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(54);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(196);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(54);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

     label3:
        return;
    }

    public void addLconst(long)
    {
        javassist.bytecode.Bytecode r0;
        long l0;
        byte $b1, $b4;
        int $i2, $i3;

        r0 := @this: javassist.bytecode.Bytecode;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        $b4 = l0 cmp 1L;

        if $b4 != 0 goto label2;

     label1:
        $i2 = (int) l0;

        $i3 = 9 + $i2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i3);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addLdc2w(long)>(l0);

     label3:
        return;
    }

    public void addLload(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 4 goto label1;

        $i1 = 30 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i1);

        goto label3;

     label1:
        if i0 >= 256 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(22);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(196);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(22);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

     label3:
        return;
    }

    public void addLstore(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 4 goto label1;

        $i1 = 63 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i1);

        goto label3;

     label1:
        if i0 >= 256 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(55);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(196);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(55);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

     label3:
        return;
    }

    public void addDconst(double)
    {
        javassist.bytecode.Bytecode r0;
        double d0;
        byte $b0, $b3;
        int $i1, $i2;

        r0 := @this: javassist.bytecode.Bytecode;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $b3 = d0 cmpl 1.0;

        if $b3 != 0 goto label2;

     label1:
        $i1 = (int) d0;

        $i2 = 14 + $i1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i2);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addLdc2w(double)>(d0);

     label3:
        return;
    }

    public void addDload(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 4 goto label1;

        $i1 = 38 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i1);

        goto label3;

     label1:
        if i0 >= 256 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(24);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(196);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(24);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

     label3:
        return;
    }

    public void addDstore(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 4 goto label1;

        $i1 = 71 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i1);

        goto label3;

     label1:
        if i0 >= 256 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(57);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(196);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(57);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

     label3:
        return;
    }

    public void addFconst(float)
    {
        javassist.bytecode.Bytecode r0;
        float f0;
        byte $b0, $b1, $b2;
        javassist.bytecode.ConstPool $r1;
        int $i3, $i4, $i5;

        r0 := @this: javassist.bytecode.Bytecode;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $b1 = f0 cmpl 1.0F;

        if $b1 == 0 goto label1;

        $b2 = f0 cmpl 2.0F;

        if $b2 != 0 goto label2;

     label1:
        $i4 = (int) f0;

        $i5 = 11 + $i4;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i5);

        goto label3;

     label2:
        $r1 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i3 = virtualinvoke $r1.<javassist.bytecode.ConstPool: int addFloatInfo(float)>(f0);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addLdc(int)>($i3);

     label3:
        return;
    }

    public void addFload(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 4 goto label1;

        $i1 = 34 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i1);

        goto label3;

     label1:
        if i0 >= 256 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(23);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(196);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(23);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

     label3:
        return;
    }

    public void addFstore(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 4 goto label1;

        $i1 = 67 + i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i1);

        goto label3;

     label1:
        if i0 >= 256 goto label2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(56);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(196);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(56);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

     label3:
        return;
    }

    public int addLoad(int, javassist.CtClass)
    {
        javassist.bytecode.Bytecode r0;
        int i0;
        javassist.CtClass r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0;
        java.lang.RuntimeException $r10;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.CtClass;

        $z0 = virtualinvoke r1.<javassist.CtClass: boolean isPrimitive()>();

        if $z0 == 0 goto label6;

        $r2 = <javassist.CtClass: javassist.CtClass booleanType>;

        if r1 == $r2 goto label1;

        $r3 = <javassist.CtClass: javassist.CtClass charType>;

        if r1 == $r3 goto label1;

        $r4 = <javassist.CtClass: javassist.CtClass byteType>;

        if r1 == $r4 goto label1;

        $r5 = <javassist.CtClass: javassist.CtClass shortType>;

        if r1 == $r5 goto label1;

        $r6 = <javassist.CtClass: javassist.CtClass intType>;

        if r1 != $r6 goto label2;

     label1:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIload(int)>(i0);

        goto label7;

     label2:
        $r7 = <javassist.CtClass: javassist.CtClass longType>;

        if r1 != $r7 goto label3;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addLload(int)>(i0);

        return 2;

     label3:
        $r8 = <javassist.CtClass: javassist.CtClass floatType>;

        if r1 != $r8 goto label4;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addFload(int)>(i0);

        goto label7;

     label4:
        $r9 = <javassist.CtClass: javassist.CtClass doubleType>;

        if r1 != $r9 goto label5;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addDload(int)>(i0);

        return 2;

     label5:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("void type?");

        throw $r10;

     label6:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addAload(int)>(i0);

     label7:
        return 1;
    }

    public int addStore(int, javassist.CtClass)
    {
        javassist.bytecode.Bytecode r0;
        int i0;
        javassist.CtClass r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0;
        java.lang.RuntimeException $r10;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.CtClass;

        $z0 = virtualinvoke r1.<javassist.CtClass: boolean isPrimitive()>();

        if $z0 == 0 goto label6;

        $r2 = <javassist.CtClass: javassist.CtClass booleanType>;

        if r1 == $r2 goto label1;

        $r3 = <javassist.CtClass: javassist.CtClass charType>;

        if r1 == $r3 goto label1;

        $r4 = <javassist.CtClass: javassist.CtClass byteType>;

        if r1 == $r4 goto label1;

        $r5 = <javassist.CtClass: javassist.CtClass shortType>;

        if r1 == $r5 goto label1;

        $r6 = <javassist.CtClass: javassist.CtClass intType>;

        if r1 != $r6 goto label2;

     label1:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIstore(int)>(i0);

        goto label7;

     label2:
        $r7 = <javassist.CtClass: javassist.CtClass longType>;

        if r1 != $r7 goto label3;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addLstore(int)>(i0);

        return 2;

     label3:
        $r8 = <javassist.CtClass: javassist.CtClass floatType>;

        if r1 != $r8 goto label4;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addFstore(int)>(i0);

        goto label7;

     label4:
        $r9 = <javassist.CtClass: javassist.CtClass doubleType>;

        if r1 != $r9 goto label5;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addDstore(int)>(i0);

        return 2;

     label5:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("void type?");

        throw $r10;

     label6:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addAstore(int)>(i0);

     label7:
        return 1;
    }

    public int addLoadParameters(javassist.CtClass[], int)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass[] r1;
        int i0, i1, $i2, $i3, i4, i5;
        javassist.CtClass $r2;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass[];

        i0 := @parameter1: int;

        i4 = 0;

        if r1 == null goto label2;

        i1 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i1 goto label2;

        $i2 = i4 + i0;

        $r2 = r1[i5];

        $i3 = virtualinvoke r0.<javassist.bytecode.Bytecode: int addLoad(int,javassist.CtClass)>($i2, $r2);

        i4 = i4 + $i3;

        i5 = i5 + 1;

        goto label1;

     label2:
        return i4;
    }

    public void addCheckcast(javassist.CtClass)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        javassist.bytecode.ConstPool $r2;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(192);

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i0);

        return;
    }

    public void addCheckcast(java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1;
        javassist.bytecode.ConstPool $r2;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(192);

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i0);

        return;
    }

    public void addInstanceof(java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1;
        javassist.bytecode.ConstPool $r2;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(193);

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i0);

        return;
    }

    public void addGetfield(javassist.CtClass, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        java.lang.String r2, r3;
        int i0, $i1, $i2, $i3;
        javassist.bytecode.ConstPool $r4, $r5;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(180);

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        i0 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        $r5 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r5.<javassist.bytecode.ConstPool: int addFieldrefInfo(int,java.lang.String,java.lang.String)>(i0, r2, r3);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i1);

        $i2 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String)>(r3);

        $i3 = $i2 - 1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i3);

        return;
    }

    public void addGetfield(java.lang.String, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1, r2, r3;
        int i0, $i1, $i2, $i3;
        javassist.bytecode.ConstPool $r4, $r5;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(180);

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        i0 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        $r5 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r5.<javassist.bytecode.ConstPool: int addFieldrefInfo(int,java.lang.String,java.lang.String)>(i0, r2, r3);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i1);

        $i2 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String)>(r3);

        $i3 = $i2 - 1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i3);

        return;
    }

    public void addGetstatic(javassist.CtClass, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        java.lang.String r2, r3;
        int i0, $i1, $i2;
        javassist.bytecode.ConstPool $r4, $r5;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(178);

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        i0 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        $r5 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r5.<javassist.bytecode.ConstPool: int addFieldrefInfo(int,java.lang.String,java.lang.String)>(i0, r2, r3);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i1);

        $i2 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String)>(r3);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i2);

        return;
    }

    public void addGetstatic(java.lang.String, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1, r2, r3;
        int i0, $i1, $i2;
        javassist.bytecode.ConstPool $r4, $r5;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(178);

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        i0 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        $r5 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r5.<javassist.bytecode.ConstPool: int addFieldrefInfo(int,java.lang.String,java.lang.String)>(i0, r2, r3);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i1);

        $i2 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String)>(r3);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i2);

        return;
    }

    public void addInvokespecial(javassist.CtClass, java.lang.String, javassist.CtClass, javassist.CtClass[])
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1, r3;
        java.lang.String r2, r5;
        javassist.CtClass[] r4;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.CtClass;

        r4 := @parameter3: javassist.CtClass[];

        r5 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String ofMethod(javassist.CtClass,javassist.CtClass[])>(r3, r4);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokespecial(javassist.CtClass,java.lang.String,java.lang.String)>(r1, r2, r5);

        return;
    }

    public void addInvokespecial(javassist.CtClass, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        java.lang.String r2, r3;
        javassist.bytecode.ConstPool $r4;
        int $i0;
        boolean $z1;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r1 != null goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = virtualinvoke r1.<javassist.CtClass: boolean isInterface()>();

     label2:
        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokespecial(boolean,int,java.lang.String,java.lang.String)>($z1, $i0, r2, r3);

        return;
    }

    public void addInvokespecial(java.lang.String, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1, r2, r3;
        javassist.bytecode.ConstPool $r4;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokespecial(boolean,int,java.lang.String,java.lang.String)>(0, $i0, r2, r3);

        return;
    }

    public void addInvokespecial(int, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokespecial(boolean,int,java.lang.String,java.lang.String)>(0, i0, r1, r2);

        return;
    }

    public void addInvokespecial(boolean, int, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        boolean z0;
        int i0, i1;
        java.lang.String r1, r2;
        javassist.bytecode.ConstPool $r3, $r4;

        r0 := @this: javassist.bytecode.Bytecode;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        if z0 == 0 goto label1;

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        i1 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addInterfaceMethodrefInfo(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        goto label2;

     label1:
        $r3 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        i1 = virtualinvoke $r3.<javassist.bytecode.ConstPool: int addMethodrefInfo(int,java.lang.String,java.lang.String)>(i0, r1, r2);

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokespecial(int,java.lang.String)>(i1, r2);

        return;
    }

    public void addInvokespecial(int, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1, $i2;
        java.lang.String r1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(183);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

        $i1 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String)>(r1);

        $i2 = $i1 - 1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i2);

        return;
    }

    public void addInvokestatic(javassist.CtClass, java.lang.String, javassist.CtClass, javassist.CtClass[])
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1, r3;
        java.lang.String r2, r5;
        javassist.CtClass[] r4;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.CtClass;

        r4 := @parameter3: javassist.CtClass[];

        r5 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String ofMethod(javassist.CtClass,javassist.CtClass[])>(r3, r4);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokestatic(javassist.CtClass,java.lang.String,java.lang.String)>(r1, r2, r5);

        return;
    }

    public void addInvokestatic(javassist.CtClass, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1, $r4;
        java.lang.String r2, r3;
        javassist.bytecode.ConstPool $r5;
        int $i0;
        boolean z0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = <javassist.bytecode.Bytecode: javassist.CtClass THIS>;

        if r1 != $r4 goto label1;

        z0 = 0;

        goto label2;

     label1:
        z0 = virtualinvoke r1.<javassist.CtClass: boolean isInterface()>();

     label2:
        $r5 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r5.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        specialinvoke r0.<javassist.bytecode.Bytecode: void addInvokestatic(int,java.lang.String,java.lang.String,boolean)>($i0, r2, r3, z0);

        return;
    }

    public void addInvokestatic(java.lang.String, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1, r2, r3;
        javassist.bytecode.ConstPool $r4;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokestatic(int,java.lang.String,java.lang.String)>($i0, r2, r3);

        return;
    }

    public void addInvokestatic(int, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<javassist.bytecode.Bytecode: void addInvokestatic(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, 0);

        return;
    }

    private void addInvokestatic(int, java.lang.String, java.lang.String, boolean)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1, i2;
        java.lang.String r1, r2;
        boolean z0;
        javassist.bytecode.ConstPool $r3, $r4;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(184);

        if z0 == 0 goto label1;

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        i2 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addInterfaceMethodrefInfo(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        goto label2;

     label1:
        $r3 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        i2 = virtualinvoke $r3.<javassist.bytecode.ConstPool: int addMethodrefInfo(int,java.lang.String,java.lang.String)>(i0, r1, r2);

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i2);

        $i1 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String)>(r2);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i1);

        return;
    }

    public void addInvokevirtual(javassist.CtClass, java.lang.String, javassist.CtClass, javassist.CtClass[])
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1, r3;
        java.lang.String r2, r5;
        javassist.CtClass[] r4;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.CtClass;

        r4 := @parameter3: javassist.CtClass[];

        r5 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String ofMethod(javassist.CtClass,javassist.CtClass[])>(r3, r4);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokevirtual(javassist.CtClass,java.lang.String,java.lang.String)>(r1, r2, r5);

        return;
    }

    public void addInvokevirtual(javassist.CtClass, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        java.lang.String r2, r3;
        javassist.bytecode.ConstPool $r4;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokevirtual(int,java.lang.String,java.lang.String)>($i0, r2, r3);

        return;
    }

    public void addInvokevirtual(java.lang.String, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1, r2, r3;
        javassist.bytecode.ConstPool $r4;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokevirtual(int,java.lang.String,java.lang.String)>($i0, r2, r3);

        return;
    }

    public void addInvokevirtual(int, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        int i0, $i1, $i2, $i3;
        java.lang.String r1, r2;
        javassist.bytecode.ConstPool $r3;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(182);

        $r3 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r3.<javassist.bytecode.ConstPool: int addMethodrefInfo(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i1);

        $i2 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String)>(r2);

        $i3 = $i2 - 1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i3);

        return;
    }

    public void addInvokeinterface(javassist.CtClass, java.lang.String, javassist.CtClass, javassist.CtClass[], int)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1, r3;
        java.lang.String r2, r5;
        javassist.CtClass[] r4;
        int i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.CtClass;

        r4 := @parameter3: javassist.CtClass[];

        i0 := @parameter4: int;

        r5 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String ofMethod(javassist.CtClass,javassist.CtClass[])>(r3, r4);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokeinterface(javassist.CtClass,java.lang.String,java.lang.String,int)>(r1, r2, r5, i0);

        return;
    }

    public void addInvokeinterface(javassist.CtClass, java.lang.String, java.lang.String, int)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        java.lang.String r2, r3;
        int i0, $i1;
        javassist.bytecode.ConstPool $r4;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokeinterface(int,java.lang.String,java.lang.String,int)>($i1, r2, r3, i0);

        return;
    }

    public void addInvokeinterface(java.lang.String, java.lang.String, java.lang.String, int)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1, r2, r3;
        int i0, $i1;
        javassist.bytecode.ConstPool $r4;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokeinterface(int,java.lang.String,java.lang.String,int)>($i1, r2, r3, i0);

        return;
    }

    public void addInvokeinterface(int, java.lang.String, java.lang.String, int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r1, r2;
        javassist.bytecode.ConstPool $r3;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(185);

        $r3 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i2 = virtualinvoke $r3.<javassist.bytecode.ConstPool: int addInterfaceMethodrefInfo(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i2);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(0);

        $i3 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String)>(r2);

        $i4 = $i3 - 1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i4);

        return;
    }

    public void addInvokedynamic(int, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1, i2, $i3;
        java.lang.String r1, r2;
        javassist.bytecode.ConstPool $r3, $r4;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        i1 = virtualinvoke $r3.<javassist.bytecode.ConstPool: int addNameAndTypeInfo(java.lang.String,java.lang.String)>(r1, r2);

        $r4 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        i2 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int addInvokeDynamicInfo(int,int)>(i0, i1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(186);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i2);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int,int)>(0, 0);

        $i3 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String)>(r2);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i3);

        return;
    }

    public void addLdc(java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1;
        javassist.bytecode.ConstPool $r2;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addStringInfo(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addLdc(int)>($i0);

        return;
    }

    public void addLdc(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 <= 255 goto label1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(19);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

        goto label2;

     label1:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(18);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

     label2:
        return;
    }

    public void addLdc2w(long)
    {
        javassist.bytecode.Bytecode r0;
        long l0;
        javassist.bytecode.ConstPool $r1;
        int $i1;

        r0 := @this: javassist.bytecode.Bytecode;

        l0 := @parameter0: long;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(20);

        $r1 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r1.<javassist.bytecode.ConstPool: int addLongInfo(long)>(l0);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i1);

        return;
    }

    public void addLdc2w(double)
    {
        javassist.bytecode.Bytecode r0;
        double d0;
        javassist.bytecode.ConstPool $r1;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        d0 := @parameter0: double;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(20);

        $r1 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r1.<javassist.bytecode.ConstPool: int addDoubleInfo(double)>(d0);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i0);

        return;
    }

    public void addNew(javassist.CtClass)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        javassist.bytecode.ConstPool $r2;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(187);

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i0);

        return;
    }

    public void addNew(java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1;
        javassist.bytecode.ConstPool $r2;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(187);

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i0);

        return;
    }

    public void addAnewarray(java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1;
        javassist.bytecode.ConstPool $r2;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(189);

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i0);

        return;
    }

    public void addAnewarray(javassist.CtClass, int)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        int i0, $i1;
        javassist.bytecode.ConstPool $r2;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        i0 := @parameter1: int;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIconst(int)>(i0);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(189);

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i1);

        return;
    }

    public void addNewarray(int, int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIconst(int)>(i1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(188);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        return;
    }

    public int addMultiNewarray(javassist.CtClass, int[])
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        int[] r2;
        int i0, $i1, $i2, i3;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: int[];

        i0 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i2 = r2[i3];

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIconst(int)>($i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>(i0);

        $i1 = virtualinvoke r0.<javassist.bytecode.Bytecode: int addMultiNewarray(javassist.CtClass,int)>(r1, i0);

        return $i1;
    }

    public int addMultiNewarray(javassist.CtClass, int)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        int i0, $i1, $i2;
        javassist.bytecode.ConstPool $r2;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        i0 := @parameter1: int;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(197);

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        $i2 = 1 - i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i2);

        return i0;
    }

    public int addMultiNewarray(java.lang.String, int)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        javassist.bytecode.ConstPool $r2;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(197);

        $r2 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        $i2 = 1 - i0;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i2);

        return i0;
    }

    public void addPutfield(javassist.CtClass, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        java.lang.String r2, r3;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<javassist.bytecode.Bytecode: void addPutfield0(javassist.CtClass,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2, r3);

        return;
    }

    public void addPutfield(java.lang.String, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1, r2, r3;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<javassist.bytecode.Bytecode: void addPutfield0(javassist.CtClass,java.lang.String,java.lang.String,java.lang.String)>(null, r1, r2, r3);

        return;
    }

    private void addPutfield0(javassist.CtClass, java.lang.String, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        java.lang.String r2, r3, r4;
        javassist.bytecode.ConstPool $r5, $r6, $r7;
        int $i1, $i2, $i3, $i4;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(181);

        if r2 != null goto label1;

        $r7 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i4 = virtualinvoke $r7.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        goto label2;

     label1:
        $r5 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i4 = virtualinvoke $r5.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r2);

     label2:
        $r6 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r6.<javassist.bytecode.ConstPool: int addFieldrefInfo(int,java.lang.String,java.lang.String)>($i4, r3, r4);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i1);

        $i2 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String)>(r4);

        $i3 = -1 - $i2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i3);

        return;
    }

    public void addPutstatic(javassist.CtClass, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        java.lang.String r2, r3;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<javassist.bytecode.Bytecode: void addPutstatic0(javassist.CtClass,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2, r3);

        return;
    }

    public void addPutstatic(java.lang.String, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1, r2, r3;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<javassist.bytecode.Bytecode: void addPutstatic0(javassist.CtClass,java.lang.String,java.lang.String,java.lang.String)>(null, r1, r2, r3);

        return;
    }

    private void addPutstatic0(javassist.CtClass, java.lang.String, java.lang.String, java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        java.lang.String r2, r3, r4;
        javassist.bytecode.ConstPool $r5, $r6, $r7;
        int $i1, $i2, $i3, $i4;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(179);

        if r2 != null goto label1;

        $r7 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i4 = virtualinvoke $r7.<javassist.bytecode.ConstPool: int addClassInfo(javassist.CtClass)>(r1);

        goto label2;

     label1:
        $r5 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i4 = virtualinvoke $r5.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r2);

     label2:
        $r6 = r0.<javassist.bytecode.Bytecode: javassist.bytecode.ConstPool constPool>;

        $i1 = virtualinvoke $r6.<javassist.bytecode.ConstPool: int addFieldrefInfo(int,java.lang.String,java.lang.String)>($i4, r3, r4);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>($i1);

        $i2 = staticinvoke <javassist.bytecode.Descriptor: int dataSize(java.lang.String)>(r4);

        $i3 = neg $i2;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void growStack(int)>($i3);

        return;
    }

    public void addReturn(javassist.CtClass)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass r1;
        javassist.CtPrimitiveType r2;
        boolean $z0;
        int $i0;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: javassist.CtClass;

        if r1 != null goto label1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(177);

        goto label3;

     label1:
        $z0 = virtualinvoke r1.<javassist.CtClass: boolean isPrimitive()>();

        if $z0 == 0 goto label2;

        r2 = (javassist.CtPrimitiveType) r1;

        $i0 = virtualinvoke r2.<javassist.CtPrimitiveType: int getReturnOp()>();

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>($i0);

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(176);

     label3:
        return;
    }

    public void addRet(int)
    {
        javassist.bytecode.Bytecode r0;
        int i0;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        if i0 >= 256 goto label1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(169);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void add(int)>(i0);

        goto label2;

     label1:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(196);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(169);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIndex(int)>(i0);

     label2:
        return;
    }

    public void addPrintln(java.lang.String)
    {
        javassist.bytecode.Bytecode r0;
        java.lang.String r1;

        r0 := @this: javassist.bytecode.Bytecode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addGetstatic(java.lang.String,java.lang.String,java.lang.String)>("java.lang.System", "err", "Ljava/io/PrintStream;");

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addLdc(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokevirtual(java.lang.String,java.lang.String,java.lang.String)>("java.io.PrintStream", "println", "(Ljava/lang/String;)V");

        return;
    }

    public volatile void add(int, int, int, int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1, i2, i3;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<javassist.bytecode.ByteVector: void add(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public volatile void add(int, int)
    {
        javassist.bytecode.Bytecode r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.Bytecode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<javassist.bytecode.ByteVector: void add(int,int)>(i0, i1);

        return;
    }

    static void <clinit>()
    {
        javassist.CtClass $r0;

        $r0 = <javassist.bytecode.ConstPool: javassist.CtClass THIS>;

        <javassist.bytecode.Bytecode: javassist.CtClass THIS> = $r0;

        return;
    }
}
