public class org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator extends java.lang.Object implements org.apache.flink.api.connector.source.SplitEnumerator
{
    private final org.apache.flink.api.connector.source.SplitEnumeratorContext context;
    private final java.util.Queue remainingSplits;

    public void <init>(org.apache.flink.api.connector.source.SplitEnumeratorContext, java.util.Collection)
    {
        org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator r0;
        org.apache.flink.api.connector.source.SplitEnumeratorContext r1, $r4;
        java.util.Collection r2;
        java.lang.Object $r3;
        java.util.ArrayDeque $r5;

        r0 := @this: org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator;

        r1 := @parameter0: org.apache.flink.api.connector.source.SplitEnumeratorContext;

        r2 := @parameter1: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.apache.flink.api.connector.source.SplitEnumeratorContext) $r3;

        r0.<org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator: org.apache.flink.api.connector.source.SplitEnumeratorContext context> = $r4;

        $r5 = new java.util.ArrayDeque;

        specialinvoke $r5.<java.util.ArrayDeque: void <init>(java.util.Collection)>(r2);

        r0.<org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator: java.util.Queue remainingSplits> = $r5;

        return;
    }

    public void start()
    {
        org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator r0;

        r0 := @this: org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator;

        return;
    }

    public void close()
    {
        org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator r0;

        r0 := @this: org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator;

        return;
    }

    public void handleSplitRequest(int, java.lang.String)
    {
        org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator r0;
        int i0;
        java.lang.String r1;
        org.apache.flink.api.connector.source.lib.util.IteratorSourceSplit r2;
        java.util.Queue $r3;
        java.lang.Object $r4;
        org.apache.flink.api.connector.source.SplitEnumeratorContext $r5, $r6;

        r0 := @this: org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator: java.util.Queue remainingSplits>;

        $r4 = interfaceinvoke $r3.<java.util.Queue: java.lang.Object poll()>();

        r2 = (org.apache.flink.api.connector.source.lib.util.IteratorSourceSplit) $r4;

        if r2 == null goto label1;

        $r6 = r0.<org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator: org.apache.flink.api.connector.source.SplitEnumeratorContext context>;

        interfaceinvoke $r6.<org.apache.flink.api.connector.source.SplitEnumeratorContext: void assignSplit(org.apache.flink.api.connector.source.SourceSplit,int)>(r2, i0);

        goto label2;

     label1:
        $r5 = r0.<org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator: org.apache.flink.api.connector.source.SplitEnumeratorContext context>;

        interfaceinvoke $r5.<org.apache.flink.api.connector.source.SplitEnumeratorContext: void signalNoMoreSplits(int)>(i0);

     label2:
        return;
    }

    public void addSplitsBack(java.util.List, int)
    {
        org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator r0;
        java.util.List r1;
        int i0;
        java.util.Queue $r2;

        r0 := @this: org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator: java.util.Queue remainingSplits>;

        interfaceinvoke $r2.<java.util.Queue: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public java.util.Collection snapshotState() throws java.lang.Exception
    {
        org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator r0;
        java.util.Queue $r1;

        r0 := @this: org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator;

        $r1 = r0.<org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator: java.util.Queue remainingSplits>;

        return $r1;
    }

    public void addReader(int)
    {
        org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator r0;
        int i0;

        r0 := @this: org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator;

        i0 := @parameter0: int;

        return;
    }

    public volatile java.lang.Object snapshotState() throws java.lang.Exception
    {
        org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator;

        $r1 = virtualinvoke r0.<org.apache.flink.api.connector.source.lib.util.IteratorSourceEnumerator: java.util.Collection snapshotState()>();

        return $r1;
    }
}
