public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode
{
    static final int MIN_CANONICAL;
    static final int MAX_CANONICAL;
    private static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode[] CANONICALS;
    protected final int _value;

    public void <init>(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value> = i0;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode valueOf(int)
    {
        int i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode $r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode[] $r1;

        i0 := @parameter0: int;

        if i0 > 10 goto label1;

        if i0 >= -1 goto label2;

     label1:
        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: void <init>(int)>(i0);

        return $r0;

     label2:
        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode[] CANONICALS>;

        $i1 = i0 - -1;

        $r2 = $r1[$i1];

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken asToken()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType numberType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType INT>;

        return $r1;
    }

    public boolean isIntegralNumber()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        return 1;
    }

    public boolean isInt()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        return 1;
    }

    public boolean canConvertToInt()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        return 1;
    }

    public boolean canConvertToLong()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        return 1;
    }

    public java.lang.Number numberValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    public short shortValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        int $i0;
        short $s1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        $s1 = (short) $i0;

        return $s1;
    }

    public int intValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        return $i0;
    }

    public long longValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        int $i0;
        long $l1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        $l1 = (long) $i0;

        return $l1;
    }

    public float floatValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        int $i0;
        float $f0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        $f0 = (float) $i0;

        return $f0;
    }

    public double doubleValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        int $i0;
        double $d0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        $d0 = (double) $i0;

        return $d0;
    }

    public java.math.BigDecimal decimalValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        int $i0;
        long $l1;
        java.math.BigDecimal $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        $l1 = (long) $i0;

        $r1 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($l1);

        return $r1;
    }

    public java.math.BigInteger bigIntegerValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        int $i0;
        long $l1;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        $l1 = (long) $i0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        return $r1;
    }

    public java.lang.String asText()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(int)>($i0);

        return $r1;
    }

    public boolean asBoolean(boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        boolean z0, $z1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        z0 := @parameter0: boolean;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        if $i0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public final void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>($i0);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        if $z0 == 0 goto label5;

        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode) r1;

        $i1 = $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        if $i1 != $i0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int _value>;

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode[] $r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode $r1;
        int $i1, i2;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int MAX_CANONICAL> = 10;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: int MIN_CANONICAL> = -1;

        $r0 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode)[12];

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode[] CANONICALS> = $r0;

        i2 = 0;

     label1:
        if i2 >= 12 goto label2;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode[] CANONICALS>;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode;

        $i1 = -1 + i2;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.IntNode: void <init>(int)>($i1);

        $r2[i2] = $r1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
}
