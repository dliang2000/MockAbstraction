public class org.junit.matchers.JUnitMatchers extends java.lang.Object
{

    public void <init>()
    {
        org.junit.matchers.JUnitMatchers r0;

        r0 := @this: org.junit.matchers.JUnitMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.hamcrest.Matcher hasItem(java.lang.Object)
    {
        java.lang.Object r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher hasItem(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher hasItem(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher hasItem(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static transient org.hamcrest.Matcher hasItems(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher hasItems(java.lang.Object[])>(r0);

        return $r1;
    }

    public static transient org.hamcrest.Matcher hasItems(org.hamcrest.Matcher[])
    {
        org.hamcrest.Matcher[] r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: org.hamcrest.Matcher[];

        $r1 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher hasItems(org.hamcrest.Matcher[])>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher everyItem(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher everyItem(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher containsString(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher containsString(java.lang.String)>(r0);

        return $r1;
    }

    public static org.hamcrest.core.CombinableMatcher$CombinableBothMatcher both(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;
        org.hamcrest.core.CombinableMatcher$CombinableBothMatcher $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.core.CombinableMatcher$CombinableBothMatcher both(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher either(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;
        org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher either(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher isThrowable(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.junit.internal.matchers.StacktracePrintingMatcher: org.hamcrest.Matcher isThrowable(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher isException(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.junit.internal.matchers.StacktracePrintingMatcher: org.hamcrest.Matcher isException(org.hamcrest.Matcher)>(r0);

        return $r1;
    }
}
