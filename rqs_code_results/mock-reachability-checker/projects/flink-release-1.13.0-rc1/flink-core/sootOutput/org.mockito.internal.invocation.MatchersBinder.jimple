public class org.mockito.internal.invocation.MatchersBinder extends java.lang.Object implements java.io.Serializable
{

    public void <init>()
    {
        org.mockito.internal.invocation.MatchersBinder r0;

        r0 := @this: org.mockito.internal.invocation.MatchersBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.mockito.internal.invocation.InvocationMatcher bindMatchers(org.mockito.internal.progress.ArgumentMatcherStorage, org.mockito.invocation.Invocation)
    {
        org.mockito.internal.invocation.MatchersBinder r0;
        org.mockito.internal.progress.ArgumentMatcherStorage r1;
        org.mockito.invocation.Invocation r2;
        java.util.List r3;
        java.util.Iterator r5;
        org.mockito.internal.matchers.LocalizedMatcher r6;
        java.util.LinkedList $r7;
        boolean $z0;
        org.mockito.internal.invocation.InvocationMatcher $r8;
        java.lang.Object $r9;
        org.mockito.ArgumentMatcher $r10;

        r0 := @this: org.mockito.internal.invocation.MatchersBinder;

        r1 := @parameter0: org.mockito.internal.progress.ArgumentMatcherStorage;

        r2 := @parameter1: org.mockito.invocation.Invocation;

        r3 = interfaceinvoke r1.<org.mockito.internal.progress.ArgumentMatcherStorage: java.util.List pullLocalizedMatchers()>();

        specialinvoke r0.<org.mockito.internal.invocation.MatchersBinder: void validateMatchers(org.mockito.invocation.Invocation,java.util.List)>(r2, r3);

        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.mockito.internal.matchers.LocalizedMatcher) $r9;

        $r10 = virtualinvoke r6.<org.mockito.internal.matchers.LocalizedMatcher: org.mockito.ArgumentMatcher getMatcher()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r8 = new org.mockito.internal.invocation.InvocationMatcher;

        specialinvoke $r8.<org.mockito.internal.invocation.InvocationMatcher: void <init>(org.mockito.invocation.Invocation,java.util.List)>(r2, $r7);

        return $r8;
    }

    private void validateMatchers(org.mockito.invocation.Invocation, java.util.List)
    {
        org.mockito.internal.invocation.MatchersBinder r0;
        org.mockito.invocation.Invocation r1;
        java.util.List r2;
        int i0, i1;
        boolean $z0;
        java.lang.Object[] $r3;
        org.mockito.exceptions.base.MockitoException $r4;

        r0 := @this: org.mockito.internal.invocation.MatchersBinder;

        r1 := @parameter0: org.mockito.invocation.Invocation;

        r2 := @parameter1: java.util.List;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r3 = interfaceinvoke r1.<org.mockito.invocation.Invocation: java.lang.Object[] getArguments()>();

        i1 = lengthof $r3;

        if i1 == i0 goto label1;

        $r4 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException invalidUseOfMatchers(int,java.util.List)>(i1, r2);

        throw $r4;

     label1:
        return;
    }
}
