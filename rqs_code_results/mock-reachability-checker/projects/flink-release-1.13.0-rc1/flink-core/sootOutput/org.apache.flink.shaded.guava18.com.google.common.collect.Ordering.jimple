public abstract class org.apache.flink.shaded.guava18.com.google.common.collect.Ordering extends java.lang.Object implements java.util.Comparator
{
    static final int LEFT_IS_GREATER;
    static final int RIGHT_IS_GREATER;

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Ordering natural()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.NaturalOrdering $r0;

        $r0 = <org.apache.flink.shaded.guava18.com.google.common.collect.NaturalOrdering: org.apache.flink.shaded.guava18.com.google.common.collect.NaturalOrdering INSTANCE>;

        return $r0;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Ordering 'from'(java.util.Comparator)
    {
        java.util.Comparator r0;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering $r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ComparatorOrdering r2;

        r0 := @parameter0: java.util.Comparator;

        $z0 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        if $z0 == 0 goto label1;

        $r1 = (org.apache.flink.shaded.guava18.com.google.common.collect.Ordering) r0;

        goto label2;

     label1:
        r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.ComparatorOrdering;

        $r1 = r2;

        specialinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.collect.ComparatorOrdering: void <init>(java.util.Comparator)>(r0);

     label2:
        return $r1;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Ordering 'from'(org.apache.flink.shaded.guava18.com.google.common.collect.Ordering)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0, $r2;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = (org.apache.flink.shaded.guava18.com.google.common.collect.Ordering) $r1;

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Ordering explicit(java.util.List)
    {
        java.util.List r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ExplicitOrdering $r1;

        r0 := @parameter0: java.util.List;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.ExplicitOrdering;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ExplicitOrdering: void <init>(java.util.List)>(r0);

        return $r1;
    }

    public static transient org.apache.flink.shaded.guava18.com.google.common.collect.Ordering explicit(java.lang.Object, java.lang.Object[])
    {
        java.lang.Object r0;
        java.lang.Object[] r1;
        java.util.List $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Lists: java.util.List asList(java.lang.Object,java.lang.Object[])>(r0, r1);

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering explicit(java.util.List)>($r2);

        return $r3;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Ordering allEqual()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.AllEqualOrdering $r0;

        $r0 = <org.apache.flink.shaded.guava18.com.google.common.collect.AllEqualOrdering: org.apache.flink.shaded.guava18.com.google.common.collect.AllEqualOrdering INSTANCE>;

        return $r0;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Ordering usingToString()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.UsingToStringOrdering $r0;

        $r0 = <org.apache.flink.shaded.guava18.com.google.common.collect.UsingToStringOrdering: org.apache.flink.shaded.guava18.com.google.common.collect.UsingToStringOrdering INSTANCE>;

        return $r0;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Ordering arbitrary()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering $r0;

        $r0 = <org.apache.flink.shaded.guava18.com.google.common.collect.Ordering$ArbitraryOrderingHolder: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering ARBITRARY_ORDERING>;

        return $r0;
    }

    protected void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.Ordering reverse()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ReverseOrdering $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.ReverseOrdering;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ReverseOrdering: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.Ordering)>(r0);

        return $r1;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.Ordering nullsFirst()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.NullsFirstOrdering $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.NullsFirstOrdering;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.NullsFirstOrdering: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.Ordering)>(r0);

        return $r1;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.Ordering nullsLast()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.NullsLastOrdering $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.NullsLastOrdering;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.NullsLastOrdering: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.Ordering)>(r0);

        return $r1;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.Ordering onResultOf(org.apache.flink.shaded.guava18.com.google.common.base.Function)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Function r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ByFunctionOrdering $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.Function;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.ByFunctionOrdering;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.ByFunctionOrdering: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Function,org.apache.flink.shaded.guava18.com.google.common.collect.Ordering)>(r1, r0);

        return $r2;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.Ordering onKeys()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0, $r2;
        org.apache.flink.shaded.guava18.com.google.common.base.Function $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Maps: org.apache.flink.shaded.guava18.com.google.common.base.Function keyFunction()>();

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering onResultOf(org.apache.flink.shaded.guava18.com.google.common.base.Function)>($r1);

        return $r2;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.Ordering compound(java.util.Comparator)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.util.Comparator r1, $r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.CompoundOrdering $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.util.Comparator;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.CompoundOrdering;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (java.util.Comparator) $r3;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.CompoundOrdering: void <init>(java.util.Comparator,java.util.Comparator)>(r0, $r4);

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Ordering compound(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.CompoundOrdering $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.CompoundOrdering;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.CompoundOrdering: void <init>(java.lang.Iterable)>(r0);

        return $r1;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.Ordering lexicographical()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.LexicographicalOrdering $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.LexicographicalOrdering;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.LexicographicalOrdering: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.Ordering)>(r0);

        return $r1;
    }

    public abstract int compare(java.lang.Object, java.lang.Object);

    public java.lang.Object min(java.util.Iterator)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2, r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.util.Iterator;

        r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>(r3, $r2);

        goto label1;

     label2:
        return r3;
    }

    public java.lang.Object min(java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Iterable r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object min(java.util.Iterator)>($r2);

        return $r3;
    }

    public java.lang.Object min(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Object r1, r2, $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        if $i0 > 0 goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r3 = r2;

     label2:
        return $r3;
    }

    public transient java.lang.Object min(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Object r1, r2, r3, r6, $r7, r8;
        java.lang.Object[] r4;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object[];

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>(r1, r2);

        r8 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>($r7, r3);

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r6 = r4[i1];

        r8 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>(r8, r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r8;
    }

    public java.lang.Object max(java.util.Iterator)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2, r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.util.Iterator;

        r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>(r3, $r2);

        goto label1;

     label2:
        return r3;
    }

    public java.lang.Object max(java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Iterable r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object max(java.util.Iterator)>($r2);

        return $r3;
    }

    public java.lang.Object max(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Object r1, r2, $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        if $i0 < 0 goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r3 = r2;

     label2:
        return $r3;
    }

    public transient java.lang.Object max(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Object r1, r2, r3, r6, $r7, r8;
        java.lang.Object[] r4;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object[];

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>(r1, r2);

        r8 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>($r7, r3);

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r6 = r4[i1];

        r8 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>(r8, r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r8;
    }

    public java.util.List leastOf(java.lang.Iterable, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Iterable r1;
        int i0, $i1, $i6;
        java.util.Collection r2;
        boolean $z0;
        java.util.Iterator $r3;
        java.util.List $r4, $r6, $r7;
        long $l2, $l3, $l4;
        byte $b5;
        java.lang.Object[] $r5, r8;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Iterable;

        i0 := @parameter1: int;

        $z0 = r1 instanceof java.util.Collection;

        if $z0 == 0 goto label2;

        r2 = (java.util.Collection) r1;

        $i1 = interfaceinvoke r2.<java.util.Collection: int size()>();

        $l4 = (long) $i1;

        $l2 = (long) i0;

        $l3 = 2L * $l2;

        $b5 = $l4 cmp $l3;

        if $b5 > 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray()>();

        r8 = (java.lang.Object[]) $r5;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r8, r0);

        $i6 = lengthof r8;

        if $i6 <= i0 goto label1;

        r8 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ObjectArrays: java.lang.Object[] arraysCopyOf(java.lang.Object[],int)>(r8, i0);

     label1:
        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r8);

        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r6);

        return $r7;

     label2:
        $r3 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.util.List leastOf(java.util.Iterator,int)>($r3, i0);

        return $r4;
    }

    public java.util.List leastOf(java.util.Iterator, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.util.Iterator r1;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17, i18;
        java.lang.Object[] r2, $r5, $r6;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r4;
        boolean $z0, $z1, $z2;
        java.util.List $r7, $r8, $r10, $r11;
        java.lang.Object $r9, r13, r14, r15;
        java.util.ArrayList r12;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>(i0, "k");

        if i0 == 0 goto label01;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label02;

     label01:
        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList of()>();

        return $r4;

     label02:
        if i0 < 1073741823 goto label04;

        r12 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>(r1);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r12, r0);

        $i9 = virtualinvoke r12.<java.util.ArrayList: int size()>();

        if $i9 <= i0 goto label03;

        $i10 = virtualinvoke r12.<java.util.ArrayList: int size()>();

        $r11 = virtualinvoke r12.<java.util.ArrayList: java.util.List subList(int,int)>(i0, $i10);

        interfaceinvoke $r11.<java.util.List: void clear()>();

     label03:
        virtualinvoke r12.<java.util.ArrayList: void trimToSize()>();

        $r10 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r12);

        return $r10;

     label04:
        i11 = i0 * 2;

        $r5 = newarray (java.lang.Object)[i11];

        r2 = (java.lang.Object[]) $r5;

        r13 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2[0] = r13;

        i12 = 1;

     label05:
        if i12 >= i0 goto label06;

        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        r14 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $i8 = i12;

        i12 = i12 + 1;

        r2[$i8] = r14;

        r13 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>(r13, r14);

        goto label05;

     label06:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        r15 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $i3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>(r15, r13);

        if $i3 < 0 goto label07;

        goto label06;

     label07:
        $i4 = i12;

        i12 = i12 + 1;

        r2[$i4] = r15;

        if i12 != i11 goto label13;

        i13 = 0;

        i14 = i11 - 1;

        i15 = 0;

     label08:
        if i13 >= i14 goto label11;

        $i5 = i13 + i14;

        $i6 = $i5 + 1;

        i16 = $i6 >>> 1;

        i1 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: int partition(java.lang.Object[],int,int,int)>(r2, i13, i14, i16);

        if i1 <= i0 goto label09;

        i14 = i1 - 1;

        goto label10;

     label09:
        if i1 >= i0 goto label11;

        $i7 = i13 + 1;

        i13 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i7);

        i15 = i1;

     label10:
        goto label08;

     label11:
        i12 = i0;

        r13 = r2[i15];

        i17 = i15 + 1;

     label12:
        if i17 >= i0 goto label13;

        $r9 = r2[i17];

        r13 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>(r13, $r9);

        i17 = i17 + 1;

        goto label12;

     label13:
        goto label06;

     label14:
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>(r2, 0, i12, r0);

        i18 = staticinvoke <java.lang.Math: int min(int,int)>(i12, i0);

        $r6 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ObjectArrays: java.lang.Object[] arraysCopyOf(java.lang.Object[],int)>(r2, i18);

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        return $r8;
    }

    private int partition(java.lang.Object[], int, int, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Object[] r1;
        int i0, i1, i2, $i3, i4, i5;
        java.lang.Object r2, $r3, $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 = r1[i2];

        $r3 = r1[i1];

        r1[i2] = $r3;

        r1[i1] = r2;

        i4 = i0;

        i5 = i0;

     label1:
        if i5 >= i1 goto label3;

        $r4 = r1[i5];

        $i3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r4, r2);

        if $i3 >= 0 goto label2;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ObjectArrays: void swap(java.lang.Object[],int,int)>(r1, i4, i5);

        i4 = i4 + 1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ObjectArrays: void swap(java.lang.Object[],int,int)>(r1, i1, i4);

        return i4;
    }

    public java.util.List greatestOf(java.lang.Iterable, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0, $r2;
        java.lang.Iterable r1;
        int i0;
        java.util.List $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Iterable;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering reverse()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.util.List leastOf(java.lang.Iterable,int)>(r1, i0);

        return $r3;
    }

    public java.util.List greatestOf(java.util.Iterator, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0, $r2;
        java.util.Iterator r1;
        int i0;
        java.util.List $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering reverse()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: java.util.List leastOf(java.util.Iterator,int)>(r1, i0);

        return $r3;
    }

    public java.util.List sortedCopy(java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Iterable r1;
        java.lang.Object[] r2, $r3;
        java.util.List $r4;
        java.util.ArrayList $r5;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Iterable;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterables: java.lang.Object[] toArray(java.lang.Iterable)>(r1);

        r2 = (java.lang.Object[]) $r3;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r2, r0);

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Iterable r1;
        java.lang.Object[] r2, $r5;
        int i0, i1;
        java.lang.Object r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Iterable;

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterables: java.lang.Object[] toArray(java.lang.Iterable)>(r1);

        r2 = (java.lang.Object[]) $r5;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r2[i1];

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r2, r0);

        $r6 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[])>(r2);

        return $r6;
    }

    public boolean isOrdered(java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Iterable r1;
        java.util.Iterator r2;
        java.lang.Object r3, r4;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Iterable;

        r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>(r4, r3);

        if $i0 <= 0 goto label2;

        return 0;

     label2:
        r4 = r3;

        goto label1;

     label3:
        return 1;
    }

    public boolean isStrictlyOrdered(java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.lang.Iterable r1;
        java.util.Iterator r2;
        java.lang.Object r3, r4;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.lang.Iterable;

        r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>(r4, r3);

        if $i0 < 0 goto label2;

        return 0;

     label2:
        r4 = r3;

        goto label1;

     label3:
        return 1;
    }

    public int binarySearch(java.util.List, java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering r0;
        java.util.List r1;
        java.lang.Object r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>(r1, r2, r0);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: int RIGHT_IS_GREATER> = -1;

        <org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: int LEFT_IS_GREATER> = 1;

        return;
    }
}
