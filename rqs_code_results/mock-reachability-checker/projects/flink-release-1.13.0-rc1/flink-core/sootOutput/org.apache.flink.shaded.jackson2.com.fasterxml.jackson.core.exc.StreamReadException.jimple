public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
{
    static final long serialVersionUID;
    protected transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _processor;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload _requestPayload;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation getCurrentLocation()>();

     label2:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation)>(r2, $r5);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _processor> = r1;

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, java.lang.String, java.lang.Throwable)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        java.lang.String r2;
        java.lang.Throwable r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        if r1 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation getCurrentLocation()>();

     label2:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(r2, $r6, r3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _processor> = r1;

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(r2, r3, null);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _processor> = r1;

        return;
    }

    protected void <init>(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation r2;
        java.lang.Throwable r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        r3 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>(r1);

        if r3 == null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: java.lang.Throwable initCause(java.lang.Throwable)>(r3);

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation _location> = r2;

        return;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException withParser(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException withRequestPayload(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser getProcessor()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _processor>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload getRequestPayload()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload _requestPayload>;

        return $r1;
    }

    public java.lang.String getRequestPayloadAsString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload _requestPayload>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload _requestPayload>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: java.lang.String toString()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.lang.String getMessage()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload $r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4, $r7;
        java.lang.String $r6, r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException;

        r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>();

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload _requestPayload>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nRequest payload : ");

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload _requestPayload>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r8;
    }

    public volatile java.lang.Object getProcessor()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser getProcessor()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.exc.StreamReadException: long serialVersionUID> = 1L;

        return;
    }
}
