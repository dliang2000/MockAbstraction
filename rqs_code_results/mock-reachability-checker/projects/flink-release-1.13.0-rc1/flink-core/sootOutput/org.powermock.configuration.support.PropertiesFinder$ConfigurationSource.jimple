class org.powermock.configuration.support.PropertiesFinder$ConfigurationSource extends java.lang.Object
{
    private final java.lang.String location;
    private final java.io.InputStream inputStream;

    void <init>(java.lang.String, java.io.InputStream)
    {
        org.powermock.configuration.support.PropertiesFinder$ConfigurationSource r0;
        java.lang.String r1;
        java.io.InputStream r2;

        r0 := @this: org.powermock.configuration.support.PropertiesFinder$ConfigurationSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: java.lang.String location> = r1;

        r0.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: java.io.InputStream inputStream> = r2;

        return;
    }

    java.io.InputStream inputStream()
    {
        org.powermock.configuration.support.PropertiesFinder$ConfigurationSource r0;
        java.io.InputStream $r1;

        r0 := @this: org.powermock.configuration.support.PropertiesFinder$ConfigurationSource;

        $r1 = r0.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: java.io.InputStream inputStream>;

        return $r1;
    }

    java.lang.String getLocation()
    {
        org.powermock.configuration.support.PropertiesFinder$ConfigurationSource r0;
        java.lang.String $r1;

        r0 := @this: org.powermock.configuration.support.PropertiesFinder$ConfigurationSource;

        $r1 = r0.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: java.lang.String location>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.powermock.configuration.support.PropertiesFinder$ConfigurationSource r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: org.powermock.configuration.support.PropertiesFinder$ConfigurationSource;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConfigurationSource{location=\'");

        $r3 = r0.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: java.lang.String location>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public boolean equals(java.lang.Object)
    {
        org.powermock.configuration.support.PropertiesFinder$ConfigurationSource r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: org.powermock.configuration.support.PropertiesFinder$ConfigurationSource;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (org.powermock.configuration.support.PropertiesFinder$ConfigurationSource) r1;

        $r5 = virtualinvoke r0.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: java.lang.String getLocation()>();

        if $r5 == null goto label4;

        $r7 = virtualinvoke r0.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: java.lang.String getLocation()>();

        $r8 = virtualinvoke r2.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: java.lang.String getLocation()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        goto label6;

     label4:
        $r6 = virtualinvoke r2.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: java.lang.String getLocation()>();

        if $r6 != null goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    public int hashCode()
    {
        org.powermock.configuration.support.PropertiesFinder$ConfigurationSource r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.powermock.configuration.support.PropertiesFinder$ConfigurationSource;

        $r1 = virtualinvoke r0.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: java.lang.String getLocation()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: java.lang.String getLocation()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }
}
