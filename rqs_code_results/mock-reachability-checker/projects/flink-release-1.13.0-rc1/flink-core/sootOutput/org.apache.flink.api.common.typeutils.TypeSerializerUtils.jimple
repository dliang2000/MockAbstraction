public final class org.apache.flink.api.common.typeutils.TypeSerializerUtils extends java.lang.Object
{

    public static transient org.apache.flink.api.common.typeutils.TypeSerializerSnapshot[] snapshotBackwardsCompatible(org.apache.flink.api.common.typeutils.TypeSerializer[])
    {
        org.apache.flink.api.common.typeutils.TypeSerializer[] r0;
        java.util.stream.Stream $r1, $r3;
        java.util.function.Function $r2;
        java.util.function.IntFunction $r4;
        java.lang.Object[] $r5;
        org.apache.flink.api.common.typeutils.TypeSerializerSnapshot[] $r6;

        r0 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializer[];

        $r1 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.flink.api.common.typeutils.TypeSerializerUtils$snapshotBackwardsCompatible__444: java.util.function.Function bootstrap$()>();

        $r3 = interfaceinvoke $r1.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r2);

        $r4 = staticinvoke <org.apache.flink.api.common.typeutils.TypeSerializerUtils$lambda_snapshotBackwardsCompatible_0__445: java.util.function.IntFunction bootstrap$()>();

        $r5 = interfaceinvoke $r3.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>($r4);

        $r6 = (org.apache.flink.api.common.typeutils.TypeSerializerSnapshot[]) $r5;

        return $r6;
    }

    public static org.apache.flink.api.common.typeutils.TypeSerializerSnapshot snapshotBackwardsCompatible(org.apache.flink.api.common.typeutils.TypeSerializer)
    {
        org.apache.flink.api.common.typeutils.TypeSerializer r0;
        org.apache.flink.api.common.typeutils.TypeSerializerSnapshot $r1, $r2;

        r0 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializer;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.TypeSerializer: org.apache.flink.api.common.typeutils.TypeSerializerSnapshot snapshotConfiguration()>();

        $r2 = staticinvoke <org.apache.flink.api.common.typeutils.TypeSerializerUtils: org.apache.flink.api.common.typeutils.TypeSerializerSnapshot configureForBackwardsCompatibility(org.apache.flink.api.common.typeutils.TypeSerializerSnapshot,org.apache.flink.api.common.typeutils.TypeSerializer)>($r1, r0);

        return $r2;
    }

    private static org.apache.flink.api.common.typeutils.TypeSerializerSnapshot configureForBackwardsCompatibility(org.apache.flink.api.common.typeutils.TypeSerializerSnapshot, org.apache.flink.api.common.typeutils.TypeSerializer)
    {
        org.apache.flink.api.common.typeutils.TypeSerializerSnapshot r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r1;
        boolean $z0;
        org.apache.flink.api.common.typeutils.TypeSerializerConfigSnapshot $r4;

        r0 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializerSnapshot;

        r1 := @parameter1: org.apache.flink.api.common.typeutils.TypeSerializer;

        $z0 = r0 instanceof org.apache.flink.api.common.typeutils.TypeSerializerConfigSnapshot;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.flink.api.common.typeutils.TypeSerializerConfigSnapshot) r0;

        virtualinvoke $r4.<org.apache.flink.api.common.typeutils.TypeSerializerConfigSnapshot: void setPriorSerializer(org.apache.flink.api.common.typeutils.TypeSerializer)>(r1);

     label1:
        return r0;
    }

    private void <init>()
    {
        org.apache.flink.api.common.typeutils.TypeSerializerUtils r0;

        r0 := @this: org.apache.flink.api.common.typeutils.TypeSerializerUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.flink.api.common.typeutils.TypeSerializerSnapshot[] lambda$snapshotBackwardsCompatible$0(int)
    {
        int i0;
        org.apache.flink.api.common.typeutils.TypeSerializerSnapshot[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (org.apache.flink.api.common.typeutils.TypeSerializerSnapshot)[i0];

        return $r0;
    }
}
