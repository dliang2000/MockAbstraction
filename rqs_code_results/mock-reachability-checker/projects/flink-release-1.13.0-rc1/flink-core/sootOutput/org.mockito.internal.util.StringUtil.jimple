public class org.mockito.internal.util.StringUtil extends java.lang.Object
{
    private static final java.util.regex.Pattern CAPS;

    private void <init>()
    {
        org.mockito.internal.util.StringUtil r0;

        r0 := @this: org.mockito.internal.util.StringUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String removeFirstLine(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>(".*?\n", "");

        return $r1;
    }

    public static transient java.lang.String join(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.util.List $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.mockito.internal.util.StringUtil: java.lang.String join(java.lang.String,java.util.Collection)>("\n", $r1);

        return $r2;
    }

    public static java.lang.String join(java.lang.String, java.util.Collection)
    {
        java.lang.String r0, $r2;
        java.util.Collection r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Collection;

        $r2 = staticinvoke <org.mockito.internal.util.StringUtil: java.lang.String join(java.lang.String,java.lang.String,java.util.Collection)>(r0, "", r1);

        return $r2;
    }

    public static java.lang.String join(java.lang.String, java.lang.String, java.util.Collection)
    {
        java.lang.String r0, r1, $r7;
        java.util.Collection r2;
        java.util.Iterator r4;
        java.lang.Object r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r8, $r9;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Collection;

        $z0 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label2;

     label3:
        $i0 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();

        $i1 = $i0 - 1;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, $i1);

        return $r7;
    }

    public static java.lang.String decamelizeMatcher(java.lang.String)
    {
        java.lang.String r0, r1, $r6, $r11;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return "<custom argument matcher>";

     label1:
        r1 = staticinvoke <org.mockito.internal.util.StringUtil: java.lang.String decamelizeClassName(java.lang.String)>(r0);

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static java.lang.String decamelizeClassName(java.lang.String)
    {
        java.lang.String r0, $r5, $r7, $r8, $r10;
        java.util.regex.Matcher r1;
        java.util.regex.Pattern $r3;
        java.lang.StringBuilder $r4;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r3 = <org.mockito.internal.util.StringUtil: java.util.regex.Pattern CAPS>;

        r1 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label1:
        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();

        if $i0 != 0 goto label2;

        $r10 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        goto label1;

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label1;

     label3:
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([A-Z\\d][^A-Z\\d]*)");

        <org.mockito.internal.util.StringUtil: java.util.regex.Pattern CAPS> = $r0;

        return;
    }
}
