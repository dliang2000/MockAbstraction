public class com.github.luben.zstd.ZstdInputStream extends java.io.FilterInputStream
{
    private com.github.luben.zstd.ZstdInputStreamNoFinalizer inner;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdInputStream r0;
        java.io.InputStream r1;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r2;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        $r2 = new com.github.luben.zstd.ZstdInputStreamNoFinalizer;

        specialinvoke $r2.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: void <init>(java.io.InputStream)>(r1);

        r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner> = $r2;

        return;
    }

    public void <init>(java.io.InputStream, com.github.luben.zstd.BufferPool) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdInputStream r0;
        java.io.InputStream r1;
        com.github.luben.zstd.BufferPool r2;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r3;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: com.github.luben.zstd.BufferPool;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        $r3 = new com.github.luben.zstd.ZstdInputStreamNoFinalizer;

        specialinvoke $r3.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: void <init>(java.io.InputStream,com.github.luben.zstd.BufferPool)>(r1, r2);

        r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner> = $r3;

        return;
    }

    public void setFinalize(boolean)
    {
        com.github.luben.zstd.ZstdInputStream r0;
        boolean z0;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        z0 := @parameter0: boolean;

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.github.luben.zstd.ZstdInputStream r0;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        virtualinvoke r0.<com.github.luben.zstd.ZstdInputStream: void close()>();

        return;
    }

    public static long recommendedDInSize()
    {
        long $l0;

        $l0 = staticinvoke <com.github.luben.zstd.ZstdInputStreamNoFinalizer: long recommendedDInSize()>();

        return $l0;
    }

    public static long recommendedDOutSize()
    {
        long $l0;

        $l0 = staticinvoke <com.github.luben.zstd.ZstdInputStreamNoFinalizer: long recommendedDOutSize()>();

        return $l0;
    }

    public com.github.luben.zstd.ZstdInputStream setContinuous(boolean)
    {
        com.github.luben.zstd.ZstdInputStream r0;
        boolean z0;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r1;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner>;

        virtualinvoke $r1.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: com.github.luben.zstd.ZstdInputStreamNoFinalizer setContinuous(boolean)>(z0);

        return r0;
    }

    public boolean getContinuous()
    {
        com.github.luben.zstd.ZstdInputStream r0;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r1;
        boolean $z0;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        $r1 = r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner>;

        $z0 = virtualinvoke $r1.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: boolean getContinuous()>();

        return $z0;
    }

    public com.github.luben.zstd.ZstdInputStream setDict(byte[]) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdInputStream r0;
        byte[] r1;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r2;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner>;

        virtualinvoke $r2.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: com.github.luben.zstd.ZstdInputStreamNoFinalizer setDict(byte[])>(r1);

        return r0;
    }

    public com.github.luben.zstd.ZstdInputStream setDict(com.github.luben.zstd.ZstdDictDecompress) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdInputStream r0;
        com.github.luben.zstd.ZstdDictDecompress r1;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r2;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        r1 := @parameter0: com.github.luben.zstd.ZstdDictDecompress;

        $r2 = r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner>;

        virtualinvoke $r2.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: com.github.luben.zstd.ZstdInputStreamNoFinalizer setDict(com.github.luben.zstd.ZstdDictDecompress)>(r1);

        return r0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdInputStream r0;
        byte[] r1;
        int i0, i1, $i2;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r2;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner>;

        $i2 = virtualinvoke $r2.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public int read() throws java.io.IOException
    {
        com.github.luben.zstd.ZstdInputStream r0;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r1;
        int $i0;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        $r1 = r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner>;

        $i0 = virtualinvoke $r1.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: int read()>();

        return $i0;
    }

    public int available() throws java.io.IOException
    {
        com.github.luben.zstd.ZstdInputStream r0;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r1;
        int $i0;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        $r1 = r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner>;

        $i0 = virtualinvoke $r1.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: int available()>();

        return $i0;
    }

    public long skip(long) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdInputStream r0;
        long l0, $l1;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r1;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        l0 := @parameter0: long;

        $r1 = r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner>;

        $l1 = virtualinvoke $r1.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: long skip(long)>(l0);

        return $l1;
    }

    public boolean markSupported()
    {
        com.github.luben.zstd.ZstdInputStream r0;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r1;
        boolean $z0;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        $r1 = r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner>;

        $z0 = virtualinvoke $r1.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: boolean markSupported()>();

        return $z0;
    }

    public void close() throws java.io.IOException
    {
        com.github.luben.zstd.ZstdInputStream r0;
        com.github.luben.zstd.ZstdInputStreamNoFinalizer $r1;

        r0 := @this: com.github.luben.zstd.ZstdInputStream;

        $r1 = r0.<com.github.luben.zstd.ZstdInputStream: com.github.luben.zstd.ZstdInputStreamNoFinalizer inner>;

        virtualinvoke $r1.<com.github.luben.zstd.ZstdInputStreamNoFinalizer: void close()>();

        return;
    }
}
