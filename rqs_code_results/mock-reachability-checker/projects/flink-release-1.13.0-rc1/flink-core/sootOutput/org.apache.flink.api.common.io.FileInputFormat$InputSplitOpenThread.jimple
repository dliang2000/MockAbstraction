public class org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread extends java.lang.Thread
{
    private final org.apache.flink.core.fs.FileInputSplit split;
    private final long timeout;
    private volatile org.apache.flink.core.fs.FSDataInputStream fdis;
    private volatile java.lang.Throwable error;
    private volatile boolean aborted;

    public void <init>(org.apache.flink.core.fs.FileInputSplit, long)
    {
        org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread r0;
        org.apache.flink.core.fs.FileInputSplit r1;
        long l0;

        r0 := @this: org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread;

        r1 := @parameter0: org.apache.flink.core.fs.FileInputSplit;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("Transient InputSplit Opener");

        virtualinvoke r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: void setDaemon(boolean)>(1);

        r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: org.apache.flink.core.fs.FileInputSplit split> = r1;

        r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: long timeout> = l0;

        return;
    }

    public void run()
    {
        org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread r0;
        org.apache.flink.core.fs.FSDataInputStream r1, $r7;
        org.apache.flink.core.fs.FileInputSplit $r2, $r5;
        org.apache.flink.core.fs.Path $r3, $r6;
        java.net.URI $r4;
        boolean $z0;
        java.lang.Throwable $r8;
        org.apache.flink.core.fs.FileSystem r9;

        r0 := @this: org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread;

     label1:
        $r2 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: org.apache.flink.core.fs.FileInputSplit split>;

        $r3 = virtualinvoke $r2.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path getPath()>();

        $r4 = virtualinvoke $r3.<org.apache.flink.core.fs.Path: java.net.URI toUri()>();

        r9 = staticinvoke <org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.FileSystem get(java.net.URI)>($r4);

        $r5 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: org.apache.flink.core.fs.FileInputSplit split>;

        $r6 = virtualinvoke $r5.<org.apache.flink.core.fs.FileInputSplit: org.apache.flink.core.fs.Path getPath()>();

        $r7 = virtualinvoke r9.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.FSDataInputStream open(org.apache.flink.core.fs.Path)>($r6);

        r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: org.apache.flink.core.fs.FSDataInputStream fdis> = $r7;

        $z0 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: boolean aborted>;

        if $z0 == 0 goto label2;

        r1 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: org.apache.flink.core.fs.FSDataInputStream fdis>;

        r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: org.apache.flink.core.fs.FSDataInputStream fdis> = null;

        virtualinvoke r1.<org.apache.flink.core.fs.FSDataInputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: java.lang.Throwable error> = $r8;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public org.apache.flink.core.fs.FSDataInputStream waitForCompletion() throws java.lang.Throwable
    {
        org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread r0;
        long l0, $l2, $l3, $l4, $l5, l7;
        java.lang.StackTraceElement[] r2;
        int i1, i8;
        java.lang.StackTraceElement r3;
        java.lang.Throwable $r4, $r20, $r24;
        org.apache.flink.core.fs.FSDataInputStream $r5, $r19, $r21;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11, $r13, $r15, $r17;
        java.io.IOException $r7;
        java.lang.String $r12, $r14, $r16, $r25;
        byte $b6;
        java.lang.InterruptedException $r22;
        boolean z0;

        r0 := @this: org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l7 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: long timeout>;

     label01:
        virtualinvoke r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: void join(long)>(l7);

     label02:
        goto label04;

     label03:
        $r22 := @caughtexception;

        specialinvoke r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: void abortWait()>();

        throw $r22;

     label04:
        $r4 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: java.lang.Throwable error>;

        if $r4 != null goto label05;

        $r21 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: org.apache.flink.core.fs.FSDataInputStream fdis>;

        if $r21 != null goto label05;

        $l2 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: long timeout>;

        $l3 = $l2 + l0;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = $l3 - $l4;

        l7 = $l5;

        $b6 = $l5 cmp 0L;

        if $b6 > 0 goto label01;

     label05:
        $r24 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: java.lang.Throwable error>;

        if $r24 == null goto label06;

        $r20 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: java.lang.Throwable error>;

        throw $r20;

     label06:
        $r5 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: org.apache.flink.core.fs.FSDataInputStream fdis>;

        if $r5 == null goto label07;

        $r19 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: org.apache.flink.core.fs.FSDataInputStream fdis>;

        return $r19;

     label07:
        specialinvoke r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: void abortWait()>();

        z0 = virtualinvoke r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: boolean isAlive()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>(256);

        r2 = virtualinvoke r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: java.lang.StackTraceElement[] getStackTrace()>();

        i1 = lengthof r2;

        i8 = 0;

     label08:
        if i8 >= i1 goto label09;

        r3 = r2[i8];

        $r15 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tat ");

        $r16 = virtualinvoke r3.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i8 = i8 + 1;

        goto label08;

     label09:
        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input opening request timed out. Opener was ");

        if z0 == 0 goto label10;

        $r25 = "";

        goto label11;

     label10:
        $r25 = "NOT ";

     label11:
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" alive. Stack of split open thread:\n");

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r7;

        catch java.lang.InterruptedException from label01 to label02 with label03;
    }

    private void abortWait()
    {
        org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread r0;
        org.apache.flink.core.fs.FSDataInputStream r1;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread;

        r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: boolean aborted> = 1;

        r1 = r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: org.apache.flink.core.fs.FSDataInputStream fdis>;

        r0.<org.apache.flink.api.common.io.FileInputFormat$InputSplitOpenThread: org.apache.flink.core.fs.FSDataInputStream fdis> = null;

        if r1 == null goto label4;

     label1:
        virtualinvoke r1.<org.apache.flink.core.fs.FSDataInputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
