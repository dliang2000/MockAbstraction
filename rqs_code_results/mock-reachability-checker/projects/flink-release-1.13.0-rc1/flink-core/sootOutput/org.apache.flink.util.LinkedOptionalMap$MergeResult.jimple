public final class org.apache.flink.util.LinkedOptionalMap$MergeResult extends java.lang.Object
{
    private final org.apache.flink.util.LinkedOptionalMap merged;
    private final java.util.Set missingKeys;
    private final boolean isOrderedSubset;

    void <init>(org.apache.flink.util.LinkedOptionalMap, boolean)
    {
        org.apache.flink.util.LinkedOptionalMap$MergeResult r0;
        org.apache.flink.util.LinkedOptionalMap r1;
        boolean z0;
        java.util.Set $r2;

        r0 := @this: org.apache.flink.util.LinkedOptionalMap$MergeResult;

        r1 := @parameter0: org.apache.flink.util.LinkedOptionalMap;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.util.LinkedOptionalMap$MergeResult: org.apache.flink.util.LinkedOptionalMap merged> = r1;

        $r2 = virtualinvoke r1.<org.apache.flink.util.LinkedOptionalMap: java.util.Set absentKeysOrValues()>();

        r0.<org.apache.flink.util.LinkedOptionalMap$MergeResult: java.util.Set missingKeys> = $r2;

        r0.<org.apache.flink.util.LinkedOptionalMap$MergeResult: boolean isOrderedSubset> = z0;

        return;
    }

    public boolean hasMissingKeys()
    {
        org.apache.flink.util.LinkedOptionalMap$MergeResult r0;
        java.util.Set $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.util.LinkedOptionalMap$MergeResult;

        $r1 = r0.<org.apache.flink.util.LinkedOptionalMap$MergeResult: java.util.Set missingKeys>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.util.Set missingKeys()
    {
        org.apache.flink.util.LinkedOptionalMap$MergeResult r0;
        java.util.Set $r1;

        r0 := @this: org.apache.flink.util.LinkedOptionalMap$MergeResult;

        $r1 = r0.<org.apache.flink.util.LinkedOptionalMap$MergeResult: java.util.Set missingKeys>;

        return $r1;
    }

    public java.util.LinkedHashMap getMerged()
    {
        org.apache.flink.util.LinkedOptionalMap$MergeResult r0;
        org.apache.flink.util.LinkedOptionalMap $r1;
        java.util.LinkedHashMap $r2;

        r0 := @this: org.apache.flink.util.LinkedOptionalMap$MergeResult;

        $r1 = r0.<org.apache.flink.util.LinkedOptionalMap$MergeResult: org.apache.flink.util.LinkedOptionalMap merged>;

        $r2 = virtualinvoke $r1.<org.apache.flink.util.LinkedOptionalMap: java.util.LinkedHashMap unwrapOptionals()>();

        return $r2;
    }

    public boolean isOrderedSubset()
    {
        org.apache.flink.util.LinkedOptionalMap$MergeResult r0;
        boolean $z0;

        r0 := @this: org.apache.flink.util.LinkedOptionalMap$MergeResult;

        $z0 = r0.<org.apache.flink.util.LinkedOptionalMap$MergeResult: boolean isOrderedSubset>;

        return $z0;
    }
}
