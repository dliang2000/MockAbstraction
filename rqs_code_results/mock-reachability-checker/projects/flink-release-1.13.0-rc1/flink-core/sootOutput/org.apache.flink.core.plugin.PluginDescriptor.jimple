public class org.apache.flink.core.plugin.PluginDescriptor extends java.lang.Object
{
    private final java.lang.String pluginId;
    private final java.net.URL[] pluginResourceURLs;
    private final java.lang.String[] loaderExcludePatterns;

    public void <init>(java.lang.String, java.net.URL[], java.lang.String[])
    {
        org.apache.flink.core.plugin.PluginDescriptor r0;
        java.lang.String r1;
        java.net.URL[] r2;
        java.lang.String[] r3;

        r0 := @this: org.apache.flink.core.plugin.PluginDescriptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.net.URL[];

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.core.plugin.PluginDescriptor: java.lang.String pluginId> = r1;

        r0.<org.apache.flink.core.plugin.PluginDescriptor: java.net.URL[] pluginResourceURLs> = r2;

        r0.<org.apache.flink.core.plugin.PluginDescriptor: java.lang.String[] loaderExcludePatterns> = r3;

        return;
    }

    public java.lang.String getPluginId()
    {
        org.apache.flink.core.plugin.PluginDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.core.plugin.PluginDescriptor;

        $r1 = r0.<org.apache.flink.core.plugin.PluginDescriptor: java.lang.String pluginId>;

        return $r1;
    }

    public java.net.URL[] getPluginResourceURLs()
    {
        org.apache.flink.core.plugin.PluginDescriptor r0;
        java.net.URL[] $r1;

        r0 := @this: org.apache.flink.core.plugin.PluginDescriptor;

        $r1 = r0.<org.apache.flink.core.plugin.PluginDescriptor: java.net.URL[] pluginResourceURLs>;

        return $r1;
    }

    public java.lang.String[] getLoaderExcludePatterns()
    {
        org.apache.flink.core.plugin.PluginDescriptor r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.core.plugin.PluginDescriptor;

        $r1 = r0.<org.apache.flink.core.plugin.PluginDescriptor: java.lang.String[] loaderExcludePatterns>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.flink.core.plugin.PluginDescriptor r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r9, $r10, $r13, $r14;
        java.lang.String $r3, $r8, $r12, $r15;
        java.net.URL[] $r7;
        java.lang.String[] $r11;

        r0 := @this: org.apache.flink.core.plugin.PluginDescriptor;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PluginDescriptor{pluginId=\'");

        $r3 = r0.<org.apache.flink.core.plugin.PluginDescriptor: java.lang.String pluginId>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pluginResourceURLs=");

        $r7 = r0.<org.apache.flink.core.plugin.PluginDescriptor: java.net.URL[] pluginResourceURLs>;

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", loaderExcludePatterns=");

        $r11 = r0.<org.apache.flink.core.plugin.PluginDescriptor: java.lang.String[] loaderExcludePatterns>;

        $r12 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }
}
