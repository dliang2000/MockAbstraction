public class org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs extends java.lang.Object implements org.mockito.stubbing.Answer, java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs r0;

        r0 := @this: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable
    {
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs r0;
        org.mockito.invocation.InvocationOnMock r1;
        org.mockito.internal.util.reflection.GenericMetadataSupport r2, $r5;
        java.lang.Class r3;
        java.lang.Object $r4, $r8, $r10;
        java.lang.reflect.Method $r6;
        org.mockito.internal.MockitoCore $r7;
        boolean $z0;
        org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues $r9;

        r0 := @this: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs;

        r1 := @parameter0: org.mockito.invocation.InvocationOnMock;

        $r4 = interfaceinvoke r1.<org.mockito.invocation.InvocationOnMock: java.lang.Object getMock()>();

        $r5 = virtualinvoke r0.<org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: org.mockito.internal.util.reflection.GenericMetadataSupport actualParameterizedType(java.lang.Object)>($r4);

        $r6 = interfaceinvoke r1.<org.mockito.invocation.InvocationOnMock: java.lang.reflect.Method getMethod()>();

        r2 = virtualinvoke $r5.<org.mockito.internal.util.reflection.GenericMetadataSupport: org.mockito.internal.util.reflection.GenericMetadataSupport resolveGenericReturnType(java.lang.reflect.Method)>($r6);

        r3 = virtualinvoke r2.<org.mockito.internal.util.reflection.GenericMetadataSupport: java.lang.Class rawType()>();

        $r7 = staticinvoke <org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: org.mockito.internal.MockitoCore mockitoCore()>();

        $z0 = virtualinvoke $r7.<org.mockito.internal.MockitoCore: boolean isTypeMockable(java.lang.Class)>(r3);

        if $z0 != 0 goto label1;

        $r9 = staticinvoke <org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues delegate()>();

        $r10 = virtualinvoke $r9.<org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues: java.lang.Object returnValueFor(java.lang.Class)>(r3);

        return $r10;

     label1:
        $r8 = specialinvoke r0.<org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: java.lang.Object deepStub(org.mockito.invocation.InvocationOnMock,org.mockito.internal.util.reflection.GenericMetadataSupport)>(r1, r2);

        return $r8;
    }

    private java.lang.Object deepStub(org.mockito.invocation.InvocationOnMock, org.mockito.internal.util.reflection.GenericMetadataSupport) throws java.lang.Throwable
    {
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs r0;
        org.mockito.invocation.InvocationOnMock r1;
        org.mockito.internal.util.reflection.GenericMetadataSupport r2;
        org.mockito.internal.stubbing.InvocationContainerImpl r3;
        org.mockito.stubbing.Stubbing r4;
        java.lang.Object $r5, $r7, $r8, $r10, $r11, $r14;
        java.util.List $r6;
        boolean $z0, $z1;
        org.mockito.invocation.Invocation $r9, $r13;
        org.mockito.invocation.MatchableInvocation $r12;
        java.util.Iterator r15;
        org.mockito.internal.stubbing.StubbedInvocationMatcher r16;

        r0 := @this: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs;

        r1 := @parameter0: org.mockito.invocation.InvocationOnMock;

        r2 := @parameter1: org.mockito.internal.util.reflection.GenericMetadataSupport;

        $r5 = interfaceinvoke r1.<org.mockito.invocation.InvocationOnMock: java.lang.Object getMock()>();

        r3 = staticinvoke <org.mockito.internal.util.MockUtil: org.mockito.internal.stubbing.InvocationContainerImpl getInvocationContainer(java.lang.Object)>($r5);

        $r6 = virtualinvoke r3.<org.mockito.internal.stubbing.InvocationContainerImpl: java.util.List getStubbingsDescending()>();

        r15 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.mockito.stubbing.Stubbing) $r11;

        $r12 = virtualinvoke r3.<org.mockito.internal.stubbing.InvocationContainerImpl: org.mockito.invocation.MatchableInvocation getInvocationForStubbing()>();

        $r13 = interfaceinvoke r4.<org.mockito.stubbing.Stubbing: org.mockito.invocation.Invocation getInvocation()>();

        $z1 = interfaceinvoke $r12.<org.mockito.invocation.MatchableInvocation: boolean matches(org.mockito.invocation.Invocation)>($r13);

        if $z1 == 0 goto label2;

        $r14 = interfaceinvoke r4.<org.mockito.stubbing.Stubbing: java.lang.Object answer(org.mockito.invocation.InvocationOnMock)>(r1);

        return $r14;

     label2:
        goto label1;

     label3:
        $r7 = interfaceinvoke r1.<org.mockito.invocation.InvocationOnMock: java.lang.Object getMock()>();

        $r8 = specialinvoke r0.<org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: java.lang.Object newDeepStubMock(org.mockito.internal.util.reflection.GenericMetadataSupport,java.lang.Object)>(r2, $r7);

        r16 = specialinvoke r0.<org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: org.mockito.internal.stubbing.StubbedInvocationMatcher recordDeepStubAnswer(java.lang.Object,org.mockito.internal.stubbing.InvocationContainerImpl)>($r8, r3);

        $r9 = virtualinvoke r16.<org.mockito.internal.stubbing.StubbedInvocationMatcher: org.mockito.invocation.Invocation getInvocation()>();

        virtualinvoke r16.<org.mockito.internal.stubbing.StubbedInvocationMatcher: void markStubUsed(org.mockito.invocation.DescribedInvocation)>($r9);

        $r10 = virtualinvoke r16.<org.mockito.internal.stubbing.StubbedInvocationMatcher: java.lang.Object answer(org.mockito.invocation.InvocationOnMock)>(r1);

        return $r10;
    }

    private java.lang.Object newDeepStubMock(org.mockito.internal.util.reflection.GenericMetadataSupport, java.lang.Object)
    {
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs r0;
        org.mockito.internal.util.reflection.GenericMetadataSupport r1;
        java.lang.Object r2, $r7;
        org.mockito.mock.MockCreationSettings r3;
        org.mockito.internal.MockitoCore $r4;
        java.lang.Class $r5;
        org.mockito.MockSettings $r6;

        r0 := @this: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs;

        r1 := @parameter0: org.mockito.internal.util.reflection.GenericMetadataSupport;

        r2 := @parameter1: java.lang.Object;

        r3 = staticinvoke <org.mockito.internal.util.MockUtil: org.mockito.mock.MockCreationSettings getMockSettings(java.lang.Object)>(r2);

        $r4 = staticinvoke <org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: org.mockito.internal.MockitoCore mockitoCore()>();

        $r5 = virtualinvoke r1.<org.mockito.internal.util.reflection.GenericMetadataSupport: java.lang.Class rawType()>();

        $r6 = specialinvoke r0.<org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: org.mockito.MockSettings withSettingsUsing(org.mockito.internal.util.reflection.GenericMetadataSupport,org.mockito.mock.MockCreationSettings)>(r1, r3);

        $r7 = virtualinvoke $r4.<org.mockito.internal.MockitoCore: java.lang.Object mock(java.lang.Class,org.mockito.MockSettings)>($r5, $r6);

        return $r7;
    }

    private org.mockito.MockSettings withSettingsUsing(org.mockito.internal.util.reflection.GenericMetadataSupport, org.mockito.mock.MockCreationSettings)
    {
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs r0, $r5;
        org.mockito.internal.util.reflection.GenericMetadataSupport r1;
        org.mockito.mock.MockCreationSettings r2;
        boolean $z0;
        org.mockito.MockSettings $r4, $r6, $r7, $r9;
        java.lang.Class[] $r8;

        r0 := @this: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs;

        r1 := @parameter0: org.mockito.internal.util.reflection.GenericMetadataSupport;

        r2 := @parameter1: org.mockito.mock.MockCreationSettings;

        $z0 = virtualinvoke r1.<org.mockito.internal.util.reflection.GenericMetadataSupport: boolean hasRawExtraInterfaces()>();

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <org.mockito.Mockito: org.mockito.MockSettings withSettings()>();

        $r8 = virtualinvoke r1.<org.mockito.internal.util.reflection.GenericMetadataSupport: java.lang.Class[] rawExtraInterfaces()>();

        $r9 = interfaceinvoke $r7.<org.mockito.MockSettings: org.mockito.MockSettings extraInterfaces(java.lang.Class[])>($r8);

        goto label2;

     label1:
        $r9 = staticinvoke <org.mockito.Mockito: org.mockito.MockSettings withSettings()>();

     label2:
        $r4 = specialinvoke r0.<org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: org.mockito.MockSettings propagateSerializationSettings(org.mockito.MockSettings,org.mockito.mock.MockCreationSettings)>($r9, r2);

        $r5 = specialinvoke r0.<org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs returnsDeepStubsAnswerUsing(org.mockito.internal.util.reflection.GenericMetadataSupport)>(r1);

        $r6 = interfaceinvoke $r4.<org.mockito.MockSettings: org.mockito.MockSettings defaultAnswer(org.mockito.stubbing.Answer)>($r5);

        return $r6;
    }

    private org.mockito.MockSettings propagateSerializationSettings(org.mockito.MockSettings, org.mockito.mock.MockCreationSettings)
    {
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs r0;
        org.mockito.MockSettings r1, $r4;
        org.mockito.mock.MockCreationSettings r2;
        org.mockito.mock.SerializableMode $r3;

        r0 := @this: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs;

        r1 := @parameter0: org.mockito.MockSettings;

        r2 := @parameter1: org.mockito.mock.MockCreationSettings;

        $r3 = interfaceinvoke r2.<org.mockito.mock.MockCreationSettings: org.mockito.mock.SerializableMode getSerializableMode()>();

        $r4 = interfaceinvoke r1.<org.mockito.MockSettings: org.mockito.MockSettings serializable(org.mockito.mock.SerializableMode)>($r3);

        return $r4;
    }

    private org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs returnsDeepStubsAnswerUsing(org.mockito.internal.util.reflection.GenericMetadataSupport)
    {
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs r0;
        org.mockito.internal.util.reflection.GenericMetadataSupport r1;
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback $r2;

        r0 := @this: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs;

        r1 := @parameter0: org.mockito.internal.util.reflection.GenericMetadataSupport;

        $r2 = new org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback;

        specialinvoke $r2.<org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$ReturnsDeepStubsSerializationFallback: void <init>(org.mockito.internal.util.reflection.GenericMetadataSupport)>(r1);

        return $r2;
    }

    private org.mockito.internal.stubbing.StubbedInvocationMatcher recordDeepStubAnswer(java.lang.Object, org.mockito.internal.stubbing.InvocationContainerImpl)
    {
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs r0;
        java.lang.Object r1;
        org.mockito.internal.stubbing.InvocationContainerImpl r2;
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$DeeplyStubbedAnswer $r4;
        org.mockito.internal.stubbing.StubbedInvocationMatcher $r5;

        r0 := @this: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.mockito.internal.stubbing.InvocationContainerImpl;

        $r4 = new org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$DeeplyStubbedAnswer;

        specialinvoke $r4.<org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$DeeplyStubbedAnswer: void <init>(java.lang.Object)>(r1);

        $r5 = virtualinvoke r2.<org.mockito.internal.stubbing.InvocationContainerImpl: org.mockito.internal.stubbing.StubbedInvocationMatcher addAnswer(org.mockito.stubbing.Answer,boolean,org.mockito.quality.Strictness)>($r4, 0, null);

        return $r5;
    }

    protected org.mockito.internal.util.reflection.GenericMetadataSupport actualParameterizedType(java.lang.Object)
    {
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs r0;
        java.lang.Object r1;
        org.mockito.internal.creation.settings.CreationSettings r2;
        org.mockito.invocation.MockHandler $r3;
        org.mockito.mock.MockCreationSettings $r4;
        java.lang.Class $r5;
        org.mockito.internal.util.reflection.GenericMetadataSupport $r6;

        r0 := @this: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs;

        r1 := @parameter0: java.lang.Object;

        $r3 = staticinvoke <org.mockito.internal.util.MockUtil: org.mockito.invocation.MockHandler getMockHandler(java.lang.Object)>(r1);

        $r4 = interfaceinvoke $r3.<org.mockito.invocation.MockHandler: org.mockito.mock.MockCreationSettings getMockSettings()>();

        r2 = (org.mockito.internal.creation.settings.CreationSettings) $r4;

        $r5 = virtualinvoke r2.<org.mockito.internal.creation.settings.CreationSettings: java.lang.Class getTypeToMock()>();

        $r6 = staticinvoke <org.mockito.internal.util.reflection.GenericMetadataSupport: org.mockito.internal.util.reflection.GenericMetadataSupport inferFrom(java.lang.reflect.Type)>($r5);

        return $r6;
    }

    private static org.mockito.internal.MockitoCore mockitoCore()
    {
        org.mockito.internal.MockitoCore $r0;

        $r0 = staticinvoke <org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$LazyHolder: org.mockito.internal.MockitoCore access$000()>();

        return $r0;
    }

    private static org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues delegate()
    {
        org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues $r0;

        $r0 = staticinvoke <org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$LazyHolder: org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues access$100()>();

        return $r0;
    }

    public static void <clinit>()
    {
        <org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: long serialVersionUID> = -7105341425736035847L;

        return;
    }
}
