public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdScalarSerializer implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer
{
    protected final boolean _asNumeric;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer r0;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class)>(class "Ljava/net/InetAddress;");

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: boolean _asNumeric> = z0;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer r0, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape r4, $r7;
        java.lang.Class $r5;
        boolean $z0, z1, $z2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: java.lang.Class handledType()>();

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(r1, r2, $r5);

        z1 = 0;

        if r3 == null goto label2;

        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();

        $z0 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: boolean isNumeric()>();

        if $z0 != 0 goto label1;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape ARRAY>;

        if r4 != $r7 goto label2;

     label1:
        z1 = 1;

     label2:
        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: boolean _asNumeric>;

        if z1 == $z2 goto label3;

        $r6 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void <init>(boolean)>(z1);

        return $r6;

     label3:
        return r0;
    }

    public void serialize(java.net.InetAddress, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer r0;
        java.net.InetAddress r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        int i0;
        boolean $z0;
        java.lang.String $r4, r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;

        r1 := @parameter0: java.net.InetAddress;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: boolean _asNumeric>;

        if $z0 == 0 goto label1;

        r5 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        goto label3;

     label1:
        $r4 = virtualinvoke r1.<java.net.InetAddress: java.lang.String toString()>();

        r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(47);

        if i0 < 0 goto label3;

        if i0 != 0 goto label2;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(1);

        goto label3;

     label2:
        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label3:
        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(r5);

        return;
    }

    public void serializeWithType(java.net.InetAddress, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer r0;
        java.net.InetAddress r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId r5, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;

        r1 := @parameter0: java.net.InetAddress;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        $r7 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r1, class "Ljava/net/InetAddress;", $r6);

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, $r7);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void serialize(java.net.InetAddress,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, r5);

        return;
    }

    public volatile void serializeWithType(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        java.net.InetAddress $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r5 = (java.net.InetAddress) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void serializeWithType(java.net.InetAddress,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r5, r2, r3, r4);

        return;
    }

    public volatile void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.net.InetAddress $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.net.InetAddress) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void serialize(java.net.InetAddress,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>($r4, r2, r3);

        return;
    }
}
