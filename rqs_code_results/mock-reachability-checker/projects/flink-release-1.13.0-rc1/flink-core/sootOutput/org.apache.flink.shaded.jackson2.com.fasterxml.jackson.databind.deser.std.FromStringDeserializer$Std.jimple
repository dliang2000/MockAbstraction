public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer
{
    private static final long serialVersionUID;
    public static final int STD_FILE;
    public static final int STD_URL;
    public static final int STD_URI;
    public static final int STD_CLASS;
    public static final int STD_JAVA_TYPE;
    public static final int STD_CURRENCY;
    public static final int STD_PATTERN;
    public static final int STD_LOCALE;
    public static final int STD_CHARSET;
    public static final int STD_TIME_ZONE;
    public static final int STD_INET_ADDRESS;
    public static final int STD_INET_SOCKET_ADDRESS;
    protected final int _kind;

    protected void <init>(java.lang.Class, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std r0;
        java.lang.Class r1;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;

        r1 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: void <init>(java.lang.Class)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int _kind> = i0;

        return;
    }

    protected java.lang.Object _deserialize(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, $i12, i14, i15;
        boolean $z0;
        java.net.InetSocketAddress $r2, $r4, $r6;
        java.lang.String $r3, $r5, $r7, $r8, $r15, r30, r32, r33, r34;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidFormatException $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r10;
        java.net.InetAddress $r11;
        java.util.TimeZone $r12;
        java.nio.charset.Charset $r13;
        java.util.Locale $r14, $r16, $r17;
        java.util.regex.Pattern $r18;
        java.util.Currency $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r21;
        java.lang.Class $r22, $r27;
        java.net.URI $r23;
        java.net.URL $r24;
        java.io.File $r25;
        java.lang.Exception $r26;
        java.lang.Throwable $r28;
        java.lang.Object $r29;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;

        r30 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int _kind>;

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label15;
            case 12: goto label16;
            default: goto label22;
        };

     label01:
        $r25 = new java.io.File;

        specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>(r30);

        return $r25;

     label02:
        $r24 = new java.net.URL;

        specialinvoke $r24.<java.net.URL: void <init>(java.lang.String)>(r30);

        return $r24;

     label03:
        $r23 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r30);

        return $r23;

     label04:
        $r22 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class findClass(java.lang.String)>(r30);

     label05:
        return $r22;

     label06:
        $r26 := @caughtexception;

        $r27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: java.lang.Class _valueClass>;

        $r28 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable getRootCause(java.lang.Throwable)>($r26);

        $r29 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleInstantiationProblem(java.lang.Class,java.lang.Object,java.lang.Throwable)>($r27, r30, $r28);

        return $r29;

     label07:
        $r20 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r21 = virtualinvoke $r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String)>(r30);

        return $r21;

     label08:
        $r19 = staticinvoke <java.util.Currency: java.util.Currency getInstance(java.lang.String)>(r30);

        return $r19;

     label09:
        $r18 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r30);

        return $r18;

     label10:
        i8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int _firstHyphenOrUnderscore(java.lang.String)>(r30);

        if i8 >= 0 goto label11;

        $r17 = new java.util.Locale;

        specialinvoke $r17.<java.util.Locale: void <init>(java.lang.String)>(r30);

        return $r17;

     label11:
        r32 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int,int)>(0, i8);

        $i6 = i8 + 1;

        r33 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int)>($i6);

        i9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int _firstHyphenOrUnderscore(java.lang.String)>(r33);

        if i9 >= 0 goto label12;

        $r16 = new java.util.Locale;

        specialinvoke $r16.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(r32, r33);

        return $r16;

     label12:
        r34 = virtualinvoke r33.<java.lang.String: java.lang.String substring(int,int)>(0, i9);

        $r14 = new java.util.Locale;

        $i7 = i9 + 1;

        $r15 = virtualinvoke r33.<java.lang.String: java.lang.String substring(int)>($i7);

        specialinvoke $r14.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r32, r34, $r15);

        return $r14;

     label13:
        $r13 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r30);

        return $r13;

     label14:
        $r12 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r30);

        return $r12;

     label15:
        $r11 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r30);

        return $r11;

     label16:
        $z0 = virtualinvoke r30.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z0 == 0 goto label20;

        i10 = virtualinvoke r30.<java.lang.String: int lastIndexOf(int)>(93);

        if i10 != -1 goto label17;

        $r9 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidFormatException;

        $r10 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser getParser()>();

        specialinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidFormatException: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>($r10, "Bracketed IPv6 address must contain closing bracket", r30, class "Ljava/net/InetSocketAddress;");

        throw $r9;

     label17:
        i11 = virtualinvoke r30.<java.lang.String: int indexOf(int,int)>(58, i10);

        if i11 <= -1 goto label18;

        $i5 = i11 + 1;

        $r8 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int)>($i5);

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        goto label19;

     label18:
        $i12 = 0;

     label19:
        $r6 = new java.net.InetSocketAddress;

        $i4 = i10 + 1;

        $r7 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        specialinvoke $r6.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r7, $i12);

        return $r6;

     label20:
        i14 = virtualinvoke r30.<java.lang.String: int indexOf(int)>(58);

        if i14 < 0 goto label21;

        $i1 = i14 + 1;

        $i2 = virtualinvoke r30.<java.lang.String: int indexOf(int,int)>(58, $i1);

        if $i2 >= 0 goto label21;

        $i3 = i14 + 1;

        $r3 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int)>($i3);

        i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $r4 = new java.net.InetSocketAddress;

        $r5 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int,int)>(0, i14);

        specialinvoke $r4.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r5, i15);

        return $r4;

     label21:
        $r2 = new java.net.InetSocketAddress;

        specialinvoke $r2.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(r30, 0);

        return $r2;

     label22:
        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: void throwInternal()>();

        return null;

        catch java.lang.Exception from label04 to label05 with label06;
    }

    public java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        int $i0;
        java.util.Locale $r2;
        java.net.URI $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int _kind>;

        lookupswitch($i0)
        {
            case 3: goto label1;
            case 8: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>("");

        return $r3;

     label2:
        $r2 = <java.util.Locale: java.util.Locale ROOT>;

        return $r2;

     label3:
        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r4;
    }

    protected java.lang.Object _deserializeFromEmptyStringDefault(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r2;
    }

    protected int _firstHyphenOrUnderscore(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std r0;
        java.lang.String r1;
        int i0, i2;
        char c1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std;

        r1 := @parameter0: java.lang.String;

        i2 = 0;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        if i2 >= i0 goto label4;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if c1 == 95 goto label2;

        if c1 != 45 goto label3;

     label2:
        return i2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return -1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_INET_SOCKET_ADDRESS> = 12;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_INET_ADDRESS> = 11;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_TIME_ZONE> = 10;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_CHARSET> = 9;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_LOCALE> = 8;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_PATTERN> = 7;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_CURRENCY> = 6;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_JAVA_TYPE> = 5;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_CLASS> = 4;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_URI> = 3;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_URL> = 2;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: int STD_FILE> = 1;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std: long serialVersionUID> = 1L;

        return;
    }
}
