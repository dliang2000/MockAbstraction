class org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1 extends org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator
{
    private final java.util.Iterator backingIterator;
    final org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2 this$1;

    void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1 r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2 r1, $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap $r3;
        java.util.EnumMap $r4;
        java.util.Set $r5;
        java.util.Iterator $r6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2 this$1> = r1;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator: void <init>()>();

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2 this$1>;

        $r3 = $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap this$0>;

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap: java.util.EnumMap access$000(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap)>($r3);

        $r5 = virtualinvoke $r4.<java.util.EnumMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1: java.util.Iterator backingIterator> = $r6;

        return;
    }

    public boolean hasNext()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1: java.util.Iterator backingIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.util.Map$Entry next()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1 r0;
        java.util.Map$Entry r1, $r6;
        java.util.Iterator $r2;
        java.lang.Object $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1: java.util.Iterator backingIterator>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r3;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $r6;
    }

    public volatile java.lang.Object next()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1 r0;
        java.util.Map$Entry $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap$2$1: java.util.Map$Entry next()>();

        return $r1;
    }
}
