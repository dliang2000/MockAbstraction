public class org.apache.flink.api.java.typeutils.runtime.DataInputViewStream extends java.io.InputStream
{
    protected org.apache.flink.core.memory.DataInputView inputView;

    public void <init>(org.apache.flink.core.memory.DataInputView)
    {
        org.apache.flink.api.java.typeutils.runtime.DataInputViewStream r0;
        org.apache.flink.core.memory.DataInputView r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.DataInputViewStream;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStream: org.apache.flink.core.memory.DataInputView inputView> = r1;

        return;
    }

    public org.apache.flink.core.memory.DataInputView getInputView()
    {
        org.apache.flink.api.java.typeutils.runtime.DataInputViewStream r0;
        org.apache.flink.core.memory.DataInputView $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.DataInputViewStream;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStream: org.apache.flink.core.memory.DataInputView inputView>;

        return $r1;
    }

    public int read() throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.DataInputViewStream r0;
        org.apache.flink.core.memory.DataInputView $r2;
        int $i0;
        java.io.EOFException $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.DataInputViewStream;

     label1:
        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStream: org.apache.flink.core.memory.DataInputView inputView>;

        $i0 = interfaceinvoke $r2.<org.apache.flink.core.memory.DataInputView: int readUnsignedByte()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        return -1;

        catch java.io.EOFException from label1 to label2 with label3;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.DataInputViewStream r0;
        long l0, $l5, $l6, $l7, $l8, $l9, l10;
        int i1, $i3, $i4;
        byte $b2;
        org.apache.flink.core.memory.DataInputView $r1, $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.DataInputViewStream;

        l0 := @parameter0: long;

        l10 = l0;

     label1:
        $b2 = l10 cmp 2147483647L;

        if $b2 <= 0 goto label3;

        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStream: org.apache.flink.core.memory.DataInputView inputView>;

        i1 = interfaceinvoke $r2.<org.apache.flink.core.memory.DataInputView: int skipBytes(int)>(2147483647);

        if i1 != 0 goto label2;

        $l9 = l0 - l10;

        return $l9;

     label2:
        $l8 = (long) i1;

        l10 = l10 - $l8;

        goto label1;

     label3:
        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStream: org.apache.flink.core.memory.DataInputView inputView>;

        $i3 = (int) l10;

        $i4 = interfaceinvoke $r1.<org.apache.flink.core.memory.DataInputView: int skipBytes(int)>($i3);

        $l5 = (long) $i4;

        $l6 = l10 - $l5;

        $l7 = l0 - $l6;

        return $l7;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.DataInputViewStream r0;
        byte[] r1;
        int i0, i1, $i2;
        org.apache.flink.core.memory.DataInputView $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.DataInputViewStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStream: org.apache.flink.core.memory.DataInputView inputView>;

        $i2 = interfaceinvoke $r2.<org.apache.flink.core.memory.DataInputView: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }
}
