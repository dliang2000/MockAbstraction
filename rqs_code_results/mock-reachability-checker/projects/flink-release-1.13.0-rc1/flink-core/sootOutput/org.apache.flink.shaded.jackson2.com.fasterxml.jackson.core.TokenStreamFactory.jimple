public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory extends java.lang.Object implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Versioned, java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract boolean requiresPropertyOrdering();

    public abstract boolean canHandleBinaryNatively();

    public abstract boolean canParseAsync();

    public abstract java.lang.Class getFormatReadFeatureType();

    public abstract java.lang.Class getFormatWriteFeatureType();

    public abstract boolean canUseSchema(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema);

    public abstract java.lang.String getFormatName();

    public abstract boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature);

    public abstract boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature);

    public abstract int getParserFeatures();

    public abstract int getGeneratorFeatures();

    public abstract int getFormatParserFeatures();

    public abstract int getFormatGeneratorFeatures();

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[]) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[], int, int) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(char[]) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(char[], int, int) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.File) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException;

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) throws java.io.IOException;

    protected java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory r0;
        java.io.DataOutput r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.DataOutputAsStream $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory;

        r1 := @parameter0: java.io.DataOutput;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.DataOutputAsStream;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.DataOutputAsStream: void <init>(java.io.DataOutput)>(r1);

        return $r2;
    }

    protected java.io.InputStream _optimizedStreamFromURL(java.net.URL) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory r0;
        java.net.URL r1;
        java.lang.String r2, r3, $r4, $r5, $r7;
        boolean $z0;
        int $i0, $i1;
        java.io.FileInputStream $r6;
        java.io.InputStream $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory;

        r1 := @parameter0: java.net.URL;

        $r4 = "file";

        $r5 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        r2 = virtualinvoke r1.<java.net.URL: java.lang.String getHost()>();

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        r3 = virtualinvoke r1.<java.net.URL: java.lang.String getPath()>();

        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(37);

        if $i0 >= 0 goto label2;

        $r6 = new java.io.FileInputStream;

        $r7 = virtualinvoke r1.<java.net.URL: java.lang.String getPath()>();

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.lang.String)>($r7);

        return $r6;

     label2:
        $r8 = virtualinvoke r1.<java.net.URL: java.io.InputStream openStream()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory: long serialVersionUID> = 2L;

        return;
    }
}
