public class org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory extends java.lang.Object implements org.apache.flink.api.common.io.compression.InflaterInputStreamFactory
{
    private static final org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory INSTANCE;

    public void <init>()
    {
        org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory r0;

        r0 := @this: org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory getInstance()
    {
        org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory $r0;

        $r0 = <org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory: org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory INSTANCE>;

        return $r0;
    }

    public java.util.zip.GZIPInputStream create(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory r0;
        java.io.InputStream r1;
        java.util.zip.GZIPInputStream $r2;

        r0 := @this: org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory;

        r1 := @parameter0: java.io.InputStream;

        $r2 = new java.util.zip.GZIPInputStream;

        specialinvoke $r2.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r1);

        return $r2;
    }

    public java.util.Collection getCommonFileExtensions()
    {
        org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory r0;
        java.lang.String[] $r1;
        java.util.List $r2;

        r0 := @this: org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "gz";

        $r1[1] = "gzip";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        return $r2;
    }

    public volatile java.io.InputStream create(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory r0;
        java.io.InputStream r1;
        java.util.zip.GZIPInputStream $r2;

        r0 := @this: org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory: java.util.zip.GZIPInputStream create(java.io.InputStream)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory $r0;

        $r0 = new org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory;

        specialinvoke $r0.<org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory: void <init>()>();

        <org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory: org.apache.flink.api.common.io.compression.GzipInflaterInputStreamFactory INSTANCE> = $r0;

        return;
    }
}
