class javassist.bytecode.CodeIterator$Pointers extends java.lang.Object
{
    int cursor;
    int mark0;
    int mark;
    javassist.bytecode.ExceptionTable etable;
    javassist.bytecode.LineNumberAttribute line;
    javassist.bytecode.LocalVariableAttribute vars;
    javassist.bytecode.LocalVariableAttribute types;
    javassist.bytecode.StackMapTable stack;
    javassist.bytecode.StackMap stack2;

    void <init>(int, int, int, javassist.bytecode.ExceptionTable, javassist.bytecode.CodeAttribute)
    {
        javassist.bytecode.CodeIterator$Pointers r0;
        int i0, i1, i2;
        javassist.bytecode.ExceptionTable r1;
        javassist.bytecode.CodeAttribute r2;
        javassist.bytecode.AttributeInfo $r3, $r5, $r7, $r9, $r11;
        javassist.bytecode.LineNumberAttribute $r4;
        javassist.bytecode.LocalVariableAttribute $r6, $r8;
        javassist.bytecode.StackMapTable $r10;
        javassist.bytecode.StackMap $r12;

        r0 := @this: javassist.bytecode.CodeIterator$Pointers;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: javassist.bytecode.ExceptionTable;

        r2 := @parameter4: javassist.bytecode.CodeAttribute;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.bytecode.CodeIterator$Pointers: int cursor> = i0;

        r0.<javassist.bytecode.CodeIterator$Pointers: int mark> = i1;

        r0.<javassist.bytecode.CodeIterator$Pointers: int mark0> = i2;

        r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.ExceptionTable etable> = r1;

        $r3 = virtualinvoke r2.<javassist.bytecode.CodeAttribute: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("LineNumberTable");

        $r4 = (javassist.bytecode.LineNumberAttribute) $r3;

        r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.LineNumberAttribute line> = $r4;

        $r5 = virtualinvoke r2.<javassist.bytecode.CodeAttribute: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("LocalVariableTable");

        $r6 = (javassist.bytecode.LocalVariableAttribute) $r5;

        r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.LocalVariableAttribute vars> = $r6;

        $r7 = virtualinvoke r2.<javassist.bytecode.CodeAttribute: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("LocalVariableTypeTable");

        $r8 = (javassist.bytecode.LocalVariableAttribute) $r7;

        r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.LocalVariableAttribute types> = $r8;

        $r9 = virtualinvoke r2.<javassist.bytecode.CodeAttribute: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("StackMapTable");

        $r10 = (javassist.bytecode.StackMapTable) $r9;

        r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.StackMapTable stack> = $r10;

        $r11 = virtualinvoke r2.<javassist.bytecode.CodeAttribute: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("StackMap");

        $r12 = (javassist.bytecode.StackMap) $r11;

        r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.StackMap stack2> = $r12;

        return;
    }

    void shiftPc(int, int, boolean) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.CodeIterator$Pointers r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean z0;
        javassist.bytecode.LocalVariableAttribute $r1, $r2, $r7, $r8;
        javassist.bytecode.StackMapTable $r3, $r6;
        javassist.bytecode.StackMap $r4, $r5;
        javassist.bytecode.LineNumberAttribute $r9, $r14;
        javassist.bytecode.ExceptionTable $r13;

        r0 := @this: javassist.bytecode.CodeIterator$Pointers;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i2 = r0.<javassist.bytecode.CodeIterator$Pointers: int cursor>;

        if i0 < $i2 goto label01;

        $i11 = r0.<javassist.bytecode.CodeIterator$Pointers: int cursor>;

        if i0 != $i11 goto label02;

        if z0 == 0 goto label02;

     label01:
        $i3 = r0.<javassist.bytecode.CodeIterator$Pointers: int cursor>;

        $i4 = $i3 + i1;

        r0.<javassist.bytecode.CodeIterator$Pointers: int cursor> = $i4;

     label02:
        $i12 = r0.<javassist.bytecode.CodeIterator$Pointers: int mark>;

        if i0 < $i12 goto label03;

        $i10 = r0.<javassist.bytecode.CodeIterator$Pointers: int mark>;

        if i0 != $i10 goto label04;

        if z0 == 0 goto label04;

     label03:
        $i5 = r0.<javassist.bytecode.CodeIterator$Pointers: int mark>;

        $i6 = $i5 + i1;

        r0.<javassist.bytecode.CodeIterator$Pointers: int mark> = $i6;

     label04:
        $i13 = r0.<javassist.bytecode.CodeIterator$Pointers: int mark0>;

        if i0 < $i13 goto label05;

        $i9 = r0.<javassist.bytecode.CodeIterator$Pointers: int mark0>;

        if i0 != $i9 goto label06;

        if z0 == 0 goto label06;

     label05:
        $i7 = r0.<javassist.bytecode.CodeIterator$Pointers: int mark0>;

        $i8 = $i7 + i1;

        r0.<javassist.bytecode.CodeIterator$Pointers: int mark0> = $i8;

     label06:
        $r13 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.ExceptionTable etable>;

        virtualinvoke $r13.<javassist.bytecode.ExceptionTable: void shiftPc(int,int,boolean)>(i0, i1, z0);

        $r14 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.LineNumberAttribute line>;

        if $r14 == null goto label07;

        $r9 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.LineNumberAttribute line>;

        virtualinvoke $r9.<javassist.bytecode.LineNumberAttribute: void shiftPc(int,int,boolean)>(i0, i1, z0);

     label07:
        $r1 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.LocalVariableAttribute vars>;

        if $r1 == null goto label08;

        $r8 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.LocalVariableAttribute vars>;

        virtualinvoke $r8.<javassist.bytecode.LocalVariableAttribute: void shiftPc(int,int,boolean)>(i0, i1, z0);

     label08:
        $r2 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.LocalVariableAttribute types>;

        if $r2 == null goto label09;

        $r7 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.LocalVariableAttribute types>;

        virtualinvoke $r7.<javassist.bytecode.LocalVariableAttribute: void shiftPc(int,int,boolean)>(i0, i1, z0);

     label09:
        $r3 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.StackMapTable stack>;

        if $r3 == null goto label10;

        $r6 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.StackMapTable stack>;

        virtualinvoke $r6.<javassist.bytecode.StackMapTable: void shiftPc(int,int,boolean)>(i0, i1, z0);

     label10:
        $r4 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.StackMap stack2>;

        if $r4 == null goto label11;

        $r5 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.StackMap stack2>;

        virtualinvoke $r5.<javassist.bytecode.StackMap: void shiftPc(int,int,boolean)>(i0, i1, z0);

     label11:
        return;
    }

    void shiftForSwitch(int, int) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.CodeIterator$Pointers r0;
        int i0, i1;
        javassist.bytecode.StackMapTable $r1, $r4;
        javassist.bytecode.StackMap $r2, $r3;

        r0 := @this: javassist.bytecode.CodeIterator$Pointers;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.StackMapTable stack>;

        if $r1 == null goto label1;

        $r4 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.StackMapTable stack>;

        virtualinvoke $r4.<javassist.bytecode.StackMapTable: void shiftForSwitch(int,int)>(i0, i1);

     label1:
        $r2 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.StackMap stack2>;

        if $r2 == null goto label2;

        $r3 = r0.<javassist.bytecode.CodeIterator$Pointers: javassist.bytecode.StackMap stack2>;

        virtualinvoke $r3.<javassist.bytecode.StackMap: void shiftForSwitch(int,int)>(i0, i1);

     label2:
        return;
    }
}
