public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer extends java.io.Writer
{
    static final int SURR1_FIRST;
    static final int SURR1_LAST;
    static final int SURR2_FIRST;
    static final int SURR2_LAST;
    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context;
    private java.io.OutputStream _out;
    private byte[] _outBuffer;
    private final int _outBufferEnd;
    private int _outPtr;
    private int _surrogate;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        java.io.OutputStream r2;
        byte[] $r3, $r4;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r2 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out> = r2;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] allocWriteEncodingBuffer()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer> = $r3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        $i0 = lengthof $r4;

        $i1 = $i0 - 4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outBufferEnd> = $i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = 0;

        return;
    }

    public java.io.Writer append(char) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer r0;
        char c0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        c0 := @parameter0: char;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>(c0);

        return r0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer r0;
        java.io.OutputStream r1, $r3, $r6;
        byte[] r2, $r5;
        int i0, $i1, $i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;

        if $r3 == null goto label3;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;

        if $i1 <= 0 goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = 0;

     label1:
        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out> = null;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        if r2 == null goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer> = null;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseWriteEncodingBuffer(byte[])>(r2);

     label2:
        virtualinvoke r1.<java.io.OutputStream: void close()>();

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate> = 0;

        if i0 <= 0 goto label3;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(i0);

     label3:
        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer r0;
        java.io.OutputStream $r1, $r2, $r4;
        int $i0, $i1;
        byte[] $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;

        if $r1 == null goto label2;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;

        if $i0 <= 0 goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = 0;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

     label2:
        return;
    }

    public void write(char[]) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer r0;
        char[] r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        r1 := @parameter0: char[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void write(char[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer r0;
        char[] r1;
        byte[] r2;
        int i0, i1, $i2, $i3, $i14, $i16, $i17, $i19, $i20, $i21, $i23, $i24, $i25, $i27, $i28, $i36, $i38, $i39, $i41, $i42, i44, i45, i47, i48, i50, i51, i52, i53, i54, i55, i56, i57, i58;
        char $c4, $c5, $c7, $c8, $c9, $c11, $c12, $c15, $c30, $c31, $c33, $c34, $c43, c46, c49;
        byte $b6, $b10, $b13, $b18, $b22, $b26, $b29, $b32, $b35, $b37, $b40;
        java.io.OutputStream $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        r1 := @parameter0: char[];

        i44 := @parameter1: int;

        i45 := @parameter2: int;

        if i45 >= 2 goto label02;

        if i45 != 1 goto label01;

        $c43 = r1[i44];

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>($c43);

     label01:
        return;

     label02:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate>;

        if $i2 <= 0 goto label03;

        $i41 = i44;

        i44 = i44 + 1;

        c46 = r1[$i41];

        i45 = i45 + -1;

        $i42 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int convertSurrogate(int)>(c46);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>($i42);

     label03:
        i47 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outBufferEnd>;

        i48 = i45 + i44;

     label04:
        if i44 >= i48 goto label18;

        if i47 < i0 goto label05;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, i47);

        i47 = 0;

     label05:
        $i3 = i44;

        i44 = i44 + 1;

        c49 = r1[$i3];

        if c49 >= 128 goto label10;

        $i36 = i47;

        i47 = i47 + 1;

        $b37 = (byte) c49;

        r2[$i36] = $b37;

        i50 = i48 - i44;

        i1 = i0 - i47;

        if i50 <= i1 goto label06;

        i50 = i1;

     label06:
        i51 = i50 + i44;

     label07:
        if i44 < i51 goto label08;

        goto label04;

     label08:
        $i38 = i44;

        i44 = i44 + 1;

        c49 = r1[$i38];

        if c49 < 128 goto label09;

        goto label10;

     label09:
        $i39 = i47;

        i47 = i47 + 1;

        $b40 = (byte) c49;

        r2[$i39] = $b40;

        goto label07;

     label10:
        if c49 >= 2048 goto label11;

        i52 = i47 + 1;

        $c30 = c49 >> 6;

        $c31 = 192 | $c30;

        $b32 = (byte) $c31;

        r2[i47] = $b32;

        i47 = i52 + 1;

        $c33 = c49 & 63;

        $c34 = 128 | $c33;

        $b35 = (byte) $c34;

        r2[i52] = $b35;

        goto label17;

     label11:
        if c49 < 55296 goto label12;

        if c49 <= 57343 goto label13;

     label12:
        i53 = i47 + 1;

        $c4 = c49 >> 12;

        $c5 = 224 | $c4;

        $b6 = (byte) $c5;

        r2[i47] = $b6;

        i54 = i53 + 1;

        $c7 = c49 >> 6;

        $c8 = $c7 & 63;

        $c9 = 128 | $c8;

        $b10 = (byte) $c9;

        r2[i53] = $b10;

        i47 = i54 + 1;

        $c11 = c49 & 63;

        $c12 = 128 | $c11;

        $b13 = (byte) $c12;

        r2[i54] = $b13;

        goto label04;

     label13:
        if c49 <= 56319 goto label14;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = i47;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(c49);

     label14:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate> = c49;

        if i44 < i48 goto label15;

        goto label18;

     label15:
        $i14 = i44;

        i44 = i44 + 1;

        $c15 = r1[$i14];

        i55 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int convertSurrogate(int)>($c15);

        if i55 <= 1114111 goto label16;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = i47;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(i55);

     label16:
        i56 = i47 + 1;

        $i16 = i55 >> 18;

        $i17 = 240 | $i16;

        $b18 = (byte) $i17;

        r2[i47] = $b18;

        i57 = i56 + 1;

        $i19 = i55 >> 12;

        $i20 = $i19 & 63;

        $i21 = 128 | $i20;

        $b22 = (byte) $i21;

        r2[i56] = $b22;

        i58 = i57 + 1;

        $i23 = i55 >> 6;

        $i24 = $i23 & 63;

        $i25 = 128 | $i24;

        $b26 = (byte) $i25;

        r2[i57] = $b26;

        i47 = i58 + 1;

        $i27 = i55 & 63;

        $i28 = 128 | $i27;

        $b29 = (byte) $i28;

        r2[i58] = $b29;

     label17:
        goto label04;

     label18:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = i47;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer r0;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i15, $i16, $i18, $i19, $i20, $i22, $i23, $i25, $i26, $i28, $i29, $i31, $i32, $i34, i35, $i36, $i37, i38, i39, i40, i41, i42, i43, i44, i45;
        byte $b3, $b7, $b11, $b14, $b17, $b21, $b24, $b27, $b30, $b33;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.io.OutputStream $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        i35 := @parameter0: int;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate>;

        if $i0 <= 0 goto label01;

        i35 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int convertSurrogate(int)>(i35);

        goto label03;

     label01:
        if i35 < 55296 goto label03;

        if i35 > 57343 goto label03;

        if i35 <= 56319 goto label02;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(i35);

     label02:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate> = i35;

        return;

     label03:
        $i36 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;

        $i37 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outBufferEnd>;

        if $i36 < $i37 goto label04;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        $i34 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;

        virtualinvoke $r12.<java.io.OutputStream: void write(byte[],int,int)>($r11, 0, $i34);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = 0;

     label04:
        if i35 >= 128 goto label05;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        $i31 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;

        $i32 = $i31 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = $i32;

        $b33 = (byte) i35;

        $r10[$i31] = $b33;

        goto label10;

     label05:
        i38 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;

        if i35 >= 2048 goto label06;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        i39 = i38 + 1;

        $i25 = i35 >> 6;

        $i26 = 192 | $i25;

        $b27 = (byte) $i26;

        $r8[i38] = $b27;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        i40 = i39 + 1;

        $i28 = i35 & 63;

        $i29 = 128 | $i28;

        $b30 = (byte) $i29;

        $r9[i39] = $b30;

        goto label09;

     label06:
        if i35 > 65535 goto label07;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        i41 = i38 + 1;

        $i15 = i35 >> 12;

        $i16 = 224 | $i15;

        $b17 = (byte) $i16;

        $r5[i38] = $b17;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        i42 = i41 + 1;

        $i18 = i35 >> 6;

        $i19 = $i18 & 63;

        $i20 = 128 | $i19;

        $b21 = (byte) $i20;

        $r6[i41] = $b21;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        i40 = i42 + 1;

        $i22 = i35 & 63;

        $i23 = 128 | $i22;

        $b24 = (byte) $i23;

        $r7[i42] = $b24;

        goto label09;

     label07:
        if i35 <= 1114111 goto label08;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(i35);

     label08:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        i43 = i38 + 1;

        $i1 = i35 >> 18;

        $i2 = 240 | $i1;

        $b3 = (byte) $i2;

        $r1[i38] = $b3;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        i44 = i43 + 1;

        $i4 = i35 >> 12;

        $i5 = $i4 & 63;

        $i6 = 128 | $i5;

        $b7 = (byte) $i6;

        $r2[i43] = $b7;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        i45 = i44 + 1;

        $i8 = i35 >> 6;

        $i9 = $i8 & 63;

        $i10 = 128 | $i9;

        $b11 = (byte) $i10;

        $r3[i44] = $b11;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        i40 = i45 + 1;

        $i12 = i35 & 63;

        $i13 = 128 | $i12;

        $b14 = (byte) $i13;

        $r4[i45] = $b14;

     label09:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = i40;

     label10:
        return;
    }

    public void write(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void write(java.lang.String,int,int)>(r1, 0, $i0);

        return;
    }

    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer r0;
        java.lang.String r1;
        byte[] r2;
        int i0, i1, $i2, $i3, $i14, $i16, $i17, $i19, $i20, $i21, $i23, $i24, $i25, $i27, $i28, $i36, $i38, $i39, $i41, $i42, i44, i45, i47, i48, i50, i51, i52, i53, i54, i55, i56, i57, i58;
        char $c4, $c5, $c7, $c8, $c9, $c11, $c12, $c15, $c30, $c31, $c33, $c34, $c43, c46, c49;
        byte $b6, $b10, $b13, $b18, $b22, $b26, $b29, $b32, $b35, $b37, $b40;
        java.io.OutputStream $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        r1 := @parameter0: java.lang.String;

        i44 := @parameter1: int;

        i45 := @parameter2: int;

        if i45 >= 2 goto label02;

        if i45 != 1 goto label01;

        $c43 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i44);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>($c43);

     label01:
        return;

     label02:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate>;

        if $i2 <= 0 goto label03;

        $i41 = i44;

        i44 = i44 + 1;

        c46 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i41);

        i45 = i45 + -1;

        $i42 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int convertSurrogate(int)>(c46);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>($i42);

     label03:
        i47 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: byte[] _outBuffer>;

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outBufferEnd>;

        i48 = i45 + i44;

     label04:
        if i44 >= i48 goto label18;

        if i47 < i0 goto label05;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.OutputStream _out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, i47);

        i47 = 0;

     label05:
        $i3 = i44;

        i44 = i44 + 1;

        c49 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        if c49 >= 128 goto label10;

        $i36 = i47;

        i47 = i47 + 1;

        $b37 = (byte) c49;

        r2[$i36] = $b37;

        i50 = i48 - i44;

        i1 = i0 - i47;

        if i50 <= i1 goto label06;

        i50 = i1;

     label06:
        i51 = i50 + i44;

     label07:
        if i44 < i51 goto label08;

        goto label04;

     label08:
        $i38 = i44;

        i44 = i44 + 1;

        c49 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i38);

        if c49 < 128 goto label09;

        goto label10;

     label09:
        $i39 = i47;

        i47 = i47 + 1;

        $b40 = (byte) c49;

        r2[$i39] = $b40;

        goto label07;

     label10:
        if c49 >= 2048 goto label11;

        i52 = i47 + 1;

        $c30 = c49 >> 6;

        $c31 = 192 | $c30;

        $b32 = (byte) $c31;

        r2[i47] = $b32;

        i47 = i52 + 1;

        $c33 = c49 & 63;

        $c34 = 128 | $c33;

        $b35 = (byte) $c34;

        r2[i52] = $b35;

        goto label17;

     label11:
        if c49 < 55296 goto label12;

        if c49 <= 57343 goto label13;

     label12:
        i53 = i47 + 1;

        $c4 = c49 >> 12;

        $c5 = 224 | $c4;

        $b6 = (byte) $c5;

        r2[i47] = $b6;

        i54 = i53 + 1;

        $c7 = c49 >> 6;

        $c8 = $c7 & 63;

        $c9 = 128 | $c8;

        $b10 = (byte) $c9;

        r2[i53] = $b10;

        i47 = i54 + 1;

        $c11 = c49 & 63;

        $c12 = 128 | $c11;

        $b13 = (byte) $c12;

        r2[i54] = $b13;

        goto label04;

     label13:
        if c49 <= 56319 goto label14;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = i47;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(c49);

     label14:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate> = c49;

        if i44 < i48 goto label15;

        goto label18;

     label15:
        $i14 = i44;

        i44 = i44 + 1;

        $c15 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i14);

        i55 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int convertSurrogate(int)>($c15);

        if i55 <= 1114111 goto label16;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = i47;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>(i55);

     label16:
        i56 = i47 + 1;

        $i16 = i55 >> 18;

        $i17 = 240 | $i16;

        $b18 = (byte) $i17;

        r2[i47] = $b18;

        i57 = i56 + 1;

        $i19 = i55 >> 12;

        $i20 = $i19 & 63;

        $i21 = 128 | $i20;

        $b22 = (byte) $i21;

        r2[i56] = $b22;

        i58 = i57 + 1;

        $i23 = i55 >> 6;

        $i24 = $i23 & 63;

        $i25 = 128 | $i24;

        $b26 = (byte) $i25;

        r2[i57] = $b26;

        i47 = i58 + 1;

        $i27 = i55 & 63;

        $i28 = 128 | $i27;

        $b29 = (byte) $i28;

        r2[i58] = $b29;

     label17:
        goto label04;

     label18:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _outPtr> = i47;

        return;
    }

    protected int convertSurrogate(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.io.IOException $r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9;
        java.lang.String $r4, $r7, $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        i0 := @parameter0: int;

        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int _surrogate> = 0;

        if i0 < 56320 goto label1;

        if i0 <= 57343 goto label2;

     label1:
        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broken surrogate pair: first char 0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", second 0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; illegal combination");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r1;

     label2:
        $i2 = i1 - 55296;

        $i3 = $i2 << 10;

        $i5 = 65536 + $i3;

        $i4 = i0 - 56320;

        $i6 = $i5 + $i4;

        return $i6;
    }

    protected static void illegalSurrogate(int) throws java.io.IOException
    {
        int i0;
        java.io.IOException $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = new java.io.IOException;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.lang.String illegalSurrogateDesc(int)>(i0);

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw $r0;
    }

    protected static java.lang.String illegalSurrogateDesc(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22;
        java.lang.String $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23;

        i0 := @parameter0: int;

        if i0 <= 1114111 goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal character point (0x");

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to output; max is 0x10FFFF as per RFC 4627");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;

     label1:
        if i0 < 55296 goto label3;

        if i0 > 56319 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unmatched first part of surrogate pair (0x");

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unmatched second part of surrogate pair (0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label3:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal character point (0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to output");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer r0;
        char c0;
        java.io.Writer $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: java.io.Writer append(char)>(c0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int SURR2_LAST> = 57343;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int SURR2_FIRST> = 56320;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int SURR1_LAST> = 56319;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: int SURR1_FIRST> = 55296;

        return;
    }
}
