class javassist.bytecode.StackMap$SimpleCopy extends javassist.bytecode.StackMap$Walker
{
    javassist.bytecode.StackMap$Writer writer;

    void <init>(javassist.bytecode.StackMap)
    {
        javassist.bytecode.StackMap$SimpleCopy r0;
        javassist.bytecode.StackMap r1;
        javassist.bytecode.StackMap$Writer $r2;

        r0 := @this: javassist.bytecode.StackMap$SimpleCopy;

        r1 := @parameter0: javassist.bytecode.StackMap;

        specialinvoke r0.<javassist.bytecode.StackMap$Walker: void <init>(javassist.bytecode.StackMap)>(r1);

        $r2 = new javassist.bytecode.StackMap$Writer;

        specialinvoke $r2.<javassist.bytecode.StackMap$Writer: void <init>()>();

        r0.<javassist.bytecode.StackMap$SimpleCopy: javassist.bytecode.StackMap$Writer writer> = $r2;

        return;
    }

    byte[] doit()
    {
        javassist.bytecode.StackMap$SimpleCopy r0;
        javassist.bytecode.StackMap$Writer $r1;
        byte[] $r2;

        r0 := @this: javassist.bytecode.StackMap$SimpleCopy;

        virtualinvoke r0.<javassist.bytecode.StackMap$SimpleCopy: void visit()>();

        $r1 = r0.<javassist.bytecode.StackMap$SimpleCopy: javassist.bytecode.StackMap$Writer writer>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.StackMap$Writer: byte[] toByteArray()>();

        return $r2;
    }

    public void visit()
    {
        javassist.bytecode.StackMap$SimpleCopy r0;
        int i0;
        byte[] $r1;
        javassist.bytecode.StackMap$Writer $r2;

        r0 := @this: javassist.bytecode.StackMap$SimpleCopy;

        $r1 = r0.<javassist.bytecode.StackMap$SimpleCopy: byte[] info>;

        i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, 0);

        $r2 = r0.<javassist.bytecode.StackMap$SimpleCopy: javassist.bytecode.StackMap$Writer writer>;

        virtualinvoke $r2.<javassist.bytecode.StackMap$Writer: void write16bit(int)>(i0);

        specialinvoke r0.<javassist.bytecode.StackMap$Walker: void visit()>();

        return;
    }

    public int locals(int, int, int)
    {
        javassist.bytecode.StackMap$SimpleCopy r0;
        int i0, i1, i2, $i3;
        javassist.bytecode.StackMap$Writer $r1;

        r0 := @this: javassist.bytecode.StackMap$SimpleCopy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<javassist.bytecode.StackMap$SimpleCopy: javassist.bytecode.StackMap$Writer writer>;

        virtualinvoke $r1.<javassist.bytecode.StackMap$Writer: void write16bit(int)>(i1);

        $i3 = specialinvoke r0.<javassist.bytecode.StackMap$Walker: int locals(int,int,int)>(i0, i1, i2);

        return $i3;
    }

    public int typeInfoArray(int, int, int, boolean)
    {
        javassist.bytecode.StackMap$SimpleCopy r0;
        int i0, i1, i2, $i3;
        boolean z0;
        javassist.bytecode.StackMap$Writer $r1;

        r0 := @this: javassist.bytecode.StackMap$SimpleCopy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r1 = r0.<javassist.bytecode.StackMap$SimpleCopy: javassist.bytecode.StackMap$Writer writer>;

        virtualinvoke $r1.<javassist.bytecode.StackMap$Writer: void write16bit(int)>(i2);

        $i3 = specialinvoke r0.<javassist.bytecode.StackMap$Walker: int typeInfoArray(int,int,int,boolean)>(i0, i1, i2, z0);

        return $i3;
    }

    public void typeInfo(int, byte)
    {
        javassist.bytecode.StackMap$SimpleCopy r0;
        int i0;
        byte b1;
        javassist.bytecode.StackMap$Writer $r1;

        r0 := @this: javassist.bytecode.StackMap$SimpleCopy;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        $r1 = r0.<javassist.bytecode.StackMap$SimpleCopy: javassist.bytecode.StackMap$Writer writer>;

        virtualinvoke $r1.<javassist.bytecode.StackMap$Writer: void writeVerifyTypeInfo(int,int)>(b1, 0);

        return;
    }

    public void objectVariable(int, int)
    {
        javassist.bytecode.StackMap$SimpleCopy r0;
        int i0, i1;
        javassist.bytecode.StackMap$Writer $r1;

        r0 := @this: javassist.bytecode.StackMap$SimpleCopy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.StackMap$SimpleCopy: javassist.bytecode.StackMap$Writer writer>;

        virtualinvoke $r1.<javassist.bytecode.StackMap$Writer: void writeVerifyTypeInfo(int,int)>(7, i1);

        return;
    }

    public void uninitialized(int, int)
    {
        javassist.bytecode.StackMap$SimpleCopy r0;
        int i0, i1;
        javassist.bytecode.StackMap$Writer $r1;

        r0 := @this: javassist.bytecode.StackMap$SimpleCopy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.StackMap$SimpleCopy: javassist.bytecode.StackMap$Writer writer>;

        virtualinvoke $r1.<javassist.bytecode.StackMap$Writer: void writeVerifyTypeInfo(int,int)>(8, i1);

        return;
    }
}
