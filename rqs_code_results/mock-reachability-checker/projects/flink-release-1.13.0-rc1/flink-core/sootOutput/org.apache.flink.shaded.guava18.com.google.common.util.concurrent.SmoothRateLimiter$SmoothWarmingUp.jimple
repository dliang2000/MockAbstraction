final class org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp extends org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter
{
    private final long warmupPeriodMicros;
    private double slope;
    private double halfPermits;

    void <init>(org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter$SleepingStopwatch, long, java.util.concurrent.TimeUnit)
    {
        org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp r0;
        org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter$SleepingStopwatch r1;
        long l0, $l1;
        java.util.concurrent.TimeUnit r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter$SleepingStopwatch;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter: void <init>(org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter$SleepingStopwatch,org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$1)>(r1, null);

        $l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toMicros(long)>(l0);

        r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: long warmupPeriodMicros> = $l1;

        return;
    }

    void doSetRate(double, double)
    {
        org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        long $l0;
        byte $b1, $b2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 = r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double maxPermits>;

        $l0 = r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: long warmupPeriodMicros>;

        $d4 = (double) $l0;

        $d5 = $d4 / d1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double maxPermits> = $d5;

        $d6 = r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double maxPermits>;

        $d7 = $d6 / 2.0;

        r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double halfPermits> = $d7;

        d3 = d1 * 3.0;

        $d9 = d3 - d1;

        $d8 = r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double halfPermits>;

        $d10 = $d9 / $d8;

        r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double slope> = $d10;

        $b1 = d2 cmpl #Infinity;

        if $b1 != 0 goto label1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double storedPermits> = 0.0;

        goto label4;

     label1:
        $b2 = d2 cmpl 0.0;

        if $b2 != 0 goto label2;

        $d14 = r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double maxPermits>;

        goto label3;

     label2:
        $d12 = r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double storedPermits>;

        $d11 = r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double maxPermits>;

        $d13 = $d12 * $d11;

        $d14 = $d13 / d2;

     label3:
        r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double storedPermits> = $d14;

     label4:
        return;
    }

    long storedPermitsToWaitTime(double, double)
    {
        org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14;
        byte $b0;
        long l1, l2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp;

        d0 := @parameter0: double;

        d14 := @parameter1: double;

        $d3 = r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double halfPermits>;

        d1 = d0 - $d3;

        l1 = 0L;

        $b0 = d1 cmpl 0.0;

        if $b0 <= 0 goto label1;

        d2 = staticinvoke <java.lang.Math: double min(double,double)>(d1, d14);

        $d8 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double permitsToTime(double)>(d1);

        $d9 = d1 - d2;

        $d10 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double permitsToTime(double)>($d9);

        $d11 = $d8 + $d10;

        $d12 = d2 * $d11;

        $d13 = $d12 / 2.0;

        l1 = (long) $d13;

        d14 = d14 - d2;

     label1:
        $d6 = (double) l1;

        $d4 = r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double stableIntervalMicros>;

        $d5 = $d4 * d14;

        $d7 = $d6 + $d5;

        l2 = (long) $d7;

        return l2;
    }

    private double permitsToTime(double)
    {
        org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp r0;
        double d0, $d1, $d2, $d3, $d4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp;

        d0 := @parameter0: double;

        $d3 = r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double stableIntervalMicros>;

        $d1 = r0.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp: double slope>;

        $d2 = d0 * $d1;

        $d4 = $d3 + $d2;

        return $d4;
    }
}
