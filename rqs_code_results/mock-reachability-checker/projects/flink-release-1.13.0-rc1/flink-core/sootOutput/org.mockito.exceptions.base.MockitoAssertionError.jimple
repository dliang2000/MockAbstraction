public class org.mockito.exceptions.base.MockitoAssertionError extends java.lang.AssertionError
{
    private static final long serialVersionUID;
    private final java.lang.StackTraceElement[] unfilteredStackTrace;

    public void <init>(java.lang.String)
    {
        org.mockito.exceptions.base.MockitoAssertionError r0;
        java.lang.String r1;
        java.lang.StackTraceElement[] $r3;
        org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter $r4;

        r0 := @this: org.mockito.exceptions.base.MockitoAssertionError;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<org.mockito.exceptions.base.MockitoAssertionError: java.lang.StackTraceElement[] getStackTrace()>();

        r0.<org.mockito.exceptions.base.MockitoAssertionError: java.lang.StackTraceElement[] unfilteredStackTrace> = $r3;

        $r4 = new org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;

        specialinvoke $r4.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: void <init>()>();

        virtualinvoke $r4.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: void filter(java.lang.Throwable)>(r0);

        return;
    }

    public void <init>(org.mockito.exceptions.base.MockitoAssertionError, java.lang.String)
    {
        org.mockito.exceptions.base.MockitoAssertionError r0, r1;
        java.lang.String r2, $r6, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;
        java.lang.StackTraceElement[] $r9, $r10;

        r0 := @this: org.mockito.exceptions.base.MockitoAssertionError;

        r1 := @parameter0: org.mockito.exceptions.base.MockitoAssertionError;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke r1.<org.mockito.exceptions.base.MockitoAssertionError: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        $r9 = virtualinvoke r1.<org.mockito.exceptions.base.MockitoAssertionError: java.lang.StackTraceElement[] getStackTrace()>();

        specialinvoke r0.<java.lang.AssertionError: void setStackTrace(java.lang.StackTraceElement[])>($r9);

        $r10 = virtualinvoke r1.<org.mockito.exceptions.base.MockitoAssertionError: java.lang.StackTraceElement[] getUnfilteredStackTrace()>();

        r0.<org.mockito.exceptions.base.MockitoAssertionError: java.lang.StackTraceElement[] unfilteredStackTrace> = $r10;

        return;
    }

    public java.lang.StackTraceElement[] getUnfilteredStackTrace()
    {
        org.mockito.exceptions.base.MockitoAssertionError r0;
        java.lang.StackTraceElement[] $r1;

        r0 := @this: org.mockito.exceptions.base.MockitoAssertionError;

        $r1 = r0.<org.mockito.exceptions.base.MockitoAssertionError: java.lang.StackTraceElement[] unfilteredStackTrace>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.mockito.exceptions.base.MockitoAssertionError: long serialVersionUID> = 1L;

        return;
    }
}
