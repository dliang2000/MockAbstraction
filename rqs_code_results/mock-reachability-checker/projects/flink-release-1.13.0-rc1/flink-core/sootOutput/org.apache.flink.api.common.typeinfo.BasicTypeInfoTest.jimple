public class org.apache.flink.api.common.typeinfo.BasicTypeInfoTest extends org.apache.flink.api.common.typeutils.TypeInformationTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeinfo.BasicTypeInfoTest r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicTypeInfoTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.TypeInformationTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeinfo.BasicTypeInfo[] getTestData()
    {
        org.apache.flink.api.common.typeinfo.BasicTypeInfoTest r0;
        org.apache.flink.api.common.typeinfo.BasicTypeInfo[] $r1;
        org.apache.flink.api.common.typeinfo.BasicTypeInfo $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicTypeInfoTest;

        $r1 = newarray (org.apache.flink.api.common.typeinfo.BasicTypeInfo)[13];

        $r2 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo STRING_TYPE_INFO>;

        $r1[0] = $r2;

        $r3 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo BOOLEAN_TYPE_INFO>;

        $r1[1] = $r3;

        $r4 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo BYTE_TYPE_INFO>;

        $r1[2] = $r4;

        $r5 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo SHORT_TYPE_INFO>;

        $r1[3] = $r5;

        $r6 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo INT_TYPE_INFO>;

        $r1[4] = $r6;

        $r7 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo LONG_TYPE_INFO>;

        $r1[5] = $r7;

        $r8 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo FLOAT_TYPE_INFO>;

        $r1[6] = $r8;

        $r9 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo DOUBLE_TYPE_INFO>;

        $r1[7] = $r9;

        $r10 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo CHAR_TYPE_INFO>;

        $r1[8] = $r10;

        $r11 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo DATE_TYPE_INFO>;

        $r1[9] = $r11;

        $r12 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo VOID_TYPE_INFO>;

        $r1[10] = $r12;

        $r13 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo BIG_INT_TYPE_INFO>;

        $r1[11] = $r13;

        $r14 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo BIG_DEC_TYPE_INFO>;

        $r1[12] = $r14;

        return $r1;
    }

    protected volatile org.apache.flink.api.common.typeinfo.TypeInformation[] getTestData()
    {
        org.apache.flink.api.common.typeinfo.BasicTypeInfoTest r0;
        org.apache.flink.api.common.typeinfo.BasicTypeInfo[] $r1;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicTypeInfoTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeinfo.BasicTypeInfoTest: org.apache.flink.api.common.typeinfo.BasicTypeInfo[] getTestData()>();

        return $r1;
    }
}
