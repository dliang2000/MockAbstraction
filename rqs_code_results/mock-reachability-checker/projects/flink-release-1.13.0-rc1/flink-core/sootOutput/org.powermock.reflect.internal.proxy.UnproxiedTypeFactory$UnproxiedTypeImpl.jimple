class org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl extends java.lang.Object implements org.powermock.reflect.internal.proxy.UnproxiedType
{
    private final java.lang.Class type;
    private final java.lang.Class[] interfaces;

    private void <init>(java.lang.Class)
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl r0;
        java.lang.Class r1;
        java.lang.Class[] $r2;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: java.lang.Class type> = r1;

        $r2 = newarray (java.lang.Class)[0];

        r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: java.lang.Class[] interfaces> = $r2;

        return;
    }

    private void <init>(java.lang.Class[])
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl r0;
        java.lang.Class[] r1;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        r1 := @parameter0: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: java.lang.Class type> = null;

        r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: java.lang.Class[] interfaces> = r1;

        return;
    }

    private void <init>(java.lang.Class, java.lang.Class[])
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl r0;
        java.lang.Class r1;
        java.lang.Class[] r2;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: java.lang.Class type> = r1;

        r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: java.lang.Class[] interfaces> = r2;

        return;
    }

    public java.lang.Class getOriginalType()
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl r0;
        java.lang.Class $r1;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        $r1 = r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: java.lang.Class type>;

        return $r1;
    }

    public java.lang.Class[] getInterfaces()
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl r0;
        java.lang.Class[] $r1;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        $r1 = r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: java.lang.Class[] interfaces>;

        return $r1;
    }

    void <init>(java.lang.Class, org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1)
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl r0;
        java.lang.Class r1;
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1 r2;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1;

        specialinvoke r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: void <init>(java.lang.Class)>(r1);

        return;
    }

    void <init>(java.lang.Class[], org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1)
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl r0;
        java.lang.Class[] r1;
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1 r2;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        r1 := @parameter0: java.lang.Class[];

        r2 := @parameter1: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1;

        specialinvoke r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: void <init>(java.lang.Class[])>(r1);

        return;
    }

    void <init>(java.lang.Class, java.lang.Class[], org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1)
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl r0;
        java.lang.Class r1;
        java.lang.Class[] r2;
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1 r3;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        r3 := @parameter2: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1;

        specialinvoke r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: void <init>(java.lang.Class,java.lang.Class[])>(r1, r2);

        return;
    }
}
