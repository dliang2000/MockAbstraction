final class org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence extends org.apache.flink.shaded.guava18.com.google.common.base.Equivalence implements java.io.Serializable
{
    final org.apache.flink.shaded.guava18.com.google.common.base.Equivalence elementEquivalence;
    private static final long serialVersionUID;

    void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Equivalence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Equivalence: void <init>()>();

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (org.apache.flink.shaded.guava18.com.google.common.base.Equivalence) $r2;

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence elementEquivalence> = $r3;

        return;
    }

    protected boolean doEquivalent(java.lang.Iterable, java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence r0;
        java.lang.Iterable r1, r2;
        java.util.Iterator r3, r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence $r5;
        java.lang.Object $r6, $r7;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.lang.Iterable;

        r3 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence elementEquivalence>;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $z4 = virtualinvoke $r5.<org.apache.flink.shaded.guava18.com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z4 != 0 goto label1;

        return 0;

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        return $z5;
    }

    protected int doHash(java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence r0;
        java.lang.Iterable r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence $r4;
        int $i0, $i1, i2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence;

        r1 := @parameter0: java.lang.Iterable;

        i2 = 78721;

        r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = i2 * 24943;

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence elementEquivalence>;

        $i1 = virtualinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.base.Equivalence: int hash(java.lang.Object)>(r3);

        i2 = $i0 + $i1;

        goto label1;

     label2:
        return i2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence $r3, $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence;

        if $z0 == 0 goto label1;

        r2 = (org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence) r1;

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence elementEquivalence>;

        $r3 = r2.<org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence elementEquivalence>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence $r1;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence elementEquivalence>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = $i0 ^ 1185147655;

        return $i1;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence r0;
        java.lang.String r1, $r3, $r7;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence $r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence elementEquivalence>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r4 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = 11 + $i0;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pairwise()");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    protected volatile int doHash(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence r0;
        java.lang.Object r1;
        java.lang.Iterable $r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Iterable) r1;

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence: int doHash(java.lang.Iterable)>($r2);

        return $i0;
    }

    protected volatile boolean doEquivalent(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence r0;
        java.lang.Object r1, r2;
        java.lang.Iterable $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Iterable) r1;

        $r3 = (java.lang.Iterable) r2;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence: boolean doEquivalent(java.lang.Iterable,java.lang.Iterable)>($r4, $r3);

        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.guava18.com.google.common.base.PairwiseEquivalence: long serialVersionUID> = 1L;

        return;
    }
}
