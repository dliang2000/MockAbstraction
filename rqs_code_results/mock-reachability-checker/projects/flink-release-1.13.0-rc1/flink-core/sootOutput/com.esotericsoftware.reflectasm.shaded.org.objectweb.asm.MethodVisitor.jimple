public abstract class com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor extends java.lang.Object
{
    protected final int api;
    protected com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv;

    public void <init>(int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0;
        int i0;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        specialinvoke r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void <init>(int,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor)>(i0, null);

        return;
    }

    public void <init>(int, com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, r1;
        int i0;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: int api> = i0;

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv> = r1;

        return;
    }

    public com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r1, $r2;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.AnnotationVisitor $r3;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        $r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        $r3 = virtualinvoke $r2.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>();

        return $r3;

     label1:
        return null;
    }

    public com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r2, $r3;
        java.lang.String r1;
        boolean z0;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.AnnotationVisitor $r4;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r2 == null goto label1;

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        $r4 = virtualinvoke $r3.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>(r1, z0);

        return $r4;

     label1:
        return null;
    }

    public com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r2, $r3;
        int i0;
        java.lang.String r1;
        boolean z0;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.AnnotationVisitor $r4;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r2 == null goto label1;

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        $r4 = virtualinvoke $r3.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(i0, r1, z0);

        return $r4;

     label1:
        return null;
    }

    public void visitAttribute(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Attribute)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r2, $r3;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Attribute r1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        r1 := @parameter0: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Attribute;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r2 == null goto label1;

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitAttribute(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Attribute)>(r1);

     label1:
        return;
    }

    public void visitCode()
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r1, $r2;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        $r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitCode()>();

     label1:
        return;
    }

    public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[])
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r3, $r4;
        int i0, i1, i2;
        java.lang.Object[] r1, r2;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object[];

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.Object[];

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r3 == null goto label1;

        $r4 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r4.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>(i0, i1, r1, i2, r2);

     label1:
        return;
    }

    public void visitInsn(int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r1, $r2;
        int i0;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        $r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitInsn(int)>(i0);

     label1:
        return;
    }

    public void visitIntInsn(int, int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r1, $r2;
        int i0, i1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>(i0, i1);

     label1:
        return;
    }

    public void visitVarInsn(int, int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r1, $r2;
        int i0, i1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>(i0, i1);

     label1:
        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r2, $r3;
        int i0;
        java.lang.String r1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r2 == null goto label1;

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>(i0, r1);

     label1:
        return;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r4, $r5;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r4 == null goto label1;

        $r5 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r5.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r1, r2, r3);

     label1:
        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r4, $r5;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r4 == null goto label1;

        $r5 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r5.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r1, r2, r3);

     label1:
        return;
    }

    public transient void visitInvokeDynamicInsn(java.lang.String, java.lang.String, com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Handle, java.lang.Object[])
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r5, $r6;
        java.lang.String r1, r2;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Handle r3;
        java.lang.Object[] r4;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Handle;

        r4 := @parameter3: java.lang.Object[];

        $r5 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r5 == null goto label1;

        $r6 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r6.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Handle,java.lang.Object[])>(r1, r2, r3, r4);

     label1:
        return;
    }

    public void visitJumpInsn(int, com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r2, $r3;
        int i0;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label r1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r2 == null goto label1;

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label)>(i0, r1);

     label1:
        return;
    }

    public void visitLabel(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r2, $r3;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label r1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        r1 := @parameter0: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r2 == null goto label1;

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitLabel(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label)>(r1);

     label1:
        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r2, $r3;
        java.lang.Object r1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r2 == null goto label1;

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void visitIincInsn(int, int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r1, $r2;
        int i0, i1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>(i0, i1);

     label1:
        return;
    }

    public transient void visitTableSwitchInsn(int, int, com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label, com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label[])
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r3, $r4;
        int i0, i1;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label r1;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label[] r2;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label;

        r2 := @parameter3: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label[];

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r3 == null goto label1;

        $r4 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r4.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitTableSwitchInsn(int,int,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label[])>(i0, i1, r1, r2);

     label1:
        return;
    }

    public void visitLookupSwitchInsn(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label, int[], com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label[])
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r4, $r5;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label r1;
        int[] r2;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label[] r3;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        r1 := @parameter0: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label;

        r2 := @parameter1: int[];

        r3 := @parameter2: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label[];

        $r4 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r4 == null goto label1;

        $r5 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r5.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitLookupSwitchInsn(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label,int[],com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label[])>(r1, r2, r3);

     label1:
        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r2, $r3;
        java.lang.String r1;
        int i0;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r2 == null goto label1;

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>(r1, i0);

     label1:
        return;
    }

    public void visitTryCatchBlock(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label, com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label, com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label, java.lang.String)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r5, $r6;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label r1, r2, r3;
        java.lang.String r4;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        r1 := @parameter0: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label;

        r2 := @parameter1: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label;

        r3 := @parameter2: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r5 == null goto label1;

        $r6 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r6.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitTryCatchBlock(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label,java.lang.String)>(r1, r2, r3, r4);

     label1:
        return;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label, com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label, int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r6, $r7;
        java.lang.String r1, r2, r3;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label r4, r5;
        int i0;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label;

        r5 := @parameter4: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label;

        i0 := @parameter5: int;

        $r6 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r6 == null goto label1;

        $r7 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r7.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label,int)>(r1, r2, r3, r4, r5, i0);

     label1:
        return;
    }

    public void visitLineNumber(int, com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r2, $r3;
        int i0;
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label r1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r2 == null goto label1;

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitLineNumber(int,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Label)>(i0, r1);

     label1:
        return;
    }

    public void visitMaxs(int, int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r1, $r2;
        int i0, i1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitMaxs(int,int)>(i0, i1);

     label1:
        return;
    }

    public void visitEnd()
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor r0, $r1, $r2;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor;

        $r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.MethodVisitor: void visitEnd()>();

     label1:
        return;
    }
}
