public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer extends java.lang.Object
{
    private static final int SMALL_CHUNK;
    private static final int MAX_CHUNK;
    private org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _head;
    private org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _tail;
    private int _size;
    private java.lang.Object[] _freeBuffer;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object[] resetAndStart()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r0;
        java.lang.Object[] $r1, $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: void _reset()>();

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;

        if $r1 != null goto label1;

        $r3 = newarray (java.lang.Object)[12];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer> = $r3;

        return $r3;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;

        return $r2;
    }

    public java.lang.Object[] resetAndStart(java.lang.Object[], int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r0;
        java.lang.Object[] r1, $r2, $r3, $r4, $r5, $r6;
        int i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: void _reset()>();

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;

        $i2 = lengthof $r4;

        if $i2 >= i0 goto label2;

     label1:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(12, i0);

        $r3 = newarray (java.lang.Object)[$i1];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer> = $r3;

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r5, 0, i0);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;

        return $r6;
    }

    public java.lang.Object[] appendCompletedChunk(java.lang.Object[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r0;
        java.lang.Object[] r1, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode $r3, $r4, $r5;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer;

        r1 := @parameter0: java.lang.Object[];

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode: void <init>(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode)>(r1, null);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _head>;

        if $r4 != null goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _tail> = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _head> = $r3;

        goto label2;

     label1:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _tail>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode: void linkNext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode)>($r3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _tail> = $r3;

     label2:
        i3 = lengthof r1;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: int _size>;

        $i1 = $i0 + i3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: int _size> = $i1;

        if i3 >= 16384 goto label3;

        i3 = i3 + i3;

        goto label4;

     label3:
        if i3 >= 262144 goto label4;

        $i2 = i3 >> 2;

        i3 = i3 + $i2;

     label4:
        $r7 = newarray (java.lang.Object)[i3];

        return $r7;
    }

    public java.lang.Object[] completeAndClearBuffer(java.lang.Object[], int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r0;
        java.lang.Object[] r1, r2;
        int i0, i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: int _size>;

        i1 = i0 + $i2;

        r2 = newarray (java.lang.Object)[i1];

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: void _copyTo(java.lang.Object,int,java.lang.Object[],int)>(r2, i1, r1, i0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: void _reset()>();

        return r2;
    }

    public java.lang.Object[] completeAndClearBuffer(java.lang.Object[], int, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r0;
        java.lang.Object[] r1, r3, $r5;
        int i0, i1, $i2;
        java.lang.Class r2;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Class;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: int _size>;

        i1 = i0 + $i2;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r2, i1);

        $r5 = (java.lang.Object[]) $r4;

        r3 = (java.lang.Object[]) $r5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: void _copyTo(java.lang.Object,int,java.lang.Object[],int)>(r3, i1, r1, i0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: void _reset()>();

        return r3;
    }

    public void completeAndClearBuffer(java.lang.Object[], int, java.util.List)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r0;
        java.lang.Object[] r1, r3;
        int i0, i1, i2, i3;
        java.util.List r2;
        java.lang.Object $r4, $r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _head>;

     label1:
        if r7 == null goto label4;

        $r5 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();

        r3 = (java.lang.Object[]) $r5;

        i2 = 0;

        i1 = lengthof r3;

     label2:
        if i2 >= i1 goto label3;

        $r6 = r3[i2];

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label2;

     label3:
        r7 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode next()>();

        goto label1;

     label4:
        i3 = 0;

     label5:
        if i3 >= i0 goto label6;

        $r4 = r1[i3];

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        i3 = i3 + 1;

        goto label5;

     label6:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: void _reset()>();

        return;
    }

    public int initialCapacity()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r0;
        java.lang.Object[] $r1, $r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;

        $i0 = lengthof $r2;

     label2:
        return $i0;
    }

    public int bufferedSize()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: int _size>;

        return $i0;
    }

    protected void _reset()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode $r1, $r2;
        java.lang.Object $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _tail>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _tail>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();

        $r4 = (java.lang.Object[]) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer> = $r4;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _tail> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _head> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: int _size> = 0;

        return;
    }

    protected final void _copyTo(java.lang.Object, int, java.lang.Object[], int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r0;
        java.lang.Object r1, $r11;
        int i0, i1, i2, i3, i4;
        java.lang.Object[] r2, r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object[];

        i1 := @parameter3: int;

        i3 = 0;

        r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode _head>;

     label1:
        if r12 == null goto label2;

        $r11 = virtualinvoke r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();

        r3 = (java.lang.Object[]) $r11;

        i2 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r1, i3, i2);

        i3 = i3 + i2;

        r12 = virtualinvoke r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LinkedNode next()>();

        goto label1;

     label2:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, i3, i1);

        i4 = i3 + i1;

        if i4 == i0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Should have gotten ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries, got ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label3:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: int MAX_CHUNK> = 262144;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: int SMALL_CHUNK> = 16384;

        return;
    }
}
