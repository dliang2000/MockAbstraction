public class org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyTupleMapperL1 extends java.lang.Object implements org.apache.flink.api.common.functions.MapFunction
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyTupleMapperL1 r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyTupleMapperL1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.api.java.tuple.Tuple1 map(org.apache.flink.api.java.tuple.Tuple1) throws java.lang.Exception
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyTupleMapperL1 r0;
        org.apache.flink.api.java.tuple.Tuple1 r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyTupleMapperL1;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple1;

        return null;
    }

    public volatile java.lang.Object map(java.lang.Object) throws java.lang.Exception
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyTupleMapperL1 r0;
        java.lang.Object r1;
        org.apache.flink.api.java.tuple.Tuple1 $r2, $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyTupleMapperL1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.flink.api.java.tuple.Tuple1) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyTupleMapperL1: org.apache.flink.api.java.tuple.Tuple1 map(org.apache.flink.api.java.tuple.Tuple1)>($r2);

        return $r3;
    }
}
