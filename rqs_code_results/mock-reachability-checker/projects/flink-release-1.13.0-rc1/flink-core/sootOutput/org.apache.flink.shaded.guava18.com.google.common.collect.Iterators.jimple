public final class org.apache.flink.shaded.guava18.com.google.common.collect.Iterators extends java.lang.Object
{
    static final org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator EMPTY_LIST_ITERATOR;
    private static final java.util.Iterator EMPTY_MODIFIABLE_ITERATOR;

    private void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Iterators;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator emptyIterator()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator $r0;

        $r0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator emptyListIterator()>();

        return $r0;
    }

    static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator emptyListIterator()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator $r0;

        $r0 = <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator EMPTY_LIST_ITERATOR>;

        return $r0;
    }

    static java.util.Iterator emptyModifiableIterator()
    {
        java.util.Iterator $r0;

        $r0 = <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.util.Iterator EMPTY_MODIFIABLE_ITERATOR>;

        return $r0;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator)
    {
        java.util.Iterator r0;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$3 $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator $r3;

        r0 := @parameter0: java.util.Iterator;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $z0 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator;

        if $z0 == 0 goto label1;

        $r3 = (org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator) r0;

        return $r3;

     label1:
        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$3;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$3: void <init>(java.util.Iterator)>(r0);

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator unmodifiableIterator(org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator r0, $r2;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = (org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator) $r1;

        return $r2;
    }

    public static int size(java.util.Iterator)
    {
        java.util.Iterator r0;
        boolean $z0;
        int i0;

        r0 := @parameter0: java.util.Iterator;

        i0 = 0;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return i0;
    }

    public static boolean contains(java.util.Iterator, java.lang.Object)
    {
        java.util.Iterator r0;
        java.lang.Object r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate equalTo(java.lang.Object)>(r1);

        $z0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: boolean any(java.util.Iterator,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r0, $r2);

        return $z0;
    }

    public static boolean removeAll(java.util.Iterator, java.util.Collection)
    {
        java.util.Iterator r0;
        java.util.Collection r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Collection;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate in(java.util.Collection)>(r1);

        $z0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: boolean removeIf(java.util.Iterator,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r0, $r2);

        return $z0;
    }

    public static boolean removeIf(java.util.Iterator, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1;
        java.lang.Object $r3;
        boolean $z0, z1, $z2;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        z1 = 0;

     label1:
        $z2 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r3 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.Predicate: boolean apply(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<java.util.Iterator: void remove()>();

        z1 = 1;

        goto label1;

     label2:
        return z1;
    }

    public static boolean retainAll(java.util.Iterator, java.util.Collection)
    {
        java.util.Iterator r0;
        java.util.Collection r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate $r2, $r3;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Collection;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate in(java.util.Collection)>(r1);

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate not(org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r2);

        $z0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: boolean removeIf(java.util.Iterator,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r0, $r3);

        return $z0;
    }

    public static boolean elementsEqual(java.util.Iterator, java.util.Iterator)
    {
        java.util.Iterator r0, r1;
        java.lang.Object r2, r3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label2;

        return 0;

     label2:
        r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $z3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>(r2, r3);

        if $z3 != 0 goto label3;

        return 0;

     label3:
        goto label1;

     label4:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    public static java.lang.String toString(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5;
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner $r2;
        java.lang.String $r6;

        r0 := @parameter0: java.util.Iterator;

        $r2 = <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: org.apache.flink.shaded.guava18.com.google.common.base.Joiner STANDARD_JOINER>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator)>($r3, r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.Object getOnlyElement(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.lang.Object r1, $r16;
        java.lang.String r3, r4, $r6, $r10, $r14, $r17, $r21;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r18, $r19, $r20;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.IllegalArgumentException $r13;

        r0 := @parameter0: java.util.Iterator;

        r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return r1;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $r7 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        $i1 = 31 + $i0;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected one element but was: <");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        i4 = 0;

     label2:
        if i4 >= 4 goto label3;

        $z2 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r16 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r16);

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r17);

        $r18 = new java.lang.StringBuilder;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        $i3 = 2 + $i2;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        i4 = i4 + 1;

        goto label2;

     label3:
        $z1 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ...");

     label4:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;
    }

    public static java.lang.Object getOnlyElement(java.util.Iterator, java.lang.Object)
    {
        java.util.Iterator r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Object;

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>(r0);

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public static java.lang.Object[] toArray(java.util.Iterator, java.lang.Class)
    {
        java.util.Iterator r0;
        java.lang.Class r1;
        java.util.ArrayList r2;
        java.lang.Object[] $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Class;

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>(r0);

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterables: java.lang.Object[] toArray(java.lang.Iterable,java.lang.Class)>(r2, r1);

        return $r3;
    }

    public static boolean addAll(java.util.Collection, java.util.Iterator)
    {
        java.util.Collection r0;
        java.util.Iterator r1;
        boolean $z0, $z1, z2;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Iterator;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        z2 = 0;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public static int frequency(java.util.Iterator, java.lang.Object)
    {
        java.util.Iterator r0;
        java.lang.Object r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator $r3;
        int $i0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate equalTo(java.lang.Object)>(r1);

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r0, $r2);

        $i0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: int size(java.util.Iterator)>($r3);

        return $i0;
    }

    public static java.util.Iterator cycle(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$4 $r2;

        r0 := @parameter0: java.lang.Iterable;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$4;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$4: void <init>(java.lang.Iterable)>(r0);

        return $r2;
    }

    public static transient java.util.Iterator cycle(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.util.ArrayList $r1;
        java.util.Iterator $r2;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.util.Iterator cycle(java.lang.Iterable)>($r1);

        return $r2;
    }

    public static java.util.Iterator concat(java.util.Iterator, java.util.Iterator)
    {
        java.util.Iterator r0, r1, $r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Iterator;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object)>(r0, r1);

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator iterator()>();

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.util.Iterator concat(java.util.Iterator)>($r3);

        return $r4;
    }

    public static java.util.Iterator concat(java.util.Iterator, java.util.Iterator, java.util.Iterator)
    {
        java.util.Iterator r0, r1, r2, $r5;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r3;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator $r4;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Iterator;

        r2 := @parameter2: java.util.Iterator;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2);

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator iterator()>();

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.util.Iterator concat(java.util.Iterator)>($r4);

        return $r5;
    }

    public static java.util.Iterator concat(java.util.Iterator, java.util.Iterator, java.util.Iterator, java.util.Iterator)
    {
        java.util.Iterator r0, r1, r2, r3, $r6;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator $r5;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Iterator;

        r2 := @parameter2: java.util.Iterator;

        r3 := @parameter3: java.util.Iterator;

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2, r3);

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator iterator()>();

        $r6 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.util.Iterator concat(java.util.Iterator)>($r5);

        return $r6;
    }

    public static transient java.util.Iterator concat(java.util.Iterator[])
    {
        java.util.Iterator[] r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator $r2;
        java.util.Iterator $r3;

        r0 := @parameter0: java.util.Iterator[];

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList copyOf(java.lang.Object[])>(r0);

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator iterator()>();

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.util.Iterator concat(java.util.Iterator)>($r2);

        return $r3;
    }

    public static java.util.Iterator concat(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$5 $r2;

        r0 := @parameter0: java.util.Iterator;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$5;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$5: void <init>(java.util.Iterator)>(r0);

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator, int)
    {
        java.util.Iterator r0;
        int i0;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator $r1;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator partitionImpl(java.util.Iterator,int,boolean)>(r0, i0, 0);

        return $r1;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator paddedPartition(java.util.Iterator, int)
    {
        java.util.Iterator r0;
        int i0;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator $r1;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator partitionImpl(java.util.Iterator,int,boolean)>(r0, i0, 1);

        return $r1;
    }

    private static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator partitionImpl(java.util.Iterator, int, boolean)
    {
        java.util.Iterator r0;
        int i0;
        boolean z0, $z1;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$6 $r2;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        if i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean)>($z1);

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$6;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$6: void <init>(java.util.Iterator,int,boolean)>(r0, i0, z0);

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$7 $r4;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$7;

        specialinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$7: void <init>(java.util.Iterator,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r0, r1);

        return $r4;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator, java.lang.Class)
    {
        java.util.Iterator r0;
        java.lang.Class r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate instanceOf(java.lang.Class)>(r1);

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r0, $r2);

        return $r3;
    }

    public static boolean any(java.util.Iterator, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        $i0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: int indexOf(java.util.Iterator,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r0, r1);

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean all(java.util.Iterator, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1;
        java.lang.Object r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.Predicate: boolean apply(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public static java.lang.Object find(java.util.Iterator, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator $r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r0, r1);

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator: java.lang.Object next()>();

        return $r3;
    }

    public static java.lang.Object find(java.util.Iterator, org.apache.flink.shaded.guava18.com.google.common.base.Predicate, java.lang.Object)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1;
        java.lang.Object r2, $r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        r2 := @parameter2: java.lang.Object;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r0, r1);

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.lang.Object getNext(java.util.Iterator,java.lang.Object)>($r3, r2);

        return $r4;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.base.Optional tryFind(java.util.Iterator, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator r2;
        boolean $z0;
        java.lang.Object $r3;
        org.apache.flink.shaded.guava18.com.google.common.base.Optional $r4;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r0, r1);

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator: java.lang.Object next()>();

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Optional: org.apache.flink.shaded.guava18.com.google.common.base.Optional of(java.lang.Object)>($r3);

        goto label2;

     label1:
        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Optional: org.apache.flink.shaded.guava18.com.google.common.base.Optional absent()>();

     label2:
        return $r4;
    }

    public static int indexOf(java.util.Iterator, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1;
        java.lang.Object r2;
        boolean $z0, $z1;
        int i0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "predicate");

        i0 = 0;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.Predicate: boolean apply(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static java.util.Iterator transform(java.util.Iterator, org.apache.flink.shaded.guava18.com.google.common.base.Function)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Function r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$8 $r3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Function;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$8;

        specialinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$8: void <init>(java.util.Iterator,org.apache.flink.shaded.guava18.com.google.common.base.Function)>(r0, r1);

        return $r3;
    }

    public static java.lang.Object get(java.util.Iterator, int)
    {
        java.util.Iterator r0;
        int i0, i1;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: void checkNonnegative(int)>(i0);

        i1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: int advance(java.util.Iterator,int)>(r0, i0);

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(91);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must be less than the number of elements that remained (");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label1:
        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        return $r1;
    }

    static void checkNonnegative(int)
    {
        int i0;
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(43);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position (");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must not be negative");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label1:
        return;
    }

    public static java.lang.Object get(java.util.Iterator, int, java.lang.Object)
    {
        java.util.Iterator r0;
        int i0;
        java.lang.Object r1, $r2;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: void checkNonnegative(int)>(i0);

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: int advance(java.util.Iterator,int)>(r0, i0);

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.lang.Object getNext(java.util.Iterator,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public static java.lang.Object getNext(java.util.Iterator, java.lang.Object)
    {
        java.util.Iterator r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Object;

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public static java.lang.Object getLast(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

     label1:
        r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return r1;

     label2:
        goto label1;
    }

    public static java.lang.Object getLast(java.util.Iterator, java.lang.Object)
    {
        java.util.Iterator r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Object;

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.lang.Object getLast(java.util.Iterator)>(r0);

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public static int advance(java.util.Iterator, int)
    {
        java.util.Iterator r0;
        int i0, i1;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        if i0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "numberToAdvance must be nonnegative");

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        i1 = i1 + 1;

        goto label3;

     label4:
        return i1;
    }

    public static java.util.Iterator limit(java.util.Iterator, int)
    {
        java.util.Iterator r0;
        int i0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$9 $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "limit is negative");

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$9;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$9: void <init>(int,java.util.Iterator)>(i0, r0);

        return $r2;
    }

    public static java.util.Iterator consumingIterator(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$10 $r2;

        r0 := @parameter0: java.util.Iterator;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$10;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$10: void <init>(java.util.Iterator)>(r0);

        return $r2;
    }

    static java.lang.Object pollNext(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r0.<java.util.Iterator: void remove()>();

        return r1;

     label1:
        return null;
    }

    static void clear(java.util.Iterator)
    {
        java.util.Iterator r0;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r0.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    public static transient org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator forArray(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int $i0;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator forArray(java.lang.Object[],int,int,int)>(r0, 0, $i0, 0);

        return $r1;
    }

    static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator forArray(java.lang.Object[], int, int, int)
    {
        java.lang.Object[] r0;
        int i0, i1, i2, i3, $i4;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$11 $r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        i3 = i0 + i1;

        $i4 = lengthof r0;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>(i0, i3, $i4);

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: int checkPositionIndex(int,int)>(i2, i1);

        if i1 != 0 goto label3;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator emptyListIterator()>();

        return $r2;

     label3:
        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$11;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$11: void <init>(int,int,java.lang.Object[],int)>(i1, i2, r0, i0);

        return $r1;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$12 $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$12;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$12: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator forEnumeration(java.util.Enumeration)
    {
        java.util.Enumeration r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$13 $r2;

        r0 := @parameter0: java.util.Enumeration;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$13;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$13: void <init>(java.util.Enumeration)>(r0);

        return $r2;
    }

    public static java.util.Enumeration asEnumeration(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$14 $r2;

        r0 := @parameter0: java.util.Iterator;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$14;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$14: void <init>(java.util.Iterator)>(r0);

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$PeekingImpl r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        $z0 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$PeekingImpl;

        if $z0 == 0 goto label1;

        r1 = (org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$PeekingImpl) r0;

        return r1;

     label1:
        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$PeekingImpl;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$PeekingImpl: void <init>(java.util.Iterator)>(r0);

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.PeekingIterator peekingIterator(org.apache.flink.shaded.guava18.com.google.common.collect.PeekingIterator)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.PeekingIterator r0, $r2;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.PeekingIterator;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = (org.apache.flink.shaded.guava18.com.google.common.collect.PeekingIterator) $r1;

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableIterator mergeSorted(java.lang.Iterable, java.util.Comparator)
    {
        java.lang.Iterable r0;
        java.util.Comparator r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$MergingIterator $r4;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.util.Comparator;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "iterators");

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "comparator");

        $r4 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$MergingIterator;

        specialinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$MergingIterator: void <init>(java.lang.Iterable,java.util.Comparator)>(r0, r1);

        return $r4;
    }

    static java.util.ListIterator cast(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.util.ListIterator $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = (java.util.ListIterator) r0;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$1 $r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$2 $r1;

        $r0 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$1;

        specialinvoke $r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$1: void <init>()>();

        <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: org.apache.flink.shaded.guava18.com.google.common.collect.UnmodifiableListIterator EMPTY_LIST_ITERATOR> = $r0;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$2;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.Iterators$2: void <init>()>();

        <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.util.Iterator EMPTY_MODIFIABLE_ITERATOR> = $r1;

        return;
    }
}
