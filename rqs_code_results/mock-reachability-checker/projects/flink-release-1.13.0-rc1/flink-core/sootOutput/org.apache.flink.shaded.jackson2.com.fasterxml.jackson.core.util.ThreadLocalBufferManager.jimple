class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager extends java.lang.Object
{
    private final java.lang.Object RELEASE_LOCK;
    private final java.util.Map _trackedRecyclers;
    private final java.lang.ref.ReferenceQueue _refQueue;

    void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager r0;
        java.lang.Object $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.lang.ref.ReferenceQueue $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.lang.Object RELEASE_LOCK> = $r1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.util.Map _trackedRecyclers> = $r2;

        $r3 = new java.lang.ref.ReferenceQueue;

        specialinvoke $r3.<java.lang.ref.ReferenceQueue: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.lang.ref.ReferenceQueue _refQueue> = $r3;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager instance()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager$ThreadLocalBufferManagerHolder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager manager>;

        return $r0;
    }

    public int releaseBuffers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager r0;
        java.util.Iterator r2;
        java.lang.ref.SoftReference r3;
        java.lang.Object $r5, $r9;
        java.util.Map $r6, $r8;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Throwable $r10;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.lang.Object RELEASE_LOCK>;

        entermonitor $r5;

     label1:
        i0 = 0;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: void removeSoftRefsClearedByGc()>();

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.util.Map _trackedRecyclers>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.ref.SoftReference) $r9;

        virtualinvoke r3.<java.lang.ref.SoftReference: void clear()>();

        i0 = i0 + 1;

        goto label2;

     label3:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.util.Map _trackedRecyclers>;

        interfaceinvoke $r8.<java.util.Map: void clear()>();

        exitmonitor $r5;

     label4:
        return i0;

     label5:
        $r10 := @caughtexception;

        exitmonitor $r5;

     label6:
        throw $r10;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.ref.SoftReference wrapAndTrack(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler r1;
        java.lang.ref.SoftReference $r3;
        java.lang.ref.ReferenceQueue $r4;
        java.util.Map $r5;
        java.lang.Boolean $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler;

        $r3 = new java.lang.ref.SoftReference;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.lang.ref.ReferenceQueue _refQueue>;

        specialinvoke $r3.<java.lang.ref.SoftReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, $r4);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.util.Map _trackedRecyclers>;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r6);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: void removeSoftRefsClearedByGc()>();

        return $r3;
    }

    private void removeSoftRefsClearedByGc()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager r0;
        java.lang.ref.ReferenceQueue $r2;
        java.lang.ref.Reference $r3;
        java.lang.ref.SoftReference $r4;
        java.util.Map $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.lang.ref.ReferenceQueue _refQueue>;

        $r3 = virtualinvoke $r2.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        $r4 = (java.lang.ref.SoftReference) $r3;

        if $r4 == null goto label2;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.util.Map _trackedRecyclers>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        goto label1;

     label2:
        return;
    }
}
