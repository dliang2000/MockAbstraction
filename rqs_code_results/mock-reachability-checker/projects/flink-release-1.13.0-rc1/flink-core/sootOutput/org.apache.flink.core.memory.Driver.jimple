public class org.apache.flink.core.memory.Driver extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.core.memory.Driver r0;

        r0 := @this: org.apache.flink.core.memory.Driver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void runall()
    {
        org.apache.flink.core.memory.Driver r0;
        org.apache.flink.core.memory.OperationsOnFreedSegmentTest $r10;
        org.apache.flink.core.memory.DataInputDeserializerTest $r11;
        org.apache.flink.core.memory.OffHeapUnsafeMemorySegmentTest $r12;
        org.apache.flink.core.memory.OffHeapDirectMemorySegmentTest $r13;
        org.apache.flink.core.memory.MemorySegmentUndersizedTest $r14;
        org.apache.flink.core.memory.CrossSegmentTypeTest $r15;
        org.apache.flink.core.memory.EndiannessAccessChecks $r16;
        org.apache.flink.core.memory.DataInputOutputSerializerTest $r17;
        org.apache.flink.core.memory.OnHeapMemorySegmentTest $r18;
        org.apache.flink.core.memory.ByteArrayOutputStreamWithPosTest $r19;
        org.apache.flink.core.memory.MemorySegmentChecksTest $r20;
        org.apache.flink.core.memory.MemorySegmentFactoryTest $r21;
        org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest $r22;
        java.lang.Exception $r23, $r24, $r27, $r28, $r29, $r30, $r31, $r32;
        java.lang.InterruptedException $r25;
        java.io.IOException $r26;

        r0 := @this: org.apache.flink.core.memory.Driver;

        $r10 = new org.apache.flink.core.memory.OperationsOnFreedSegmentTest;

        specialinvoke $r10.<org.apache.flink.core.memory.OperationsOnFreedSegmentTest: void <init>()>();

     label01:
        virtualinvoke $r10.<org.apache.flink.core.memory.OperationsOnFreedSegmentTest: void testSingleSegmentOperationsHeapSegment()>();

     label02:
        goto label04;

     label03:
        $r31 := @caughtexception;

        virtualinvoke $r31.<java.lang.Exception: void printStackTrace()>();

     label04:
        virtualinvoke $r10.<org.apache.flink.core.memory.OperationsOnFreedSegmentTest: void testCompare()>();

        virtualinvoke $r10.<org.apache.flink.core.memory.OperationsOnFreedSegmentTest: void testCopyTo()>();

        virtualinvoke $r10.<org.apache.flink.core.memory.OperationsOnFreedSegmentTest: void testSwap()>();

        $r11 = new org.apache.flink.core.memory.DataInputDeserializerTest;

        specialinvoke $r11.<org.apache.flink.core.memory.DataInputDeserializerTest: void <init>()>();

     label05:
        virtualinvoke $r11.<org.apache.flink.core.memory.DataInputDeserializerTest: void testAvailable()>();

     label06:
        goto label08;

     label07:
        $r27 := @caughtexception;

        virtualinvoke $r27.<java.lang.Exception: void printStackTrace()>();

     label08:
        $r12 = new org.apache.flink.core.memory.OffHeapUnsafeMemorySegmentTest;

        specialinvoke $r12.<org.apache.flink.core.memory.OffHeapUnsafeMemorySegmentTest: void <init>(int)>(0);

        virtualinvoke $r12.<org.apache.flink.core.memory.OffHeapUnsafeMemorySegmentTest: void testByteBufferWrapping()>();

        virtualinvoke $r12.<org.apache.flink.core.memory.OffHeapUnsafeMemorySegmentTest: void testCallCleanerOnFree()>();

     label09:
        virtualinvoke $r12.<org.apache.flink.core.memory.OffHeapUnsafeMemorySegmentTest: void testCallCleanerOnceOnConcurrentFree()>();

     label10:
        goto label12;

     label11:
        $r25 := @caughtexception;

        virtualinvoke $r25.<java.lang.InterruptedException: void printStackTrace()>();

     label12:
        $r13 = new org.apache.flink.core.memory.OffHeapDirectMemorySegmentTest;

        specialinvoke $r13.<org.apache.flink.core.memory.OffHeapDirectMemorySegmentTest: void <init>(int)>(0);

        virtualinvoke $r13.<org.apache.flink.core.memory.OffHeapDirectMemorySegmentTest: void testHeapSegmentSpecifics()>();

        $r14 = new org.apache.flink.core.memory.MemorySegmentUndersizedTest;

        specialinvoke $r14.<org.apache.flink.core.memory.MemorySegmentUndersizedTest: void <init>()>();

        virtualinvoke $r14.<org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testZeroSizeHeapSegment()>();

        virtualinvoke $r14.<org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testZeroSizeOffHeapSegment()>();

        virtualinvoke $r14.<org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testZeroSizeOffHeapUnsafeSegment()>();

        virtualinvoke $r14.<org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testSizeOneHeapSegment()>();

        virtualinvoke $r14.<org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testSizeOneOffHeapSegment()>();

        virtualinvoke $r14.<org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testSizeOneOffHeapUnsafeSegment()>();

        $r15 = new org.apache.flink.core.memory.CrossSegmentTypeTest;

        specialinvoke $r15.<org.apache.flink.core.memory.CrossSegmentTypeTest: void <init>()>();

        virtualinvoke $r15.<org.apache.flink.core.memory.CrossSegmentTypeTest: void testCompareBytesMixedSegments()>();

        virtualinvoke $r15.<org.apache.flink.core.memory.CrossSegmentTypeTest: void testSwapBytesMixedSegments()>();

        virtualinvoke $r15.<org.apache.flink.core.memory.CrossSegmentTypeTest: void testCopyMixedSegments()>();

        $r16 = new org.apache.flink.core.memory.EndiannessAccessChecks;

        specialinvoke $r16.<org.apache.flink.core.memory.EndiannessAccessChecks: void <init>()>();

        virtualinvoke $r16.<org.apache.flink.core.memory.EndiannessAccessChecks: void testOnHeapSegment()>();

        virtualinvoke $r16.<org.apache.flink.core.memory.EndiannessAccessChecks: void testOffHeapSegment()>();

        virtualinvoke $r16.<org.apache.flink.core.memory.EndiannessAccessChecks: void testOffHeapUnsafeSegment()>();

        $r17 = new org.apache.flink.core.memory.DataInputOutputSerializerTest;

        specialinvoke $r17.<org.apache.flink.core.memory.DataInputOutputSerializerTest: void <init>()>();

        virtualinvoke $r17.<org.apache.flink.core.memory.DataInputOutputSerializerTest: void testWrapAsByteBuffer()>();

        virtualinvoke $r17.<org.apache.flink.core.memory.DataInputOutputSerializerTest: void testRandomValuesWriteRead()>();

        $r18 = new org.apache.flink.core.memory.OnHeapMemorySegmentTest;

        specialinvoke $r18.<org.apache.flink.core.memory.OnHeapMemorySegmentTest: void <init>(int)>(0);

        virtualinvoke $r18.<org.apache.flink.core.memory.OnHeapMemorySegmentTest: void testHeapSegmentSpecifics()>();

        virtualinvoke $r18.<org.apache.flink.core.memory.OnHeapMemorySegmentTest: void testReadOnlyByteBufferPut()>();

        $r19 = new org.apache.flink.core.memory.ByteArrayOutputStreamWithPosTest;

        specialinvoke $r19.<org.apache.flink.core.memory.ByteArrayOutputStreamWithPosTest: void <init>()>();

        virtualinvoke $r19.<org.apache.flink.core.memory.ByteArrayOutputStreamWithPosTest: void setup()>();

     label13:
        virtualinvoke $r19.<org.apache.flink.core.memory.ByteArrayOutputStreamWithPosTest: void testSetPositionWhenBufferIsFull()>();

     label14:
        goto label16;

     label15:
        $r30 := @caughtexception;

        virtualinvoke $r30.<java.lang.Exception: void printStackTrace()>();

     label16:
        virtualinvoke $r19.<org.apache.flink.core.memory.ByteArrayOutputStreamWithPosTest: void testSetNegativePosition()>();

     label17:
        goto label19;

     label18:
        $r24 := @caughtexception;

        virtualinvoke $r24.<java.lang.Exception: void printStackTrace()>();

     label19:
        virtualinvoke $r19.<org.apache.flink.core.memory.ByteArrayOutputStreamWithPosTest: void testSetPositionLargerThanBufferSize()>();

     label20:
        goto label22;

     label21:
        $r29 := @caughtexception;

        virtualinvoke $r29.<java.lang.Exception: void printStackTrace()>();

     label22:
        virtualinvoke $r19.<org.apache.flink.core.memory.ByteArrayOutputStreamWithPosTest: void testToString()>();

     label23:
        goto label25;

     label24:
        $r26 := @caughtexception;

        virtualinvoke $r26.<java.io.IOException: void printStackTrace()>();

     label25:
        $r20 = new org.apache.flink.core.memory.MemorySegmentChecksTest;

        specialinvoke $r20.<org.apache.flink.core.memory.MemorySegmentChecksTest: void <init>()>();

        virtualinvoke $r20.<org.apache.flink.core.memory.MemorySegmentChecksTest: void testHeapNullBuffer2()>();

        virtualinvoke $r20.<org.apache.flink.core.memory.MemorySegmentChecksTest: void testOffHeapNullBuffer2()>();

        virtualinvoke $r20.<org.apache.flink.core.memory.MemorySegmentChecksTest: void testNonDirectBuffer()>();

        $r21 = new org.apache.flink.core.memory.MemorySegmentFactoryTest;

        specialinvoke $r21.<org.apache.flink.core.memory.MemorySegmentFactoryTest: void <init>()>();

        virtualinvoke $r21.<org.apache.flink.core.memory.MemorySegmentFactoryTest: void testWrapCopyChangingData()>();

        virtualinvoke $r21.<org.apache.flink.core.memory.MemorySegmentFactoryTest: void testWrapPartialCopy()>();

        virtualinvoke $r21.<org.apache.flink.core.memory.MemorySegmentFactoryTest: void testWrapCopyEmpty()>();

        virtualinvoke $r21.<org.apache.flink.core.memory.MemorySegmentFactoryTest: void testWrapCopyWrongStart()>();

        virtualinvoke $r21.<org.apache.flink.core.memory.MemorySegmentFactoryTest: void testWrapCopyWrongEnd()>();

        $r22 = new org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest;

        specialinvoke $r22.<org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest: void <init>()>();

        virtualinvoke $r22.<org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest: void testGetWithNullArray()>();

        virtualinvoke $r22.<org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest: void testGetWithNegativeLength()>();

        virtualinvoke $r22.<org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest: void testGetWithTargetArrayOverflow()>();

        virtualinvoke $r22.<org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest: void testGetWithEOF()>();

        virtualinvoke $r22.<org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest: void testGetMoreThanAvailable()>();

     label26:
        virtualinvoke $r22.<org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest: void testSetPosition()>();

     label27:
        goto label29;

     label28:
        $r28 := @caughtexception;

        virtualinvoke $r28.<java.lang.Exception: void printStackTrace()>();

     label29:
        virtualinvoke $r22.<org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest: void testSetTooLargePosition()>();

     label30:
        goto label32;

     label31:
        $r32 := @caughtexception;

        virtualinvoke $r32.<java.lang.Exception: void printStackTrace()>();

     label32:
        virtualinvoke $r22.<org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest: void testSetNegativePosition()>();

     label33:
        goto label35;

     label34:
        $r23 := @caughtexception;

        virtualinvoke $r23.<java.lang.Exception: void printStackTrace()>();

     label35:
        virtualinvoke $r22.<org.apache.flink.core.memory.ByteArrayInputStreamWithPosTest: void testSetBuffer()>();

        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.InterruptedException from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.lang.Exception from label26 to label27 with label28;
        catch java.lang.Exception from label29 to label30 with label31;
        catch java.lang.Exception from label32 to label33 with label34;
    }
}
