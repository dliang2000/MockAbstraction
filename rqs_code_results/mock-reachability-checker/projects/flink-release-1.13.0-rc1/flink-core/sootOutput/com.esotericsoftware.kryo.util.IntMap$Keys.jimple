public class com.esotericsoftware.kryo.util.IntMap$Keys extends com.esotericsoftware.kryo.util.IntMap$MapIterator
{

    public void <init>(com.esotericsoftware.kryo.util.IntMap)
    {
        com.esotericsoftware.kryo.util.IntMap$Keys r0;
        com.esotericsoftware.kryo.util.IntMap r1;

        r0 := @this: com.esotericsoftware.kryo.util.IntMap$Keys;

        r1 := @parameter0: com.esotericsoftware.kryo.util.IntMap;

        specialinvoke r0.<com.esotericsoftware.kryo.util.IntMap$MapIterator: void <init>(com.esotericsoftware.kryo.util.IntMap)>(r1);

        return;
    }

    public int next()
    {
        com.esotericsoftware.kryo.util.IntMap$Keys r0;
        boolean $z0;
        int $i1, $i2, $i3, $i4;
        com.esotericsoftware.kryo.util.IntMap $r1;
        int[] $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: com.esotericsoftware.kryo.util.IntMap$Keys;

        $z0 = r0.<com.esotericsoftware.kryo.util.IntMap$Keys: boolean hasNext>;

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        $i1 = r0.<com.esotericsoftware.kryo.util.IntMap$Keys: int nextIndex>;

        if $i1 != -1 goto label2;

        $i4 = 0;

        goto label3;

     label2:
        $r1 = r0.<com.esotericsoftware.kryo.util.IntMap$Keys: com.esotericsoftware.kryo.util.IntMap map>;

        $r2 = $r1.<com.esotericsoftware.kryo.util.IntMap: int[] keyTable>;

        $i2 = r0.<com.esotericsoftware.kryo.util.IntMap$Keys: int nextIndex>;

        $i4 = $r2[$i2];

     label3:
        $i3 = r0.<com.esotericsoftware.kryo.util.IntMap$Keys: int nextIndex>;

        r0.<com.esotericsoftware.kryo.util.IntMap$Keys: int currentIndex> = $i3;

        virtualinvoke r0.<com.esotericsoftware.kryo.util.IntMap$Keys: void findNextIndex()>();

        return $i4;
    }

    public com.esotericsoftware.kryo.util.IntArray toArray()
    {
        com.esotericsoftware.kryo.util.IntMap$Keys r0;
        com.esotericsoftware.kryo.util.IntArray $r2;
        com.esotericsoftware.kryo.util.IntMap $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.esotericsoftware.kryo.util.IntMap$Keys;

        $r2 = new com.esotericsoftware.kryo.util.IntArray;

        $r3 = r0.<com.esotericsoftware.kryo.util.IntMap$Keys: com.esotericsoftware.kryo.util.IntMap map>;

        $i0 = $r3.<com.esotericsoftware.kryo.util.IntMap: int size>;

        specialinvoke $r2.<com.esotericsoftware.kryo.util.IntArray: void <init>(boolean,int)>(1, $i0);

     label1:
        $z0 = r0.<com.esotericsoftware.kryo.util.IntMap$Keys: boolean hasNext>;

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke r0.<com.esotericsoftware.kryo.util.IntMap$Keys: int next()>();

        virtualinvoke $r2.<com.esotericsoftware.kryo.util.IntArray: void add(int)>($i1);

        goto label1;

     label2:
        return $r2;
    }

    public volatile void remove()
    {
        com.esotericsoftware.kryo.util.IntMap$Keys r0;

        r0 := @this: com.esotericsoftware.kryo.util.IntMap$Keys;

        specialinvoke r0.<com.esotericsoftware.kryo.util.IntMap$MapIterator: void remove()>();

        return;
    }

    public volatile void reset()
    {
        com.esotericsoftware.kryo.util.IntMap$Keys r0;

        r0 := @this: com.esotericsoftware.kryo.util.IntMap$Keys;

        specialinvoke r0.<com.esotericsoftware.kryo.util.IntMap$MapIterator: void reset()>();

        return;
    }
}
