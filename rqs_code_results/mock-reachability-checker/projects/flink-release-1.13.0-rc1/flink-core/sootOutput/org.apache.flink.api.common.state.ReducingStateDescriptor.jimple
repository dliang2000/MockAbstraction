public class org.apache.flink.api.common.state.ReducingStateDescriptor extends org.apache.flink.api.common.state.StateDescriptor
{
    private static final long serialVersionUID;
    private final org.apache.flink.api.common.functions.ReduceFunction reduceFunction;

    public void <init>(java.lang.String, org.apache.flink.api.common.functions.ReduceFunction, java.lang.Class)
    {
        org.apache.flink.api.common.state.ReducingStateDescriptor r0;
        java.lang.String r1;
        org.apache.flink.api.common.functions.ReduceFunction r2, $r5;
        java.lang.Class r3;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.UnsupportedOperationException $r6;

        r0 := @this: org.apache.flink.api.common.state.ReducingStateDescriptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.api.common.functions.ReduceFunction;

        r3 := @parameter2: java.lang.Class;

        specialinvoke r0.<org.apache.flink.api.common.state.StateDescriptor: void <init>(java.lang.String,java.lang.Class,java.lang.Object)>(r1, r3, null);

        $r4 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = (org.apache.flink.api.common.functions.ReduceFunction) $r4;

        r0.<org.apache.flink.api.common.state.ReducingStateDescriptor: org.apache.flink.api.common.functions.ReduceFunction reduceFunction> = $r5;

        $z0 = r2 instanceof org.apache.flink.api.common.functions.RichFunction;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("ReduceFunction of ReducingState can not be a RichFunction.");

        throw $r6;

     label1:
        return;
    }

    public void <init>(java.lang.String, org.apache.flink.api.common.functions.ReduceFunction, org.apache.flink.api.common.typeinfo.TypeInformation)
    {
        org.apache.flink.api.common.state.ReducingStateDescriptor r0;
        java.lang.String r1;
        org.apache.flink.api.common.functions.ReduceFunction r2, $r5;
        org.apache.flink.api.common.typeinfo.TypeInformation r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.api.common.state.ReducingStateDescriptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.api.common.functions.ReduceFunction;

        r3 := @parameter2: org.apache.flink.api.common.typeinfo.TypeInformation;

        specialinvoke r0.<org.apache.flink.api.common.state.StateDescriptor: void <init>(java.lang.String,org.apache.flink.api.common.typeinfo.TypeInformation,java.lang.Object)>(r1, r3, null);

        $r4 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = (org.apache.flink.api.common.functions.ReduceFunction) $r4;

        r0.<org.apache.flink.api.common.state.ReducingStateDescriptor: org.apache.flink.api.common.functions.ReduceFunction reduceFunction> = $r5;

        return;
    }

    public void <init>(java.lang.String, org.apache.flink.api.common.functions.ReduceFunction, org.apache.flink.api.common.typeutils.TypeSerializer)
    {
        org.apache.flink.api.common.state.ReducingStateDescriptor r0;
        java.lang.String r1;
        org.apache.flink.api.common.functions.ReduceFunction r2, $r5;
        org.apache.flink.api.common.typeutils.TypeSerializer r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.api.common.state.ReducingStateDescriptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.api.common.functions.ReduceFunction;

        r3 := @parameter2: org.apache.flink.api.common.typeutils.TypeSerializer;

        specialinvoke r0.<org.apache.flink.api.common.state.StateDescriptor: void <init>(java.lang.String,org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Object)>(r1, r3, null);

        $r4 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = (org.apache.flink.api.common.functions.ReduceFunction) $r4;

        r0.<org.apache.flink.api.common.state.ReducingStateDescriptor: org.apache.flink.api.common.functions.ReduceFunction reduceFunction> = $r5;

        return;
    }

    public org.apache.flink.api.common.functions.ReduceFunction getReduceFunction()
    {
        org.apache.flink.api.common.state.ReducingStateDescriptor r0;
        org.apache.flink.api.common.functions.ReduceFunction $r1;

        r0 := @this: org.apache.flink.api.common.state.ReducingStateDescriptor;

        $r1 = r0.<org.apache.flink.api.common.state.ReducingStateDescriptor: org.apache.flink.api.common.functions.ReduceFunction reduceFunction>;

        return $r1;
    }

    public org.apache.flink.api.common.state.StateDescriptor$Type getType()
    {
        org.apache.flink.api.common.state.ReducingStateDescriptor r0;
        org.apache.flink.api.common.state.StateDescriptor$Type $r1;

        r0 := @this: org.apache.flink.api.common.state.ReducingStateDescriptor;

        $r1 = <org.apache.flink.api.common.state.StateDescriptor$Type: org.apache.flink.api.common.state.StateDescriptor$Type REDUCING>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.state.ReducingStateDescriptor: long serialVersionUID> = 1L;

        return;
    }
}
