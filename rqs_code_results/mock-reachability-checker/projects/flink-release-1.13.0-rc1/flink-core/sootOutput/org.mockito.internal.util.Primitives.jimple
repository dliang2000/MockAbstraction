public class org.mockito.internal.util.Primitives extends java.lang.Object
{
    private static final java.util.Map PRIMITIVE_TYPES;
    private static final java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES;

    public void <init>()
    {
        org.mockito.internal.util.Primitives r0;

        r0 := @this: org.mockito.internal.util.Primitives;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Class primitiveTypeOf(java.lang.Class)
    {
        java.lang.Class r0, $r3;
        boolean $z0;
        java.util.Map $r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_TYPES>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.Class) $r2;

        return $r3;
    }

    public static boolean isPrimitiveOrWrapper(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        return $z0;
    }

    public static boolean isAssignableFromWrapper(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        $z0 = staticinvoke <org.mockito.internal.util.Primitives: boolean isPrimitiveOrWrapper(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.mockito.internal.util.Primitives: boolean isPrimitiveOrWrapper(java.lang.Class)>(r1);

        if $z1 == 0 goto label1;

        $r2 = staticinvoke <org.mockito.internal.util.Primitives: java.lang.Class primitiveTypeOf(java.lang.Class)>(r0);

        $r3 = staticinvoke <org.mockito.internal.util.Primitives: java.lang.Class primitiveTypeOf(java.lang.Class)>(r1);

        $z2 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        return $z2;

     label1:
        return 0;
    }

    public static java.lang.Object defaultValue(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.Map $r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1;
        java.lang.Class $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r51, $r55, $r59, $r63, $r67, $r71, $r75, $r79;
        java.util.Map $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r54, $r58, $r62, $r66, $r70, $r74, $r78;
        java.lang.Boolean $r27, $r52;
        java.lang.Character $r30, $r56;
        java.lang.Byte $r33, $r60;
        java.lang.Short $r36, $r64;
        java.lang.Integer $r39, $r68;
        java.lang.Long $r42, $r72;
        java.lang.Float $r45, $r76;
        java.lang.Double $r48, $r80;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_TYPES> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES> = $r1;

        $r3 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_TYPES>;

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Boolean;", $r2);

        $r6 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_TYPES>;

        $r5 = <java.lang.Character: java.lang.Class TYPE>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Character;", $r5);

        $r9 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_TYPES>;

        $r8 = <java.lang.Byte: java.lang.Class TYPE>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Byte;", $r8);

        $r12 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_TYPES>;

        $r11 = <java.lang.Short: java.lang.Class TYPE>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Short;", $r11);

        $r15 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_TYPES>;

        $r14 = <java.lang.Integer: java.lang.Class TYPE>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Integer;", $r14);

        $r18 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_TYPES>;

        $r17 = <java.lang.Long: java.lang.Class TYPE>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r17);

        $r21 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_TYPES>;

        $r20 = <java.lang.Float: java.lang.Class TYPE>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Float;", $r20);

        $r24 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_TYPES>;

        $r23 = <java.lang.Double: java.lang.Class TYPE>;

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Double;", $r23);

        $r26 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Boolean;", $r27);

        $r29 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r30 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(0);

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Character;", $r30);

        $r32 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r33 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Byte;", $r33);

        $r35 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r36 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(0);

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Short;", $r36);

        $r38 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Integer;", $r39);

        $r41 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r42);

        $r44 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r45 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Float;", $r45);

        $r47 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r48 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        interfaceinvoke $r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Double;", $r48);

        $r50 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r51 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r52 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r51, $r52);

        $r54 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r55 = <java.lang.Character: java.lang.Class TYPE>;

        $r56 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(0);

        interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r55, $r56);

        $r58 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r59 = <java.lang.Byte: java.lang.Class TYPE>;

        $r60 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        interfaceinvoke $r58.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r59, $r60);

        $r62 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r63 = <java.lang.Short: java.lang.Class TYPE>;

        $r64 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(0);

        interfaceinvoke $r62.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r63, $r64);

        $r66 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r67 = <java.lang.Integer: java.lang.Class TYPE>;

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r66.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r67, $r68);

        $r70 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r71 = <java.lang.Long: java.lang.Class TYPE>;

        $r72 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        interfaceinvoke $r70.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r71, $r72);

        $r74 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r75 = <java.lang.Float: java.lang.Class TYPE>;

        $r76 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r75, $r76);

        $r78 = <org.mockito.internal.util.Primitives: java.util.Map PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES>;

        $r79 = <java.lang.Double: java.lang.Class TYPE>;

        $r80 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        interfaceinvoke $r78.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r79, $r80);

        return;
    }
}
