public class org.apache.flink.configuration.WebOptions extends java.lang.Object
{
    public static final org.apache.flink.configuration.ConfigOption ADDRESS;
    public static final org.apache.flink.configuration.ConfigOption PORT;
    public static final org.apache.flink.configuration.ConfigOption ACCESS_CONTROL_ALLOW_ORIGIN;
    public static final org.apache.flink.configuration.ConfigOption REFRESH_INTERVAL;
    public static final org.apache.flink.configuration.ConfigOption SSL_ENABLED;
    public static final org.apache.flink.configuration.ConfigOption TMP_DIR;
    public static final org.apache.flink.configuration.ConfigOption UPLOAD_DIR;
    public static final org.apache.flink.configuration.ConfigOption ARCHIVE_COUNT;
    public static final org.apache.flink.configuration.ConfigOption LOG_PATH;
    public static final org.apache.flink.configuration.ConfigOption SUBMIT_ENABLE;
    public static final org.apache.flink.configuration.ConfigOption CHECKPOINTS_HISTORY_SIZE;
    public static final org.apache.flink.configuration.ConfigOption MAX_EXCEPTION_HISTORY_SIZE;
    public static final org.apache.flink.configuration.ConfigOption BACKPRESSURE_CLEANUP_INTERVAL;
    public static final org.apache.flink.configuration.ConfigOption BACKPRESSURE_REFRESH_INTERVAL;
    public static final org.apache.flink.configuration.ConfigOption BACKPRESSURE_NUM_SAMPLES;
    public static final org.apache.flink.configuration.ConfigOption BACKPRESSURE_DELAY;
    public static final org.apache.flink.configuration.ConfigOption TIMEOUT;

    private void <init>()
    {
        org.apache.flink.configuration.WebOptions r0;

        r0 := @this: org.apache.flink.configuration.WebOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r0, $r5, $r10, $r15, $r21, $r27, $r33, $r38, $r44, $r49, $r55, $r61, $r66, $r72, $r78, $r84, $r90;
        org.apache.flink.configuration.ConfigOption $r1, $r3, $r4, $r7, $r9, $r11, $r13, $r14, $r17, $r19, $r20, $r23, $r25, $r26, $r29, $r31, $r32, $r34, $r36, $r37, $r40, $r42, $r43, $r45, $r47, $r48, $r51, $r53, $r54, $r57, $r59, $r60, $r64, $r65, $r68, $r70, $r71, $r74, $r76, $r77, $r80, $r82, $r83, $r86, $r88, $r89, $r92, $r93;
        java.lang.String[] $r2, $r8, $r12, $r18, $r24, $r30, $r35, $r41, $r46, $r52, $r58, $r69, $r75, $r81, $r87;
        java.lang.Integer $r6, $r39, $r56, $r63, $r67, $r73, $r79, $r85;
        java.lang.Long $r16, $r91;
        java.lang.Boolean $r22, $r50;
        java.lang.String $r28;
        org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder $r62;

        $r0 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.address");

        $r1 = virtualinvoke $r0.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "jobmanager.web.address";

        $r3 = virtualinvoke $r1.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r2);

        $r4 = virtualinvoke $r3.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Address for runtime monitor web-frontend server.");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption ADDRESS> = $r4;

        $r5 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.port");

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8081);

        $r7 = virtualinvoke $r5.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r6);

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "jobmanager.web.port";

        $r9 = virtualinvoke $r7.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r8);

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption PORT> = $r9;

        $r10 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.access-control-allow-origin");

        $r11 = virtualinvoke $r10.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>("*");

        $r12 = newarray (java.lang.String)[1];

        $r12[0] = "jobmanager.web.access-control-allow-origin";

        $r13 = virtualinvoke $r11.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r12);

        $r14 = virtualinvoke $r13.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Access-Control-Allow-Origin header for all responses from the web-frontend.");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption ACCESS_CONTROL_ALLOW_ORIGIN> = $r14;

        $r15 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.refresh-interval");

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3000L);

        $r17 = virtualinvoke $r15.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r16);

        $r18 = newarray (java.lang.String)[1];

        $r18[0] = "jobmanager.web.refresh-interval";

        $r19 = virtualinvoke $r17.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r18);

        $r20 = virtualinvoke $r19.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Refresh interval for the web-frontend in milliseconds.");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption REFRESH_INTERVAL> = $r20;

        $r21 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.ssl.enabled");

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r23 = virtualinvoke $r21.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r22);

        $r24 = newarray (java.lang.String)[1];

        $r24[0] = "jobmanager.web.ssl.enabled";

        $r25 = virtualinvoke $r23.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r24);

        $r26 = virtualinvoke $r25.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Flag indicating whether to override SSL support for the JobManager Web UI.");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption SSL_ENABLED> = $r26;

        $r27 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.tmpdir");

        $r28 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

        $r29 = virtualinvoke $r27.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r28);

        $r30 = newarray (java.lang.String)[1];

        $r30[0] = "jobmanager.web.tmpdir";

        $r31 = virtualinvoke $r29.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r30);

        $r32 = virtualinvoke $r31.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Flink web directory which is used by the webmonitor.");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption TMP_DIR> = $r32;

        $r33 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.upload.dir");

        $r34 = virtualinvoke $r33.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r35 = newarray (java.lang.String)[1];

        $r35[0] = "jobmanager.web.upload.dir";

        $r36 = virtualinvoke $r34.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r35);

        $r37 = virtualinvoke $r36.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Directory for uploading the job jars. If not specified a dynamic directory will be used under the directory specified by JOB_MANAGER_WEB_TMPDIR_KEY.");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption UPLOAD_DIR> = $r37;

        $r38 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.history");

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r40 = virtualinvoke $r38.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r39);

        $r41 = newarray (java.lang.String)[1];

        $r41[0] = "jobmanager.web.history";

        $r42 = virtualinvoke $r40.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r41);

        $r43 = virtualinvoke $r42.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Number of archived jobs for the JobManager.");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption ARCHIVE_COUNT> = $r43;

        $r44 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.log.path");

        $r45 = virtualinvoke $r44.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r46 = newarray (java.lang.String)[1];

        $r46[0] = "jobmanager.web.log.path";

        $r47 = virtualinvoke $r45.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r46);

        $r48 = virtualinvoke $r47.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Path to the log file (may be in /log for standalone but under log directory when using YARN).");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption LOG_PATH> = $r48;

        $r49 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.submit.enable");

        $r50 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r51 = virtualinvoke $r49.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r50);

        $r52 = newarray (java.lang.String)[1];

        $r52[0] = "jobmanager.web.submit.enable";

        $r53 = virtualinvoke $r51.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r52);

        $r54 = virtualinvoke $r53.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Flag indicating whether jobs can be uploaded and run from the web-frontend.");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption SUBMIT_ENABLE> = $r54;

        $r55 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.checkpoints.history");

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r57 = virtualinvoke $r55.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r56);

        $r58 = newarray (java.lang.String)[1];

        $r58[0] = "jobmanager.web.checkpoints.history";

        $r59 = virtualinvoke $r57.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r58);

        $r60 = virtualinvoke $r59.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Number of checkpoints to remember for recent history.");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption CHECKPOINTS_HISTORY_SIZE> = $r60;

        $r61 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.exception-history-size");

        $r62 = virtualinvoke $r61.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder intType()>();

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        $r64 = virtualinvoke $r62.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r63);

        $r65 = virtualinvoke $r64.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The maximum number of failures collected by the exception history per job.");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption MAX_EXCEPTION_HISTORY_SIZE> = $r65;

        $r66 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.backpressure.cleanup-interval");

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(600000);

        $r68 = virtualinvoke $r66.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r67);

        $r69 = newarray (java.lang.String)[1];

        $r69[0] = "jobmanager.web.backpressure.cleanup-interval";

        $r70 = virtualinvoke $r68.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r69);

        $r71 = virtualinvoke $r70.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("This config option is no longer used");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption BACKPRESSURE_CLEANUP_INTERVAL> = $r71;

        $r72 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.backpressure.refresh-interval");

        $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(60000);

        $r74 = virtualinvoke $r72.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r73);

        $r75 = newarray (java.lang.String)[1];

        $r75[0] = "jobmanager.web.backpressure.refresh-interval";

        $r76 = virtualinvoke $r74.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r75);

        $r77 = virtualinvoke $r76.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("This config option is no longer used");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption BACKPRESSURE_REFRESH_INTERVAL> = $r77;

        $r78 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.backpressure.num-samples");

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100);

        $r80 = virtualinvoke $r78.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r79);

        $r81 = newarray (java.lang.String)[1];

        $r81[0] = "jobmanager.web.backpressure.num-samples";

        $r82 = virtualinvoke $r80.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r81);

        $r83 = virtualinvoke $r82.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("This config option is no longer used");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption BACKPRESSURE_NUM_SAMPLES> = $r83;

        $r84 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.backpressure.delay-between-samples");

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(50);

        $r86 = virtualinvoke $r84.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r85);

        $r87 = newarray (java.lang.String)[1];

        $r87[0] = "jobmanager.web.backpressure.delay-between-samples";

        $r88 = virtualinvoke $r86.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r87);

        $r89 = virtualinvoke $r88.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("This config option is no longer used");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption BACKPRESSURE_DELAY> = $r89;

        $r90 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("web.timeout");

        $r91 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(600000L);

        $r92 = virtualinvoke $r90.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r91);

        $r93 = virtualinvoke $r92.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Timeout for asynchronous operations by the web monitor in milliseconds.");

        <org.apache.flink.configuration.WebOptions: org.apache.flink.configuration.ConfigOption TIMEOUT> = $r93;

        return;
    }
}
