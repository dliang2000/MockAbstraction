public class javassist.ClassMap extends java.util.HashMap
{
    private static final long serialVersionUID;
    private javassist.ClassMap parent;

    public void <init>()
    {
        javassist.ClassMap r0;

        r0 := @this: javassist.ClassMap;

        specialinvoke r0.<java.util.HashMap: void <init>()>();

        r0.<javassist.ClassMap: javassist.ClassMap parent> = null;

        return;
    }

    void <init>(javassist.ClassMap)
    {
        javassist.ClassMap r0, r1;

        r0 := @this: javassist.ClassMap;

        r1 := @parameter0: javassist.ClassMap;

        specialinvoke r0.<java.util.HashMap: void <init>()>();

        r0.<javassist.ClassMap: javassist.ClassMap parent> = r1;

        return;
    }

    public void put(javassist.CtClass, javassist.CtClass)
    {
        javassist.ClassMap r0;
        javassist.CtClass r1, r2;
        java.lang.String $r3, $r4;

        r0 := @this: javassist.ClassMap;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: javassist.CtClass;

        $r3 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $r4 = virtualinvoke r2.<javassist.CtClass: java.lang.String getName()>();

        virtualinvoke r0.<javassist.ClassMap: java.lang.String put(java.lang.String,java.lang.String)>($r3, $r4);

        return;
    }

    public java.lang.String put(java.lang.String, java.lang.String)
    {
        javassist.ClassMap r0;
        java.lang.String r1, r2, r3, r4, $r5, $r7;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: javassist.ClassMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != r2 goto label1;

        return r1;

     label1:
        r3 = staticinvoke <javassist.ClassMap: java.lang.String toJvmName(java.lang.String)>(r1);

        r4 = virtualinvoke r0.<javassist.ClassMap: java.lang.String get(java.lang.Object)>(r3);

        if r4 == null goto label2;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label3;

     label2:
        $r5 = staticinvoke <javassist.ClassMap: java.lang.String toJvmName(java.lang.String)>(r2);

        $r6 = specialinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r5);

        $r7 = (java.lang.String) $r6;

        return $r7;

     label3:
        return r4;
    }

    public void putIfNone(java.lang.String, java.lang.String)
    {
        javassist.ClassMap r0;
        java.lang.String r1, r2, r3, r4, $r5;

        r0 := @this: javassist.ClassMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != r2 goto label1;

        return;

     label1:
        r3 = staticinvoke <javassist.ClassMap: java.lang.String toJvmName(java.lang.String)>(r1);

        r4 = virtualinvoke r0.<javassist.ClassMap: java.lang.String get(java.lang.Object)>(r3);

        if r4 != null goto label2;

        $r5 = staticinvoke <javassist.ClassMap: java.lang.String toJvmName(java.lang.String)>(r2);

        specialinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r5);

     label2:
        return;
    }

    protected final java.lang.String put0(java.lang.String, java.lang.String)
    {
        javassist.ClassMap r0;
        java.lang.String r1, r2, $r4;
        java.lang.Object $r3;

        r0 := @this: javassist.ClassMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String get(java.lang.Object)
    {
        javassist.ClassMap r0, $r4, $r5;
        java.lang.Object r1, $r3;
        java.lang.String r2, $r6;

        r0 := @this: javassist.ClassMap;

        r1 := @parameter0: java.lang.Object;

        $r3 = specialinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.String) $r3;

        if r2 != null goto label1;

        $r4 = r0.<javassist.ClassMap: javassist.ClassMap parent>;

        if $r4 == null goto label1;

        $r5 = r0.<javassist.ClassMap: javassist.ClassMap parent>;

        $r6 = virtualinvoke $r5.<javassist.ClassMap: java.lang.String get(java.lang.Object)>(r1);

        return $r6;

     label1:
        return r2;
    }

    public void fix(javassist.CtClass)
    {
        javassist.ClassMap r0;
        javassist.CtClass r1;
        java.lang.String $r2;

        r0 := @this: javassist.ClassMap;

        r1 := @parameter0: javassist.CtClass;

        $r2 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        virtualinvoke r0.<javassist.ClassMap: void fix(java.lang.String)>($r2);

        return;
    }

    public void fix(java.lang.String)
    {
        javassist.ClassMap r0;
        java.lang.String r1, r2;

        r0 := @this: javassist.ClassMap;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <javassist.ClassMap: java.lang.String toJvmName(java.lang.String)>(r1);

        specialinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r2);

        return;
    }

    public static java.lang.String toJvmName(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String toJvmName(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.String toJavaName(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String toJavaName(java.lang.String)>(r0);

        return $r1;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        javassist.ClassMap r0;
        java.lang.Object r1, r2;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: javassist.ClassMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.lang.String) r2;

        $r5 = virtualinvoke r0.<javassist.ClassMap: java.lang.String put(java.lang.String,java.lang.String)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        javassist.ClassMap r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: javassist.ClassMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<javassist.ClassMap: java.lang.String get(java.lang.Object)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <javassist.ClassMap: long serialVersionUID> = 1L;

        return;
    }
}
