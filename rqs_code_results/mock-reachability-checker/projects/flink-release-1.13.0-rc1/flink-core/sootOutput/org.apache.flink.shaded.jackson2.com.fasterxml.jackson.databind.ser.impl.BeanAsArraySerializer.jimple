public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
{
    private static final long serialVersionUID;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) null;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>(r1, $r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer> = r1;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, java.util.Set)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase r1;
        java.util.Set r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        r2 := @parameter1: java.util.Set;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set)>(r1, r2, null);

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, java.util.Set, java.util.Set)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase r1;
        java.util.Set r2, r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: java.util.Set;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set)>(r1, r2, r3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer> = r1;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter r2;
        java.lang.Object r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(r1, r2, r3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer> = r1;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer)>(r1);

        return $r3;
    }

    public boolean isUnwrappingSerializer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        return 0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>(r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0, $r2;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(r0, $r3, r1);

        return $r2;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer withByNameInclusion(java.util.Set, java.util.Set)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0, $r3;
        java.util.Set r1, r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.util.Set;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set)>(r0, r1, r2);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] r1, r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];

        return r0;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        return r0;
    }

    public void serializeWithType(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;

        if $r6 == null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void _serializeWithObjectId(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(r1, r2, r3, r4);

        return;

     label1:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId _typeIdDef(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r4, r1, $r7);

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, r5);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void setCurrentValue(java.lang.Object)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeAsArray(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, r5);

        return;
    }

    public final void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r4);

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: boolean hasSingleElement(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r3);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeAsArray(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        return;

     label1:
        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeStartArray(java.lang.Object)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeAsArray(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();

        return;
    }

    private boolean hasSingleElement(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r2, r4;
        java.lang.Class $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class getActiveView()>();

        if $r3 == null goto label1;

        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        goto label2;

     label1:
        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

     label2:
        $i0 = lengthof r4;

        if $i0 != 1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    protected final void serializeAsArray(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] $r5, r12;
        java.lang.Class $r6;
        java.lang.Exception $r7;
        int $i0, $i1, i2, i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter $r8, $r10, r13;
        java.lang.StackOverflowError $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException$Reference $r11;
        java.lang.String $r15, $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException r18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        if $r5 == null goto label01;

        $r6 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class getActiveView()>();

        if $r6 == null goto label01;

        r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>;

        goto label02;

     label01:
        r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>;

     label02:
        i2 = 0;

     label03:
        i3 = lengthof r12;

     label04:
        if i2 >= i3 goto label07;

        r13 = r12[i2];

        if r13 != null goto label05;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();

        goto label06;

     label05:
        virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

     label06:
        i2 = i2 + 1;

        goto label04;

     label07:
        goto label14;

     label08:
        $r7 := @caughtexception;

        $i0 = lengthof r12;

        if i2 != $i0 goto label09;

        $r15 = "[anySetter]";

        goto label10;

     label09:
        $r8 = r12[i2];

        $r15 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();

     label10:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void wrapAndThrow(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(r3, $r7, r1, $r15);

        goto label14;

     label11:
        $r9 := @caughtexception;

        r18 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable)>(r2, "Infinite recursion (StackOverflowError)", $r9);

        $i1 = lengthof r12;

        if i2 != $i1 goto label12;

        $r19 = "[anySetter]";

        goto label13;

     label12:
        $r10 = r12[i2];

        $r19 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();

     label13:
        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException$Reference;

        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException$Reference: void <init>(java.lang.Object,java.lang.String)>(r1, $r19);

        virtualinvoke r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: void prependPath(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException$Reference)>($r11);

        throw r18;

     label14:
        return;

        catch java.lang.Exception from label03 to label07 with label08;
        catch java.lang.StackOverflowError from label03 to label07 with label11;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.lang.Class $r3;
        java.lang.String $r4, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BeanAsArraySerializer for ");

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: java.lang.Class handledType()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    protected volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set, java.util.Set)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0, $r3;
        java.util.Set r1, r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.util.Set;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer withByNameInclusion(java.util.Set,java.util.Set)>(r1, r2);

        return $r3;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: long serialVersionUID> = 1L;

        return;
    }
}
