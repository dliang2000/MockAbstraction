class org.joda.time.DateTimeZone$1 extends org.joda.time.chrono.BaseChronology
{
    private static final long serialVersionUID;

    void <init>()
    {
        org.joda.time.DateTimeZone$1 r0;

        r0 := @this: org.joda.time.DateTimeZone$1;

        specialinvoke r0.<org.joda.time.chrono.BaseChronology: void <init>()>();

        return;
    }

    public org.joda.time.DateTimeZone getZone()
    {
        org.joda.time.DateTimeZone$1 r0;

        r0 := @this: org.joda.time.DateTimeZone$1;

        return null;
    }

    public org.joda.time.Chronology withUTC()
    {
        org.joda.time.DateTimeZone$1 r0;

        r0 := @this: org.joda.time.DateTimeZone$1;

        return r0;
    }

    public org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)
    {
        org.joda.time.DateTimeZone$1 r0;
        org.joda.time.DateTimeZone r1;

        r0 := @this: org.joda.time.DateTimeZone$1;

        r1 := @parameter0: org.joda.time.DateTimeZone;

        return r0;
    }

    public java.lang.String toString()
    {
        org.joda.time.DateTimeZone$1 r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.DateTimeZone$1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.joda.time.DateTimeZone$1: long serialVersionUID> = -3128740902654445468L;

        return;
    }
}
