public class org.mockito.internal.junit.UniversalTestListener extends java.lang.Object implements org.mockito.internal.junit.MockitoTestListener
{
    private org.mockito.quality.Strictness currentStrictness;
    private final org.mockito.internal.util.MockitoLogger logger;
    private java.util.Map mocks;
    private org.mockito.internal.junit.DefaultStubbingLookupListener stubbingLookupListener;

    public void <init>(org.mockito.quality.Strictness, org.mockito.internal.util.MockitoLogger)
    {
        org.mockito.internal.junit.UniversalTestListener r0;
        org.mockito.quality.Strictness r1, $r5;
        org.mockito.internal.util.MockitoLogger r2;
        java.util.IdentityHashMap $r3;
        org.mockito.internal.junit.DefaultStubbingLookupListener $r4;

        r0 := @this: org.mockito.internal.junit.UniversalTestListener;

        r1 := @parameter0: org.mockito.quality.Strictness;

        r2 := @parameter1: org.mockito.internal.util.MockitoLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.IdentityHashMap;

        specialinvoke $r3.<java.util.IdentityHashMap: void <init>()>();

        r0.<org.mockito.internal.junit.UniversalTestListener: java.util.Map mocks> = $r3;

        r0.<org.mockito.internal.junit.UniversalTestListener: org.mockito.quality.Strictness currentStrictness> = r1;

        r0.<org.mockito.internal.junit.UniversalTestListener: org.mockito.internal.util.MockitoLogger logger> = r2;

        $r4 = new org.mockito.internal.junit.DefaultStubbingLookupListener;

        $r5 = r0.<org.mockito.internal.junit.UniversalTestListener: org.mockito.quality.Strictness currentStrictness>;

        specialinvoke $r4.<org.mockito.internal.junit.DefaultStubbingLookupListener: void <init>(org.mockito.quality.Strictness)>($r5);

        r0.<org.mockito.internal.junit.UniversalTestListener: org.mockito.internal.junit.DefaultStubbingLookupListener stubbingLookupListener> = $r4;

        return;
    }

    public void testFinished(org.mockito.internal.junit.TestFinishedEvent)
    {
        org.mockito.internal.junit.UniversalTestListener r0;
        org.mockito.internal.junit.TestFinishedEvent r1;
        java.util.Set r2;
        java.util.Map $r3;
        java.util.IdentityHashMap $r4;
        org.mockito.quality.Strictness $r5, $r11;
        int[] $r6;
        int $i0, $i1;
        org.mockito.internal.util.MockitoLogger $r7;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r13;

        r0 := @this: org.mockito.internal.junit.UniversalTestListener;

        r1 := @parameter0: org.mockito.internal.junit.TestFinishedEvent;

        $r3 = r0.<org.mockito.internal.junit.UniversalTestListener: java.util.Map mocks>;

        r2 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r4 = new java.util.IdentityHashMap;

        specialinvoke $r4.<java.util.IdentityHashMap: void <init>()>();

        r0.<org.mockito.internal.junit.UniversalTestListener: java.util.Map mocks> = $r4;

        $r6 = <org.mockito.internal.junit.UniversalTestListener$1: int[] $SwitchMap$org$mockito$quality$Strictness>;

        $r5 = r0.<org.mockito.internal.junit.UniversalTestListener: org.mockito.quality.Strictness currentStrictness>;

        $i0 = virtualinvoke $r5.<org.mockito.quality.Strictness: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r7 = r0.<org.mockito.internal.junit.UniversalTestListener: org.mockito.internal.util.MockitoLogger logger>;

        staticinvoke <org.mockito.internal.junit.UniversalTestListener: void emitWarnings(org.mockito.internal.util.MockitoLogger,org.mockito.internal.junit.TestFinishedEvent,java.util.Collection)>($r7, r1, r2);

        goto label5;

     label2:
        specialinvoke r0.<org.mockito.internal.junit.UniversalTestListener: void reportUnusedStubs(org.mockito.internal.junit.TestFinishedEvent,java.util.Collection)>(r1, r2);

        goto label5;

     label3:
        goto label5;

     label4:
        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown strictness: ");

        $r11 = r0.<org.mockito.internal.junit.UniversalTestListener: org.mockito.quality.Strictness currentStrictness>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label5:
        return;
    }

    private void reportUnusedStubs(org.mockito.internal.junit.TestFinishedEvent, java.util.Collection)
    {
        org.mockito.internal.junit.UniversalTestListener r0;
        org.mockito.internal.junit.TestFinishedEvent r1;
        java.util.Collection r2;
        org.mockito.internal.junit.UnusedStubbings r3;
        java.lang.Throwable $r4;
        org.mockito.internal.junit.DefaultStubbingLookupListener $r5;
        boolean $z0;
        org.mockito.internal.junit.UnusedStubbingsFinder $r6;

        r0 := @this: org.mockito.internal.junit.UniversalTestListener;

        r1 := @parameter0: org.mockito.internal.junit.TestFinishedEvent;

        r2 := @parameter1: java.util.Collection;

        $r4 = interfaceinvoke r1.<org.mockito.internal.junit.TestFinishedEvent: java.lang.Throwable getFailure()>();

        if $r4 != null goto label1;

        $r5 = r0.<org.mockito.internal.junit.UniversalTestListener: org.mockito.internal.junit.DefaultStubbingLookupListener stubbingLookupListener>;

        $z0 = virtualinvoke $r5.<org.mockito.internal.junit.DefaultStubbingLookupListener: boolean isMismatchesReported()>();

        if $z0 != 0 goto label1;

        $r6 = new org.mockito.internal.junit.UnusedStubbingsFinder;

        specialinvoke $r6.<org.mockito.internal.junit.UnusedStubbingsFinder: void <init>()>();

        r3 = virtualinvoke $r6.<org.mockito.internal.junit.UnusedStubbingsFinder: org.mockito.internal.junit.UnusedStubbings getUnusedStubbings(java.lang.Iterable)>(r2);

        virtualinvoke r3.<org.mockito.internal.junit.UnusedStubbings: void reportUnused()>();

     label1:
        return;
    }

    private static void emitWarnings(org.mockito.internal.util.MockitoLogger, org.mockito.internal.junit.TestFinishedEvent, java.util.Collection)
    {
        org.mockito.internal.util.MockitoLogger r0;
        org.mockito.internal.junit.TestFinishedEvent r1;
        java.util.Collection r2;
        java.lang.Throwable $r3;
        org.mockito.internal.junit.UnusedStubbingsFinder $r4;
        org.mockito.internal.junit.UnusedStubbings $r5;
        java.lang.String $r6, $r9;
        org.mockito.internal.junit.ArgMismatchFinder $r7;
        org.mockito.internal.junit.StubbingArgMismatches $r8;

        r0 := @parameter0: org.mockito.internal.util.MockitoLogger;

        r1 := @parameter1: org.mockito.internal.junit.TestFinishedEvent;

        r2 := @parameter2: java.util.Collection;

        $r3 = interfaceinvoke r1.<org.mockito.internal.junit.TestFinishedEvent: java.lang.Throwable getFailure()>();

        if $r3 == null goto label1;

        $r7 = new org.mockito.internal.junit.ArgMismatchFinder;

        specialinvoke $r7.<org.mockito.internal.junit.ArgMismatchFinder: void <init>()>();

        $r8 = virtualinvoke $r7.<org.mockito.internal.junit.ArgMismatchFinder: org.mockito.internal.junit.StubbingArgMismatches getStubbingArgMismatches(java.lang.Iterable)>(r2);

        $r9 = interfaceinvoke r1.<org.mockito.internal.junit.TestFinishedEvent: java.lang.String getTestName()>();

        virtualinvoke $r8.<org.mockito.internal.junit.StubbingArgMismatches: void format(java.lang.String,org.mockito.internal.util.MockitoLogger)>($r9, r0);

        goto label2;

     label1:
        $r4 = new org.mockito.internal.junit.UnusedStubbingsFinder;

        specialinvoke $r4.<org.mockito.internal.junit.UnusedStubbingsFinder: void <init>()>();

        $r5 = virtualinvoke $r4.<org.mockito.internal.junit.UnusedStubbingsFinder: org.mockito.internal.junit.UnusedStubbings getUnusedStubbings(java.lang.Iterable)>(r2);

        $r6 = interfaceinvoke r1.<org.mockito.internal.junit.TestFinishedEvent: java.lang.String getTestName()>();

        virtualinvoke $r5.<org.mockito.internal.junit.UnusedStubbings: void format(java.lang.String,org.mockito.internal.util.MockitoLogger)>($r6, r0);

     label2:
        return;
    }

    public void onMockCreated(java.lang.Object, org.mockito.mock.MockCreationSettings)
    {
        org.mockito.internal.junit.UniversalTestListener r0;
        java.lang.Object r1;
        org.mockito.mock.MockCreationSettings r2;
        java.util.Map $r3;
        org.mockito.internal.creation.settings.CreationSettings $r5;
        java.util.List $r6;
        org.mockito.internal.junit.DefaultStubbingLookupListener $r7;

        r0 := @this: org.mockito.internal.junit.UniversalTestListener;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.mockito.mock.MockCreationSettings;

        $r3 = r0.<org.mockito.internal.junit.UniversalTestListener: java.util.Map mocks>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (org.mockito.internal.creation.settings.CreationSettings) r2;

        $r6 = virtualinvoke $r5.<org.mockito.internal.creation.settings.CreationSettings: java.util.List getStubbingLookupListeners()>();

        $r7 = r0.<org.mockito.internal.junit.UniversalTestListener: org.mockito.internal.junit.DefaultStubbingLookupListener stubbingLookupListener>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;
    }

    public void setStrictness(org.mockito.quality.Strictness)
    {
        org.mockito.internal.junit.UniversalTestListener r0;
        org.mockito.quality.Strictness r1;
        org.mockito.internal.junit.DefaultStubbingLookupListener $r2;

        r0 := @this: org.mockito.internal.junit.UniversalTestListener;

        r1 := @parameter0: org.mockito.quality.Strictness;

        r0.<org.mockito.internal.junit.UniversalTestListener: org.mockito.quality.Strictness currentStrictness> = r1;

        $r2 = r0.<org.mockito.internal.junit.UniversalTestListener: org.mockito.internal.junit.DefaultStubbingLookupListener stubbingLookupListener>;

        virtualinvoke $r2.<org.mockito.internal.junit.DefaultStubbingLookupListener: void setCurrentStrictness(org.mockito.quality.Strictness)>(r1);

        return;
    }
}
