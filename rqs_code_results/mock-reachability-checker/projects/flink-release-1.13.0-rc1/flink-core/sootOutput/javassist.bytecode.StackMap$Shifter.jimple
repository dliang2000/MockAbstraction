class javassist.bytecode.StackMap$Shifter extends javassist.bytecode.StackMap$Walker
{
    private int where;
    private int gap;
    private boolean exclusive;

    public void <init>(javassist.bytecode.StackMap, int, int, boolean)
    {
        javassist.bytecode.StackMap$Shifter r0;
        javassist.bytecode.StackMap r1;
        int i0, i1;
        boolean z0;

        r0 := @this: javassist.bytecode.StackMap$Shifter;

        r1 := @parameter0: javassist.bytecode.StackMap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<javassist.bytecode.StackMap$Walker: void <init>(javassist.bytecode.StackMap)>(r1);

        r0.<javassist.bytecode.StackMap$Shifter: int where> = i0;

        r0.<javassist.bytecode.StackMap$Shifter: int gap> = i1;

        r0.<javassist.bytecode.StackMap$Shifter: boolean exclusive> = z0;

        return;
    }

    public int locals(int, int, int)
    {
        javassist.bytecode.StackMap$Shifter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        byte[] $r1;

        r0 := @this: javassist.bytecode.StackMap$Shifter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = r0.<javassist.bytecode.StackMap$Shifter: boolean exclusive>;

        if $z0 == 0 goto label1;

        $i7 = r0.<javassist.bytecode.StackMap$Shifter: int where>;

        if $i7 > i1 goto label3;

        goto label2;

     label1:
        $i3 = r0.<javassist.bytecode.StackMap$Shifter: int where>;

        if $i3 >= i1 goto label3;

     label2:
        $i4 = r0.<javassist.bytecode.StackMap$Shifter: int gap>;

        $i6 = i1 + $i4;

        $r1 = r0.<javassist.bytecode.StackMap$Shifter: byte[] info>;

        $i5 = i0 - 4;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i6, $r1, $i5);

     label3:
        $i8 = specialinvoke r0.<javassist.bytecode.StackMap$Walker: int locals(int,int,int)>(i0, i1, i2);

        return $i8;
    }

    public void uninitialized(int, int)
    {
        javassist.bytecode.StackMap$Shifter r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        byte[] $r1;

        r0 := @this: javassist.bytecode.StackMap$Shifter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<javassist.bytecode.StackMap$Shifter: int where>;

        if $i2 > i1 goto label1;

        $i3 = r0.<javassist.bytecode.StackMap$Shifter: int gap>;

        $i5 = i1 + $i3;

        $r1 = r0.<javassist.bytecode.StackMap$Shifter: byte[] info>;

        $i4 = i0 + 1;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i5, $r1, $i4);

     label1:
        return;
    }
}
