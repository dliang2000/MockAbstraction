public class org.apache.flink.core.fs.PluginFileSystemFactory extends java.lang.Object implements org.apache.flink.core.fs.FileSystemFactory
{
    private final org.apache.flink.core.fs.FileSystemFactory inner;
    private final java.lang.ClassLoader loader;

    private void <init>(org.apache.flink.core.fs.FileSystemFactory, java.lang.ClassLoader)
    {
        org.apache.flink.core.fs.PluginFileSystemFactory r0;
        org.apache.flink.core.fs.FileSystemFactory r1;
        java.lang.ClassLoader r2;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory;

        r1 := @parameter0: org.apache.flink.core.fs.FileSystemFactory;

        r2 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.core.fs.PluginFileSystemFactory: org.apache.flink.core.fs.FileSystemFactory inner> = r1;

        r0.<org.apache.flink.core.fs.PluginFileSystemFactory: java.lang.ClassLoader loader> = r2;

        return;
    }

    public static org.apache.flink.core.fs.PluginFileSystemFactory of(org.apache.flink.core.fs.FileSystemFactory)
    {
        org.apache.flink.core.fs.FileSystemFactory r0;
        org.apache.flink.core.fs.PluginFileSystemFactory $r1;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;

        r0 := @parameter0: org.apache.flink.core.fs.FileSystemFactory;

        $r1 = new org.apache.flink.core.fs.PluginFileSystemFactory;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r1.<org.apache.flink.core.fs.PluginFileSystemFactory: void <init>(org.apache.flink.core.fs.FileSystemFactory,java.lang.ClassLoader)>(r0, $r3);

        return $r1;
    }

    public java.lang.String getScheme()
    {
        org.apache.flink.core.fs.PluginFileSystemFactory r0;
        org.apache.flink.core.fs.FileSystemFactory $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory;

        $r1 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory: org.apache.flink.core.fs.FileSystemFactory inner>;

        $r2 = interfaceinvoke $r1.<org.apache.flink.core.fs.FileSystemFactory: java.lang.String getScheme()>();

        return $r2;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        org.apache.flink.core.fs.PluginFileSystemFactory r0;
        org.apache.flink.core.fs.FileSystemFactory $r1;
        java.lang.ClassLoader $r2;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory;

        $r1 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory: org.apache.flink.core.fs.FileSystemFactory inner>;

        $r2 = interfaceinvoke $r1.<org.apache.flink.core.fs.FileSystemFactory: java.lang.ClassLoader getClassLoader()>();

        return $r2;
    }

    public void configure(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.core.fs.PluginFileSystemFactory r0;
        org.apache.flink.configuration.Configuration r1;
        org.apache.flink.core.fs.FileSystemFactory $r2;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        $r2 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory: org.apache.flink.core.fs.FileSystemFactory inner>;

        interfaceinvoke $r2.<org.apache.flink.core.fs.FileSystemFactory: void configure(org.apache.flink.configuration.Configuration)>(r1);

        return;
    }

    public org.apache.flink.core.fs.FileSystem create(java.net.URI) throws java.io.IOException
    {
        org.apache.flink.core.fs.PluginFileSystemFactory r0;
        java.net.URI r1;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.ClassLoader $r6, $r10;
        org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem $r7;
        org.apache.flink.core.fs.FileSystemFactory $r8;
        org.apache.flink.core.fs.FileSystem $r9;
        java.lang.Throwable $r11, $r12, $r14, r15;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory;

        r1 := @parameter0: java.net.URI;

        $r6 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory: java.lang.ClassLoader loader>;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r6);

        r15 = null;

     label01:
        $r7 = new org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem;

        $r8 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory: org.apache.flink.core.fs.FileSystemFactory inner>;

        $r9 = interfaceinvoke $r8.<org.apache.flink.core.fs.FileSystemFactory: org.apache.flink.core.fs.FileSystem create(java.net.URI)>(r1);

        $r10 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory: java.lang.ClassLoader loader>;

        specialinvoke $r7.<org.apache.flink.core.fs.PluginFileSystemFactory$ClassLoaderFixingFileSystem: void <init>(org.apache.flink.core.fs.FileSystem,java.lang.ClassLoader,org.apache.flink.core.fs.PluginFileSystemFactory$1)>($r9, $r10, null);

     label02:
        if r2 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return $r7;

     label05:
        $r14 := @caughtexception;

        r15 = $r14;

        throw $r14;

     label06:
        $r11 := @caughtexception;

     label07:
        if r2 == null goto label12;

        if r15 == null goto label11;

     label08:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r12 := @caughtexception;

        virtualinvoke r15.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r12);

        goto label12;

     label11:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }

    public java.lang.String toString()
    {
        org.apache.flink.core.fs.PluginFileSystemFactory r0;
        java.lang.Object[] $r1;
        org.apache.flink.core.fs.FileSystemFactory $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.flink.core.fs.PluginFileSystemFactory;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<org.apache.flink.core.fs.PluginFileSystemFactory: org.apache.flink.core.fs.FileSystemFactory inner>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r1[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Plugin %s", $r1);

        return $r5;
    }
}
