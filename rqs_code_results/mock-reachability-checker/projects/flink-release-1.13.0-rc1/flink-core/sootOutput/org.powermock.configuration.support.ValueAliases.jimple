class org.powermock.configuration.support.ValueAliases extends java.lang.Object
{
    private final java.util.Map alias;

    void <init>(java.util.Map)
    {
        org.powermock.configuration.support.ValueAliases r0;
        java.util.Map r1;

        r0 := @this: org.powermock.configuration.support.ValueAliases;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.powermock.configuration.support.ValueAliases: java.util.Map alias> = r1;

        return;
    }

    java.lang.String findValue(java.lang.String)
    {
        org.powermock.configuration.support.ValueAliases r0;
        java.lang.String r1, $r5;
        java.util.Map $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.powermock.configuration.support.ValueAliases;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.powermock.configuration.support.ValueAliases: java.util.Map alias>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.powermock.configuration.support.ValueAliases: java.util.Map alias>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.lang.String) $r4;

        return $r5;

     label1:
        return r1;
    }
}
