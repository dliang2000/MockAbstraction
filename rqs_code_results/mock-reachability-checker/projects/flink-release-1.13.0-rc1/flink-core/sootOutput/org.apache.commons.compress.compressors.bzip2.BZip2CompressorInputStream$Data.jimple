final class org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data extends java.lang.Object
{
    final boolean[] inUse;
    final byte[] seqToUnseq;
    final byte[] selector;
    final byte[] selectorMtf;
    final int[] unzftab;
    final int[][] limit;
    final int[][] base;
    final int[][] perm;
    final int[] minLens;
    final int[] cftab;
    final char[] getAndMoveToFrontDecode_yy;
    final char[][] temp_charArray2d;
    final byte[] recvDecodingTables_pos;
    int[] tt;
    byte[] ll8;

    void <init>(int)
    {
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data r0;
        int i0, $i1;
        boolean[] $r1;
        byte[] $r2, $r3, $r4, $r13, $r14;
        int[] $r5, $r9, $r10;
        int[][] $r6, $r7, $r8;
        char[] $r11;
        char[][] $r12;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (boolean)[256];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: boolean[] inUse> = $r1;

        $r2 = newarray (byte)[256];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] seqToUnseq> = $r2;

        $r3 = newarray (byte)[18002];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] selector> = $r3;

        $r4 = newarray (byte)[18002];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] selectorMtf> = $r4;

        $r5 = newarray (int)[256];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] unzftab> = $r5;

        $r6 = newmultiarray (int)[6][258];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] limit> = $r6;

        $r7 = newmultiarray (int)[6][258];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] base> = $r7;

        $r8 = newmultiarray (int)[6][258];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] perm> = $r8;

        $r9 = newarray (int)[6];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] minLens> = $r9;

        $r10 = newarray (int)[257];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] cftab> = $r10;

        $r11 = newarray (char)[256];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: char[] getAndMoveToFrontDecode_yy> = $r11;

        $r12 = newmultiarray (char)[6][258];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: char[][] temp_charArray2d> = $r12;

        $r13 = newarray (byte)[6];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] recvDecodingTables_pos> = $r13;

        $i1 = i0 * 100000;

        $r14 = newarray (byte)[$i1];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] ll8> = $r14;

        return;
    }

    int[] initTT(int)
    {
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data r0;
        int i0, $i1;
        int[] $r1, r2;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data;

        i0 := @parameter0: int;

        r2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] tt>;

        if r2 == null goto label1;

        $i1 = lengthof r2;

        if $i1 >= i0 goto label2;

     label1:
        $r1 = newarray (int)[i0];

        r2 = $r1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] tt> = $r1;

     label2:
        return r2;
    }
}
