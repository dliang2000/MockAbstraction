public class org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest extends org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest r0;
        org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest;

        $r1 = <org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo: org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo BOOLEAN_PRIMITIVE_ARRAY_TYPE_INFO>;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase: void <init>(org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo)>($r1);

        return;
    }

    protected void deepEquals(java.lang.String, boolean[], boolean[])
    {
        org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest r0;
        java.lang.String r1;
        boolean[] r2, r3;
        int $i0, $i1, i2, $i3;
        boolean $z0, $z1, $z2;
        java.lang.Boolean $r4, $r5;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: boolean[];

        r3 := @parameter2: boolean[];

        $i1 = lengthof r2;

        $i0 = lengthof r3;

        if $i1 != $i0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        i2 = 0;

     label3:
        $i3 = lengthof r2;

        if i2 >= $i3 goto label4;

        $z0 = r2[i2];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = r3[i2];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r5);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    protected boolean[][] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest r0;
        boolean[][] $r1;
        boolean[] $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest;

        $r1 = newarray (boolean[])[4];

        $r2 = newarray (boolean)[2];

        $r2[0] = 0;

        $r2[1] = 0;

        $r1[0] = $r2;

        $r3 = newarray (boolean)[2];

        $r3[0] = 0;

        $r3[1] = 1;

        $r1[1] = $r3;

        $r4 = newarray (boolean)[3];

        $r4[0] = 0;

        $r4[1] = 1;

        $r4[2] = 1;

        $r1[2] = $r4;

        $r5 = newarray (boolean)[1];

        $r5[0] = 1;

        $r1[3] = $r5;

        return $r1;
    }

    protected volatile void deepEquals(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        boolean[] $r4, $r5;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = (boolean[]) r2;

        $r4 = (boolean[]) r3;

        virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest: void deepEquals(java.lang.String,boolean[],boolean[])>(r1, $r5, $r4);

        return;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest r0;
        boolean[][] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparatorTest: boolean[][] getSortedTestData()>();

        return $r1;
    }
}
