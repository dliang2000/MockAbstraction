public class javassist.compiler.ast.CondExpr extends javassist.compiler.ast.ASTList
{
    private static final long serialVersionUID;

    public void <init>(javassist.compiler.ast.ASTree, javassist.compiler.ast.ASTree, javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.CondExpr r0;
        javassist.compiler.ast.ASTree r1, r2, r3;
        javassist.compiler.ast.ASTList $r4, $r5;

        r0 := @this: javassist.compiler.ast.CondExpr;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        r2 := @parameter1: javassist.compiler.ast.ASTree;

        r3 := @parameter2: javassist.compiler.ast.ASTree;

        $r4 = new javassist.compiler.ast.ASTList;

        $r5 = new javassist.compiler.ast.ASTList;

        specialinvoke $r5.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree)>(r3);

        specialinvoke $r4.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTList)>(r2, $r5);

        specialinvoke r0.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTList)>(r1, $r4);

        return;
    }

    public javassist.compiler.ast.ASTree condExpr()
    {
        javassist.compiler.ast.CondExpr r0;
        javassist.compiler.ast.ASTree $r1;

        r0 := @this: javassist.compiler.ast.CondExpr;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.CondExpr: javassist.compiler.ast.ASTree head()>();

        return $r1;
    }

    public void setCond(javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.CondExpr r0;
        javassist.compiler.ast.ASTree r1;

        r0 := @this: javassist.compiler.ast.CondExpr;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        virtualinvoke r0.<javassist.compiler.ast.CondExpr: void setHead(javassist.compiler.ast.ASTree)>(r1);

        return;
    }

    public javassist.compiler.ast.ASTree thenExpr()
    {
        javassist.compiler.ast.CondExpr r0;
        javassist.compiler.ast.ASTList $r1;
        javassist.compiler.ast.ASTree $r2;

        r0 := @this: javassist.compiler.ast.CondExpr;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.CondExpr: javassist.compiler.ast.ASTList tail()>();

        $r2 = virtualinvoke $r1.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        return $r2;
    }

    public void setThen(javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.CondExpr r0;
        javassist.compiler.ast.ASTree r1;
        javassist.compiler.ast.ASTList $r2;

        r0 := @this: javassist.compiler.ast.CondExpr;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        $r2 = virtualinvoke r0.<javassist.compiler.ast.CondExpr: javassist.compiler.ast.ASTList tail()>();

        virtualinvoke $r2.<javassist.compiler.ast.ASTList: void setHead(javassist.compiler.ast.ASTree)>(r1);

        return;
    }

    public javassist.compiler.ast.ASTree elseExpr()
    {
        javassist.compiler.ast.CondExpr r0;
        javassist.compiler.ast.ASTList $r1, $r2;
        javassist.compiler.ast.ASTree $r3;

        r0 := @this: javassist.compiler.ast.CondExpr;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.CondExpr: javassist.compiler.ast.ASTList tail()>();

        $r2 = virtualinvoke $r1.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        $r3 = virtualinvoke $r2.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        return $r3;
    }

    public void setElse(javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.CondExpr r0;
        javassist.compiler.ast.ASTree r1;
        javassist.compiler.ast.ASTList $r2, $r3;

        r0 := @this: javassist.compiler.ast.CondExpr;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        $r2 = virtualinvoke r0.<javassist.compiler.ast.CondExpr: javassist.compiler.ast.ASTList tail()>();

        $r3 = virtualinvoke $r2.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        virtualinvoke $r3.<javassist.compiler.ast.ASTList: void setHead(javassist.compiler.ast.ASTree)>(r1);

        return;
    }

    public java.lang.String getTag()
    {
        javassist.compiler.ast.CondExpr r0;

        r0 := @this: javassist.compiler.ast.CondExpr;

        return "?:";
    }

    public void accept(javassist.compiler.ast.Visitor) throws javassist.compiler.CompileError
    {
        javassist.compiler.ast.CondExpr r0;
        javassist.compiler.ast.Visitor r1;

        r0 := @this: javassist.compiler.ast.CondExpr;

        r1 := @parameter0: javassist.compiler.ast.Visitor;

        virtualinvoke r1.<javassist.compiler.ast.Visitor: void atCondExpr(javassist.compiler.ast.CondExpr)>(r0);

        return;
    }

    public static void <clinit>()
    {
        <javassist.compiler.ast.CondExpr: long serialVersionUID> = 1L;

        return;
    }
}
