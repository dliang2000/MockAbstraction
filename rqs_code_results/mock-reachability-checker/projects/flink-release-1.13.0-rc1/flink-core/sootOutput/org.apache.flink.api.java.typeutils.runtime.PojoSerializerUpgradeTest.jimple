public class org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTest extends org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase
{

    public void <init>(org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification)
    {
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTest r0;
        org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTest;

        r1 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase: void <init>(org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification)>(r1);

        return;
    }

    public static java.util.Collection testSpecifications() throws java.lang.Exception
    {
        java.util.Iterator r2;
        org.apache.flink.testutils.migration.MigrationVersion r3, $r6, $r7, $r8;
        java.util.ArrayList $r4, $r5;
        org.apache.flink.testutils.migration.MigrationVersion[] $r9;
        java.util.List $r10;
        boolean $z4;
        java.lang.Object $r11;
        org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = <org.apache.flink.testutils.migration.MigrationVersion: org.apache.flink.testutils.migration.MigrationVersion v1_7>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = <org.apache.flink.testutils.migration.MigrationVersion: org.apache.flink.testutils.migration.MigrationVersion v1_8>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = <org.apache.flink.testutils.migration.MigrationVersion: org.apache.flink.testutils.migration.MigrationVersion v1_9>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = <org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTest: org.apache.flink.testutils.migration.MigrationVersion[] MIGRATION_VERSIONS>;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r10);

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label2;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.flink.testutils.migration.MigrationVersion) $r11;

        $r12 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r12.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("pojo-serializer-identical-schema", r3, class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$IdenticalPojoSchemaSetup;", class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$IdenticalPojoSchemaVerifier;");

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        $r13 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r13.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("pojo-serializer-with-modified-schema", r3, class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$ModifiedPojoSchemaSetup;", class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$ModifiedPojoSchemaVerifier;");

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        $r14 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r14.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("pojo-serializer-with-different-field-types", r3, class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSchemaSetup;", class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSchemaVerifier;");

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $r15 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r15.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("pojo-serializer-with-modified-schema-in-registered-subclass", r3, class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaSetup;", class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$ModifiedRegisteredPojoSubclassSchemaVerifier;");

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        $r16 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r16.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("pojo-serializer-with-different-field-types-in-registered-subclass", r3, class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup;", class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaVerifier;");

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        $r17 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r17.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("pojo-serializer-with-non-registered-subclass", r3, class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$NonRegisteredPojoSubclassSetup;", class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$NonRegisteredPojoSubclassVerifier;");

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        $r18 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r18.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("pojo-serializer-with-different-subclass-registration-order", r3, class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$DifferentPojoSubclassRegistrationOrderSetup;", class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$DifferentPojoSubclassRegistrationOrderVerifier;");

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        $r19 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r19.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("pojo-serializer-with-missing-registered-subclass", r3, class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$MissingRegisteredPojoSubclassSetup;", class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$MissingRegisteredPojoSubclassVerifier;");

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        $r20 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r20.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("pojo-serializer-with-new-registered-subclass", r3, class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$NewRegisteredPojoSubclassSetup;", class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$NewRegisteredPojoSubclassVerifier;");

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        $r21 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r21.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("pojo-serializer-with-new-and-missing-registered-subclasses", r3, class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$NewAndMissingRegisteredPojoSubclassesSetup;", class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$NewAndMissingRegisteredPojoSubclassesVerifier;");

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        goto label1;

     label2:
        return $r4;
    }
}
