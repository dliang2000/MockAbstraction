public class org.apache.flink.util.LongValueSequenceIterator extends org.apache.flink.util.SplittableIterator
{
    private static final long serialVersionUID;
    private final long 'to';
    private long current;
    private org.apache.flink.types.LongValue currentValue;

    public void <init>(long, long)
    {
        org.apache.flink.util.LongValueSequenceIterator r0;
        long l0, l1;
        org.apache.flink.types.LongValue $r1;
        byte $b2;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.flink.util.LongValueSequenceIterator;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<org.apache.flink.util.SplittableIterator: void <init>()>();

        $r1 = new org.apache.flink.types.LongValue;

        specialinvoke $r1.<org.apache.flink.types.LongValue: void <init>()>();

        r0.<org.apache.flink.util.LongValueSequenceIterator: org.apache.flink.types.LongValue currentValue> = $r1;

        $b2 = l0 cmp l1;

        if $b2 <= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'to\' value must not be smaller than the \'from\' value.");

        throw $r2;

     label1:
        r0.<org.apache.flink.util.LongValueSequenceIterator: long current> = l0;

        r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'> = l1;

        return;
    }

    private void <init>(long, long, boolean)
    {
        org.apache.flink.util.LongValueSequenceIterator r0;
        long l0, l1;
        boolean z0;
        org.apache.flink.types.LongValue $r1;

        r0 := @this: org.apache.flink.util.LongValueSequenceIterator;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.flink.util.SplittableIterator: void <init>()>();

        $r1 = new org.apache.flink.types.LongValue;

        specialinvoke $r1.<org.apache.flink.types.LongValue: void <init>()>();

        r0.<org.apache.flink.util.LongValueSequenceIterator: org.apache.flink.types.LongValue currentValue> = $r1;

        r0.<org.apache.flink.util.LongValueSequenceIterator: long current> = l0;

        r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'> = l1;

        return;
    }

    public long getCurrent()
    {
        org.apache.flink.util.LongValueSequenceIterator r0;
        long $l0;

        r0 := @this: org.apache.flink.util.LongValueSequenceIterator;

        $l0 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        return $l0;
    }

    public long getTo()
    {
        org.apache.flink.util.LongValueSequenceIterator r0;
        long $l0;

        r0 := @this: org.apache.flink.util.LongValueSequenceIterator;

        $l0 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        return $l0;
    }

    public boolean hasNext()
    {
        org.apache.flink.util.LongValueSequenceIterator r0;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

        r0 := @this: org.apache.flink.util.LongValueSequenceIterator;

        $l1 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l0 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $b2 = $l1 cmp $l0;

        if $b2 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.flink.types.LongValue next()
    {
        org.apache.flink.util.LongValueSequenceIterator r0;
        long $l0, $l1, $l3, $l4;
        byte $b2;
        java.util.NoSuchElementException $r1;
        org.apache.flink.types.LongValue $r2, $r3;

        r0 := @this: org.apache.flink.util.LongValueSequenceIterator;

        $l1 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l0 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $b2 = $l1 cmp $l0;

        if $b2 > 0 goto label1;

        $r2 = r0.<org.apache.flink.util.LongValueSequenceIterator: org.apache.flink.types.LongValue currentValue>;

        $l3 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l4 = $l3 + 1L;

        r0.<org.apache.flink.util.LongValueSequenceIterator: long current> = $l4;

        virtualinvoke $r2.<org.apache.flink.types.LongValue: void setValue(long)>($l3);

        $r3 = r0.<org.apache.flink.util.LongValueSequenceIterator: org.apache.flink.types.LongValue currentValue>;

        return $r3;

     label1:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    public void remove()
    {
        org.apache.flink.util.LongValueSequenceIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.flink.util.LongValueSequenceIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public org.apache.flink.util.LongValueSequenceIterator[] split(int)
    {
        org.apache.flink.util.LongValueSequenceIterator r0, $r2, $r3, $r5, $r6, $r9;
        int i0, i56;
        long $l1, $l2, $l3, $l4, $l6, $l8, $l9, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l29, $l30, $l31, $l32, $l33, $l35, $l36, $l37, $l38, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, l48, l49, l50, $l51, $l52, l54, l55, $l57, l59, l60;
        byte $b5, $b7, $b10, $b28, $b34, $b53, $b58;
        org.apache.flink.util.LongValueSequenceIterator[] $r1, $r8, r11;
        java.lang.RuntimeException $r4, $r7;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: org.apache.flink.util.LongValueSequenceIterator;

        i0 := @parameter0: int;

        if i0 >= 1 goto label01;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The number of partitions must be at least 1.");

        throw $r10;

     label01:
        if i0 != 1 goto label02;

        $r8 = newarray (org.apache.flink.util.LongValueSequenceIterator)[1];

        $r9 = new org.apache.flink.util.LongValueSequenceIterator;

        $l47 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l46 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        specialinvoke $r9.<org.apache.flink.util.LongValueSequenceIterator: void <init>(long,long)>($l47, $l46);

        $r8[0] = $r9;

        return $r8;

     label02:
        $l2 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $l1 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l3 = $l2 - $l1;

        $l4 = $l3 + 1L;

        $b5 = $l4 cmp 0L;

        if $b5 < 0 goto label03;

        $l42 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $l41 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l43 = $l42 - $l41;

        $l45 = $l43 + 1L;

        $l44 = (long) i0;

        l48 = $l45 / $l44;

        goto label07;

     label03:
        $l6 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $b7 = $l6 cmp -9223372036854775808L;

        if $b7 != 0 goto label04;

        $l39 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $l40 = $l39 / 2L;

        l49 = 4611686018427387904L + $l40;

        goto label06;

     label04:
        $l8 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        l50 = neg $l8;

        $l9 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $b10 = l50 cmp $l9;

        if $b10 <= 0 goto label05;

        $l38 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $l35 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $l36 = l50 - $l35;

        $l37 = $l36 / 2L;

        l49 = $l38 + $l37;

        goto label06;

     label05:
        $l11 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $l12 = $l11 - l50;

        $l13 = $l12 / 2L;

        l49 = l50 + $l13;

     label06:
        $l51 = (long) i0;

        $l52 = l49 / $l51;

        l48 = $l52 * 2L;

     label07:
        $b53 = l48 cmp 9223372036854775807L;

        if $b53 >= 0 goto label12;

        $l20 = (long) i0;

        $l21 = l48 * $l20;

        $l23 = neg $l21;

        $l22 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $l25 = $l23 + $l22;

        $l24 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l26 = $l25 - $l24;

        l54 = $l26 + 1L;

        $l27 = (long) i0;

        $b28 = l54 cmp $l27;

        if $b28 <= 0 goto label08;

        l48 = l48 + 1L;

        $l32 = (long) i0;

        l54 = l54 - $l32;

        $l33 = (long) i0;

        $b34 = l54 cmp $l33;

        if $b34 <= 0 goto label08;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Bug in splitting logic. To much rounding loss.");

        throw $r7;

     label08:
        r11 = newarray (org.apache.flink.util.LongValueSequenceIterator)[i0];

        l55 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        i56 = 0;

     label09:
        $l57 = (long) i56;

        $b58 = $l57 cmp l54;

        if $b58 >= 0 goto label10;

        $l30 = l55 + l48;

        l59 = $l30 + 1L;

        $r6 = new org.apache.flink.util.LongValueSequenceIterator;

        $l31 = l59 - 1L;

        specialinvoke $r6.<org.apache.flink.util.LongValueSequenceIterator: void <init>(long,long)>(l55, $l31);

        r11[i56] = $r6;

        l55 = l59;

        i56 = i56 + 1;

        goto label09;

     label10:
        if i56 >= i0 goto label11;

        l60 = l55 + l48;

        $r5 = new org.apache.flink.util.LongValueSequenceIterator;

        $l29 = l60 - 1L;

        specialinvoke $r5.<org.apache.flink.util.LongValueSequenceIterator: void <init>(long,long,boolean)>(l55, $l29, 1);

        r11[i56] = $r5;

        l55 = l60;

        i56 = i56 + 1;

        goto label10;

     label11:
        return r11;

     label12:
        if i0 == 2 goto label13;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Bug in splitting logic.");

        throw $r4;

     label13:
        $r1 = newarray (org.apache.flink.util.LongValueSequenceIterator)[2];

        $r2 = new org.apache.flink.util.LongValueSequenceIterator;

        $l16 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l14 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l15 = $l14 + l48;

        specialinvoke $r2.<org.apache.flink.util.LongValueSequenceIterator: void <init>(long,long)>($l16, $l15);

        $r1[0] = $r2;

        $r3 = new org.apache.flink.util.LongValueSequenceIterator;

        $l17 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l19 = $l17 + l48;

        $l18 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        specialinvoke $r3.<org.apache.flink.util.LongValueSequenceIterator: void <init>(long,long)>($l19, $l18);

        $r1[1] = $r3;

        return $r1;
    }

    public int getMaximumNumberOfSplits()
    {
        org.apache.flink.util.LongValueSequenceIterator r0;
        long $l0, $l2, $l4, $l5, $l6, $l7, $l9, $l10, $l11, $l12;
        byte $b1, $b3, $b8;
        int $i13;

        r0 := @this: org.apache.flink.util.LongValueSequenceIterator;

        $l0 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $b1 = $l0 cmp 2147483647L;

        if $b1 >= 0 goto label1;

        $l2 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $b3 = $l2 cmp -2147483648L;

        if $b3 <= 0 goto label1;

        $l5 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $l4 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l6 = $l5 - $l4;

        $l7 = $l6 + 1L;

        $b8 = $l7 cmp 2147483647L;

        if $b8 < 0 goto label2;

     label1:
        return 2147483647;

     label2:
        $l10 = r0.<org.apache.flink.util.LongValueSequenceIterator: long 'to'>;

        $l9 = r0.<org.apache.flink.util.LongValueSequenceIterator: long current>;

        $l11 = $l10 - $l9;

        $l12 = $l11 + 1L;

        $i13 = (int) $l12;

        return $i13;
    }

    public volatile java.util.Iterator[] split(int)
    {
        org.apache.flink.util.LongValueSequenceIterator r0;
        int i0;
        org.apache.flink.util.LongValueSequenceIterator[] $r1;

        r0 := @this: org.apache.flink.util.LongValueSequenceIterator;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.flink.util.LongValueSequenceIterator: org.apache.flink.util.LongValueSequenceIterator[] split(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        org.apache.flink.util.LongValueSequenceIterator r0;
        org.apache.flink.types.LongValue $r1;

        r0 := @this: org.apache.flink.util.LongValueSequenceIterator;

        $r1 = virtualinvoke r0.<org.apache.flink.util.LongValueSequenceIterator: org.apache.flink.types.LongValue next()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.util.LongValueSequenceIterator: long serialVersionUID> = 1L;

        return;
    }
}
