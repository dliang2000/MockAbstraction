public abstract class org.joda.time.field.PreciseDurationDateTimeField extends org.joda.time.field.BaseDateTimeField
{
    private static final long serialVersionUID;
    final long iUnitMillis;
    private final org.joda.time.DurationField iUnitField;

    public void <init>(org.joda.time.DateTimeFieldType, org.joda.time.DurationField)
    {
        org.joda.time.field.PreciseDurationDateTimeField r0;
        org.joda.time.DateTimeFieldType r1;
        org.joda.time.DurationField r2;
        boolean $z0;
        long $l0, $l1;
        byte $b2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: org.joda.time.field.PreciseDurationDateTimeField;

        r1 := @parameter0: org.joda.time.DateTimeFieldType;

        r2 := @parameter1: org.joda.time.DurationField;

        specialinvoke r0.<org.joda.time.field.BaseDateTimeField: void <init>(org.joda.time.DateTimeFieldType)>(r1);

        $z0 = virtualinvoke r2.<org.joda.time.DurationField: boolean isPrecise()>();

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unit duration field must be precise");

        throw $r4;

     label1:
        $l0 = virtualinvoke r2.<org.joda.time.DurationField: long getUnitMillis()>();

        r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis> = $l0;

        $l1 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        $b2 = $l1 cmp 1L;

        if $b2 >= 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The unit milliseconds must be at least 1");

        throw $r3;

     label2:
        r0.<org.joda.time.field.PreciseDurationDateTimeField: org.joda.time.DurationField iUnitField> = r2;

        return;
    }

    public boolean isLenient()
    {
        org.joda.time.field.PreciseDurationDateTimeField r0;

        r0 := @this: org.joda.time.field.PreciseDurationDateTimeField;

        return 0;
    }

    public long set(long, int)
    {
        org.joda.time.field.PreciseDurationDateTimeField r0;
        long l0, $l6, $l7, $l8, $l9;
        int i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.joda.time.field.PreciseDurationDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<org.joda.time.field.PreciseDurationDateTimeField: int getMinimumValue()>();

        $i3 = virtualinvoke r0.<org.joda.time.field.PreciseDurationDateTimeField: int getMaximumValueForSet(long,int)>(l0, i1);

        staticinvoke <org.joda.time.field.FieldUtils: void verifyValueBounds(org.joda.time.DateTimeField,int,int,int)>(r0, i1, $i2, $i3);

        $i4 = virtualinvoke r0.<org.joda.time.field.PreciseDurationDateTimeField: int get(long)>(l0);

        $i5 = i1 - $i4;

        $l7 = (long) $i5;

        $l6 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        $l8 = $l7 * $l6;

        $l9 = l0 + $l8;

        return $l9;
    }

    public long roundFloor(long)
    {
        org.joda.time.field.PreciseDurationDateTimeField r0;
        byte $b0;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, l9, l10;

        r0 := @this: org.joda.time.field.PreciseDurationDateTimeField;

        l9 := @parameter0: long;

        $b0 = l9 cmp 0L;

        if $b0 < 0 goto label1;

        $l6 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        $l7 = l9 % $l6;

        $l8 = l9 - $l7;

        return $l8;

     label1:
        l10 = l9 + 1L;

        $l1 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        $l2 = l10 % $l1;

        $l4 = l10 - $l2;

        $l3 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        $l5 = $l4 - $l3;

        return $l5;
    }

    public long roundCeiling(long)
    {
        org.joda.time.field.PreciseDurationDateTimeField r0;
        byte $b0;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, l9, l10;

        r0 := @this: org.joda.time.field.PreciseDurationDateTimeField;

        l9 := @parameter0: long;

        $b0 = l9 cmp 0L;

        if $b0 <= 0 goto label1;

        l10 = l9 - 1L;

        $l4 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        $l5 = l10 % $l4;

        $l7 = l10 - $l5;

        $l6 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        $l8 = $l7 + $l6;

        return $l8;

     label1:
        $l1 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        $l2 = l9 % $l1;

        $l3 = l9 - $l2;

        return $l3;
    }

    public long remainder(long)
    {
        org.joda.time.field.PreciseDurationDateTimeField r0;
        long l0, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        byte $b1;

        r0 := @this: org.joda.time.field.PreciseDurationDateTimeField;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $l8 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        $l9 = l0 % $l8;

        return $l9;

     label1:
        $l3 = l0 + 1L;

        $l2 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        $l5 = $l3 % $l2;

        $l4 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        $l6 = $l5 + $l4;

        $l7 = $l6 - 1L;

        return $l7;
    }

    public org.joda.time.DurationField getDurationField()
    {
        org.joda.time.field.PreciseDurationDateTimeField r0;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.PreciseDurationDateTimeField;

        $r1 = r0.<org.joda.time.field.PreciseDurationDateTimeField: org.joda.time.DurationField iUnitField>;

        return $r1;
    }

    public int getMinimumValue()
    {
        org.joda.time.field.PreciseDurationDateTimeField r0;

        r0 := @this: org.joda.time.field.PreciseDurationDateTimeField;

        return 0;
    }

    public final long getUnitMillis()
    {
        org.joda.time.field.PreciseDurationDateTimeField r0;
        long $l0;

        r0 := @this: org.joda.time.field.PreciseDurationDateTimeField;

        $l0 = r0.<org.joda.time.field.PreciseDurationDateTimeField: long iUnitMillis>;

        return $l0;
    }

    protected int getMaximumValueForSet(long, int)
    {
        org.joda.time.field.PreciseDurationDateTimeField r0;
        long l0;
        int i1, $i2;

        r0 := @this: org.joda.time.field.PreciseDurationDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<org.joda.time.field.PreciseDurationDateTimeField: int getMaximumValue(long)>(l0);

        return $i2;
    }

    public static void <clinit>()
    {
        <org.joda.time.field.PreciseDurationDateTimeField: long serialVersionUID> = 5004523158306266035L;

        return;
    }
}
