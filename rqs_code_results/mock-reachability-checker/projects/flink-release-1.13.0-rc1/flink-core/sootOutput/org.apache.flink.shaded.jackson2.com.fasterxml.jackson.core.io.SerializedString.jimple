public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString extends java.lang.Object implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER;
    protected final java.lang.String _value;
    protected byte[] _quotedUTF8Ref;
    protected byte[] _unquotedUTF8Ref;
    protected char[] _quotedChars;
    protected transient java.lang.String _jdkSerializeValue;

    public void <init>(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.lang.String r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Null String illegal for SerializedString");

        throw $r2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value> = r1;

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.io.ObjectInputStream r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.String readUTF()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _jdkSerializeValue> = $r2;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.io.ObjectOutputStream r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeUTF(java.lang.String)>($r2);

        return;
    }

    protected java.lang.Object readResolve()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0, $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _jdkSerializeValue>;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>($r2);

        return $r1;
    }

    public final java.lang.String getValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        return $r1;
    }

    public final int charLength()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public final char[] asQuotedChars()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.lang.String $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r2;
        char[] $r3, r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: char[] _quotedChars>;

        if r4 != null goto label1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: char[] quoteAsString(java.lang.String)>($r1);

        r4 = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: char[] _quotedChars> = $r3;

     label1:
        return r4;
    }

    public final byte[] asQuotedUTF8()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.lang.String $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r2;
        byte[] $r3, r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _quotedUTF8Ref>;

        if r4 != null goto label1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] quoteAsUTF8(java.lang.String)>($r1);

        r4 = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _quotedUTF8Ref> = $r3;

     label1:
        return r4;
    }

    public final byte[] asUnquotedUTF8()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.lang.String $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r2;
        byte[] $r3, r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _unquotedUTF8Ref>;

        if r4 != null goto label1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] encodeAsUTF8(java.lang.String)>($r1);

        r4 = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _unquotedUTF8Ref> = $r3;

     label1:
        return r4;
    }

    public int appendQuoted(char[], int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        char[] r1, $r4, r5;
        int i0, i1, $i2, $i3;
        java.lang.String $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: char[] _quotedChars>;

        if r5 != null goto label1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: char[] quoteAsString(java.lang.String)>($r2);

        r5 = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: char[] _quotedChars> = $r4;

     label1:
        i1 = lengthof r5;

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label2;

        return -1;

     label2:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r1, i0, i1);

        return i1;
    }

    public int appendQuotedUTF8(byte[], int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        byte[] r1, $r4, r5;
        int i0, i1, $i2, $i3;
        java.lang.String $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _quotedUTF8Ref>;

        if r5 != null goto label1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] quoteAsUTF8(java.lang.String)>($r2);

        r5 = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _quotedUTF8Ref> = $r4;

     label1:
        i1 = lengthof r5;

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label2;

        return -1;

     label2:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r1, i0, i1);

        return i1;
    }

    public int appendUnquoted(char[], int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        char[] r1;
        int i0, i1, $i2, $i3;
        java.lang.String r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label1;

        return -1;

     label1:
        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(0, i1, r1, i0);

        return i1;
    }

    public int appendUnquotedUTF8(byte[], int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        byte[] r1, $r4, r5;
        int i0, i1, $i2, $i3;
        java.lang.String $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _unquotedUTF8Ref>;

        if r5 != null goto label1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] encodeAsUTF8(java.lang.String)>($r2);

        r5 = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _unquotedUTF8Ref> = $r4;

     label1:
        i1 = lengthof r5;

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label2;

        return -1;

     label2:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r1, i0, i1);

        return i1;
    }

    public int writeQuotedUTF8(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.io.OutputStream r1;
        int i0;
        java.lang.String $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r3;
        byte[] $r4, r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: java.io.OutputStream;

        r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _quotedUTF8Ref>;

        if r5 != null goto label1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] quoteAsUTF8(java.lang.String)>($r2);

        r5 = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _quotedUTF8Ref> = $r4;

     label1:
        i0 = lengthof r5;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r5, 0, i0);

        return i0;
    }

    public int writeUnquotedUTF8(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.io.OutputStream r1;
        int i0;
        java.lang.String $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r3;
        byte[] $r4, r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: java.io.OutputStream;

        r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _unquotedUTF8Ref>;

        if r5 != null goto label1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] encodeAsUTF8(java.lang.String)>($r2);

        r5 = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _unquotedUTF8Ref> = $r4;

     label1:
        i0 = lengthof r5;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r5, 0, i0);

        return i0;
    }

    public int putQuotedUTF8(java.nio.ByteBuffer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.nio.ByteBuffer r1;
        int i0, $i1;
        java.lang.String $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r4;
        byte[] $r5, r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: java.nio.ByteBuffer;

        r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _quotedUTF8Ref>;

        if r6 != null goto label1;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] quoteAsUTF8(java.lang.String)>($r3);

        r6 = $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _quotedUTF8Ref> = $r5;

     label1:
        i0 = lengthof r6;

        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        if i0 <= $i1 goto label2;

        return -1;

     label2:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r6, 0, i0);

        return i0;
    }

    public int putUnquotedUTF8(java.nio.ByteBuffer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.nio.ByteBuffer r1;
        int i0, $i1;
        java.lang.String $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r4;
        byte[] $r5, r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: java.nio.ByteBuffer;

        r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _unquotedUTF8Ref>;

        if r6 != null goto label1;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] encodeAsUTF8(java.lang.String)>($r3);

        r6 = $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: byte[] _unquotedUTF8Ref> = $r5;

     label1:
        i0 = lengthof r6;

        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        if i0 <= $i1 goto label2;

        return -1;

     label2:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r6, 0, i0);

        return i0;
    }

    public final java.lang.String toString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        return $r1;
    }

    public final int hashCode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public final boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString) r1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $r5 = r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: java.lang.String _value>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: long serialVersionUID> = 1L;

        $r0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder getInstance()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER> = $r0;

        return;
    }
}
