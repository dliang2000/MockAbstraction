public class org.apache.commons.collections.map.AbstractHashedMap$EntrySet extends java.util.AbstractSet
{
    protected final org.apache.commons.collections.map.AbstractHashedMap parent;

    protected void <init>(org.apache.commons.collections.map.AbstractHashedMap)
    {
        org.apache.commons.collections.map.AbstractHashedMap$EntrySet r0;
        org.apache.commons.collections.map.AbstractHashedMap r1;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$EntrySet;

        r1 := @parameter0: org.apache.commons.collections.map.AbstractHashedMap;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<org.apache.commons.collections.map.AbstractHashedMap$EntrySet: org.apache.commons.collections.map.AbstractHashedMap parent> = r1;

        return;
    }

    public int size()
    {
        org.apache.commons.collections.map.AbstractHashedMap$EntrySet r0;
        org.apache.commons.collections.map.AbstractHashedMap $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$EntrySet;

        $r1 = r0.<org.apache.commons.collections.map.AbstractHashedMap$EntrySet: org.apache.commons.collections.map.AbstractHashedMap parent>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections.map.AbstractHashedMap: int size()>();

        return $i0;
    }

    public void clear()
    {
        org.apache.commons.collections.map.AbstractHashedMap$EntrySet r0;
        org.apache.commons.collections.map.AbstractHashedMap $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$EntrySet;

        $r1 = r0.<org.apache.commons.collections.map.AbstractHashedMap$EntrySet: org.apache.commons.collections.map.AbstractHashedMap parent>;

        virtualinvoke $r1.<org.apache.commons.collections.map.AbstractHashedMap: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections.map.AbstractHashedMap$EntrySet r0;
        java.lang.Object r1, $r5;
        java.util.Map$Entry r2;
        org.apache.commons.collections.map.AbstractHashedMap$HashEntry r3;
        boolean $z0, $z1, $z2;
        org.apache.commons.collections.map.AbstractHashedMap $r4;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$EntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label3;

        r2 = (java.util.Map$Entry) r1;

        $r4 = r0.<org.apache.commons.collections.map.AbstractHashedMap$EntrySet: org.apache.commons.collections.map.AbstractHashedMap parent>;

        $r5 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = virtualinvoke $r4.<org.apache.commons.collections.map.AbstractHashedMap: org.apache.commons.collections.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)>($r5);

        if r3 == null goto label1;

        $z1 = interfaceinvoke r3.<java.util.Map$Entry: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        return 0;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.commons.collections.map.AbstractHashedMap$EntrySet r0;
        java.lang.Object r1, r3;
        java.util.Map$Entry r2;
        boolean $z0, $z1;
        org.apache.commons.collections.map.AbstractHashedMap $r4;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$EntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<org.apache.commons.collections.map.AbstractHashedMap$EntrySet: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.util.Map$Entry) r1;

        r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = r0.<org.apache.commons.collections.map.AbstractHashedMap$EntrySet: org.apache.commons.collections.map.AbstractHashedMap parent>;

        virtualinvoke $r4.<org.apache.commons.collections.map.AbstractHashedMap: java.lang.Object remove(java.lang.Object)>(r3);

        return 1;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.map.AbstractHashedMap$EntrySet r0;
        org.apache.commons.collections.map.AbstractHashedMap $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$EntrySet;

        $r1 = r0.<org.apache.commons.collections.map.AbstractHashedMap$EntrySet: org.apache.commons.collections.map.AbstractHashedMap parent>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.map.AbstractHashedMap: java.util.Iterator createEntrySetIterator()>();

        return $r2;
    }
}
