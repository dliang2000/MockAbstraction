public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected byte[] _payloadAsBytes;
    protected java.lang.CharSequence _payloadAsText;
    protected java.lang.String _charset;

    public void <init>(byte[], java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload r0;
        byte[] r1;
        java.lang.String r2, $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: byte[] _payloadAsBytes> = r1;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        $r5 = "UTF-8";

        goto label4;

     label3:
        $r5 = r2;

     label4:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: java.lang.String _charset> = $r5;

        return;
    }

    public void <init>(java.lang.CharSequence)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload r0;
        java.lang.CharSequence r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: java.lang.CharSequence _payloadAsText> = r1;

        return;
    }

    public java.lang.Object getRawPayload()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload r0;
        byte[] $r1, $r3;
        java.lang.CharSequence $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: byte[] _payloadAsBytes>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: byte[] _payloadAsBytes>;

        return $r3;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: java.lang.CharSequence _payloadAsText>;

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload r0;
        byte[] $r2, $r7;
        java.lang.CharSequence $r3;
        java.lang.String $r4, $r5, $r6;
        java.io.IOException $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: byte[] _payloadAsBytes>;

        if $r2 == null goto label4;

     label1:
        $r5 = new java.lang.String;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: byte[] _payloadAsBytes>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: java.lang.String _charset>;

        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>($r7, $r6);

     label2:
        return $r5;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: java.lang.CharSequence _payloadAsText>;

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        return $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.RequestPayload: long serialVersionUID> = 1L;

        return;
    }
}
