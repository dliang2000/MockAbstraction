class org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$JoinOnInterruptReaperThread extends org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread
{

    private void <init>()
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$JoinOnInterruptReaperThread r0;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$JoinOnInterruptReaperThread;

        specialinvoke r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread: void <init>()>();

        return;
    }

    public void interrupt()
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$JoinOnInterruptReaperThread r0;
        java.lang.InterruptedException $r2;
        java.lang.Thread $r3;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$JoinOnInterruptReaperThread;

        specialinvoke r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread: void interrupt()>();

     label1:
        virtualinvoke r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$JoinOnInterruptReaperThread: void join()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    void <init>(org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$1)
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$JoinOnInterruptReaperThread r0;
        org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$1 r1;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$JoinOnInterruptReaperThread;

        r1 := @parameter0: org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$1;

        specialinvoke r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$JoinOnInterruptReaperThread: void <init>()>();

        return;
    }
}
