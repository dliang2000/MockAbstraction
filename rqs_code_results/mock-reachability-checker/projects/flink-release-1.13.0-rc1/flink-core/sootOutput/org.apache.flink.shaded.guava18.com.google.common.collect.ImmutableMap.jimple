public abstract class org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap extends java.lang.Object implements java.util.Map, java.io.Serializable
{
    private static final java.util.Map$Entry[] EMPTY_ENTRY_ARRAY;
    private transient org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet entrySet;
    private transient org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet keySet;
    private transient org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection values;
    private transient org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSetMultimap multimapView;

    public static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap of()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap $r0;

        $r0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap of()>();

        return $r0;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap of(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2, r3;
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap $r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[] $r5;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry $r6, $r7;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r4 = new org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap;

        $r5 = newarray (org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry)[2];

        $r6 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r0, r1);

        $r5[0] = $r6;

        $r7 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r2, r3);

        $r5[1] = $r7;

        specialinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[])>($r5);

        return $r4;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2, r3, r4, r5;
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap $r6;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[] $r7;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry $r8, $r9, $r10;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        $r6 = new org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap;

        $r7 = newarray (org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry)[3];

        $r8 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r0, r1);

        $r7[0] = $r8;

        $r9 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r2, r3);

        $r7[1] = $r9;

        $r10 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r4, r5);

        $r7[2] = $r10;

        specialinvoke $r6.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[])>($r7);

        return $r6;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7;
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap $r8;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[] $r9;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry $r10, $r11, $r12, $r13;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        $r8 = new org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap;

        $r9 = newarray (org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry)[4];

        $r10 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r0, r1);

        $r9[0] = $r10;

        $r11 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r2, r3);

        $r9[1] = $r11;

        $r12 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r4, r5);

        $r9[2] = $r12;

        $r13 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r6, r7);

        $r9[3] = $r13;

        specialinvoke $r8.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[])>($r9);

        return $r8;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2, r3, r4, r5, r6, r7, r8, r9;
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap $r10;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[] $r11;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry $r12, $r13, $r14, $r15, $r16;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        r7 := @parameter7: java.lang.Object;

        r8 := @parameter8: java.lang.Object;

        r9 := @parameter9: java.lang.Object;

        $r10 = new org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap;

        $r11 = newarray (org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry)[5];

        $r12 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r0, r1);

        $r11[0] = $r12;

        $r13 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r2, r3);

        $r11[1] = $r13;

        $r14 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r4, r5);

        $r11[2] = $r14;

        $r15 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r6, r7);

        $r11[3] = $r15;

        $r16 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object)>(r8, r9);

        $r11[4] = $r16;

        specialinvoke $r10.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[])>($r11);

        return $r10;
    }

    static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r0, r1);

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry: void <init>(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$Builder builder()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$Builder $r0;

        $r0 = new org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$Builder;

        specialinvoke $r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$Builder: void <init>()>();

        return $r0;
    }

    static void checkNoConflict(boolean, java.lang.String, java.util.Map$Entry, java.util.Map$Entry)
    {
        boolean z0;
        java.lang.String r0, r3, r4, r5, $r7, $r8, $r9, $r17;
        java.util.Map$Entry r1, r2;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.Map$Entry;

        r2 := @parameter3: java.util.Map$Entry;

        if z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        $r10 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        $i1 = 34 + $i0;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r5.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>($i5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple entries with same ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r6;

     label1:
        return;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap copyOf(java.util.Map)
    {
        java.util.Map r0;
        java.util.Map$Entry r1;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r2;
        java.util.Map$Entry[] $r3, r12;
        java.lang.Object[] $r4;
        int $i0;
        java.lang.Object $r5, $r6;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap $r7, $r8, $r10, r11;
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap $r9;

        r0 := @parameter0: java.util.Map;

        $z0 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        if $z0 == 0 goto label2;

        $z2 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSortedMap;

        if $z2 != 0 goto label2;

        r11 = (org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap) r0;

        $z3 = virtualinvoke r11.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: boolean isPartialView()>();

        if $z3 != 0 goto label1;

        return r11;

     label1:
        goto label3;

     label2:
        $z1 = r0 instanceof java.util.EnumMap;

        if $z1 == 0 goto label3;

        $r10 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap copyOfEnumMapUnsafe(java.util.Map)>(r0);

        return $r10;

     label3:
        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: java.util.Map$Entry[] EMPTY_ENTRY_ARRAY>;

        $r4 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        r12 = (java.util.Map$Entry[]) $r4;

        $i0 = lengthof r12;

        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label5;
            default: goto label6;
        };

     label4:
        $r8 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap of()>();

        return $r8;

     label5:
        r1 = r12[0];

        $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>($r5, $r6);

        return $r7;

     label6:
        $r9 = new org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap;

        specialinvoke $r9.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>(r12);

        return $r9;
    }

    private static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap copyOfEnumMapUnsafe(java.util.Map)
    {
        java.util.Map r0;
        java.util.EnumMap $r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap $r2;

        r0 := @parameter0: java.util.Map;

        $r1 = (java.util.EnumMap) r0;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap copyOfEnumMap(java.util.Map)>($r1);

        return $r2;
    }

    private static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap copyOfEnumMap(java.util.Map)
    {
        java.util.Map r0;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.EnumMap $r4;
        java.util.Set $r5;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap $r6;
        java.lang.Object $r7, $r8, $r9;

        r0 := @parameter0: java.util.Map;

        $r4 = new java.util.EnumMap;

        specialinvoke $r4.<java.util.EnumMap: void <init>(java.util.Map)>(r0);

        $r5 = virtualinvoke $r4.<java.util.EnumMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>($r8, $r9);

        goto label1;

     label2:
        $r6 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap asImmutable(java.util.EnumMap)>($r4);

        return $r6;
    }

    void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        java.lang.Object r1, r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public final java.lang.Object remove(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final void putAll(java.util.Map)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        java.util.Map r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        r1 := @parameter0: java.util.Map;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final void clear()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean isEmpty()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        java.lang.Object r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection values()>();

        $z0 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public abstract java.lang.Object get(java.lang.Object);

    public org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet entrySet()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet r1, $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet entrySet>;

        if r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet createEntrySet()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet entrySet> = $r2;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    abstract org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet createEntrySet();

    public org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet keySet()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet r1, $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet keySet>;

        if r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet createKeySet()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet keySet> = $r2;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet createKeySet()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapKeySet $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapKeySet;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapKeySet: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap)>(r0);

        return $r1;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection values()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection r1, $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapValues r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection values>;

        if r1 != null goto label1;

        r3 = new org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapValues;

        $r2 = r3;

        specialinvoke r3.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapValues: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap)>(r0);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection values> = r3;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSetMultimap asMultimap()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSetMultimap r1, $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSetMultimap multimapView>;

        if r1 != null goto label1;

        $r2 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSetMultimap createMultimapView()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSetMultimap multimapView> = $r2;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    private org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSetMultimap createMultimapView()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0, r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSetMultimap $r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        r1 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap viewMapValuesAsSingletonSets()>();

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSetMultimap;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: int size()>();

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSetMultimap: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap,int,java.util.Comparator)>(r1, $i0, null);

        return $r2;
    }

    private org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap viewMapValuesAsSingletonSets()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap)>(r0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Maps: boolean equalsImpl(java.util.Map,java.lang.Object)>(r0, r1);

        return $z0;
    }

    abstract boolean isPartialView();

    public int hashCode()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet entrySet()>();

        $i0 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Maps: java.lang.String toStringImpl(java.util.Map)>(r0);

        return $r1;
    }

    java.lang.Object writeReplace()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$SerializedForm $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$SerializedForm;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$SerializedForm: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap)>(r0);

        return $r1;
    }

    public volatile java.util.Set entrySet()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet entrySet()>();

        return $r1;
    }

    public volatile java.util.Collection values()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableCollection values()>();

        return $r1;
    }

    public volatile java.util.Set keySet()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet keySet()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.util.Map$Entry[] $r0;

        $r0 = newarray (java.util.Map$Entry)[0];

        <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: java.util.Map$Entry[] EMPTY_ENTRY_ARRAY> = $r0;

        return;
    }
}
