public class org.apache.flink.core.fs.FSDataOutputStreamWrapper extends org.apache.flink.core.fs.FSDataOutputStream implements org.apache.flink.util.WrappingProxy
{
    protected final org.apache.flink.core.fs.FSDataOutputStream outputStream;

    public void <init>(org.apache.flink.core.fs.FSDataOutputStream)
    {
        org.apache.flink.core.fs.FSDataOutputStreamWrapper r0;
        org.apache.flink.core.fs.FSDataOutputStream r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.core.fs.FSDataOutputStreamWrapper;

        r1 := @parameter0: org.apache.flink.core.fs.FSDataOutputStream;

        specialinvoke r0.<org.apache.flink.core.fs.FSDataOutputStream: void <init>()>();

        $r2 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (org.apache.flink.core.fs.FSDataOutputStream) $r2;

        r0.<org.apache.flink.core.fs.FSDataOutputStreamWrapper: org.apache.flink.core.fs.FSDataOutputStream outputStream> = $r3;

        return;
    }

    public long getPos() throws java.io.IOException
    {
        org.apache.flink.core.fs.FSDataOutputStreamWrapper r0;
        org.apache.flink.core.fs.FSDataOutputStream $r1;
        long $l0;

        r0 := @this: org.apache.flink.core.fs.FSDataOutputStreamWrapper;

        $r1 = r0.<org.apache.flink.core.fs.FSDataOutputStreamWrapper: org.apache.flink.core.fs.FSDataOutputStream outputStream>;

        $l0 = virtualinvoke $r1.<org.apache.flink.core.fs.FSDataOutputStream: long getPos()>();

        return $l0;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.flink.core.fs.FSDataOutputStreamWrapper r0;
        org.apache.flink.core.fs.FSDataOutputStream $r1;

        r0 := @this: org.apache.flink.core.fs.FSDataOutputStreamWrapper;

        $r1 = r0.<org.apache.flink.core.fs.FSDataOutputStreamWrapper: org.apache.flink.core.fs.FSDataOutputStream outputStream>;

        virtualinvoke $r1.<org.apache.flink.core.fs.FSDataOutputStream: void flush()>();

        return;
    }

    public void sync() throws java.io.IOException
    {
        org.apache.flink.core.fs.FSDataOutputStreamWrapper r0;
        org.apache.flink.core.fs.FSDataOutputStream $r1;

        r0 := @this: org.apache.flink.core.fs.FSDataOutputStreamWrapper;

        $r1 = r0.<org.apache.flink.core.fs.FSDataOutputStreamWrapper: org.apache.flink.core.fs.FSDataOutputStream outputStream>;

        virtualinvoke $r1.<org.apache.flink.core.fs.FSDataOutputStream: void sync()>();

        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.flink.core.fs.FSDataOutputStreamWrapper r0;
        int i0;
        org.apache.flink.core.fs.FSDataOutputStream $r1;

        r0 := @this: org.apache.flink.core.fs.FSDataOutputStreamWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.core.fs.FSDataOutputStreamWrapper: org.apache.flink.core.fs.FSDataOutputStream outputStream>;

        virtualinvoke $r1.<org.apache.flink.core.fs.FSDataOutputStream: void write(int)>(i0);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        org.apache.flink.core.fs.FSDataOutputStreamWrapper r0;
        byte[] r1;
        org.apache.flink.core.fs.FSDataOutputStream $r2;

        r0 := @this: org.apache.flink.core.fs.FSDataOutputStreamWrapper;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.flink.core.fs.FSDataOutputStreamWrapper: org.apache.flink.core.fs.FSDataOutputStream outputStream>;

        virtualinvoke $r2.<org.apache.flink.core.fs.FSDataOutputStream: void write(byte[])>(r1);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.core.fs.FSDataOutputStreamWrapper r0;
        byte[] r1;
        int i0, i1;
        org.apache.flink.core.fs.FSDataOutputStream $r2;

        r0 := @this: org.apache.flink.core.fs.FSDataOutputStreamWrapper;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.flink.core.fs.FSDataOutputStreamWrapper: org.apache.flink.core.fs.FSDataOutputStream outputStream>;

        virtualinvoke $r2.<org.apache.flink.core.fs.FSDataOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.core.fs.FSDataOutputStreamWrapper r0;
        org.apache.flink.core.fs.FSDataOutputStream $r1;

        r0 := @this: org.apache.flink.core.fs.FSDataOutputStreamWrapper;

        $r1 = r0.<org.apache.flink.core.fs.FSDataOutputStreamWrapper: org.apache.flink.core.fs.FSDataOutputStream outputStream>;

        virtualinvoke $r1.<org.apache.flink.core.fs.FSDataOutputStream: void close()>();

        return;
    }

    public org.apache.flink.core.fs.FSDataOutputStream getWrappedDelegate()
    {
        org.apache.flink.core.fs.FSDataOutputStreamWrapper r0;
        org.apache.flink.core.fs.FSDataOutputStream $r1;

        r0 := @this: org.apache.flink.core.fs.FSDataOutputStreamWrapper;

        $r1 = r0.<org.apache.flink.core.fs.FSDataOutputStreamWrapper: org.apache.flink.core.fs.FSDataOutputStream outputStream>;

        return $r1;
    }

    public volatile java.lang.Object getWrappedDelegate()
    {
        org.apache.flink.core.fs.FSDataOutputStreamWrapper r0;
        org.apache.flink.core.fs.FSDataOutputStream $r1;

        r0 := @this: org.apache.flink.core.fs.FSDataOutputStreamWrapper;

        $r1 = virtualinvoke r0.<org.apache.flink.core.fs.FSDataOutputStreamWrapper: org.apache.flink.core.fs.FSDataOutputStream getWrappedDelegate()>();

        return $r1;
    }
}
