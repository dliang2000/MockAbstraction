public class javassist.compiler.ast.CastExpr extends javassist.compiler.ast.ASTList implements javassist.compiler.TokenId
{
    private static final long serialVersionUID;
    protected int castType;
    protected int arrayDim;

    public void <init>(javassist.compiler.ast.ASTList, int, javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.CastExpr r0;
        javassist.compiler.ast.ASTList r1, $r3;
        int i0;
        javassist.compiler.ast.ASTree r2;

        r0 := @this: javassist.compiler.ast.CastExpr;

        r1 := @parameter0: javassist.compiler.ast.ASTList;

        i0 := @parameter1: int;

        r2 := @parameter2: javassist.compiler.ast.ASTree;

        $r3 = new javassist.compiler.ast.ASTList;

        specialinvoke $r3.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree)>(r2);

        specialinvoke r0.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTList)>(r1, $r3);

        r0.<javassist.compiler.ast.CastExpr: int castType> = 307;

        r0.<javassist.compiler.ast.CastExpr: int arrayDim> = i0;

        return;
    }

    public void <init>(int, int, javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.CastExpr r0;
        int i0, i1;
        javassist.compiler.ast.ASTree r1;
        javassist.compiler.ast.ASTList $r2;

        r0 := @this: javassist.compiler.ast.CastExpr;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: javassist.compiler.ast.ASTree;

        $r2 = new javassist.compiler.ast.ASTList;

        specialinvoke $r2.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree)>(r1);

        specialinvoke r0.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTList)>(null, $r2);

        r0.<javassist.compiler.ast.CastExpr: int castType> = i0;

        r0.<javassist.compiler.ast.CastExpr: int arrayDim> = i1;

        return;
    }

    public int getType()
    {
        javassist.compiler.ast.CastExpr r0;
        int $i0;

        r0 := @this: javassist.compiler.ast.CastExpr;

        $i0 = r0.<javassist.compiler.ast.CastExpr: int castType>;

        return $i0;
    }

    public int getArrayDim()
    {
        javassist.compiler.ast.CastExpr r0;
        int $i0;

        r0 := @this: javassist.compiler.ast.CastExpr;

        $i0 = r0.<javassist.compiler.ast.CastExpr: int arrayDim>;

        return $i0;
    }

    public javassist.compiler.ast.ASTList getClassName()
    {
        javassist.compiler.ast.CastExpr r0;
        javassist.compiler.ast.ASTree $r1;
        javassist.compiler.ast.ASTList $r2;

        r0 := @this: javassist.compiler.ast.CastExpr;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.CastExpr: javassist.compiler.ast.ASTree getLeft()>();

        $r2 = (javassist.compiler.ast.ASTList) $r1;

        return $r2;
    }

    public javassist.compiler.ast.ASTree getOprand()
    {
        javassist.compiler.ast.CastExpr r0;
        javassist.compiler.ast.ASTree $r1, $r2;

        r0 := @this: javassist.compiler.ast.CastExpr;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.CastExpr: javassist.compiler.ast.ASTree getRight()>();

        $r2 = virtualinvoke $r1.<javassist.compiler.ast.ASTree: javassist.compiler.ast.ASTree getLeft()>();

        return $r2;
    }

    public void setOprand(javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.CastExpr r0;
        javassist.compiler.ast.ASTree r1, $r2;

        r0 := @this: javassist.compiler.ast.CastExpr;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        $r2 = virtualinvoke r0.<javassist.compiler.ast.CastExpr: javassist.compiler.ast.ASTree getRight()>();

        virtualinvoke $r2.<javassist.compiler.ast.ASTree: void setLeft(javassist.compiler.ast.ASTree)>(r1);

        return;
    }

    public java.lang.String getTag()
    {
        javassist.compiler.ast.CastExpr r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        int $i0, $i1;
        java.lang.String $r6;

        r0 := @this: javassist.compiler.ast.CastExpr;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cast:");

        $i0 = r0.<javassist.compiler.ast.CastExpr: int castType>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i1 = r0.<javassist.compiler.ast.CastExpr: int arrayDim>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void accept(javassist.compiler.ast.Visitor) throws javassist.compiler.CompileError
    {
        javassist.compiler.ast.CastExpr r0;
        javassist.compiler.ast.Visitor r1;

        r0 := @this: javassist.compiler.ast.CastExpr;

        r1 := @parameter0: javassist.compiler.ast.Visitor;

        virtualinvoke r1.<javassist.compiler.ast.Visitor: void atCastExpr(javassist.compiler.ast.CastExpr)>(r0);

        return;
    }

    public static void <clinit>()
    {
        <javassist.compiler.ast.CastExpr: long serialVersionUID> = 1L;

        return;
    }
}
