final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1 extends java.lang.Object
{
    final java.lang.Class val$defaultValueType;
    final int val$length;
    final java.lang.Object val$defaultValue;

    void <init>(java.lang.Class, int, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1 r0;
        java.lang.Class r1;
        int i0;
        java.lang.Object r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1;

        r1 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1: java.lang.Class val$defaultValueType> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1: int val$length> = i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1: java.lang.Object val$defaultValue> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1 r0;
        java.lang.Object r1, r2, r3, $r5;
        java.lang.Class $r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1: java.lang.Class val$defaultValueType>;

        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean hasClass(java.lang.Object,java.lang.Class)>(r1, $r4);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r1);

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1: int val$length>;

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        i3 = 0;

     label4:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1: int val$length>;

        if i3 >= $i2 goto label7;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$1: java.lang.Object val$defaultValue>;

        r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r5, i3);

        r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r1, i3);

        if r2 != r3 goto label5;

        goto label6;

     label5:
        if r2 == null goto label6;

        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z1 != 0 goto label6;

        return 0;

     label6:
        i3 = i3 + 1;

        goto label4;

     label7:
        return 1;
    }
}
