public class javassist.compiler.JvstCodeGen extends javassist.compiler.MemberCodeGen
{
    java.lang.String paramArrayName;
    java.lang.String paramListName;
    javassist.CtClass[] paramTypeList;
    private int paramVarBase;
    private boolean useParam0;
    private java.lang.String param0Type;
    public static final java.lang.String sigName;
    public static final java.lang.String dollarTypeName;
    public static final java.lang.String clazzName;
    private javassist.CtClass dollarType;
    javassist.CtClass returnType;
    java.lang.String returnCastName;
    private java.lang.String returnVarName;
    public static final java.lang.String wrapperCastName;
    java.lang.String proceedName;
    public static final java.lang.String cflowName;
    javassist.compiler.ProceedHandler procHandler;

    public void <init>(javassist.bytecode.Bytecode, javassist.CtClass, javassist.ClassPool)
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.bytecode.Bytecode r1;
        javassist.CtClass r2;
        javassist.ClassPool r3;
        javassist.compiler.JvstTypeChecker $r4;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.bytecode.Bytecode;

        r2 := @parameter1: javassist.CtClass;

        r3 := @parameter2: javassist.ClassPool;

        specialinvoke r0.<javassist.compiler.MemberCodeGen: void <init>(javassist.bytecode.Bytecode,javassist.CtClass,javassist.ClassPool)>(r1, r2, r3);

        r0.<javassist.compiler.JvstCodeGen: java.lang.String paramArrayName> = null;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String paramListName> = null;

        r0.<javassist.compiler.JvstCodeGen: javassist.CtClass[] paramTypeList> = null;

        r0.<javassist.compiler.JvstCodeGen: int paramVarBase> = 0;

        r0.<javassist.compiler.JvstCodeGen: boolean useParam0> = 0;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String param0Type> = null;

        r0.<javassist.compiler.JvstCodeGen: javassist.CtClass dollarType> = null;

        r0.<javassist.compiler.JvstCodeGen: javassist.CtClass returnType> = null;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String returnCastName> = null;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String returnVarName> = null;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String proceedName> = null;

        r0.<javassist.compiler.JvstCodeGen: javassist.compiler.ProceedHandler procHandler> = null;

        $r4 = new javassist.compiler.JvstTypeChecker;

        specialinvoke $r4.<javassist.compiler.JvstTypeChecker: void <init>(javassist.CtClass,javassist.ClassPool,javassist.compiler.JvstCodeGen)>(r2, r3, r0);

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void setTypeChecker(javassist.compiler.TypeChecker)>($r4);

        return;
    }

    private int indexOfParam1()
    {
        javassist.compiler.JvstCodeGen r0;
        boolean $z0;
        int $i0, $i1;
        byte $b2;

        r0 := @this: javassist.compiler.JvstCodeGen;

        $i0 = r0.<javassist.compiler.JvstCodeGen: int paramVarBase>;

        $z0 = r0.<javassist.compiler.JvstCodeGen: boolean useParam0>;

        if $z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        $i1 = $i0 + $b2;

        return $i1;
    }

    public void setProceedHandler(javassist.compiler.ProceedHandler, java.lang.String)
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.compiler.ProceedHandler r1;
        java.lang.String r2;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.compiler.ProceedHandler;

        r2 := @parameter1: java.lang.String;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String proceedName> = r2;

        r0.<javassist.compiler.JvstCodeGen: javassist.compiler.ProceedHandler procHandler> = r1;

        return;
    }

    public void addNullIfVoid()
    {
        javassist.compiler.JvstCodeGen r0;
        int $i0;
        javassist.bytecode.Bytecode $r1;

        r0 := @this: javassist.compiler.JvstCodeGen;

        $i0 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        if $i0 != 344 goto label1;

        $r1 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r1.<javassist.bytecode.Bytecode: void addOpcode(int)>(1);

        r0.<javassist.compiler.JvstCodeGen: int exprType> = 307;

        r0.<javassist.compiler.JvstCodeGen: int arrayDim> = 0;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String className> = "java/lang/Object";

     label1:
        return;
    }

    public void atMember(javassist.compiler.ast.Member) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.compiler.ast.Member r1;
        java.lang.String r2, $r3, $r4, $r5, $r11, $r16;
        boolean $z0, $z1, $z2, $z3;
        javassist.bytecode.Bytecode $r6, $r10, $r15, $r17, $r18;
        javassist.compiler.CompileError $r7, $r12;
        javassist.CtClass $r8, $r9, $r14;
        javassist.CtClass[] $r13, $r19;
        int $i0;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.compiler.ast.Member;

        r2 = virtualinvoke r1.<javassist.compiler.ast.Member: java.lang.String get()>();

        $r3 = r0.<javassist.compiler.JvstCodeGen: java.lang.String paramArrayName>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r18 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r19 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass[] paramTypeList>;

        $i0 = specialinvoke r0.<javassist.compiler.JvstCodeGen: int indexOfParam1()>();

        staticinvoke <javassist.compiler.JvstCodeGen: int compileParameterList(javassist.bytecode.Bytecode,javassist.CtClass[],int)>($r18, $r19, $i0);

        r0.<javassist.compiler.JvstCodeGen: int exprType> = 307;

        r0.<javassist.compiler.JvstCodeGen: int arrayDim> = 1;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String className> = "java/lang/Object";

        goto label7;

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("$sig");

        if $z1 == 0 goto label2;

        $r15 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r14 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass returnType>;

        $r13 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass[] paramTypeList>;

        $r16 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String ofMethod(javassist.CtClass,javassist.CtClass[])>($r14, $r13);

        virtualinvoke $r15.<javassist.bytecode.Bytecode: void addLdc(java.lang.String)>($r16);

        $r17 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r17.<javassist.bytecode.Bytecode: void addInvokestatic(java.lang.String,java.lang.String,java.lang.String)>("javassist/runtime/Desc", "getParams", "(Ljava/lang/String;)[Ljava/lang/Class;");

        r0.<javassist.compiler.JvstCodeGen: int exprType> = 307;

        r0.<javassist.compiler.JvstCodeGen: int arrayDim> = 1;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String className> = "java/lang/Class";

        goto label7;

     label2:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("$type");

        if $z2 == 0 goto label4;

        $r8 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass dollarType>;

        if $r8 != null goto label3;

        $r12 = new javassist.compiler.CompileError;

        specialinvoke $r12.<javassist.compiler.CompileError: void <init>(java.lang.String)>("$type is not available");

        throw $r12;

     label3:
        $r10 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r9 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass dollarType>;

        $r11 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String of(javassist.CtClass)>($r9);

        virtualinvoke $r10.<javassist.bytecode.Bytecode: void addLdc(java.lang.String)>($r11);

        specialinvoke r0.<javassist.compiler.JvstCodeGen: void callGetType(java.lang.String)>("getType");

        goto label7;

     label4:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("$class");

        if $z3 == 0 goto label6;

        $r4 = r0.<javassist.compiler.JvstCodeGen: java.lang.String param0Type>;

        if $r4 != null goto label5;

        $r7 = new javassist.compiler.CompileError;

        specialinvoke $r7.<javassist.compiler.CompileError: void <init>(java.lang.String)>("$class is not available");

        throw $r7;

     label5:
        $r6 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r5 = r0.<javassist.compiler.JvstCodeGen: java.lang.String param0Type>;

        virtualinvoke $r6.<javassist.bytecode.Bytecode: void addLdc(java.lang.String)>($r5);

        specialinvoke r0.<javassist.compiler.JvstCodeGen: void callGetType(java.lang.String)>("getClazz");

        goto label7;

     label6:
        specialinvoke r0.<javassist.compiler.MemberCodeGen: void atMember(javassist.compiler.ast.Member)>(r1);

     label7:
        return;
    }

    private void callGetType(java.lang.String)
    {
        javassist.compiler.JvstCodeGen r0;
        java.lang.String r1;
        javassist.bytecode.Bytecode $r2;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r2.<javassist.bytecode.Bytecode: void addInvokestatic(java.lang.String,java.lang.String,java.lang.String)>("javassist/runtime/Desc", r1, "(Ljava/lang/String;)Ljava/lang/Class;");

        r0.<javassist.compiler.JvstCodeGen: int exprType> = 307;

        r0.<javassist.compiler.JvstCodeGen: int arrayDim> = 0;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String className> = "java/lang/Class";

        return;
    }

    protected void atFieldAssign(javassist.compiler.ast.Expr, int, javassist.compiler.ast.ASTree, javassist.compiler.ast.ASTree, boolean) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.compiler.ast.Expr r1;
        int i0, $i1, $i2;
        javassist.compiler.ast.ASTree r2, r3;
        boolean z0, $z1, $z2;
        javassist.compiler.ast.Member $r4;
        java.lang.String $r5, $r6, $r10, $r12, $r19, $r21;
        javassist.compiler.CompileError $r7, $r16;
        java.lang.StringBuilder $r8, $r9, $r11, $r17, $r18, $r20;
        javassist.bytecode.Bytecode $r13, $r15;
        javassist.CtClass[] $r14;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.compiler.ast.Expr;

        i0 := @parameter1: int;

        r2 := @parameter2: javassist.compiler.ast.ASTree;

        r3 := @parameter3: javassist.compiler.ast.ASTree;

        z0 := @parameter4: boolean;

        $z1 = r2 instanceof javassist.compiler.ast.Member;

        if $z1 == 0 goto label4;

        $r4 = (javassist.compiler.ast.Member) r2;

        $r5 = virtualinvoke $r4.<javassist.compiler.ast.Member: java.lang.String get()>();

        $r6 = r0.<javassist.compiler.JvstCodeGen: java.lang.String paramArrayName>;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label4;

        if i0 == 61 goto label1;

        $r16 = new javassist.compiler.CompileError;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad operator for ");

        $r19 = r0.<javassist.compiler.JvstCodeGen: java.lang.String paramArrayName>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<javassist.compiler.CompileError: void <init>(java.lang.String)>($r21);

        throw $r16;

     label1:
        virtualinvoke r3.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

        $i1 = r0.<javassist.compiler.JvstCodeGen: int arrayDim>;

        if $i1 != 1 goto label2;

        $i2 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        if $i2 == 307 goto label3;

     label2:
        $r7 = new javassist.compiler.CompileError;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid type for ");

        $r10 = r0.<javassist.compiler.JvstCodeGen: java.lang.String paramArrayName>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<javassist.compiler.CompileError: void <init>(java.lang.String)>($r12);

        throw $r7;

     label3:
        $r14 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass[] paramTypeList>;

        $r13 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void atAssignParamList(javassist.CtClass[],javassist.bytecode.Bytecode)>($r14, $r13);

        if z0 != 0 goto label5;

        $r15 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r15.<javassist.bytecode.Bytecode: void addOpcode(int)>(87);

        goto label5;

     label4:
        specialinvoke r0.<javassist.compiler.MemberCodeGen: void atFieldAssign(javassist.compiler.ast.Expr,int,javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTree,boolean)>(r1, i0, r2, r3, z0);

     label5:
        return;
    }

    protected void atAssignParamList(javassist.CtClass[], javassist.bytecode.Bytecode) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.CtClass[] r1;
        javassist.bytecode.Bytecode r2;
        int i0, $i2, $i3, $i4, i5, i6;
        javassist.CtClass $r3, $r4;
        boolean $z0;
        byte $b7;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.CtClass[];

        r2 := @parameter1: javassist.bytecode.Bytecode;

        if r1 != null goto label1;

        return;

     label1:
        i5 = specialinvoke r0.<javassist.compiler.JvstCodeGen: int indexOfParam1()>();

        i0 = lengthof r1;

        i6 = 0;

     label2:
        if i6 >= i0 goto label5;

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addOpcode(int)>(89);

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addIconst(int)>(i6);

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addOpcode(int)>(50);

        $r3 = r1[i6];

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void compileUnwrapValue(javassist.CtClass,javassist.bytecode.Bytecode)>($r3, r2);

        $r4 = r1[i6];

        virtualinvoke r2.<javassist.bytecode.Bytecode: int addStore(int,javassist.CtClass)>(i5, $r4);

        $i4 = i5;

        $i3 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        $i2 = r0.<javassist.compiler.JvstCodeGen: int arrayDim>;

        $z0 = staticinvoke <javassist.compiler.JvstCodeGen: boolean is2word(int,int)>($i3, $i2);

        if $z0 == 0 goto label3;

        $b7 = 2;

        goto label4;

     label3:
        $b7 = 1;

     label4:
        i5 = $i4 + $b7;

        i6 = i6 + 1;

        goto label2;

     label5:
        return;
    }

    public void atCastExpr(javassist.compiler.ast.CastExpr) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.compiler.ast.CastExpr r1;
        javassist.compiler.ast.ASTList r2, $r5;
        javassist.compiler.ast.ASTree r3;
        java.lang.String r4, $r7;
        int $i0;
        boolean $z0, $z1, $z2;
        javassist.compiler.ast.Symbol $r6;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.compiler.ast.CastExpr;

        r2 = virtualinvoke r1.<javassist.compiler.ast.CastExpr: javassist.compiler.ast.ASTList getClassName()>();

        if r2 == null goto label2;

        $i0 = virtualinvoke r1.<javassist.compiler.ast.CastExpr: int getArrayDim()>();

        if $i0 != 0 goto label2;

        r3 = virtualinvoke r2.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $z0 = r3 instanceof javassist.compiler.ast.Symbol;

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r2.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        if $r5 != null goto label2;

        $r6 = (javassist.compiler.ast.Symbol) r3;

        r4 = virtualinvoke $r6.<javassist.compiler.ast.Symbol: java.lang.String get()>();

        $r7 = r0.<javassist.compiler.JvstCodeGen: java.lang.String returnCastName>;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void atCastToRtype(javassist.compiler.ast.CastExpr)>(r1);

        return;

     label1:
        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("$w");

        if $z2 == 0 goto label2;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void atCastToWrapper(javassist.compiler.ast.CastExpr)>(r1);

        return;

     label2:
        specialinvoke r0.<javassist.compiler.MemberCodeGen: void atCastExpr(javassist.compiler.ast.CastExpr)>(r1);

        return;
    }

    protected void atCastToRtype(javassist.compiler.ast.CastExpr) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.compiler.ast.CastExpr r1;
        javassist.CtPrimitiveType r2;
        int i0, $i1, $i2, $i3, $i5;
        javassist.compiler.ast.ASTree $r3;
        boolean $z0, $z1;
        javassist.CtClass $r4, $r6, $r7;
        javassist.compiler.CompileError $r5;
        char $c4;
        javassist.bytecode.Bytecode $r8;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.compiler.ast.CastExpr;

        $r3 = virtualinvoke r1.<javassist.compiler.ast.CastExpr: javassist.compiler.ast.ASTree getOprand()>();

        virtualinvoke $r3.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

        $i1 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        if $i1 == 344 goto label1;

        $i2 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        $z0 = staticinvoke <javassist.compiler.JvstCodeGen: boolean isRefType(int)>($i2);

        if $z0 != 0 goto label1;

        $i3 = r0.<javassist.compiler.JvstCodeGen: int arrayDim>;

        if $i3 <= 0 goto label2;

     label1:
        $r7 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass returnType>;

        $r8 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void compileUnwrapValue(javassist.CtClass,javassist.bytecode.Bytecode)>($r7, $r8);

        goto label4;

     label2:
        $r4 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass returnType>;

        $z1 = $r4 instanceof javassist.CtPrimitiveType;

        if $z1 == 0 goto label3;

        $r6 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass returnType>;

        r2 = (javassist.CtPrimitiveType) $r6;

        $c4 = virtualinvoke r2.<javassist.CtPrimitiveType: char getDescriptor()>();

        i0 = staticinvoke <javassist.compiler.MemberResolver: int descToType(char)>($c4);

        $i5 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void atNumCastExpr(int,int)>($i5, i0);

        r0.<javassist.compiler.JvstCodeGen: int exprType> = i0;

        r0.<javassist.compiler.JvstCodeGen: int arrayDim> = 0;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String className> = null;

        goto label4;

     label3:
        $r5 = new javassist.compiler.CompileError;

        specialinvoke $r5.<javassist.compiler.CompileError: void <init>(java.lang.String)>("invalid cast");

        throw $r5;

     label4:
        return;
    }

    protected void atCastToWrapper(javassist.compiler.ast.CastExpr) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.compiler.ast.CastExpr r1;
        javassist.CtClass r2;
        javassist.CtPrimitiveType r3;
        java.lang.String r4, $r6, $r17;
        javassist.compiler.ast.ASTree $r5;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        javassist.compiler.MemberResolver $r7;
        javassist.bytecode.Bytecode $r8, $r9, $r10, $r11, $r13, $r18;
        java.lang.StringBuilder $r12, $r14, $r15, $r16;
        char $c5;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.compiler.ast.CastExpr;

        $r5 = virtualinvoke r1.<javassist.compiler.ast.CastExpr: javassist.compiler.ast.ASTree getOprand()>();

        virtualinvoke $r5.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

        $i0 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        $z0 = staticinvoke <javassist.compiler.JvstCodeGen: boolean isRefType(int)>($i0);

        if $z0 != 0 goto label1;

        $i1 = r0.<javassist.compiler.JvstCodeGen: int arrayDim>;

        if $i1 <= 0 goto label2;

     label1:
        return;

     label2:
        $r7 = r0.<javassist.compiler.JvstCodeGen: javassist.compiler.MemberResolver resolver>;

        $i3 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        $i2 = r0.<javassist.compiler.JvstCodeGen: int arrayDim>;

        $r6 = r0.<javassist.compiler.JvstCodeGen: java.lang.String className>;

        r2 = virtualinvoke $r7.<javassist.compiler.MemberResolver: javassist.CtClass lookupClass(int,int,java.lang.String)>($i3, $i2, $r6);

        $z1 = r2 instanceof javassist.CtPrimitiveType;

        if $z1 == 0 goto label5;

        r3 = (javassist.CtPrimitiveType) r2;

        r4 = virtualinvoke r3.<javassist.CtPrimitiveType: java.lang.String getWrapperName()>();

        $r8 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r8.<javassist.bytecode.Bytecode: void addNew(java.lang.String)>(r4);

        $r9 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r9.<javassist.bytecode.Bytecode: void addOpcode(int)>(89);

        $i4 = virtualinvoke r3.<javassist.CtPrimitiveType: int getDataSize()>();

        if $i4 <= 1 goto label3;

        $r18 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r18.<javassist.bytecode.Bytecode: void addOpcode(int)>(94);

        goto label4;

     label3:
        $r10 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r10.<javassist.bytecode.Bytecode: void addOpcode(int)>(93);

     label4:
        $r11 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r11.<javassist.bytecode.Bytecode: void addOpcode(int)>(88);

        $r13 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $c5 = virtualinvoke r3.<javassist.CtPrimitiveType: char getDescriptor()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")V");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<javassist.bytecode.Bytecode: void addInvokespecial(java.lang.String,java.lang.String,java.lang.String)>(r4, "<init>", $r17);

        r0.<javassist.compiler.JvstCodeGen: int exprType> = 307;

        r0.<javassist.compiler.JvstCodeGen: int arrayDim> = 0;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String className> = "java/lang/Object";

     label5:
        return;
    }

    public void atCallExpr(javassist.compiler.ast.CallExpr) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.compiler.ast.CallExpr r1;
        javassist.compiler.ast.ASTree r2, $r6, $r11;
        java.lang.String r3, $r8;
        boolean $z0, $z1, $z2;
        javassist.compiler.ast.Member $r4;
        javassist.compiler.ProceedHandler $r5, $r9;
        javassist.compiler.ast.ASTList $r7, $r12;
        javassist.bytecode.Bytecode $r10;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.compiler.ast.CallExpr;

        r2 = virtualinvoke r1.<javassist.compiler.ast.CallExpr: javassist.compiler.ast.ASTree oprand1()>();

        $z0 = r2 instanceof javassist.compiler.ast.Member;

        if $z0 == 0 goto label2;

        $r4 = (javassist.compiler.ast.Member) r2;

        r3 = virtualinvoke $r4.<javassist.compiler.ast.Member: java.lang.String get()>();

        $r5 = r0.<javassist.compiler.JvstCodeGen: javassist.compiler.ProceedHandler procHandler>;

        if $r5 == null goto label1;

        $r8 = r0.<javassist.compiler.JvstCodeGen: java.lang.String proceedName>;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label1;

        $r9 = r0.<javassist.compiler.JvstCodeGen: javassist.compiler.ProceedHandler procHandler>;

        $r10 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r11 = virtualinvoke r1.<javassist.compiler.ast.CallExpr: javassist.compiler.ast.ASTree oprand2()>();

        $r12 = (javassist.compiler.ast.ASTList) $r11;

        interfaceinvoke $r9.<javassist.compiler.ProceedHandler: void doit(javassist.compiler.JvstCodeGen,javassist.bytecode.Bytecode,javassist.compiler.ast.ASTList)>(r0, $r10, $r12);

        return;

     label1:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("$cflow");

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r1.<javassist.compiler.ast.CallExpr: javassist.compiler.ast.ASTree oprand2()>();

        $r7 = (javassist.compiler.ast.ASTList) $r6;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void atCflow(javassist.compiler.ast.ASTList)>($r7);

        return;

     label2:
        specialinvoke r0.<javassist.compiler.MemberCodeGen: void atCallExpr(javassist.compiler.ast.CallExpr)>(r1);

        return;
    }

    protected void atCflow(javassist.compiler.ast.ASTList) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.compiler.ast.ASTList r1, $r7;
        java.lang.String r3, $r13, $r14, $r21;
        java.lang.Object[] r4;
        java.lang.StringBuffer $r5;
        javassist.compiler.CompileError $r6, $r17;
        javassist.compiler.ast.ASTree $r8;
        javassist.compiler.MemberResolver $r9;
        javassist.ClassPool $r10;
        java.lang.Object $r11, $r12;
        javassist.bytecode.Bytecode $r15, $r16;
        java.lang.StringBuilder $r18, $r19, $r20;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.compiler.ast.ASTList;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        if r1 == null goto label1;

        $r7 = virtualinvoke r1.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        if $r7 == null goto label2;

     label1:
        $r6 = new javassist.compiler.CompileError;

        specialinvoke $r6.<javassist.compiler.CompileError: void <init>(java.lang.String)>("bad $cflow");

        throw $r6;

     label2:
        $r8 = virtualinvoke r1.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        staticinvoke <javassist.compiler.JvstCodeGen: void makeCflowName(java.lang.StringBuffer,javassist.compiler.ast.ASTree)>($r5, $r8);

        r3 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = r0.<javassist.compiler.JvstCodeGen: javassist.compiler.MemberResolver resolver>;

        $r10 = virtualinvoke $r9.<javassist.compiler.MemberResolver: javassist.ClassPool getClassPool()>();

        r4 = virtualinvoke $r10.<javassist.ClassPool: java.lang.Object[] lookupCflow(java.lang.String)>(r3);

        if r4 != null goto label3;

        $r17 = new javassist.compiler.CompileError;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no such $cflow: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<javassist.compiler.CompileError: void <init>(java.lang.String)>($r21);

        throw $r17;

     label3:
        $r15 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        $r11 = r4[0];

        $r14 = (java.lang.String) $r11;

        $r12 = r4[1];

        $r13 = (java.lang.String) $r12;

        virtualinvoke $r15.<javassist.bytecode.Bytecode: void addGetstatic(java.lang.String,java.lang.String,java.lang.String)>($r14, $r13, "Ljavassist/runtime/Cflow;");

        $r16 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r16.<javassist.bytecode.Bytecode: void addInvokevirtual(java.lang.String,java.lang.String,java.lang.String)>("javassist.runtime.Cflow", "value", "()I");

        r0.<javassist.compiler.JvstCodeGen: int exprType> = 324;

        r0.<javassist.compiler.JvstCodeGen: int arrayDim> = 0;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String className> = null;

        return;
    }

    private static void makeCflowName(java.lang.StringBuffer, javassist.compiler.ast.ASTree) throws javassist.compiler.CompileError
    {
        java.lang.StringBuffer r0;
        javassist.compiler.ast.ASTree r1, $r4, $r6;
        javassist.compiler.ast.Expr r2;
        boolean $z0, $z1;
        javassist.compiler.CompileError $r3;
        int $i0;
        javassist.compiler.ast.Symbol $r7;
        java.lang.String $r8;

        r0 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: javassist.compiler.ast.ASTree;

        $z0 = r1 instanceof javassist.compiler.ast.Symbol;

        if $z0 == 0 goto label1;

        $r7 = (javassist.compiler.ast.Symbol) r1;

        $r8 = virtualinvoke $r7.<javassist.compiler.ast.Symbol: java.lang.String get()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        return;

     label1:
        $z1 = r1 instanceof javassist.compiler.ast.Expr;

        if $z1 == 0 goto label2;

        r2 = (javassist.compiler.ast.Expr) r1;

        $i0 = virtualinvoke r2.<javassist.compiler.ast.Expr: int getOperator()>();

        if $i0 != 46 goto label2;

        $r4 = virtualinvoke r2.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand1()>();

        staticinvoke <javassist.compiler.JvstCodeGen: void makeCflowName(java.lang.StringBuffer,javassist.compiler.ast.ASTree)>(r0, $r4);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r6 = virtualinvoke r2.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree oprand2()>();

        staticinvoke <javassist.compiler.JvstCodeGen: void makeCflowName(java.lang.StringBuffer,javassist.compiler.ast.ASTree)>(r0, $r6);

        return;

     label2:
        $r3 = new javassist.compiler.CompileError;

        specialinvoke $r3.<javassist.compiler.CompileError: void <init>(java.lang.String)>("bad $cflow");

        throw $r3;
    }

    public boolean isParamListName(javassist.compiler.ast.ASTList)
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.compiler.ast.ASTList r1, $r4;
        javassist.compiler.ast.ASTree r2;
        javassist.CtClass[] $r3;
        boolean $z0, $z1, $z2;
        javassist.compiler.ast.Member $r5;
        java.lang.String $r6, $r7;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.compiler.ast.ASTList;

        $r3 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass[] paramTypeList>;

        if $r3 == null goto label3;

        if r1 == null goto label3;

        $r4 = virtualinvoke r1.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        if $r4 != null goto label3;

        r2 = virtualinvoke r1.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $z0 = r2 instanceof javassist.compiler.ast.Member;

        if $z0 == 0 goto label1;

        $r5 = (javassist.compiler.ast.Member) r2;

        $r6 = virtualinvoke $r5.<javassist.compiler.ast.Member: java.lang.String get()>();

        $r7 = r0.<javassist.compiler.JvstCodeGen: java.lang.String paramListName>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        return 0;
    }

    public int getMethodArgsLength(javassist.compiler.ast.ASTList)
    {
        javassist.compiler.JvstCodeGen r0;
        java.lang.String r1, $r4;
        javassist.compiler.ast.ASTree r2;
        boolean $z0, $z1;
        javassist.compiler.ast.Member $r3;
        javassist.CtClass[] $r5, $r6;
        int $i0, i1;
        javassist.compiler.ast.ASTList r7;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r7 := @parameter0: javassist.compiler.ast.ASTList;

        r1 = r0.<javassist.compiler.JvstCodeGen: java.lang.String paramListName>;

        i1 = 0;

     label1:
        if r7 == null goto label4;

        r2 = virtualinvoke r7.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $z0 = r2 instanceof javassist.compiler.ast.Member;

        if $z0 == 0 goto label2;

        $r3 = (javassist.compiler.ast.Member) r2;

        $r4 = virtualinvoke $r3.<javassist.compiler.ast.Member: java.lang.String get()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r5 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass[] paramTypeList>;

        if $r5 == null goto label3;

        $r6 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass[] paramTypeList>;

        $i0 = lengthof $r6;

        i1 = i1 + $i0;

        goto label3;

     label2:
        i1 = i1 + 1;

     label3:
        r7 = virtualinvoke r7.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        goto label1;

     label4:
        return i1;
    }

    public void atMethodArgs(javassist.compiler.ast.ASTList, int[], int[], java.lang.String[]) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        int[] r1, r2;
        java.lang.String[] r3;
        javassist.CtClass[] r4;
        java.lang.String r5, $r8, $r10, $r12;
        javassist.compiler.ast.ASTree r6;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        javassist.CtClass r7;
        boolean $z0, $z1;
        javassist.compiler.ast.Member $r9;
        javassist.bytecode.Bytecode $r11;
        javassist.compiler.ast.ASTList r13;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r13 := @parameter0: javassist.compiler.ast.ASTList;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        r3 := @parameter3: java.lang.String[];

        r4 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass[] paramTypeList>;

        r5 = r0.<javassist.compiler.JvstCodeGen: java.lang.String paramListName>;

        i6 = 0;

     label1:
        if r13 == null goto label6;

        r6 = virtualinvoke r13.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $z0 = r6 instanceof javassist.compiler.ast.Member;

        if $z0 == 0 goto label4;

        $r9 = (javassist.compiler.ast.Member) r6;

        $r10 = virtualinvoke $r9.<javassist.compiler.ast.Member: java.lang.String get()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label4;

        if r4 == null goto label5;

        i0 = lengthof r4;

        i7 = specialinvoke r0.<javassist.compiler.JvstCodeGen: int indexOfParam1()>();

        i8 = 0;

     label2:
        if i8 >= i0 goto label3;

        r7 = r4[i8];

        $r11 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        $i3 = virtualinvoke $r11.<javassist.bytecode.Bytecode: int addLoad(int,javassist.CtClass)>(i7, r7);

        i7 = i7 + $i3;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void setType(javassist.CtClass)>(r7);

        $i4 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        r1[i6] = $i4;

        $i5 = r0.<javassist.compiler.JvstCodeGen: int arrayDim>;

        r2[i6] = $i5;

        $r12 = r0.<javassist.compiler.JvstCodeGen: java.lang.String className>;

        r3[i6] = $r12;

        i6 = i6 + 1;

        i8 = i8 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        virtualinvoke r6.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

        $i1 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        r1[i6] = $i1;

        $i2 = r0.<javassist.compiler.JvstCodeGen: int arrayDim>;

        r2[i6] = $i2;

        $r8 = r0.<javassist.compiler.JvstCodeGen: java.lang.String className>;

        r3[i6] = $r8;

        i6 = i6 + 1;

     label5:
        r13 = virtualinvoke r13.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        goto label1;

     label6:
        return;
    }

    void compileInvokeSpecial(javassist.compiler.ast.ASTree, int, java.lang.String, javassist.compiler.ast.ASTList) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.compiler.ast.ASTree r1;
        int i0, i1;
        java.lang.String r2;
        javassist.compiler.ast.ASTList r3;
        java.lang.String[] $r4;
        int[] $r5, $r6;
        javassist.bytecode.Bytecode $r7;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: javassist.compiler.ast.ASTList;

        virtualinvoke r1.<javassist.compiler.ast.ASTree: void accept(javassist.compiler.ast.Visitor)>(r0);

        i1 = virtualinvoke r0.<javassist.compiler.JvstCodeGen: int getMethodArgsLength(javassist.compiler.ast.ASTList)>(r3);

        $r6 = newarray (int)[i1];

        $r5 = newarray (int)[i1];

        $r4 = newarray (java.lang.String)[i1];

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void atMethodArgs(javassist.compiler.ast.ASTList,int[],int[],java.lang.String[])>(r3, $r6, $r5, $r4);

        $r7 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r7.<javassist.bytecode.Bytecode: void addInvokespecial(int,java.lang.String)>(i0, r2);

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void setReturnType(java.lang.String,boolean,boolean)>(r2, 0, 0);

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void addNullIfVoid()>();

        return;
    }

    protected void atReturnStmnt(javassist.compiler.ast.Stmnt) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.compiler.ast.Stmnt r1;
        javassist.CtClass $r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;
        javassist.bytecode.Bytecode $r4, $r5;
        javassist.compiler.ast.ASTree r6;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.compiler.ast.Stmnt;

        r6 = virtualinvoke r1.<javassist.compiler.ast.Stmnt: javassist.compiler.ast.ASTree getLeft()>();

        if r6 == null goto label3;

        $r3 = r0.<javassist.compiler.JvstCodeGen: javassist.CtClass returnType>;

        $r2 = <javassist.CtClass: javassist.CtClass voidType>;

        if $r3 != $r2 goto label3;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void compileExpr(javassist.compiler.ast.ASTree)>(r6);

        $i1 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        $i0 = r0.<javassist.compiler.JvstCodeGen: int arrayDim>;

        $z0 = staticinvoke <javassist.compiler.JvstCodeGen: boolean is2word(int,int)>($i1, $i0);

        if $z0 == 0 goto label1;

        $r5 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r5.<javassist.bytecode.Bytecode: void addOpcode(int)>(88);

        goto label2;

     label1:
        $i2 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        if $i2 == 344 goto label2;

        $r4 = r0.<javassist.compiler.JvstCodeGen: javassist.bytecode.Bytecode bytecode>;

        virtualinvoke $r4.<javassist.bytecode.Bytecode: void addOpcode(int)>(87);

     label2:
        r6 = null;

     label3:
        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void atReturnStmnt2(javassist.compiler.ast.ASTree)>(r6);

        return;
    }

    public int recordReturnType(javassist.CtClass, java.lang.String, java.lang.String, javassist.compiler.SymbolTable) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.CtClass r1;
        java.lang.String r2, r3;
        javassist.compiler.SymbolTable r4;
        int i0, i1, $i2;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: javassist.compiler.SymbolTable;

        r0.<javassist.compiler.JvstCodeGen: javassist.CtClass returnType> = r1;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String returnCastName> = r2;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String returnVarName> = r3;

        if r3 != null goto label1;

        return -1;

     label1:
        i0 = virtualinvoke r0.<javassist.compiler.JvstCodeGen: int getMaxLocals()>();

        $i2 = specialinvoke r0.<javassist.compiler.JvstCodeGen: int recordVar(javassist.CtClass,java.lang.String,int,javassist.compiler.SymbolTable)>(r1, r3, i0, r4);

        i1 = i0 + $i2;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void setMaxLocals(int)>(i1);

        return i0;
    }

    public void recordType(javassist.CtClass)
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.CtClass r1;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.CtClass;

        r0.<javassist.compiler.JvstCodeGen: javassist.CtClass dollarType> = r1;

        return;
    }

    public int recordParams(javassist.CtClass[], boolean, java.lang.String, java.lang.String, java.lang.String, javassist.compiler.SymbolTable) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.CtClass[] r1;
        boolean z0, $z2;
        java.lang.String r2, r3, r4, $r6;
        javassist.compiler.SymbolTable r5;
        int $i0;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.CtClass[];

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: javassist.compiler.SymbolTable;

        if z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r6 = virtualinvoke r0.<javassist.compiler.JvstCodeGen: java.lang.String getThisName()>();

        $i0 = virtualinvoke r0.<javassist.compiler.JvstCodeGen: int recordParams(javassist.CtClass[],boolean,java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.String,javassist.compiler.SymbolTable)>(r1, z0, r2, r3, r4, $z2, 0, $r6, r5);

        return $i0;
    }

    public int recordParams(javassist.CtClass[], boolean, java.lang.String, java.lang.String, java.lang.String, boolean, int, java.lang.String, javassist.compiler.SymbolTable) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.CtClass[] r1;
        boolean z0, z1;
        java.lang.String r2, r3, r4, r5, $r12, $r17, $r19, r20;
        int i0, $i1, $i2, $i3, i5, i6, $i7;
        javassist.compiler.SymbolTable r6;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r14, $r15;
        javassist.CtClass $r9;
        javassist.compiler.ast.Declarator $r16;
        javassist.compiler.ast.Symbol $r18;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.CtClass[];

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        z1 := @parameter5: boolean;

        i0 := @parameter6: int;

        r5 := @parameter7: java.lang.String;

        r6 := @parameter8: javassist.compiler.SymbolTable;

        r0.<javassist.compiler.JvstCodeGen: javassist.CtClass[] paramTypeList> = r1;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String paramArrayName> = r3;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String paramListName> = r4;

        r0.<javassist.compiler.JvstCodeGen: int paramVarBase> = i0;

        r0.<javassist.compiler.JvstCodeGen: boolean useParam0> = z1;

        if r5 == null goto label1;

        $r19 = staticinvoke <javassist.compiler.MemberResolver: java.lang.String jvmToJavaName(java.lang.String)>(r5);

        r0.<javassist.compiler.JvstCodeGen: java.lang.String param0Type> = $r19;

     label1:
        r0.<javassist.compiler.JvstCodeGen: boolean inStaticMethod> = z0;

        i5 = i0;

        if z1 == 0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new javassist.compiler.ast.Declarator;

        $r17 = staticinvoke <javassist.compiler.MemberResolver: java.lang.String javaToJvmName(java.lang.String)>(r5);

        i5 = i0 + 1;

        $r18 = new javassist.compiler.ast.Symbol;

        specialinvoke $r18.<javassist.compiler.ast.Symbol: void <init>(java.lang.String)>(r20);

        specialinvoke $r16.<javassist.compiler.ast.Declarator: void <init>(int,java.lang.String,int,int,javassist.compiler.ast.Symbol)>(307, $r17, 0, i0, $r18);

        virtualinvoke r6.<javassist.compiler.SymbolTable: void append(java.lang.String,javassist.compiler.ast.Declarator)>(r20, $r16);

     label2:
        i6 = 0;

     label3:
        $i7 = lengthof r1;

        if i6 >= $i7 goto label4;

        $r9 = r1[i6];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $i2 = i6 + 1;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = specialinvoke r0.<javassist.compiler.JvstCodeGen: int recordVar(javassist.CtClass,java.lang.String,int,javassist.compiler.SymbolTable)>($r9, $r12, i5, r6);

        i5 = i5 + $i3;

        i6 = i6 + 1;

        goto label3;

     label4:
        $i1 = virtualinvoke r0.<javassist.compiler.JvstCodeGen: int getMaxLocals()>();

        if $i1 >= i5 goto label5;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void setMaxLocals(int)>(i5);

     label5:
        return i5;
    }

    public int recordVariable(javassist.CtClass, java.lang.String, javassist.compiler.SymbolTable) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.CtClass r1;
        java.lang.String r2;
        javassist.compiler.SymbolTable r3;
        int i0, i1, $i2;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.compiler.SymbolTable;

        if r2 != null goto label1;

        return -1;

     label1:
        i0 = virtualinvoke r0.<javassist.compiler.JvstCodeGen: int getMaxLocals()>();

        $i2 = specialinvoke r0.<javassist.compiler.JvstCodeGen: int recordVar(javassist.CtClass,java.lang.String,int,javassist.compiler.SymbolTable)>(r1, r2, i0, r3);

        i1 = i0 + $i2;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void setMaxLocals(int)>(i1);

        return i0;
    }

    private int recordVar(javassist.CtClass, java.lang.String, int, javassist.compiler.SymbolTable) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.CtClass r1, $r5;
        java.lang.String r2, $r8;
        int i0, $i1, $i2, $i3, $i4;
        javassist.compiler.SymbolTable r3;
        javassist.compiler.ast.Declarator $r6;
        javassist.compiler.ast.Symbol $r7;
        boolean $z0;
        byte $b5;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: javassist.compiler.SymbolTable;

        $r5 = <javassist.CtClass: javassist.CtClass voidType>;

        if r1 != $r5 goto label1;

        r0.<javassist.compiler.JvstCodeGen: int exprType> = 307;

        r0.<javassist.compiler.JvstCodeGen: int arrayDim> = 0;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String className> = "java/lang/Object";

        goto label2;

     label1:
        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void setType(javassist.CtClass)>(r1);

     label2:
        $r6 = new javassist.compiler.ast.Declarator;

        $i1 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        $r8 = r0.<javassist.compiler.JvstCodeGen: java.lang.String className>;

        $i2 = r0.<javassist.compiler.JvstCodeGen: int arrayDim>;

        $r7 = new javassist.compiler.ast.Symbol;

        specialinvoke $r7.<javassist.compiler.ast.Symbol: void <init>(java.lang.String)>(r2);

        specialinvoke $r6.<javassist.compiler.ast.Declarator: void <init>(int,java.lang.String,int,int,javassist.compiler.ast.Symbol)>($i1, $r8, $i2, i0, $r7);

        virtualinvoke r3.<javassist.compiler.SymbolTable: void append(java.lang.String,javassist.compiler.ast.Declarator)>(r2, $r6);

        $i4 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        $i3 = r0.<javassist.compiler.JvstCodeGen: int arrayDim>;

        $z0 = staticinvoke <javassist.compiler.JvstCodeGen: boolean is2word(int,int)>($i4, $i3);

        if $z0 == 0 goto label3;

        $b5 = 2;

        goto label4;

     label3:
        $b5 = 1;

     label4:
        return $b5;
    }

    public void recordVariable(java.lang.String, java.lang.String, int, javassist.compiler.SymbolTable) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        java.lang.String r1, r2, r5;
        int i0, i2, $i4, $i5, $i6, $i7, $i8, i9;
        javassist.compiler.SymbolTable r3;
        char $c3;
        javassist.compiler.ast.Declarator $r6;
        javassist.compiler.ast.Symbol $r7;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: javassist.compiler.SymbolTable;

        i9 = 0;

     label1:
        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i9);

        if $c3 != 91 goto label2;

        i9 = i9 + 1;

        goto label1;

     label2:
        i2 = staticinvoke <javassist.compiler.MemberResolver: int descToType(char)>($c3);

        r5 = null;

        if i2 != 307 goto label4;

        if i9 != 0 goto label3;

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        $i8 = $i7 - 1;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i8);

        goto label4;

     label3:
        $i4 = i9 + 1;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i4, $i6);

     label4:
        $r6 = new javassist.compiler.ast.Declarator;

        $r7 = new javassist.compiler.ast.Symbol;

        specialinvoke $r7.<javassist.compiler.ast.Symbol: void <init>(java.lang.String)>(r2);

        specialinvoke $r6.<javassist.compiler.ast.Declarator: void <init>(int,java.lang.String,int,int,javassist.compiler.ast.Symbol)>(i2, r5, i9, i0, $r7);

        virtualinvoke r3.<javassist.compiler.SymbolTable: void append(java.lang.String,javassist.compiler.ast.Declarator)>(r2, $r6);

        return;
    }

    public static int compileParameterList(javassist.bytecode.Bytecode, javassist.CtClass[], int)
    {
        javassist.bytecode.Bytecode r0;
        javassist.CtClass[] r1, r2;
        int i0, i1, i2, i3;
        javassist.CtPrimitiveType r3;
        java.lang.String r4, $r8;
        javassist.CtClass $r5, $r6, $r7;
        boolean $z0;

        r0 := @parameter0: javassist.bytecode.Bytecode;

        r1 := @parameter1: javassist.CtClass[];

        i2 := @parameter2: int;

        if r1 != null goto label1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIconst(int)>(0);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addAnewarray(java.lang.String)>("java.lang.Object");

        return 1;

     label1:
        r2 = newarray (javassist.CtClass)[1];

        i0 = lengthof r1;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIconst(int)>(i0);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addAnewarray(java.lang.String)>("java.lang.Object");

        i3 = 0;

     label2:
        if i3 >= i0 goto label5;

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(89);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addIconst(int)>(i3);

        $r5 = r1[i3];

        $z0 = virtualinvoke $r5.<javassist.CtClass: boolean isPrimitive()>();

        if $z0 == 0 goto label3;

        $r6 = r1[i3];

        r3 = (javassist.CtPrimitiveType) $r6;

        r4 = virtualinvoke r3.<javassist.CtPrimitiveType: java.lang.String getWrapperName()>();

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addNew(java.lang.String)>(r4);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(89);

        i1 = virtualinvoke r0.<javassist.bytecode.Bytecode: int addLoad(int,javassist.CtClass)>(i2, r3);

        i2 = i2 + i1;

        r2[0] = r3;

        $r7 = <javassist.CtClass: javassist.CtClass voidType>;

        $r8 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String ofMethod(javassist.CtClass,javassist.CtClass[])>($r7, r2);

        virtualinvoke r0.<javassist.bytecode.Bytecode: void addInvokespecial(java.lang.String,java.lang.String,java.lang.String)>(r4, "<init>", $r8);

        goto label4;

     label3:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addAload(int)>(i2);

        i2 = i2 + 1;

     label4:
        virtualinvoke r0.<javassist.bytecode.Bytecode: void addOpcode(int)>(83);

        i3 = i3 + 1;

        goto label2;

     label5:
        return 8;
    }

    protected void compileUnwrapValue(javassist.CtClass, javassist.bytecode.Bytecode) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.CtClass r1, $r5;
        javassist.bytecode.Bytecode r2;
        javassist.CtPrimitiveType r3;
        java.lang.String r4, $r6, $r7, $r11, $r13;
        int $i0;
        boolean $z0;
        javassist.compiler.CompileError $r8;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: javassist.bytecode.Bytecode;

        $r5 = <javassist.CtClass: javassist.CtClass voidType>;

        if r1 != $r5 goto label1;

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void addNullIfVoid()>();

        return;

     label1:
        $i0 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        if $i0 != 344 goto label2;

        $r8 = new javassist.compiler.CompileError;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid type for ");

        $r11 = r0.<javassist.compiler.JvstCodeGen: java.lang.String returnCastName>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<javassist.compiler.CompileError: void <init>(java.lang.String)>($r13);

        throw $r8;

     label2:
        $z0 = r1 instanceof javassist.CtPrimitiveType;

        if $z0 == 0 goto label3;

        r3 = (javassist.CtPrimitiveType) r1;

        r4 = virtualinvoke r3.<javassist.CtPrimitiveType: java.lang.String getWrapperName()>();

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addCheckcast(java.lang.String)>(r4);

        $r6 = virtualinvoke r3.<javassist.CtPrimitiveType: java.lang.String getGetMethodName()>();

        $r7 = virtualinvoke r3.<javassist.CtPrimitiveType: java.lang.String getGetMethodDescriptor()>();

        virtualinvoke r2.<javassist.bytecode.Bytecode: void addInvokevirtual(java.lang.String,java.lang.String,java.lang.String)>(r4, $r6, $r7);

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void setType(javassist.CtClass)>(r1);

        goto label4;

     label3:
        virtualinvoke r2.<javassist.bytecode.Bytecode: void addCheckcast(javassist.CtClass)>(r1);

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void setType(javassist.CtClass)>(r1);

     label4:
        return;
    }

    public void setType(javassist.CtClass) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.CtClass r1;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.CtClass;

        specialinvoke r0.<javassist.compiler.JvstCodeGen: void setType(javassist.CtClass,int)>(r1, 0);

        return;
    }

    private void setType(javassist.CtClass, int) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.CtClass r1, $r4;
        int i0, $i1, $i3;
        boolean $z0, $z1;
        java.lang.String $r2, $r3, $r9, $r11;
        char $c2;
        javassist.NotFoundException $r5;
        javassist.compiler.CompileError $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        javassist.CtPrimitiveType r12;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.CtClass;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r1.<javassist.CtClass: boolean isPrimitive()>();

        if $z0 == 0 goto label1;

        r12 = (javassist.CtPrimitiveType) r1;

        $c2 = virtualinvoke r12.<javassist.CtPrimitiveType: char getDescriptor()>();

        $i3 = staticinvoke <javassist.compiler.MemberResolver: int descToType(char)>($c2);

        r0.<javassist.compiler.JvstCodeGen: int exprType> = $i3;

        r0.<javassist.compiler.JvstCodeGen: int arrayDim> = i0;

        r0.<javassist.compiler.JvstCodeGen: java.lang.String className> = null;

        goto label6;

     label1:
        $z1 = virtualinvoke r1.<javassist.CtClass: boolean isArray()>();

        if $z1 == 0 goto label5;

     label2:
        $r4 = virtualinvoke r1.<javassist.CtClass: javassist.CtClass getComponentType()>();

        $i1 = i0 + 1;

        specialinvoke r0.<javassist.compiler.JvstCodeGen: void setType(javassist.CtClass,int)>($r4, $i1);

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        $r6 = new javassist.compiler.CompileError;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("undefined type: ");

        $r9 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<javassist.compiler.CompileError: void <init>(java.lang.String)>($r11);

        throw $r6;

     label5:
        r0.<javassist.compiler.JvstCodeGen: int exprType> = 307;

        r0.<javassist.compiler.JvstCodeGen: int arrayDim> = i0;

        $r2 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $r3 = staticinvoke <javassist.compiler.MemberResolver: java.lang.String javaToJvmName(java.lang.String)>($r2);

        r0.<javassist.compiler.JvstCodeGen: java.lang.String className> = $r3;

     label6:
        return;

        catch javassist.NotFoundException from label2 to label3 with label4;
    }

    public void doNumCast(javassist.CtClass) throws javassist.compiler.CompileError
    {
        javassist.compiler.JvstCodeGen r0;
        javassist.CtClass r1;
        javassist.CtPrimitiveType r2;
        int $i0, $i1, $i2, $i4;
        boolean $z0, $z1;
        javassist.compiler.CompileError $r3;
        char $c3;

        r0 := @this: javassist.compiler.JvstCodeGen;

        r1 := @parameter0: javassist.CtClass;

        $i0 = r0.<javassist.compiler.JvstCodeGen: int arrayDim>;

        if $i0 != 0 goto label2;

        $i1 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        $z0 = staticinvoke <javassist.compiler.JvstCodeGen: boolean isRefType(int)>($i1);

        if $z0 != 0 goto label2;

        $z1 = r1 instanceof javassist.CtPrimitiveType;

        if $z1 == 0 goto label1;

        r2 = (javassist.CtPrimitiveType) r1;

        $i2 = r0.<javassist.compiler.JvstCodeGen: int exprType>;

        $c3 = virtualinvoke r2.<javassist.CtPrimitiveType: char getDescriptor()>();

        $i4 = staticinvoke <javassist.compiler.MemberResolver: int descToType(char)>($c3);

        virtualinvoke r0.<javassist.compiler.JvstCodeGen: void atNumCastExpr(int,int)>($i2, $i4);

        goto label2;

     label1:
        $r3 = new javassist.compiler.CompileError;

        specialinvoke $r3.<javassist.compiler.CompileError: void <init>(java.lang.String)>("type mismatch");

        throw $r3;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <javassist.compiler.JvstCodeGen: java.lang.String cflowName> = "$cflow";

        <javassist.compiler.JvstCodeGen: java.lang.String wrapperCastName> = "$w";

        <javassist.compiler.JvstCodeGen: java.lang.String clazzName> = "$class";

        <javassist.compiler.JvstCodeGen: java.lang.String dollarTypeName> = "$type";

        <javassist.compiler.JvstCodeGen: java.lang.String sigName> = "$sig";

        return;
    }
}
