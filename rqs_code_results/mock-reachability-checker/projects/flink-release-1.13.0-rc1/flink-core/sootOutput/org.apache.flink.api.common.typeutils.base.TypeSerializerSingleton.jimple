public abstract class org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton extends org.apache.flink.api.common.typeutils.TypeSerializer
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.TypeSerializer: void <init>()>();

        return;
    }

    public org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton duplicate()
    {
        org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton;

        return r0;
    }

    public int hashCode()
    {
        org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton r0;
        java.lang.Class $r1;
        int $i0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton r0;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile org.apache.flink.api.common.typeutils.TypeSerializer duplicate()
    {
        org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton r0, $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton: org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton duplicate()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton: long serialVersionUID> = 8766687317209282373L;

        return;
    }
}
