public class javassist.bytecode.NestMembersAttribute extends javassist.bytecode.AttributeInfo
{
    public static final java.lang.String tag;

    void <init>(javassist.bytecode.ConstPool, int, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.NestMembersAttribute r0;
        javassist.bytecode.ConstPool r1;
        int i0;
        java.io.DataInputStream r2;

        r0 := @this: javassist.bytecode.NestMembersAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.DataInputStream;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r1, i0, r2);

        return;
    }

    private void <init>(javassist.bytecode.ConstPool, byte[])
    {
        javassist.bytecode.NestMembersAttribute r0;
        javassist.bytecode.ConstPool r1;
        byte[] r2;

        r0 := @this: javassist.bytecode.NestMembersAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: byte[];

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, "NestMembers", r2);

        return;
    }

    public javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.NestMembersAttribute r0, $r6;
        javassist.bytecode.ConstPool r1, r5;
        java.util.Map r2;
        byte[] r3, r4;
        int i0, i1, i2, $i3, i4, i5;

        r0 := @this: javassist.bytecode.NestMembersAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        r3 = virtualinvoke r0.<javassist.bytecode.NestMembersAttribute: byte[] get()>();

        $i3 = lengthof r3;

        r4 = newarray (byte)[$i3];

        r5 = virtualinvoke r0.<javassist.bytecode.NestMembersAttribute: javassist.bytecode.ConstPool getConstPool()>();

        i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, 0);

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i0, r4, 0);

        i4 = 0;

        i5 = 2;

     label1:
        if i4 >= i0 goto label2;

        i1 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, i5);

        i2 = virtualinvoke r5.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>(i1, r1, r2);

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i2, r4, i5);

        i4 = i4 + 1;

        i5 = i5 + 2;

        goto label1;

     label2:
        $r6 = new javassist.bytecode.NestMembersAttribute;

        specialinvoke $r6.<javassist.bytecode.NestMembersAttribute: void <init>(javassist.bytecode.ConstPool,byte[])>(r1, r4);

        return $r6;
    }

    public int numberOfClasses()
    {
        javassist.bytecode.NestMembersAttribute r0;
        byte[] $r1;
        int $i0;

        r0 := @this: javassist.bytecode.NestMembersAttribute;

        $r1 = r0.<javassist.bytecode.NestMembersAttribute: byte[] info>;

        $i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, 0);

        return $i0;
    }

    public int memberClass(int)
    {
        javassist.bytecode.NestMembersAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.NestMembersAttribute;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.NestMembersAttribute: byte[] info>;

        $i1 = i0 * 2;

        $i2 = $i1 + 2;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.NestMembersAttribute: java.lang.String tag> = "NestMembers";

        return;
    }
}
