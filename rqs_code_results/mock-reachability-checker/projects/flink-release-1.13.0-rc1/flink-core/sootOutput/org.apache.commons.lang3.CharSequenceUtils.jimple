public class org.apache.commons.lang3.CharSequenceUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.lang3.CharSequenceUtils r0;

        r0 := @this: org.apache.commons.lang3.CharSequenceUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.CharSequence subSequence(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0, $r1;
        int i0, $i1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r1 = null;

        goto label2;

     label1:
        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, $i1);

     label2:
        return $r1;
    }

    static int indexOf(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1, $i3, i4, i5;
        boolean $z0;
        char $c2;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i4 := @parameter2: int;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.String) r0;

        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(i0, i4);

        return $i3;

     label1:
        i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i4 >= 0 goto label2;

        i4 = 0;

     label2:
        i5 = i4;

     label3:
        if i5 >= i1 goto label5;

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i5);

        if $c2 != i0 goto label4;

        return i5;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        return -1;
    }

    static int indexOf(java.lang.CharSequence, java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0, r1;
        int i0, $i1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        $r2 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String,int)>($r3, i0);

        return $i1;
    }

    static int lastIndexOf(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1, $i3, i4, i5;
        boolean $z0;
        char $c2;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i4 := @parameter2: int;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.String) r0;

        $i3 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int,int)>(i0, i4);

        return $i3;

     label1:
        i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i4 >= 0 goto label2;

        return -1;

     label2:
        if i4 < i1 goto label3;

        i4 = i1 - 1;

     label3:
        i5 = i4;

     label4:
        if i5 < 0 goto label6;

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i5);

        if $c2 != i0 goto label5;

        return i5;

     label5:
        i5 = i5 + -1;

        goto label4;

     label6:
        return -1;
    }

    static int lastIndexOf(java.lang.CharSequence, java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0, r1;
        int i0, $i1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        $r2 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String,int)>($r3, i0);

        return $i1;
    }

    static char[] toCharArray(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int i0, $i1, i3;
        char[] r1, $r3;
        boolean $z0;
        char $c2;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.CharSequence;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.String) r0;

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        return $r3;

     label1:
        i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        r1 = newarray (char)[$i1];

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i3);

        r1[i3] = $c2;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r1;
    }

    static boolean regionMatches(java.lang.CharSequence, boolean, int, java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0, r1;
        boolean z0, $z1, $z2, $z3;
        int i0, i1, i2, $i5, $i6, i11, i12, i13, $i14;
        char c3, c4, $c7, $c8, $c9, $c10;
        java.lang.String $r2, $r3;

        r0 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.CharSequence;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label1;

        $z2 = r1 instanceof java.lang.String;

        if $z2 == 0 goto label1;

        $r3 = (java.lang.String) r0;

        $r2 = (java.lang.String) r1;

        $z3 = virtualinvoke $r3.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(z0, i0, $r2, i1, i2);

        return $z3;

     label1:
        i11 = i0;

        i12 = i1;

        i13 = i2;

     label2:
        $i14 = i13;

        i13 = i13 + -1;

        if $i14 <= 0 goto label6;

        $i5 = i11;

        i11 = i11 + 1;

        c3 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i5);

        $i6 = i12;

        i12 = i12 + 1;

        c4 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i6);

        if c3 != c4 goto label3;

        goto label2;

     label3:
        if z0 != 0 goto label4;

        return 0;

     label4:
        $c7 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c3);

        $c8 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c4);

        if $c7 == $c8 goto label5;

        $c9 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c3);

        $c10 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c4);

        if $c9 == $c10 goto label5;

        return 0;

     label5:
        goto label2;

     label6:
        return 1;
    }
}
