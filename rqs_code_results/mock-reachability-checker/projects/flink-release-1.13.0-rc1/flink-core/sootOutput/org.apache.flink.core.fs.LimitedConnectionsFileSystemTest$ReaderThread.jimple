final class org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread extends org.apache.flink.core.testutils.CheckedThread
{
    private final org.apache.flink.core.fs.LimitedConnectionsFileSystem fs;
    private final org.apache.flink.core.fs.Path path;
    private final int maxConcurrentInputStreams;
    private final int maxConcurrentStreamsTotal;

    void <init>(org.apache.flink.core.fs.LimitedConnectionsFileSystem, org.apache.flink.core.fs.Path, int, int)
    {
        org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread r0;
        org.apache.flink.core.fs.LimitedConnectionsFileSystem r1;
        org.apache.flink.core.fs.Path r2;
        int i0, i1;

        r0 := @this: org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread;

        r1 := @parameter0: org.apache.flink.core.fs.LimitedConnectionsFileSystem;

        r2 := @parameter1: org.apache.flink.core.fs.Path;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.apache.flink.core.testutils.CheckedThread: void <init>()>();

        r0.<org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread: org.apache.flink.core.fs.LimitedConnectionsFileSystem fs> = r1;

        r0.<org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread: org.apache.flink.core.fs.Path path> = r2;

        r0.<org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread: int maxConcurrentInputStreams> = i0;

        r0.<org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread: int maxConcurrentStreamsTotal> = i1;

        return;
    }

    public void go() throws java.lang.Exception
    {
        org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread r0;
        org.apache.flink.core.fs.FSDataInputStream r1;
        org.apache.flink.core.fs.Path $r4;
        org.apache.flink.core.fs.LimitedConnectionsFileSystem $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Throwable $r9, $r10, $r11, r12;
        boolean $z0, $z1;
        byte[] r13;

        r0 := @this: org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread;

        $r5 = r0.<org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread: org.apache.flink.core.fs.LimitedConnectionsFileSystem fs>;

        $r4 = r0.<org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread: org.apache.flink.core.fs.Path path>;

        r1 = virtualinvoke $r5.<org.apache.flink.core.fs.LimitedConnectionsFileSystem: org.apache.flink.core.fs.FSDataInputStream open(org.apache.flink.core.fs.Path)>($r4);

        r12 = null;

     label01:
        $r6 = r0.<org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread: org.apache.flink.core.fs.LimitedConnectionsFileSystem fs>;

        $i0 = virtualinvoke $r6.<org.apache.flink.core.fs.LimitedConnectionsFileSystem: int getNumberOfOpenInputStreams()>();

        $i1 = r0.<org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread: int maxConcurrentInputStreams>;

        if $i0 > $i1 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r7 = r0.<org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread: org.apache.flink.core.fs.LimitedConnectionsFileSystem fs>;

        $i2 = virtualinvoke $r7.<org.apache.flink.core.fs.LimitedConnectionsFileSystem: int getTotalNumberOfOpenStreams()>();

        $i3 = r0.<org.apache.flink.core.fs.LimitedConnectionsFileSystemTest$ReaderThread: int maxConcurrentStreamsTotal>;

        if $i2 > $i3 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        r13 = newarray (byte)[4096];

     label06:
        $i4 = virtualinvoke r1.<org.apache.flink.core.fs.FSDataInputStream: int read(byte[])>(r13);

        if $i4 == -1 goto label07;

        goto label06;

     label07:
        if r1 == null goto label17;

        goto label08;

     label08:
        virtualinvoke r1.<org.apache.flink.core.fs.FSDataInputStream: void close()>();

        goto label17;

     label09:
        $r11 := @caughtexception;

        r12 = $r11;

        throw $r11;

     label10:
        $r9 := @caughtexception;

     label11:
        if r1 == null goto label16;

        if r12 == null goto label15;

     label12:
        virtualinvoke r1.<org.apache.flink.core.fs.FSDataInputStream: void close()>();

     label13:
        goto label16;

     label14:
        $r10 := @caughtexception;

        virtualinvoke r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

        goto label16;

     label15:
        virtualinvoke r1.<org.apache.flink.core.fs.FSDataInputStream: void close()>();

     label16:
        throw $r9;

     label17:
        return;

        catch java.lang.Throwable from label01 to label07 with label09;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label09 to label11 with label10;
    }
}
