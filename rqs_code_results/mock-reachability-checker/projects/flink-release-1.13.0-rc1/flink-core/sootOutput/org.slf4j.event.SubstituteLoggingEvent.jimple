public class org.slf4j.event.SubstituteLoggingEvent extends java.lang.Object implements org.slf4j.event.LoggingEvent
{
    org.slf4j.event.Level level;
    org.slf4j.Marker marker;
    java.lang.String loggerName;
    org.slf4j.helpers.SubstituteLogger logger;
    java.lang.String threadName;
    java.lang.String message;
    java.lang.Object[] argArray;
    long timeStamp;
    java.lang.Throwable throwable;

    public void <init>()
    {
        org.slf4j.event.SubstituteLoggingEvent r0;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.slf4j.event.Level getLevel()
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        org.slf4j.event.Level $r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        $r1 = r0.<org.slf4j.event.SubstituteLoggingEvent: org.slf4j.event.Level level>;

        return $r1;
    }

    public void setLevel(org.slf4j.event.Level)
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        org.slf4j.event.Level r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        r1 := @parameter0: org.slf4j.event.Level;

        r0.<org.slf4j.event.SubstituteLoggingEvent: org.slf4j.event.Level level> = r1;

        return;
    }

    public org.slf4j.Marker getMarker()
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        org.slf4j.Marker $r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        $r1 = r0.<org.slf4j.event.SubstituteLoggingEvent: org.slf4j.Marker marker>;

        return $r1;
    }

    public void setMarker(org.slf4j.Marker)
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        org.slf4j.Marker r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        r1 := @parameter0: org.slf4j.Marker;

        r0.<org.slf4j.event.SubstituteLoggingEvent: org.slf4j.Marker marker> = r1;

        return;
    }

    public java.lang.String getLoggerName()
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        java.lang.String $r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        $r1 = r0.<org.slf4j.event.SubstituteLoggingEvent: java.lang.String loggerName>;

        return $r1;
    }

    public void setLoggerName(java.lang.String)
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        java.lang.String r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        r1 := @parameter0: java.lang.String;

        r0.<org.slf4j.event.SubstituteLoggingEvent: java.lang.String loggerName> = r1;

        return;
    }

    public org.slf4j.helpers.SubstituteLogger getLogger()
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        org.slf4j.helpers.SubstituteLogger $r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        $r1 = r0.<org.slf4j.event.SubstituteLoggingEvent: org.slf4j.helpers.SubstituteLogger logger>;

        return $r1;
    }

    public void setLogger(org.slf4j.helpers.SubstituteLogger)
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        org.slf4j.helpers.SubstituteLogger r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        r1 := @parameter0: org.slf4j.helpers.SubstituteLogger;

        r0.<org.slf4j.event.SubstituteLoggingEvent: org.slf4j.helpers.SubstituteLogger logger> = r1;

        return;
    }

    public java.lang.String getMessage()
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        java.lang.String $r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        $r1 = r0.<org.slf4j.event.SubstituteLoggingEvent: java.lang.String message>;

        return $r1;
    }

    public void setMessage(java.lang.String)
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        java.lang.String r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        r1 := @parameter0: java.lang.String;

        r0.<org.slf4j.event.SubstituteLoggingEvent: java.lang.String message> = r1;

        return;
    }

    public java.lang.Object[] getArgumentArray()
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        java.lang.Object[] $r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        $r1 = r0.<org.slf4j.event.SubstituteLoggingEvent: java.lang.Object[] argArray>;

        return $r1;
    }

    public void setArgumentArray(java.lang.Object[])
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        java.lang.Object[] r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        r1 := @parameter0: java.lang.Object[];

        r0.<org.slf4j.event.SubstituteLoggingEvent: java.lang.Object[] argArray> = r1;

        return;
    }

    public long getTimeStamp()
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        long $l0;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        $l0 = r0.<org.slf4j.event.SubstituteLoggingEvent: long timeStamp>;

        return $l0;
    }

    public void setTimeStamp(long)
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        long l0;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        l0 := @parameter0: long;

        r0.<org.slf4j.event.SubstituteLoggingEvent: long timeStamp> = l0;

        return;
    }

    public java.lang.String getThreadName()
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        java.lang.String $r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        $r1 = r0.<org.slf4j.event.SubstituteLoggingEvent: java.lang.String threadName>;

        return $r1;
    }

    public void setThreadName(java.lang.String)
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        java.lang.String r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        r1 := @parameter0: java.lang.String;

        r0.<org.slf4j.event.SubstituteLoggingEvent: java.lang.String threadName> = r1;

        return;
    }

    public java.lang.Throwable getThrowable()
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        java.lang.Throwable $r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        $r1 = r0.<org.slf4j.event.SubstituteLoggingEvent: java.lang.Throwable throwable>;

        return $r1;
    }

    public void setThrowable(java.lang.Throwable)
    {
        org.slf4j.event.SubstituteLoggingEvent r0;
        java.lang.Throwable r1;

        r0 := @this: org.slf4j.event.SubstituteLoggingEvent;

        r1 := @parameter0: java.lang.Throwable;

        r0.<org.slf4j.event.SubstituteLoggingEvent: java.lang.Throwable throwable> = r1;

        return;
    }
}
