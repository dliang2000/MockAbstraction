public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer
{
    private static final long serialVersionUID;
    public static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla std;
    protected final boolean _nonMerging;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: void <init>(boolean)>(0);

        return;
    }

    protected void <init>(boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Object;");

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: boolean _nonMerging> = z0;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla instance(boolean)
    {
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla $r0, $r1;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: void <init>(boolean)>(1);

        return $r1;

     label1:
        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla std>;

        return $r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Untyped>;

        return $r1;
    }

    public java.lang.Boolean supportsUpdate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r1;
        boolean $z0;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: boolean _nonMerging>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int $i0, $i1;
        java.lang.Object $r3, $r10, $r12, $r15, $r23;
        java.lang.Boolean $r4, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r6, $r14, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Number $r7, $r9;
        java.math.BigDecimal $r8;
        java.lang.String $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r13, $r21, r24, r25;
        java.lang.Object[] $r16, $r19;
        java.util.ArrayList $r18;
        java.util.LinkedHashMap $r20, $r22;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label15;
            case 3: goto label03;
            case 4: goto label17;
            case 5: goto label02;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label11;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label16;
            case 12: goto label07;
            default: goto label17;
        };

     label01:
        r24 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if r24 != $r21 goto label02;

        $r22 = new java.util.LinkedHashMap;

        specialinvoke $r22.<java.util.LinkedHashMap: void <init>(int)>(2);

        return $r22;

     label02:
        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object mapObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r12;

     label03:
        r25 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if r25 != $r13 goto label05;

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_JAVA_ARRAY_FOR_JSON_ARRAY>;

        $z3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r17);

        if $z3 == 0 goto label04;

        $r19 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: java.lang.Object[] NO_OBJECTS>;

        return $r19;

     label04:
        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>(2);

        return $r18;

     label05:
        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_JAVA_ARRAY_FOR_JSON_ARRAY>;

        $z2 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r14);

        if $z2 == 0 goto label06;

        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object[] mapArrayToArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r16;

     label06:
        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object mapArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r15;

     label07:
        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();

        return $r3;

     label08:
        $r11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        return $r11;

     label09:
        $i1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: int F_MASK_INT_COERCIONS>;

        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean hasSomeOfFeatures(int)>($i1);

        if $z1 == 0 goto label10;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object _coerceIntegral(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r10;

     label10:
        $r9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();

        return $r9;

     label11:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r6);

        if $z0 == 0 goto label12;

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();

        return $r8;

     label12:
        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();

        return $r7;

     label13:
        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r5;

     label14:
        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r4;

     label15:
        $r20 = new java.util.LinkedHashMap;

        specialinvoke $r20.<java.util.LinkedHashMap: void <init>(int)>(2);

        return $r20;

     label16:
        return null;

     label17:
        $r23 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(class "Ljava/lang/Object;", r1);

        return $r23;
    }

    public java.lang.Object deserializeWithType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r3;
        int $i0;
        java.lang.Object $r4, $r14, $r15;
        java.lang.Boolean $r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r7, $r10;
        boolean $z0, $z1;
        java.lang.Number $r8, $r11;
        java.math.BigDecimal $r9;
        java.math.BigInteger $r12;
        java.lang.String $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label11;
            case 3: goto label01;
            case 4: goto label11;
            case 5: goto label01;
            case 6: goto label02;
            case 7: goto label03;
            case 8: goto label05;
            case 9: goto label07;
            case 10: goto label08;
            case 11: goto label10;
            case 12: goto label09;
            default: goto label11;
        };

     label01:
        $r14 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r14;

     label02:
        $r13 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        return $r13;

     label03:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS>;

        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r10);

        if $z1 == 0 goto label04;

        $r12 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.math.BigInteger getBigIntegerValue()>();

        return $r12;

     label04:
        $r11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();

        return $r11;

     label05:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r7);

        if $z0 == 0 goto label06;

        $r9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();

        return $r9;

     label06:
        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();

        return $r8;

     label07:
        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r6;

     label08:
        $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r5;

     label09:
        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();

        return $r4;

     label10:
        return null;

     label11:
        $r15 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(class "Ljava/lang/Object;", r1);

        return $r15;
    }

    public java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Object r3, r4, $r9, $r13, r17, $r20;
        boolean $z0, $z1, $z2;
        int $i0;
        java.lang.String $r6, r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r8, $r10, $r11, $r12, r14, r18;
        java.util.Map r15;
        java.util.Collection r19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.lang.Object;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: boolean _nonMerging>;

        if $z0 == 0 goto label01;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r13;

     label01:
        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label02;
            case 3: goto label09;
            case 4: goto label02;
            case 5: goto label04;
            default: goto label12;
        };

     label02:
        return r3;

     label03:
        r14 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if r14 != $r12 goto label04;

        return r3;

     label04:
        $z1 = r3 instanceof java.util.Map;

        if $z1 == 0 goto label12;

        r15 = (java.util.Map) r3;

        r16 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();

     label05:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        r4 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        if r4 == null goto label06;

        r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(r1, r2, r4);

        goto label07;

     label06:
        r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

     label07:
        if r17 == r4 goto label08;

        interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, r17);

     label08:
        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();

        r16 = $r6;

        if $r6 != null goto label05;

        return r3;

     label09:
        r18 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if r18 != $r8 goto label10;

        return r3;

     label10:
        $z2 = r3 instanceof java.util.Collection;

        if $z2 == 0 goto label12;

        r19 = (java.util.Collection) r3;

     label11:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        interfaceinvoke r19.<java.util.Collection: boolean add(java.lang.Object)>($r9);

        $r10 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if $r10 != $r11 goto label11;

        return r3;

     label12:
        $r20 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r20;
    }

    protected java.lang.Object mapArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0, $i1, i3, i4, i5;
        java.util.ArrayList $r10, $r11, $r12;
        java.lang.Object r13, r15, r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r17;
        java.lang.Object[] r18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if $r4 != $r5 goto label1;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>(2);

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        return $r12;

     label1:
        r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if $r6 != $r7 goto label2;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>(2);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r15);

        return $r11;

     label2:
        r17 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer()>();

        r18 = virtualinvoke r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] resetAndStart()>();

        i3 = 0 + 1;

        r18[0] = r13;

        i4 = i3 + 1;

        r18[i3] = r15;

        i5 = i4;

     label3:
        r19 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        i5 = i5 + 1;

        $i0 = lengthof r18;

        if i4 < $i0 goto label4;

        r18 = virtualinvoke r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] appendCompletedChunk(java.lang.Object[])>(r18);

        i4 = 0;

     label4:
        $i1 = i4;

        i4 = i4 + 1;

        r18[$i1] = r19;

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if $r8 != $r9 goto label3;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(i5);

        virtualinvoke r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: void completeAndClearBuffer(java.lang.Object[],int,java.util.List)>(r18, i4, $r10);

        return $r10;
    }

    protected java.lang.Object[] mapArrayToArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer r3;
        java.lang.Object r4;
        int $i0, $i1, i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, $r6;
        java.lang.Object[] $r7, r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer()>();

        r8 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] resetAndStart()>();

        i2 = 0;

     label1:
        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $i0 = lengthof r8;

        if i2 < $i0 goto label2;

        r8 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] appendCompletedChunk(java.lang.Object[])>(r8);

        i2 = 0;

     label2:
        $i1 = i2;

        i2 = i2 + 1;

        r8[$i1] = r4;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if $r5 != $r6 goto label1;

        $r7 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int)>(r8, i2);

        return $r7;
    }

    protected java.lang.Object mapObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.String r3, r5, $r14, $r15, r26;
        java.lang.Object r4, r6, r7, $r12, $r16, $r17, $r20, $r21, r25;
        java.util.LinkedHashMap $r10, $r18, $r22;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();

        if r5 != null goto label1;

        $r22 = new java.util.LinkedHashMap;

        specialinvoke $r22.<java.util.LinkedHashMap: void <init>(int)>(2);

        virtualinvoke $r22.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        return $r22;

     label1:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        r25 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        r26 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();

        if r26 != null goto label3;

        $r18 = new java.util.LinkedHashMap;

        specialinvoke $r18.<java.util.LinkedHashMap: void <init>(int)>(4);

        virtualinvoke $r18.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        $r20 = virtualinvoke $r18.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r25);

        if $r20 == null goto label2;

        $r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object _mapObjectWithDups(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)>(r1, r2, $r18, r3, r4, r25, r26);

        return $r21;

     label2:
        return $r18;

     label3:
        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>()>();

        virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        $r12 = virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r25);

        if $r12 == null goto label4;

        $r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object _mapObjectWithDups(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)>(r1, r2, $r10, r3, r4, r25, r26);

        return $r17;

     label4:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        r7 = virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r26, r6);

        if r7 == null goto label5;

        $r15 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();

        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object _mapObjectWithDups(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)>(r1, r2, $r10, r26, r7, r6, $r15);

        return $r16;

     label5:
        $r14 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();

        r26 = $r14;

        if $r14 != null goto label4;

        return $r10;
    }

    protected java.lang.Object _mapObjectWithDups(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.util.Map, java.lang.String, java.lang.Object, java.lang.Object, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.util.Map r3;
        java.lang.String r4, r9;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadCapability $r5;
        java.lang.Object r7, r8, r10, r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.lang.String;

        r7 := @parameter4: java.lang.Object;

        r8 := @parameter5: java.lang.Object;

        r9 := @parameter6: java.lang.String;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadCapability: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES>;

        z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadCapability)>($r5);

        if z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object)>(r3, r4, r7, r8);

     label1:
        if r9 == null goto label3;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        r11 = interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10);

        if r11 == null goto label2;

        if z0 == 0 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object)>(r3, r4, r11, r10);

     label2:
        r9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();

        goto label1;

     label3:
        return r3;
    }

    private void _squashDups(java.util.Map, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla r0;
        java.util.Map r1;
        java.lang.String r2;
        java.lang.Object r3, r4;
        boolean $z0;
        java.util.ArrayList $r6;
        java.util.List $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $z0 = r3 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r8 = (java.util.List) r3;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r4);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        goto label2;

     label1:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6);

     label2:
        return;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: long serialVersionUID> = 1L;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla std> = $r0;

        return;
    }
}
