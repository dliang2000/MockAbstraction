public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/concurrent/atomic/AtomicInteger;");

        return;
    }

    public java.util.concurrent.atomic.AtomicInteger deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Integer r3;
        boolean $z0;
        int $i0, $i1;
        java.util.concurrent.atomic.AtomicInteger $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean isExpectedNumberIntToken()>();

        if $z0 == 0 goto label1;

        $r4 = new java.util.concurrent.atomic.AtomicInteger;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getIntValue()>();

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>($i1);

        return $r4;

     label1:
        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer: java.lang.Integer _parseInteger(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(r1, r2, class "Ljava/util/concurrent/atomic/AtomicInteger;");

        if r3 != null goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r5 = new java.util.concurrent.atomic.AtomicInteger;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>($i0);

     label3:
        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        return $r1;
    }

    public java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        return $r2;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.util.concurrent.atomic.AtomicInteger $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer: java.util.concurrent.atomic.AtomicInteger deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer: long serialVersionUID> = 1L;

        return;
    }
}
