public class org.apache.flink.api.common.typeinfo.IntegerTypeInfoTest extends org.apache.flink.api.common.typeutils.TypeInformationTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeinfo.IntegerTypeInfoTest r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.IntegerTypeInfoTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.TypeInformationTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeinfo.IntegerTypeInfo[] getTestData()
    {
        org.apache.flink.api.common.typeinfo.IntegerTypeInfoTest r0;
        org.apache.flink.api.common.typeinfo.IntegerTypeInfo[] $r1;
        org.apache.flink.api.common.typeinfo.BasicTypeInfo $r2, $r4, $r6, $r8;
        org.apache.flink.api.common.typeinfo.IntegerTypeInfo $r3, $r5, $r7, $r9;

        r0 := @this: org.apache.flink.api.common.typeinfo.IntegerTypeInfoTest;

        $r1 = newarray (org.apache.flink.api.common.typeinfo.IntegerTypeInfo)[4];

        $r2 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo BYTE_TYPE_INFO>;

        $r3 = (org.apache.flink.api.common.typeinfo.IntegerTypeInfo) $r2;

        $r1[0] = $r3;

        $r4 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo SHORT_TYPE_INFO>;

        $r5 = (org.apache.flink.api.common.typeinfo.IntegerTypeInfo) $r4;

        $r1[1] = $r5;

        $r6 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo INT_TYPE_INFO>;

        $r7 = (org.apache.flink.api.common.typeinfo.IntegerTypeInfo) $r6;

        $r1[2] = $r7;

        $r8 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo LONG_TYPE_INFO>;

        $r9 = (org.apache.flink.api.common.typeinfo.IntegerTypeInfo) $r8;

        $r1[3] = $r9;

        return $r1;
    }

    protected volatile org.apache.flink.api.common.typeinfo.TypeInformation[] getTestData()
    {
        org.apache.flink.api.common.typeinfo.IntegerTypeInfoTest r0;
        org.apache.flink.api.common.typeinfo.IntegerTypeInfo[] $r1;

        r0 := @this: org.apache.flink.api.common.typeinfo.IntegerTypeInfoTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeinfo.IntegerTypeInfoTest: org.apache.flink.api.common.typeinfo.IntegerTypeInfo[] getTestData()>();

        return $r1;
    }
}
