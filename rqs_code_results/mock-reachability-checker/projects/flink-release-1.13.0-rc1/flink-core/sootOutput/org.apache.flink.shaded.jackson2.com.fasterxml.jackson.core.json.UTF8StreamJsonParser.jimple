public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase
{
    static final byte BYTE_LF;
    private static final int FEAT_MASK_TRAILING_COMMA;
    private static final int FEAT_MASK_LEADING_ZEROS;
    private static final int FEAT_MASK_NON_NUM_NUMBERS;
    private static final int FEAT_MASK_ALLOW_MISSING;
    private static final int FEAT_MASK_ALLOW_SINGLE_QUOTES;
    private static final int FEAT_MASK_ALLOW_UNQUOTED_NAMES;
    private static final int FEAT_MASK_ALLOW_JAVA_COMMENTS;
    private static final int FEAT_MASK_ALLOW_YAML_COMMENTS;
    private static final int[] _icUTF8;
    protected static final int[] _icLatin1;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols;
    protected int[] _quadBuffer;
    protected boolean _tokenIncomplete;
    private int _quad1;
    protected int _nameStartOffset;
    protected int _nameStartRow;
    protected int _nameStartCol;
    protected java.io.InputStream _inputStream;
    protected byte[] _inputBuffer;
    protected boolean _bufferRecyclable;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer, byte[], int, int, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        int i0, i1, i2;
        java.io.InputStream r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer r4;
        byte[] r5;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.InputStream;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;

        r5 := @parameter5: byte[];

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        z0 := @parameter8: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,java.io.InputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,byte[],int,int,int,boolean)>(r1, i0, r2, r3, r4, r5, i1, i2, 0, z0);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, int, java.io.InputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer, byte[], int, int, int, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        java.io.InputStream r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer r4;
        byte[] r5;
        boolean z0;
        int[] $r6;
        long $l7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.InputStream;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;

        r5 := @parameter5: byte[];

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        z0 := @parameter9: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int)>(r1, i0);

        $r6 = newarray (int)[16];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.io.InputStream _inputStream> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols> = r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer> = r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd> = i2;

        $i4 = i1 - i3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i4;

        $i5 = neg i1;

        $i6 = $i5 + i3;

        $l7 = (long) $i6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: long _currInputProcessed> = $l7;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _bufferRecyclable> = z0;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec getCodec()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        return $r1;
    }

    public void setCodec(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r1;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet JSON_READ_CAPABILITIES>;

        return $r1;
    }

    public int releaseBuffered(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.io.OutputStream r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        byte[] $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: java.io.OutputStream;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        i0 = $i3 - $i2;

        if i0 >= 1 goto label1;

        return 0;

     label1:
        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i5 = $i4 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i5;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, i1, i0);

        return i0;
    }

    public java.lang.Object getInputSource()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.io.InputStream _inputStream>;

        return $r1;
    }

    protected final boolean _loadMore() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, i1, i2, $i3, $i7, $i8, $i9, $i10;
        java.io.InputStream $r1, $r4;
        byte[] $r2, $r3, $r8;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.String $r11;
        long $l4, $l5, $l6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.io.InputStream _inputStream>;

        if $r1 == null goto label3;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        i0 = lengthof $r2;

        if i0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.io.InputStream _inputStream>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        i1 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>($r3, 0, i0);

        if i1 <= 0 goto label2;

        i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        $l5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: long _currInputProcessed>;

        $l4 = (long) i2;

        $l6 = $l5 + $l4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: long _currInputProcessed> = $l6;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart>;

        $i8 = $i7 - i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i8;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _nameStartOffset>;

        $i10 = $i9 - i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _nameStartOffset> = $i10;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd> = i1;

        return 1;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _closeInput()>();

        if i1 != 0 goto label3;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InputStream.read() returned 0 characters when trying to read ");

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i3 = lengthof $r8;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label3:
        return 0;
    }

    protected void _closeInput() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.io.InputStream $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r2;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.io.InputStream _inputStream>;

        if $r1 == null goto label3;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        $z0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: boolean isResourceManaged()>();

        if $z0 != 0 goto label1;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature AUTO_CLOSE_SOURCE>;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)>($r4);

        if $z1 == 0 goto label2;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.io.InputStream _inputStream>;

        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.io.InputStream _inputStream> = null;

     label3:
        return;
    }

    protected void _releaseBuffers() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        byte[] r1, $r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase: void _releaseBuffers()>();

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void release()>();

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _bufferRecyclable>;

        if $z0 == 0 goto label1;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        if r1 == null goto label1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] NO_BYTES>;

        if r1 == $r3 goto label1;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] NO_BYTES>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseReadIOBuffer(byte[])>(r1);

     label1:
        return;
    }

    public java.lang.String getText() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3;
        java.lang.String $r4, $r6, $r7;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r2 != $r1 goto label2;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _finishAndReturnString()>();

        return $r7;

     label1:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r6;

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _getText2(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r3);

        return $r4;
    }

    public int getText(java.io.Writer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.io.Writer r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r2, $r3, $r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r5, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r6;
        java.lang.String r8;
        char[] r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: java.io.Writer;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if r2 != $r3 goto label2;

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z1 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _finishString()>();

     label1:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i3 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int contentsToWriter(java.io.Writer)>(r1);

        return $i3;

     label2:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if r2 != $r4 goto label3;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        r8 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String getCurrentName()>();

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(r8);

        $i2 = virtualinvoke r8.<java.lang.String: int length()>();

        return $i2;

     label3:
        if r2 == null goto label5;

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: boolean isNumeric()>();

        if $z0 == 0 goto label4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i1 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int contentsToWriter(java.io.Writer)>(r1);

        return $i1;

     label4:
        r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: char[] asCharArray()>();

        virtualinvoke r1.<java.io.Writer: void write(char[])>(r9);

        $i0 = lengthof r9;

        return $i0;

     label5:
        return 0;
    }

    public java.lang.String getValueAsString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3, $r4;
        java.lang.String $r5, $r6, $r8, $r9;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r2 != $r1 goto label2;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _finishAndReturnString()>();

        return $r9;

     label1:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r8;

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r4 != $r3 goto label3;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String getCurrentName()>();

        return $r6;

     label3:
        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase: java.lang.String getValueAsString(java.lang.String)>(null);

        return $r5;
    }

    public java.lang.String getValueAsString(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.lang.String r1, $r6, $r7, $r9, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r5;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r3 != $r2 goto label2;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _finishAndReturnString()>();

        return $r10;

     label1:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r9;

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r5 != $r4 goto label3;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String getCurrentName()>();

        return $r7;

     label3:
        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase: java.lang.String getValueAsString(java.lang.String)>(r1);

        return $r6;
    }

    public int getValueAsInt() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if r1 == $r2 goto label1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        if r1 != $r3 goto label4;

     label1:
        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _numTypesValid>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label3;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _numTypesValid>;

        if $i2 != 0 goto label2;

        $i5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _parseIntValue()>();

        return $i5;

     label2:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _numTypesValid>;

        $i4 = $i3 & 1;

        if $i4 != 0 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void convertNumberToInt()>();

     label3:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _numberInt>;

        return $i7;

     label4:
        $i6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase: int getValueAsInt(int)>(0);

        return $i6;
    }

    public int getValueAsInt(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if r1 == $r2 goto label1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        if r1 != $r3 goto label4;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _numTypesValid>;

        $i2 = $i1 & 1;

        if $i2 != 0 goto label3;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _numTypesValid>;

        if $i3 != 0 goto label2;

        $i6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _parseIntValue()>();

        return $i6;

     label2:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _numTypesValid>;

        $i5 = $i4 & 1;

        if $i5 != 0 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void convertNumberToInt()>();

     label3:
        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _numberInt>;

        return $i8;

     label4:
        $i7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserBase: int getValueAsInt(int)>(i0);

        return $i7;
    }

    protected final java.lang.String _getText2(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2;
        java.lang.String $r3, $r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        if r1 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int id()>();

        tableswitch($i0)
        {
            case 5: goto label2;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label3;
            default: goto label4;
        };

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String getCurrentName()>();

        return $r5;

     label3:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r3;

     label4:
        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: java.lang.String asString()>();

        return $r6;
    }

    public char[] getTextCharacters() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r10;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4;
        char[] $r5, $r6, $r7, $r9, $r11, $r12, $r13, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        if $r2 == null goto label8;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $i1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int id()>();

        tableswitch($i1)
        {
            case 5: goto label1;
            case 6: goto label5;
            case 7: goto label6;
            case 8: goto label6;
            default: goto label7;
        };

     label1:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _nameCopied>;

        if $z1 != 0 goto label4;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        r1 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String getCurrentName()>();

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char[] _nameCopyBuffer>;

        if $r5 != null goto label2;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] allocNameCopyBuffer(int)>(i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char[] _nameCopyBuffer> = $r9;

        goto label3;

     label2:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char[] _nameCopyBuffer>;

        $i2 = lengthof $r6;

        if $i2 >= i0 goto label3;

        $r7 = newarray (char)[i0];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char[] _nameCopyBuffer> = $r7;

     label3:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char[] _nameCopyBuffer>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, $r12, 0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _nameCopied> = 1;

     label4:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char[] _nameCopyBuffer>;

        return $r13;

     label5:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _finishString()>();

     label6:
        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r15 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getTextBuffer()>();

        return $r15;

     label7:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r11 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: char[] asCharArray()>();

        return $r11;

     label8:
        return null;
    }

    public int getTextLength() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r5;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r3;
        java.lang.String $r4;
        char[] $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        if $r1 == null goto label5;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $i0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int id()>();

        tableswitch($i0)
        {
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label3;
            case 8: goto label3;
            default: goto label4;
        };

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String getCurrentName()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        return $i1;

     label2:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _finishString()>();

     label3:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i3 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int size()>();

        return $i3;

     label4:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: char[] asCharArray()>();

        $i2 = lengthof $r6;

        return $i2;

     label5:
        return 0;
    }

    public int getTextOffset() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        if $r1 == null goto label4;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $i0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int id()>();

        tableswitch($i0)
        {
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label3;
            case 8: goto label3;
            default: goto label4;
        };

     label1:
        return 0;

     label2:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _finishString()>();

     label3:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getTextOffset()>();

        return $i1;

     label4:
        return 0;
    }

    public byte[] getBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r8, $r9, $r12;
        byte[] $r4, $r6, $r7, $r16, $r28;
        java.lang.String $r5, $r15, $r22, $r24;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r18, $r19, $r20, $r21, $r23;
        java.lang.IllegalArgumentException $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException $r25;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r27;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r3 == $r2 goto label2;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        if $r9 != $r8 goto label1;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _binaryValue>;

        if $r16 != null goto label2;

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current token (");

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportError(java.lang.String)>($r15);

     label2:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label7;

     label3:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _decodeBase64(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _binaryValue> = $r7;

     label4:
        goto label6;

     label5:
        $r17 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to decode VALUE_STRING as base64 (");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r22 = virtualinvoke $r17.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String)>($r24);

        throw $r25;

     label6:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        goto label8;

     label7:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _binaryValue>;

        if $r4 != null goto label8;

        r27 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder()>();

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String getText()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _decodeBase64(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>($r5, r27, r1);

        $r6 = virtualinvoke r27.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _binaryValue> = $r6;

     label8:
        $r28 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _binaryValue>;

        return $r28;

        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
    }

    public int readBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.OutputStream r2;
        int i0, $i1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r6, $r7, $r9;
        java.lang.Throwable $r8;
        byte[] r10, r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.OutputStream;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r5 == $r4 goto label2;

     label1:
        r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] getBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r10);

        $i1 = lengthof r10;

        return $i1;

     label2:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        r11 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] allocBase64Buffer()>();

     label3:
        i0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _readBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[])>(r1, r2, r11);

     label4:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseBase64Buffer(byte[])>(r11);

        return i0;

     label5:
        $r8 := @caughtexception;

     label6:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseBase64Buffer(byte[])>(r11);

        throw $r8;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected int _readBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream, byte[]) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.OutputStream r2;
        byte[] r3, $r4, $r5, $r6, $r7, $r9;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i25, $i28, $i31, $i34, $i35, $i36, $i37, $i38, $i39, $i41, $i43, $i45, $i47, $i48, i49, i50, $i51, $i52, i54, i55, i57, i58, i60, i61, i63, i64, i66, i67, i68, i69, i70, i71, i72, i73;
        byte $b4, $b9, $b15, $b21, $b24, $b26, $b27, $b29, $b30, $b32, $b33, $b40, $b42, $b46;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        char $c44;
        java.lang.String $r14;
        java.lang.IllegalArgumentException $r15;
        short s53, s56, s59, s62, s65;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.OutputStream;

        r3 := @parameter2: byte[];

        i49 = 0;

        $i1 = lengthof r3;

        i0 = $i1 - 3;

        i50 = 0;

     label01:
        $i51 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i52 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i51 < $i52 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label02:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i3;

        $b4 = $r4[$i2];

        s53 = $b4 & 255;

        if s53 <= 32 goto label01;

        i54 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(int)>(s53);

        if i54 >= 0 goto label04;

        if s53 != 34 goto label03;

        goto label18;

     label03:
        i54 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int)>(r1, s53, 0);

        if i54 >= 0 goto label04;

        goto label01;

     label04:
        if i49 <= i0 goto label05;

        i50 = i50 + i49;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, i49);

        i49 = 0;

     label05:
        i55 = i54;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i6 < $i5 goto label06;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label06:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i8;

        $b9 = $r5[$i7];

        s56 = $b9 & 255;

        i57 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(int)>(s56);

        if i57 >= 0 goto label07;

        i57 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int)>(r1, s56, 1);

     label07:
        $i10 = i55 << 6;

        i58 = $i10 | i57;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i12 < $i11 goto label08;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label08:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i14;

        $b15 = $r6[$i13];

        s59 = $b15 & 255;

        i60 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(int)>(s59);

        if i60 >= 0 goto label13;

        if i60 == -2 goto label10;

        if s59 != 34 goto label09;

        i61 = i58 >> 4;

        $i45 = i49;

        i49 = i49 + 1;

        $b46 = (byte) i61;

        r3[$i45] = $b46;

        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPadding()>();

        if $z2 == 0 goto label18;

        $i47 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i48 = $i47 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i48;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _handleBase64MissingPadding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        goto label18;

     label09:
        i60 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int)>(r1, s59, 2);

     label10:
        if i60 != -2 goto label13;

        $i37 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i36 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i37 < $i36 goto label11;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label11:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i38 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i39 = $i38 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i39;

        $b40 = $r9[$i38];

        s62 = $b40 & 255;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPaddingChar(int)>(s62);

        if $z1 != 0 goto label12;

        $i43 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int)>(r1, s62, 3);

        if $i43 == -2 goto label12;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected padding character \'");

        $c44 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: char getPaddingChar()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c44);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.IllegalArgumentException reportInvalidBase64Char(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)>(r1, s62, 3, $r14);

        throw $r15;

     label12:
        i63 = i58 >> 4;

        $i41 = i49;

        i49 = i49 + 1;

        $b42 = (byte) i63;

        r3[$i41] = $b42;

        goto label01;

     label13:
        $i16 = i58 << 6;

        i64 = $i16 | i60;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i18 < $i17 goto label14;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label14:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i20 = $i19 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i20;

        $b21 = $r7[$i19];

        s65 = $b21 & 255;

        i66 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(int)>(s65);

        if i66 >= 0 goto label17;

        if i66 == -2 goto label16;

        if s65 != 34 goto label15;

        i67 = i64 >> 2;

        i68 = i49 + 1;

        $i31 = i67 >> 8;

        $b32 = (byte) $i31;

        r3[i49] = $b32;

        i49 = i68 + 1;

        $b33 = (byte) i67;

        r3[i68] = $b33;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPadding()>();

        if $z0 == 0 goto label18;

        $i34 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i35 = $i34 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i35;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _handleBase64MissingPadding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        goto label18;

     label15:
        i66 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int)>(r1, s65, 3);

     label16:
        if i66 != -2 goto label17;

        i69 = i64 >> 2;

        i70 = i49 + 1;

        $i28 = i69 >> 8;

        $b29 = (byte) $i28;

        r3[i49] = $b29;

        i49 = i70 + 1;

        $b30 = (byte) i69;

        r3[i70] = $b30;

        goto label01;

     label17:
        $i22 = i64 << 6;

        i71 = $i22 | i66;

        i72 = i49 + 1;

        $i23 = i71 >> 16;

        $b24 = (byte) $i23;

        r3[i49] = $b24;

        i73 = i72 + 1;

        $i25 = i71 >> 8;

        $b26 = (byte) $i25;

        r3[i72] = $b26;

        i49 = i73 + 1;

        $b27 = (byte) i71;

        r3[i73] = $b27;

        goto label01;

     label18:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        if i49 <= 0 goto label19;

        i50 = i50 + i49;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, i49);

     label19:
        return i50;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.lang.String r1, $r14, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r18, $r19, $r20, r22, $r23;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4, $r5, $r13, $r21;
        int $i0, $i1, $i2, i3, i4;
        java.lang.StringBuilder $r11, $r12, $r15, $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r3 != $r2 goto label01;

        $r20 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextAfterName()>();

        return $r20;

     label01:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _numTypesValid> = 0;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipString()>();

     label02:
        i3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWSOrEnd()>();

        if i3 >= 0 goto label03;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void close()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = null;

        return null;

     label03:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _binaryValue> = null;

        if i3 != 93 goto label04;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _closeArrayScope()>();

        $r19 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r19;

        return $r19;

     label04:
        if i3 != 125 goto label05;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _closeObjectScope()>();

        $r18 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r18;

        return $r18;

     label05:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean expectComma()>();

        if $z1 == 0 goto label08;

        if i3 == 44 goto label06;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("was expecting comma to separate ");

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String typeDesc()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i3, $r17);

     label06:
        i3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWS()>();

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_TRAILING_COMMA>;

        $i2 = $i1 & $i0;

        if $i2 == 0 goto label08;

        if i3 == 93 goto label07;

        if i3 != 125 goto label08;

     label07:
        $r10 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeScope(int)>(i3);

        return $r10;

     label08:
        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z2 = virtualinvoke $r21.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inObject()>();

        if $z2 != 0 goto label09;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateLocation()>();

        $r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int)>(i3);

        return $r9;

     label09:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateNameLocation()>();

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _parseName(int)>(i3);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: void setCurrentName(java.lang.String)>(r1);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r6;

        i4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateLocation()>();

        if i4 != 34 goto label10;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 1;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r7;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r8;

     label10:
        lookupswitch(i4)
        {
            case 45: goto label11;
            case 46: goto label12;
            case 48: goto label13;
            case 49: goto label13;
            case 50: goto label13;
            case 51: goto label13;
            case 52: goto label13;
            case 53: goto label13;
            case 54: goto label13;
            case 55: goto label13;
            case 56: goto label13;
            case 57: goto label13;
            case 91: goto label17;
            case 102: goto label14;
            case 110: goto label15;
            case 116: goto label16;
            case 123: goto label18;
            default: goto label19;
        };

     label11:
        r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber()>();

        goto label20;

     label12:
        r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod()>();

        goto label20;

     label13:
        r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>(i4);

        goto label20;

     label14:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchFalse()>();

        r22 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        goto label20;

     label15:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchNull()>();

        r22 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        goto label20;

     label16:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchTrue()>();

        r22 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        goto label20;

     label17:
        r22 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        goto label20;

     label18:
        r22 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        goto label20;

     label19:
        r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int)>(i4);

     label20:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = r22;

        $r23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r23;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r1, $r2, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        if i0 != 34 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 1;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r14;

        return $r14;

     label01:
        lookupswitch(i0)
        {
            case 45: goto label07;
            case 46: goto label08;
            case 48: goto label09;
            case 49: goto label09;
            case 50: goto label09;
            case 51: goto label09;
            case 52: goto label09;
            case 53: goto label09;
            case 54: goto label09;
            case 55: goto label09;
            case 56: goto label09;
            case 57: goto label09;
            case 91: goto label02;
            case 102: goto label05;
            case 110: goto label06;
            case 116: goto label04;
            case 123: goto label03;
            default: goto label10;
        };

     label02:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i4, $i3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r8;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r9;

        return $r9;

     label03:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i2, $i1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r3;

        return $r3;

     label04:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchTrue()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r4;

        return $r4;

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchFalse()>();

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r6;

        return $r6;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchNull()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r5;

        return $r5;

     label07:
        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r12;

        return $r12;

     label08:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r11;

        return $r11;

     label09:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>(i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r10;

        return $r10;

     label10:
        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int)>(i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r13;

        return $r13;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextAfterName()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r2, $r3;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _nameCopied> = 0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = null;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r1 != $r2 goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i3, $i2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r7;

        goto label2;

     label1:
        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r1 != $r3 goto label2;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i1, $i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r5;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r1;

        return r1;
    }

    public void finishToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _finishString()>();

     label1:
        return;
    }

    public boolean nextFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        byte[] r2, $r6, $r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i10, $i11, $i12, $i13, i14, i15, i16, i17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4, $r19, $r20;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r5, $r8, $r14, $r22;
        byte $b7, $b8, $b9;
        java.lang.String $r9, $r15, $r18;
        java.lang.StringBuilder $r12, $r13, $r16, $r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _numTypesValid> = 0;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r4 != $r3 goto label01;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextAfterName()>();

        return 0;

     label01:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipString()>();

     label02:
        i14 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWSOrEnd()>();

        if i14 >= 0 goto label03;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void close()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = null;

        return 0;

     label03:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _binaryValue> = null;

        if i14 != 93 goto label04;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _closeArrayScope()>();

        $r20 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r20;

        return 0;

     label04:
        if i14 != 125 goto label05;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _closeObjectScope()>();

        $r19 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r19;

        return 0;

     label05:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean expectComma()>();

        if $z1 == 0 goto label08;

        if i14 == 44 goto label06;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("was expecting comma to separate ");

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r15 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String typeDesc()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i14, $r18);

     label06:
        i14 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWS()>();

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_TRAILING_COMMA>;

        $i13 = $i12 & $i11;

        if $i13 == 0 goto label08;

        if i14 == 93 goto label07;

        if i14 != 125 goto label08;

     label07:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeScope(int)>(i14);

        return 0;

     label08:
        $r22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z2 = virtualinvoke $r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inObject()>();

        if $z2 != 0 goto label09;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateLocation()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int)>(i14);

        return 0;

     label09:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateNameLocation()>();

        if i14 != 34 goto label13;

        r2 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: byte[] asQuotedUTF8()>();

        i0 = lengthof r2;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i3 = $i2 + i0;

        $i5 = $i3 + 4;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i5 >= $i4 goto label13;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        i1 = $i6 + i0;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $b7 = $r6[i1];

        if $b7 != 34 goto label13;

        i15 = 0;

        i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

     label10:
        if i16 != i1 goto label11;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r9 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: void setCurrentName(java.lang.String)>($r9);

        $i10 = i16 + 1;

        i17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColonFast(int)>($i10);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _isNextTokenNameYes(int)>(i17);

        return 1;

     label11:
        $b9 = r2[i15];

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $b8 = $r7[i16];

        if $b9 == $b8 goto label12;

        goto label13;

     label12:
        i15 = i15 + 1;

        i16 = i16 + 1;

        goto label10;

     label13:
        $z3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _isNextTokenNameMaybe(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>(i14, r1);

        return $z3;
    }

    public java.lang.String nextFieldName() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.lang.String r1, $r13, $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r6, $r7, $r17, $r18, r21;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4, $r5, $r12, $r20;
        int $i0, $i1, $i2, i3, i4;
        java.lang.StringBuilder $r10, $r11, $r14, $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _numTypesValid> = 0;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r3 != $r2 goto label01;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextAfterName()>();

        return null;

     label01:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipString()>();

     label02:
        i3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWSOrEnd()>();

        if i3 >= 0 goto label03;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void close()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = null;

        return null;

     label03:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _binaryValue> = null;

        if i3 != 93 goto label04;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _closeArrayScope()>();

        $r18 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r18;

        return null;

     label04:
        if i3 != 125 goto label05;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _closeObjectScope()>();

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r17;

        return null;

     label05:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean expectComma()>();

        if $z1 == 0 goto label08;

        if i3 == 44 goto label06;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("was expecting comma to separate ");

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r13 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String typeDesc()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i3, $r16);

     label06:
        i3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWS()>();

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_TRAILING_COMMA>;

        $i2 = $i1 & $i0;

        if $i2 == 0 goto label08;

        if i3 == 93 goto label07;

        if i3 != 125 goto label08;

     label07:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeScope(int)>(i3);

        return null;

     label08:
        $r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z2 = virtualinvoke $r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inObject()>();

        if $z2 != 0 goto label09;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateLocation()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int)>(i3);

        return null;

     label09:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateNameLocation()>();

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _parseName(int)>(i3);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: void setCurrentName(java.lang.String)>(r1);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r6;

        i4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateLocation()>();

        if i4 != 34 goto label10;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 1;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r7;

        return r1;

     label10:
        lookupswitch(i4)
        {
            case 45: goto label11;
            case 46: goto label12;
            case 48: goto label13;
            case 49: goto label13;
            case 50: goto label13;
            case 51: goto label13;
            case 52: goto label13;
            case 53: goto label13;
            case 54: goto label13;
            case 55: goto label13;
            case 56: goto label13;
            case 57: goto label13;
            case 91: goto label17;
            case 102: goto label14;
            case 110: goto label15;
            case 116: goto label16;
            case 123: goto label18;
            default: goto label19;
        };

     label11:
        r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber()>();

        goto label20;

     label12:
        r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod()>();

        goto label20;

     label13:
        r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>(i4);

        goto label20;

     label14:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchFalse()>();

        r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        goto label20;

     label15:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchNull()>();

        r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        goto label20;

     label16:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchTrue()>();

        r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        goto label20;

     label17:
        r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        goto label20;

     label18:
        r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        goto label20;

     label19:
        r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int)>(i4);

     label20:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = r21;

        return r1;
    }

    private final int _skipColonFast(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i8, $i11, $i12, i13, $i16, $i17;
        byte b7, b9, b10, b14, b15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i5 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        i6 = i5 + 1;

        b7 = $r1[i5];

        if b7 != 58 goto label04;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        i8 = i6 + 1;

        b9 = $r5[i6];

        if b9 <= 32 goto label01;

        if b9 == 47 goto label03;

        if b9 == 35 goto label03;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i8;

        return b9;

     label01:
        if b9 == 32 goto label02;

        if b9 != 9 goto label03;

     label02:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i4 = i8;

        i8 = i8 + 1;

        b10 = $r6[$i4];

        if b10 <= 32 goto label03;

        if b10 == 47 goto label03;

        if b10 == 35 goto label03;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i8;

        return b10;

     label03:
        $i11 = i8 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i11;

        $i12 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>(1);

        return $i12;

     label04:
        if b7 == 32 goto label05;

        if b7 != 9 goto label06;

     label05:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i0 = i6;

        i6 = i6 + 1;

        b7 = $r2[$i0];

     label06:
        if b7 != 58 goto label10;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        i13 = i6 + 1;

        b14 = $r3[i6];

        if b14 <= 32 goto label07;

        if b14 == 47 goto label09;

        if b14 == 35 goto label09;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i13;

        return b14;

     label07:
        if b14 == 32 goto label08;

        if b14 != 9 goto label09;

     label08:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i3 = i13;

        i13 = i13 + 1;

        b15 = $r4[$i3];

        if b15 <= 32 goto label09;

        if b15 == 47 goto label09;

        if b15 == 35 goto label09;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i13;

        return b15;

     label09:
        $i16 = i13 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i16;

        $i17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>(1);

        return $i17;

     label10:
        $i1 = i6 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i1;

        $i2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>(0);

        return $i2;
    }

    private final void _isNextTokenNameYes(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateLocation()>();

        lookupswitch(i0)
        {
            case 34: goto label01;
            case 45: goto label07;
            case 46: goto label08;
            case 48: goto label09;
            case 49: goto label09;
            case 50: goto label09;
            case 51: goto label09;
            case 52: goto label09;
            case 53: goto label09;
            case 54: goto label09;
            case 55: goto label09;
            case 56: goto label09;
            case 57: goto label09;
            case 91: goto label02;
            case 102: goto label05;
            case 110: goto label06;
            case 116: goto label04;
            case 123: goto label03;
            default: goto label10;
        };

     label01:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 1;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r10;

        return;

     label02:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r6;

        return;

     label03:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r2;

        return;

     label04:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchTrue()>();

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r3;

        return;

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchFalse()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r5;

        return;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchNull()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r4;

        return;

     label07:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r9;

        return;

     label08:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r8;

        return;

     label09:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>(i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r7;

        return;

     label10:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int)>(i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r11;

        return;
    }

    private final boolean _isNextTokenNameMaybe(int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        java.lang.String r2, $r4;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, $r6, r7;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _parseName(int)>(i0);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: void setCurrentName(java.lang.String)>(r2);

        $r4 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r5;

        i1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateLocation()>();

        if i1 != 34 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 1;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = $r6;

        return z0;

     label01:
        lookupswitch(i1)
        {
            case 45: goto label07;
            case 46: goto label08;
            case 48: goto label09;
            case 49: goto label09;
            case 50: goto label09;
            case 51: goto label09;
            case 52: goto label09;
            case 53: goto label09;
            case 54: goto label09;
            case 55: goto label09;
            case 56: goto label09;
            case 57: goto label09;
            case 91: goto label02;
            case 102: goto label05;
            case 110: goto label06;
            case 116: goto label04;
            case 123: goto label03;
            default: goto label10;
        };

     label02:
        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        goto label11;

     label03:
        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        goto label11;

     label04:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchTrue()>();

        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        goto label11;

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchFalse()>();

        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        goto label11;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchNull()>();

        r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        goto label11;

     label07:
        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber()>();

        goto label11;

     label08:
        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod()>();

        goto label11;

     label09:
        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>(i1);

        goto label11;

     label10:
        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int)>(i1);

     label11:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = r7;

        return z0;
    }

    public java.lang.String nextTextValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r9, $r10, $r11, $r12;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r13;
        java.lang.String $r14, $r15, $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r3 != $r2 goto label5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _nameCopied> = 0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r1;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if r1 != $r6 goto label2;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _finishAndReturnString()>();

        return $r15;

     label1:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r14;

     label2:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r1 != $r7 goto label3;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i3, $i2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r12;

        goto label4;

     label3:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r1 != $r8 goto label4;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i1, $i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r10;

     label4:
        return null;

     label5:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if $r4 != $r5 goto label6;

        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String getText()>();

        goto label7;

     label6:
        $r16 = null;

     label7:
        return $r16;
    }

    public int nextIntValue(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r3 != $r2 goto label4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _nameCopied> = 0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r1;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if r1 != $r6 goto label1;

        $i5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int getIntValue()>();

        return $i5;

     label1:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r1 != $r7 goto label2;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i4, $i3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r12;

        goto label3;

     label2:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r1 != $r8 goto label3;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i2, $i1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r10;

     label3:
        return i0;

     label4:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if $r4 != $r5 goto label5;

        $i6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int getIntValue()>();

        goto label6;

     label5:
        $i6 = i0;

     label6:
        return $i6;
    }

    public long nextLongValue(long) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        long l0, $l5, $l6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i1, $i2, $i3, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        l0 := @parameter0: long;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r3 != $r2 goto label4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _nameCopied> = 0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r1;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if r1 != $r6 goto label1;

        $l5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: long getLongValue()>();

        return $l5;

     label1:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r1 != $r7 goto label2;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i4, $i3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r12;

        goto label3;

     label2:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r1 != $r8 goto label3;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i2, $i1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r10;

     label3:
        return l0;

     label4:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if $r4 != $r5 goto label5;

        $l6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: long getLongValue()>();

        goto label6;

     label5:
        $l6 = l0;

     label6:
        return $l6;
    }

    public java.lang.Boolean nextBooleanValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3, $r4, $r7, $r8, $r9, $r10, r17, r18;
        java.lang.Boolean $r5, $r6, $r15, $r16;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r11, $r12, $r13, $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r2 != $r1 goto label5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _nameCopied> = 0;

        r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _nextToken> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r17;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        if r17 != $r7 goto label1;

        $r16 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r16;

     label1:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        if r17 != $r8 goto label2;

        $r15 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r15;

     label2:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r17 != $r9 goto label3;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>($i3, $i2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r14;

        goto label4;

     label3:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r17 != $r10 goto label4;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>($i1, $i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r12;

     label4:
        return null;

     label5:
        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        if r18 != $r3 goto label6;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r6;

     label6:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        if r18 != $r4 goto label7;

        $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r5;

     label7:
        return null;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature $r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3;
        char[] $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)>($r2);

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int)>(46);

        return $r6;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int)>($r4, 0, 46, 0, 0);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parsePosNumber(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        char[] r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, i14, i15, i16, $i17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2, $r4;
        char $c1, $c13;
        byte[] $r3;
        byte $b9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r5;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6, $r7, $r8;
        short s18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i14 := @parameter0: int;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r1 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        if i14 != 48 goto label1;

        i14 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _verifyNoLeadingZeroes()>();

     label1:
        $c1 = (char) i14;

        r1[0] = $c1;

        i15 = 1;

        i16 = 1;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = lengthof r1;

        $i4 = $i3 + $i2;

        $i5 = $i4 - 1;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i5);

     label2:
        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        if $i17 < i0 goto label3;

        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(char[],int,boolean,int)>(r1, i16, 0, i15);

        return $r7;

     label3:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i8;

        $b9 = $r3[$i7];

        s18 = $b9 & 255;

        if s18 < 48 goto label5;

        if s18 <= 57 goto label4;

        goto label5;

     label4:
        i15 = i15 + 1;

        $i12 = i16;

        i16 = i16 + 1;

        $c13 = (char) s18;

        r1[$i12] = $c13;

        goto label2;

     label5:
        if s18 == 46 goto label6;

        if s18 == 101 goto label6;

        if s18 != 69 goto label7;

     label6:
        $r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int)>(r1, i16, s18, 0, i15);

        return $r8;

     label7:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i11 = $i10 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i11;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i16);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z0 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z0 == 0 goto label8;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _verifyRootSpace(int)>(s18);

     label8:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetInt(boolean,int)>(0, i15);

        return $r6;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNegNumber() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        char[] r1;
        int i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, i20, i21, i22, i23, $i24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2, $r5;
        byte[] $r3, $r4;
        byte $b5, $b14;
        char $c6, $c18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r6;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r7, $r8, $r9, $r10, $r12;
        short s25;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r1 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        i20 = 0 + 1;

        r1[0] = 45;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label01:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i4;

        $b5 = $r3[$i3];

        i21 = $b5 & 255;

        if i21 > 48 goto label03;

        if i21 == 48 goto label02;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean)>(i21, 1);

        return $r10;

     label02:
        i21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _verifyNoLeadingZeroes()>();

        goto label04;

     label03:
        if i21 <= 57 goto label04;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean)>(i21, 1);

        return $r9;

     label04:
        i22 = i20 + 1;

        $c6 = (char) i21;

        r1[i20] = $c6;

        i23 = 1;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i7 = lengthof r1;

        $i9 = $i8 + $i7;

        $i10 = $i9 - i22;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i10);

     label05:
        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        if $i24 < i0 goto label06;

        $r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(char[],int,boolean,int)>(r1, i22, 1, i23);

        return $r8;

     label06:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i13;

        $b14 = $r4[$i12];

        s25 = $b14 & 255;

        if s25 < 48 goto label08;

        if s25 <= 57 goto label07;

        goto label08;

     label07:
        i23 = i23 + 1;

        $i17 = i22;

        i22 = i22 + 1;

        $c18 = (char) s25;

        r1[$i17] = $c18;

        goto label05;

     label08:
        if s25 == 46 goto label09;

        if s25 == 101 goto label09;

        if s25 != 69 goto label10;

     label09:
        $r12 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int)>(r1, i22, s25, 1, i23);

        return $r12;

     label10:
        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i16 = $i15 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i16;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i22);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z0 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z0 == 0 goto label11;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _verifyRootSpace(int)>(s25);

     label11:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetInt(boolean,int)>(1, i23);

        return $r7;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseNumber2(char[], int, boolean, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        boolean z0, $z1, $z2;
        short s0, $s10;
        int $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i11, $i12, i14, i15;
        byte[] $r1, $r5;
        byte $b5, $b9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2, $r6, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4, $r9, $r11;
        char $c13;
        char[] r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r10 := @parameter0: char[];

        i14 := @parameter1: int;

        z0 := @parameter2: boolean;

        i15 := @parameter3: int;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label2;

        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z2 != 0 goto label2;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i14);

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetInt(boolean,int)>(z0, i15);

        return $r9;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i4;

        $b5 = $r1[$i3];

        s0 = $b5 & 255;

        if s0 > 57 goto label3;

        if s0 >= 48 goto label5;

     label3:
        if s0 == 46 goto label4;

        if s0 == 101 goto label4;

        if s0 != 69 goto label7;

     label4:
        $r11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int)>(r10, i14, s0, z0, i15);

        return $r11;

     label5:
        $i11 = lengthof r10;

        if i14 < $i11 goto label6;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r10 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i14 = 0;

     label6:
        $i12 = i14;

        i14 = i14 + 1;

        $c13 = (char) s0;

        r10[$i12] = $c13;

        i15 = i15 + 1;

        goto label1;

     label7:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i7 = $i6 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i7;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i14);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z1 == 0 goto label8;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $b9 = $r5[$i8];

        $s10 = $b9 & 255;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _verifyRootSpace(int)>($s10);

     label8:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetInt(boolean,int)>(z0, i15);

        return $r4;
    }

    private final int _verifyNoLeadingZeroes() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14;
        byte[] $r1, $r2;
        byte $b3, $b12;
        boolean $z0, $z1;
        short s15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z1 != 0 goto label1;

        return 48;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $b3 = $r1[$i2];

        s15 = $b3 & 255;

        if s15 < 48 goto label2;

        if s15 <= 57 goto label3;

     label2:
        return 48;

     label3:
        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_LEADING_ZEROS>;

        $i6 = $i5 & $i4;

        if $i6 != 0 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void reportInvalidNumber(java.lang.String)>("Leading zeroes not allowed");

     label4:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i8;

        if s15 != 48 goto label9;

     label5:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i10 < $i9 goto label6;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 == 0 goto label9;

     label6:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $b12 = $r2[$i11];

        s15 = $b12 & 255;

        if s15 < 48 goto label7;

        if s15 <= 57 goto label8;

     label7:
        return 48;

     label8:
        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i14;

        if s15 == 48 goto label5;

        goto label9;

     label9:
        return s15;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseFloat(char[], int, int, boolean, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        boolean z0, $z1, $z2, $z3, z4;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i27, $i28, $i30, $i31, $i33, $i34, i36, i37, i38, $i39, $i40, i41;
        char $c3, $c11, $c21, $c29, $c35;
        byte[] $r1, $r2, $r4, $r11;
        byte $b8, $b16, $b26, $b32;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r6, $r8, $r10, $r12, $r14, $r16;
        char[] r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r15 := @parameter0: char[];

        i36 := @parameter1: int;

        i37 := @parameter2: int;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        i38 = 0;

        z4 = 0;

        if i37 != 46 goto label07;

        $i27 = lengthof r15;

        if i36 < $i27 goto label01;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r15 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i36 = 0;

     label01:
        $i28 = i36;

        i36 = i36 + 1;

        $c29 = (char) i37;

        r15[$i28] = $c29;

     label02:
        $i39 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i40 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i39 < $i40 goto label03;

        $z3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z3 != 0 goto label03;

        z4 = 1;

        goto label06;

     label03:
        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i30 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i31 = $i30 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i31;

        $b32 = $r11[$i30];

        i37 = $b32 & 255;

        if i37 < 48 goto label06;

        if i37 <= 57 goto label04;

        goto label06;

     label04:
        i38 = i38 + 1;

        $i33 = lengthof r15;

        if i36 < $i33 goto label05;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r15 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i36 = 0;

     label05:
        $i34 = i36;

        i36 = i36 + 1;

        $c35 = (char) i37;

        r15[$i34] = $c35;

        goto label02;

     label06:
        if i38 != 0 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(i37, "Decimal point not followed by a digit");

     label07:
        i41 = 0;

        if i37 == 101 goto label08;

        if i37 != 69 goto label18;

     label08:
        $i1 = lengthof r15;

        if i36 < $i1 goto label09;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r15 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i36 = 0;

     label09:
        $i2 = i36;

        i36 = i36 + 1;

        $c3 = (char) i37;

        r15[$i2] = $c3;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i5 < $i4 goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label10:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i7;

        $b8 = $r1[$i6];

        i37 = $b8 & 255;

        if i37 == 45 goto label11;

        if i37 != 43 goto label14;

     label11:
        $i9 = lengthof r15;

        if i36 < $i9 goto label12;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r15 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i36 = 0;

     label12:
        $i10 = i36;

        i36 = i36 + 1;

        $c11 = (char) i37;

        r15[$i10] = $c11;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i13 < $i12 goto label13;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label13:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i15 = $i14 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i15;

        $b16 = $r2[$i14];

        i37 = $b16 & 255;

     label14:
        if i37 < 48 goto label17;

        if i37 > 57 goto label17;

        i41 = i41 + 1;

        $i19 = lengthof r15;

        if i36 < $i19 goto label15;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r15 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i36 = 0;

     label15:
        $i20 = i36;

        i36 = i36 + 1;

        $c21 = (char) i37;

        r15[$i20] = $c21;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i23 < $i22 goto label16;

        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z2 != 0 goto label16;

        z4 = 1;

        goto label17;

     label16:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i25 = $i24 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i25;

        $b26 = $r4[$i24];

        i37 = $b26 & 255;

        goto label14;

     label17:
        if i41 != 0 goto label18;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(i37, "Exponent indicator not followed by a digit");

     label18:
        if z4 != 0 goto label19;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i18 = $i17 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i18;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z1 == 0 goto label19;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _verifyRootSpace(int)>(i37);

     label19:
        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i36);

        $r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetFloat(boolean,int,int,int)>(z0, i0, i38, i41);

        return $r17;
    }

    private final void _verifyRootSpace(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i2;

        lookupswitch(i0)
        {
            case 9: goto label1;
            case 10: goto label3;
            case 13: goto label2;
            case 32: goto label1;
            default: goto label4;
        };

     label1:
        return;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCR()>();

        return;

     label3:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow> = $i4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i5;

        return;

     label4:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportMissingRootWS(int)>(i0);

        return;
    }

    protected final java.lang.String _parseName(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        byte[] r1;
        int[] r2;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i25, i26, i29, i31, i33;
        byte $b5, $b9, $b14, $b19, $b24;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        short s27, s28, s30, s32, s34;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i26 := @parameter0: int;

        if i26 == 34 goto label01;

        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _handleOddName(int)>(i26);

        return $r14;

     label01:
        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = $i0 + 13;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i2 <= $i1 goto label02;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String slowParseName()>();

        return $r13;

     label02:
        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icLatin1>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i4;

        $b5 = r1[$i3];

        s27 = $b5 & 255;

        $i6 = r2[s27];

        if $i6 != 0 goto label11;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i8;

        $b9 = r1[$i7];

        s28 = $b9 & 255;

        $i10 = r2[s28];

        if $i10 != 0 goto label09;

        $i11 = s27 << 8;

        i29 = $i11 | s28;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i13;

        $b14 = r1[$i12];

        s30 = $b14 & 255;

        $i15 = r2[s30];

        if $i15 != 0 goto label07;

        $i16 = i29 << 8;

        i31 = $i16 | s30;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i18 = $i17 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i18;

        $b19 = r1[$i17];

        s32 = $b19 & 255;

        $i20 = r2[s32];

        if $i20 != 0 goto label05;

        $i21 = i31 << 8;

        i33 = $i21 | s32;

        $i22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i23 = $i22 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i23;

        $b24 = r1[$i22];

        s34 = $b24 & 255;

        $i25 = r2[s34];

        if $i25 != 0 goto label03;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1> = i33;

        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseMediumName(int)>(s34);

        return $r12;

     label03:
        if s34 != 34 goto label04;

        $r11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int)>(i33, 4);

        return $r11;

     label04:
        $r10 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int)>(i33, s34, 4);

        return $r10;

     label05:
        if s32 != 34 goto label06;

        $r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int)>(i31, 3);

        return $r9;

     label06:
        $r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int)>(i31, s32, 3);

        return $r8;

     label07:
        if s30 != 34 goto label08;

        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int)>(i29, 2);

        return $r7;

     label08:
        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int)>(i29, s30, 2);

        return $r6;

     label09:
        if s28 != 34 goto label10;

        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int)>(s27, 1);

        return $r5;

     label10:
        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int)>(s27, s28, 1);

        return $r4;

     label11:
        if s27 != 34 goto label12;

        return "";

     label12:
        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int)>(0, s27, 0);

        return $r3;
    }

    protected final java.lang.String parseMediumName(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        byte[] r1;
        int[] r2;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i29, i31, i33;
        byte $b2, $b7, $b12, $b17;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        short s28, s30, s32, s34;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i27 := @parameter0: int;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icLatin1>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i1 = $i0 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i1;

        $b2 = r1[$i0];

        s28 = $b2 & 255;

        $i3 = r2[s28];

        if $i3 == 0 goto label2;

        if s28 != 34 goto label1;

        $i26 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int,int)>($i26, i27, 1);

        return $r11;

     label1:
        $i25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r10 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int,int)>($i25, i27, s28, 1);

        return $r10;

     label2:
        $i4 = i27 << 8;

        i29 = $i4 | s28;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i6;

        $b7 = r1[$i5];

        s30 = $b7 & 255;

        $i8 = r2[s30];

        if $i8 == 0 goto label4;

        if s30 != 34 goto label3;

        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int,int)>($i24, i29, 2);

        return $r9;

     label3:
        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int,int)>($i23, i29, s30, 2);

        return $r8;

     label4:
        $i9 = i29 << 8;

        i31 = $i9 | s30;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i11;

        $b12 = r1[$i10];

        s32 = $b12 & 255;

        $i13 = r2[s32];

        if $i13 == 0 goto label6;

        if s32 != 34 goto label5;

        $i22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int,int)>($i22, i31, 3);

        return $r7;

     label5:
        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int,int)>($i21, i31, s32, 3);

        return $r6;

     label6:
        $i14 = i31 << 8;

        i33 = $i14 | s32;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i16 = $i15 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i16;

        $b17 = r1[$i15];

        s34 = $b17 & 255;

        $i18 = r2[s34];

        if $i18 == 0 goto label8;

        if s34 != 34 goto label7;

        $i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int,int)>($i20, i33, 4);

        return $r5;

     label7:
        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int,int)>($i19, i33, s34, 4);

        return $r4;

     label8:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseMediumName2(int,int)>(s34, i33);

        return $r3;
    }

    protected final java.lang.String parseMediumName2(int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i30, i32, i34;
        byte[] r1;
        int[] r2;
        byte $b3, $b8, $b13, $b18;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        short s29, s31, s33, s35;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i28 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icLatin1>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i2;

        $b3 = r1[$i1];

        s29 = $b3 & 255;

        $i4 = r2[s29];

        if $i4 == 0 goto label2;

        if s29 != 34 goto label1;

        $i27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int,int,int)>($i27, i0, i28, 1);

        return $r11;

     label1:
        $i26 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r10 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int,int,int)>($i26, i0, i28, s29, 1);

        return $r10;

     label2:
        $i5 = i28 << 8;

        i30 = $i5 | s29;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i7;

        $b8 = r1[$i6];

        s31 = $b8 & 255;

        $i9 = r2[s31];

        if $i9 == 0 goto label4;

        if s31 != 34 goto label3;

        $i25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int,int,int)>($i25, i0, i30, 2);

        return $r9;

     label3:
        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int,int,int)>($i24, i0, i30, s31, 2);

        return $r8;

     label4:
        $i10 = i30 << 8;

        i32 = $i10 | s31;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i12;

        $b13 = r1[$i11];

        s33 = $b13 & 255;

        $i14 = r2[s33];

        if $i14 == 0 goto label6;

        if s33 != 34 goto label5;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int,int,int)>($i23, i0, i32, 3);

        return $r7;

     label5:
        $i22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int,int,int)>($i22, i0, i32, s33, 3);

        return $r6;

     label6:
        $i15 = i32 << 8;

        i34 = $i15 | s33;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i17 = $i16 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i17;

        $b18 = r1[$i16];

        s35 = $b18 & 255;

        $i19 = r2[s35];

        if $i19 == 0 goto label8;

        if s35 != 34 goto label7;

        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int,int,int)>($i21, i0, i34, 4);

        return $r5;

     label7:
        $i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int,int,int)>($i20, i0, i34, s35, 4);

        return $r4;

     label8:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseLongName(int,int,int)>(s35, i0, i34);

        return $r3;
    }

    protected final java.lang.String parseLongName(int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i24, $i25, $i26, i27, i28, i30, i32, i34;
        byte[] r1;
        int[] r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26;
        java.lang.String $r7, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27;
        byte $b8, $b13, $b18, $b23;
        short s29, s31, s33, s35;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i27 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _quad1>;

        $r3[0] = $i2;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r4[1] = i0;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r5[2] = i1;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icLatin1>;

        i28 = 3;

     label01:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i5 = $i3 + 4;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i5 > $i4 goto label11;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i7;

        $b8 = r1[$i6];

        s29 = $b8 & 255;

        $i9 = r2[s29];

        if $i9 == 0 goto label03;

        if s29 != 34 goto label02;

        $r26 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r27 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int[],int,int,int)>($r26, i28, i27, 1);

        return $r27;

     label02:
        $r24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r25 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseEscapedName(int[],int,int,int,int)>($r24, i28, i27, s29, 1);

        return $r25;

     label03:
        $i10 = i27 << 8;

        i30 = $i10 | s29;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i12;

        $b13 = r1[$i11];

        s31 = $b13 & 255;

        $i14 = r2[s31];

        if $i14 == 0 goto label05;

        if s31 != 34 goto label04;

        $r22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int[],int,int,int)>($r22, i28, i30, 2);

        return $r23;

     label04:
        $r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseEscapedName(int[],int,int,int,int)>($r20, i28, i30, s31, 2);

        return $r21;

     label05:
        $i15 = i30 << 8;

        i32 = $i15 | s31;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i17 = $i16 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i17;

        $b18 = r1[$i16];

        s33 = $b18 & 255;

        $i19 = r2[s33];

        if $i19 == 0 goto label07;

        if s33 != 34 goto label06;

        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r19 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int[],int,int,int)>($r18, i28, i32, 3);

        return $r19;

     label06:
        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseEscapedName(int[],int,int,int,int)>($r16, i28, i32, s33, 3);

        return $r17;

     label07:
        $i20 = i32 << 8;

        i34 = $i20 | s33;

        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i22 = $i21 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i22;

        $b23 = r1[$i21];

        s35 = $b23 & 255;

        $i24 = r2[s35];

        if $i24 == 0 goto label09;

        if s35 != 34 goto label08;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r15 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int[],int,int,int)>($r14, i28, i34, 4);

        return $r15;

     label08:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseEscapedName(int[],int,int,int,int)>($r12, i28, i34, s35, 4);

        return $r13;

     label09:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $i25 = lengthof $r8;

        if i28 < $i25 goto label10;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r11 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>($r10, i28);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r11;

     label10:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $i26 = i28;

        i28 = i28 + 1;

        $r9[$i26] = i34;

        i27 = s35;

        goto label01;

     label11:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseEscapedName(int[],int,int,int,int)>($r6, i28, 0, i27, 0);

        return $r7;
    }

    protected java.lang.String slowParseName() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        short s0;
        int $i1, $i2, $i3, $i4;
        int[] $r1;
        java.lang.String $r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3;
        byte[] $r4;
        byte $b5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label1;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(": was expecting closing \'\"\' for name", $r3);

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i4;

        $b5 = $r4[$i3];

        s0 = $b5 & 255;

        if s0 != 34 goto label2;

        return "";

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseEscapedName(int[],int,int,int,int)>($r1, 0, 0, s0, 0);

        return $r2;
    }

    private final java.lang.String parseName(int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, i1, i2;
        int[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseEscapedName(int[],int,int,int,int)>($r1, 0, i0, i1, i2);

        return $r2;
    }

    private final java.lang.String parseName(int, int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, i1, i2, i3;
        int[] $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r1[0] = i0;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseEscapedName(int[],int,int,int,int)>($r2, 1, i1, i2, i3);

        return $r3;
    }

    private final java.lang.String parseName(int, int, int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, i1, i2, i3, i4;
        int[] $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r1[0] = i0;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r2[1] = i1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseEscapedName(int[],int,int,int,int)>($r3, 2, i2, i3, i4);

        return $r4;
    }

    protected final java.lang.String parseEscapedName(int[], int, int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int[] r1, $r3, $r4, $r5, $r6, r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;
        byte[] $r8;
        byte $b36;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r10;
        java.lang.String r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r7 := @parameter0: int[];

        i21 := @parameter1: int;

        i22 := @parameter2: int;

        i23 := @parameter3: int;

        i24 := @parameter4: int;

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icLatin1>;

     label01:
        $i0 = r1[i23];

        if $i0 == 0 goto label11;

        if i23 != 34 goto label02;

        goto label16;

     label02:
        if i23 == 92 goto label03;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(i23, "name");

        goto label04;

     label03:
        i23 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char _decodeEscaped()>();

     label04:
        if i23 <= 127 goto label11;

        if i24 < 4 goto label06;

        $i14 = lengthof r7;

        if i21 < $i14 goto label05;

        $i16 = lengthof r7;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>(r7, $i16);

        r7 = $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r5;

     label05:
        $i15 = i21;

        i21 = i21 + 1;

        r7[$i15] = i22;

        i22 = 0;

        i24 = 0;

     label06:
        if i23 >= 2048 goto label07;

        $i13 = i22 << 8;

        $i11 = i23 >> 6;

        $i12 = 192 | $i11;

        i22 = $i13 | $i12;

        i24 = i24 + 1;

        goto label10;

     label07:
        $i7 = i22 << 8;

        $i5 = i23 >> 12;

        $i6 = 224 | $i5;

        i25 = $i7 | $i6;

        i26 = i24 + 1;

        if i26 < 4 goto label09;

        $i8 = lengthof r7;

        if i21 < $i8 goto label08;

        $i10 = lengthof r7;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>(r7, $i10);

        r7 = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r4;

     label08:
        $i9 = i21;

        i21 = i21 + 1;

        r7[$i9] = i25;

        i25 = 0;

        i26 = 0;

     label09:
        $i27 = i25 << 8;

        $i28 = i23 >> 6;

        $i29 = $i28 & 63;

        $i30 = 128 | $i29;

        i22 = $i27 | $i30;

        i24 = i26 + 1;

     label10:
        $i31 = i23 & 63;

        i23 = 128 | $i31;

     label11:
        if i24 >= 4 goto label12;

        i24 = i24 + 1;

        $i4 = i22 << 8;

        i22 = $i4 | i23;

        goto label14;

     label12:
        $i1 = lengthof r7;

        if i21 < $i1 goto label13;

        $i3 = lengthof r7;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>(r7, $i3);

        r7 = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r3;

     label13:
        $i2 = i21;

        i21 = i21 + 1;

        r7[$i2] = i22;

        i22 = i23;

        i24 = 1;

     label14:
        $i32 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i32 < $i33 goto label15;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label15;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in field name", $r2);

     label15:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i34 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i35 = $i34 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i35;

        $b36 = $r8[$i34];

        i23 = $b36 & 255;

        goto label01;

     label16:
        if i24 <= 0 goto label18;

        $i17 = lengthof r7;

        if i21 < $i17 goto label17;

        $i20 = lengthof r7;

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>(r7, $i20);

        r7 = $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r6;

     label17:
        $i18 = i21;

        i21 = i21 + 1;

        $i19 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _padLastQuad(int,int)>(i22, i24);

        r7[$i18] = $i19;

     label18:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        r11 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int[],int)>(r7, i21);

        if r11 != null goto label19;

        r11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String addName(int[],int,int)>(r7, i21, i24);

     label19:
        return r11;
    }

    protected java.lang.String _handleOddName(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i19, i20, i21, $i22, $i23, $i24, $i26;
        int[] $r1, $r3, r5, r6;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;
        java.lang.String $r4, r9;
        char c18;
        byte[] $r7;
        byte $b25;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i17 := @parameter0: int;

        if i17 != 39 goto label01;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_ALLOW_SINGLE_QUOTES>;

        $i16 = $i15 & $i14;

        if $i16 == 0 goto label01;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _parseAposName()>();

        return $r4;

     label01:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_ALLOW_UNQUOTED_NAMES>;

        $i2 = $i1 & $i0;

        if $i2 != 0 goto label02;

        $i13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeCharForError(int)>(i17);

        c18 = (char) $i13;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(c18, "was expecting double-quote to start field name");

     label02:
        r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeUtf8JsNames()>();

        $i3 = r5[i17];

        if $i3 == 0 goto label03;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i17, "was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name");

     label03:
        r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        i19 = 0;

        i20 = 0;

        i21 = 0;

     label04:
        if i21 >= 4 goto label05;

        i21 = i21 + 1;

        $i12 = i20 << 8;

        i20 = $i12 | i17;

        goto label07;

     label05:
        $i4 = lengthof r6;

        if i19 < $i4 goto label06;

        $i11 = lengthof r6;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>(r6, $i11);

        r6 = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r3;

     label06:
        $i5 = i19;

        i19 = i19 + 1;

        r6[$i5] = i20;

        i20 = i17;

        i21 = 1;

     label07:
        $i22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i22 < $i23 goto label08;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label08;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in field name", $r2);

     label08:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $b25 = $r7[$i24];

        i17 = $b25 & 255;

        $i26 = r5[i17];

        if $i26 == 0 goto label09;

        goto label10;

     label09:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i7;

        goto label04;

     label10:
        if i21 <= 0 goto label12;

        $i8 = lengthof r6;

        if i19 < $i8 goto label11;

        $i10 = lengthof r6;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>(r6, $i10);

        r6 = $r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r1;

     label11:
        $i9 = i19;

        i19 = i19 + 1;

        r6[$i9] = i20;

     label12:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int[],int)>(r6, i19);

        if r9 != null goto label13;

        r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String addName(int[],int,int)>(r6, i19, i21);

     label13:
        return r9;
    }

    protected java.lang.String _parseAposName() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int[] r1, $r3, $r4, $r5, $r6, r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i26, i27, i28, i29, i30, i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r7;
        byte[] $r8, $r11;
        byte $b25, $b41;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r13;
        java.lang.String r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label01;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z1 != 0 goto label01;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(": was expecting closing \'\'\' for field name", $r7);

     label01:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i24 = $i23 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i24;

        $b25 = $r8[$i23];

        i26 = $b25 & 255;

        if i26 != 39 goto label02;

        return "";

     label02:
        r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        i27 = 0;

        i28 = 0;

        i29 = 0;

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icLatin1>;

     label03:
        if i26 != 39 goto label04;

        goto label18;

     label04:
        $i2 = r1[i26];

        if $i2 == 0 goto label13;

        if i26 == 34 goto label13;

        if i26 == 92 goto label05;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(i26, "name");

        goto label06;

     label05:
        i26 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char _decodeEscaped()>();

     label06:
        if i26 <= 127 goto label13;

        if i29 < 4 goto label08;

        $i16 = lengthof r10;

        if i27 < $i16 goto label07;

        $i18 = lengthof r10;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>(r10, $i18);

        r10 = $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r5;

     label07:
        $i17 = i27;

        i27 = i27 + 1;

        r10[$i17] = i28;

        i28 = 0;

        i29 = 0;

     label08:
        if i26 >= 2048 goto label09;

        $i15 = i28 << 8;

        $i13 = i26 >> 6;

        $i14 = 192 | $i13;

        i28 = $i15 | $i14;

        i29 = i29 + 1;

        goto label12;

     label09:
        $i9 = i28 << 8;

        $i7 = i26 >> 12;

        $i8 = 224 | $i7;

        i30 = $i9 | $i8;

        i31 = i29 + 1;

        if i31 < 4 goto label11;

        $i10 = lengthof r10;

        if i27 < $i10 goto label10;

        $i12 = lengthof r10;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>(r10, $i12);

        r10 = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r4;

     label10:
        $i11 = i27;

        i27 = i27 + 1;

        r10[$i11] = i30;

        i30 = 0;

        i31 = 0;

     label11:
        $i32 = i30 << 8;

        $i33 = i26 >> 6;

        $i34 = $i33 & 63;

        $i35 = 128 | $i34;

        i28 = $i32 | $i35;

        i29 = i31 + 1;

     label12:
        $i36 = i26 & 63;

        i26 = 128 | $i36;

     label13:
        if i29 >= 4 goto label14;

        i29 = i29 + 1;

        $i6 = i28 << 8;

        i28 = $i6 | i26;

        goto label16;

     label14:
        $i3 = lengthof r10;

        if i27 < $i3 goto label15;

        $i5 = lengthof r10;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>(r10, $i5);

        r10 = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r3;

     label15:
        $i4 = i27;

        i27 = i27 + 1;

        r10[$i4] = i28;

        i28 = i26;

        i29 = 1;

     label16:
        $i37 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i38 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i37 < $i38 goto label17;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label17;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in field name", $r2);

     label17:
        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i39 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i40 = $i39 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i40;

        $b41 = $r11[$i39];

        i26 = $b41 & 255;

        goto label03;

     label18:
        if i29 <= 0 goto label20;

        $i19 = lengthof r10;

        if i27 < $i19 goto label19;

        $i22 = lengthof r10;

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>(r10, $i22);

        r10 = $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r6;

     label19:
        $i20 = i27;

        i27 = i27 + 1;

        $i21 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _padLastQuad(int,int)>(i28, i29);

        r10[$i20] = $i21;

     label20:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int[],int)>(r10, i27);

        if r14 != null goto label21;

        r14 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String addName(int[],int,int)>(r10, i27, i29);

     label21:
        return r14;
    }

    private final java.lang.String findName(int, int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, i1, i2;
        java.lang.String r1, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r2;
        int[] $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _padLastQuad(int,int)>(i1, i0);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        r1 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int)>(i2);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r3[0] = i2;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String addName(int[],int,int)>($r4, 1, i0);

        return $r5;
    }

    private final java.lang.String findName(int, int, int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, i1, i2, i3;
        java.lang.String r1, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r2;
        int[] $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i1 := @parameter2: int;

        i3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _padLastQuad(int,int)>(i2, i1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        r1 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int,int)>(i0, i3);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r3[0] = i0;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r4[1] = i3;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String addName(int[],int,int)>($r5, 2, i1);

        return $r6;
    }

    private final java.lang.String findName(int, int, int, int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, i1, i2, $i3, i4, i5;
        java.lang.String r1, $r4;
        int[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        i2 := @parameter3: int;

        i5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _padLastQuad(int,int)>(i4, i2);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        r1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int,int,int)>(i0, i1, i5);

        if r1 == null goto label1;

        return r1;

     label1:
        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer>;

        r2[0] = i0;

        r2[1] = i1;

        $i3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _padLastQuad(int,int)>(i5, i2);

        r2[2] = $i3;

        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String addName(int[],int,int)>(r2, 3, i2);

        return $r4;
    }

    private final java.lang.String findName(int[], int, int, int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.lang.String r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r2;
        int[] $r4, r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r5 := @parameter0: int[];

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = lengthof r5;

        if i5 < $i2 goto label1;

        $i4 = lengthof r5;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>(r5, $i4);

        r5 = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _quadBuffer> = $r4;

     label1:
        i6 = i5 + 1;

        $i3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _padLastQuad(int,int)>(i0, i1);

        r5[i5] = $i3;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        r1 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int[],int)>(r5, i6);

        if r1 != null goto label2;

        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String addName(int[],int,int)>(r5, i6, i1);

        return $r3;

     label2:
        return r1;
    }

    private final java.lang.String addName(int[], int, int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, i45, i46, i47, i48, i49, i50, i51, $i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, $i64;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2, $r6, $r7;
        java.lang.String $r3, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r4;
        char $c11, $c25;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r8;
        char[] r9;
        byte b52;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = i0 << 2;

        $i4 = $i3 - 4;

        i2 = $i4 + i1;

        if i1 >= 4 goto label01;

        $i40 = i0 - 1;

        i45 = r1[$i40];

        $i44 = i0 - 1;

        $i41 = 4 - i1;

        $i42 = $i41 << 3;

        $i43 = i45 << $i42;

        r1[$i44] = $i43;

        goto label02;

     label01:
        i45 = 0;

     label02:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        i46 = 0;

        i47 = 0;

     label03:
        if i47 >= i2 goto label16;

        $i6 = i47 >> 2;

        i48 = r1[$i6];

        i49 = i47 & 3;

        $i7 = 3 - i49;

        $i8 = $i7 << 3;

        $i9 = i48 >> $i8;

        i50 = $i9 & 255;

        i47 = i47 + 1;

        if i50 <= 127 goto label14;

        $i12 = i50 & 224;

        if $i12 != 192 goto label04;

        i51 = i50 & 31;

        b52 = 1;

        goto label07;

     label04:
        $i13 = i50 & 240;

        if $i13 != 224 goto label05;

        i51 = i50 & 15;

        b52 = 2;

        goto label07;

     label05:
        $i14 = i50 & 248;

        if $i14 != 240 goto label06;

        i51 = i50 & 7;

        b52 = 3;

        goto label07;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidInitial(int)>(i50);

        i51 = 1;

        b52 = 1;

     label07:
        $i53 = i47 + b52;

        if $i53 <= i2 goto label08;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in field name", $r8);

     label08:
        $i15 = i47 >> 2;

        i54 = r1[$i15];

        i55 = i47 & 3;

        $i16 = 3 - i55;

        $i17 = $i16 << 3;

        i56 = i54 >> $i17;

        i47 = i47 + 1;

        $i18 = i56 & 192;

        if $i18 == 128 goto label09;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int)>(i56);

     label09:
        $i20 = i51 << 6;

        $i19 = i56 & 63;

        i50 = $i20 | $i19;

        if b52 <= 1 goto label12;

        $i27 = i47 >> 2;

        i57 = r1[$i27];

        i58 = i47 & 3;

        $i28 = 3 - i58;

        $i29 = $i28 << 3;

        i59 = i57 >> $i29;

        i47 = i47 + 1;

        $i30 = i59 & 192;

        if $i30 == 128 goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int)>(i59);

     label10:
        $i32 = i50 << 6;

        $i31 = i59 & 63;

        i50 = $i32 | $i31;

        if b52 <= 2 goto label12;

        $i33 = i47 >> 2;

        i60 = r1[$i33];

        i61 = i47 & 3;

        $i34 = 3 - i61;

        $i35 = $i34 << 3;

        i62 = i60 >> $i35;

        i47 = i47 + 1;

        $i36 = i62 & 192;

        if $i36 == 128 goto label11;

        $i39 = i62 & 255;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int)>($i39);

     label11:
        $i38 = i50 << 6;

        $i37 = i62 & 63;

        i50 = $i38 | $i37;

     label12:
        if b52 <= 2 goto label14;

        i63 = i50 - 65536;

        $i21 = lengthof r9;

        if i46 < $i21 goto label13;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label13:
        $i22 = i46;

        i46 = i46 + 1;

        $i23 = i63 >> 10;

        $i24 = 55296 + $i23;

        $c25 = (char) $i24;

        r9[$i22] = $c25;

        $i26 = i63 & 1023;

        i50 = 56320 | $i26;

     label14:
        $i64 = lengthof r9;

        if i46 < $i64 goto label15;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label15:
        $i10 = i46;

        i46 = i46 + 1;

        $c11 = (char) i50;

        r9[$i10] = $c11;

        goto label03;

     label16:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>(r9, 0, i46);

        if i1 >= 4 goto label17;

        $i5 = i0 - 1;

        r1[$i5] = i45;

     label17:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String addName(java.lang.String,int[],int)>($r3, r1, i0);

        return $r5;
    }

    private static final int _padLastQuad(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 4 goto label1;

        $i4 = i0;

        goto label2;

     label1:
        $i2 = i1 << 3;

        $i3 = -1 << $i2;

        $i4 = i0 | $i3;

     label2:
        return $i4;
    }

    protected void _loadMoreGuaranteed() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF()>();

     label1:
        return;
    }

    protected void _finishString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        char[] r1;
        int[] r2;
        int i0, $i2, $i3, $i4, $i5, $i7, $i8, $i10, i11, i12;
        byte[] r3;
        short s1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4, $r5;
        byte $b6;
        char $c9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if i11 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

        i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

     label1:
        i12 = 0;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r1 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icUTF8>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        $i3 = lengthof r1;

        $i4 = i11 + $i3;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

     label2:
        if i11 >= i0 goto label4;

        $b6 = r3[i11];

        s1 = $b6 & 255;

        $i7 = r2[s1];

        if $i7 == 0 goto label3;

        if s1 != 34 goto label4;

        $i10 = i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i10;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i12);

        return;

     label3:
        i11 = i11 + 1;

        $i8 = i12;

        i12 = i12 + 1;

        $c9 = (char) s1;

        r1[$i8] = $c9;

        goto label2;

     label4:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i11;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _finishString2(char[],int)>(r1, i12);

        return;
    }

    protected java.lang.String _finishAndReturnString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        char[] r1;
        int[] r2;
        int i0, $i2, $i3, $i4, $i5, $i7, $i8, $i10, i11, i12;
        byte[] r3;
        short s1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        byte $b6;
        char $c9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if i11 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

        i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

     label1:
        i12 = 0;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r1 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icUTF8>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        $i3 = lengthof r1;

        $i4 = i11 + $i3;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

     label2:
        if i11 >= i0 goto label4;

        $b6 = r3[i11];

        s1 = $b6 & 255;

        $i7 = r2[s1];

        if $i7 == 0 goto label3;

        if s1 != 34 goto label4;

        $i10 = i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i10;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String setCurrentAndReturn(int)>(i12);

        return $r8;

     label3:
        i11 = i11 + 1;

        $i8 = i12;

        i12 = i12 + 1;

        $c9 = (char) s1;

        r1[$i8] = $c9;

        goto label2;

     label4:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i11;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _finishString2(char[],int)>(r1, i12);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r6;
    }

    private final void _finishString2(char[], int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int[] r1;
        byte[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i20, $i21, $i22, i23, i24, $i25, i26, i27, $i28;
        byte $b7;
        char $c10, $c15, $c19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3, $r4, $r5, $r6;
        char[] r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r7 := @parameter0: char[];

        i23 := @parameter1: int;

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icUTF8>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

     label01:
        i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if i24 < $i25 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

        i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

     label02:
        $i1 = lengthof r7;

        if i23 < $i1 goto label03;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i23 = 0;

     label03:
        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        $i2 = lengthof r7;

        $i3 = $i2 - i23;

        $i4 = i24 + $i3;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

     label04:
        if i24 >= i0 goto label06;

        $i6 = i24;

        i24 = i24 + 1;

        $b7 = r2[$i6];

        i26 = $b7 & 255;

        $i8 = r1[i26];

        if $i8 == 0 goto label05;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i24;

        goto label07;

     label05:
        $i9 = i23;

        i23 = i23 + 1;

        $c10 = (char) i26;

        r7[$i9] = $c10;

        goto label04;

     label06:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i24;

        goto label01;

     label07:
        if i26 != 34 goto label08;

        goto label19;

     label08:
        $i11 = r1[i26];

        tableswitch($i11)
        {
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label13;
            default: goto label15;
        };

     label09:
        i26 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char _decodeEscaped()>();

        goto label17;

     label10:
        i26 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_2(int)>(i26);

        goto label17;

     label11:
        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        $i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i22 = $i21 - $i20;

        if $i22 < 2 goto label12;

        i26 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_3fast(int)>(i26);

        goto label17;

     label12:
        i26 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_3(int)>(i26);

        goto label17;

     label13:
        i27 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_4(int)>(i26);

        $i12 = i23;

        i23 = i23 + 1;

        $i13 = i27 >> 10;

        $i14 = 55296 | $i13;

        $c15 = (char) $i14;

        r7[$i12] = $c15;

        $i16 = lengthof r7;

        if i23 < $i16 goto label14;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r7 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i23 = 0;

     label14:
        $i17 = i27 & 1023;

        i26 = 56320 | $i17;

        goto label17;

     label15:
        if i26 >= 32 goto label16;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(i26, "string value");

        goto label17;

     label16:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidChar(int)>(i26);

     label17:
        $i28 = lengthof r7;

        if i23 < $i28 goto label18;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r7 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i23 = 0;

     label18:
        $i18 = i23;

        i23 = i23 + 1;

        $c19 = (char) i26;

        r7[$i18] = $c19;

        goto label01;

     label19:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i23);

        return;
    }

    protected void _skipString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int[] r1;
        byte[] r2;
        short s0;
        int $i1, $i3, $i4, i6, i7;
        byte $b2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _tokenIncomplete> = 0;

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icUTF8>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

     label01:
        i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if i6 < i7 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

        i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

     label02:
        if i6 >= i7 goto label03;

        $i1 = i6;

        i6 = i6 + 1;

        $b2 = r2[$i1];

        s0 = $b2 & 255;

        $i3 = r1[s0];

        if $i3 == 0 goto label02;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i6;

        goto label04;

     label03:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i6;

        goto label01;

     label04:
        if s0 != 34 goto label05;

        goto label13;

     label05:
        $i4 = r1[s0];

        tableswitch($i4)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            default: goto label10;
        };

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char _decodeEscaped()>();

        goto label12;

     label07:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_2()>();

        goto label12;

     label08:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_3()>();

        goto label12;

     label09:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_4(int)>(s0);

        goto label12;

     label10:
        if s0 >= 32 goto label11;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(s0, "string value");

        goto label12;

     label11:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidChar(int)>(s0);

     label12:
        goto label01;

     label13:
        return;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.StringBuilder $r1, $r2, $r4, $r6, $r7, $r8;
        java.lang.String $r3, $r5, $r9, $r10;
        char $c1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r11, $r14, $r15, $r16, $r17, $r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r12, $r13;
        boolean $z0, $z1, $z2, $z3;
        byte[] $r18;
        byte $b20;
        short $s21;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 39: goto label04;
            case 43: goto label09;
            case 44: goto label02;
            case 73: goto label07;
            case 78: goto label05;
            case 93: goto label01;
            case 125: goto label03;
            default: goto label11;
        };

     label01:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z0 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inArray()>();

        if $z0 != 0 goto label02;

        goto label11;

     label02:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z1 != 0 goto label03;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_ALLOW_MISSING>;

        $i4 = $i3 & $i2;

        if $i4 == 0 goto label03;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i6 = $i5 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i6;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        return $r14;

     label03:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i0, "expected a value");

     label04:
        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_ALLOW_SINGLE_QUOTES>;

        $i17 = $i15 & $i16;

        if $i17 == 0 goto label11;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleApos()>();

        return $r11;

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchToken(java.lang.String,int)>("NaN", 1);

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_NON_NUM_NUMBERS>;

        $i9 = $i8 & $i7;

        if $i9 == 0 goto label06;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double)>("NaN", #NaN);

        return $r15;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportError(java.lang.String)>("Non-standard token \'NaN\': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow");

        goto label11;

     label07:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchToken(java.lang.String,int)>("Infinity", 1);

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_NON_NUM_NUMBERS>;

        $i12 = $i11 & $i10;

        if $i12 == 0 goto label08;

        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double)>("Infinity", #Infinity);

        return $r16;

     label08:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportError(java.lang.String)>("Non-standard token \'Infinity\': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow");

        goto label11;

     label09:
        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i14 < $i13 goto label10;

        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z2 != 0 goto label10;

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOFInValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r17);

     label10:
        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i19 = $i18 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i19;

        $b20 = $r18[$i18];

        $s21 = $b20 & 255;

        $r20 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean)>($s21, 0);

        return $r20;

     label11:
        $z3 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(int)>(i0);

        if $z3 == 0 goto label12;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c1 = (char) i0;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _validJsonTokenList()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidToken(java.lang.String,java.lang.String)>($r9, $r10);

     label12:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected a valid value ");

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _validJsonValueList()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i0, $r5);

        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleApos() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int[] r1;
        byte[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, i23, $i24, $i25, i26, $i27, i28, i29, $i30;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3, $r4, $r5, $r6, $r8;
        byte $b7;
        char $c12, $c16, $c22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r7;
        char[] r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i23 = 0;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icUTF8>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

     label01:
        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i24 < $i25 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label02:
        $i1 = lengthof r9;

        if i23 < $i1 goto label03;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i23 = 0;

     label03:
        i26 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = lengthof r9;

        $i3 = $i2 - i23;

        i0 = $i4 + $i3;

        if i0 >= i26 goto label04;

        i26 = i0;

     label04:
        $i27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        if $i27 >= i26 goto label06;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i6;

        $b7 = r2[$i5];

        i28 = $b7 & 255;

        if i28 == 39 goto label07;

        $i20 = r1[i28];

        if $i20 == 0 goto label05;

        goto label07;

     label05:
        $i21 = i23;

        i23 = i23 + 1;

        $c22 = (char) i28;

        r9[$i21] = $c22;

        goto label04;

     label06:
        goto label01;

     label07:
        if i28 != 39 goto label08;

        goto label19;

     label08:
        $i8 = r1[i28];

        tableswitch($i8)
        {
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label13;
            default: goto label15;
        };

     label09:
        i28 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char _decodeEscaped()>();

        goto label17;

     label10:
        i28 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_2(int)>(i28);

        goto label17;

     label11:
        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i19 = $i18 - $i17;

        if $i19 < 2 goto label12;

        i28 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_3fast(int)>(i28);

        goto label17;

     label12:
        i28 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_3(int)>(i28);

        goto label17;

     label13:
        i29 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_4(int)>(i28);

        $i9 = i23;

        i23 = i23 + 1;

        $i10 = i29 >> 10;

        $i11 = 55296 | $i10;

        $c12 = (char) $i11;

        r9[$i9] = $c12;

        $i13 = lengthof r9;

        if i23 < $i13 goto label14;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i23 = 0;

     label14:
        $i14 = i29 & 1023;

        i28 = 56320 | $i14;

        goto label17;

     label15:
        if i28 >= 32 goto label16;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(i28, "string value");

     label16:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidChar(int)>(i28);

     label17:
        $i30 = lengthof r9;

        if i23 < $i30 goto label18;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i23 = 0;

     label18:
        $i15 = i23;

        i23 = i23 + 1;

        $c16 = (char) i28;

        r9[$i15] = $c16;

        goto label01;

     label19:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i23);

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        return $r7;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int, boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        boolean z0, $z1;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r4;
        java.lang.String $r2, $r7, r8, $r9;
        byte[] $r5;
        double $d0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i2 := @parameter0: int;

        z0 := @parameter1: boolean;

     label01:
        if i2 != 73 goto label12;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label02;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z1 != 0 goto label02;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOFInValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r4);

     label02:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i4;

        i2 = $r5[$i3];

        if i2 != 78 goto label05;

        if z0 == 0 goto label03;

        $r7 = "-INF";

        goto label04;

     label03:
        $r7 = "+INF";

     label04:
        r8 = $r7;

        goto label08;

     label05:
        if i2 != 110 goto label12;

        if z0 == 0 goto label06;

        $r9 = "-Infinity";

        goto label07;

     label06:
        $r9 = "+Infinity";

     label07:
        r8 = $r9;

     label08:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchToken(java.lang.String,int)>(r8, 3);

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_NON_NUM_NUMBERS>;

        $i7 = $i5 & $i6;

        if $i7 == 0 goto label11;

        $r2 = r8;

        if z0 == 0 goto label09;

        $d0 = #-Infinity;

        goto label10;

     label09:
        $d0 = #Infinity;

     label10:
        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double)>($r2, $d0);

        return $r1;

     label11:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportError(java.lang.String,java.lang.Object)>("Non-standard token \'%s\': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow", r8);

        goto label01;

     label12:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(i2, "expected digit (0-9) to follow minus sign, for valid numeric value");

        return null;
    }

    protected final void _matchTrue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        byte[] r1;
        short s0;
        int $i1, $i2, i7, i8, i9, i10;
        byte $b3, $b4, $b5, $b6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = i7 + 3;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label2;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        i8 = i7 + 1;

        $b3 = r1[i7];

        if $b3 != 114 goto label2;

        i9 = i8 + 1;

        $b4 = r1[i8];

        if $b4 != 117 goto label2;

        i10 = i9 + 1;

        $b5 = r1[i9];

        if $b5 != 101 goto label2;

        $b6 = r1[i10];

        s0 = $b6 & 255;

        if s0 < 48 goto label1;

        if s0 == 93 goto label1;

        if s0 != 125 goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i10;

        return;

     label2:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchToken2(java.lang.String,int)>("true", 1);

        return;
    }

    protected final void _matchFalse() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        byte[] r1;
        short s0;
        int $i1, $i2, i8, i9, i10, i11, i12;
        byte $b3, $b4, $b5, $b6, $b7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = i8 + 4;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label2;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        i9 = i8 + 1;

        $b3 = r1[i8];

        if $b3 != 97 goto label2;

        i10 = i9 + 1;

        $b4 = r1[i9];

        if $b4 != 108 goto label2;

        i11 = i10 + 1;

        $b5 = r1[i10];

        if $b5 != 115 goto label2;

        i12 = i11 + 1;

        $b6 = r1[i11];

        if $b6 != 101 goto label2;

        $b7 = r1[i12];

        s0 = $b7 & 255;

        if s0 < 48 goto label1;

        if s0 == 93 goto label1;

        if s0 != 125 goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i12;

        return;

     label2:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchToken2(java.lang.String,int)>("false", 1);

        return;
    }

    protected final void _matchNull() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        byte[] r1;
        short s0;
        int $i1, $i2, i7, i8, i9, i10;
        byte $b3, $b4, $b5, $b6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = i7 + 3;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label2;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        i8 = i7 + 1;

        $b3 = r1[i7];

        if $b3 != 117 goto label2;

        i9 = i8 + 1;

        $b4 = r1[i8];

        if $b4 != 108 goto label2;

        i10 = i9 + 1;

        $b5 = r1[i9];

        if $b5 != 108 goto label2;

        $b6 = r1[i10];

        s0 = $b6 & 255;

        if s0 < 48 goto label1;

        if s0 == 93 goto label1;

        if s0 != 125 goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i10;

        return;

     label2:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchToken2(java.lang.String,int)>("null", 1);

        return;
    }

    protected final void _matchToken(java.lang.String, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.lang.String r1, $r4;
        int i0, $i2, $i3, $i4, $i5, $i8, $i9, $i10, i12;
        short s1;
        byte[] $r2, $r3;
        byte $b6, $b11;
        char $c7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: java.lang.String;

        i12 := @parameter1: int;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i4 = $i2 + i0;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i4 < $i3 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchToken2(java.lang.String,int)>(r1, i12);

        return;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $b6 = $r2[$i5];

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i12);

        if $b6 == $c7 goto label2;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i12);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidToken(java.lang.String)>($r4);

     label2:
        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i9 = $i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i9;

        i12 = i12 + 1;

        if i12 < i0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $b11 = $r3[$i10];

        s1 = $b11 & 255;

        if s1 < 48 goto label3;

        if s1 == 93 goto label3;

        if s1 == 125 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _checkMatchEnd(java.lang.String,int,int)>(r1, i12, s1);

     label3:
        return;
    }

    private final void _matchToken2(java.lang.String, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.lang.String r1, $r4;
        int i0, $i2, $i3, $i4, $i7, $i8, $i9, i11, $i12, $i13;
        short s1;
        byte[] $r2, $r3;
        byte $b5, $b10;
        char $c6;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: java.lang.String;

        i11 := @parameter1: int;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i3 < $i2 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z1 == 0 goto label3;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $b5 = $r2[$i4];

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i11);

        if $b5 == $c6 goto label4;

     label3:
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i11);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidToken(java.lang.String)>($r4);

     label4:
        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i13;

        i11 = i11 + 1;

        if i11 < i0 goto label1;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i8 < $i7 goto label5;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label5;

        return;

     label5:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $b10 = $r3[$i9];

        s1 = $b10 & 255;

        if s1 < 48 goto label6;

        if s1 == 93 goto label6;

        if s1 == 125 goto label6;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _checkMatchEnd(java.lang.String,int,int)>(r1, i11, s1);

     label6:
        return;
    }

    private final void _checkMatchEnd(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.lang.String r1, $r2;
        int i0, i1, $i3;
        char c2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeCharForError(int)>(i1);

        c2 = (char) $i3;

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>(c2);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidToken(java.lang.String)>($r2);

     label1:
        return;
    }

    private final int _skipWS() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        short s0;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12;
        byte[] $r1;
        byte $b6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label8;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i5;

        $b6 = $r1[$i4];

        s0 = $b6 & 255;

        if s0 <= 32 goto label4;

        if s0 == 47 goto label2;

        if s0 != 35 goto label3;

     label2:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i11 = $i10 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i11;

        $i12 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWS2()>();

        return $i12;

     label3:
        return s0;

     label4:
        if s0 == 32 goto label7;

        if s0 != 10 goto label5;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow> = $i8;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i9;

        goto label7;

     label5:
        if s0 != 13 goto label6;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCR()>();

        goto label7;

     label6:
        if s0 == 9 goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwInvalidSpace(int)>(s0);

     label7:
        goto label1;

     label8:
        $i3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWS2()>();

        return $i3;
    }

    private final int _skipWS2() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        short s0;
        int $i1, $i2, $i4, $i5, $i6, $i7, $i8;
        byte[] $r1;
        byte $b3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4;
        java.lang.String $r5, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

     label1:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i7 < $i8 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z1 == 0 goto label9;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i2;

        $b3 = $r1[$i1];

        s0 = $b3 & 255;

        if s0 <= 32 goto label5;

        if s0 != 47 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipComment()>();

        goto label1;

     label3:
        if s0 != 35 goto label4;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _skipYAMLComment()>();

        if $z0 == 0 goto label4;

        goto label1;

     label4:
        return s0;

     label5:
        if s0 == 32 goto label8;

        if s0 != 10 goto label6;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow> = $i5;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i6;

        goto label8;

     label6:
        if s0 != 13 goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCR()>();

        goto label8;

     label7:
        if s0 == 9 goto label8;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwInvalidSpace(int)>(s0);

     label8:
        goto label1;

     label9:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end-of-input within/between ");

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String typeDesc()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String)>($r8);

        throw $r9;
    }

    private final int _skipWSOrEnd() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24;
        byte[] $r1, $r2;
        byte $b4, $b8;
        boolean $z0;
        short s22, s25;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label01;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label01;

        $i21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _eofAsNextChar()>();

        return $i21;

     label01:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i3;

        $b4 = $r1[$i2];

        s22 = $b4 & 255;

        if s22 <= 32 goto label04;

        if s22 == 47 goto label02;

        if s22 != 35 goto label03;

     label02:
        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i19 = $i18 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i19;

        $i20 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWSOrEnd2()>();

        return $i20;

     label03:
        return s22;

     label04:
        if s22 == 32 goto label07;

        if s22 != 10 goto label05;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        $i16 = $i15 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow> = $i16;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i17;

        goto label07;

     label05:
        if s22 != 13 goto label06;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCR()>();

        goto label07;

     label06:
        if s22 == 9 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwInvalidSpace(int)>(s22);

     label07:
        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i23 >= $i24 goto label13;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i7;

        $b8 = $r2[$i6];

        s25 = $b8 & 255;

        if s25 <= 32 goto label10;

        if s25 == 47 goto label08;

        if s25 != 35 goto label09;

     label08:
        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i13 = $i12 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i13;

        $i14 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWSOrEnd2()>();

        return $i14;

     label09:
        return s25;

     label10:
        if s25 == 32 goto label07;

        if s25 != 10 goto label11;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow> = $i10;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i11;

        goto label07;

     label11:
        if s25 != 13 goto label12;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCR()>();

        goto label07;

     label12:
        if s25 == 9 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwInvalidSpace(int)>(s25);

        goto label07;

     label13:
        $i5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWSOrEnd2()>();

        return $i5;
    }

    private final int _skipWSOrEnd2() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        short s0;
        int $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9;
        byte[] $r1;
        byte $b3;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

     label1:
        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i8 < $i9 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z1 == 0 goto label9;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i2;

        $b3 = $r1[$i1];

        s0 = $b3 & 255;

        if s0 <= 32 goto label5;

        if s0 != 47 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipComment()>();

        goto label1;

     label3:
        if s0 != 35 goto label4;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _skipYAMLComment()>();

        if $z0 == 0 goto label4;

        goto label1;

     label4:
        return s0;

     label5:
        if s0 == 32 goto label8;

        if s0 != 10 goto label6;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow> = $i5;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i6;

        goto label8;

     label6:
        if s0 != 13 goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCR()>();

        goto label8;

     label7:
        if s0 == 9 goto label8;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwInvalidSpace(int)>(s0);

     label8:
        goto label1;

     label9:
        $i7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _eofAsNextChar()>();

        return $i7;
    }

    private final int _skipColon() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        byte[] $r1, $r2, $r3, $r4, $r7, $r8;
        byte b30, b31, b32, b33, b34;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = $i0 + 4;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label01;

        $i29 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>(0);

        return $i29;

     label01:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        b30 = $r1[$i3];

        if b30 != 58 goto label09;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i19 = $i18 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i19;

        b31 = $r7[$i19];

        if b31 <= 32 goto label04;

        if b31 == 47 goto label02;

        if b31 != 35 goto label03;

     label02:
        $i26 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>(1);

        return $i26;

     label03:
        $i27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i28 = $i27 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i28;

        return b31;

     label04:
        if b31 == 32 goto label05;

        if b31 != 9 goto label08;

     label05:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i21 = $i20 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i21;

        b32 = $r8[$i21];

        if b32 <= 32 goto label08;

        if b32 == 47 goto label06;

        if b32 != 35 goto label07;

     label06:
        $i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>(1);

        return $i23;

     label07:
        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i25 = $i24 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i25;

        return b32;

     label08:
        $i22 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>(1);

        return $i22;

     label09:
        if b30 == 32 goto label10;

        if b30 != 9 goto label11;

     label10:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i5;

        b30 = $r2[$i5];

     label11:
        if b30 != 58 goto label19;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i8;

        b33 = $r3[$i8];

        if b33 <= 32 goto label14;

        if b33 == 47 goto label12;

        if b33 != 35 goto label13;

     label12:
        $i15 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>(1);

        return $i15;

     label13:
        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i17 = $i16 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i17;

        return b33;

     label14:
        if b33 == 32 goto label15;

        if b33 != 9 goto label18;

     label15:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i10;

        b34 = $r4[$i10];

        if b34 <= 32 goto label18;

        if b34 == 47 goto label16;

        if b34 != 35 goto label17;

     label16:
        $i12 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>(1);

        return $i12;

     label17:
        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i14;

        return b34;

     label18:
        $i11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>(1);

        return $i11;

     label19:
        $i6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>(0);

        return $i6;
    }

    private final int _skipColon2(boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        short s0;
        int $i1, $i2, $i4, $i5, $i6, $i7, $i8;
        byte[] $r1;
        byte $b3;
        boolean $z0, $z1, z2;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r4;
        java.lang.String $r5, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        z2 := @parameter0: boolean;

     label01:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i7 < $i8 goto label02;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z1 == 0 goto label11;

     label02:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i2;

        $b3 = $r1[$i1];

        s0 = $b3 & 255;

        if s0 <= 32 goto label07;

        if s0 != 47 goto label03;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipComment()>();

        goto label01;

     label03:
        if s0 != 35 goto label04;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _skipYAMLComment()>();

        if $z0 == 0 goto label04;

        goto label01;

     label04:
        if z2 == 0 goto label05;

        return s0;

     label05:
        if s0 == 58 goto label06;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(s0, "was expecting a colon to separate field name and value");

     label06:
        z2 = 1;

        goto label10;

     label07:
        if s0 == 32 goto label10;

        if s0 != 10 goto label08;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow> = $i5;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i6;

        goto label10;

     label08:
        if s0 != 13 goto label09;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCR()>();

        goto label10;

     label09:
        if s0 == 9 goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwInvalidSpace(int)>(s0);

     label10:
        goto label01;

     label11:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" within/between ");

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String typeDesc()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r8, null);

        return -1;
    }

    private final void _skipComment() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        short s0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        byte[] $r1;
        byte $b8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_ALLOW_JAVA_COMMENTS>;

        $i3 = $i2 & $i1;

        if $i3 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(47, "maybe a (non-standard) comment? (not recognized as one since Feature \'ALLOW_COMMENTS\' not enabled for parser)");

     label1:
        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i5 < $i4 goto label2;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in a comment", null);

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i7;

        $b8 = $r1[$i6];

        s0 = $b8 & 255;

        if s0 != 47 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipLine()>();

        goto label5;

     label3:
        if s0 != 42 goto label4;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCComment()>();

        goto label5;

     label4:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(s0, "was expecting either \'*\' or \'/\' for a comment");

     label5:
        return;
    }

    private final void _skipCComment() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int[] r1;
        short s0;
        int i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15;
        byte[] $r2, $r3;
        byte $b6, $b10;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeComment()>();

     label01:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i3 < $i2 goto label02;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z1 == 0 goto label12;

     label02:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i5;

        $b6 = $r2[$i4];

        s0 = $b6 & 255;

        i1 = r1[s0];

        if i1 == 0 goto label11;

        lookupswitch(i1)
        {
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            case 10: goto label05;
            case 13: goto label06;
            case 42: goto label03;
            default: goto label10;
        };

     label03:
        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i8 < $i7 goto label04;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label04;

        goto label12;

     label04:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $b10 = $r3[$i9];

        if $b10 != 47 goto label11;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i12;

        return;

     label05:
        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow> = $i14;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i15;

        goto label11;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCR()>();

        goto label11;

     label07:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_2()>();

        goto label11;

     label08:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_3()>();

        goto label11;

     label09:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_4(int)>(s0);

        goto label11;

     label10:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidChar(int)>(s0);

     label11:
        goto label01;

     label12:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in a comment", null);

        return;
    }

    private final boolean _skipYAMLComment() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _features>;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_ALLOW_YAML_COMMENTS>;

        $i2 = $i1 & $i0;

        if $i2 != 0 goto label1;

        return 0;

     label1:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipLine()>();

        return 1;
    }

    private final void _skipLine() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int[] r1;
        short s0;
        int i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9;
        byte[] $r2;
        byte $b6;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeComment()>();

     label01:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i3 < $i2 goto label02;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 == 0 goto label11;

     label02:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i5;

        $b6 = $r2[$i4];

        s0 = $b6 & 255;

        i1 = r1[s0];

        if i1 == 0 goto label10;

        lookupswitch(i1)
        {
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 10: goto label03;
            case 13: goto label04;
            case 42: goto label05;
            default: goto label09;
        };

     label03:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow> = $i8;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i9;

        return;

     label04:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCR()>();

        return;

     label05:
        goto label10;

     label06:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_2()>();

        goto label10;

     label07:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_3()>();

        goto label10;

     label08:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_4(int)>(s0);

        goto label10;

     label09:
        if i1 >= 0 goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidChar(int)>(s0);

     label10:
        goto label01;

     label11:
        return;
    }

    protected char _decodeEscaped() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        byte b0, b1;
        int i2, $i3, $i4, $i6, $i7, $i8, $i11, $i14, $i15, i16, i17, $i18, $i19;
        char $c5, $c10, $c12, $c13;
        short $s9;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2;
        byte[] $r3, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i4 < $i3 goto label01;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z1 != 0 goto label01;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in character escape sequence", $r2);

     label01:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i15 = $i14 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i15;

        b0 = $r3[$i14];

        lookupswitch(b0)
        {
            case 34: goto label07;
            case 47: goto label07;
            case 92: goto label07;
            case 98: goto label02;
            case 102: goto label05;
            case 110: goto label04;
            case 114: goto label06;
            case 116: goto label03;
            case 117: goto label08;
            default: goto label09;
        };

     label02:
        return 8;

     label03:
        return 9;

     label04:
        return 10;

     label05:
        return 12;

     label06:
        return 13;

     label07:
        $c10 = (char) b0;

        return $c10;

     label08:
        goto label10;

     label09:
        $i11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeCharForError(int)>(b0);

        $c12 = (char) $i11;

        $c13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char _handleUnrecognizedCharacterEscape(char)>($c12);

        return $c13;

     label10:
        i16 = 0;

        i17 = 0;

     label11:
        if i17 >= 4 goto label14;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i7 < $i6 goto label12;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 != 0 goto label12;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(" in character escape sequence", $r1);

     label12:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i19 = $i18 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i19;

        b1 = $r5[$i18];

        i2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int charToHex(int)>(b1);

        if i2 >= 0 goto label13;

        $s9 = b1 & 255;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportUnexpectedChar(int,java.lang.String)>($s9, "expected a hex-digit for character escape sequence");

     label13:
        $i8 = i16 << 4;

        i16 = $i8 | i2;

        i17 = i17 + 1;

        goto label11;

     label14:
        $c5 = (char) i16;

        return $c5;
    }

    protected int _decodeCharForError(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i18, $i19, i20, i21;
        byte b17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        i16 = i0 & 255;

        if i16 <= 127 goto label8;

        $i1 = i16 & 224;

        if $i1 != 192 goto label1;

        i16 = i16 & 31;

        b17 = 1;

        goto label4;

     label1:
        $i2 = i16 & 240;

        if $i2 != 224 goto label2;

        i16 = i16 & 15;

        b17 = 2;

        goto label4;

     label2:
        $i3 = i16 & 248;

        if $i3 != 240 goto label3;

        i16 = i16 & 7;

        b17 = 3;

        goto label4;

     label3:
        $i4 = i16 & 255;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidInitial(int)>($i4);

        b17 = 1;

     label4:
        i18 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int nextByte()>();

        $i19 = i18 & 192;

        if $i19 == 128 goto label5;

        $i15 = i18 & 255;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int)>($i15);

     label5:
        $i6 = i16 << 6;

        $i5 = i18 & 63;

        i16 = $i6 | $i5;

        if b17 <= 1 goto label8;

        i20 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int nextByte()>();

        $i7 = i20 & 192;

        if $i7 == 128 goto label6;

        $i14 = i20 & 255;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int)>($i14);

     label6:
        $i9 = i16 << 6;

        $i8 = i20 & 63;

        i16 = $i9 | $i8;

        if b17 <= 2 goto label8;

        i21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int nextByte()>();

        $i10 = i21 & 192;

        if $i10 == 128 goto label7;

        $i13 = i21 & 255;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int)>($i13);

     label7:
        $i12 = i16 << 6;

        $i11 = i21 & 63;

        i16 = $i12 | $i11;

     label8:
        return i16;
    }

    private final int _decodeUtf8_2(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i2, $i3, $i4, $i5, $i7, $i9, $i10, $i11;
        byte b1, $b8;
        byte[] $r1;
        short $s6, $s12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i5;

        b1 = $r1[$i4];

        $s6 = b1 & 192;

        if $s6 == 128 goto label2;

        $s12 = b1 & 255;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s12, $i11);

     label2:
        $i7 = i0 & 31;

        $i9 = $i7 << 6;

        $b8 = b1 & 63;

        $i10 = $i9 | $b8;

        return $i10;
    }

    private final int _decodeUtf8_3(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i13, $i14, $i16, i18, i19, i21, i23;
        byte[] $r1, $r2;
        short $s4, $s11, $s15, $s17;
        byte $b5, $b12, b20, b22;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i18 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label1:
        i19 = i18 & 15;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i3;

        b20 = $r1[$i2];

        $s4 = b20 & 192;

        if $s4 == 128 goto label2;

        $s17 = b20 & 255;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s17, $i16);

     label2:
        $i6 = i19 << 6;

        $b5 = b20 & 63;

        i21 = $i6 | $b5;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i8 < $i7 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label3:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i10;

        b22 = $r2[$i9];

        $s11 = b22 & 192;

        if $s11 == 128 goto label4;

        $s15 = b22 & 255;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s15, $i14);

     label4:
        $i13 = i21 << 6;

        $b12 = b22 & 63;

        i23 = $i13 | $b12;

        return i23;
    }

    private final int _decodeUtf8_3fast(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int $i0, $i1, $i4, $i5, $i6, $i9, $i10, $i12, i14, i15, i17, i19;
        byte[] $r1, $r2;
        short $s2, $s7, $s11, $s13;
        byte $b3, $b8, b16, b18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i14 := @parameter0: int;

        i15 = i14 & 15;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i1 = $i0 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i1;

        b16 = $r1[$i0];

        $s2 = b16 & 192;

        if $s2 == 128 goto label1;

        $s13 = b16 & 255;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s13, $i12);

     label1:
        $i4 = i15 << 6;

        $b3 = b16 & 63;

        i17 = $i4 | $b3;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i6;

        b18 = $r2[$i5];

        $s7 = b18 & 192;

        if $s7 == 128 goto label2;

        $s11 = b18 & 255;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s11, $i10);

     label2:
        $i9 = i17 << 6;

        $b8 = b18 & 63;

        i19 = $i9 | $b8;

        return i19;
    }

    private final int _decodeUtf8_4(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i8, $i9, $i10, $i11, $i14, $i15, $i16, $i17, $i18, $i21, $i22, $i23, $i24, $i26, $i28, i30, i32, i34;
        byte[] $r1, $r2, $r3;
        short $s4, $s12, $s19, $s25, $s27, $s29;
        byte $b6, $b13, $b20, b31, b33, b35;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i30 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i3;

        b31 = $r1[$i2];

        $s4 = b31 & 192;

        if $s4 == 128 goto label2;

        $s29 = b31 & 255;

        $i28 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s29, $i28);

     label2:
        $i5 = i30 & 7;

        $i7 = $i5 << 6;

        $b6 = b31 & 63;

        i32 = $i7 | $b6;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i9 < $i8 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label3:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i11;

        b33 = $r2[$i10];

        $s12 = b33 & 192;

        if $s12 == 128 goto label4;

        $s27 = b33 & 255;

        $i26 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s27, $i26);

     label4:
        $i14 = i32 << 6;

        $b13 = b33 & 63;

        i34 = $i14 | $b13;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i16 < $i15 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label5:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i18 = $i17 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i18;

        b35 = $r3[$i17];

        $s19 = b35 & 192;

        if $s19 == 128 goto label6;

        $s25 = b35 & 255;

        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s25, $i24);

     label6:
        $i21 = i34 << 6;

        $b20 = b35 & 63;

        $i22 = $i21 | $b20;

        $i23 = $i22 - 65536;

        return $i23;
    }

    private final void _skipUtf8_2() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        byte b0;
        int $i1, $i2, $i3, $i4, $i6;
        byte[] $r1;
        short $s5, $s7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i4;

        b0 = $r1[$i3];

        $s5 = b0 & 192;

        if $s5 == 128 goto label2;

        $s7 = b0 & 255;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s7, $i6);

     label2:
        return;
    }

    private final void _skipUtf8_3() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i12;
        byte[] $r1, $r2;
        short $s4, $s9, $s11, $s13;
        byte b14, b15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i3;

        b14 = $r1[$i2];

        $s4 = b14 & 192;

        if $s4 == 128 goto label2;

        $s13 = b14 & 255;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s13, $i12);

     label2:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i6 < $i5 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label3:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i8;

        b15 = $r2[$i7];

        $s9 = b15 & 192;

        if $s9 == 128 goto label4;

        $s11 = b15 & 255;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s11, $i10);

     label4:
        return;
    }

    private final void _skipUtf8_4(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i18, $i20;
        byte[] $r1, $r2, $r3;
        short $s5, $s10, $s15, $s17, $s19, $s21;
        byte b22, b23, b24;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i4;

        b22 = $r1[$i3];

        $s5 = b22 & 192;

        if $s5 == 128 goto label2;

        $s21 = b22 & 255;

        $i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s21, $i20);

     label2:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i7 < $i6 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label3:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i9 = $i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i9;

        b23 = $r2[$i8];

        $s10 = b23 & 192;

        if $s10 == 128 goto label4;

        $s19 = b23 & 255;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s19, $i18);

     label4:
        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i12 < $i11 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label5:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i14;

        b24 = $r3[$i13];

        $s15 = b24 & 192;

        if $s15 == 128 goto label6;

        $s17 = b24 & 255;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>($s17, $i16);

     label6:
        return;
    }

    protected final void _skipCR() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8;
        byte[] $r1;
        byte $b3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label1;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z0 == 0 goto label2;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $b3 = $r1[$i2];

        if $b3 != 10 goto label2;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i5;

     label2:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow> = $i7;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart> = $i8;

        return;
    }

    private int nextByte() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;
        short $s5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i3;

        $b4 = $r1[$i2];

        $s5 = $b4 & 255;

        return $s5;
    }

    protected void _reportInvalidToken(java.lang.String, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.lang.String r1, $r2;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i0;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _validJsonTokenList()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidToken(java.lang.String,java.lang.String)>(r1, $r2);

        return;
    }

    protected void _reportInvalidToken(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _validJsonTokenList()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidToken(java.lang.String,java.lang.String)>(r1, $r2);

        return;
    }

    protected void _reportInvalidToken(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        java.lang.String r1, r2;
        byte b0;
        char c1;
        java.lang.StringBuilder $r4;
        int $i2, $i3, $i4, $i5, $i6, $i7;
        byte[] $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

     label1:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i3 < $i2 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _loadMore()>();

        if $z1 == 0 goto label5;

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i5;

        b0 = $r5[$i4];

        $i6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeCharForError(int)>(b0);

        c1 = (char) $i6;

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>(c1);

        if $z0 != 0 goto label3;

        goto label5;

     label3:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $i7 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();

        if $i7 < 256 goto label4;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        goto label5;

     label4:
        goto label1;

     label5:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportError(java.lang.String,java.lang.Object,java.lang.Object)>("Unrecognized token \'%s\': was expecting %s", $r4, r2);

        return;
    }

    protected void _reportInvalidChar(int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        if i0 >= 32 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _throwInvalidSpace(int)>(i0);

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidInitial(int)>(i0);

        return;
    }

    protected void _reportInvalidInitial(int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid UTF-8 start byte 0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportError(java.lang.String)>($r5);

        return;
    }

    protected void _reportInvalidOther(int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid UTF-8 middle byte 0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportError(java.lang.String)>($r5);

        return;
    }

    protected void _reportInvalidOther(int, int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = i1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int)>(i0);

        return;
    }

    protected final byte[] _decodeBase64(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r2;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i30, $i31, $i32, $i33, i35, i36, i38, i39, i41, i42, i44, i45, i47, i48, i49, i50;
        byte[] $r3, $r4, $r5, $r6, $r7, $r9, $r17, $r20;
        byte $b2, $b7, $b13, $b19, $b27;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        char $c29;
        java.lang.String $r14;
        java.lang.IllegalArgumentException $r15;
        short s34, s37, s40, s43, s46;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder()>();

     label01:
        $i32 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i32 < $i33 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label02:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i1 = $i0 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i1;

        $b2 = $r3[$i0];

        s34 = $b2 & 255;

        if s34 <= 32 goto label01;

        i35 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(int)>(s34);

        if i35 >= 0 goto label04;

        if s34 != 34 goto label03;

        $r20 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();

        return $r20;

     label03:
        i35 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int)>(r1, s34, 0);

        if i35 >= 0 goto label04;

        goto label01;

     label04:
        i36 = i35;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i4 < $i3 goto label05;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label05:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i6;

        $b7 = $r4[$i5];

        s37 = $b7 & 255;

        i38 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(int)>(s37);

        if i38 >= 0 goto label06;

        i38 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int)>(r1, s37, 1);

     label06:
        $i8 = i36 << 6;

        i39 = $i8 | i38;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i10 < $i9 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label07:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i12;

        $b13 = $r5[$i11];

        s40 = $b13 & 255;

        i41 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(int)>(s40);

        if i41 >= 0 goto label13;

        if i41 == -2 goto label10;

        if s40 != 34 goto label09;

        i42 = i39 >> 4;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(i42);

        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPadding()>();

        if $z2 == 0 goto label08;

        $i30 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i31 = $i30 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i31;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _handleBase64MissingPadding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

     label08:
        $r17 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();

        return $r17;

     label09:
        i41 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int)>(r1, s40, 2);

     label10:
        if i41 != -2 goto label13;

        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i24 < $i23 goto label11;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label11:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i26 = $i25 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i26;

        $b27 = $r9[$i25];

        s43 = $b27 & 255;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPaddingChar(int)>(s43);

        if $z1 != 0 goto label12;

        $i28 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int)>(r1, s43, 3);

        if $i28 == -2 goto label12;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected padding character \'");

        $c29 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: char getPaddingChar()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c29);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.IllegalArgumentException reportInvalidBase64Char(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)>(r1, s43, 3, $r14);

        throw $r15;

     label12:
        i44 = i39 >> 4;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(i44);

        goto label01;

     label13:
        $i14 = i39 << 6;

        i45 = $i14 | i41;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputEnd>;

        if $i16 < $i15 goto label14;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _loadMoreGuaranteed()>();

     label14:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] _inputBuffer>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i18 = $i17 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i18;

        $b19 = $r6[$i17];

        s46 = $b19 & 255;

        i47 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int decodeBase64Char(int)>(s46);

        if i47 >= 0 goto label18;

        if i47 == -2 goto label17;

        if s46 != 34 goto label16;

        i48 = i45 >> 2;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void appendTwoBytes(int)>(i48);

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: boolean usesPadding()>();

        if $z0 == 0 goto label15;

        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i22 = $i21 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr> = $i22;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _handleBase64MissingPadding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

     label15:
        $r7 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();

        return $r7;

     label16:
        i47 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeBase64Escape(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,int,int)>(r1, s46, 3);

     label17:
        if i47 != -2 goto label18;

        i49 = i45 >> 2;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void appendTwoBytes(int)>(i49);

        goto label01;

     label18:
        $i20 = i45 << 6;

        i50 = $i20 | i47;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void appendThreeBytes(int)>(i50);

        goto label01;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation getTokenLocation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        long l0, $l1, $l4, $l7, $l8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation $r3, $r5;
        java.lang.Object $r4, $r6;
        int $i2, $i3, $i5, $i6, $i9, $i10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r2 != $r1 goto label1;

        $l8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: long _currInputProcessed>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _nameStartOffset>;

        $i6 = $i5 - 1;

        $l7 = (long) $i6;

        l0 = $l8 + $l7;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.Object _getSourceReference()>();

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _nameStartRow>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _nameStartCol>;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation: void <init>(java.lang.Object,long,long,int,int)>($r6, l0, -1L, $i10, $i9);

        return $r5;

     label1:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.Object _getSourceReference()>();

        $l1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: long _tokenInputTotal>;

        $l4 = $l1 - 1L;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol>;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation: void <init>(java.lang.Object,long,long,int,int)>($r4, $l4, -1L, $i3, $i2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation getCurrentLocation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation $r1;
        java.lang.Object $r2;
        long $l5, $l6, $l8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart>;

        $i3 = $i2 - $i1;

        i0 = $i3 + 1;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.Object _getSourceReference()>();

        $l6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: long _currInputProcessed>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $l5 = (long) $i4;

        $l8 = $l6 + $l5;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation: void <init>(java.lang.Object,long,long,int,int)>($r2, $l8, -1L, $i7, i0);

        return $r1;
    }

    private final void _updateLocation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i1, $i5, $i6;
        long $l2, $l3, $l4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputRow> = $i1;

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        $l3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: long _currInputProcessed>;

        $l2 = (long) i0;

        $l4 = $l3 + $l2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: long _tokenInputTotal> = $l4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart>;

        $i6 = i0 - $i5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _tokenInputCol> = $i6;

        return;
    }

    private final void _updateNameLocation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRow>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _nameStartRow> = $i1;

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _nameStartOffset> = i0;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _currInputRowStart>;

        $i3 = i0 - $i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _nameStartCol> = $i3;

        return;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeScope(int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        i0 := @parameter0: int;

        if i0 != 125 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _closeObjectScope()>();

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r2;

        return $r2;

     label1:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _closeArrayScope()>();

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r1;

        return $r1;
    }

    private final void _closeArrayScope() throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateLocation()>();

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inArray()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportMismatchedEndMarker(int,char)>(93, 125);

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext clearAndGetParent()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r3;

        return;
    }

    private final void _closeObjectScope() throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _updateLocation()>();

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inObject()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportMismatchedEndMarker(int,char)>(125, 93);

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext clearAndGetParent()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext> = $r3;

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r8, $r9;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte BYTE_LF> = 10;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_TRAILING_COMMA>;

        $i0 = virtualinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_TRAILING_COMMA> = $i0;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS>;

        $i1 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_LEADING_ZEROS> = $i1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS>;

        $i2 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_NON_NUM_NUMBERS> = $i2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_MISSING_VALUES>;

        $i3 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_ALLOW_MISSING> = $i3;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_SINGLE_QUOTES>;

        $i4 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_ALLOW_SINGLE_QUOTES> = $i4;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES>;

        $i5 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_ALLOW_UNQUOTED_NAMES> = $i5;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_COMMENTS>;

        $i6 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_ALLOW_JAVA_COMMENTS> = $i6;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_YAML_COMMENTS>;

        $i7 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int FEAT_MASK_ALLOW_YAML_COMMENTS> = $i7;

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeUtf8()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icUTF8> = $r8;

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeLatin1()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] _icLatin1> = $r9;

        return;
    }
}
