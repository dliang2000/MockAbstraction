public class org.apache.flink.configuration.ExecutionOptions extends java.lang.Object
{
    public static final org.apache.flink.configuration.ConfigOption RUNTIME_MODE;
    public static final org.apache.flink.configuration.ConfigOption SNAPSHOT_COMPRESSION;
    public static final org.apache.flink.configuration.ConfigOption BUFFER_TIMEOUT;
    public static final org.apache.flink.configuration.ConfigOption SORT_INPUTS;
    public static final org.apache.flink.configuration.ConfigOption USE_BATCH_STATE_BACKEND;

    public void <init>()
    {
        org.apache.flink.configuration.ExecutionOptions r0;

        r0 := @this: org.apache.flink.configuration.ExecutionOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r0, $r5, $r10, $r23, $r28;
        org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder $r1, $r6, $r11, $r24, $r29;
        org.apache.flink.api.common.RuntimeExecutionMode $r2;
        org.apache.flink.configuration.ConfigOption $r3, $r4, $r8, $r9, $r13, $r22, $r26, $r27, $r31, $r34, $r39;
        java.lang.Boolean $r7, $r25, $r30;
        java.time.Duration $r12;
        org.apache.flink.configuration.description.Description$DescriptionBuilder $r14, $r15, $r20;
        org.apache.flink.configuration.description.InlineElement[] $r16;
        org.apache.flink.configuration.description.TextElement $r17, $r18, $r19;
        org.apache.flink.configuration.description.Description $r21;
        java.lang.StringBuilder $r32, $r33, $r36, $r37;
        java.lang.String $r35, $r38;

        $r0 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("execution.runtime-mode");

        $r1 = virtualinvoke $r0.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder enumType(java.lang.Class)>(class "Lorg/apache/flink/api/common/RuntimeExecutionMode;");

        $r2 = <org.apache.flink.api.common.RuntimeExecutionMode: org.apache.flink.api.common.RuntimeExecutionMode STREAMING>;

        $r3 = virtualinvoke $r1.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Runtime execution mode of DataStream programs. Among other things, this controls task scheduling, network shuffle behavior, and time semantics.");

        <org.apache.flink.configuration.ExecutionOptions: org.apache.flink.configuration.ConfigOption RUNTIME_MODE> = $r4;

        $r5 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("execution.checkpointing.snapshot-compression");

        $r6 = virtualinvoke $r5.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder booleanType()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r8 = virtualinvoke $r6.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Tells if we should use compression for the state snapshot data or not");

        <org.apache.flink.configuration.ExecutionOptions: org.apache.flink.configuration.ConfigOption SNAPSHOT_COMPRESSION> = $r9;

        $r10 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("execution.buffer-timeout");

        $r11 = virtualinvoke $r10.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder durationType()>();

        $r12 = staticinvoke <java.time.Duration: java.time.Duration ofMillis(long)>(100L);

        $r13 = virtualinvoke $r11.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r12);

        $r14 = staticinvoke <org.apache.flink.configuration.description.Description: org.apache.flink.configuration.description.Description$DescriptionBuilder builder()>();

        $r15 = virtualinvoke $r14.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder text(java.lang.String)>("The maximum time frequency (milliseconds) for the flushing of the output buffers. By default the output buffers flush frequently to provide low latency and to aid smooth developer experience. Setting the parameter can result in three logical modes:");

        $r16 = newarray (org.apache.flink.configuration.description.InlineElement)[3];

        $r17 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement text(java.lang.String)>("A positive value triggers flushing periodically by that interval");

        $r16[0] = $r17;

        $r18 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement text(java.lang.String)>("0 triggers flushing after every record thus minimizing latency");

        $r16[1] = $r18;

        $r19 = staticinvoke <org.apache.flink.configuration.description.TextElement: org.apache.flink.configuration.description.TextElement text(java.lang.String)>("-1 ms triggers flushing only when the output buffer is full thus maximizing throughput");

        $r16[2] = $r19;

        $r20 = virtualinvoke $r15.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description$DescriptionBuilder list(org.apache.flink.configuration.description.InlineElement[])>($r16);

        $r21 = virtualinvoke $r20.<org.apache.flink.configuration.description.Description$DescriptionBuilder: org.apache.flink.configuration.description.Description build()>();

        $r22 = virtualinvoke $r13.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(org.apache.flink.configuration.description.Description)>($r21);

        <org.apache.flink.configuration.ExecutionOptions: org.apache.flink.configuration.ConfigOption BUFFER_TIMEOUT> = $r22;

        $r23 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("execution.sorted-inputs.enabled");

        $r24 = virtualinvoke $r23.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder booleanType()>();

        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r26 = virtualinvoke $r24.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("A flag to enable or disable sorting inputs of keyed operators. NOTE: It takes effect only in the BATCH runtime mode.");

        <org.apache.flink.configuration.ExecutionOptions: org.apache.flink.configuration.ConfigOption SORT_INPUTS> = $r27;

        $r28 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("execution.batch-state-backend.enabled");

        $r29 = virtualinvoke $r28.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder booleanType()>();

        $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r31 = virtualinvoke $r29.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r30);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A flag to enable or disable batch runtime specific state backend and timer service for keyed operators. NOTE: It takes effect only in the BATCH runtime mode and requires sorted inputs");

        $r34 = <org.apache.flink.configuration.ExecutionOptions: org.apache.flink.configuration.ConfigOption SORT_INPUTS>;

        $r35 = virtualinvoke $r34.<org.apache.flink.configuration.ConfigOption: java.lang.String key()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be enabled.");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = virtualinvoke $r31.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>($r38);

        <org.apache.flink.configuration.ExecutionOptions: org.apache.flink.configuration.ConfigOption USE_BATCH_STATE_BACKEND> = $r39;

        return;
    }
}
