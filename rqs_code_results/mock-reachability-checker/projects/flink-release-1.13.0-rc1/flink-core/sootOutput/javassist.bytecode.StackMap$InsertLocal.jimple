class javassist.bytecode.StackMap$InsertLocal extends javassist.bytecode.StackMap$SimpleCopy
{
    private int varIndex;
    private int varTag;
    private int varData;

    void <init>(javassist.bytecode.StackMap, int, int, int)
    {
        javassist.bytecode.StackMap$InsertLocal r0;
        javassist.bytecode.StackMap r1;
        int i0, i1, i2;

        r0 := @this: javassist.bytecode.StackMap$InsertLocal;

        r1 := @parameter0: javassist.bytecode.StackMap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<javassist.bytecode.StackMap$SimpleCopy: void <init>(javassist.bytecode.StackMap)>(r1);

        r0.<javassist.bytecode.StackMap$InsertLocal: int varIndex> = i0;

        r0.<javassist.bytecode.StackMap$InsertLocal: int varTag> = i1;

        r0.<javassist.bytecode.StackMap$InsertLocal: int varData> = i2;

        return;
    }

    public int typeInfoArray(int, int, int, boolean)
    {
        javassist.bytecode.StackMap$InsertLocal r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        boolean z0;
        javassist.bytecode.StackMap$Writer $r1;

        r0 := @this: javassist.bytecode.StackMap$InsertLocal;

        i7 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $i3 = r0.<javassist.bytecode.StackMap$InsertLocal: int varIndex>;

        if i1 >= $i3 goto label2;

     label1:
        $i2 = specialinvoke r0.<javassist.bytecode.StackMap$SimpleCopy: int typeInfoArray(int,int,int,boolean)>(i7, i0, i1, z0);

        return $i2;

     label2:
        $r1 = r0.<javassist.bytecode.StackMap$InsertLocal: javassist.bytecode.StackMap$Writer writer>;

        $i4 = i1 + 1;

        virtualinvoke $r1.<javassist.bytecode.StackMap$Writer: void write16bit(int)>($i4);

        i8 = 0;

     label3:
        if i8 >= i1 goto label5;

        $i6 = r0.<javassist.bytecode.StackMap$InsertLocal: int varIndex>;

        if i8 != $i6 goto label4;

        specialinvoke r0.<javassist.bytecode.StackMap$InsertLocal: void writeVarTypeInfo()>();

     label4:
        i7 = virtualinvoke r0.<javassist.bytecode.StackMap$InsertLocal: int typeInfoArray2(int,int)>(i8, i7);

        i8 = i8 + 1;

        goto label3;

     label5:
        $i5 = r0.<javassist.bytecode.StackMap$InsertLocal: int varIndex>;

        if i1 != $i5 goto label6;

        specialinvoke r0.<javassist.bytecode.StackMap$InsertLocal: void writeVarTypeInfo()>();

     label6:
        return i7;
    }

    private void writeVarTypeInfo()
    {
        javassist.bytecode.StackMap$InsertLocal r0;
        int $i0, $i1, $i2, $i3, $i4;
        javassist.bytecode.StackMap$Writer $r1, $r2, $r3;

        r0 := @this: javassist.bytecode.StackMap$InsertLocal;

        $i0 = r0.<javassist.bytecode.StackMap$InsertLocal: int varTag>;

        if $i0 != 7 goto label1;

        $r3 = r0.<javassist.bytecode.StackMap$InsertLocal: javassist.bytecode.StackMap$Writer writer>;

        $i4 = r0.<javassist.bytecode.StackMap$InsertLocal: int varData>;

        virtualinvoke $r3.<javassist.bytecode.StackMap$Writer: void writeVerifyTypeInfo(int,int)>(7, $i4);

        goto label3;

     label1:
        $i1 = r0.<javassist.bytecode.StackMap$InsertLocal: int varTag>;

        if $i1 != 8 goto label2;

        $r2 = r0.<javassist.bytecode.StackMap$InsertLocal: javassist.bytecode.StackMap$Writer writer>;

        $i3 = r0.<javassist.bytecode.StackMap$InsertLocal: int varData>;

        virtualinvoke $r2.<javassist.bytecode.StackMap$Writer: void writeVerifyTypeInfo(int,int)>(8, $i3);

        goto label3;

     label2:
        $r1 = r0.<javassist.bytecode.StackMap$InsertLocal: javassist.bytecode.StackMap$Writer writer>;

        $i2 = r0.<javassist.bytecode.StackMap$InsertLocal: int varTag>;

        virtualinvoke $r1.<javassist.bytecode.StackMap$Writer: void writeVerifyTypeInfo(int,int)>($i2, 0);

     label3:
        return;
    }
}
