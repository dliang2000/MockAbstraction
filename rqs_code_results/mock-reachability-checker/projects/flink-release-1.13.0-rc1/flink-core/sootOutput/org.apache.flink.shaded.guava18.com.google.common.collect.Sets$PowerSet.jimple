final class org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet extends java.util.AbstractSet
{
    final org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap inputSet;

    void <init>(java.util.Set)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet r0;
        java.util.Set r1, $r6;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$Builder r2;
        java.util.Iterator r3;
        java.lang.Object r4, $r5;
        boolean $z0, $z1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap $r7, $r8, $r10;
        int $i0, $i1, $i2, i3;
        java.lang.Object[] $r9;
        java.lang.Integer $r11, $r12;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$Builder builder()>();

        i3 = 0;

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = (java.util.Set) $r5;

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $i2 = i3;

        i3 = i3 + 1;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$Builder: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r4, $r12);

        goto label1;

     label2:
        $r7 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap$Builder: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap build()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap inputSet> = $r7;

        $r8 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap inputSet>;

        $i0 = virtualinvoke $r8.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: int size()>();

        if $i0 > 30 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r9 = newarray (java.lang.Object)[1];

        $r10 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap inputSet>;

        $i1 = virtualinvoke $r10.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: int size()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r9[0] = $r11;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z1, "Too many elements to create power set: %s > 30", $r9);

        return;
    }

    public int size()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap $r1;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap inputSet>;

        $i0 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: int size()>();

        $i1 = 1 << $i0;

        return $i1;
    }

    public boolean isEmpty()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet;

        return 0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet$1 $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet$1;

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: int size()>();

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet$1: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet,int)>(r0, $i0);

        return $r1;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet r0;
        java.lang.Object r1;
        java.util.Set r2;
        boolean $z0, $z1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap $r3;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Set;

        if $z0 == 0 goto label1;

        r2 = (java.util.Set) r1;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap inputSet>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet keySet()>();

        $z1 = virtualinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet: boolean containsAll(java.util.Collection)>(r2);

        return $z1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap $r3, $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet;

        if $z0 == 0 goto label1;

        r2 = (org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet) r1;

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap inputSet>;

        $r3 = r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap inputSet>;

        $z2 = virtualinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: boolean equals(java.lang.Object)>($r3);

        return $z2;

     label1:
        $z1 = specialinvoke r0.<java.util.AbstractSet: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }

    public int hashCode()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap $r1, $r3;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap inputSet>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet keySet()>();

        $i0 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet: int hashCode()>();

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap inputSet>;

        $i1 = virtualinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap: int size()>();

        $i2 = $i1 - 1;

        $i3 = $i0 << $i2;

        return $i3;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet r0;
        java.lang.String r1, $r3, $r8;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap $r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMap inputSet>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r4 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = 10 + $i0;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("powerSet(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
