final class org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode extends org.apache.flink.shaded.guava18.com.google.common.hash.HashCode implements java.io.Serializable
{
    final int hash;
    private static final long serialVersionUID;

    void <init>(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode r0;
        int i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.hash.HashCode: void <init>()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode: int hash> = i0;

        return;
    }

    public int bits()
    {
        org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode;

        return 32;
    }

    public byte[] asBytes()
    {
        org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode r0;
        byte[] $r1;
        int $i0, $i2, $i3, $i5, $i6, $i8, $i9;
        byte $b1, $b4, $b7, $b10;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode;

        $r1 = newarray (byte)[4];

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode: int hash>;

        $b1 = (byte) $i0;

        $r1[0] = $b1;

        $i2 = r0.<org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode: int hash>;

        $i3 = $i2 >> 8;

        $b4 = (byte) $i3;

        $r1[1] = $b4;

        $i5 = r0.<org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode: int hash>;

        $i6 = $i5 >> 16;

        $b7 = (byte) $i6;

        $r1[2] = $b7;

        $i8 = r0.<org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode: int hash>;

        $i9 = $i8 >> 24;

        $b10 = (byte) $i9;

        $r1[3] = $b10;

        return $r1;
    }

    public int asInt()
    {
        org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode: int hash>;

        return $i0;
    }

    public long asLong()
    {
        org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("this HashCode only has 32 bits; cannot create a long");

        throw $r1;
    }

    public long padToLong()
    {
        org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode r0;
        int $i0;
        long $l1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode: int hash>;

        $l1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.primitives.UnsignedInts: long toLong(int)>($i0);

        return $l1;
    }

    void writeBytesToImpl(byte[], int, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4, $i6, i7;
        byte $b5;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i7 = 0;

     label1:
        if i7 >= i1 goto label2;

        $i6 = i0 + i7;

        $i3 = r0.<org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode: int hash>;

        $i2 = i7 * 8;

        $i4 = $i3 >> $i2;

        $b5 = (byte) $i4;

        r1[$i6] = $b5;

        i7 = i7 + 1;

        goto label1;

     label2:
        return;
    }

    boolean equalsSameBits(org.apache.flink.shaded.guava18.com.google.common.hash.HashCode)
    {
        org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode r0;
        org.apache.flink.shaded.guava18.com.google.common.hash.HashCode r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.hash.HashCode;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode: int hash>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.hash.HashCode: int asInt()>();

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.guava18.com.google.common.hash.HashCode$IntHashCode: long serialVersionUID> = 0L;

        return;
    }
}
