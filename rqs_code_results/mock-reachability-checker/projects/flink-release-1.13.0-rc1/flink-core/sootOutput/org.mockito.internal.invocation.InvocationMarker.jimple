public class org.mockito.internal.invocation.InvocationMarker extends java.lang.Object
{

    private void <init>()
    {
        org.mockito.internal.invocation.InvocationMarker r0;

        r0 := @this: org.mockito.internal.invocation.InvocationMarker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void markVerified(java.util.List, org.mockito.invocation.MatchableInvocation)
    {
        java.util.List r0;
        org.mockito.invocation.MatchableInvocation r1;
        java.util.Iterator r2;
        org.mockito.invocation.Invocation r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: org.mockito.invocation.MatchableInvocation;

        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.mockito.invocation.Invocation) $r4;

        staticinvoke <org.mockito.internal.invocation.InvocationMarker: void markVerified(org.mockito.invocation.Invocation,org.mockito.invocation.MatchableInvocation)>(r3, r1);

        goto label1;

     label2:
        return;
    }

    public static void markVerified(org.mockito.invocation.Invocation, org.mockito.invocation.MatchableInvocation)
    {
        org.mockito.invocation.Invocation r0;
        org.mockito.invocation.MatchableInvocation r1;

        r0 := @parameter0: org.mockito.invocation.Invocation;

        r1 := @parameter1: org.mockito.invocation.MatchableInvocation;

        interfaceinvoke r0.<org.mockito.invocation.Invocation: void markVerified()>();

        interfaceinvoke r1.<org.mockito.invocation.MatchableInvocation: void captureArgumentsFrom(org.mockito.invocation.Invocation)>(r0);

        return;
    }

    public static void markVerifiedInOrder(java.util.List, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)
    {
        java.util.List r0;
        org.mockito.invocation.MatchableInvocation r1;
        org.mockito.internal.verification.api.InOrderContext r2;
        java.util.Iterator r3;
        org.mockito.invocation.Invocation r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: org.mockito.invocation.MatchableInvocation;

        r2 := @parameter2: org.mockito.internal.verification.api.InOrderContext;

        staticinvoke <org.mockito.internal.invocation.InvocationMarker: void markVerified(java.util.List,org.mockito.invocation.MatchableInvocation)>(r0, r1);

        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.mockito.invocation.Invocation) $r5;

        interfaceinvoke r2.<org.mockito.internal.verification.api.InOrderContext: void markVerified(org.mockito.invocation.Invocation)>(r4);

        goto label1;

     label2:
        return;
    }
}
