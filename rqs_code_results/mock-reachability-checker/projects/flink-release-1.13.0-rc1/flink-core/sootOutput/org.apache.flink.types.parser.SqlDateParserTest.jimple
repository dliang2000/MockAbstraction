public class org.apache.flink.types.parser.SqlDateParserTest extends org.apache.flink.types.parser.ParserTestBase
{

    public void <init>()
    {
        org.apache.flink.types.parser.SqlDateParserTest r0;

        r0 := @this: org.apache.flink.types.parser.SqlDateParserTest;

        specialinvoke r0.<org.apache.flink.types.parser.ParserTestBase: void <init>()>();

        return;
    }

    public java.lang.String[] getValidTestValues()
    {
        org.apache.flink.types.parser.SqlDateParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.SqlDateParserTest;

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "1970-01-01";

        $r1[1] = "1990-10-14";

        $r1[2] = "2013-08-12";

        $r1[3] = "2040-05-12";

        $r1[4] = "2040-5-12";

        $r1[5] = "1970-1-1";

        return $r1;
    }

    public java.sql.Date[] getValidTestResults()
    {
        org.apache.flink.types.parser.SqlDateParserTest r0;
        java.sql.Date[] $r1;
        java.sql.Date $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.flink.types.parser.SqlDateParserTest;

        $r1 = newarray (java.sql.Date)[6];

        $r2 = staticinvoke <java.sql.Date: java.sql.Date valueOf(java.lang.String)>("1970-01-01");

        $r1[0] = $r2;

        $r3 = staticinvoke <java.sql.Date: java.sql.Date valueOf(java.lang.String)>("1990-10-14");

        $r1[1] = $r3;

        $r4 = staticinvoke <java.sql.Date: java.sql.Date valueOf(java.lang.String)>("2013-08-12");

        $r1[2] = $r4;

        $r5 = staticinvoke <java.sql.Date: java.sql.Date valueOf(java.lang.String)>("2040-05-12");

        $r1[3] = $r5;

        $r6 = staticinvoke <java.sql.Date: java.sql.Date valueOf(java.lang.String)>("2040-05-12");

        $r1[4] = $r6;

        $r7 = staticinvoke <java.sql.Date: java.sql.Date valueOf(java.lang.String)>("1970-01-01");

        $r1[5] = $r7;

        return $r1;
    }

    public java.lang.String[] getInvalidTestValues()
    {
        org.apache.flink.types.parser.SqlDateParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.SqlDateParserTest;

        $r1 = newarray (java.lang.String)[9];

        $r1[0] = " 2013-08-12";

        $r1[1] = "2013-08-12 ";

        $r1[2] = "2013-08--12";

        $r1[3] = "13-08-12";

        $r1[4] = "2013/08/12";

        $r1[5] = " ";

        $r1[6] = "\t";

        $r1[7] = "2013-XX-XX";

        $r1[8] = "2000-02-35";

        return $r1;
    }

    public boolean allowsEmptyField()
    {
        org.apache.flink.types.parser.SqlDateParserTest r0;

        r0 := @this: org.apache.flink.types.parser.SqlDateParserTest;

        return 0;
    }

    public org.apache.flink.types.parser.FieldParser getParser()
    {
        org.apache.flink.types.parser.SqlDateParserTest r0;
        org.apache.flink.types.parser.SqlDateParser $r1;

        r0 := @this: org.apache.flink.types.parser.SqlDateParserTest;

        $r1 = new org.apache.flink.types.parser.SqlDateParser;

        specialinvoke $r1.<org.apache.flink.types.parser.SqlDateParser: void <init>()>();

        return $r1;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.types.parser.SqlDateParserTest r0;

        r0 := @this: org.apache.flink.types.parser.SqlDateParserTest;

        return class "Ljava/sql/Date;";
    }

    public volatile java.lang.Object[] getValidTestResults()
    {
        org.apache.flink.types.parser.SqlDateParserTest r0;
        java.sql.Date[] $r1;

        r0 := @this: org.apache.flink.types.parser.SqlDateParserTest;

        $r1 = virtualinvoke r0.<org.apache.flink.types.parser.SqlDateParserTest: java.sql.Date[] getValidTestResults()>();

        return $r1;
    }
}
