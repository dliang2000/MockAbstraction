public class javassist.bytecode.analysis.Subroutine extends java.lang.Object
{
    private java.util.List callers;
    private java.util.Set access;
    private int start;

    public void <init>(int, int)
    {
        javassist.bytecode.analysis.Subroutine r0;
        int i0, i1;
        java.util.ArrayList $r1;
        java.util.HashSet $r2;
        java.util.List $r3;
        java.lang.Integer $r4;

        r0 := @this: javassist.bytecode.analysis.Subroutine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<javassist.bytecode.analysis.Subroutine: java.util.List callers> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<javassist.bytecode.analysis.Subroutine: java.util.Set access> = $r2;

        r0.<javassist.bytecode.analysis.Subroutine: int start> = i0;

        $r3 = r0.<javassist.bytecode.analysis.Subroutine: java.util.List callers>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void addCaller(int)
    {
        javassist.bytecode.analysis.Subroutine r0;
        int i0;
        java.util.List $r1;
        java.lang.Integer $r2;

        r0 := @this: javassist.bytecode.analysis.Subroutine;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.analysis.Subroutine: java.util.List callers>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    public int start()
    {
        javassist.bytecode.analysis.Subroutine r0;
        int $i0;

        r0 := @this: javassist.bytecode.analysis.Subroutine;

        $i0 = r0.<javassist.bytecode.analysis.Subroutine: int start>;

        return $i0;
    }

    public void access(int)
    {
        javassist.bytecode.analysis.Subroutine r0;
        int i0;
        java.util.Set $r1;
        java.lang.Integer $r2;

        r0 := @this: javassist.bytecode.analysis.Subroutine;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.analysis.Subroutine: java.util.Set access>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;
    }

    public boolean isAccessed(int)
    {
        javassist.bytecode.analysis.Subroutine r0;
        int i0;
        java.util.Set $r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @this: javassist.bytecode.analysis.Subroutine;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.analysis.Subroutine: java.util.Set access>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    public java.util.Collection accessed()
    {
        javassist.bytecode.analysis.Subroutine r0;
        java.util.Set $r1;

        r0 := @this: javassist.bytecode.analysis.Subroutine;

        $r1 = r0.<javassist.bytecode.analysis.Subroutine: java.util.Set access>;

        return $r1;
    }

    public java.util.Collection callers()
    {
        javassist.bytecode.analysis.Subroutine r0;
        java.util.List $r1;

        r0 := @this: javassist.bytecode.analysis.Subroutine;

        $r1 = r0.<javassist.bytecode.analysis.Subroutine: java.util.List callers>;

        return $r1;
    }

    public java.lang.String toString()
    {
        javassist.bytecode.analysis.Subroutine r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r7;
        int $i0;
        java.util.List $r5;
        java.lang.String $r6, $r8;

        r0 := @this: javassist.bytecode.analysis.Subroutine;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start = ");

        $i0 = r0.<javassist.bytecode.analysis.Subroutine: int start>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callers = ");

        $r5 = r0.<javassist.bytecode.analysis.Subroutine: java.util.List callers>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
