final class org.apache.flink.util.IterableUtils$1 extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator groupIterator;
    private java.util.Iterator itemIterator;
    final java.lang.Iterable val$itemGroups;
    final java.util.function.Function val$mapper;

    void <init>(java.lang.Iterable, java.util.function.Function)
    {
        org.apache.flink.util.IterableUtils$1 r0;
        java.lang.Iterable r1, $r3;
        java.util.function.Function r2;
        java.util.Iterator $r4;

        r0 := @this: org.apache.flink.util.IterableUtils$1;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.util.function.Function;

        r0.<org.apache.flink.util.IterableUtils$1: java.lang.Iterable val$itemGroups> = r1;

        r0.<org.apache.flink.util.IterableUtils$1: java.util.function.Function val$mapper> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r0.<org.apache.flink.util.IterableUtils$1: java.lang.Iterable val$itemGroups>;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        r0.<org.apache.flink.util.IterableUtils$1: java.util.Iterator groupIterator> = $r4;

        return;
    }

    public boolean hasNext()
    {
        org.apache.flink.util.IterableUtils$1 r0;
        java.util.Iterator $r1, $r2, $r3, $r6, $r7;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Iterable $r5;

        r0 := @this: org.apache.flink.util.IterableUtils$1;

     label1:
        $r1 = r0.<org.apache.flink.util.IterableUtils$1: java.util.Iterator itemIterator>;

        if $r1 == null goto label2;

        $r7 = r0.<org.apache.flink.util.IterableUtils$1: java.util.Iterator itemIterator>;

        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label4;

     label2:
        $r2 = r0.<org.apache.flink.util.IterableUtils$1: java.util.Iterator groupIterator>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r3 = r0.<org.apache.flink.util.IterableUtils$1: java.util.Iterator groupIterator>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Iterable) $r4;

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

        r0.<org.apache.flink.util.IterableUtils$1: java.util.Iterator itemIterator> = $r6;

        goto label1;

     label4:
        return 1;
    }

    public java.lang.Object next()
    {
        org.apache.flink.util.IterableUtils$1 r0;
        boolean $z0;
        java.util.NoSuchElementException $r1;
        java.util.Iterator $r2;
        java.util.function.Function $r3;
        java.lang.Object $r4, $r5;

        r0 := @this: org.apache.flink.util.IterableUtils$1;

        $z0 = virtualinvoke r0.<org.apache.flink.util.IterableUtils$1: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.flink.util.IterableUtils$1: java.util.function.Function val$mapper>;

        $r2 = r0.<org.apache.flink.util.IterableUtils$1: java.util.Iterator itemIterator>;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r3.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r4);

        return $r5;

     label1:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }
}
