final class org.joda.time.chrono.GJChronology$ImpreciseCutoverField extends org.joda.time.chrono.GJChronology$CutoverField
{
    private static final long serialVersionUID;
    final org.joda.time.chrono.GJChronology this$0;

    void <init>(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        org.joda.time.chrono.GJChronology r1;
        org.joda.time.DateTimeField r2, r3;
        long l0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        r1 := @parameter0: org.joda.time.chrono.GJChronology;

        r2 := @parameter1: org.joda.time.DateTimeField;

        r3 := @parameter2: org.joda.time.DateTimeField;

        l0 := @parameter3: long;

        specialinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: void <init>(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)>(r1, r2, r3, null, l0, 0);

        return;
    }

    void <init>(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        org.joda.time.chrono.GJChronology r1;
        org.joda.time.DateTimeField r2, r3;
        org.joda.time.DurationField r4;
        long l0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        r1 := @parameter0: org.joda.time.chrono.GJChronology;

        r2 := @parameter1: org.joda.time.DateTimeField;

        r3 := @parameter2: org.joda.time.DateTimeField;

        r4 := @parameter3: org.joda.time.DurationField;

        l0 := @parameter4: long;

        specialinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: void <init>(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)>(r1, r2, r3, r4, l0, 0);

        return;
    }

    void <init>(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, org.joda.time.DurationField, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        org.joda.time.chrono.GJChronology r1;
        org.joda.time.DateTimeField r2, r3;
        org.joda.time.DurationField r4, r5;
        long l0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        r1 := @parameter0: org.joda.time.chrono.GJChronology;

        r2 := @parameter1: org.joda.time.DateTimeField;

        r3 := @parameter2: org.joda.time.DateTimeField;

        r4 := @parameter3: org.joda.time.DurationField;

        r5 := @parameter4: org.joda.time.DurationField;

        l0 := @parameter5: long;

        specialinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: void <init>(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)>(r1, r2, r3, r4, l0, 0);

        r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DurationField iRangeDurationField> = r5;

        return;
    }

    void <init>(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, long, boolean)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        org.joda.time.chrono.GJChronology r1;
        org.joda.time.DateTimeField r2, r3;
        long l0;
        boolean z0;
        org.joda.time.chrono.GJChronology$LinkedDurationField $r4;
        org.joda.time.DurationField $r5, r6;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        r1 := @parameter0: org.joda.time.chrono.GJChronology;

        r2 := @parameter1: org.joda.time.DateTimeField;

        r3 := @parameter2: org.joda.time.DateTimeField;

        r6 := @parameter3: org.joda.time.DurationField;

        l0 := @parameter4: long;

        z0 := @parameter5: boolean;

        r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0> = r1;

        specialinvoke r0.<org.joda.time.chrono.GJChronology$CutoverField: void <init>(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,long,boolean)>(r1, r2, r3, l0, z0);

        if r6 != null goto label1;

        $r4 = new org.joda.time.chrono.GJChronology$LinkedDurationField;

        $r5 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DurationField iDurationField>;

        specialinvoke $r4.<org.joda.time.chrono.GJChronology$LinkedDurationField: void <init>(org.joda.time.DurationField,org.joda.time.chrono.GJChronology$ImpreciseCutoverField)>($r5, r0);

        r6 = $r4;

     label1:
        r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DurationField iDurationField> = r6;

        return;
    }

    public long add(long, int)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        int i0, i17, i18;
        long $l1, $l3, $l5, $l6, $l7, $l9, $l11, $l12, $l13, l15, l16;
        byte $b2, $b4, $b8, $b10, $b14;
        org.joda.time.DateTimeField $r1, $r3, $r7, $r10, $r13, $r16;
        org.joda.time.chrono.GJChronology $r2, $r4, $r5, $r8, $r11, $r14;
        boolean $z0;
        org.joda.time.chrono.GregorianChronology $r6, $r9, $r12, $r15;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l15 := @parameter0: long;

        i0 := @parameter1: int;

        $l1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b2 = l15 cmp $l1;

        if $b2 < 0 goto label4;

        $r3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        l16 = virtualinvoke $r3.<org.joda.time.DateTimeField: long add(long,int)>(l15, i0);

        $l9 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b10 = l16 cmp $l9;

        if $b10 >= 0 goto label5;

        $r4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l11 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r4);

        $l13 = l16 + $l11;

        $l12 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b14 = $l13 cmp $l12;

        if $b14 >= 0 goto label5;

        $z0 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: boolean iConvertByWeekyear>;

        if $z0 == 0 goto label2;

        $r11 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r12 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r11);

        $r13 = virtualinvoke $r12.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField weekyear()>();

        i17 = virtualinvoke $r13.<org.joda.time.DateTimeField: int get(long)>(l16);

        if i17 > 0 goto label1;

        $r14 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r15 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r14);

        $r16 = virtualinvoke $r15.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField weekyear()>();

        l16 = virtualinvoke $r16.<org.joda.time.DateTimeField: long add(long,int)>(l16, -1);

     label1:
        goto label3;

     label2:
        $r5 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r6 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField year()>();

        i18 = virtualinvoke $r7.<org.joda.time.DateTimeField: int get(long)>(l16);

        if i18 > 0 goto label3;

        $r8 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r9 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r8);

        $r10 = virtualinvoke $r9.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField year()>();

        l16 = virtualinvoke $r10.<org.joda.time.DateTimeField: long add(long,int)>(l16, -1);

     label3:
        l16 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>(l16);

        goto label5;

     label4:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        l16 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,int)>(l15, i0);

        $l3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b4 = l16 cmp $l3;

        if $b4 < 0 goto label5;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l5 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r2);

        $l7 = l16 - $l5;

        $l6 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b8 = $l7 cmp $l6;

        if $b8 < 0 goto label5;

        l16 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>(l16);

     label5:
        return l16;
    }

    public long add(long, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        long l0, $l1, $l3, $l5, $l6, $l7, $l9, $l11, $l12, $l13, l15, l16;
        byte $b2, $b4, $b8, $b10, $b14;
        org.joda.time.DateTimeField $r1, $r3, $r7, $r10, $r13, $r16;
        org.joda.time.chrono.GJChronology $r2, $r4, $r5, $r8, $r11, $r14;
        boolean $z0;
        org.joda.time.chrono.GregorianChronology $r6, $r9, $r12, $r15;
        int i17, i18;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l15 := @parameter0: long;

        l0 := @parameter1: long;

        $l1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b2 = l15 cmp $l1;

        if $b2 < 0 goto label4;

        $r3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        l16 = virtualinvoke $r3.<org.joda.time.DateTimeField: long add(long,long)>(l15, l0);

        $l9 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b10 = l16 cmp $l9;

        if $b10 >= 0 goto label5;

        $r4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l11 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r4);

        $l13 = l16 + $l11;

        $l12 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b14 = $l13 cmp $l12;

        if $b14 >= 0 goto label5;

        $z0 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: boolean iConvertByWeekyear>;

        if $z0 == 0 goto label2;

        $r11 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r12 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r11);

        $r13 = virtualinvoke $r12.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField weekyear()>();

        i17 = virtualinvoke $r13.<org.joda.time.DateTimeField: int get(long)>(l16);

        if i17 > 0 goto label1;

        $r14 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r15 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r14);

        $r16 = virtualinvoke $r15.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField weekyear()>();

        l16 = virtualinvoke $r16.<org.joda.time.DateTimeField: long add(long,int)>(l16, -1);

     label1:
        goto label3;

     label2:
        $r5 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r6 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField year()>();

        i18 = virtualinvoke $r7.<org.joda.time.DateTimeField: int get(long)>(l16);

        if i18 > 0 goto label3;

        $r8 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r9 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r8);

        $r10 = virtualinvoke $r9.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField year()>();

        l16 = virtualinvoke $r10.<org.joda.time.DateTimeField: long add(long,int)>(l16, -1);

     label3:
        l16 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>(l16);

        goto label5;

     label4:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        l16 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,long)>(l15, l0);

        $l3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b4 = l16 cmp $l3;

        if $b4 < 0 goto label5;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l5 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r2);

        $l7 = l16 - $l5;

        $l6 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b8 = $l7 cmp $l6;

        if $b8 < 0 goto label5;

        l16 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>(l16);

     label5:
        return l16;
    }

    public int getDifference(long, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        long l0, $l1, $l3, $l7, l11, l12, l13;
        byte $b2, $b4, $b8;
        org.joda.time.DateTimeField $r1, $r2, $r3, $r4;
        int $i5, $i6, $i9, $i10;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l11 := @parameter0: long;

        l0 := @parameter1: long;

        $l1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b2 = l11 cmp $l1;

        if $b2 < 0 goto label2;

        $l7 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b8 = l0 cmp $l7;

        if $b8 < 0 goto label1;

        $r4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i10 = virtualinvoke $r4.<org.joda.time.DateTimeField: int getDifference(long,long)>(l11, l0);

        return $i10;

     label1:
        l12 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>(l11);

        $r3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i9 = virtualinvoke $r3.<org.joda.time.DateTimeField: int getDifference(long,long)>(l12, l0);

        return $i9;

     label2:
        $l3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b4 = l0 cmp $l3;

        if $b4 >= 0 goto label3;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i6 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getDifference(long,long)>(l11, l0);

        return $i6;

     label3:
        l13 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>(l11);

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i5 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getDifference(long,long)>(l13, l0);

        return $i5;
    }

    public long getDifferenceAsLong(long, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        long l0, $l1, $l3, $l5, $l6, $l7, $l9, $l10, l11, l12, l13;
        byte $b2, $b4, $b8;
        org.joda.time.DateTimeField $r1, $r2, $r3, $r4;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l11 := @parameter0: long;

        l0 := @parameter1: long;

        $l1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b2 = l11 cmp $l1;

        if $b2 < 0 goto label2;

        $l7 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b8 = l0 cmp $l7;

        if $b8 < 0 goto label1;

        $r4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $l10 = virtualinvoke $r4.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>(l11, l0);

        return $l10;

     label1:
        l12 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>(l11);

        $r3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $l9 = virtualinvoke $r3.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>(l12, l0);

        return $l9;

     label2:
        $l3 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b4 = l0 cmp $l3;

        if $b4 >= 0 goto label3;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $l6 = virtualinvoke $r2.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>(l11, l0);

        return $l6;

     label3:
        l13 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>(l11);

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $l5 = virtualinvoke $r1.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>(l13, l0);

        return $l5;
    }

    public int getMinimumValue(long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        long l0, $l1;
        byte $b2;
        org.joda.time.DateTimeField $r1, $r2;
        int $i3, $i4;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l0 := @parameter0: long;

        $l1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b2 = l0 cmp $l1;

        if $b2 < 0 goto label1;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i4 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getMinimumValue(long)>(l0);

        return $i4;

     label1:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i3 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getMinimumValue(long)>(l0);

        return $i3;
    }

    public int getMaximumValue(long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        long l0, $l1;
        byte $b2;
        org.joda.time.DateTimeField $r1, $r2;
        int $i3, $i4;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        l0 := @parameter0: long;

        $l1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b2 = l0 cmp $l1;

        if $b2 < 0 goto label1;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i4 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getMaximumValue(long)>(l0);

        return $i4;

     label1:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i3 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getMaximumValue(long)>(l0);

        return $i3;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long serialVersionUID> = 3410248757173576441L;

        return;
    }
}
