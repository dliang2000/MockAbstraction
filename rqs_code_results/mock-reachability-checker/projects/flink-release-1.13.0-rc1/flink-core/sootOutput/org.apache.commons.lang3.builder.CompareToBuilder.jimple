public class org.apache.commons.lang3.builder.CompareToBuilder extends java.lang.Object implements org.apache.commons.lang3.builder.Builder
{
    private int comparison;

    public void <init>()
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 0;

        return;
    }

    public static int reflectionCompare(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        java.lang.String[] $r2;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = newarray (java.lang.String)[0];

        $i0 = staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])>(r0, r1, 0, null, $r2);

        return $i0;
    }

    public static int reflectionCompare(java.lang.Object, java.lang.Object, boolean)
    {
        java.lang.Object r0, r1;
        boolean z0;
        java.lang.String[] $r2;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        $r2 = newarray (java.lang.String)[0];

        $i0 = staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])>(r0, r1, z0, null, $r2);

        return $i0;
    }

    public static int reflectionCompare(java.lang.Object, java.lang.Object, java.util.Collection)
    {
        java.lang.Object r0, r1;
        java.util.Collection r2;
        java.lang.String[] $r3;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.util.Collection;

        $r3 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.util.Collection)>(r2);

        $i0 = staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: int reflectionCompare(java.lang.Object,java.lang.Object,java.lang.String[])>(r0, r1, $r3);

        return $i0;
    }

    public static transient int reflectionCompare(java.lang.Object, java.lang.Object, java.lang.String[])
    {
        java.lang.Object r0, r1;
        java.lang.String[] r2;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String[];

        $i0 = staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])>(r0, r1, 0, null, r2);

        return $i0;
    }

    public static transient int reflectionCompare(java.lang.Object, java.lang.Object, boolean, java.lang.Class, java.lang.String[])
    {
        java.lang.Object r0, r1;
        boolean z0, $z1;
        java.lang.Class r2, $r7, r9;
        java.lang.String[] r3;
        java.lang.NullPointerException $r5;
        org.apache.commons.lang3.builder.CompareToBuilder $r6;
        int $i0;
        java.lang.ClassCastException $r8;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.Class;

        r3 := @parameter4: java.lang.String[];

        if r0 != r1 goto label1;

        return 0;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label3:
        r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r9.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z1 != 0 goto label4;

        $r8 = new java.lang.ClassCastException;

        specialinvoke $r8.<java.lang.ClassCastException: void <init>()>();

        throw $r8;

     label4:
        $r6 = new org.apache.commons.lang3.builder.CompareToBuilder;

        specialinvoke $r6.<org.apache.commons.lang3.builder.CompareToBuilder: void <init>()>();

        staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])>(r0, r1, r9, $r6, z0, r3);

     label5:
        $r7 = virtualinvoke r9.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r7 == null goto label6;

        if r9 == r2 goto label6;

        r9 = virtualinvoke r9.<java.lang.Class: java.lang.Class getSuperclass()>();

        staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])>(r0, r1, r9, $r6, z0, r3);

        goto label5;

     label6:
        $i0 = virtualinvoke $r6.<org.apache.commons.lang3.builder.CompareToBuilder: int toComparison()>();

        return $i0;
    }

    private static void reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class, org.apache.commons.lang3.builder.CompareToBuilder, boolean, java.lang.String[])
    {
        java.lang.Object r0, r1, $r10, $r11;
        java.lang.Class r2;
        org.apache.commons.lang3.builder.CompareToBuilder r3;
        boolean z0, $z1, $z2, $z3;
        java.lang.String[] r4;
        java.lang.reflect.Field[] r5;
        java.lang.reflect.Field r6;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r8, $r9;
        java.lang.IllegalAccessException $r13;
        java.lang.InternalError $r14;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Class;

        r3 := @parameter3: org.apache.commons.lang3.builder.CompareToBuilder;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String[];

        r5 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        staticinvoke <java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>(r5, 1);

        i5 = 0;

     label1:
        $i0 = lengthof r5;

        if i5 >= $i0 goto label7;

        $i1 = r3.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i1 != 0 goto label7;

        r6 = r5[i5];

        $r8 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.String getName()>();

        $z1 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r4, $r8);

        if $z1 != 0 goto label6;

        $r9 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.String getName()>();

        $i2 = virtualinvoke $r9.<java.lang.String: int indexOf(int)>(36);

        if $i2 != -1 goto label6;

        if z0 != 0 goto label2;

        $i4 = virtualinvoke r6.<java.lang.reflect.Field: int getModifiers()>();

        $z3 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>($i4);

        if $z3 != 0 goto label6;

     label2:
        $i3 = virtualinvoke r6.<java.lang.reflect.Field: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i3);

        if $z2 != 0 goto label6;

     label3:
        $r10 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r11 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        virtualinvoke r3.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object)>($r10, $r11);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r14 = new java.lang.InternalError;

        specialinvoke $r14.<java.lang.InternalError: void <init>(java.lang.String)>("Unexpected IllegalAccessException");

        throw $r14;

     label6:
        i5 = i5 + 1;

        goto label1;

     label7:
        return;

        catch java.lang.IllegalAccessException from label3 to label4 with label5;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder appendSuper(int)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        int i0, $i1;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i1 == 0 goto label1;

        return r0;

     label1:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = i0;

        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0, $r3;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object,java.util.Comparator)>(r1, r2, null);

        return $r3;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object, java.lang.Object, java.util.Comparator)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        java.lang.Object r1, r2;
        java.util.Comparator r3;
        int $i0, $i1, $i2;
        java.lang.Class $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Object[] $r5, $r6, $r7, $r8;
        boolean[] $r10, $r11, $r12, $r13;
        float[] $r15, $r16, $r17, $r18;
        double[] $r20, $r21, $r22, $r23;
        byte[] $r25, $r26, $r27, $r28;
        char[] $r30, $r31, $r32, $r33;
        short[] $r35, $r36, $r37, $r38;
        int[] $r40, $r41, $r42, $r43;
        long[] $r45, $r46, $r47, $r48;
        java.lang.Comparable r50;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Comparator;

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label01;

        return r0;

     label01:
        if r1 != r2 goto label02;

        return r0;

     label02:
        if r1 != null goto label03;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = -1;

        return r0;

     label03:
        if r2 != null goto label04;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;

        return r0;

     label04:
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label13;

        $z1 = r1 instanceof long[];

        if $z1 == 0 goto label05;

        $r45 = (long[]) r1;

        $r48 = (long[]) $r45;

        $r46 = (long[]) r2;

        $r47 = (long[]) $r46;

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(long[],long[])>($r48, $r47);

        goto label15;

     label05:
        $z2 = r1 instanceof int[];

        if $z2 == 0 goto label06;

        $r40 = (int[]) r1;

        $r43 = (int[]) $r40;

        $r41 = (int[]) r2;

        $r42 = (int[]) $r41;

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(int[],int[])>($r43, $r42);

        goto label15;

     label06:
        $z3 = r1 instanceof short[];

        if $z3 == 0 goto label07;

        $r35 = (short[]) r1;

        $r38 = (short[]) $r35;

        $r36 = (short[]) r2;

        $r37 = (short[]) $r36;

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(short[],short[])>($r38, $r37);

        goto label15;

     label07:
        $z4 = r1 instanceof char[];

        if $z4 == 0 goto label08;

        $r30 = (char[]) r1;

        $r33 = (char[]) $r30;

        $r31 = (char[]) r2;

        $r32 = (char[]) $r31;

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(char[],char[])>($r33, $r32);

        goto label15;

     label08:
        $z5 = r1 instanceof byte[];

        if $z5 == 0 goto label09;

        $r25 = (byte[]) r1;

        $r28 = (byte[]) $r25;

        $r26 = (byte[]) r2;

        $r27 = (byte[]) $r26;

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(byte[],byte[])>($r28, $r27);

        goto label15;

     label09:
        $z6 = r1 instanceof double[];

        if $z6 == 0 goto label10;

        $r20 = (double[]) r1;

        $r23 = (double[]) $r20;

        $r21 = (double[]) r2;

        $r22 = (double[]) $r21;

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(double[],double[])>($r23, $r22);

        goto label15;

     label10:
        $z7 = r1 instanceof float[];

        if $z7 == 0 goto label11;

        $r15 = (float[]) r1;

        $r18 = (float[]) $r15;

        $r16 = (float[]) r2;

        $r17 = (float[]) $r16;

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(float[],float[])>($r18, $r17);

        goto label15;

     label11:
        $z8 = r1 instanceof boolean[];

        if $z8 == 0 goto label12;

        $r10 = (boolean[]) r1;

        $r13 = (boolean[]) $r10;

        $r11 = (boolean[]) r2;

        $r12 = (boolean[]) $r11;

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(boolean[],boolean[])>($r13, $r12);

        goto label15;

     label12:
        $r5 = (java.lang.Object[]) r1;

        $r8 = (java.lang.Object[]) $r5;

        $r6 = (java.lang.Object[]) r2;

        $r7 = (java.lang.Object[]) $r6;

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[],java.util.Comparator)>($r8, $r7, r3);

        goto label15;

     label13:
        if r3 != null goto label14;

        r50 = (java.lang.Comparable) r1;

        $i2 = interfaceinvoke r50.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $i2;

        goto label15;

     label14:
        $i1 = interfaceinvoke r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $i1;

     label15:
        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(long, long)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        long l0, l1;
        int $i2;
        byte $b3, $b4, $b5;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $i2 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i2 == 0 goto label1;

        return r0;

     label1:
        $b3 = l0 cmp l1;

        if $b3 >= 0 goto label2;

        $b5 = -1;

        goto label4;

     label2:
        $b4 = l0 cmp l1;

        if $b4 <= 0 goto label3;

        $b5 = 1;

        goto label4;

     label3:
        $b5 = 0;

     label4:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b5;

        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(int, int)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        int i0, i1, $i2;
        byte $b3;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i2 == 0 goto label1;

        return r0;

     label1:
        if i0 >= i1 goto label2;

        $b3 = -1;

        goto label4;

     label2:
        if i0 <= i1 goto label3;

        $b3 = 1;

        goto label4;

     label3:
        $b3 = 0;

     label4:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b3;

        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(short, short)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        short s0, s1;
        int $i2;
        byte $b3;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        $i2 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i2 == 0 goto label1;

        return r0;

     label1:
        if s0 >= s1 goto label2;

        $b3 = -1;

        goto label4;

     label2:
        if s0 <= s1 goto label3;

        $b3 = 1;

        goto label4;

     label3:
        $b3 = 0;

     label4:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b3;

        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(char, char)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        char c0, c1;
        int $i2;
        byte $b3;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        $i2 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i2 == 0 goto label1;

        return r0;

     label1:
        if c0 >= c1 goto label2;

        $b3 = -1;

        goto label4;

     label2:
        if c0 <= c1 goto label3;

        $b3 = 1;

        goto label4;

     label3:
        $b3 = 0;

     label4:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b3;

        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(byte, byte)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        byte b0, b1, $b3;
        int $i2;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        $i2 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i2 == 0 goto label1;

        return r0;

     label1:
        if b0 >= b1 goto label2;

        $b3 = -1;

        goto label4;

     label2:
        if b0 <= b1 goto label3;

        $b3 = 1;

        goto label4;

     label3:
        $b3 = 0;

     label4:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b3;

        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(double, double)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        double d0, d1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        $i1 = staticinvoke <java.lang.Double: int compare(double,double)>(d0, d1);

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $i1;

        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(float, float)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        float f0, f1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        $i1 = staticinvoke <java.lang.Float: int compare(float,float)>(f0, f1);

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $i1;

        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(boolean, boolean)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        boolean z0, z1;
        int $i0;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        if z0 != z1 goto label2;

        return r0;

     label2:
        if z0 != 0 goto label3;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = -1;

        goto label4;

     label3:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;

     label4:
        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[], java.lang.Object[])
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0, $r3;
        java.lang.Object[] r1, r2;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[],java.util.Comparator)>(r1, r2, null);

        return $r3;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[], java.lang.Object[], java.util.Comparator)
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        java.lang.Object[] r1, r2;
        java.util.Comparator r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i8;
        java.lang.Object $r4, $r5;
        byte $b7;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.util.Comparator;

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        if r1 != r2 goto label2;

        return r0;

     label2:
        if r1 != null goto label3;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = -1;

        return r0;

     label3:
        if r2 != null goto label4;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;

        return r0;

     label4:
        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label7;

        $i6 = lengthof r1;

        $i5 = lengthof r2;

        if $i6 >= $i5 goto label5;

        $b7 = -1;

        goto label6;

     label5:
        $b7 = 1;

     label6:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b7;

        return r0;

     label7:
        i8 = 0;

     label8:
        $i3 = lengthof r1;

        if i8 >= $i3 goto label9;

        $i4 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i4 != 0 goto label9;

        $r5 = r1[i8];

        $r4 = r2[i8];

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object,java.util.Comparator)>($r5, $r4, r3);

        i8 = i8 + 1;

        goto label8;

     label9:
        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(long[], long[])
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        long[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, i10;
        long $l5, $l6;
        byte $b9;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: long[];

        r2 := @parameter1: long[];

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        if r1 != r2 goto label2;

        return r0;

     label2:
        if r1 != null goto label3;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = -1;

        return r0;

     label3:
        if r2 != null goto label4;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;

        return r0;

     label4:
        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label7;

        $i8 = lengthof r1;

        $i7 = lengthof r2;

        if $i8 >= $i7 goto label5;

        $b9 = -1;

        goto label6;

     label5:
        $b9 = 1;

     label6:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b9;

        return r0;

     label7:
        i10 = 0;

     label8:
        $i3 = lengthof r1;

        if i10 >= $i3 goto label9;

        $i4 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i4 != 0 goto label9;

        $l6 = r1[i10];

        $l5 = r2[i10];

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(long,long)>($l6, $l5);

        i10 = i10 + 1;

        goto label8;

     label9:
        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(int[], int[])
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        int[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10;
        byte $b9;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        if r1 != r2 goto label2;

        return r0;

     label2:
        if r1 != null goto label3;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = -1;

        return r0;

     label3:
        if r2 != null goto label4;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;

        return r0;

     label4:
        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label7;

        $i8 = lengthof r1;

        $i7 = lengthof r2;

        if $i8 >= $i7 goto label5;

        $b9 = -1;

        goto label6;

     label5:
        $b9 = 1;

     label6:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b9;

        return r0;

     label7:
        i10 = 0;

     label8:
        $i3 = lengthof r1;

        if i10 >= $i3 goto label9;

        $i4 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i4 != 0 goto label9;

        $i6 = r1[i10];

        $i5 = r2[i10];

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(int,int)>($i6, $i5);

        i10 = i10 + 1;

        goto label8;

     label9:
        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(short[], short[])
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        short[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, i10;
        short $s5, $s6;
        byte $b9;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: short[];

        r2 := @parameter1: short[];

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        if r1 != r2 goto label2;

        return r0;

     label2:
        if r1 != null goto label3;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = -1;

        return r0;

     label3:
        if r2 != null goto label4;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;

        return r0;

     label4:
        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label7;

        $i8 = lengthof r1;

        $i7 = lengthof r2;

        if $i8 >= $i7 goto label5;

        $b9 = -1;

        goto label6;

     label5:
        $b9 = 1;

     label6:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b9;

        return r0;

     label7:
        i10 = 0;

     label8:
        $i3 = lengthof r1;

        if i10 >= $i3 goto label9;

        $i4 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i4 != 0 goto label9;

        $s6 = r1[i10];

        $s5 = r2[i10];

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(short,short)>($s6, $s5);

        i10 = i10 + 1;

        goto label8;

     label9:
        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(char[], char[])
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        char[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, i10;
        char $c5, $c6;
        byte $b9;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: char[];

        r2 := @parameter1: char[];

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        if r1 != r2 goto label2;

        return r0;

     label2:
        if r1 != null goto label3;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = -1;

        return r0;

     label3:
        if r2 != null goto label4;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;

        return r0;

     label4:
        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label7;

        $i8 = lengthof r1;

        $i7 = lengthof r2;

        if $i8 >= $i7 goto label5;

        $b9 = -1;

        goto label6;

     label5:
        $b9 = 1;

     label6:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b9;

        return r0;

     label7:
        i10 = 0;

     label8:
        $i3 = lengthof r1;

        if i10 >= $i3 goto label9;

        $i4 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i4 != 0 goto label9;

        $c6 = r1[i10];

        $c5 = r2[i10];

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(char,char)>($c6, $c5);

        i10 = i10 + 1;

        goto label8;

     label9:
        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(byte[], byte[])
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        byte[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, i10;
        byte $b5, $b6, $b9;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        if r1 != r2 goto label2;

        return r0;

     label2:
        if r1 != null goto label3;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = -1;

        return r0;

     label3:
        if r2 != null goto label4;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;

        return r0;

     label4:
        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label7;

        $i8 = lengthof r1;

        $i7 = lengthof r2;

        if $i8 >= $i7 goto label5;

        $b9 = -1;

        goto label6;

     label5:
        $b9 = 1;

     label6:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b9;

        return r0;

     label7:
        i10 = 0;

     label8:
        $i3 = lengthof r1;

        if i10 >= $i3 goto label9;

        $i4 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i4 != 0 goto label9;

        $b6 = r1[i10];

        $b5 = r2[i10];

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(byte,byte)>($b6, $b5);

        i10 = i10 + 1;

        goto label8;

     label9:
        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(double[], double[])
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        double[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i8;
        double $d0, $d1;
        byte $b7;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        if r1 != r2 goto label2;

        return r0;

     label2:
        if r1 != null goto label3;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = -1;

        return r0;

     label3:
        if r2 != null goto label4;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;

        return r0;

     label4:
        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label7;

        $i6 = lengthof r1;

        $i5 = lengthof r2;

        if $i6 >= $i5 goto label5;

        $b7 = -1;

        goto label6;

     label5:
        $b7 = 1;

     label6:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b7;

        return r0;

     label7:
        i8 = 0;

     label8:
        $i3 = lengthof r1;

        if i8 >= $i3 goto label9;

        $i4 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i4 != 0 goto label9;

        $d1 = r1[i8];

        $d0 = r2[i8];

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(double,double)>($d1, $d0);

        i8 = i8 + 1;

        goto label8;

     label9:
        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(float[], float[])
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        float[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i8;
        float $f0, $f1;
        byte $b7;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        if r1 != r2 goto label2;

        return r0;

     label2:
        if r1 != null goto label3;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = -1;

        return r0;

     label3:
        if r2 != null goto label4;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;

        return r0;

     label4:
        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label7;

        $i6 = lengthof r1;

        $i5 = lengthof r2;

        if $i6 >= $i5 goto label5;

        $b7 = -1;

        goto label6;

     label5:
        $b7 = 1;

     label6:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b7;

        return r0;

     label7:
        i8 = 0;

     label8:
        $i3 = lengthof r1;

        if i8 >= $i3 goto label9;

        $i4 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i4 != 0 goto label9;

        $f1 = r1[i8];

        $f0 = r2[i8];

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(float,float)>($f1, $f0);

        i8 = i8 + 1;

        goto label8;

     label9:
        return r0;
    }

    public org.apache.commons.lang3.builder.CompareToBuilder append(boolean[], boolean[])
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        boolean[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i8;
        boolean $z0, $z1;
        byte $b7;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        r1 := @parameter0: boolean[];

        r2 := @parameter1: boolean[];

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i0 == 0 goto label1;

        return r0;

     label1:
        if r1 != r2 goto label2;

        return r0;

     label2:
        if r1 != null goto label3;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = -1;

        return r0;

     label3:
        if r2 != null goto label4;

        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;

        return r0;

     label4:
        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label7;

        $i6 = lengthof r1;

        $i5 = lengthof r2;

        if $i6 >= $i5 goto label5;

        $b7 = -1;

        goto label6;

     label5:
        $b7 = 1;

     label6:
        r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = $b7;

        return r0;

     label7:
        i8 = 0;

     label8:
        $i3 = lengthof r1;

        if i8 >= $i3 goto label9;

        $i4 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        if $i4 != 0 goto label9;

        $z1 = r1[i8];

        $z0 = r2[i8];

        virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(boolean,boolean)>($z1, $z0);

        i8 = i8 + 1;

        goto label8;

     label9:
        return r0;
    }

    public int toComparison()
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        int $i0;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        $i0 = r0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;

        return $i0;
    }

    public java.lang.Integer build()
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        $i0 = virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: int toComparison()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    public volatile java.lang.Object build()
    {
        org.apache.commons.lang3.builder.CompareToBuilder r0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;

        $r1 = virtualinvoke r0.<org.apache.commons.lang3.builder.CompareToBuilder: java.lang.Integer build()>();

        return $r1;
    }
}
