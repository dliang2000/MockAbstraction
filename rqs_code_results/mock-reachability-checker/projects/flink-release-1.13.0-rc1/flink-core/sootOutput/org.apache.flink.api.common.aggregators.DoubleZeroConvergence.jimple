public class org.apache.flink.api.common.aggregators.DoubleZeroConvergence extends java.lang.Object implements org.apache.flink.api.common.aggregators.ConvergenceCriterion
{

    public void <init>()
    {
        org.apache.flink.api.common.aggregators.DoubleZeroConvergence r0;

        r0 := @this: org.apache.flink.api.common.aggregators.DoubleZeroConvergence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isConverged(int, org.apache.flink.types.DoubleValue)
    {
        org.apache.flink.api.common.aggregators.DoubleZeroConvergence r0;
        int i0;
        org.apache.flink.types.DoubleValue r1;
        double $d0;
        byte $b1;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.aggregators.DoubleZeroConvergence;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.types.DoubleValue;

        $d0 = virtualinvoke r1.<org.apache.flink.types.DoubleValue: double getValue()>();

        $b1 = $d0 cmpl 0.0;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public volatile boolean isConverged(int, org.apache.flink.types.Value)
    {
        org.apache.flink.api.common.aggregators.DoubleZeroConvergence r0;
        int i0;
        org.apache.flink.types.Value r1;
        org.apache.flink.types.DoubleValue $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.aggregators.DoubleZeroConvergence;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.types.Value;

        $r2 = (org.apache.flink.types.DoubleValue) r1;

        $z0 = virtualinvoke r0.<org.apache.flink.api.common.aggregators.DoubleZeroConvergence: boolean isConverged(int,org.apache.flink.types.DoubleValue)>(i0, $r2);

        return $z0;
    }
}
