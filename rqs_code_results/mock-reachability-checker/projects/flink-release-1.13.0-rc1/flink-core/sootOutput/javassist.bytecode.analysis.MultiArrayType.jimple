public class javassist.bytecode.analysis.MultiArrayType extends javassist.bytecode.analysis.Type
{
    private javassist.bytecode.analysis.MultiType component;
    private int dims;

    public void <init>(javassist.bytecode.analysis.MultiType, int)
    {
        javassist.bytecode.analysis.MultiArrayType r0;
        javassist.bytecode.analysis.MultiType r1;
        int i0;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        r1 := @parameter0: javassist.bytecode.analysis.MultiType;

        i0 := @parameter1: int;

        specialinvoke r0.<javassist.bytecode.analysis.Type: void <init>(javassist.CtClass)>(null);

        r0.<javassist.bytecode.analysis.MultiArrayType: javassist.bytecode.analysis.MultiType component> = r1;

        r0.<javassist.bytecode.analysis.MultiArrayType: int dims> = i0;

        return;
    }

    public javassist.CtClass getCtClass()
    {
        javassist.bytecode.analysis.MultiArrayType r0;
        javassist.CtClass r1, $r6;
        java.lang.String r2, $r5;
        javassist.bytecode.analysis.MultiType $r4;
        int $i0;
        javassist.NotFoundException $r7;
        java.lang.RuntimeException $r8;
        javassist.ClassPool r9;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        $r4 = r0.<javassist.bytecode.analysis.MultiArrayType: javassist.bytecode.analysis.MultiType component>;

        r1 = virtualinvoke $r4.<javassist.bytecode.analysis.MultiType: javassist.CtClass getCtClass()>();

        if r1 != null goto label1;

        return null;

     label1:
        r9 = virtualinvoke r1.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        if r9 != null goto label2;

        r9 = staticinvoke <javassist.ClassPool: javassist.ClassPool getDefault()>();

     label2:
        $r5 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $i0 = r0.<javassist.bytecode.analysis.MultiArrayType: int dims>;

        r2 = virtualinvoke r0.<javassist.bytecode.analysis.MultiArrayType: java.lang.String arrayName(java.lang.String,int)>($r5, $i0);

     label3:
        $r6 = virtualinvoke r9.<javassist.ClassPool: javassist.CtClass get(java.lang.String)>(r2);

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch javassist.NotFoundException from label3 to label4 with label5;
    }

    boolean popChanged()
    {
        javassist.bytecode.analysis.MultiArrayType r0;
        javassist.bytecode.analysis.MultiType $r1;
        boolean $z0;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        $r1 = r0.<javassist.bytecode.analysis.MultiArrayType: javassist.bytecode.analysis.MultiType component>;

        $z0 = virtualinvoke $r1.<javassist.bytecode.analysis.MultiType: boolean popChanged()>();

        return $z0;
    }

    public int getDimensions()
    {
        javassist.bytecode.analysis.MultiArrayType r0;
        int $i0;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        $i0 = r0.<javassist.bytecode.analysis.MultiArrayType: int dims>;

        return $i0;
    }

    public javassist.bytecode.analysis.Type getComponent()
    {
        javassist.bytecode.analysis.MultiArrayType r0, r3;
        int $i0, $i1, $i2;
        javassist.bytecode.analysis.MultiType $r1;
        javassist.bytecode.analysis.Type $r2;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        $i0 = r0.<javassist.bytecode.analysis.MultiArrayType: int dims>;

        if $i0 != 1 goto label1;

        $r2 = r0.<javassist.bytecode.analysis.MultiArrayType: javassist.bytecode.analysis.MultiType component>;

        goto label2;

     label1:
        r3 = new javassist.bytecode.analysis.MultiArrayType;

        $r2 = r3;

        $r1 = r0.<javassist.bytecode.analysis.MultiArrayType: javassist.bytecode.analysis.MultiType component>;

        $i1 = r0.<javassist.bytecode.analysis.MultiArrayType: int dims>;

        $i2 = $i1 - 1;

        specialinvoke r3.<javassist.bytecode.analysis.MultiArrayType: void <init>(javassist.bytecode.analysis.MultiType,int)>($r1, $i2);

     label2:
        return $r2;
    }

    public int getSize()
    {
        javassist.bytecode.analysis.MultiArrayType r0;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        return 1;
    }

    public boolean isArray()
    {
        javassist.bytecode.analysis.MultiArrayType r0;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        return 1;
    }

    public boolean isAssignableFrom(javassist.bytecode.analysis.Type)
    {
        javassist.bytecode.analysis.MultiArrayType r0;
        javassist.bytecode.analysis.Type r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        r1 := @parameter0: javassist.bytecode.analysis.Type;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented");

        throw $r2;
    }

    public boolean isReference()
    {
        javassist.bytecode.analysis.MultiArrayType r0;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        return 1;
    }

    public boolean isAssignableTo(javassist.bytecode.analysis.Type)
    {
        javassist.bytecode.analysis.MultiArrayType r0;
        javassist.bytecode.analysis.Type r1, r2, $r4, $r7, $r10, $r14, $r17, $r20;
        int i0, $i1, $i2;
        javassist.CtClass $r3, $r5, $r6, $r8, $r9, $r11, $r13, $r15, $r16, $r18, $r19, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        javassist.bytecode.analysis.MultiType $r12;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        r1 := @parameter0: javassist.bytecode.analysis.Type;

        $r3 = virtualinvoke r1.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $r4 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $r5 = virtualinvoke $r4.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $z0 = staticinvoke <javassist.bytecode.analysis.MultiArrayType: boolean eq(javassist.CtClass,javassist.CtClass)>($r3, $r5);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r6 = virtualinvoke r1.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $r7 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type CLONEABLE>;

        $r8 = virtualinvoke $r7.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $z1 = staticinvoke <javassist.bytecode.analysis.MultiArrayType: boolean eq(javassist.CtClass,javassist.CtClass)>($r6, $r8);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r9 = virtualinvoke r1.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $r10 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type SERIALIZABLE>;

        $r11 = virtualinvoke $r10.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $z2 = staticinvoke <javassist.bytecode.analysis.MultiArrayType: boolean eq(javassist.CtClass,javassist.CtClass)>($r9, $r11);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = virtualinvoke r1.<javassist.bytecode.analysis.Type: boolean isArray()>();

        if $z3 != 0 goto label4;

        return 0;

     label4:
        r2 = virtualinvoke r0.<javassist.bytecode.analysis.MultiArrayType: javassist.bytecode.analysis.Type getRootComponent(javassist.bytecode.analysis.Type)>(r1);

        i0 = virtualinvoke r1.<javassist.bytecode.analysis.Type: int getDimensions()>();

        $i1 = r0.<javassist.bytecode.analysis.MultiArrayType: int dims>;

        if i0 <= $i1 goto label5;

        return 0;

     label5:
        $i2 = r0.<javassist.bytecode.analysis.MultiArrayType: int dims>;

        if i0 >= $i2 goto label9;

        $r13 = virtualinvoke r2.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $r14 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $r15 = virtualinvoke $r14.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $z5 = staticinvoke <javassist.bytecode.analysis.MultiArrayType: boolean eq(javassist.CtClass,javassist.CtClass)>($r13, $r15);

        if $z5 == 0 goto label6;

        return 1;

     label6:
        $r16 = virtualinvoke r2.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $r17 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type CLONEABLE>;

        $r18 = virtualinvoke $r17.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $z6 = staticinvoke <javassist.bytecode.analysis.MultiArrayType: boolean eq(javassist.CtClass,javassist.CtClass)>($r16, $r18);

        if $z6 == 0 goto label7;

        return 1;

     label7:
        $r19 = virtualinvoke r2.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $r20 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type SERIALIZABLE>;

        $r21 = virtualinvoke $r20.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        $z7 = staticinvoke <javassist.bytecode.analysis.MultiArrayType: boolean eq(javassist.CtClass,javassist.CtClass)>($r19, $r21);

        if $z7 == 0 goto label8;

        return 1;

     label8:
        return 0;

     label9:
        $r12 = r0.<javassist.bytecode.analysis.MultiArrayType: javassist.bytecode.analysis.MultiType component>;

        $z4 = virtualinvoke $r12.<javassist.bytecode.analysis.MultiType: boolean isAssignableTo(javassist.bytecode.analysis.Type)>(r2);

        return $z4;
    }

    public int hashCode()
    {
        javassist.bytecode.analysis.MultiArrayType r0;
        javassist.bytecode.analysis.MultiType $r1;
        int $i0, $i1, $i2;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        $r1 = r0.<javassist.bytecode.analysis.MultiArrayType: javassist.bytecode.analysis.MultiType component>;

        $i0 = virtualinvoke $r1.<javassist.bytecode.analysis.MultiType: int hashCode()>();

        $i1 = r0.<javassist.bytecode.analysis.MultiArrayType: int dims>;

        $i2 = $i0 + $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        javassist.bytecode.analysis.MultiArrayType r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        javassist.bytecode.analysis.MultiType $r3, $r4;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof javassist.bytecode.analysis.MultiArrayType;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (javassist.bytecode.analysis.MultiArrayType) r1;

        $r4 = r0.<javassist.bytecode.analysis.MultiArrayType: javassist.bytecode.analysis.MultiType component>;

        $r3 = r2.<javassist.bytecode.analysis.MultiArrayType: javassist.bytecode.analysis.MultiType component>;

        $z1 = virtualinvoke $r4.<javassist.bytecode.analysis.MultiType: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $i1 = r0.<javassist.bytecode.analysis.MultiArrayType: int dims>;

        $i0 = r2.<javassist.bytecode.analysis.MultiArrayType: int dims>;

        if $i1 != $i0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.String toString()
    {
        javassist.bytecode.analysis.MultiArrayType r0;
        javassist.bytecode.analysis.MultiType $r1;
        java.lang.String $r2, $r3;
        int $i0;

        r0 := @this: javassist.bytecode.analysis.MultiArrayType;

        $r1 = r0.<javassist.bytecode.analysis.MultiArrayType: javassist.bytecode.analysis.MultiType component>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.analysis.MultiType: java.lang.String toString()>();

        $i0 = r0.<javassist.bytecode.analysis.MultiArrayType: int dims>;

        $r3 = virtualinvoke r0.<javassist.bytecode.analysis.MultiArrayType: java.lang.String arrayName(java.lang.String,int)>($r2, $i0);

        return $r3;
    }
}
