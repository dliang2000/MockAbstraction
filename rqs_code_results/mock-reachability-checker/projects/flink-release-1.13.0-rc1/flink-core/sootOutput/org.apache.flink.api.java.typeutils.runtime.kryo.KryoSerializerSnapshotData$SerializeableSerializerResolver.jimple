final class org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver extends java.lang.Object implements org.apache.flink.util.function.BiFunctionWithException
{
    private final java.lang.ClassLoader classLoader;

    private void <init>(java.lang.ClassLoader)
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver: java.lang.ClassLoader classLoader> = r1;

        return;
    }

    public org.apache.flink.api.common.ExecutionConfig$SerializableSerializer apply(org.apache.flink.core.memory.DataInputView, java.lang.String)
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver r0;
        org.apache.flink.core.memory.DataInputView r1;
        java.lang.String r2, $r15;
        org.apache.flink.api.java.typeutils.runtime.DataInputViewStream $r6;
        java.lang.ClassLoader $r7;
        java.lang.Object $r8;
        java.lang.Throwable $r9, $r10, $r17, $r18, r20;
        org.slf4j.Logger $r11;
        java.lang.StringBuilder $r12, $r13, $r14;
        org.apache.flink.api.common.ExecutionConfig$SerializableSerializer r21;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        r2 := @parameter1: java.lang.String;

     label01:
        $r6 = new org.apache.flink.api.java.typeutils.runtime.DataInputViewStream;

        specialinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStream: void <init>(org.apache.flink.core.memory.DataInputView)>(r1);

        r20 = null;

     label02:
        $r7 = r0.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver: java.lang.ClassLoader classLoader>;

        $r8 = staticinvoke <org.apache.flink.util.InstantiationUtil: java.lang.Object deserializeObject(java.io.InputStream,java.lang.ClassLoader)>($r6, $r7);

        r21 = (org.apache.flink.api.common.ExecutionConfig$SerializableSerializer) $r8;

     label03:
        if $r6 == null goto label05;

        goto label04;

     label04:
        virtualinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStream: void close()>();

     label05:
        return r21;

     label06:
        $r17 := @caughtexception;

        r20 = $r17;

        throw $r17;

     label07:
        $r9 := @caughtexception;

     label08:
        if $r6 == null goto label13;

        if r20 == null goto label12;

     label09:
        virtualinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStream: void close()>();

     label10:
        goto label13;

     label11:
        $r18 := @caughtexception;

        virtualinvoke r20.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r18);

        goto label13;

     label12:
        virtualinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStream: void close()>();

     label13:
        throw $r9;

     label14:
        $r10 := @caughtexception;

        $r11 = staticinvoke <org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData: org.slf4j.Logger access$200()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot deserialize a previously serialized kryo serializer for the type ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r15, $r10);

        return null;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label06 to label08 with label07;
        catch java.lang.Throwable from label01 to label05 with label14;
        catch java.lang.Throwable from label06 to label14 with label14;
    }

    public volatile java.lang.Object apply(java.lang.Object, java.lang.Object) throws java.lang.Throwable
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver r0;
        java.lang.Object r1, r2;
        java.lang.String $r3;
        org.apache.flink.core.memory.DataInputView $r4;
        org.apache.flink.api.common.ExecutionConfig$SerializableSerializer $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.flink.core.memory.DataInputView) r1;

        $r3 = (java.lang.String) r2;

        $r5 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver: org.apache.flink.api.common.ExecutionConfig$SerializableSerializer apply(org.apache.flink.core.memory.DataInputView,java.lang.String)>($r4, $r3);

        return $r5;
    }

    void <init>(java.lang.ClassLoader, org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$1)
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver r0;
        java.lang.ClassLoader r1;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$1 r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$1;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData$SerializeableSerializerResolver: void <init>(java.lang.ClassLoader)>(r1);

        return;
    }
}
