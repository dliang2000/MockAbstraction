public class org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest extends org.apache.flink.api.common.typeutils.SerializerTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.SerializerTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest r0;
        org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializer: void <init>()>();

        return $r1;
    }

    protected java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest;

        return class "[I";
    }

    protected int getLength()
    {
        org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest;

        return -1;
    }

    protected int[][] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest r0;
        int[][] $r1;
        int[] $r2, $r3, $r4;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest;

        $r1 = newarray (int[])[3];

        $r2 = newarray (int)[9];

        $r2[0] = 0;

        $r2[1] = 1;

        $r2[2] = 2;

        $r2[3] = 3;

        $r2[4] = -1;

        $r2[5] = -2;

        $r2[6] = -3;

        $r2[7] = 2147483647;

        $r2[8] = -2147483648;

        $r1[0] = $r2;

        $r3 = newarray (int)[0];

        $r1[1] = $r3;

        $r4 = newarray (int)[7];

        $r4[0] = -1;

        $r4[1] = -2;

        $r4[2] = 96769243;

        $r4[3] = 26782;

        $r4[4] = 0;

        $r4[5] = 0;

        $r4[6] = 0;

        $r1[2] = $r4;

        return $r1;
    }

    protected volatile java.lang.Object[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest r0;
        int[][] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializerTest: int[][] getTestData()>();

        return $r1;
    }
}
