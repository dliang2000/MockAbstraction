public final class org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo extends org.apache.flink.api.common.typeinfo.TypeInformation
{
    private static final long serialVersionUID;
    public static final org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo STRING_ARRAY_TYPE_INFO;
    public static final org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo BOOLEAN_ARRAY_TYPE_INFO;
    public static final org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo BYTE_ARRAY_TYPE_INFO;
    public static final org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo SHORT_ARRAY_TYPE_INFO;
    public static final org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo INT_ARRAY_TYPE_INFO;
    public static final org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo LONG_ARRAY_TYPE_INFO;
    public static final org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo FLOAT_ARRAY_TYPE_INFO;
    public static final org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo DOUBLE_ARRAY_TYPE_INFO;
    public static final org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo CHAR_ARRAY_TYPE_INFO;
    private final java.lang.Class arrayClass;
    private final org.apache.flink.api.common.typeinfo.TypeInformation componentInfo;
    private static final java.util.Map TYPES;

    private void <init>(java.lang.Class, org.apache.flink.api.common.typeinfo.BasicTypeInfo)
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;
        java.lang.Class r1, $r4;
        org.apache.flink.api.common.typeinfo.BasicTypeInfo r2;
        java.lang.Object $r3, $r5;
        org.apache.flink.api.common.typeinfo.TypeInformation $r6;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.api.common.typeinfo.BasicTypeInfo;

        specialinvoke r0.<org.apache.flink.api.common.typeinfo.TypeInformation: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (java.lang.Class) $r3;

        r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.lang.Class arrayClass> = $r4;

        $r5 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (org.apache.flink.api.common.typeinfo.TypeInformation) $r5;

        r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation componentInfo> = $r6;

        return;
    }

    public boolean isBasicType()
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        return 0;
    }

    public boolean isTupleType()
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        return 0;
    }

    public int getArity()
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        return 1;
    }

    public int getTotalFields()
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        return 1;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r1 = r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.lang.Class arrayClass>;

        return $r1;
    }

    public java.lang.Class getComponentTypeClass()
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;
        org.apache.flink.api.common.typeinfo.TypeInformation $r1;
        java.lang.Class $r2;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r1 = r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation componentInfo>;

        $r2 = virtualinvoke $r1.<org.apache.flink.api.common.typeinfo.TypeInformation: java.lang.Class getTypeClass()>();

        return $r2;
    }

    public org.apache.flink.api.common.typeinfo.TypeInformation getComponentInfo()
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;
        org.apache.flink.api.common.typeinfo.TypeInformation $r1;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r1 = r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation componentInfo>;

        return $r1;
    }

    public boolean isKeyType()
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        return 0;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;
        org.apache.flink.api.common.ExecutionConfig r1;
        org.apache.flink.api.common.typeinfo.TypeInformation $r2, $r5, $r7;
        java.lang.Class $r3, $r6;
        boolean $z0;
        org.apache.flink.api.common.typeutils.base.GenericArraySerializer $r4;
        org.apache.flink.api.common.typeutils.TypeSerializer $r8;
        org.apache.flink.api.common.typeutils.base.array.StringArraySerializer $r9;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        r1 := @parameter0: org.apache.flink.api.common.ExecutionConfig;

        $r2 = r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation componentInfo>;

        $r3 = virtualinvoke $r2.<org.apache.flink.api.common.typeinfo.TypeInformation: java.lang.Class getTypeClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/String;");

        if $z0 == 0 goto label1;

        $r9 = <org.apache.flink.api.common.typeutils.base.array.StringArraySerializer: org.apache.flink.api.common.typeutils.base.array.StringArraySerializer INSTANCE>;

        return $r9;

     label1:
        $r4 = new org.apache.flink.api.common.typeutils.base.GenericArraySerializer;

        $r5 = r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation componentInfo>;

        $r6 = virtualinvoke $r5.<org.apache.flink.api.common.typeinfo.TypeInformation: java.lang.Class getTypeClass()>();

        $r7 = r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation componentInfo>;

        $r8 = virtualinvoke $r7.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>(r1);

        specialinvoke $r4.<org.apache.flink.api.common.typeutils.base.GenericArraySerializer: void <init>(java.lang.Class,org.apache.flink.api.common.typeutils.TypeSerializer)>($r6, $r8);

        return $r4;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r3, $r4;
        org.apache.flink.api.common.typeinfo.TypeInformation $r5, $r6;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        if $z0 == 0 goto label3;

        r2 = (org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo) r1;

        $z1 = virtualinvoke r2.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: boolean canEqual(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $r4 = r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.lang.Class arrayClass>;

        $r3 = r2.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.lang.Class arrayClass>;

        if $r4 != $r3 goto label1;

        $r6 = r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation componentInfo>;

        $r5 = r2.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation componentInfo>;

        $z2 = virtualinvoke $r6.<org.apache.flink.api.common.typeinfo.TypeInformation: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;
        java.lang.Object[] $r1;
        java.lang.Class $r2;
        org.apache.flink.api.common.typeinfo.TypeInformation $r3;
        int $i0;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.lang.Class arrayClass>;

        $r1[0] = $r2;

        $r3 = r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation componentInfo>;

        $r1[1] = $r3;

        $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    public boolean canEqual(java.lang.Object)
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8;
        java.lang.Class $r2;
        java.lang.String $r3, $r9;
        org.apache.flink.api.common.typeinfo.TypeInformation $r6;

        r0 := @this: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r6 = r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation componentInfo>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public static org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo getInfoFor(java.lang.Class)
    {
        java.lang.Class r0;
        boolean $z0;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo $r3;
        org.apache.flink.api.common.functions.InvalidTypesException $r4;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z0 != 0 goto label1;

        $r4 = new org.apache.flink.api.common.functions.InvalidTypesException;

        specialinvoke $r4.<org.apache.flink.api.common.functions.InvalidTypesException: void <init>(java.lang.String)>("The given class is no array.");

        throw $r4;

     label1:
        $r1 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.util.Map TYPES>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo) $r2;

        return $r3;
    }

    static void <clinit>()
    {
        org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43;
        org.apache.flink.api.common.typeinfo.BasicTypeInfo $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        java.util.HashMap $r18;
        java.util.Map $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44;

        <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: long serialVersionUID> = 1L;

        $r0 = new org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r1 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo STRING_TYPE_INFO>;

        specialinvoke $r0.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeinfo.BasicTypeInfo)>(class "[Ljava/lang/String;", $r1);

        <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo STRING_ARRAY_TYPE_INFO> = $r0;

        $r2 = new org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r3 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo BOOLEAN_TYPE_INFO>;

        specialinvoke $r2.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeinfo.BasicTypeInfo)>(class "[Ljava/lang/Boolean;", $r3);

        <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo BOOLEAN_ARRAY_TYPE_INFO> = $r2;

        $r4 = new org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r5 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo BYTE_TYPE_INFO>;

        specialinvoke $r4.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeinfo.BasicTypeInfo)>(class "[Ljava/lang/Byte;", $r5);

        <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo BYTE_ARRAY_TYPE_INFO> = $r4;

        $r6 = new org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r7 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo SHORT_TYPE_INFO>;

        specialinvoke $r6.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeinfo.BasicTypeInfo)>(class "[Ljava/lang/Short;", $r7);

        <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo SHORT_ARRAY_TYPE_INFO> = $r6;

        $r8 = new org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r9 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo INT_TYPE_INFO>;

        specialinvoke $r8.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeinfo.BasicTypeInfo)>(class "[Ljava/lang/Integer;", $r9);

        <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo INT_ARRAY_TYPE_INFO> = $r8;

        $r10 = new org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r11 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo LONG_TYPE_INFO>;

        specialinvoke $r10.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeinfo.BasicTypeInfo)>(class "[Ljava/lang/Long;", $r11);

        <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo LONG_ARRAY_TYPE_INFO> = $r10;

        $r12 = new org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r13 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo FLOAT_TYPE_INFO>;

        specialinvoke $r12.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeinfo.BasicTypeInfo)>(class "[Ljava/lang/Float;", $r13);

        <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo FLOAT_ARRAY_TYPE_INFO> = $r12;

        $r14 = new org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r15 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo DOUBLE_TYPE_INFO>;

        specialinvoke $r14.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeinfo.BasicTypeInfo)>(class "[Ljava/lang/Double;", $r15);

        <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo DOUBLE_ARRAY_TYPE_INFO> = $r14;

        $r16 = new org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;

        $r17 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo CHAR_TYPE_INFO>;

        specialinvoke $r16.<org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeinfo.BasicTypeInfo)>(class "[Ljava/lang/Character;", $r17);

        <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo CHAR_ARRAY_TYPE_INFO> = $r16;

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.util.Map TYPES> = $r18;

        $r20 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.util.Map TYPES>;

        $r19 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo STRING_ARRAY_TYPE_INFO>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/String;", $r19);

        $r23 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.util.Map TYPES>;

        $r22 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo BOOLEAN_ARRAY_TYPE_INFO>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/Boolean;", $r22);

        $r26 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.util.Map TYPES>;

        $r25 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo BYTE_ARRAY_TYPE_INFO>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/Byte;", $r25);

        $r29 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.util.Map TYPES>;

        $r28 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo SHORT_ARRAY_TYPE_INFO>;

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/Short;", $r28);

        $r32 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.util.Map TYPES>;

        $r31 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo INT_ARRAY_TYPE_INFO>;

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/Integer;", $r31);

        $r35 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.util.Map TYPES>;

        $r34 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo LONG_ARRAY_TYPE_INFO>;

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/Long;", $r34);

        $r38 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.util.Map TYPES>;

        $r37 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo FLOAT_ARRAY_TYPE_INFO>;

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/Float;", $r37);

        $r41 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.util.Map TYPES>;

        $r40 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo DOUBLE_ARRAY_TYPE_INFO>;

        interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/Double;", $r40);

        $r44 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: java.util.Map TYPES>;

        $r43 = <org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo: org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo CHAR_ARRAY_TYPE_INFO>;

        interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/Character;", $r43);

        return;
    }
}
