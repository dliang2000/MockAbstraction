public class org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod extends java.lang.Object implements org.mockito.stubbing.Answer
{

    public void <init>()
    {
        org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod r0;

        r0 := @this: org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable
    {
        org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod r0;
        org.mockito.invocation.InvocationOnMock r1;
        java.lang.Object r2;
        org.mockito.stubbing.Answer $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod;

        r1 := @parameter0: org.mockito.invocation.InvocationOnMock;

        staticinvoke <org.powermock.api.mockito.internal.stubbing.MockitoRealMethodInvocation: void mockitoInvocationStarted()>();

     label1:
        $r4 = <org.mockito.Mockito: org.mockito.stubbing.Answer CALLS_REAL_METHODS>;

        r2 = interfaceinvoke $r4.<org.mockito.stubbing.Answer: java.lang.Object answer(org.mockito.invocation.InvocationOnMock)>(r1);

     label2:
        staticinvoke <org.powermock.api.mockito.internal.stubbing.MockitoRealMethodInvocation: void mockitoInvocationFinished()>();

        return r2;

     label3:
        $r5 := @caughtexception;

        staticinvoke <org.powermock.api.mockito.internal.stubbing.MockitoRealMethodInvocation: void mockitoInvocationFinished()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
