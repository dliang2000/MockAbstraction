public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer
{
    private static final long serialVersionUID;
    public static final java.lang.Object MARKER_FOR_EMPTY;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper;
    protected transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers;
    protected final java.lang.Object _suppressableValue;
    protected final boolean _suppressNulls;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getReferencedType()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType> = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _suppressNulls> = 0;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r5;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer, java.lang.Object, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer r5;
        java.lang.Object r6;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r5 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer;

        r6 := @parameter5: java.lang.Object;

        z0 := @parameter6: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer)>(r1);

        $r7 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType> = $r7;

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper> = r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue> = r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _suppressNulls> = z0;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer r1, r2, $r3, $r4, $r9, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r5, $r10, r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer;

        r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r11 == null goto label1;

        r11 = virtualinvoke r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer)>(r1);

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r11 != $r10 goto label1;

        return r0;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;

        if $r3 != null goto label2;

        $r12 = r1;

        goto label3;

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;

        $r12 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer)>(r1, $r4);

     label3:
        r2 = $r12;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if $r5 != r11 goto label4;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;

        if $r9 != $r12 goto label4;

        return r0;

     label4:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer)>($r7, $r6, r11, r2);

        return $r8;
    }

    protected abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object, boolean);

    protected abstract boolean _isValuePresent(java.lang.Object);

    protected abstract java.lang.Object _getReferenced(java.lang.Object);

    protected abstract java.lang.Object _getReferencedIfPresent(java.lang.Object);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0, r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2, $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include r4, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5;
        java.lang.Class $r6, $r9, $r12;
        int[] $r8;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, z4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r10, $r11, $r15, $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r13, r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r14, r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer $r21;
        java.lang.Object r22, $r23, $r24;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if r17 == null goto label01;

        r17 = virtualinvoke r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r2);

     label01:
        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findAnnotatedContentSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1, r2);

        if r18 != null goto label03;

        r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r18 != null goto label02;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType>;

        $z3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _useStatic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, $r15);

        if $z3 == 0 goto label03;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType>;

        r18 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1, $r16, r2);

        goto label03;

     label02:
        r18 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r18, r2);

     label03:
        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        if $r19 != r2 goto label04;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r13 != r17 goto label04;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if $r14 != r18 goto label04;

        r20 = r0;

        goto label05;

     label04:
        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;

        r20 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer)>(r2, r17, r18, $r21);

     label05:
        if r2 == null goto label17;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Class handledType()>();

        r3 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value findPropertyInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>($r5, $r6);

        if r3 == null goto label17;

        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include getContentInclusion()>();

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;

        if r4 == $r7 goto label17;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;

        $i0 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();

        $i1 = $r8[$i0];

        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label13;
            case 6: goto label14;
            default: goto label14;
        };

     label06:
        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType>;

        r22 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r11);

        z4 = 1;

        if r22 == null goto label15;

        $r12 = virtualinvoke r22.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r12.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label15;

        r22 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object getArrayComparator(java.lang.Object)>(r22);

        goto label15;

     label07:
        z4 = 1;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType>;

        $z1 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();

        if $z1 == 0 goto label08;

        $r23 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        goto label09;

     label08:
        $r23 = null;

     label09:
        r22 = $r23;

        goto label15;

     label10:
        z4 = 1;

        r22 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        goto label15;

     label11:
        $r9 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();

        r22 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object includeFilterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(null, $r9);

        if r22 != null goto label12;

        z4 = 1;

        goto label15;

     label12:
        z4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>(r22);

        goto label15;

     label13:
        r22 = null;

        z4 = 1;

        goto label15;

     label14:
        r22 = null;

        z4 = 0;

     label15:
        $r24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue>;

        if $r24 != r22 goto label16;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _suppressNulls>;

        if $z0 == z4 goto label17;

     label16:
        r20 = virtualinvoke r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean)>(r22, z4);

     label17:
        return r20;
    }

    protected boolean _useStatic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember r5, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing r6, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isFinal()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean useStaticType()>();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        if r4 == null goto label5;

        if r2 == null goto label5;

        r5 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();

        if r5 == null goto label5;

        $r7 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();

        r6 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing findSerializationTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>($r7);

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing STATIC>;

        if r6 != $r8 goto label4;

        return 1;

     label4:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing DYNAMIC>;

        if r6 != $r9 goto label5;

        return 0;

     label5:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING>;

        $z3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r10);

        return $z3;
    }

    public boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.Object r2, r3, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.RuntimeJsonMappingException $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _isValuePresent(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _getReferenced(java.lang.Object)>(r2);

        if r3 != null goto label2;

        $z3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: boolean _suppressNulls>;

        return $z3;

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue>;

        if $r5 != null goto label3;

        return 0;

     label3:
        r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r12 != null goto label7;

     label4:
        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        r12 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class)>(r1, $r9);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.RuntimeJsonMappingException;

        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.RuntimeJsonMappingException: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException)>($r10);

        throw $r11;

     label7:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue>;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        if $r7 != $r6 goto label8;

        $z2 = virtualinvoke r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r1, r3);

        return $z2;

     label8:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _suppressableValue>;

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        return $z1;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException from label4 to label5 with label6;
    }

    public boolean isUnwrappingSerializer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getReferredType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType>;

        return $r1;
    }

    public void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0;
        java.lang.Object r1, r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r5, $r6;
        java.lang.Class $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _getReferencedIfPresent(java.lang.Object)>(r1);

        if r4 != null goto label2;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;

        if $r8 != null goto label1;

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r2);

     label1:
        return;

     label2:
        r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r9 != null goto label3;

        $r7 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class)>(r3, $r7);

     label3:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r5 == null goto label4;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        virtualinvoke r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(r4, r2, r3, $r6);

        goto label5;

     label4:
        virtualinvoke r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r4, r2, r3);

     label5:
        return;
    }

    public void serializeWithType(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0;
        java.lang.Object r1, r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        java.lang.Class $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object _getReferencedIfPresent(java.lang.Object)>(r1);

        if r5 != null goto label2;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;

        if $r7 != null goto label1;

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r2);

     label1:
        return;

     label2:
        r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r8 != null goto label3;

        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class)>(r3, $r6);

     label3:
        virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(r5, r2, r3, r4);

        return;
    }

    public void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, $r5, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r8 != null goto label1;

        $r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider getProvider()>();

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r3, $r5, $r4);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;

        if $r6 == null goto label1;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;

        r8 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer)>($r7);

     label1:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType>;

        virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r9);

        return;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.Class) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, $r5, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r4, $r8, $r9;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r6, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer $r7, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.Class;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

        r13 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(r2);

        if r13 != null goto label4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType>;

        $z0 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean hasGenericTypes()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _referredType>;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r11, r2);

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r13 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r3, $r12);

        goto label2;

     label1:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r13 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r2, $r6);

     label2:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;

        if $r7 == null goto label3;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;

        r13 = virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.NameTransformer)>($r10);

     label3:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r2, r13);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r9;

     label4:
        return r13;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r2, r3);

        return $r4;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: long serialVersionUID> = 1L;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include NON_EMPTY>;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: java.lang.Object MARKER_FOR_EMPTY> = $r0;

        return;
    }
}
