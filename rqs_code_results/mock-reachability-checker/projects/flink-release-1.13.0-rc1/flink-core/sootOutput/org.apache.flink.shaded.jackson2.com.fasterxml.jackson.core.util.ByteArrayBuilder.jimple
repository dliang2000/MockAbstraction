public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder extends java.io.OutputStream
{
    public static final byte[] NO_BYTES;
    private static final int INITIAL_BLOCK_SIZE;
    private static final int MAX_BLOCK_SIZE;
    static final int DEFAULT_BLOCK_ARRAY_SIZE;
    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler;
    private final java.util.LinkedList _pastBlocks;
    private int _pastLen;
    private byte[] _currBlock;
    private int _currBlockPtr;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler)>(null);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler,int)>(r1, 500);

        return;
    }

    public void <init>(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler,int)>(null, i0);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler r1;
        java.util.LinkedList $r2;
        int i0;
        byte[] $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks> = $r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler> = r1;

        if i0 <= 131072 goto label1;

        i0 = 131072;

     label1:
        if r1 != null goto label2;

        $r4 = newarray (byte)[i0];

        goto label3;

     label2:
        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int)>(2);

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock> = $r4;

        return;
    }

    private void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler, byte[], int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler r1;
        byte[] r2;
        int i0;
        java.util.LinkedList $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks> = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = i0;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[], int)
    {
        byte[] r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler,byte[],int)>(null, r0, i0);

        return $r1;
    }

    public void reset()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        java.util.LinkedList $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = 0;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks>;

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks>;

        virtualinvoke $r2.<java.util.LinkedList: void clear()>();

     label1:
        return;
    }

    public int size()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i2 = $i1 + $i0;

        return $i2;
    }

    public void release()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r1, $r4;
        byte[] $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void reset()>();

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: void releaseByteBuffer(int,byte[])>(2, $r3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock> = null;

     label1:
        return;
    }

    public void append(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int i0, $i1, $i2, $i3, $i4;
        byte[] $r1, $r2;
        byte $b5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        i0 := @parameter0: int;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void _allocMore()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = $i4;

        $b5 = (byte) i0;

        $r2[$i3] = $b5;

        return;
    }

    public void appendTwoBytes(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10;
        byte[] $r1, $r2, $r3;
        byte $b8, $b11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i3 = $i1 + 1;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i2 = lengthof $r1;

        if $i3 >= $i2 goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = $i6;

        $i7 = i0 >> 8;

        $b8 = (byte) $i7;

        $r2[$i5] = $b8;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = $i10;

        $b11 = (byte) i0;

        $r3[$i9] = $b11;

        goto label2;

     label1:
        $i4 = i0 >> 8;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>($i4);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(i0);

     label2:
        return;
    }

    public void appendThreeBytes(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i14, $i15;
        byte[] $r1, $r2, $r3, $r4;
        byte $b9, $b13, $b16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i3 = $i1 + 2;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i2 = lengthof $r1;

        if $i3 >= $i2 goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = $i7;

        $i8 = i0 >> 16;

        $b9 = (byte) $i8;

        $r2[$i6] = $b9;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = $i11;

        $i12 = i0 >> 8;

        $b13 = (byte) $i12;

        $r3[$i10] = $b13;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i15 = $i14 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = $i15;

        $b16 = (byte) i0;

        $r4[$i14] = $b16;

        goto label2;

     label1:
        $i4 = i0 >> 16;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>($i4);

        $i5 = i0 >> 8;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>($i5);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(i0);

     label2:
        return;
    }

    public void appendFourBytes(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i15, $i16, $i17, $i19, $i20;
        byte[] $r1, $r2, $r3, $r4, $r5;
        byte $b10, $b14, $b18, $b21;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i3 = $i1 + 3;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i2 = lengthof $r1;

        if $i3 >= $i2 goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = $i8;

        $i9 = i0 >> 24;

        $b10 = (byte) $i9;

        $r2[$i7] = $b10;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = $i12;

        $i13 = i0 >> 16;

        $b14 = (byte) $i13;

        $r3[$i11] = $b14;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i16 = $i15 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = $i16;

        $i17 = i0 >> 8;

        $b18 = (byte) $i17;

        $r4[$i15] = $b18;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i20 = $i19 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = $i20;

        $b21 = (byte) i0;

        $r5[$i19] = $b21;

        goto label2;

     label1:
        $i4 = i0 >> 24;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>($i4);

        $i5 = i0 >> 16;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>($i5);

        $i6 = i0 >> 8;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>($i6);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(i0);

     label2:
        return;
    }

    public byte[] toByteArray()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        byte[] r1, r3, $r5, $r16;
        java.util.Iterator r2;
        java.util.LinkedList $r4, $r6;
        boolean $z0, $z1;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r14;
        java.lang.Object $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        i0 = $i3 + $i2;

        if i0 != 0 goto label1;

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] NO_BYTES>;

        return $r16;

     label1:
        r1 = newarray (byte)[i0];

        i6 = 0;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks>;

        r2 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (byte[]) $r15;

        i1 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r1, i6, i1);

        i6 = i6 + i1;

        goto label2;

     label3:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r1, i6, $i4);

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        i7 = i6 + $i5;

        if i7 == i0 goto label4;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Internal error: total len assumed to be ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", copied ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label4:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks>;

        $z1 = virtualinvoke $r6.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void reset()>();

     label5:
        return r1;
    }

    public byte[] resetAndGetFirstSegment()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        byte[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void reset()>();

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        return $r1;
    }

    public byte[] finishCurrentSegment()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        byte[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void _allocMore()>();

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        return $r1;
    }

    public byte[] completeAndCoalesce(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int i0;
        byte[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        i0 := @parameter0: int;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = i0;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();

        return $r1;
    }

    public byte[] getCurrentSegment()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        byte[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        return $r1;
    }

    public void setCurrentSegmentLength(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        i0 := @parameter0: int;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = i0;

        return;
    }

    public int getCurrentSegmentLength()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        return $i0;
    }

    public void write(byte[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        byte[] r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(byte[], int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        byte[] r1, $r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        r1 := @parameter0: byte[];

        i7 := @parameter1: int;

        i8 := @parameter2: int;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i3 = lengthof $r2;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        i0 = $i3 - $i2;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i8);

        if i1 <= 0 goto label2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i7, $r3, $i4, i1);

        i7 = i7 + i1;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;

        $i6 = $i5 + i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = $i6;

        i8 = i8 - i1;

     label2:
        if i8 > 0 goto label3;

        goto label4;

     label3:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void _allocMore()>();

        goto label1;

     label4:
        return;
    }

    public void write(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(i0);

        return;
    }

    public void close()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        return;
    }

    public void flush()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        return;
    }

    private void _allocMore()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        byte[] $r1, $r2, $r4;
        java.util.LinkedList $r3;
        java.lang.IllegalStateException $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        $i1 = lengthof $r1;

        i0 = $i2 + $i1;

        if i0 >= 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Maximum Java array size (2GB) exceeded by `ByteArrayBuilder`");

        throw $r5;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen> = i0;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen>;

        $i4 = $i3 >> 1;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>($i4, 1000);

        if i5 <= 131072 goto label2;

        i5 = 131072;

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);

        $r4 = newarray (byte)[i5];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock> = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = 0;

        return;
    }

    static void <clinit>()
    {
        byte[] $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int DEFAULT_BLOCK_ARRAY_SIZE> = 40;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int MAX_BLOCK_SIZE> = 131072;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: int INITIAL_BLOCK_SIZE> = 500;

        $r0 = newarray (byte)[0];

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] NO_BYTES> = $r0;

        return;
    }
}
