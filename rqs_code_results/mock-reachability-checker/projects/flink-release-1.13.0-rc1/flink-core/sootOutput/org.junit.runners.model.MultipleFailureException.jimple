public class org.junit.runners.model.MultipleFailureException extends java.lang.Exception
{
    private static final long serialVersionUID;
    private final java.util.List fErrors;

    public void <init>(java.util.List)
    {
        org.junit.runners.model.MultipleFailureException r0;
        java.util.List r1;
        java.util.ArrayList $r2;

        r0 := @this: org.junit.runners.model.MultipleFailureException;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<org.junit.runners.model.MultipleFailureException: java.util.List fErrors> = $r2;

        return;
    }

    public java.util.List getFailures()
    {
        org.junit.runners.model.MultipleFailureException r0;
        java.util.List $r1, $r2;

        r0 := @this: org.junit.runners.model.MultipleFailureException;

        $r1 = r0.<org.junit.runners.model.MultipleFailureException: java.util.List fErrors>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.lang.String getMessage()
    {
        org.junit.runners.model.MultipleFailureException r0;
        java.util.Iterator r2;
        java.lang.Throwable r3;
        java.lang.StringBuilder $r4;
        java.lang.Object[] $r5, $r12;
        java.util.List $r6, $r9;
        int $i0;
        java.lang.Integer $r7;
        java.lang.String $r8, $r10, $r14, $r15, $r16;
        boolean $z0;
        java.lang.Object $r11;
        java.lang.Class $r13;

        r0 := @this: org.junit.runners.model.MultipleFailureException;

        $r4 = new java.lang.StringBuilder;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<org.junit.runners.model.MultipleFailureException: java.util.List fErrors>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("There were %d errors:", $r5);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = r0.<org.junit.runners.model.MultipleFailureException: java.util.List fErrors>;

        r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Throwable) $r11;

        $r12 = newarray (java.lang.Object)[2];

        $r13 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r12[0] = $r14;

        $r15 = virtualinvoke r3.<java.lang.Throwable: java.lang.String getMessage()>();

        $r12[1] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\n  %s(%s)", $r12);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        goto label1;

     label2:
        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public static void assertEmpty(java.util.List) throws java.lang.Exception
    {
        java.util.List r0;
        boolean $z0;
        int $i0;
        org.junit.internal.runners.model.MultipleFailureException $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        java.lang.Exception $r4;

        r0 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.Throwable) $r2;

        $r4 = staticinvoke <org.junit.internal.Throwables: java.lang.Exception rethrowAsException(java.lang.Throwable)>($r3);

        throw $r4;

     label2:
        $r1 = new org.junit.internal.runners.model.MultipleFailureException;

        specialinvoke $r1.<org.junit.internal.runners.model.MultipleFailureException: void <init>(java.util.List)>(r0);

        throw $r1;
    }

    public static void <clinit>()
    {
        <org.junit.runners.model.MultipleFailureException: long serialVersionUID> = 1L;

        return;
    }
}
