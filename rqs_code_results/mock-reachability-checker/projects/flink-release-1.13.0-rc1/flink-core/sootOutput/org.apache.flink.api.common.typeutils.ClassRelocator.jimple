public final class org.apache.flink.api.common.typeutils.ClassRelocator extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.ClassRelocator r0;

        r0 := @this: org.apache.flink.api.common.typeutils.ClassRelocator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Class relocate(java.lang.Class)
    {
        java.lang.Class r0, $r6;
        java.util.Map r3;
        org.apache.flink.api.common.typeutils.ClassRelocator$ClassRegistry $r4;
        org.apache.flink.api.common.typeutils.ClassRelocator$ClassRenamer $r5;

        r0 := @parameter0: java.lang.Class;

        $r4 = new org.apache.flink.api.common.typeutils.ClassRelocator$ClassRegistry;

        specialinvoke $r4.<org.apache.flink.api.common.typeutils.ClassRelocator$ClassRegistry: void <init>(java.lang.Class)>(r0);

        $r5 = new org.apache.flink.api.common.typeutils.ClassRelocator$ClassRenamer;

        specialinvoke $r5.<org.apache.flink.api.common.typeutils.ClassRelocator$ClassRenamer: void <init>(org.apache.flink.api.common.typeutils.ClassRelocator$ClassRegistry)>($r4);

        r3 = virtualinvoke $r5.<org.apache.flink.api.common.typeutils.ClassRelocator$ClassRenamer: java.util.Map remap()>();

        $r6 = staticinvoke <org.apache.flink.api.common.typeutils.ClassRelocator: java.lang.Class patchClass(java.util.Map,org.apache.flink.api.common.typeutils.ClassRelocator$ClassRegistry)>(r3, $r4);

        return $r6;
    }

    private static java.lang.Class patchClass(java.util.Map, org.apache.flink.api.common.typeutils.ClassRelocator$ClassRegistry)
    {
        java.util.Map r0;
        org.apache.flink.api.common.typeutils.ClassRelocator$ClassRegistry r1;
        org.apache.flink.api.common.typeutils.ClassRelocator$ByteClassLoader $r6;
        java.lang.Class $r7, r19;
        java.lang.ClassLoader $r8;
        org.apache.flink.api.common.typeutils.ThreadContextClassLoader $r9;
        java.lang.String $r10;
        java.lang.Throwable $r11, $r13, $r14, r18;
        java.lang.Exception $r15;
        java.lang.RuntimeException $r16;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: org.apache.flink.api.common.typeutils.ClassRelocator$ClassRegistry;

        $r6 = new org.apache.flink.api.common.typeutils.ClassRelocator$ByteClassLoader;

        $r7 = virtualinvoke r1.<org.apache.flink.api.common.typeutils.ClassRelocator$ClassRegistry: java.lang.Class getRoot()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r6.<org.apache.flink.api.common.typeutils.ClassRelocator$ByteClassLoader: void <init>(java.lang.ClassLoader,java.util.Map,org.apache.flink.api.common.typeutils.ClassRelocator$1)>($r8, r0, null);

     label01:
        $r9 = new org.apache.flink.api.common.typeutils.ThreadContextClassLoader;

        specialinvoke $r9.<org.apache.flink.api.common.typeutils.ThreadContextClassLoader: void <init>(java.lang.ClassLoader)>($r6);

        r18 = null;

     label02:
        $r10 = virtualinvoke r1.<org.apache.flink.api.common.typeutils.ClassRelocator$ClassRegistry: java.lang.String getRootNewName()>();

        r19 = virtualinvoke $r6.<org.apache.flink.api.common.typeutils.ClassRelocator$ByteClassLoader: java.lang.Class loadClass(java.lang.String)>($r10);

     label03:
        if $r9 == null goto label05;

        goto label04;

     label04:
        virtualinvoke $r9.<org.apache.flink.api.common.typeutils.ThreadContextClassLoader: void close()>();

     label05:
        return r19;

     label06:
        $r14 := @caughtexception;

        r18 = $r14;

        throw $r14;

     label07:
        $r13 := @caughtexception;

     label08:
        if $r9 == null goto label13;

        if r18 == null goto label12;

     label09:
        virtualinvoke $r9.<org.apache.flink.api.common.typeutils.ThreadContextClassLoader: void close()>();

     label10:
        goto label13;

     label11:
        $r11 := @caughtexception;

        virtualinvoke r18.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r11);

        goto label13;

     label12:
        virtualinvoke $r9.<org.apache.flink.api.common.typeutils.ThreadContextClassLoader: void close()>();

     label13:
        throw $r13;

     label14:
        $r15 := @caughtexception;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label06 to label08 with label07;
        catch java.lang.Exception from label01 to label05 with label14;
        catch java.lang.Exception from label06 to label14 with label14;
    }
}
