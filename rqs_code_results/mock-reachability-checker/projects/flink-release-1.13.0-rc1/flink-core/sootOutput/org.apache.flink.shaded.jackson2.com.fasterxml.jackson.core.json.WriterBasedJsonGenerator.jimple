public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonGeneratorImpl
{
    protected static final int SHORT_WRITE;
    protected static final char[] HEX_CHARS;
    protected final java.io.Writer _writer;
    protected char _quoteChar;
    protected char[] _outputBuffer;
    protected int _outputHead;
    protected int _outputTail;
    protected int _outputEnd;
    protected char[] _entityBuffer;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape;
    protected char[] _copyBuffer;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r2;
        java.io.Writer r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r3 := @parameter3: java.io.Writer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,java.io.Writer,char)>(r1, i0, r2, r3, 34);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, java.io.Writer, char)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        int i0, $i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r2;
        java.io.Writer r3;
        char c1;
        char[] $r4, $r5;
        int[] $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r3 := @parameter3: java.io.Writer;

        c1 := @parameter4: char;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonGeneratorImpl: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>(r1, i0, r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer> = r3;

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] allocConcatBuffer()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i2 = lengthof $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd> = $i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar> = c1;

        if c1 == 34 goto label1;

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes(int)>(c1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes> = $r6;

     label1:
        return;
    }

    public java.lang.Object getOutputTarget()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.io.Writer $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        return $r1;
    }

    public int getOutputBuffered()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;

        i0 = $i2 - $i1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, i0);

        return $i3;
    }

    public boolean canWriteFormattedNumbers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        return 1;
    }

    public void writeFieldName(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        i0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(r1);

        if i0 != 4 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");

     label1:
        if i0 != 1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeFieldName(java.lang.String,boolean)>(r1, $z0);

        return;
    }

    public void writeFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        i0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>($r3);

        if i0 != 4 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");

     label1:
        if i0 != 1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString,boolean)>(r1, $z0);

        return;
    }

    protected final void _writeFieldName(java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1;
        boolean z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r2;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i11, $i12;
        char[] $r3, $r4, $r6;
        char $c5, $c10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writePPFieldName(java.lang.String,boolean)>(r1, z0);

        return;

     label1:
        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i2 = $i0 + 1;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        if z0 == 0 goto label3;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i12;

        $r6[$i11] = 44;

     label3:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgUnqNames>;

        if $z1 == 0 goto label4;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(java.lang.String)>(r1);

        return;

     label4:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i4;

        $c5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i3] = $c5;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(java.lang.String)>(r1);

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i7 < $i6 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label5:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i9 = $i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i9;

        $c10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r4[$i8] = $c10;

        return;
    }

    protected final void _writeFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString, boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        boolean z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r2;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, i17;
        char[] $r3, $r4, $r5, $r7, r8;
        char $c5, $c13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writePPFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString,boolean)>(r1, z0);

        return;

     label1:
        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i2 = $i0 + 1;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        if z0 == 0 goto label3;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i16 = $i15 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i16;

        $r7[$i15] = 44;

     label3:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgUnqNames>;

        if $z1 == 0 goto label4;

        r8 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: char[] asQuotedChars()>();

        $i14 = lengthof r8;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(r8, 0, $i14);

        return;

     label4:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i4;

        $c5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i3] = $c5;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i17 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: int appendQuoted(char[],int)>($r4, $i6);

        if i17 >= 0 goto label5;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeFieldNameTail(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>(r1);

        return;

     label5:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = $i7 + i17;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i8;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i10 < $i9 goto label6;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label6:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i12;

        $c13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r5[$i11] = $c13;

        return;
    }

    private final void _writeFieldNameTail(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        char[] r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        char $c5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        r2 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: char[] asQuotedChars()>();

        $i0 = lengthof r2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(r2, 0, $i0);

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i4;

        $c5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i3] = $c5;

        return;
    }

    public void writeStartArray() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r3, $r6;
        int $i0, $i1, $i2, $i3;
        char[] $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("start an array");

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r3 == null goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeStartArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label3;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        $r4[$i2] = 91;

     label3:
        return;
    }

    public void writeStartArray(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r4, $r7;
        int $i0, $i1, $i2, $i3;
        char[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("start an array");

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r4 == null goto label1;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeStartArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label3;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        $r5[$i2] = 91;

     label3:
        return;
    }

    public void writeStartArray(java.lang.Object, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r4, $r7;
        char[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("start an array");

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r4 == null goto label1;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeStartArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label3;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i4;

        $r5[$i3] = 91;

     label3:
        return;
    }

    public void writeEndArray() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1, $r5, $r9, $r13, $r14;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r2, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r3;
        java.lang.StringBuilder $r7, $r8, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: boolean inArray()>();

        if $z0 != 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current context not Array but ");

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.String typeDesc()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>($r12);

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label2;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $i4 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int getEntryCount()>();

        interfaceinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeEndArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,int)>(r0, $i4);

        goto label4;

     label2:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label3:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        $r3[$i2] = 93;

     label4:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext clearAndGetParent()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r14;

        return;
    }

    public void writeStartObject() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r3, $r6;
        int $i0, $i1, $i2, $i3;
        char[] $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("start an object");

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r3 == null goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeStartObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label3;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        $r4[$i2] = 123;

     label3:
        return;
    }

    public void writeStartObject(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r4, $r7;
        int $i0, $i1, $i2, $i3;
        char[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("start an object");

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        r2 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext(java.lang.Object)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = r2;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r4 == null goto label1;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeStartObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label3;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        $r5[$i2] = 123;

     label3:
        return;
    }

    public void writeEndObject() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1, $r5, $r9, $r13, $r14;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r2, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r3;
        java.lang.StringBuilder $r7, $r8, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: boolean inObject()>();

        if $z0 != 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current context not Object but ");

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.String typeDesc()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>($r12);

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label2;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $i4 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int getEntryCount()>();

        interfaceinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeEndObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,int)>(r0, $i4);

        goto label4;

     label2:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label3:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        $r3[$i2] = 125;

     label4:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext clearAndGetParent()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r14;

        return;
    }

    protected final void _writePPFieldName(java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1;
        boolean z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r2, $r7;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        char[] $r3, $r4;
        char $c4, $c9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeObjectEntrySeparator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void beforeObjectEntries(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

     label2:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgUnqNames>;

        if $z1 == 0 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(java.lang.String)>(r1);

        goto label6;

     label3:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label4:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        $c4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i2] = $c4;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(java.lang.String)>(r1);

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i6 < $i5 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label5:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i8;

        $c9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r4[$i7] = $c9;

     label6:
        return;
    }

    protected final void _writePPFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString, boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        boolean z0, $z1;
        char[] r2, $r4, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r3, $r8;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i11;
        char $c4, $c10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeObjectEntrySeparator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label2;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void beforeObjectEntries(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

     label2:
        r2 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: char[] asQuotedChars()>();

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgUnqNames>;

        if $z1 == 0 goto label3;

        $i11 = lengthof r2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(r2, 0, $i11);

        goto label6;

     label3:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label4:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        $c4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r4[$i2] = $c4;

        $i5 = lengthof r2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(r2, 0, $i5);

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i7 < $i6 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label5:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i9 = $i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i9;

        $c10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r5[$i8] = $c10;

     label6:
        return;
    }

    public void writeString(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        char[] $r2, $r3;
        char $c4, $c9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");

        if r1 != null goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeNull()>();

        return;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        $c4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r2[$i2] = $c4;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(java.lang.String)>(r1);

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i6 < $i5 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label3:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i8;

        $c9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i7] = $c9;

        return;
    }

    public void writeString(java.io.Reader, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.io.Reader r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, i20;
        char[] r2, $r3, $r4;
        char $c8, $c14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");

        if r1 != null goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>("null reader");

        return;

     label01:
        if i0 < 0 goto label02;

        $i19 = i0;

        goto label03;

     label02:
        $i19 = 2147483647;

     label03:
        i20 = $i19;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = $i3 + i0;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i5 < $i4 goto label04;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label04:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i7;

        $c8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i6] = $c8;

        r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _allocateCopyBuffer()>();

     label05:
        if i20 <= 0 goto label08;

        $i15 = lengthof r2;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i20, $i15);

        i2 = virtualinvoke r1.<java.io.Reader: int read(char[],int,int)>(r2, 0, i1);

        if i2 > 0 goto label06;

        goto label08;

     label06:
        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i18 = $i16 + i0;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i18 < $i17 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label07:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(char[],int,int)>(r2, 0, i2);

        i20 = i20 - i2;

        goto label05;

     label08:
        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i11 = $i9 + i0;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i11 < $i10 goto label09;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label09:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i13;

        $c14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r4[$i12] = $c14;

        if i20 <= 0 goto label10;

        if i0 < 0 goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>("Didn\'t read enough from reader");

     label10:
        return;
    }

    public void writeString(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char[] r1, $r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        char $c6, $c11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        $c6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r2[$i4] = $c6;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(char[],int,int)>(r1, i0, i1);

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i8 < $i7 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i10;

        $c11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i9] = $c11;

        return;
    }

    public void writeString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        char[] $r2, $r3, $r4;
        char $c5, $c13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i4;

        $c5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r2[$i3] = $c5;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i0 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: int appendQuoted(char[],int)>($r3, $i6);

        if i0 >= 0 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString2(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>(r1);

        return;

     label2:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = $i7 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i8;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i10 < $i9 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label3:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i12;

        $c13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r4[$i11] = $c13;

        return;
    }

    private void _writeString2(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        char[] r2, $r4, $r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11;
        java.io.Writer $r3;
        char $c6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        r2 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: char[] asQuotedChars()>();

        i0 = lengthof r2;

        if i0 >= 32 goto label2;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i1 = $i8 - $i7;

        if i0 <= i1 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r6, $i9, i0);

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i11 = $i10 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i11;

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>(r2, 0, i0);

     label3:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label4:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        $c6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r4[$i4] = $c6;

        return;
    }

    public void writeRawUTF8String(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportUnsupportedOperation()>();

        return;
    }

    public void writeUTF8String(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportUnsupportedOperation()>();

        return;
    }

    public void writeRaw(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        char[] $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i8 = $i2 - $i1;

        if i8 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i8 = $i7 - $i6;

     label1:
        if i8 < i0 goto label2;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, $r2, $i3);

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = $i4 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        goto label3;

     label2:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRawLong(java.lang.String)>(r1);

     label3:
        return;
    }

    public void writeRaw(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        char[] $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i11 = $i3 - $i2;

        if i11 >= i1 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i11 = $i10 - $i9;

     label1:
        if i11 < i1 goto label2;

        $i6 = i0 + i1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i0, $i6, $r3, $i5);

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = $i7 + i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i8;

        goto label3;

     label2:
        $i4 = i0 + i1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i4);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRawLong(java.lang.String)>($r2);

     label3:
        return;
    }

    public void writeRaw(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        int i0, $i1, $i2, $i3;
        char[] $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i0 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: int appendUnquoted(char[],int)>($r2, $i1);

        if i0 >= 0 goto label1;

        $r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>($r3);

        return;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i2 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        return;
    }

    public void writeRaw(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char[] r1, $r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.io.Writer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 >= 32 goto label2;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i2 = $i4 - $i3;

        if i1 <= i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r3, $i5, i1);

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i7 = $i6 + i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i7;

        return;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void writeRaw(char) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char c0;
        int $i1, $i2, $i3, $i4;
        char[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        c0 := @parameter0: char;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i4;

        $r1[$i3] = c0;

        return;
    }

    private void writeRawLong(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        char[] $r2, $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i0 = $i3 - $i2;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, $r2, $i4);

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i6 = $i5 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i6;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        i11 = i0;

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        i12 = $i7 - i0;

     label1:
        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if i12 <= $i8 goto label2;

        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        $i10 = i11 + i1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i11, $i10, $r4, 0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = i1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        i11 = i11 + i1;

        i12 = i12 - i1;

        goto label1;

     label2:
        $i9 = i11 + i12;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i11, $i9, $r3, 0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = i12;

        return;
    }

    public void writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        byte[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11;
        char[] $r3, $r4;
        char $c6, $c12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a binary value");

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        $c6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i4] = $c6;

        $i7 = i0 + i1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,byte[],int,int)>(r1, r2, i0, $i7);

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i9 < $i8 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i11;

        $c12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r4[$i10] = $c12;

        return;
    }

    public int writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.InputStream r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, i12;
        byte[] r3;
        char[] $r5, $r7;
        char $c6, $c11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r6, $r18, $r19;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r15;
        java.lang.Throwable $r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.InputStream;

        i0 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a binary value");

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        $c6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r5[$i4] = $c6;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        r3 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] allocBase64Buffer()>();

     label2:
        if i0 >= 0 goto label3;

        i12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[])>(r1, r2, r3);

        goto label5;

     label3:
        i1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int)>(r1, r2, r3, i0);

        if i1 <= 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too few bytes available: missing ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes (out of ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>($r15);

     label4:
        i12 = i0;

     label5:
        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseBase64Buffer(byte[])>(r3);

        goto label8;

     label6:
        $r17 := @caughtexception;

     label7:
        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseBase64Buffer(byte[])>(r3);

        throw $r17;

     label8:
        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i8 < $i7 goto label9;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label9:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i10;

        $c11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r7[$i9] = $c11;

        return i12;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void writeNumber(short) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        short s0;
        boolean $z0;
        int $i1, $i2, $i3, $i4, $i5;
        char[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        s0 := @parameter0: short;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedShort(short)>(s0);

        return;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i1 + 6;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,char[],int)>(s0, $r1, $i4);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        return;
    }

    private void _writeQuotedShort(short) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        short s0;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        char[] $r1, $r2, $r3;
        char $c6, $c11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        s0 := @parameter0: short;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i1 + 8;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        $c6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r1[$i4] = $c6;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,char[],int)>(s0, $r2, $i7);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i8;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i10;

        $c11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i9] = $c11;

        return;
    }

    public void writeNumber(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        char[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedInt(int)>(i0);

        return;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i1 + 11;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,char[],int)>(i0, $r1, $i4);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        return;
    }

    private void _writeQuotedInt(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        char[] $r1, $r2, $r3;
        char $c6, $c11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i1 + 13;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        $c6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r1[$i4] = $c6;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,char[],int)>(i0, $r2, $i7);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i8;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i10;

        $c11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i9] = $c11;

        return;
    }

    public void writeNumber(long) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        long l0;
        boolean $z0;
        int $i1, $i2, $i3, $i4, $i5;
        char[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        l0 := @parameter0: long;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedLong(long)>(l0);

        return;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i1 + 21;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputLong(long,char[],int)>(l0, $r1, $i4);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        return;
    }

    private void _writeQuotedLong(long) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        long l0;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        char[] $r1, $r2, $r3;
        char $c6, $c11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        l0 := @parameter0: long;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i1 + 23;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        $c6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r1[$i4] = $c6;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputLong(long,char[],int)>(l0, $r2, $i7);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i8;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i10;

        $c11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i9] = $c11;

        return;
    }

    public void writeNumber(java.math.BigInteger) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.math.BigInteger r1;
        boolean $z0;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.math.BigInteger;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        if r1 != null goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeNull()>();

        goto label3;

     label1:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r1.<java.math.BigInteger: java.lang.String toString()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedRaw(java.lang.String)>($r3);

        goto label3;

     label2:
        $r2 = virtualinvoke r1.<java.math.BigInteger: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>($r2);

     label3:
        return;
    }

    public void writeNumber(double) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        double d0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        d0 := @parameter0: double;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: boolean notFinite(double)>(d0);

        if $z1 == 0 goto label2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;

        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r3);

        if $z2 == 0 goto label2;

     label1:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeString(java.lang.String)>($r1);

        return;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>($r2);

        return;
    }

    public void writeNumber(float) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        float f0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        f0 := @parameter0: float;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: boolean notFinite(float)>(f0);

        if $z1 == 0 goto label2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;

        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r3);

        if $z2 == 0 goto label2;

     label1:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeString(java.lang.String)>($r1);

        return;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>($r2);

        return;
    }

    public void writeNumber(java.math.BigDecimal) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.math.BigDecimal r1;
        boolean $z0;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.math.BigDecimal;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        if r1 != null goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeNull()>();

        goto label3;

     label1:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.lang.String _asString(java.math.BigDecimal)>(r1);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedRaw(java.lang.String)>($r3);

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.lang.String _asString(java.math.BigDecimal)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>($r2);

     label3:
        return;
    }

    public void writeNumber(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        if r1 != null goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeNull()>();

        goto label3;

     label1:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedRaw(java.lang.String)>(r1);

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>(r1);

     label3:
        return;
    }

    public void writeNumber(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char[] r1;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedRaw(char[],int,int)>(r1, i0, i1);

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(r1, i0, i1);

     label2:
        return;
    }

    private void _writeQuotedRaw(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        char[] $r2, $r3;
        char $c4, $c9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        $c4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r2[$i2] = $c4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>(r1);

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i6 < $i5 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i8;

        $c9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i7] = $c9;

        return;
    }

    private void _writeQuotedRaw(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char[] r1, $r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        char $c6, $c11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i5;

        $c6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r2[$i4] = $c6;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(r1, i0, i1);

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i8 < $i7 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i10;

        $c11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;

        $r3[$i9] = $c11;

        return;
    }

    public void writeBoolean(boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        boolean z0;
        char[] r1;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a boolean value");

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i2 = $i0 + 5;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        if z0 == 0 goto label2;

        r1[i4] = 116;

        i5 = i4 + 1;

        r1[i5] = 114;

        i6 = i5 + 1;

        r1[i6] = 117;

        i7 = i6 + 1;

        r1[i7] = 101;

        goto label3;

     label2:
        r1[i4] = 102;

        i8 = i4 + 1;

        r1[i8] = 97;

        i9 = i8 + 1;

        r1[i9] = 108;

        i10 = i9 + 1;

        r1[i10] = 115;

        i7 = i10 + 1;

        r1[i7] = 101;

     label3:
        $i3 = i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        return;
    }

    public void writeNull() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a null");

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeNull()>();

        return;
    }

    protected final void _verifyValueWrite(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1, $r6;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r4, $r5;
        char[] $r7;
        char c5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        i0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r3 == null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyPrettyValueWrite(java.lang.String,int)>(r1, i0);

        return;

     label1:
        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label2;
            case 5: goto label7;
            default: goto label2;
        };

     label2:
        return;

     label3:
        c5 = 44;

        goto label8;

     label4:
        c5 = 58;

        goto label8;

     label5:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;

        if $r4 == null goto label6;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;

        $r6 = interfaceinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>($r6);

     label6:
        return;

     label7:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportCantWriteValueExpectName(java.lang.String)>(r1);

        return;

     label8:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label9;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label9:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i4;

        $r7[$i3] = c5;

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.io.Writer $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        if $r1 == null goto label1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r3.<java.io.Writer: void flush()>();

     label1:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext r1;
        char[] $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.Writer $r4, $r7, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r5, $r6, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonGeneratorImpl: void close()>();

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        if $r2 == null goto label4;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT>;

        $z3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r8);

        if $z3 == 0 goto label4;

     label1:
        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext getOutputContext()>();

        $z4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: boolean inArray()>();

        if $z4 == 0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeEndArray()>();

        goto label3;

     label2:
        $z5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: boolean inObject()>();

        if $z5 == 0 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeEndObject()>();

     label3:
        goto label1;

     label4:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = 0;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        if $r9 == null goto label7;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        $z0 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: boolean isResourceManaged()>();

        if $z0 != 0 goto label5;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET>;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r5);

        if $z1 == 0 goto label6;

     label5:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r4.<java.io.Writer: void close()>();

        goto label7;

     label6:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>;

        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r6);

        if $z2 == 0 goto label7;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r7.<java.io.Writer: void flush()>();

     label7:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _releaseBuffers()>();

        return;
    }

    protected void _releaseBuffers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r1, $r2;
        char[] r3, r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        if r3 == null goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer> = null;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseConcatBuffer(char[])>(r3);

     label1:
        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _copyBuffer>;

        if r4 == null goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _copyBuffer> = null;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseNameCopyBuffer(char[])>(r4);

     label2:
        return;
    }

    private void _writeString(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        char[] $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if i0 <= $i1 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeLongString(java.lang.String)>(r1);

        return;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i4 = $i2 + i0;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i4 <= $i3 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, $r2, $i5);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        if $r3 == null goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeStringCustom(int)>(i0);

        goto label5;

     label3:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

        if $i6 == 0 goto label4;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeStringASCII(int,int)>(i0, $i7);

        goto label5;

     label4:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString2(int)>(i0);

     label5:
        return;
    }

    private void _writeString2(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i17;
        int[] r1;
        char c3, c16;
        char[] $r2, $r4, $r5;
        java.io.Writer $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        i0 := @parameter0: int;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i1 = $i4 + i0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;

        i2 = lengthof r1;

     label1:
        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i5 >= i1 goto label7;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        c16 = $r2[$i6];

        if c16 >= i2 goto label3;

        $i9 = r1[c16];

        if $i9 == 0 goto label3;

        goto label5;

     label3:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i8;

        if $i8 < i1 goto label4;

        goto label7;

     label4:
        goto label2;

     label5:
        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;

        i17 = $i11 - $i10;

        if i17 <= 0 goto label6;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;

        virtualinvoke $r6.<java.io.Writer: void write(char[],int,int)>($r5, $i15, i17);

     label6:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i13;

        c3 = $r4[$i12];

        $i14 = r1[c3];

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _prependOrWriteCharacterEscape(char,int)>(c3, $i14);

        goto label1;

     label7:
        return;
    }

    private void _writeLongString(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.lang.String r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i8;
        char[] $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i7 = 0;

     label1:
        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        $i3 = i7 + i1;

        if $i3 <= i0 goto label2;

        $i8 = i0 - i7;

        goto label3;

     label2:
        $i8 = i1;

     label3:
        i2 = $i8;

        $i4 = i7 + $i8;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i7, $i4, $r2, 0);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        if $r3 == null goto label4;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeSegmentCustom(int)>($i8);

        goto label6;

     label4:
        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

        if $i5 == 0 goto label5;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeSegmentASCII(int,int)>($i8, $i6);

        goto label6;

     label5:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeSegment(int)>($i8);

     label6:
        i7 = i7 + i2;

        if i7 < i0 goto label1;

        return;
    }

    private void _writeSegment(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, i1, i3, $i4, $i5, i6, i7;
        int[] r1;
        char c2;
        char[] $r2, $r3, $r4;
        java.io.Writer $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;

        i1 = lengthof r1;

        i6 = 0;

        i7 = 0;

     label1:
        if i6 >= i0 goto label6;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        c2 = $r2[i6];

        if c2 >= i1 goto label3;

        $i5 = r1[c2];

        if $i5 == 0 goto label3;

        goto label4;

     label3:
        i6 = i6 + 1;

        if i6 < i0 goto label2;

        goto label4;

     label4:
        i3 = i6 - i7;

        if i3 <= 0 goto label5;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        virtualinvoke $r5.<java.io.Writer: void write(char[],int,int)>($r4, i7, i3);

        if i6 < i0 goto label5;

        goto label6;

     label5:
        i6 = i6 + 1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i4 = r1[c2];

        i7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _prependOrWriteCharacterEscape(char[],int,int,char,int)>($r3, i6, i0, c2, $i4);

        goto label1;

     label6:
        return;
    }

    private void _writeString(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char[] r1, $r5;
        int[] r2;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i18;
        char c2, c17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r3;
        java.io.Writer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: char[];

        i14 := @parameter1: int;

        i15 := @parameter2: int;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        if $r3 == null goto label01;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeStringCustom(char[],int,int)>(r1, i14, i15);

        return;

     label01:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

        if $i3 == 0 goto label02;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeStringASCII(char[],int,int,int)>(r1, i14, i15, $i13);

        return;

     label02:
        i16 = i15 + i14;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;

        i0 = lengthof r2;

     label03:
        if i14 >= i16 goto label12;

        i1 = i14;

     label04:
        c17 = r1[i14];

        if c17 >= i0 goto label05;

        $i12 = r2[c17];

        if $i12 == 0 goto label05;

        goto label07;

     label05:
        i14 = i14 + 1;

        if i14 < i16 goto label06;

        goto label07;

     label06:
        goto label04;

     label07:
        i18 = i14 - i1;

        if i18 >= 32 goto label09;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = $i6 + i18;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i8 <= $i7 goto label08;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label08:
        if i18 <= 0 goto label10;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, $r5, $i9, i18);

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i11 = $i10 + i18;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i11;

        goto label10;

     label09:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>(r1, i1, i18);

     label10:
        if i14 < i16 goto label11;

        goto label12;

     label11:
        $i4 = i14;

        i14 = i14 + 1;

        c2 = r1[$i4];

        $i5 = r2[c2];

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _appendCharacterEscape(char,int)>(c2, $i5);

        goto label03;

     label12:
        return;
    }

    private void _writeStringASCII(int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, i1, i2, i3, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        int[] r1;
        char c4;
        char[] $r2, $r3;
        java.io.Writer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i2 = $i6 + i0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;

        $i8 = lengthof r1;

        $i7 = i1 + 1;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i7);

     label1:
        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i9 >= i2 goto label7;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        c4 = $r2[$i10];

        if c4 >= i3 goto label3;

        i18 = r1[c4];

        if i18 == 0 goto label4;

        goto label5;

     label3:
        if c4 <= i1 goto label4;

        i18 = -1;

        goto label5;

     label4:
        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i12;

        if $i12 < i2 goto label2;

        goto label7;

     label5:
        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;

        i5 = $i14 - $i13;

        if i5 <= 0 goto label6;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>($r3, $i17, i5);

     label6:
        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i16 = $i15 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i16;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _prependOrWriteCharacterEscape(char,int)>(c4, i18);

        goto label1;

     label7:
        return;
    }

    private void _writeSegmentASCII(int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, i1, i2, i4, $i5, $i6, i7, i8, i9;
        int[] r1;
        char c3;
        char[] $r2, $r3, $r4;
        java.io.Writer $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;

        $i6 = lengthof r1;

        $i5 = i1 + 1;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i5);

        i7 = 0;

        i8 = 0;

        i9 = 0;

     label1:
        if i7 >= i0 goto label7;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        c3 = $r2[i7];

        if c3 >= i2 goto label3;

        i8 = r1[c3];

        if i8 == 0 goto label4;

        goto label5;

     label3:
        if c3 <= i1 goto label4;

        i8 = -1;

        goto label5;

     label4:
        i7 = i7 + 1;

        if i7 < i0 goto label2;

        goto label5;

     label5:
        i4 = i7 - i9;

        if i4 <= 0 goto label6;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        virtualinvoke $r5.<java.io.Writer: void write(char[],int,int)>($r4, i9, i4);

        if i7 < i0 goto label6;

        goto label7;

     label6:
        i7 = i7 + 1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        i9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _prependOrWriteCharacterEscape(char[],int,int,char,int)>($r3, i7, i0, c3, i8);

        goto label1;

     label7:
        return;
    }

    private void _writeStringASCII(char[], int, int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char[] r1, $r4;
        int i0, i1, i2, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16;
        int[] r2;
        char c3;
        java.io.Writer $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: char[];

        i13 := @parameter1: int;

        i14 := @parameter2: int;

        i0 := @parameter3: int;

        i15 = i14 + i13;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;

        $i6 = lengthof r2;

        $i5 = i0 + 1;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i5);

        i16 = 0;

     label01:
        if i13 >= i15 goto label10;

        i2 = i13;

     label02:
        c3 = r1[i13];

        if c3 >= i1 goto label03;

        i16 = r2[c3];

        if i16 == 0 goto label04;

        goto label05;

     label03:
        if c3 <= i0 goto label04;

        i16 = -1;

        goto label05;

     label04:
        i13 = i13 + 1;

        if i13 < i15 goto label02;

        goto label05;

     label05:
        i4 = i13 - i2;

        if i4 >= 32 goto label07;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i9 = $i7 + i4;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i9 <= $i8 goto label06;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label06:
        if i4 <= 0 goto label08;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i2, $r4, $i10, i4);

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i12 = $i11 + i4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i12;

        goto label08;

     label07:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>(r1, i2, i4);

     label08:
        if i13 < i15 goto label09;

        goto label10;

     label09:
        i13 = i13 + 1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _appendCharacterEscape(char,int)>(c3, i16);

        goto label01;

     label10:
        return;
    }

    private void _writeStringCustom(int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, i1, i2, i3, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, $i19, $i20;
        int[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes r2;
        char c4;
        char[] $r3, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r4;
        java.io.Writer $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        i0 := @parameter0: int;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i1 = $i6 + i0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

        if $i7 >= 1 goto label01;

        $i16 = 65535;

        goto label02;

     label01:
        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

     label02:
        i2 = $i16;

        $i9 = lengthof r1;

        $i8 = $i16 + 1;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i8);

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

     label03:
        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i17 >= i1 goto label10;

     label04:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        c4 = $r3[$i10];

        if c4 >= i3 goto label05;

        i18 = r1[c4];

        if i18 == 0 goto label07;

        goto label08;

     label05:
        if c4 <= i2 goto label06;

        i18 = -1;

        goto label08;

     label06:
        $r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(c4);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape> = $r4;

        if $r4 == null goto label07;

        i18 = -2;

        goto label08;

     label07:
        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i12;

        if $i12 < i1 goto label04;

        goto label10;

     label08:
        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;

        i5 = $i19 - $i20;

        if i5 <= 0 goto label09;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;

        virtualinvoke $r6.<java.io.Writer: void write(char[],int,int)>($r5, $i15, i5);

     label09:
        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i14;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _prependOrWriteCharacterEscape(char,int)>(c4, i18);

        goto label03;

     label10:
        return;
    }

    private void _writeSegmentCustom(int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, i1, i2, i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        int[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes r2;
        char c3;
        char[] $r3, $r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r4;
        java.io.Writer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

        if $i5 >= 1 goto label01;

        $i8 = 65535;

        goto label02;

     label01:
        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

     label02:
        i1 = $i8;

        $i7 = lengthof r1;

        $i6 = $i8 + 1;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        i9 = 0;

        i10 = 0;

        i11 = 0;

     label03:
        if i9 >= i0 goto label10;

     label04:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        c3 = $r3[i9];

        if c3 >= i2 goto label05;

        i10 = r1[c3];

        if i10 == 0 goto label07;

        goto label08;

     label05:
        if c3 <= i1 goto label06;

        i10 = -1;

        goto label08;

     label06:
        $r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(c3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape> = $r4;

        if $r4 == null goto label07;

        i10 = -2;

        goto label08;

     label07:
        i9 = i9 + 1;

        if i9 < i0 goto label04;

        goto label08;

     label08:
        i4 = i9 - i11;

        if i4 <= 0 goto label09;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        virtualinvoke $r7.<java.io.Writer: void write(char[],int,int)>($r6, i11, i4);

        if i9 < i0 goto label09;

        goto label10;

     label09:
        i9 = i9 + 1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        i11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _prependOrWriteCharacterEscape(char[],int,int,char,int)>($r5, i9, i0, c3, i10);

        goto label03;

     label10:
        return;
    }

    private void _writeStringCustom(char[], int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char[] r1, $r6;
        int[] r2;
        int i0, i1, i2, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, $i17, i18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes r3;
        char c3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r4;
        java.io.Writer $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: char[];

        i14 := @parameter1: int;

        i15 := @parameter2: int;

        i16 = i15 + i14;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

        if $i5 >= 1 goto label01;

        $i17 = 65535;

        goto label02;

     label01:
        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;

     label02:
        i0 = $i17;

        $i7 = lengthof r2;

        $i6 = $i17 + 1;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        i18 = 0;

     label03:
        if i14 >= i16 goto label13;

        i2 = i14;

     label04:
        c3 = r1[i14];

        if c3 >= i1 goto label05;

        i18 = r2[c3];

        if i18 == 0 goto label07;

        goto label08;

     label05:
        if c3 <= i0 goto label06;

        i18 = -1;

        goto label08;

     label06:
        $r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(c3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape> = $r4;

        if $r4 == null goto label07;

        i18 = -2;

        goto label08;

     label07:
        i14 = i14 + 1;

        if i14 < i16 goto label04;

        goto label08;

     label08:
        i4 = i14 - i2;

        if i4 >= 32 goto label10;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i10 = $i8 + i4;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i10 <= $i9 goto label09;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label09:
        if i4 <= 0 goto label11;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i2, $r6, $i11, i4);

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i13 = $i12 + i4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i13;

        goto label11;

     label10:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r5.<java.io.Writer: void write(char[],int,int)>(r1, i2, i4);

     label11:
        if i14 < i16 goto label12;

        goto label13;

     label12:
        i14 = i14 + 1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _appendCharacterEscape(char,int)>(c3, i18);

        goto label03;

     label13:
        return;
    }

    protected final void _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        byte[] r2;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i11, $i12, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35;
        byte $b6, $b9, $b13, $b14, $b16;
        char[] $r3, $r4, $r5, $r6;
        short $s10, $s15, $s17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: byte[];

        i26 := @parameter2: int;

        i0 := @parameter3: int;

        i1 = i0 - 3;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        i2 = $i3 - 6;

        $i4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i27 = $i4 >> 2;

     label1:
        if i26 > i1 goto label4;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i12 <= i2 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label2:
        i28 = i26 + 1;

        $b13 = r2[i26];

        i29 = $b13 << 8;

        i30 = i28 + 1;

        $b14 = r2[i28];

        $s15 = $b14 & 255;

        i31 = i29 | $s15;

        $i18 = i31 << 8;

        i26 = i30 + 1;

        $b16 = r2[i30];

        $s17 = $b16 & 255;

        i32 = $i18 | $s17;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i20 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Chunk(int,char[],int)>(i32, $r4, $i19);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i20;

        i27 = i27 + -1;

        if i27 > 0 goto label3;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i22 = $i21 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i22;

        $r5[$i21] = 92;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i24 = $i23 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i24;

        $r6[$i23] = 110;

        $i25 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i27 = $i25 >> 2;

     label3:
        goto label1;

     label4:
        i33 = i0 - i26;

        if i33 <= 0 goto label7;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i5 <= i2 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label5:
        i34 = i26 + 1;

        $b6 = r2[i26];

        i35 = $b6 << 16;

        if i33 != 2 goto label6;

        $b9 = r2[i34];

        $s10 = $b9 & 255;

        $i11 = $s10 << 8;

        i35 = i35 | $i11;

     label6:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Partial(int,int,char[],int)>(i35, i33, $r3, $i7);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i8;

     label7:
        return;
    }

    protected final int _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.InputStream r2;
        byte[] r3;
        int i0, $i1, $i2, $i3, $i5, $i6, $i9, $i10, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i36, i37;
        byte $b4, $b7, $b11, $b12, $b14, b38;
        char[] $r4, $r5, $r6, $r7;
        short $s8, $s13, $s15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: byte[];

        i24 := @parameter3: int;

        i25 = 0;

        i26 = 0;

        i27 = -3;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        i0 = $i1 - 6;

        $i2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i28 = $i2 >> 2;

     label01:
        if i24 <= 2 goto label06;

        if i25 <= i27 goto label03;

        i26 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _readMore(java.io.InputStream,byte[],int,int,int)>(r2, r3, i25, i26, i24);

        i25 = 0;

        if i26 >= 3 goto label02;

        goto label06;

     label02:
        i27 = i26 - 3;

     label03:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i10 <= i0 goto label04;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label04:
        i29 = i25 + 1;

        $b11 = r3[i25];

        i30 = $b11 << 8;

        i31 = i29 + 1;

        $b12 = r3[i29];

        $s13 = $b12 & 255;

        i32 = i30 | $s13;

        $i16 = i32 << 8;

        i25 = i31 + 1;

        $b14 = r3[i31];

        $s15 = $b14 & 255;

        i33 = $i16 | $s15;

        i24 = i24 + -3;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i18 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Chunk(int,char[],int)>(i33, $r5, $i17);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i18;

        i28 = i28 + -1;

        if i28 > 0 goto label05;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i20 = $i19 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i20;

        $r6[$i19] = 92;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i22 = $i21 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i22;

        $r7[$i21] = 110;

        $i23 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i28 = $i23 >> 2;

     label05:
        goto label01;

     label06:
        if i24 <= 0 goto label10;

        i34 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _readMore(java.io.InputStream,byte[],int,int,int)>(r2, r3, i25, i26, i24);

        if i34 <= 0 goto label10;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i3 <= i0 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label07:
        i36 = 0 + 1;

        $b4 = r3[0];

        i37 = $b4 << 16;

        if i36 >= i34 goto label08;

        $b7 = r3[i36];

        $s8 = $b7 & 255;

        $i9 = $s8 << 8;

        i37 = i37 | $i9;

        b38 = 2;

        goto label09;

     label08:
        b38 = 1;

     label09:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Partial(int,int,char[],int)>(i37, b38, $r4, $i5);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i6;

        i24 = i24 - b38;

     label10:
        return i24;
    }

    protected final int _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[]) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.InputStream r2;
        byte[] r3;
        int i0, $i1, $i2, $i3, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36;
        byte $b4, $b5, $b7, $b19, $b22, b37;
        short $s6, $s8, $s23;
        char[] $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: byte[];

        i25 = 0;

        i26 = 0;

        i27 = -3;

        i28 = 0;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        i0 = $i1 - 6;

        $i2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i29 = $i2 >> 2;

     label1:
        if i25 <= i27 goto label3;

        $i17 = lengthof r3;

        i26 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _readMore(java.io.InputStream,byte[],int,int,int)>(r2, r3, i25, i26, $i17);

        i25 = 0;

        if i26 >= 3 goto label2;

        goto label6;

     label2:
        i27 = i26 - 3;

     label3:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i3 <= i0 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label4:
        i30 = i25 + 1;

        $b4 = r3[i25];

        i31 = $b4 << 8;

        i32 = i30 + 1;

        $b5 = r3[i30];

        $s6 = $b5 & 255;

        i33 = i31 | $s6;

        $i9 = i33 << 8;

        i25 = i32 + 1;

        $b7 = r3[i32];

        $s8 = $b7 & 255;

        i34 = $i9 | $s8;

        i28 = i28 + 3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Chunk(int,char[],int)>(i34, $r4, $i10);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i11;

        i29 = i29 + -1;

        if i29 > 0 goto label5;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i13;

        $r5[$i12] = 92;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i15 = $i14 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i15;

        $r6[$i14] = 110;

        $i16 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i29 = $i16 >> 2;

     label5:
        goto label1;

     label6:
        if 0 >= i26 goto label9;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i18 <= i0 goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label7:
        i35 = 0 + 1;

        $b19 = r3[0];

        i36 = $b19 << 16;

        b37 = 1;

        if i35 >= i26 goto label8;

        $b22 = r3[i35];

        $s23 = $b22 & 255;

        $i24 = $s23 << 8;

        i36 = i36 | $i24;

        b37 = 2;

     label8:
        i28 = i28 + b37;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i21 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Partial(int,int,char[],int)>(i36, b37, $r7, $i20);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i21;

     label9:
        return i28;
    }

    private int _readMore(java.io.InputStream, byte[], int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        java.io.InputStream r1;
        byte[] r2;
        int i0, i1, $i2, $i3, $i4, i6, i7, i8, i9, i10, i11;
        byte $b5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

        i6 := @parameter2: int;

        i7 := @parameter3: int;

        i8 := @parameter4: int;

        i9 = 0;

     label1:
        if i6 >= i7 goto label2;

        $i3 = i9;

        i9 = i9 + 1;

        $i4 = i6;

        i6 = i6 + 1;

        $b5 = r2[$i4];

        r2[$i3] = $b5;

        goto label1;

     label2:
        i10 = i9;

        $i2 = lengthof r2;

        i11 = staticinvoke <java.lang.Math: int min(int,int)>(i8, $i2);

     label3:
        i0 = i11 - i10;

        if i0 != 0 goto label4;

        goto label6;

     label4:
        i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, i10, i0);

        if i1 >= 0 goto label5;

        return i10;

     label5:
        i10 = i10 + i1;

        if i10 < 3 goto label3;

     label6:
        return i10;
    }

    private final void _writeNull() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char[] r1;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i2 = $i0 + 4;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        r1[i4] = 110;

        i5 = i4 + 1;

        r1[i5] = 117;

        i6 = i5 + 1;

        r1[i6] = 108;

        i7 = i6 + 1;

        r1[i7] = 108;

        $i3 = i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i3;

        return;
    }

    private void _prependOrWriteCharacterEscape(char, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i19, $i30, $i31, $i33, i36, i37, i38, i39, i41, i42, i43, i44, i45, i48, i49;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r1, $r2, $r6;
        java.io.Writer $r3, $r9, $r14, $r19;
        char[] $r4, $r7, $r8, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r20, $r21, r22, r23, r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r5;
        char $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c20, $c21, $c22, $c23, $c24, $c25, $c26, $c27, $c28, $c29, $c32, $c34, c35, c40, c46, c47;
        java.lang.String r25;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        c35 := @parameter0: char;

        i0 := @parameter1: int;

        if i0 < 0 goto label03;

        $i30 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i30 < 2 goto label01;

        $i33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i36 = $i33 - 2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = i36;

        $r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        i37 = i36 + 1;

        $r20[i36] = 92;

        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $c34 = (char) i0;

        $r21[i37] = $c34;

        return;

     label01:
        r22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _entityBuffer>;

        if r22 != null goto label02;

        r22 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _allocateEntityBuffer()>();

     label02:
        $i31 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = $i31;

        $c32 = (char) i0;

        r22[1] = $c32;

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r19.<java.io.Writer: void write(char[],int,int)>(r22, 0, 2);

        return;

     label03:
        if i0 == -2 goto label10;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i4 < 6 goto label06;

        r23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i38 = $i19 - 6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = i38;

        r23[i38] = 92;

        i39 = i38 + 1;

        r23[i39] = 117;

        if c35 <= 255 goto label04;

        $c24 = c35 >> 8;

        c40 = $c24 & 255;

        i41 = i39 + 1;

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c25 = c40 >> 4;

        $c26 = $r17[$c25];

        r23[i41] = $c26;

        i42 = i41 + 1;

        $r18 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c27 = c40 & 15;

        $c28 = $r18[$c27];

        r23[i42] = $c28;

        $c29 = c35 & 255;

        c35 = (char) $c29;

        goto label05;

     label04:
        i43 = i39 + 1;

        r23[i43] = 48;

        i42 = i43 + 1;

        r23[i42] = 48;

     label05:
        i44 = i42 + 1;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c20 = c35 >> 4;

        $c21 = $r15[$c20];

        r23[i44] = $c21;

        i45 = i44 + 1;

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c22 = c35 & 15;

        $c23 = $r16[$c22];

        r23[i45] = $c23;

        return;

     label06:
        r24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _entityBuffer>;

        if r24 != null goto label07;

        r24 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _allocateEntityBuffer()>();

     label07:
        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = $i5;

        if c35 <= 255 goto label08;

        $c10 = c35 >> 8;

        c46 = $c10 & 255;

        c47 = c35 & 255;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c11 = c46 >> 4;

        $c12 = $r10[$c11];

        r24[10] = $c12;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c13 = c46 & 15;

        $c14 = $r11[$c13];

        r24[11] = $c14;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c15 = c47 >> 4;

        $c16 = $r12[$c15];

        r24[12] = $c16;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c17 = c47 & 15;

        $c18 = $r13[$c17];

        r24[13] = $c18;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r14.<java.io.Writer: void write(char[],int,int)>(r24, 8, 6);

        goto label09;

     label08:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c6 = c35 >> 4;

        $c7 = $r7[$c6];

        r24[6] = $c7;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c8 = c35 & 15;

        $c9 = $r8[$c8];

        r24[7] = $c9;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r9.<java.io.Writer: void write(char[],int,int)>(r24, 2, 6);

     label09:
        return;

     label10:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape>;

        if $r1 != null goto label11;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(c35);

        r25 = interfaceinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        goto label12;

     label11:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape>;

        r25 = interfaceinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape> = null;

     label12:
        i48 = virtualinvoke r25.<java.lang.String: int length()>();

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        if $i1 < i48 goto label13;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        i49 = $i3 - i48;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = i49;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        virtualinvoke r25.<java.lang.String: void getChars(int,int,char[],int)>(0, i48, $r4, i49);

        return;

     label13:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = $i2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>(r25);

        return;
    }

    private int _prependOrWriteCharacterEscape(char[], int, int, char, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char[] r1, $r7, $r8, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, r20, r21;
        int i0, i1, $i3, $i29, i30, i32, i33, i34, i36, i37, i38, i39, i41;
        char c2, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c22, $c23, $c24, $c25, $c26, $c27, $c28, c31, c35, c40;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r2, $r3, $r6;
        java.io.Writer $r4, $r9, $r14, $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r5;
        java.lang.String r22;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 := @parameter0: char[];

        i30 := @parameter1: int;

        i0 := @parameter2: int;

        c31 := @parameter3: char;

        i1 := @parameter4: int;

        if i1 < 0 goto label04;

        if i30 <= 1 goto label01;

        if i30 >= i0 goto label01;

        i30 = i30 + -2;

        r1[i30] = 92;

        $i29 = i30 + 1;

        $c28 = (char) i1;

        r1[$i29] = $c28;

        goto label03;

     label01:
        r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _entityBuffer>;

        if r20 != null goto label02;

        r20 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _allocateEntityBuffer()>();

     label02:
        $c27 = (char) i1;

        r20[1] = $c27;

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r19.<java.io.Writer: void write(char[],int,int)>(r20, 0, 2);

     label03:
        return i30;

     label04:
        if i1 == -2 goto label11;

        if i30 <= 5 goto label07;

        if i30 >= i0 goto label07;

        i32 = i30 + -6;

        i33 = i32 + 1;

        r1[i32] = 92;

        i34 = i33 + 1;

        r1[i33] = 117;

        if c31 <= 255 goto label05;

        $c21 = c31 >> 8;

        c35 = $c21 & 255;

        i36 = i34 + 1;

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c22 = c35 >> 4;

        $c23 = $r17[$c22];

        r1[i34] = $c23;

        i37 = i36 + 1;

        $r18 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c24 = c35 & 15;

        $c25 = $r18[$c24];

        r1[i36] = $c25;

        $c26 = c31 & 255;

        c31 = (char) $c26;

        goto label06;

     label05:
        i38 = i34 + 1;

        r1[i34] = 48;

        i37 = i38 + 1;

        r1[i38] = 48;

     label06:
        i39 = i37 + 1;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c17 = c31 >> 4;

        $c18 = $r15[$c17];

        r1[i37] = $c18;

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c19 = c31 & 15;

        $c20 = $r16[$c19];

        r1[i39] = $c20;

        i30 = i39 + -5;

        goto label10;

     label07:
        r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _entityBuffer>;

        if r21 != null goto label08;

        r21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _allocateEntityBuffer()>();

     label08:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = $i3;

        if c31 <= 255 goto label09;

        $c8 = c31 >> 8;

        c40 = $c8 & 255;

        c2 = c31 & 255;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c9 = c40 >> 4;

        $c10 = $r10[$c9];

        r21[10] = $c10;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c11 = c40 & 15;

        $c12 = $r11[$c11];

        r21[11] = $c12;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c13 = c2 >> 4;

        $c14 = $r12[$c13];

        r21[12] = $c14;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c15 = c2 & 15;

        $c16 = $r13[$c15];

        r21[13] = $c16;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r14.<java.io.Writer: void write(char[],int,int)>(r21, 8, 6);

        goto label10;

     label09:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c4 = c31 >> 4;

        $c5 = $r7[$c4];

        r21[6] = $c5;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c6 = c31 & 15;

        $c7 = $r8[$c6];

        r21[7] = $c7;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r9.<java.io.Writer: void write(char[],int,int)>(r21, 2, 6);

     label10:
        return i30;

     label11:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape>;

        if $r2 != null goto label12;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(c31);

        r22 = interfaceinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        goto label13;

     label12:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape>;

        r22 = interfaceinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape> = null;

     label13:
        i41 = virtualinvoke r22.<java.lang.String: int length()>();

        if i30 < i41 goto label14;

        if i30 >= i0 goto label14;

        i30 = i30 - i41;

        virtualinvoke r22.<java.lang.String: void getChars(int,int,char[],int)>(0, i41, r1, i30);

        goto label15;

     label14:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>(r22);

     label15:
        return i30;
    }

    private void _appendCharacterEscape(char, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i31, i32, i33, i34, i35, i36, i37, i38, i39;
        char c1, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c29, c30;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r1, $r2, $r7;
        char[] $r3, $r8, $r9, $r10, $r11, $r12, $r13, r16;
        java.io.Writer $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r6;
        java.lang.String r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        c30 := @parameter0: char;

        i0 := @parameter1: int;

        if i0 < 0 goto label2;

        $i22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i24 = $i22 + 2;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i24 <= $i23 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label1:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i26 = $i25 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i26;

        $r12[$i25] = 92;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i28 = $i27 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i28;

        $c29 = (char) i0;

        $r13[$i27] = $c29;

        return;

     label2:
        if i0 == -2 goto label6;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i11 = $i9 + 5;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i11 < $i10 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

     label3:
        i31 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        i32 = i31 + 1;

        r16[i31] = 92;

        i33 = i32 + 1;

        r16[i32] = 117;

        if c30 <= 255 goto label4;

        $c16 = c30 >> 8;

        c1 = $c16 & 255;

        i34 = i33 + 1;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c17 = c1 >> 4;

        $c18 = $r10[$c17];

        r16[i33] = $c18;

        i35 = i34 + 1;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c19 = c1 & 15;

        $c20 = $r11[$c19];

        r16[i34] = $c20;

        $c21 = c30 & 255;

        c30 = (char) $c21;

        goto label5;

     label4:
        i36 = i33 + 1;

        r16[i33] = 48;

        i35 = i36 + 1;

        r16[i36] = 48;

     label5:
        i37 = i35 + 1;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c12 = c30 >> 4;

        $c13 = $r8[$c12];

        r16[i35] = $c13;

        i38 = i37 + 1;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS>;

        $c14 = c30 & 15;

        $c15 = $r9[$c14];

        r16[i37] = $c15;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = i38;

        return;

     label6:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape>;

        if $r1 != null goto label7;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(c30);

        r17 = interfaceinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        goto label8;

     label7:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape>;

        r17 = interfaceinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _currentEscape> = null;

     label8:
        i39 = virtualinvoke r17.<java.lang.String: int length()>();

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i4 = $i2 + i39;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if $i4 <= $i3 goto label9;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;

        if i39 <= $i8 goto label9;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>(r17);

        return;

     label9:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        virtualinvoke r17.<java.lang.String: void getChars(int,int,char[],int)>(0, i39, $r3, $i5);

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i7 = $i6 + i39;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = $i7;

        return;
    }

    private char[] _allocateEntityBuffer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char[] r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        r1 = newarray (char)[14];

        r1[0] = 92;

        r1[2] = 92;

        r1[3] = 117;

        r1[4] = 48;

        r1[5] = 48;

        r1[8] = 92;

        r1[9] = 117;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _entityBuffer> = r1;

        return r1;
    }

    private char[] _allocateCopyBuffer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        char[] $r1, $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _copyBuffer>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] allocNameCopyBuffer(int)>(2000);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _copyBuffer> = $r4;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _copyBuffer>;

        return $r2;
    }

    protected void _flushBuffer() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator r0;
        int i0, i1, $i2, $i3;
        char[] $r1;
        java.io.Writer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;

        i0 = $i3 - $i2;

        if i0 <= 0 goto label1;

        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = 0;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>($r1, i1, i0);

     label1:
        return;
    }

    static void <clinit>()
    {
        char[] $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int SHORT_WRITE> = 32;

        $r0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: char[] copyHexChars()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS> = $r0;

        return;
    }
}
