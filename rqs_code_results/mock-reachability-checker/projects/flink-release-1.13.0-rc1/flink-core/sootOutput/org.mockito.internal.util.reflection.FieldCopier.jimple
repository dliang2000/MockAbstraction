public class org.mockito.internal.util.reflection.FieldCopier extends java.lang.Object
{

    public void <init>()
    {
        org.mockito.internal.util.reflection.FieldCopier r0;

        r0 := @this: org.mockito.internal.util.reflection.FieldCopier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void copyValue(java.lang.Object, java.lang.Object, java.lang.reflect.Field) throws java.lang.IllegalAccessException
    {
        org.mockito.internal.util.reflection.FieldCopier r0;
        java.lang.Object r1, r2, r4;
        java.lang.reflect.Field r3;

        r0 := @this: org.mockito.internal.util.reflection.FieldCopier;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.reflect.Field;

        r4 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r4);

        return;
    }
}
