public class org.slf4j.helpers.SubstituteLogger extends java.lang.Object implements org.slf4j.Logger
{
    private final java.lang.String name;
    private volatile org.slf4j.Logger _delegate;
    private java.lang.Boolean delegateEventAware;
    private java.lang.reflect.Method logMethodCache;
    private org.slf4j.event.EventRecodingLogger eventRecodingLogger;
    private java.util.List eventList;

    public void <init>(java.lang.String, java.util.List)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.util.List r2;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.slf4j.helpers.SubstituteLogger: java.lang.String name> = r1;

        r0.<org.slf4j.helpers.SubstituteLogger: java.util.List eventList> = r2;

        return;
    }

    public java.lang.String getName()
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String $r1;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        $r1 = r0.<org.slf4j.helpers.SubstituteLogger: java.lang.String name>;

        return $r1;
    }

    public boolean isTraceEnabled()
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Logger $r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        $r1 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isTraceEnabled()>();

        return $z0;
    }

    public void trace(java.lang.String)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        org.slf4j.Logger $r2;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void trace(java.lang.String)>(r1);

        return;
    }

    public void trace(java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public transient void trace(java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    public void trace(java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Throwable r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    public boolean isTraceEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        org.slf4j.Logger $r2;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        $r2 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isTraceEnabled(org.slf4j.Marker)>(r1);

        return $z0;
    }

    public void trace(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String)>(r1, r2);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3, r4;
        org.slf4j.Logger $r5;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4);

        return;
    }

    public transient void trace(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    public void trace(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Throwable r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>(r1, r2, r3);

        return;
    }

    public boolean isDebugEnabled()
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Logger $r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        $r1 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        return $z0;
    }

    public void debug(java.lang.String)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        org.slf4j.Logger $r2;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>(r1);

        return;
    }

    public void debug(java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public transient void debug(java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    public void debug(java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Throwable r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    public boolean isDebugEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        org.slf4j.Logger $r2;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        $r2 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled(org.slf4j.Marker)>(r1);

        return $z0;
    }

    public void debug(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String)>(r1, r2);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3, r4;
        org.slf4j.Logger $r5;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4);

        return;
    }

    public transient void debug(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    public void debug(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Throwable r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>(r1, r2, r3);

        return;
    }

    public boolean isInfoEnabled()
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Logger $r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        $r1 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isInfoEnabled()>();

        return $z0;
    }

    public void info(java.lang.String)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        org.slf4j.Logger $r2;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>(r1);

        return;
    }

    public void info(java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public transient void info(java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    public void info(java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Throwable r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    public boolean isInfoEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        org.slf4j.Logger $r2;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        $r2 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isInfoEnabled(org.slf4j.Marker)>(r1);

        return $z0;
    }

    public void info(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String)>(r1, r2);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3, r4;
        org.slf4j.Logger $r5;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4);

        return;
    }

    public transient void info(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    public void info(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Throwable r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>(r1, r2, r3);

        return;
    }

    public boolean isWarnEnabled()
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Logger $r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        $r1 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isWarnEnabled()>();

        return $z0;
    }

    public void warn(java.lang.String)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        org.slf4j.Logger $r2;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String)>(r1);

        return;
    }

    public void warn(java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public transient void warn(java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    public void warn(java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Throwable r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    public boolean isWarnEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        org.slf4j.Logger $r2;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        $r2 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isWarnEnabled(org.slf4j.Marker)>(r1);

        return $z0;
    }

    public void warn(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String)>(r1, r2);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3, r4;
        org.slf4j.Logger $r5;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4);

        return;
    }

    public transient void warn(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    public void warn(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Throwable r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>(r1, r2, r3);

        return;
    }

    public boolean isErrorEnabled()
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Logger $r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        $r1 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isErrorEnabled()>();

        return $z0;
    }

    public void error(java.lang.String)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        org.slf4j.Logger $r2;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String)>(r1);

        return;
    }

    public void error(java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public transient void error(java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>(r1, r2);

        return;
    }

    public void error(java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String r1;
        java.lang.Throwable r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    public boolean isErrorEnabled(org.slf4j.Marker)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        org.slf4j.Logger $r2;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        $r2 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isErrorEnabled(org.slf4j.Marker)>(r1);

        return $z0;
    }

    public void error(org.slf4j.Marker, java.lang.String)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        org.slf4j.Logger $r3;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void error(org.slf4j.Marker,java.lang.String)>(r1, r2);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object)>(r1, r2, r3);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object r3, r4;
        org.slf4j.Logger $r5;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4);

        return;
    }

    public transient void error(org.slf4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void error(org.slf4j.Marker,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    public void error(org.slf4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Marker r1;
        java.lang.String r2;
        java.lang.Throwable r3;
        org.slf4j.Logger $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>(r1, r2, r3);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.slf4j.helpers.SubstituteLogger r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (org.slf4j.helpers.SubstituteLogger) r1;

        $r6 = r0.<org.slf4j.helpers.SubstituteLogger: java.lang.String name>;

        $r5 = r2.<org.slf4j.helpers.SubstituteLogger: java.lang.String name>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        $r1 = r0.<org.slf4j.helpers.SubstituteLogger: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    org.slf4j.Logger delegate()
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Logger $r1, $r2;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        $r1 = r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger _delegate>;

        if $r1 == null goto label1;

        $r2 = r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger _delegate>;

        goto label2;

     label1:
        $r2 = specialinvoke r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger getEventRecordingLogger()>();

     label2:
        return $r2;
    }

    private org.slf4j.Logger getEventRecordingLogger()
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.event.EventRecodingLogger $r1, $r2, $r3;
        java.util.List $r4;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        $r1 = r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.event.EventRecodingLogger eventRecodingLogger>;

        if $r1 != null goto label1;

        $r3 = new org.slf4j.event.EventRecodingLogger;

        $r4 = r0.<org.slf4j.helpers.SubstituteLogger: java.util.List eventList>;

        specialinvoke $r3.<org.slf4j.event.EventRecodingLogger: void <init>(org.slf4j.helpers.SubstituteLogger,java.util.List)>(r0, $r4);

        r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.event.EventRecodingLogger eventRecodingLogger> = $r3;

     label1:
        $r2 = r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.event.EventRecodingLogger eventRecodingLogger>;

        return $r2;
    }

    public void setDelegate(org.slf4j.Logger)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Logger r1;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.Logger;

        r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger _delegate> = r1;

        return;
    }

    public boolean isDelegateEventAware()
    {
        org.slf4j.helpers.SubstituteLogger r0;
        java.lang.Boolean $r2, $r7, $r8, $r9, $r11;
        org.slf4j.Logger $r3;
        java.lang.Class $r4;
        java.lang.Class[] $r5;
        java.lang.reflect.Method $r6;
        boolean $z0, $z1;
        java.lang.NoSuchMethodException $r10;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        $r2 = r0.<org.slf4j.helpers.SubstituteLogger: java.lang.Boolean delegateEventAware>;

        if $r2 == null goto label1;

        $r9 = r0.<org.slf4j.helpers.SubstituteLogger: java.lang.Boolean delegateEventAware>;

        $z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label1:
        $r3 = r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger _delegate>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = newarray (java.lang.Class)[1];

        $r5[0] = class "Lorg/slf4j/event/LoggingEvent;";

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("log", $r5);

        r0.<org.slf4j.helpers.SubstituteLogger: java.lang.reflect.Method logMethodCache> = $r6;

        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        r0.<org.slf4j.helpers.SubstituteLogger: java.lang.Boolean delegateEventAware> = $r7;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        r0.<org.slf4j.helpers.SubstituteLogger: java.lang.Boolean delegateEventAware> = $r11;

     label4:
        $r8 = r0.<org.slf4j.helpers.SubstituteLogger: java.lang.Boolean delegateEventAware>;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public void log(org.slf4j.event.LoggingEvent)
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.event.LoggingEvent r1;
        boolean $z0;
        java.lang.Object[] $r2;
        org.slf4j.Logger $r3;
        java.lang.reflect.Method $r4;
        java.lang.IllegalAccessException $r6;
        java.lang.reflect.InvocationTargetException $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        r1 := @parameter0: org.slf4j.event.LoggingEvent;

        $z0 = virtualinvoke r0.<org.slf4j.helpers.SubstituteLogger: boolean isDelegateEventAware()>();

        if $z0 == 0 goto label6;

     label1:
        $r4 = r0.<org.slf4j.helpers.SubstituteLogger: java.lang.reflect.Method logMethodCache>;

        $r3 = r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger _delegate>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r2);

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

        goto label6;

     label4:
        $r8 := @caughtexception;

        goto label6;

     label5:
        $r7 := @caughtexception;

     label6:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public boolean isDelegateNOP()
    {
        org.slf4j.helpers.SubstituteLogger r0;
        org.slf4j.Logger $r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.SubstituteLogger;

        $r1 = r0.<org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger _delegate>;

        $z0 = $r1 instanceof org.slf4j.helpers.NOPLogger;

        return $z0;
    }
}
