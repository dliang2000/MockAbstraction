public class org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory extends java.lang.Object implements org.powermock.core.transformers.MockTransformerChainFactory
{
    private static final org.powermock.core.transformers.TransformStrategy DEFAULT;

    public void <init>()
    {
        org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory r0;

        r0 := @this: org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.powermock.core.transformers.MockTransformerChain createDefaultChain()
    {
        org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory r0;
        org.powermock.core.transformers.TransformStrategy $r1;
        org.powermock.core.transformers.MockTransformerChain $r2;

        r0 := @this: org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory;

        $r1 = <org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory: org.powermock.core.transformers.TransformStrategy DEFAULT>;

        $r2 = virtualinvoke r0.<org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory: org.powermock.core.transformers.MockTransformerChain createDefaultChain(org.powermock.core.transformers.TransformStrategy)>($r1);

        return $r2;
    }

    public org.powermock.core.transformers.MockTransformerChain createDefaultChain(org.powermock.core.transformers.TransformStrategy)
    {
        org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory r0;
        org.powermock.core.transformers.TransformStrategy r1;
        org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder $r2;
        org.powermock.core.transformers.MockTransformerChain $r3;

        r0 := @this: org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory;

        r1 := @parameter0: org.powermock.core.transformers.TransformStrategy;

        $r2 = specialinvoke r0.<org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder createDefaultChainBuilder(org.powermock.core.transformers.TransformStrategy)>(r1);

        $r3 = virtualinvoke $r2.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.MockTransformerChain build()>();

        return $r3;
    }

    public org.powermock.core.transformers.MockTransformerChain createDefaultChain(java.util.List)
    {
        org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory r0;
        java.util.List r1;
        org.powermock.core.transformers.TransformStrategy $r2;
        org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder $r3, $r4;
        org.powermock.core.transformers.MockTransformerChain $r5;

        r0 := @this: org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory;

        r1 := @parameter0: java.util.List;

        $r2 = <org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory: org.powermock.core.transformers.TransformStrategy DEFAULT>;

        $r3 = specialinvoke r0.<org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder createDefaultChainBuilder(org.powermock.core.transformers.TransformStrategy)>($r2);

        $r4 = virtualinvoke $r3.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder append(java.util.List)>(r1);

        $r5 = virtualinvoke $r4.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.MockTransformerChain build()>();

        return $r5;
    }

    public org.powermock.core.transformers.MockTransformerChain createTestClassChain(org.powermock.core.transformers.MockTransformer)
    {
        org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory r0;
        org.powermock.core.transformers.MockTransformer r1;
        org.powermock.core.transformers.TransformStrategy $r2;
        org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder $r3, $r4;
        org.powermock.core.transformers.MockTransformerChain $r5;

        r0 := @this: org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory;

        r1 := @parameter0: org.powermock.core.transformers.MockTransformer;

        $r2 = <org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory: org.powermock.core.transformers.TransformStrategy DEFAULT>;

        $r3 = specialinvoke r0.<org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder createDefaultChainBuilder(org.powermock.core.transformers.TransformStrategy)>($r2);

        $r4 = virtualinvoke $r3.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder append(org.powermock.core.transformers.MockTransformer)>(r1);

        $r5 = virtualinvoke $r4.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.MockTransformerChain build()>();

        return $r5;
    }

    private org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder createDefaultChainBuilder(org.powermock.core.transformers.TransformStrategy)
    {
        org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory r0;
        org.powermock.core.transformers.TransformStrategy r1;
        org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        org.powermock.core.transformers.javassist.ClassFinalModifierMockTransformer $r3;
        org.powermock.core.transformers.javassist.ConstructorsMockTransformer $r5;
        org.powermock.core.transformers.javassist.InstrumentMockTransformer $r7;
        org.powermock.core.transformers.javassist.PackagePrivateClassesMockTransformer $r9;
        org.powermock.core.transformers.javassist.StaticFinalFieldsMockTransformer $r11;
        org.powermock.core.transformers.javassist.StaticFinalNativeMethodMockTransformer $r13;
        org.powermock.core.transformers.javassist.SuppressStaticInitializerMockTransformer $r15;
        org.powermock.core.transformers.javassist.MethodSizeMockTransformer $r17;

        r0 := @this: org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory;

        r1 := @parameter0: org.powermock.core.transformers.TransformStrategy;

        $r2 = staticinvoke <org.powermock.core.transformers.support.DefaultMockTransformerChain: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder newBuilder()>();

        $r3 = new org.powermock.core.transformers.javassist.ClassFinalModifierMockTransformer;

        specialinvoke $r3.<org.powermock.core.transformers.javassist.ClassFinalModifierMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        $r4 = virtualinvoke $r2.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder append(org.powermock.core.transformers.MockTransformer)>($r3);

        $r5 = new org.powermock.core.transformers.javassist.ConstructorsMockTransformer;

        specialinvoke $r5.<org.powermock.core.transformers.javassist.ConstructorsMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        $r6 = virtualinvoke $r4.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder append(org.powermock.core.transformers.MockTransformer)>($r5);

        $r7 = new org.powermock.core.transformers.javassist.InstrumentMockTransformer;

        specialinvoke $r7.<org.powermock.core.transformers.javassist.InstrumentMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        $r8 = virtualinvoke $r6.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder append(org.powermock.core.transformers.MockTransformer)>($r7);

        $r9 = new org.powermock.core.transformers.javassist.PackagePrivateClassesMockTransformer;

        specialinvoke $r9.<org.powermock.core.transformers.javassist.PackagePrivateClassesMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        $r10 = virtualinvoke $r8.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder append(org.powermock.core.transformers.MockTransformer)>($r9);

        $r11 = new org.powermock.core.transformers.javassist.StaticFinalFieldsMockTransformer;

        specialinvoke $r11.<org.powermock.core.transformers.javassist.StaticFinalFieldsMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        $r12 = virtualinvoke $r10.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder append(org.powermock.core.transformers.MockTransformer)>($r11);

        $r13 = new org.powermock.core.transformers.javassist.StaticFinalNativeMethodMockTransformer;

        specialinvoke $r13.<org.powermock.core.transformers.javassist.StaticFinalNativeMethodMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        $r14 = virtualinvoke $r12.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder append(org.powermock.core.transformers.MockTransformer)>($r13);

        $r15 = new org.powermock.core.transformers.javassist.SuppressStaticInitializerMockTransformer;

        specialinvoke $r15.<org.powermock.core.transformers.javassist.SuppressStaticInitializerMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        $r16 = virtualinvoke $r14.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder append(org.powermock.core.transformers.MockTransformer)>($r15);

        $r17 = new org.powermock.core.transformers.javassist.MethodSizeMockTransformer;

        specialinvoke $r17.<org.powermock.core.transformers.javassist.MethodSizeMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        $r18 = virtualinvoke $r16.<org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder: org.powermock.core.transformers.support.DefaultMockTransformerChain$MockTransformerChainBuilder append(org.powermock.core.transformers.MockTransformer)>($r17);

        return $r18;
    }

    static void <clinit>()
    {
        org.powermock.core.transformers.TransformStrategy $r0;

        $r0 = <org.powermock.core.transformers.TransformStrategy: org.powermock.core.transformers.TransformStrategy CLASSLOADER>;

        <org.powermock.core.transformers.javassist.JavassistMockTransformerChainFactory: org.powermock.core.transformers.TransformStrategy DEFAULT> = $r0;

        return;
    }
}
