final class org.powermock.reflect.internal.WhiteboxImpl$1 extends java.lang.Object implements java.lang.reflect.InvocationHandler
{

    void <init>()
    {
        org.powermock.reflect.internal.WhiteboxImpl$1 r0;

        r0 := @this: org.powermock.reflect.internal.WhiteboxImpl$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        org.powermock.reflect.internal.WhiteboxImpl$1 r0;
        java.lang.Object r1, $r5;
        java.lang.reflect.Method r2;
        java.lang.Object[] r3;
        java.lang.Class $r4;

        r0 := @this: org.powermock.reflect.internal.WhiteboxImpl$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object[];

        $r4 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r5 = staticinvoke <org.powermock.reflect.internal.TypeUtils: java.lang.Object getDefaultValue(java.lang.Class)>($r4);

        return $r5;
    }
}
