public class org.joda.time.field.DividedDateTimeField extends org.joda.time.field.DecoratedDateTimeField
{
    private static final long serialVersionUID;
    final int iDivisor;
    final org.joda.time.DurationField iDurationField;
    final org.joda.time.DurationField iRangeDurationField;
    private final int iMin;
    private final int iMax;

    public void <init>(org.joda.time.DateTimeField, org.joda.time.DateTimeFieldType, int)
    {
        org.joda.time.field.DividedDateTimeField r0;
        org.joda.time.DateTimeField r1;
        org.joda.time.DateTimeFieldType r2;
        int i0;
        org.joda.time.DurationField $r3;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        r1 := @parameter0: org.joda.time.DateTimeField;

        r2 := @parameter1: org.joda.time.DateTimeFieldType;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r1.<org.joda.time.DateTimeField: org.joda.time.DurationField getRangeDurationField()>();

        specialinvoke r0.<org.joda.time.field.DividedDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)>(r1, $r3, r2, i0);

        return;
    }

    public void <init>(org.joda.time.DateTimeField, org.joda.time.DurationField, org.joda.time.DateTimeFieldType, int)
    {
        org.joda.time.field.DividedDateTimeField r0;
        org.joda.time.DateTimeField r1;
        org.joda.time.DurationField r2, r4;
        org.joda.time.DateTimeFieldType r3;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10;
        org.joda.time.field.ScaledDurationField $r5;
        org.joda.time.DurationFieldType $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        r1 := @parameter0: org.joda.time.DateTimeField;

        r2 := @parameter1: org.joda.time.DurationField;

        r3 := @parameter2: org.joda.time.DateTimeFieldType;

        i0 := @parameter3: int;

        specialinvoke r0.<org.joda.time.field.DecoratedDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)>(r1, r3);

        if i0 >= 2 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The divisor must be at least 2");

        throw $r7;

     label1:
        r4 = virtualinvoke r1.<org.joda.time.DateTimeField: org.joda.time.DurationField getDurationField()>();

        if r4 != null goto label2;

        r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DurationField iDurationField> = null;

        goto label3;

     label2:
        $r5 = new org.joda.time.field.ScaledDurationField;

        $r6 = virtualinvoke r3.<org.joda.time.DateTimeFieldType: org.joda.time.DurationFieldType getDurationType()>();

        specialinvoke $r5.<org.joda.time.field.ScaledDurationField: void <init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int)>(r4, $r6, i0);

        r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DurationField iDurationField> = $r5;

     label3:
        r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DurationField iRangeDurationField> = r2;

        r0.<org.joda.time.field.DividedDateTimeField: int iDivisor> = i0;

        i1 = virtualinvoke r1.<org.joda.time.DateTimeField: int getMinimumValue()>();

        if i1 < 0 goto label4;

        $i9 = i1 / i0;

        goto label5;

     label4:
        $i5 = i1 + 1;

        $i6 = $i5 / i0;

        $i9 = $i6 - 1;

     label5:
        i2 = $i9;

        i3 = virtualinvoke r1.<org.joda.time.DateTimeField: int getMaximumValue()>();

        if i3 < 0 goto label6;

        $i10 = i3 / i0;

        goto label7;

     label6:
        $i7 = i3 + 1;

        $i8 = $i7 / i0;

        $i10 = $i8 - 1;

     label7:
        r0.<org.joda.time.field.DividedDateTimeField: int iMin> = i2;

        r0.<org.joda.time.field.DividedDateTimeField: int iMax> = $i10;

        return;
    }

    public void <init>(org.joda.time.field.RemainderDateTimeField, org.joda.time.DateTimeFieldType)
    {
        org.joda.time.field.DividedDateTimeField r0;
        org.joda.time.field.RemainderDateTimeField r1;
        org.joda.time.DateTimeFieldType r2;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        r1 := @parameter0: org.joda.time.field.RemainderDateTimeField;

        r2 := @parameter1: org.joda.time.DateTimeFieldType;

        specialinvoke r0.<org.joda.time.field.DividedDateTimeField: void <init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)>(r1, null, r2);

        return;
    }

    public void <init>(org.joda.time.field.RemainderDateTimeField, org.joda.time.DurationField, org.joda.time.DateTimeFieldType)
    {
        org.joda.time.field.DividedDateTimeField r0;
        org.joda.time.field.RemainderDateTimeField r1;
        org.joda.time.DurationField r2, $r6;
        org.joda.time.DateTimeFieldType r3;
        org.joda.time.DateTimeField r4, $r5;
        int i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        r1 := @parameter0: org.joda.time.field.RemainderDateTimeField;

        r2 := @parameter1: org.joda.time.DurationField;

        r3 := @parameter2: org.joda.time.DateTimeFieldType;

        $r5 = virtualinvoke r1.<org.joda.time.field.RemainderDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        specialinvoke r0.<org.joda.time.field.DecoratedDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)>($r5, r3);

        $i5 = r1.<org.joda.time.field.RemainderDateTimeField: int iDivisor>;

        r0.<org.joda.time.field.DividedDateTimeField: int iDivisor> = $i5;

        $r6 = r1.<org.joda.time.field.RemainderDateTimeField: org.joda.time.DurationField iRangeField>;

        r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DurationField iDurationField> = $r6;

        r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DurationField iRangeDurationField> = r2;

        r4 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        i1 = virtualinvoke r4.<org.joda.time.DateTimeField: int getMinimumValue()>();

        if i1 < 0 goto label1;

        $i10 = i1 / $i5;

        goto label2;

     label1:
        $i6 = i1 + 1;

        $i7 = $i6 / $i5;

        $i10 = $i7 - 1;

     label2:
        i2 = $i10;

        i3 = virtualinvoke r4.<org.joda.time.DateTimeField: int getMaximumValue()>();

        if i3 < 0 goto label3;

        $i11 = i3 / $i5;

        goto label4;

     label3:
        $i8 = i3 + 1;

        $i9 = $i8 / $i5;

        $i11 = $i9 - 1;

     label4:
        r0.<org.joda.time.field.DividedDateTimeField: int iMin> = i2;

        r0.<org.joda.time.field.DividedDateTimeField: int iMax> = $i11;

        return;
    }

    public org.joda.time.DurationField getRangeDurationField()
    {
        org.joda.time.field.DividedDateTimeField r0;
        org.joda.time.DurationField $r1, $r2, $r3;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        $r1 = r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DurationField iRangeDurationField>;

        if $r1 == null goto label1;

        $r3 = r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DurationField iRangeDurationField>;

        return $r3;

     label1:
        $r2 = specialinvoke r0.<org.joda.time.field.DecoratedDateTimeField: org.joda.time.DurationField getRangeDurationField()>();

        return $r2;
    }

    public int get(long)
    {
        org.joda.time.field.DividedDateTimeField r0;
        long l0;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.joda.time.DateTimeField $r1;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        i1 = virtualinvoke $r1.<org.joda.time.DateTimeField: int get(long)>(l0);

        if i1 < 0 goto label1;

        $i6 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        $i7 = i1 / $i6;

        return $i7;

     label1:
        $i3 = i1 + 1;

        $i2 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        $i4 = $i3 / $i2;

        $i5 = $i4 - 1;

        return $i5;
    }

    public long add(long, int)
    {
        org.joda.time.field.DividedDateTimeField r0;
        long l0, $l4;
        int i1, $i2, $i3;
        org.joda.time.DateTimeField $r1;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i2 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        $i3 = i1 * $i2;

        $l4 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,int)>(l0, $i3);

        return $l4;
    }

    public long add(long, long)
    {
        org.joda.time.field.DividedDateTimeField r0;
        long l0, l1, $l3, $l4, $l5;
        org.joda.time.DateTimeField $r1;
        int $i2;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i2 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        $l3 = (long) $i2;

        $l4 = l1 * $l3;

        $l5 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,long)>(l0, $l4);

        return $l5;
    }

    public long addWrapField(long, int)
    {
        org.joda.time.field.DividedDateTimeField r0;
        long l0, $l6;
        int i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: int get(long)>(l0);

        $i4 = r0.<org.joda.time.field.DividedDateTimeField: int iMin>;

        $i3 = r0.<org.joda.time.field.DividedDateTimeField: int iMax>;

        $i5 = staticinvoke <org.joda.time.field.FieldUtils: int getWrappedValue(int,int,int,int)>($i2, i1, $i4, $i3);

        $l6 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: long set(long,int)>(l0, $i5);

        return $l6;
    }

    public int getDifference(long, long)
    {
        org.joda.time.field.DividedDateTimeField r0;
        long l0, l1;
        org.joda.time.DateTimeField $r1;
        int $i2, $i3, $i4;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i2 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getDifference(long,long)>(l0, l1);

        $i3 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        $i4 = $i2 / $i3;

        return $i4;
    }

    public long getDifferenceAsLong(long, long)
    {
        org.joda.time.field.DividedDateTimeField r0;
        long l0, l1, $l2, $l4, $l5;
        org.joda.time.DateTimeField $r1;
        int $i3;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $l2 = virtualinvoke $r1.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>(l0, l1);

        $i3 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        $l4 = (long) $i3;

        $l5 = $l2 / $l4;

        return $l5;
    }

    public long set(long, int)
    {
        org.joda.time.field.DividedDateTimeField r0;
        long l0, $l9;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.joda.time.DateTimeField $r1, $r2;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i4 = r0.<org.joda.time.field.DividedDateTimeField: int iMin>;

        $i3 = r0.<org.joda.time.field.DividedDateTimeField: int iMax>;

        staticinvoke <org.joda.time.field.FieldUtils: void verifyValueBounds(org.joda.time.DateTimeField,int,int,int)>(r0, i1, $i4, $i3);

        $r1 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i5 = virtualinvoke $r1.<org.joda.time.DateTimeField: int get(long)>(l0);

        i2 = specialinvoke r0.<org.joda.time.field.DividedDateTimeField: int getRemainder(int)>($i5);

        $r2 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i6 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        $i7 = i1 * $i6;

        $i8 = $i7 + i2;

        $l9 = virtualinvoke $r2.<org.joda.time.DateTimeField: long set(long,int)>(l0, $i8);

        return $l9;
    }

    public org.joda.time.DurationField getDurationField()
    {
        org.joda.time.field.DividedDateTimeField r0;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        $r1 = r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DurationField iDurationField>;

        return $r1;
    }

    public int getMinimumValue()
    {
        org.joda.time.field.DividedDateTimeField r0;
        int $i0;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        $i0 = r0.<org.joda.time.field.DividedDateTimeField: int iMin>;

        return $i0;
    }

    public int getMaximumValue()
    {
        org.joda.time.field.DividedDateTimeField r0;
        int $i0;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        $i0 = r0.<org.joda.time.field.DividedDateTimeField: int iMax>;

        return $i0;
    }

    public long roundFloor(long)
    {
        org.joda.time.field.DividedDateTimeField r0;
        long l0, $l4, $l5;
        org.joda.time.DateTimeField r1;
        int $i1, $i2, $i3;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i1 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: int get(long)>(l0);

        $i2 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        $i3 = $i1 * $i2;

        $l4 = virtualinvoke r1.<org.joda.time.DateTimeField: long set(long,int)>(l0, $i3);

        $l5 = virtualinvoke r1.<org.joda.time.DateTimeField: long roundFloor(long)>($l4);

        return $l5;
    }

    public long remainder(long)
    {
        org.joda.time.field.DividedDateTimeField r0;
        long l0, $l1, $l3;
        org.joda.time.DateTimeField $r1;
        int $i2;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $l1 = virtualinvoke $r1.<org.joda.time.DateTimeField: long remainder(long)>(l0);

        $i2 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: int get(long)>($l1);

        $l3 = virtualinvoke r0.<org.joda.time.field.DividedDateTimeField: long set(long,int)>(l0, $i2);

        return $l3;
    }

    public int getDivisor()
    {
        org.joda.time.field.DividedDateTimeField r0;
        int $i0;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        $i0 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        return $i0;
    }

    private int getRemainder(int)
    {
        org.joda.time.field.DividedDateTimeField r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.joda.time.field.DividedDateTimeField;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i7 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        $i8 = i0 % $i7;

        return $i8;

     label1:
        $i1 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        $i5 = $i1 - 1;

        $i3 = i0 + 1;

        $i2 = r0.<org.joda.time.field.DividedDateTimeField: int iDivisor>;

        $i4 = $i3 % $i2;

        $i6 = $i5 + $i4;

        return $i6;
    }

    public static void <clinit>()
    {
        <org.joda.time.field.DividedDateTimeField: long serialVersionUID> = 8318475124230605365L;

        return;
    }
}
