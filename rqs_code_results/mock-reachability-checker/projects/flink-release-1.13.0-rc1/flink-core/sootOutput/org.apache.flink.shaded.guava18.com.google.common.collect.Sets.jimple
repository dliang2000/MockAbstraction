public final class org.apache.flink.shaded.guava18.com.google.common.collect.Sets extends java.lang.Object
{

    private void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Sets;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Enum, java.lang.Enum[])
    {
        java.lang.Enum r0;
        java.lang.Enum[] r1;
        java.util.EnumSet $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet $r3;

        r0 := @parameter0: java.lang.Enum;

        r1 := @parameter1: java.lang.Enum[];

        $r2 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>(r0, r1);

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet asImmutable(java.util.EnumSet)>($r2);

        return $r3;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.EnumSet r1, $r6;
        boolean $z0, $z1, $z2, $z4;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet $r2, $r5, $r7, $r8;
        java.lang.Object $r3;
        java.lang.Enum $r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumSet $r9;
        java.util.Collection r10;
        java.util.Iterator r11;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumSet;

        if $z0 == 0 goto label1;

        $r9 = (org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumSet) r0;

        return $r9;

     label1:
        $z1 = r0 instanceof java.util.Collection;

        if $z1 == 0 goto label3;

        r10 = (java.util.Collection) r0;

        $z4 = interfaceinvoke r10.<java.util.Collection: boolean isEmpty()>();

        if $z4 == 0 goto label2;

        $r8 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet of()>();

        return $r8;

     label2:
        $r6 = staticinvoke <java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>(r10);

        $r7 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet asImmutable(java.util.EnumSet)>($r6);

        return $r7;

     label3:
        r11 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r3 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Enum) $r3;

        r1 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r4);

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: boolean addAll(java.util.Collection,java.util.Iterator)>(r1, r11);

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableEnumSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet asImmutable(java.util.EnumSet)>(r1);

        return $r5;

     label4:
        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet of()>();

        return $r2;
    }

    public static java.util.EnumSet newEnumSet(java.lang.Iterable, java.lang.Class)
    {
        java.lang.Iterable r0;
        java.lang.Class r1;
        java.util.EnumSet r2;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Class;

        r2 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(r1);

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>(r2, r0);

        return r2;
    }

    public static java.util.HashSet newHashSet()
    {
        java.util.HashSet $r0;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        return $r0;
    }

    public static transient java.util.HashSet newHashSet(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.util.HashSet r1;
        int $i0;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.HashSet newHashSetWithExpectedSize(int)>($i0);

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r1, r0);

        return r1;
    }

    public static java.util.HashSet newHashSetWithExpectedSize(int)
    {
        int i0, $i1;
        java.util.HashSet $r0;

        i0 := @parameter0: int;

        $r0 = new java.util.HashSet;

        $i1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Maps: int capacity(int)>(i0);

        specialinvoke $r0.<java.util.HashSet: void <init>(int)>($i1);

        return $r0;
    }

    public static java.util.HashSet newHashSet(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        boolean $z0;
        java.util.Iterator $r1;
        java.util.Collection $r2;
        java.util.HashSet $r3;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r3 = new java.util.HashSet;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: java.util.Collection cast(java.lang.Iterable)>(r0);

        specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        goto label2;

     label1:
        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.HashSet newHashSet(java.util.Iterator)>($r1);

     label2:
        return $r3;
    }

    public static java.util.HashSet newHashSet(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.util.HashSet r1;

        r0 := @parameter0: java.util.Iterator;

        r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: boolean addAll(java.util.Collection,java.util.Iterator)>(r1, r0);

        return r1;
    }

    public static java.util.Set newConcurrentHashSet()
    {
        java.util.concurrent.ConcurrentHashMap $r0;
        java.util.Set $r1;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.Set newSetFromMap(java.util.Map)>($r0);

        return $r1;
    }

    public static java.util.Set newConcurrentHashSet(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.Set r1;

        r0 := @parameter0: java.lang.Iterable;

        r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.Set newConcurrentHashSet()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, r0);

        return r1;
    }

    public static java.util.LinkedHashSet newLinkedHashSet()
    {
        java.util.LinkedHashSet $r0;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        return $r0;
    }

    public static java.util.LinkedHashSet newLinkedHashSetWithExpectedSize(int)
    {
        int i0, $i1;
        java.util.LinkedHashSet $r0;

        i0 := @parameter0: int;

        $r0 = new java.util.LinkedHashSet;

        $i1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Maps: int capacity(int)>(i0);

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>(int)>($i1);

        return $r0;
    }

    public static java.util.LinkedHashSet newLinkedHashSet(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.LinkedHashSet r1, $r2;
        boolean $z0;
        java.util.Collection $r3;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r2 = new java.util.LinkedHashSet;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: java.util.Collection cast(java.lang.Iterable)>(r0);

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r3);

        return $r2;

     label1:
        r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.LinkedHashSet newLinkedHashSet()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, r0);

        return r1;
    }

    public static java.util.TreeSet newTreeSet()
    {
        java.util.TreeSet $r0;

        $r0 = new java.util.TreeSet;

        specialinvoke $r0.<java.util.TreeSet: void <init>()>();

        return $r0;
    }

    public static java.util.TreeSet newTreeSet(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.TreeSet r1;

        r0 := @parameter0: java.lang.Iterable;

        r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.TreeSet newTreeSet()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, r0);

        return r1;
    }

    public static java.util.TreeSet newTreeSet(java.util.Comparator)
    {
        java.util.Comparator r0, $r3;
        java.util.TreeSet $r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.util.Comparator;

        $r1 = new java.util.TreeSet;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = (java.util.Comparator) $r2;

        specialinvoke $r1.<java.util.TreeSet: void <init>(java.util.Comparator)>($r3);

        return $r1;
    }

    public static java.util.Set newIdentityHashSet()
    {
        java.util.IdentityHashMap $r0;
        java.util.Set $r1;

        $r0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Maps: java.util.IdentityHashMap newIdentityHashMap()>();

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.Set newSetFromMap(java.util.Map)>($r0);

        return $r1;
    }

    public static java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet()
    {
        java.util.concurrent.CopyOnWriteArraySet $r0;

        $r0 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r0.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        return $r0;
    }

    public static java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        boolean $z0;
        java.util.concurrent.CopyOnWriteArraySet $r2;
        java.util.Collection $r3;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: java.util.Collection cast(java.lang.Iterable)>(r0);

        goto label2;

     label1:
        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(r0);

     label2:
        $r2 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArraySet: void <init>(java.util.Collection)>($r3);

        return $r2;
    }

    public static java.util.EnumSet complementOf(java.util.Collection)
    {
        java.util.Collection r0;
        java.lang.Class r1;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.Enum $r4;
        java.util.EnumSet $r5, $r6, $r7;

        r0 := @parameter0: java.util.Collection;

        $z0 = r0 instanceof java.util.EnumSet;

        if $z0 == 0 goto label1;

        $r6 = (java.util.EnumSet) r0;

        $r7 = staticinvoke <java.util.EnumSet: java.util.EnumSet complementOf(java.util.EnumSet)>($r6);

        return $r7;

     label1:
        $z1 = interfaceinvoke r0.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z2, "collection is empty; use the other version of this method");

        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Enum) $r3;

        r1 = virtualinvoke $r4.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.EnumSet makeComplementByHand(java.util.Collection,java.lang.Class)>(r0, r1);

        return $r5;
    }

    public static java.util.EnumSet complementOf(java.util.Collection, java.lang.Class)
    {
        java.util.Collection r0;
        java.lang.Class r1;
        boolean $z0;
        java.util.EnumSet $r3, $r4;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.lang.Class;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $z0 = r0 instanceof java.util.EnumSet;

        if $z0 == 0 goto label1;

        $r3 = (java.util.EnumSet) r0;

        $r4 = staticinvoke <java.util.EnumSet: java.util.EnumSet complementOf(java.util.EnumSet)>($r3);

        goto label2;

     label1:
        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.EnumSet makeComplementByHand(java.util.Collection,java.lang.Class)>(r0, r1);

     label2:
        return $r4;
    }

    private static java.util.EnumSet makeComplementByHand(java.util.Collection, java.lang.Class)
    {
        java.util.Collection r0;
        java.lang.Class r1;
        java.util.EnumSet r2;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.lang.Class;

        r2 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(r1);

        virtualinvoke r2.<java.util.EnumSet: boolean removeAll(java.util.Collection)>(r0);

        return r2;
    }

    public static java.util.Set newSetFromMap(java.util.Map)
    {
        java.util.Map r0;
        java.util.Set $r1;

        r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Platform: java.util.Set newSetFromMap(java.util.Map)>(r0);

        return $r1;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Sets$SetView union(java.util.Set, java.util.Set)
    {
        java.util.Set r0, r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$SetView r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$1 $r5;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "set1");

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "set2");

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$SetView difference(java.util.Set,java.util.Set)>(r1, r0);

        $r5 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$1;

        specialinvoke $r5.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$1: void <init>(java.util.Set,java.util.Set,java.util.Set)>(r0, r2, r1);

        return $r5;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Sets$SetView intersection(java.util.Set, java.util.Set)
    {
        java.util.Set r0, r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$2 $r5;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "set1");

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "set2");

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate in(java.util.Collection)>(r1);

        $r5 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$2;

        specialinvoke $r5.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$2: void <init>(java.util.Set,org.apache.flink.shaded.guava18.com.google.common.base.Predicate,java.util.Set)>(r0, r2, r1);

        return $r5;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Sets$SetView difference(java.util.Set, java.util.Set)
    {
        java.util.Set r0, r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r2, $r5;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$3 $r6;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "set1");

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "set2");

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate in(java.util.Collection)>(r1);

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate not(org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r5);

        $r6 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$3;

        specialinvoke $r6.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$3: void <init>(java.util.Set,org.apache.flink.shaded.guava18.com.google.common.base.Predicate,java.util.Set)>(r0, r2, r1);

        return $r6;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.collect.Sets$SetView symmetricDifference(java.util.Set, java.util.Set)
    {
        java.util.Set r0, r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$SetView $r4, $r5, $r6;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "set1");

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "set2");

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set)>(r0, r1);

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set)>(r0, r1);

        $r6 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: org.apache.flink.shaded.guava18.com.google.common.collect.Sets$SetView difference(java.util.Set,java.util.Set)>($r4, $r5);

        return $r6;
    }

    public static java.util.Set filter(java.util.Set, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.Set r0, $r6, $r12;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1, r3, $r8, $r9;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet r2, $r4, $r10;
        boolean $z0, $z1;
        java.lang.Object $r5, $r7;
        java.util.Collection $r11;
        java.util.SortedSet $r13, $r14;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        $z0 = r0 instanceof java.util.SortedSet;

        if $z0 == 0 goto label1;

        $r13 = (java.util.SortedSet) r0;

        $r14 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.SortedSet filter(java.util.SortedSet,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r13, r1);

        return $r14;

     label1:
        $z1 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet;

        if $z1 == 0 goto label2;

        r2 = (org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet) r0;

        $r9 = r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet: org.apache.flink.shaded.guava18.com.google.common.base.Predicate predicate>;

        r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate and(org.apache.flink.shaded.guava18.com.google.common.base.Predicate,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r9, r1);

        $r10 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet;

        $r11 = r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet: java.util.Collection unfiltered>;

        $r12 = (java.util.Set) $r11;

        specialinvoke $r10.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet: void <init>(java.util.Set,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r12, r3);

        return $r10;

     label2:
        $r4 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet;

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r6 = (java.util.Set) $r5;

        $r7 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r8 = (org.apache.flink.shaded.guava18.com.google.common.base.Predicate) $r7;

        specialinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet: void <init>(java.util.Set,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r6, $r8);

        return $r4;
    }

    public static java.util.SortedSet filter(java.util.SortedSet, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.SortedSet r0, $r2;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1;

        r0 := @parameter0: java.util.SortedSet;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Platform: java.util.SortedSet setsFilterSortedSet(java.util.SortedSet,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r0, r1);

        return $r2;
    }

    static java.util.SortedSet filterSortedIgnoreNavigable(java.util.SortedSet, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.SortedSet r0, $r6, $r12;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1, r3, $r8, $r9;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet r2;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSortedSet $r4, $r10;
        java.lang.Object $r5, $r7;
        java.util.Collection $r11;

        r0 := @parameter0: java.util.SortedSet;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        $z0 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet;

        if $z0 == 0 goto label1;

        r2 = (org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet) r0;

        $r9 = r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet: org.apache.flink.shaded.guava18.com.google.common.base.Predicate predicate>;

        r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate and(org.apache.flink.shaded.guava18.com.google.common.base.Predicate,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r9, r1);

        $r10 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSortedSet;

        $r11 = r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet: java.util.Collection unfiltered>;

        $r12 = (java.util.SortedSet) $r11;

        specialinvoke $r10.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSortedSet: void <init>(java.util.SortedSet,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r12, r3);

        return $r10;

     label1:
        $r4 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSortedSet;

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r6 = (java.util.SortedSet) $r5;

        $r7 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r8 = (org.apache.flink.shaded.guava18.com.google.common.base.Predicate) $r7;

        specialinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSortedSet: void <init>(java.util.SortedSet,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r6, $r8);

        return $r4;
    }

    public static java.util.NavigableSet filter(java.util.NavigableSet, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.NavigableSet r0, $r6, $r12;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1, r3, $r8, $r9;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet r2;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredNavigableSet $r4, $r10;
        java.lang.Object $r5, $r7;
        java.util.Collection $r11;

        r0 := @parameter0: java.util.NavigableSet;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        $z0 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet;

        if $z0 == 0 goto label1;

        r2 = (org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet) r0;

        $r9 = r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet: org.apache.flink.shaded.guava18.com.google.common.base.Predicate predicate>;

        r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate and(org.apache.flink.shaded.guava18.com.google.common.base.Predicate,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r9, r1);

        $r10 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredNavigableSet;

        $r11 = r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredSet: java.util.Collection unfiltered>;

        $r12 = (java.util.NavigableSet) $r11;

        specialinvoke $r10.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredNavigableSet: void <init>(java.util.NavigableSet,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r12, r3);

        return $r10;

     label1:
        $r4 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredNavigableSet;

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r6 = (java.util.NavigableSet) $r5;

        $r7 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r8 = (org.apache.flink.shaded.guava18.com.google.common.base.Predicate) $r7;

        specialinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$FilteredNavigableSet: void <init>(java.util.NavigableSet,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r6, $r8);

        return $r4;
    }

    public static java.util.Set cartesianProduct(java.util.List)
    {
        java.util.List r0;
        java.util.Set $r1;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets$CartesianSet: java.util.Set create(java.util.List)>(r0);

        return $r1;
    }

    public static transient java.util.Set cartesianProduct(java.util.Set[])
    {
        java.util.Set[] r0;
        java.util.List $r1;
        java.util.Set $r2;

        r0 := @parameter0: java.util.Set[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.Set cartesianProduct(java.util.List)>($r1);

        return $r2;
    }

    public static java.util.Set powerSet(java.util.Set)
    {
        java.util.Set r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$PowerSet: void <init>(java.util.Set)>(r0);

        return $r1;
    }

    static int hashCodeImpl(java.util.Set)
    {
        java.util.Set r0;
        java.util.Iterator r1;
        java.lang.Object r2;
        boolean $z0;
        int $i0, $i1, i2, $i3, i4;

        r0 := @parameter0: java.util.Set;

        i2 = 0;

        r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $i1 = i2;

        if r2 == null goto label2;

        $i3 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        goto label3;

     label2:
        $i3 = 0;

     label3:
        i4 = $i1 + $i3;

        $i0 = i4 ^ -1;

        i2 = $i0 ^ -1;

        goto label1;

     label4:
        return i2;
    }

    static boolean equalsImpl(java.util.Set, java.lang.Object)
    {
        java.util.Set r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        java.lang.NullPointerException $r3;
        java.lang.ClassCastException $r4;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof java.util.Set;

        if $z0 == 0 goto label7;

        r2 = (java.util.Set) r1;

     label2:
        $i0 = interfaceinvoke r0.<java.util.Set: int size()>();

        $i1 = interfaceinvoke r2.<java.util.Set: int size()>();

        if $i0 != $i1 goto label3;

        $z1 = interfaceinvoke r0.<java.util.Set: boolean containsAll(java.util.Collection)>(r2);

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;

     label5:
        $r3 := @caughtexception;

        return 0;

     label6:
        $r4 := @caughtexception;

        return 0;

     label7:
        return 0;

        catch java.lang.NullPointerException from label2 to label4 with label5;
        catch java.lang.ClassCastException from label2 to label4 with label6;
    }

    public static java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet)
    {
        java.util.NavigableSet r0;
        boolean $z0, $z1;
        org.apache.flink.shaded.guava18.com.google.common.collect.Sets$UnmodifiableNavigableSet $r1;

        r0 := @parameter0: java.util.NavigableSet;

        $z0 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSortedSet;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.Sets$UnmodifiableNavigableSet;

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.Sets$UnmodifiableNavigableSet;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.Sets$UnmodifiableNavigableSet: void <init>(java.util.NavigableSet)>(r0);

        return $r1;
    }

    public static java.util.NavigableSet synchronizedNavigableSet(java.util.NavigableSet)
    {
        java.util.NavigableSet r0, $r1;

        r0 := @parameter0: java.util.NavigableSet;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Synchronized: java.util.NavigableSet navigableSet(java.util.NavigableSet)>(r0);

        return $r1;
    }

    static boolean removeAllImpl(java.util.Set, java.util.Iterator)
    {
        java.util.Set r0;
        java.util.Iterator r1;
        boolean $z0, $z1, z2;
        java.lang.Object $r2;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Iterator;

        z2 = 0;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r0.<java.util.Set: boolean remove(java.lang.Object)>($r2);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    static boolean removeAllImpl(java.util.Set, java.util.Collection)
    {
        java.util.Set r0;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r2, $r3;
        int $i0, $i1;
        org.apache.flink.shaded.guava18.com.google.common.collect.Multiset $r4;
        java.util.Collection r5;

        r0 := @parameter0: java.util.Set;

        r5 := @parameter1: java.util.Collection;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $z0 = r5 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.Multiset;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.flink.shaded.guava18.com.google.common.collect.Multiset) r5;

        r5 = interfaceinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.Multiset: java.util.Set elementSet()>();

     label1:
        $z1 = r5 instanceof java.util.Set;

        if $z1 == 0 goto label2;

        $i0 = interfaceinvoke r5.<java.util.Collection: int size()>();

        $i1 = interfaceinvoke r0.<java.util.Set: int size()>();

        if $i0 <= $i1 goto label2;

        $r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

        $z3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: boolean removeAll(java.util.Iterator,java.util.Collection)>($r3, r5);

        return $z3;

     label2:
        $r2 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

        $z2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: boolean removeAllImpl(java.util.Set,java.util.Iterator)>(r0, $r2);

        return $z2;
    }
}
