class org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap extends org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap
{
    static final double MAX_LOAD_FACTOR;
    private final transient org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] keyTable;
    private final transient org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] valueTable;
    private final transient org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] entries;
    private final transient int mask;
    private final transient int hashCode;
    private transient org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap inverse;

    transient void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[])
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[] r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[];

        $i0 = lengthof r1;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: void <init>(int,org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[])>($i0, r1);

        return;
    }

    void <init>(int, org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[])
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[] r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] r2, r3, r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry r5;
        java.lang.Object r6, r7, $r9, $r10;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry r8, r11, r12, r13, $r14;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry r16;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry[];

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap: void <init>()>();

        i1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Hashing: int closedTableSize(int,double)>(i0, 1.2);

        $i6 = i1 - 1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: int mask> = $i6;

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] createEntryArray(int)>(i1);

        r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] createEntryArray(int)>(i1);

        r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] createEntryArray(int)>(i0);

        i11 = 0;

        i12 = 0;

     label01:
        if i12 >= i0 goto label12;

        r5 = r1[i12];

        r6 = virtualinvoke r5.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry: java.lang.Object getKey()>();

        r7 = virtualinvoke r5.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry: java.lang.Object getValue()>();

        i2 = virtualinvoke r6.<java.lang.Object: int hashCode()>();

        i3 = virtualinvoke r7.<java.lang.Object: int hashCode()>();

        $i7 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Hashing: int smear(int)>(i2);

        $i8 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: int mask>;

        i4 = $i7 & $i8;

        $i9 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Hashing: int smear(int)>(i3);

        $i10 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: int mask>;

        i5 = $i9 & $i10;

        r8 = r2[i4];

        r11 = r8;

     label02:
        if r11 == null goto label05;

        $r10 = virtualinvoke r11.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry: java.lang.Object getKey()>();

        $z1 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: void checkNoConflict(boolean,java.lang.String,java.util.Map$Entry,java.util.Map$Entry)>($z2, "key", r5, r11);

        r11 = virtualinvoke r11.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry getNextInKeyBucket()>();

        goto label02;

     label05:
        r12 = r3[i5];

        r13 = r12;

     label06:
        if r13 == null goto label09;

        $r9 = virtualinvoke r13.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry: java.lang.Object getValue()>();

        $z0 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: void checkNoConflict(boolean,java.lang.String,java.util.Map$Entry,java.util.Map$Entry)>($z3, "value", r5, r13);

        r13 = virtualinvoke r13.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry getNextInValueBucket()>();

        goto label06;

     label09:
        if r8 != null goto label10;

        if r12 != null goto label10;

        $r14 = r5;

        goto label11;

     label10:
        r16 = new org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry;

        $r14 = r16;

        specialinvoke r16.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry,org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry,org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry)>(r5, r8, r12);

     label11:
        r2[i4] = $r14;

        r3[i5] = $r14;

        r4[i12] = $r14;

        $i13 = i2 ^ i3;

        i11 = i11 + $i13;

        i12 = i12 + 1;

        goto label01;

     label12:
        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] keyTable> = r2;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] valueTable> = r3;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] entries> = r4;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: int hashCode> = i11;

        return;
    }

    void <init>(java.util.Map$Entry[])
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        java.util.Map$Entry[] r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] r2, r3, r4;
        java.util.Map$Entry r5;
        java.lang.Object r6, r7, $r10, $r11;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry r8, r12, r13, r14, $r15;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry r17;
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry r18;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        r1 := @parameter0: java.util.Map$Entry[];

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap: void <init>()>();

        i0 = lengthof r1;

        i1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Hashing: int closedTableSize(int,double)>(i0, 1.2);

        $i6 = i1 - 1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: int mask> = $i6;

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] createEntryArray(int)>(i1);

        r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] createEntryArray(int)>(i1);

        r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] createEntryArray(int)>(i0);

        i11 = 0;

        i12 = 0;

     label01:
        if i12 >= i0 goto label12;

        r5 = r1[i12];

        r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r6, r7);

        i2 = virtualinvoke r6.<java.lang.Object: int hashCode()>();

        i3 = virtualinvoke r7.<java.lang.Object: int hashCode()>();

        $i7 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Hashing: int smear(int)>(i2);

        $i8 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: int mask>;

        i4 = $i7 & $i8;

        $i9 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Hashing: int smear(int)>(i3);

        $i10 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: int mask>;

        i5 = $i9 & $i10;

        r8 = r2[i4];

        r12 = r8;

     label02:
        if r12 == null goto label05;

        $r11 = virtualinvoke r12.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry: java.lang.Object getKey()>();

        $z1 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: void checkNoConflict(boolean,java.lang.String,java.util.Map$Entry,java.util.Map$Entry)>($z2, "key", r5, r12);

        r12 = virtualinvoke r12.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry getNextInKeyBucket()>();

        goto label02;

     label05:
        r13 = r3[i5];

        r14 = r13;

     label06:
        if r14 == null goto label09;

        $r10 = virtualinvoke r14.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry: java.lang.Object getValue()>();

        $z0 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: void checkNoConflict(boolean,java.lang.String,java.util.Map$Entry,java.util.Map$Entry)>($z3, "value", r5, r14);

        r14 = virtualinvoke r14.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry getNextInValueBucket()>();

        goto label06;

     label09:
        if r8 != null goto label10;

        if r13 != null goto label10;

        r17 = new org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry;

        $r15 = r17;

        specialinvoke r17.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry$TerminalEntry: void <init>(java.lang.Object,java.lang.Object)>(r6, r7);

        goto label11;

     label10:
        r18 = new org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry;

        $r15 = r18;

        specialinvoke r18.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry: void <init>(java.lang.Object,java.lang.Object,org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry,org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry)>(r6, r7, r8, r13);

     label11:
        r2[i4] = $r15;

        r3[i5] = $r15;

        r4[i12] = $r15;

        $i13 = i2 ^ i3;

        i11 = i11 + $i13;

        i12 = i12 + 1;

        goto label01;

     label12:
        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] keyTable> = r2;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] valueTable> = r3;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] entries> = r4;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: int hashCode> = i11;

        return;
    }

    private static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] createEntryArray(int)
    {
        int i0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] $r0;

        i0 := @parameter0: int;

        $r0 = newarray (org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry)[i0];

        return $r0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        java.lang.Object r1, $r3, $r4;
        int i0, $i1, $i2, $i3;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] $r2;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry r5;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Hashing: int smear(int)>($i1);

        $i3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: int mask>;

        i0 = $i2 & $i3;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] keyTable>;

        r5 = $r2[i0];

     label2:
        if r5 == null goto label4;

        $r3 = virtualinvoke r5.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry: java.lang.Object getKey()>();

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r5.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry: java.lang.Object getValue()>();

        return $r4;

     label3:
        r5 = virtualinvoke r5.<org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry getNextInKeyBucket()>();

        goto label2;

     label4:
        return null;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableSet createEntrySet()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$1 $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$1;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$1: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap)>(r0);

        return $r1;
    }

    boolean isPartialView()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        return 0;
    }

    public int size()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] entries>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap inverse()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap r1, $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$Inverse r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap inverse>;

        if r1 != null goto label1;

        r3 = new org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$Inverse;

        $r2 = r3;

        specialinvoke r3.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$Inverse: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap,org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap$1)>(r0, null);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap inverse> = r3;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public volatile org.apache.flink.shaded.guava18.com.google.common.collect.BiMap inverse()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableBiMap inverse()>();

        return $r1;
    }

    static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] access$000(org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] $r1;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] entries>;

        return $r1;
    }

    static int access$100(org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        int $i0;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: int hashCode>;

        return $i0;
    }

    static int access$300(org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        int $i0;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: int mask>;

        return $i0;
    }

    static org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] access$400(org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] $r1;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableMapEntry[] valueTable>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.guava18.com.google.common.collect.RegularImmutableBiMap: double MAX_LOAD_FACTOR> = 1.2;

        return;
    }
}
