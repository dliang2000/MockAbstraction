final class javassist.DirClassPath extends java.lang.Object implements javassist.ClassPath
{
    java.lang.String directory;

    void <init>(java.lang.String)
    {
        javassist.DirClassPath r0;
        java.lang.String r1;

        r0 := @this: javassist.DirClassPath;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.DirClassPath: java.lang.String directory> = r1;

        return;
    }

    public java.io.InputStream openClassfile(java.lang.String)
    {
        javassist.DirClassPath r0;
        java.lang.String r1, r2, $r4, $r7, $r11;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9;
        java.io.FileInputStream $r10;
        java.io.FileNotFoundException $r12;
        java.lang.SecurityException $r13;
        char c0;

        r0 := @this: javassist.DirClassPath;

        r1 := @parameter0: java.lang.String;

     label1:
        c0 = <java.io.File: char separatorChar>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<javassist.DirClassPath: java.lang.String directory>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, c0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.io.FileInputStream;

        $r11 = virtualinvoke r2.<java.lang.String: java.lang.String toString()>();

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.lang.String)>($r11);

     label2:
        return $r10;

     label3:
        $r12 := @caughtexception;

        goto label5;

     label4:
        $r13 := @caughtexception;

     label5:
        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
    }

    public java.net.URL find(java.lang.String)
    {
        javassist.DirClassPath r0;
        java.lang.String r1, r2, $r5, $r8;
        char c0;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10;
        java.io.File $r11, $r12;
        boolean $z0;
        java.net.URI $r13;
        java.net.URL $r14;
        java.io.IOException $r15;
        java.net.MalformedURLException $r16;

        r0 := @this: javassist.DirClassPath;

        r1 := @parameter0: java.lang.String;

        c0 = <java.io.File: char separatorChar>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<javassist.DirClassPath: java.lang.String directory>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, c0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>(r2);

        $z0 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label5;

     label1:
        $r12 = virtualinvoke $r11.<java.io.File: java.io.File getCanonicalFile()>();

        $r13 = virtualinvoke $r12.<java.io.File: java.net.URI toURI()>();

        $r14 = virtualinvoke $r13.<java.net.URI: java.net.URL toURL()>();

     label2:
        return $r14;

     label3:
        $r16 := @caughtexception;

        goto label5;

     label4:
        $r15 := @caughtexception;

     label5:
        return null;

        catch java.net.MalformedURLException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public java.lang.String toString()
    {
        javassist.DirClassPath r0;
        java.lang.String $r1;

        r0 := @this: javassist.DirClassPath;

        $r1 = r0.<javassist.DirClassPath: java.lang.String directory>;

        return $r1;
    }
}
