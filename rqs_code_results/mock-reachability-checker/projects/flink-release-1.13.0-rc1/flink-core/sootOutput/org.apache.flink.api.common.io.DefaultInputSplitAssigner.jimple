public class org.apache.flink.api.common.io.DefaultInputSplitAssigner extends java.lang.Object implements org.apache.flink.core.io.InputSplitAssigner
{
    private static final org.slf4j.Logger LOG;
    private final java.util.List splits;

    public void <init>(org.apache.flink.core.io.InputSplit[])
    {
        org.apache.flink.api.common.io.DefaultInputSplitAssigner r0;
        org.apache.flink.core.io.InputSplit[] r1;
        java.util.ArrayList $r2;
        java.util.List $r3;

        r0 := @this: org.apache.flink.api.common.io.DefaultInputSplitAssigner;

        r1 := @parameter0: org.apache.flink.core.io.InputSplit[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: java.util.List splits> = $r2;

        $r3 = r0.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: java.util.List splits>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r3, r1);

        return;
    }

    public void <init>(java.util.Collection)
    {
        org.apache.flink.api.common.io.DefaultInputSplitAssigner r0;
        java.util.Collection r1;
        java.util.ArrayList $r2;
        java.util.List $r3;

        r0 := @this: org.apache.flink.api.common.io.DefaultInputSplitAssigner;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: java.util.List splits> = $r2;

        $r3 = r0.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: java.util.List splits>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public org.apache.flink.core.io.InputSplit getNextInputSplit(java.lang.String, int)
    {
        org.apache.flink.api.common.io.DefaultInputSplitAssigner r0;
        java.lang.String r1, $r13;
        int i0, $i1, $i2, $i3;
        java.util.List $r4, $r5, $r14, $r15;
        org.slf4j.Logger $r6, $r8;
        boolean $z0;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12;
        java.lang.Object $r16;
        java.lang.Throwable $r17;
        org.apache.flink.core.io.InputSplit r18;

        r0 := @this: org.apache.flink.api.common.io.DefaultInputSplitAssigner;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r18 = null;

        $r4 = r0.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: java.util.List splits>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: java.util.List splits>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 <= 0 goto label2;

        $r15 = r0.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: java.util.List splits>;

        $r14 = r0.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: java.util.List splits>;

        $i2 = interfaceinvoke $r14.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object remove(int)>($i3);

        r18 = (org.apache.flink.core.io.InputSplit) $r16;

     label2:
        exitmonitor $r4;

     label3:
        goto label6;

     label4:
        $r17 := @caughtexception;

        exitmonitor $r4;

     label5:
        throw $r17;

     label6:
        $r6 = <org.apache.flink.api.common.io.DefaultInputSplitAssigner: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label7;

        if r18 == null goto label7;

        $r8 = <org.apache.flink.api.common.io.DefaultInputSplitAssigner: org.slf4j.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigning split ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>($r13);

     label7:
        return r18;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void returnInputSplit(java.util.List, int)
    {
        org.apache.flink.api.common.io.DefaultInputSplitAssigner r0;
        java.util.List r1, $r6, $r8;
        int i0;
        java.util.Iterator r3;
        org.apache.flink.core.io.InputSplit r4;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.flink.api.common.io.DefaultInputSplitAssigner;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r6 = r0.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: java.util.List splits>;

        entermonitor $r6;

     label1:
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.flink.core.io.InputSplit) $r7;

        $r8 = r0.<org.apache.flink.api.common.io.DefaultInputSplitAssigner: java.util.List splits>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label2;

     label3:
        exitmonitor $r6;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r6;

     label6:
        throw $r9;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/flink/api/common/io/DefaultInputSplitAssigner;");

        <org.apache.flink.api.common.io.DefaultInputSplitAssigner: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
