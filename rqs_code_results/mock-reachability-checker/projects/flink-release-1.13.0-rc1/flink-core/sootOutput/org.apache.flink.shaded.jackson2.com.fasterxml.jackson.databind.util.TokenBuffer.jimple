public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator
{
    protected static final int DEFAULT_GENERATOR_FEATURES;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext _parentContext;
    protected int _generatorFeatures;
    protected boolean _closed;
    protected boolean _hasNativeTypeIds;
    protected boolean _hasNativeObjectIds;
    protected boolean _mayHaveNativeIds;
    protected boolean _forceBigDecimal;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last;
    protected int _appendAt;
    protected java.lang.Object _typeId;
    protected java.lang.Object _objectId;
    protected boolean _hasNativeId;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r1;
        boolean z0, $z1, $z2, $z3;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r1;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int DEFAULT_GENERATOR_FEATURES>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = $i0;

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createRootContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.DupDetector)>(null);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r2;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first> = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds> = z0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds> = z0;

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;

        if $z1 != 0 goto label1;

        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds> = $z3;

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, null);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext $r4;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 0;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec getCodec()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = $r3;

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext getParsingContext()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext _parentContext> = $r4;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int DEFAULT_GENERATOR_FEATURES>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = $i0;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createRootContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.DupDetector)>(null);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r5;

        $r6 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first> = $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 0;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean canReadTypeId()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds> = $z0;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean canReadObjectId()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds> = $z1;

        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;

        if $z2 != 0 goto label1;

        $z3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds> = $z4;

        if r2 != null goto label4;

        $z5 = 0;

        goto label5;

     label4:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;

        $z5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r7);

     label5:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _forceBigDecimal> = $z5;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer asCopyOfValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer $r2;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r0);

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r0);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer overrideParentContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext _parentContext> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        z0 := @parameter0: boolean;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _forceBigDecimal> = z0;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version version()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.PackageVersion: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version VERSION>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParser()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParser(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>($r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParserOnFirstToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParser(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>($r2);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        return r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParser(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Parser $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext $r3;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Parser;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first>;

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext _parentContext>;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Parser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext)>($r4, r1, $z1, $z0, $r3);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParser(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Parser $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext $r6;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Parser;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first>;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec getCodec()>();

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext _parentContext>;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Parser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext)>($r4, $r5, $z1, $z0, $r6);

        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation getTokenLocation()>();

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Parser: void setLocation(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation)>($r7);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken firstToken()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken type(int)>(0);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer append(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;

        if $z0 != 0 goto label1;

        $z5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean canWriteTypeId()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds> = $z5;

     label1:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;

        if $z1 != 0 goto label2;

        $z4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean canWriteObjectId()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds> = $z4;

     label2:
        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;

        if $z2 != 0 goto label3;

        $z3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;

        if $z3 == 0 goto label4;

     label3:
        $z6 = 1;

        goto label5;

     label4:
        $z6 = 0;

     label5:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds> = $z6;

        r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParser()>();

     label6:
        $r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if $r4 == null goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r2);

        goto label6;

     label7:
        return r0;
    }

    public void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16, $z17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException $r4;
        java.lang.Object[] $r5;
        java.lang.Class $r6;
        java.lang.String $r7, $r8, $r9, $r18, $r20;
        java.lang.Float $r10;
        float $f0;
        java.math.BigDecimal $r11;
        java.lang.Double $r12;
        double $d0;
        java.lang.Number $r13;
        int $i0, $i3, i4, $i5, $i6;
        java.lang.Short $r14;
        short $s1;
        java.lang.Long $r15;
        long $l2;
        java.math.BigInteger $r16;
        java.lang.Integer $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r19, $r21;
        java.lang.RuntimeException $r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r23;
        java.lang.Object r24, r25, r27, r28, r29, r30, r31;
        int[] $r26;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first>;

        i4 = -1;

        z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;

        if z0 == 0 goto label01;

        $z14 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: boolean hasIds()>();

        if $z14 == 0 goto label01;

        $z15 = 1;

        goto label02;

     label01:
        $z15 = 0;

     label02:
        z16 = $z15;

     label03:
        i4 = i4 + 1;

        if i4 < 16 goto label07;

        i4 = 0;

        r23 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment next()>();

        if r23 != null goto label04;

        goto label43;

     label04:
        if z0 == 0 goto label05;

        $z13 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: boolean hasIds()>();

        if $z13 == 0 goto label05;

        $z17 = 1;

        goto label06;

     label05:
        $z17 = 0;

     label06:
        z16 = $z17;

     label07:
        r2 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken type(int)>(i4);

        if r2 != null goto label08;

        goto label43;

     label08:
        if z16 == 0 goto label10;

        r24 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object findObjectId(int)>(i4);

        if r24 == null goto label09;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeObjectId(java.lang.Object)>(r24);

     label09:
        r25 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object findTypeId(int)>(i4);

        if r25 == null goto label10;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeTypeId(java.lang.Object)>(r25);

     label10:
        $r26 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $i5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $i6 = $r26[$i5];

        tableswitch($i6)
        {
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label13;
            case 4: goto label14;
            case 5: goto label15;
            case 6: goto label18;
            case 7: goto label21;
            case 8: goto label27;
            case 9: goto label34;
            case 10: goto label35;
            case 11: goto label36;
            case 12: goto label37;
            default: goto label41;
        };

     label11:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();

        goto label42;

     label12:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();

        goto label42;

     label13:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeStartArray()>();

        goto label42;

     label14:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();

        goto label42;

     label15:
        r27 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object get(int)>(i4);

        $z12 = r27 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        if $z12 == 0 goto label16;

        $r21 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) r27;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>($r21);

        goto label17;

     label16:
        $r20 = (java.lang.String) r27;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r20);

     label17:
        goto label42;

     label18:
        r28 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object get(int)>(i4);

        $z11 = r28 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        if $z11 == 0 goto label19;

        $r19 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) r28;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>($r19);

        goto label20;

     label19:
        $r18 = (java.lang.String) r28;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>($r18);

     label20:
        goto label42;

     label21:
        r29 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object get(int)>(i4);

        $z7 = r29 instanceof java.lang.Integer;

        if $z7 == 0 goto label22;

        $r17 = (java.lang.Integer) r29;

        $i3 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>($i3);

        goto label26;

     label22:
        $z8 = r29 instanceof java.math.BigInteger;

        if $z8 == 0 goto label23;

        $r16 = (java.math.BigInteger) r29;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigInteger)>($r16);

        goto label26;

     label23:
        $z9 = r29 instanceof java.lang.Long;

        if $z9 == 0 goto label24;

        $r15 = (java.lang.Long) r29;

        $l2 = virtualinvoke $r15.<java.lang.Long: long longValue()>();

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>($l2);

        goto label26;

     label24:
        $z10 = r29 instanceof java.lang.Short;

        if $z10 == 0 goto label25;

        $r14 = (java.lang.Short) r29;

        $s1 = virtualinvoke $r14.<java.lang.Short: short shortValue()>();

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(short)>($s1);

        goto label26;

     label25:
        $r13 = (java.lang.Number) r29;

        $i0 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>($i0);

     label26:
        goto label42;

     label27:
        r30 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object get(int)>(i4);

        $z3 = r30 instanceof java.lang.Double;

        if $z3 == 0 goto label28;

        $r12 = (java.lang.Double) r30;

        $d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(double)>($d0);

        goto label33;

     label28:
        $z4 = r30 instanceof java.math.BigDecimal;

        if $z4 == 0 goto label29;

        $r11 = (java.math.BigDecimal) r30;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigDecimal)>($r11);

        goto label33;

     label29:
        $z5 = r30 instanceof java.lang.Float;

        if $z5 == 0 goto label30;

        $r10 = (java.lang.Float) r30;

        $f0 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(float)>($f0);

        goto label33;

     label30:
        if r30 != null goto label31;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();

        goto label33;

     label31:
        $z6 = r30 instanceof java.lang.String;

        if $z6 == 0 goto label32;

        $r9 = (java.lang.String) r30;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.lang.String)>($r9);

        goto label33;

     label32:
        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r30.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unrecognized value type for VALUE_NUMBER_FLOAT: %s, cannot serialize", $r5);

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>($r8, r1);

        throw $r4;

     label33:
        goto label42;

     label34:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeBoolean(boolean)>(1);

        goto label42;

     label35:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeBoolean(boolean)>(0);

        goto label42;

     label36:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();

        goto label42;

     label37:
        r31 = virtualinvoke r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object get(int)>(i4);

        $z1 = r31 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue;

        if $z1 == 0 goto label38;

        $r3 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue) r31;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue: void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r1);

        goto label40;

     label38:
        $z2 = r31 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializable;

        if $z2 == 0 goto label39;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeObject(java.lang.Object)>(r31);

        goto label40;

     label39:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeEmbeddedObject(java.lang.Object)>(r31);

     label40:
        goto label42;

     label41:
        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error: should never end up through this code path");

        throw $r22;

     label42:
        goto label03;

     label43:
        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4, $r5, $r6, $r7, $r9;
        boolean $z0;
        java.lang.StringBuilder $r8, $r10, $r11;
        java.lang.String $r12;
        java.lang.Object[] $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r4);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

        return r0;

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r5 == $r6 goto label2;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if $r5 == $r7 goto label3;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected END_OBJECT after copying contents of a JsonParser into TokenBuffer, got ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>(class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/util/TokenBuffer;", $r9, $r12, $r13);

     label3:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();

        return r0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r2;
        boolean z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r3, $r9;
        java.lang.StringBuilder $r5, $r17, $r18;
        java.lang.String $r7, $r11, $r16;
        int $i1, i2;
        java.io.IOException $r20;
        java.lang.IllegalStateException $r21;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[TokenBuffer: ");

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParser()>();

        i2 = 0;

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;

        if $z1 != 0 goto label01;

        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;

        if $z2 == 0 goto label02;

     label01:
        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        z0 = $z3;

     label04:
        r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if r3 != null goto label06;

     label05:
        goto label12;

     label06:
        if z0 == 0 goto label07;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendNativeIds(java.lang.StringBuilder)>($r5);

     label07:
        if i2 >= 100 goto label09;

        if i2 <= 0 goto label08;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label08:
        $r7 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if r3 != $r9 goto label09;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r11 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label09:
        goto label11;

     label10:
        $r20 := @caughtexception;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r20);

        throw $r21;

     label11:
        i2 = i2 + 1;

        goto label04;

     label12:
        if i2 < 100 goto label13;

        $r17 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... (truncated ");

        $i1 = i2 - 100;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries)");

     label13:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

        catch java.io.IOException from label04 to label05 with label10;
        catch java.io.IOException from label06 to label09 with label10;
    }

    private final void _appendNativeIds(java.lang.StringBuilder)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.StringBuilder r1, $r6, $r8, $r10, $r12;
        java.lang.Object r2, r3;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r4, $r5;
        java.lang.String $r7, $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.StringBuilder;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $i1 = $i0 - 1;

        r2 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object findObjectId(int)>($i1);

        if r2 == null goto label1;

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[objectId=");

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

     label1:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $i3 = $i2 - 1;

        r3 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object findTypeId(int)>($i3);

        if r3 == null goto label2;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[typeId=");

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

     label2:
        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();

        $i2 = $i0 | $i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = $i2;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();

        $i2 = $i1 ^ -1;

        $i3 = $i0 & $i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = $i3;

        return r0;
    }

    public boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();

        $i2 = $i0 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getFeatureMask()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures>;

        return $i0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        i0 := @parameter0: int;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = i0;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int getFeatureMask()>();

        $i3 = i1 ^ -1;

        $i5 = i2 & $i3;

        $i4 = i0 & i1;

        $i6 = $i5 | $i4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _generatorFeatures> = $i6;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator setCodec(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec getCodec()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        return $r1;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext getOutputContext()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        return $r1;
    }

    public boolean canWriteBinaryNatively()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        return 1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_WRITE_CAPABILITIES>;

        return $r1;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _closed> = 1;

        return;
    }

    public boolean isClosed()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _closed>;

        return $z0;
    }

    public final void writeStartArray() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1, $r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r2);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r4;

        return;
    }

    public void writeStartArray(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2, $r4, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r3);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r5;

        return;
    }

    public void writeStartArray(java.lang.Object, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.Object r1;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2, $r4, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r3);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r5;

        return;
    }

    public final void writeEndArray() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendEndMarker(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r2);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        r1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext getParent()>();

        if r1 == null goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = r1;

     label1:
        return;
    }

    public final void writeStartObject() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1, $r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r2);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r4;

        return;
    }

    public void writeStartObject(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext r2, $r3, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r4);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        r2 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext(java.lang.Object)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = r2;

        return;
    }

    public void writeStartObject(java.lang.Object, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.Object r1;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext r2, $r3, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendStartMarker(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r4);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        r2 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext(java.lang.Object)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = r2;

        return;
    }

    public final void writeEndObject() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendEndMarker(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r2);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        r1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext getParent()>();

        if r1 == null goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = r1;

     label1:
        return;
    }

    public final void writeFieldName(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendFieldName(java.lang.Object)>(r1);

        return;
    }

    public void writeFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>($r3);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendFieldName(java.lang.Object)>(r1);

        return;
    }

    public void writeString(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();

        goto label2;

     label1:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r2, r1);

     label2:
        return;
    }

    public void writeString(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        char[] r1;
        int i0, i1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(java.lang.String)>($r2);

        return;
    }

    public void writeString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        if r1 != null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();

        goto label2;

     label1:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r2, r1);

     label2:
        return;
    }

    public void writeRawUTF8String(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();

        return;
    }

    public void writeUTF8String(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();

        return;
    }

    public void writeRaw(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();

        return;
    }

    public void writeRaw(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();

        return;
    }

    public void writeRaw(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();

        return;
    }

    public void writeRaw(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        char[] r1;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();

        return;
    }

    public void writeRaw(char) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        char c0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        c0 := @parameter0: char;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _reportUnsupportedOperation()>();

        return;
    }

    public void writeRawValue(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.String;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r3, $r2);

        return;
    }

    public void writeRawValue(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 > 0 goto label1;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i1 == $i3 goto label2;

     label1:
        $i2 = i0 + i1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

     label2:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r2, $r3);

        return;
    }

    public void writeRawValue(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        char[] r1;
        int i0, i1;
        java.lang.String $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r3, $r2);

        return;
    }

    public void writeNumber(short) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        short s0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;
        java.lang.Short $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        s0 := @parameter0: short;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r1, $r2);

        return;
    }

    public void writeNumber(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;
        java.lang.Integer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        i0 := @parameter0: int;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r1, $r2);

        return;
    }

    public void writeNumber(long) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        long l0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;
        java.lang.Long $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        l0 := @parameter0: long;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r1, $r2);

        return;
    }

    public void writeNumber(double) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        double d0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;
        java.lang.Double $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        d0 := @parameter0: double;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r1, $r2);

        return;
    }

    public void writeNumber(float) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        float f0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;
        java.lang.Float $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        f0 := @parameter0: float;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r1, $r2);

        return;
    }

    public void writeNumber(java.math.BigDecimal) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.math.BigDecimal r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.math.BigDecimal;

        if r1 != null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();

        goto label2;

     label1:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r2, r1);

     label2:
        return;
    }

    public void writeNumber(java.math.BigInteger) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.math.BigInteger r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.math.BigInteger;

        if r1 != null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();

        goto label2;

     label1:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r2, r1);

     label2:
        return;
    }

    public void writeNumber(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r2, r1);

        return;
    }

    public void writeBoolean(boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        goto label2;

     label1:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r2);

        return;
    }

    public void writeNull() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r1);

        return;
    }

    public void writeObject(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.Object r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r6;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();

        return;

     label1:
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if r2 == class "[B" goto label2;

        $z0 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RawValue;

        if $z0 == 0 goto label3;

     label2:
        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r3, r1);

        return;

     label3:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        if $r4 != null goto label4;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r6, r1);

        goto label5;

     label4:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec: void writeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(r0, r1);

     label5:
        return;
    }

    public void writeTree(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode;

        if r1 != null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();

        return;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        if $r2 != null goto label2;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r4, r1);

        goto label3;

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec: void writeTree(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode)>(r0, r1);

     label3:
        return;
    }

    public void writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        byte[] r2, r3;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = newarray (byte)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, r3, 0, i1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeObject(java.lang.Object)>(r3);

        return;
    }

    public int writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.InputStream r2;
        int i0;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.InputStream;

        i0 := @parameter2: int;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public boolean canWriteTypeId()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeTypeIds>;

        return $z0;
    }

    public boolean canWriteObjectId()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeObjectIds>;

        return $z0;
    }

    public void writeTypeId(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.Object r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 1;

        return;
    }

    public void writeObjectId(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.Object r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 1;

        return;
    }

    public void writeEmbeddedObject(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.Object;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r2, r1);

        return;
    }

    public void copyCurrentEvent(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        boolean $z0, $z1, $z2;
        int[] $r2, $r5, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        java.lang.Object $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType $r6, $r10;
        float $f0;
        java.math.BigDecimal $r7, $r8;
        double $d0;
        java.math.BigInteger $r11;
        long $l7;
        java.lang.String $r12, $r14, $r20;
        char[] $r13;
        java.lang.RuntimeException $r15;
        java.lang.StringBuilder $r16, $r17, $r19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;

        if $z0 == 0 goto label01;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

     label01:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $i0 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label09;
            case 8: goto label13;
            case 9: goto label18;
            case 10: goto label19;
            case 11: goto label20;
            case 12: goto label21;
            default: goto label22;
        };

     label02:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();

        goto label23;

     label03:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();

        goto label23;

     label04:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartArray()>();

        goto label23;

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndArray()>();

        goto label23;

     label06:
        $r14 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r14);

        goto label23;

     label07:
        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasTextCharacters()>();

        if $z2 == 0 goto label08;

        $r13 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: char[] getTextCharacters()>();

        $i8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getTextOffset()>();

        $i9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getTextLength()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(char[],int,int)>($r13, $i8, $i9);

        goto label23;

     label08:
        $r12 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(java.lang.String)>($r12);

        goto label23;

     label09:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType>;

        $r10 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();

        $i4 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType: int ordinal()>();

        $i5 = $r9[$i4];

        lookupswitch($i5)
        {
            case 1: goto label10;
            case 2: goto label11;
            default: goto label12;
        };

     label10:
        $i6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getIntValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(int)>($i6);

        goto label23;

     label11:
        $r11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.math.BigInteger getBigIntegerValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(java.math.BigInteger)>($r11);

        goto label23;

     label12:
        $l7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: long getLongValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(long)>($l7);

        goto label23;

     label13:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _forceBigDecimal>;

        if $z1 == 0 goto label14;

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(java.math.BigDecimal)>($r8);

        goto label23;

     label14:
        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType>;

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();

        $i2 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType: int ordinal()>();

        $i3 = $r5[$i2];

        lookupswitch($i3)
        {
            case 3: goto label15;
            case 4: goto label16;
            default: goto label17;
        };

     label15:
        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(java.math.BigDecimal)>($r7);

        goto label23;

     label16:
        $f0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: float getFloatValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(float)>($f0);

        goto label23;

     label17:
        $d0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: double getDoubleValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(double)>($d0);

        goto label23;

     label18:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeBoolean(boolean)>(1);

        goto label23;

     label19:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeBoolean(boolean)>(0);

        goto label23;

     label20:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();

        goto label23;

     label21:
        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeObject(java.lang.Object)>($r4);

        goto label23;

     label22:
        $r15 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Internal error: unexpected token: ");

        $r18 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label23:
        return;
    }

    public void copyCurrentStructure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, r6;
        int[] $r3;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if r6 != $r2 goto label02;

        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;

        if $z2 == 0 goto label01;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

     label01:
        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r5);

        r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        goto label03;

     label02:
        if r6 != null goto label03;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No token available from argument `JsonParser`");

        throw $r4;

     label03:
        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $i0 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label09;
            case 3: goto label04;
            case 4: goto label08;
            default: goto label10;
        };

     label04:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;

        if $z0 == 0 goto label05;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartArray()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _copyBufferContents(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

        goto label11;

     label06:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;

        if $z1 == 0 goto label07;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

     label07:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _copyBufferContents(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

        goto label11;

     label08:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndArray()>();

        goto label11;

     label09:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();

        goto label11;

     label10:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _copyBufferValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r1, r6);

     label11:
        return;
    }

    protected void _copyBufferContents(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        int[] $r3;
        int $i0, $i1, i2;
        boolean $z0, $z1, $z2;
        java.lang.String $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        i2 = 1;

     label01:
        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if $r5 == null goto label11;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $i0 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label09;
            case 3: goto label04;
            case 4: goto label08;
            case 5: goto label02;
            default: goto label10;
        };

     label02:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;

        if $z0 == 0 goto label03;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

     label03:
        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r4);

        goto label01;

     label04:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;

        if $z1 == 0 goto label05;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartArray()>();

        i2 = i2 + 1;

        goto label01;

     label06:
        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;

        if $z2 == 0 goto label07;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

     label07:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();

        i2 = i2 + 1;

        goto label01;

     label08:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndArray()>();

        i2 = i2 + -1;

        if i2 != 0 goto label01;

        return;

     label09:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeEndObject()>();

        i2 = i2 + -1;

        if i2 != 0 goto label01;

        return;

     label10:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _copyBufferValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r1, $r5);

        goto label01;

     label11:
        return;
    }

    private void _copyBufferValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r2, $r6;
        java.lang.Number r3;
        boolean $z0, $z1, $z2;
        int[] $r4, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        java.lang.Object $r5;
        java.math.BigDecimal $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType $r9;
        java.math.BigInteger $r10;
        long $l5;
        java.lang.String $r11, $r17;
        char[] $r12;
        java.lang.RuntimeException $r13;
        java.lang.StringBuilder $r14, $r15, $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _mayHaveNativeIds>;

        if $z0 == 0 goto label01;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _checkNativeIds(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

     label01:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $i0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 6: goto label02;
            case 7: goto label04;
            case 8: goto label08;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            default: goto label14;
        };

     label02:
        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasTextCharacters()>();

        if $z2 == 0 goto label03;

        $r12 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: char[] getTextCharacters()>();

        $i6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getTextOffset()>();

        $i7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getTextLength()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(char[],int,int)>($r12, $i6, $i7);

        goto label15;

     label03:
        $r11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(java.lang.String)>($r11);

        goto label15;

     label04:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType>;

        $r9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType getNumberType()>();

        $i2 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType: int ordinal()>();

        $i3 = $r8[$i2];

        lookupswitch($i3)
        {
            case 1: goto label05;
            case 2: goto label06;
            default: goto label07;
        };

     label05:
        $i4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getIntValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(int)>($i4);

        goto label15;

     label06:
        $r10 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.math.BigInteger getBigIntegerValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(java.math.BigInteger)>($r10);

        goto label15;

     label07:
        $l5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: long getLongValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(long)>($l5);

        goto label15;

     label08:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _forceBigDecimal>;

        if $z1 == 0 goto label09;

        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNumber(java.math.BigDecimal)>($r7);

        goto label15;

     label09:
        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValueExact()>();

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($r6, r3);

        goto label15;

     label10:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeBoolean(boolean)>(1);

        goto label15;

     label11:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeBoolean(boolean)>(0);

        goto label15;

     label12:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeNull()>();

        goto label15;

     label13:
        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeObject(java.lang.Object)>($r5);

        goto label15;

     label14:
        $r13 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Internal error: unexpected token: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label15:
        return;
    }

    private final void _checkNativeIds(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        $r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Object getTypeId()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId> = $r2;

        if $r2 == null goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 1;

     label1:
        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Object getObjectId()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId> = $r3;

        if $r3 == null goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId> = 1;

     label2:
        return;
    }

    protected final void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2;
        boolean $z0;
        int $i1, $i2, $i3, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r3, $r6, r7;
        java.lang.Object $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId>;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId>;

        r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)>($i4, r1, $r5, $r4);

        goto label2;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        r7 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($i1, r1);

     label2:
        if r7 != null goto label3;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = $i3;

        goto label4;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = r7;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 1;

     label4:
        return;
    }

    protected final void _appendValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        java.lang.Object r2, $r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r3;
        boolean $z0;
        int $i1, $i2, $i3, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r4, $r7, r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId>;

        r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)>($i4, r1, r2, $r6, $r5);

        goto label2;

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        r8 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($i1, r1, r2);

     label2:
        if r8 != null goto label3;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = $i3;

        goto label4;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = r8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 1;

     label4:
        return;
    }

    protected final void _appendFieldName(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.Object r1, $r4, $r5;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r6;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r3, $r7, r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId>;

        r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)>($i3, $r6, r1, $r5, $r4);

        goto label2;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        r8 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object)>($i0, $r2, r1);

     label2:
        if r8 != null goto label3;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = $i2;

        goto label4;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = r8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 1;

     label4:
        return;
    }

    protected final void _appendStartMarker(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment $r2, $r5, r6;
        java.lang.Object $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId>;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _objectId>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.Object _typeId>;

        r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)>($i3, r1, $r4, $r3);

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        r6 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($i0, r1);

     label2:
        if r6 != null goto label3;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = $i2;

        goto label4;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 1;

     label4:
        return;
    }

    protected final void _appendEndMarker(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        r2 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($i0, r1);

        if r2 != null goto label1;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = $i2;

        goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int _appendAt> = 1;

     label2:
        return;
    }

    protected void _reportUnsupportedOperation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Called operation not supported for TokenBuffer");

        throw $r1;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext getOutputContext()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext getOutputContext()>();

        return $r1;
    }

    static void <clinit>()
    {
        int $i0;

        $i0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: int collectDefaults()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: int DEFAULT_GENERATOR_FEATURES> = $i0;

        return;
    }
}
