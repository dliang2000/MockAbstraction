final class org.joda.time.chrono.GJEraDateTimeField extends org.joda.time.field.BaseDateTimeField
{
    private static final long serialVersionUID;
    private final org.joda.time.chrono.BasicChronology iChronology;

    void <init>(org.joda.time.chrono.BasicChronology)
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        org.joda.time.chrono.BasicChronology r1;
        org.joda.time.DateTimeFieldType $r2;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        r1 := @parameter0: org.joda.time.chrono.BasicChronology;

        $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType era()>();

        specialinvoke r0.<org.joda.time.field.BaseDateTimeField: void <init>(org.joda.time.DateTimeFieldType)>($r2);

        r0.<org.joda.time.chrono.GJEraDateTimeField: org.joda.time.chrono.BasicChronology iChronology> = r1;

        return;
    }

    public boolean isLenient()
    {
        org.joda.time.chrono.GJEraDateTimeField r0;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        return 0;
    }

    public int get(long)
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        long l0;
        org.joda.time.chrono.BasicChronology $r1;
        int $i1;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.GJEraDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i1 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getYear(long)>(l0);

        if $i1 > 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public java.lang.String getAsText(int, java.util.Locale)
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        int i0;
        java.util.Locale r1;
        org.joda.time.chrono.GJLocaleSymbols $r2;
        java.lang.String $r3;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: org.joda.time.chrono.GJLocaleSymbols forLocale(java.util.Locale)>(r1);

        $r3 = virtualinvoke $r2.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String eraValueToText(int)>(i0);

        return $r3;
    }

    public long set(long, int)
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        long l0, $l5;
        int i1, i2, i3, $i4;
        org.joda.time.chrono.BasicChronology $r1, $r2;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        staticinvoke <org.joda.time.field.FieldUtils: void verifyValueBounds(org.joda.time.DateTimeField,int,int,int)>(r0, i1, 0, 1);

        i2 = virtualinvoke r0.<org.joda.time.chrono.GJEraDateTimeField: int get(long)>(l0);

        if i2 == i1 goto label1;

        $r1 = r0.<org.joda.time.chrono.GJEraDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        i3 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getYear(long)>(l0);

        $r2 = r0.<org.joda.time.chrono.GJEraDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i4 = neg i3;

        $l5 = virtualinvoke $r2.<org.joda.time.chrono.BasicChronology: long setYear(long,int)>(l0, $i4);

        return $l5;

     label1:
        return l0;
    }

    public long set(long, java.lang.String, java.util.Locale)
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        long l0, $l2;
        java.lang.String r1;
        java.util.Locale r2;
        org.joda.time.chrono.GJLocaleSymbols $r3;
        int $i1;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Locale;

        $r3 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: org.joda.time.chrono.GJLocaleSymbols forLocale(java.util.Locale)>(r2);

        $i1 = virtualinvoke $r3.<org.joda.time.chrono.GJLocaleSymbols: int eraTextToValue(java.lang.String)>(r1);

        $l2 = virtualinvoke r0.<org.joda.time.chrono.GJEraDateTimeField: long set(long,int)>(l0, $i1);

        return $l2;
    }

    public long roundFloor(long)
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        long l0, $l2;
        int $i1;
        org.joda.time.chrono.BasicChronology $r1;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        l0 := @parameter0: long;

        $i1 = virtualinvoke r0.<org.joda.time.chrono.GJEraDateTimeField: int get(long)>(l0);

        if $i1 != 1 goto label1;

        $r1 = r0.<org.joda.time.chrono.GJEraDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $l2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: long setYear(long,int)>(0L, 1);

        return $l2;

     label1:
        return -9223372036854775808L;
    }

    public long roundCeiling(long)
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        long l0, $l2;
        int $i1;
        org.joda.time.chrono.BasicChronology $r1;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        l0 := @parameter0: long;

        $i1 = virtualinvoke r0.<org.joda.time.chrono.GJEraDateTimeField: int get(long)>(l0);

        if $i1 != 0 goto label1;

        $r1 = r0.<org.joda.time.chrono.GJEraDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $l2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: long setYear(long,int)>(0L, 1);

        return $l2;

     label1:
        return 9223372036854775807L;
    }

    public long roundHalfFloor(long)
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        long l0, $l1;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.joda.time.chrono.GJEraDateTimeField: long roundFloor(long)>(l0);

        return $l1;
    }

    public long roundHalfCeiling(long)
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        long l0, $l1;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.joda.time.chrono.GJEraDateTimeField: long roundFloor(long)>(l0);

        return $l1;
    }

    public long roundHalfEven(long)
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        long l0, $l1;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.joda.time.chrono.GJEraDateTimeField: long roundFloor(long)>(l0);

        return $l1;
    }

    public org.joda.time.DurationField getDurationField()
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        org.joda.time.DurationFieldType $r1;
        org.joda.time.field.UnsupportedDurationField $r2;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType eras()>();

        $r2 = staticinvoke <org.joda.time.field.UnsupportedDurationField: org.joda.time.field.UnsupportedDurationField getInstance(org.joda.time.DurationFieldType)>($r1);

        return $r2;
    }

    public org.joda.time.DurationField getRangeDurationField()
    {
        org.joda.time.chrono.GJEraDateTimeField r0;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        return null;
    }

    public int getMinimumValue()
    {
        org.joda.time.chrono.GJEraDateTimeField r0;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        return 0;
    }

    public int getMaximumValue()
    {
        org.joda.time.chrono.GJEraDateTimeField r0;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        return 1;
    }

    public int getMaximumTextLength(java.util.Locale)
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        java.util.Locale r1;
        org.joda.time.chrono.GJLocaleSymbols $r2;
        int $i0;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        r1 := @parameter0: java.util.Locale;

        $r2 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: org.joda.time.chrono.GJLocaleSymbols forLocale(java.util.Locale)>(r1);

        $i0 = virtualinvoke $r2.<org.joda.time.chrono.GJLocaleSymbols: int getEraMaxTextLength()>();

        return $i0;
    }

    private java.lang.Object readResolve()
    {
        org.joda.time.chrono.GJEraDateTimeField r0;
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.GJEraDateTimeField;

        $r1 = r0.<org.joda.time.chrono.GJEraDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: org.joda.time.DateTimeField era()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.GJEraDateTimeField: long serialVersionUID> = 4240986525305515528L;

        return;
    }
}
