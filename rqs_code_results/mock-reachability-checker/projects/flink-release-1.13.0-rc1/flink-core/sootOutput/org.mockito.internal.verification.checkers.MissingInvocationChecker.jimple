public class org.mockito.internal.verification.checkers.MissingInvocationChecker extends java.lang.Object
{

    private void <init>()
    {
        org.mockito.internal.verification.checkers.MissingInvocationChecker r0;

        r0 := @this: org.mockito.internal.verification.checkers.MissingInvocationChecker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void checkMissingInvocation(java.util.List, org.mockito.invocation.MatchableInvocation)
    {
        java.util.List r0, r2, $r6;
        org.mockito.invocation.MatchableInvocation r1;
        org.mockito.invocation.Invocation r3;
        java.lang.Integer[] r4;
        boolean $z0;
        java.lang.Object[] $r7;
        org.mockito.internal.reporting.SmartPrinter $r8;
        java.lang.String $r9, $r10;
        org.mockito.invocation.Location $r11;
        java.lang.AssertionError $r12;
        org.mockito.exceptions.base.MockitoAssertionError $r13;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: org.mockito.invocation.MatchableInvocation;

        r2 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: java.util.List findInvocations(java.util.List,org.mockito.invocation.MatchableInvocation)>(r0, r1);

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r3 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: org.mockito.invocation.Invocation findSimilarInvocation(java.util.List,org.mockito.invocation.MatchableInvocation)>(r0, r1);

        if r3 != null goto label2;

        $r13 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoAssertionError wantedButNotInvoked(org.mockito.invocation.DescribedInvocation,java.util.List)>(r1, r0);

        throw $r13;

     label2:
        $r6 = interfaceinvoke r1.<org.mockito.invocation.MatchableInvocation: java.util.List getMatchers()>();

        $r7 = interfaceinvoke r3.<org.mockito.invocation.Invocation: java.lang.Object[] getArguments()>();

        r4 = staticinvoke <org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool: java.lang.Integer[] getSuspiciouslyNotMatchingArgsIndexes(java.util.List,java.lang.Object[])>($r6, $r7);

        $r8 = new org.mockito.internal.reporting.SmartPrinter;

        specialinvoke $r8.<org.mockito.internal.reporting.SmartPrinter: void <init>(org.mockito.invocation.MatchableInvocation,org.mockito.invocation.Invocation,java.lang.Integer[])>(r1, r3, r4);

        $r9 = virtualinvoke $r8.<org.mockito.internal.reporting.SmartPrinter: java.lang.String getWanted()>();

        $r10 = virtualinvoke $r8.<org.mockito.internal.reporting.SmartPrinter: java.lang.String getActual()>();

        $r11 = interfaceinvoke r3.<org.mockito.invocation.Invocation: org.mockito.invocation.Location getLocation()>();

        $r12 = staticinvoke <org.mockito.internal.exceptions.Reporter: java.lang.AssertionError argumentsAreDifferent(java.lang.String,java.lang.String,org.mockito.invocation.Location)>($r9, $r10, $r11);

        throw $r12;
    }

    public static void checkMissingInvocation(java.util.List, org.mockito.invocation.MatchableInvocation, org.mockito.internal.verification.api.InOrderContext)
    {
        java.util.List r0, r3;
        org.mockito.invocation.MatchableInvocation r1;
        org.mockito.internal.verification.api.InOrderContext r2;
        org.mockito.invocation.Invocation r4;
        boolean $z0;
        org.mockito.exceptions.base.MockitoAssertionError $r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: org.mockito.invocation.MatchableInvocation;

        r2 := @parameter2: org.mockito.internal.verification.api.InOrderContext;

        r3 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: java.util.List findAllMatchingUnverifiedChunks(java.util.List,org.mockito.invocation.MatchableInvocation,org.mockito.internal.verification.api.InOrderContext)>(r0, r1, r2);

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r4 = staticinvoke <org.mockito.internal.invocation.InvocationsFinder: org.mockito.invocation.Invocation findPreviousVerifiedInOrder(java.util.List,org.mockito.internal.verification.api.InOrderContext)>(r0, r2);

        if r4 == null goto label2;

        $r5 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoAssertionError wantedButNotInvokedInOrder(org.mockito.invocation.DescribedInvocation,org.mockito.invocation.DescribedInvocation)>(r1, r4);

        throw $r5;

     label2:
        staticinvoke <org.mockito.internal.verification.checkers.MissingInvocationChecker: void checkMissingInvocation(java.util.List,org.mockito.invocation.MatchableInvocation)>(r0, r1);

        return;
    }
}
