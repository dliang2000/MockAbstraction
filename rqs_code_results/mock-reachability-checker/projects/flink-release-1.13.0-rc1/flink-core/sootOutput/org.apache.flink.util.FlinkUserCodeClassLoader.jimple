public abstract class org.apache.flink.util.FlinkUserCodeClassLoader extends java.net.URLClassLoader
{
    public static final java.util.function.Consumer NOOP_EXCEPTION_HANDLER;
    private final java.util.function.Consumer classLoadingExceptionHandler;

    protected void <init>(java.net.URL[], java.lang.ClassLoader)
    {
        org.apache.flink.util.FlinkUserCodeClassLoader r0;
        java.net.URL[] r1;
        java.lang.ClassLoader r2;
        java.util.function.Consumer $r3;

        r0 := @this: org.apache.flink.util.FlinkUserCodeClassLoader;

        r1 := @parameter0: java.net.URL[];

        r2 := @parameter1: java.lang.ClassLoader;

        $r3 = <org.apache.flink.util.FlinkUserCodeClassLoader: java.util.function.Consumer NOOP_EXCEPTION_HANDLER>;

        specialinvoke r0.<org.apache.flink.util.FlinkUserCodeClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.util.function.Consumer)>(r1, r2, $r3);

        return;
    }

    protected void <init>(java.net.URL[], java.lang.ClassLoader, java.util.function.Consumer)
    {
        org.apache.flink.util.FlinkUserCodeClassLoader r0;
        java.net.URL[] r1;
        java.lang.ClassLoader r2;
        java.util.function.Consumer r3;

        r0 := @this: org.apache.flink.util.FlinkUserCodeClassLoader;

        r1 := @parameter0: java.net.URL[];

        r2 := @parameter1: java.lang.ClassLoader;

        r3 := @parameter2: java.util.function.Consumer;

        specialinvoke r0.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>(r1, r2);

        r0.<org.apache.flink.util.FlinkUserCodeClassLoader: java.util.function.Consumer classLoadingExceptionHandler> = r3;

        return;
    }

    public final java.lang.Class loadClass(java.lang.String, boolean) throws java.lang.ClassNotFoundException
    {
        org.apache.flink.util.FlinkUserCodeClassLoader r0;
        java.lang.String r1;
        boolean z0;
        java.lang.Object $r3;
        java.lang.Class $r4;
        java.lang.Throwable $r5, $r6;
        java.util.function.Consumer $r7;

        r0 := @this: org.apache.flink.util.FlinkUserCodeClassLoader;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

     label1:
        $r3 = virtualinvoke r0.<org.apache.flink.util.FlinkUserCodeClassLoader: java.lang.Object getClassLoadingLock(java.lang.String)>(r1);

        entermonitor $r3;

     label2:
        $r4 = virtualinvoke r0.<org.apache.flink.util.FlinkUserCodeClassLoader: java.lang.Class loadClassWithoutExceptionHandling(java.lang.String,boolean)>(r1, z0);

        exitmonitor $r3;

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r5;

     label6:
        $r6 := @caughtexception;

        $r7 = r0.<org.apache.flink.util.FlinkUserCodeClassLoader: java.util.function.Consumer classLoadingExceptionHandler>;

        interfaceinvoke $r7.<java.util.function.Consumer: void accept(java.lang.Object)>($r6);

        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label6 with label6;
    }

    protected java.lang.Class loadClassWithoutExceptionHandling(java.lang.String, boolean) throws java.lang.ClassNotFoundException
    {
        org.apache.flink.util.FlinkUserCodeClassLoader r0;
        java.lang.String r1;
        boolean z0;
        java.lang.Class $r2;

        r0 := @this: org.apache.flink.util.FlinkUserCodeClassLoader;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>(r1, z0);

        return $r2;
    }

    public static void lambda$static$0(java.lang.Throwable)
    {
        java.lang.Throwable r0;

        r0 := @parameter0: java.lang.Throwable;

        return;
    }

    static void <clinit>()
    {
        java.util.function.Consumer $r0;

        $r0 = staticinvoke <org.apache.flink.util.FlinkUserCodeClassLoader$lambda_static_0__20: java.util.function.Consumer bootstrap$()>();

        <org.apache.flink.util.FlinkUserCodeClassLoader: java.util.function.Consumer NOOP_EXCEPTION_HANDLER> = $r0;

        return;
    }
}
