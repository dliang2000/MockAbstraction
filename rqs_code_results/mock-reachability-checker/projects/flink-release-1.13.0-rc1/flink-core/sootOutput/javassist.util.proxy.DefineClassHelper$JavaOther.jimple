class javassist.util.proxy.DefineClassHelper$JavaOther extends javassist.util.proxy.DefineClassHelper$Helper
{
    private final java.lang.reflect.Method defineClass;
    private final javassist.util.proxy.SecurityActions stack;

    private void <init>()
    {
        javassist.util.proxy.DefineClassHelper$JavaOther r0;
        java.lang.reflect.Method $r1;
        javassist.util.proxy.SecurityActions $r2;

        r0 := @this: javassist.util.proxy.DefineClassHelper$JavaOther;

        specialinvoke r0.<javassist.util.proxy.DefineClassHelper$Helper: void <init>(javassist.util.proxy.DefineClassHelper$1)>(null);

        $r1 = specialinvoke r0.<javassist.util.proxy.DefineClassHelper$JavaOther: java.lang.reflect.Method getDefineClassMethod()>();

        r0.<javassist.util.proxy.DefineClassHelper$JavaOther: java.lang.reflect.Method defineClass> = $r1;

        $r2 = <javassist.util.proxy.SecurityActions: javassist.util.proxy.SecurityActions stack>;

        r0.<javassist.util.proxy.DefineClassHelper$JavaOther: javassist.util.proxy.SecurityActions stack> = $r2;

        return;
    }

    private final java.lang.reflect.Method getDefineClassMethod()
    {
        javassist.util.proxy.DefineClassHelper$JavaOther r0;
        javassist.util.proxy.DefineClassHelper$Helper $r2;
        java.lang.Class[] $r3;
        java.lang.Class $r4, $r5, $r8, $r9;
        java.lang.reflect.Method $r6;
        javassist.util.proxy.SecurityActions $r7;
        java.lang.IllegalAccessError $r10;
        java.lang.NoSuchMethodException $r11;
        java.lang.RuntimeException $r12;

        r0 := @this: javassist.util.proxy.DefineClassHelper$JavaOther;

        $r2 = staticinvoke <javassist.util.proxy.DefineClassHelper: javassist.util.proxy.DefineClassHelper$Helper access$400()>();

        if $r2 == null goto label1;

        $r7 = r0.<javassist.util.proxy.DefineClassHelper$JavaOther: javassist.util.proxy.SecurityActions stack>;

        $r8 = virtualinvoke $r7.<javassist.util.proxy.SecurityActions: java.lang.Class getCallerClass()>();

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r8 == $r9 goto label1;

        $r10 = new java.lang.IllegalAccessError;

        specialinvoke $r10.<java.lang.IllegalAccessError: void <init>(java.lang.String)>("Access denied for caller.");

        throw $r10;

     label1:
        $r3 = newarray (java.lang.Class)[5];

        $r3[0] = class "Ljava/lang/String;";

        $r3[1] = class "[B";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[2] = $r4;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[3] = $r5;

        $r3[4] = class "Ljava/security/ProtectionDomain;";

        $r6 = staticinvoke <javassist.util.proxy.SecurityActions: java.lang.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Ljava/lang/ClassLoader;", "defineClass", $r3);

     label2:
        return $r6;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("cannot initialize", $r11);

        throw $r12;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    java.lang.Class defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain) throws java.lang.ClassFormatError, javassist.CannotCompileException
    {
        javassist.util.proxy.DefineClassHelper$JavaOther r0;
        java.lang.String r1;
        byte[] r2;
        int i0, i1;
        java.lang.Class r3, r6, $r16, r24;
        java.lang.ClassLoader r4;
        java.security.ProtectionDomain r5;
        javassist.util.proxy.SecurityActions $r8;
        java.lang.reflect.Method $r9, $r11, $r15, $r19;
        java.lang.Object[] $r10;
        java.lang.Integer $r12, $r13;
        java.lang.Object $r14;
        java.lang.IllegalAccessError $r17;
        java.lang.Throwable $r18, $r20;
        boolean $z0, $z1;
        javassist.CannotCompileException $r21;
        java.lang.RuntimeException $r22;
        java.lang.ClassFormatError $r23;

        r0 := @this: javassist.util.proxy.DefineClassHelper$JavaOther;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.Class;

        r4 := @parameter5: java.lang.ClassLoader;

        r5 := @parameter6: java.security.ProtectionDomain;

        $r8 = r0.<javassist.util.proxy.DefineClassHelper$JavaOther: javassist.util.proxy.SecurityActions stack>;

        r6 = virtualinvoke $r8.<javassist.util.proxy.SecurityActions: java.lang.Class getCallerClass()>();

        if r6 == class "Ljavassist/util/proxy/DefineClassHelper;" goto label1;

        $r16 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if r6 == $r16 goto label1;

        $r17 = new java.lang.IllegalAccessError;

        specialinvoke $r17.<java.lang.IllegalAccessError: void <init>(java.lang.String)>("Access denied for caller.");

        throw $r17;

     label1:
        $r9 = r0.<javassist.util.proxy.DefineClassHelper$JavaOther: java.lang.reflect.Method defineClass>;

        staticinvoke <javassist.util.proxy.SecurityActions: void setAccessible(java.lang.reflect.AccessibleObject,boolean)>($r9, 1);

        $r11 = r0.<javassist.util.proxy.DefineClassHelper$JavaOther: java.lang.reflect.Method defineClass>;

        $r10 = newarray (java.lang.Object)[5];

        $r10[0] = r1;

        $r10[1] = r2;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10[2] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r10[3] = $r13;

        $r10[4] = r5;

        $r14 = virtualinvoke $r11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r10);

        r24 = (java.lang.Class) $r14;

     label2:
        $r15 = r0.<javassist.util.proxy.DefineClassHelper$JavaOther: java.lang.reflect.Method defineClass>;

        staticinvoke <javassist.util.proxy.SecurityActions: void setAccessible(java.lang.reflect.AccessibleObject,boolean)>($r15, 0);

        return r24;

     label3:
        $r20 := @caughtexception;

        $z0 = $r20 instanceof java.lang.ClassFormatError;

        if $z0 == 0 goto label4;

        $r23 = (java.lang.ClassFormatError) $r20;

        throw $r23;

     label4:
        $z1 = $r20 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label5;

        $r22 = (java.lang.RuntimeException) $r20;

        throw $r22;

     label5:
        $r21 = new javassist.CannotCompileException;

        specialinvoke $r21.<javassist.CannotCompileException: void <init>(java.lang.Throwable)>($r20);

        throw $r21;

     label6:
        $r18 := @caughtexception;

     label7:
        $r19 = r0.<javassist.util.proxy.DefineClassHelper$JavaOther: java.lang.reflect.Method defineClass>;

        staticinvoke <javassist.util.proxy.SecurityActions: void setAccessible(java.lang.reflect.AccessibleObject,boolean)>($r19, 0);

        throw $r18;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label7 with label6;
    }

    void <init>(javassist.util.proxy.DefineClassHelper$1)
    {
        javassist.util.proxy.DefineClassHelper$JavaOther r0;
        javassist.util.proxy.DefineClassHelper$1 r1;

        r0 := @this: javassist.util.proxy.DefineClassHelper$JavaOther;

        r1 := @parameter0: javassist.util.proxy.DefineClassHelper$1;

        specialinvoke r0.<javassist.util.proxy.DefineClassHelper$JavaOther: void <init>()>();

        return;
    }
}
