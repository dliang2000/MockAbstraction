public class org.mockito.internal.matchers.Equals extends java.lang.Object implements org.mockito.ArgumentMatcher, org.mockito.internal.matchers.ContainsExtraTypeInfo, java.io.Serializable
{
    private final java.lang.Object wanted;

    public void <init>(java.lang.Object)
    {
        org.mockito.internal.matchers.Equals r0;
        java.lang.Object r1;

        r0 := @this: org.mockito.internal.matchers.Equals;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mockito.internal.matchers.Equals: java.lang.Object wanted> = r1;

        return;
    }

    public boolean matches(java.lang.Object)
    {
        org.mockito.internal.matchers.Equals r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @this: org.mockito.internal.matchers.Equals;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        $z0 = staticinvoke <org.mockito.internal.matchers.Equality: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        return $z0;
    }

    public java.lang.String toString()
    {
        org.mockito.internal.matchers.Equals r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: org.mockito.internal.matchers.Equals;

        $r1 = r0.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        $r2 = specialinvoke r0.<org.mockito.internal.matchers.Equals: java.lang.String describe(java.lang.Object)>($r1);

        return $r2;
    }

    private java.lang.String describe(java.lang.Object)
    {
        org.mockito.internal.matchers.Equals r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: org.mockito.internal.matchers.Equals;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <org.mockito.internal.matchers.text.ValuePrinter: java.lang.String print(java.lang.Object)>(r1);

        return $r2;
    }

    protected final java.lang.Object getWanted()
    {
        org.mockito.internal.matchers.Equals r0;
        java.lang.Object $r1;

        r0 := @this: org.mockito.internal.matchers.Equals;

        $r1 = r0.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.mockito.internal.matchers.Equals r0, r2;
        java.lang.Object r1, $r5, $r6, $r7, $r8, $r9;
        java.lang.Class $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.mockito.internal.matchers.Equals;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (org.mockito.internal.matchers.Equals) r1;

        $r5 = r0.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        if $r5 != null goto label3;

        $r9 = r2.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        if $r9 == null goto label4;

     label3:
        $r6 = r0.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        if $r6 == null goto label5;

        $r8 = r0.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        $r7 = r2.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label5;

     label4:
        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    public int hashCode()
    {
        org.mockito.internal.matchers.Equals r0;

        r0 := @this: org.mockito.internal.matchers.Equals;

        return 1;
    }

    public java.lang.String toStringWithType()
    {
        org.mockito.internal.matchers.Equals r0;
        java.lang.StringBuilder $r1, $r2, $r6, $r7, $r10;
        java.lang.Object $r3, $r8;
        java.lang.Class $r4;
        java.lang.String $r5, $r9, $r11;

        r0 := @this: org.mockito.internal.matchers.Equals;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = r0.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r8 = r0.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        $r9 = specialinvoke r0.<org.mockito.internal.matchers.Equals: java.lang.String describe(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public boolean typeMatches(java.lang.Object)
    {
        org.mockito.internal.matchers.Equals r0;
        java.lang.Object r1, $r2, $r4;
        java.lang.Class $r3, $r5;
        boolean $z0;

        r0 := @this: org.mockito.internal.matchers.Equals;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        if $r2 == null goto label1;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = r0.<org.mockito.internal.matchers.Equals: java.lang.Object wanted>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 != $r5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
