public class javassist.expr.ExprEditor extends java.lang.Object
{

    public void <init>()
    {
        javassist.expr.ExprEditor r0;

        r0 := @this: javassist.expr.ExprEditor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean doit(javassist.CtClass, javassist.bytecode.MethodInfo) throws javassist.CannotCompileException
    {
        javassist.expr.ExprEditor r0;
        javassist.CtClass r1;
        javassist.bytecode.MethodInfo r2;
        javassist.bytecode.CodeAttribute r3;
        javassist.bytecode.CodeIterator r4;
        javassist.bytecode.ExceptionTable r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        javassist.expr.ExprEditor$LoopContext $r8;
        javassist.ClassPool $r9;
        javassist.bytecode.ClassFile $r10;
        javassist.expr.Handler $r11;
        boolean $z0, $z1, z2, $z3;
        javassist.bytecode.BadBytecode $r12;
        javassist.CannotCompileException $r13;
        java.lang.String $r14;

        r0 := @this: javassist.expr.ExprEditor;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: javassist.bytecode.MethodInfo;

        r3 = virtualinvoke r2.<javassist.bytecode.MethodInfo: javassist.bytecode.CodeAttribute getCodeAttribute()>();

        if r3 != null goto label01;

        return 0;

     label01:
        r4 = virtualinvoke r3.<javassist.bytecode.CodeAttribute: javassist.bytecode.CodeIterator iterator()>();

        z2 = 0;

        $r8 = new javassist.expr.ExprEditor$LoopContext;

        $i1 = virtualinvoke r3.<javassist.bytecode.CodeAttribute: int getMaxLocals()>();

        specialinvoke $r8.<javassist.expr.ExprEditor$LoopContext: void <init>(int)>($i1);

     label02:
        $z3 = virtualinvoke r4.<javassist.bytecode.CodeIterator: boolean hasNext()>();

        if $z3 == 0 goto label03;

        $z1 = virtualinvoke r0.<javassist.expr.ExprEditor: boolean loopBody(javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo,javassist.expr.ExprEditor$LoopContext)>(r4, r1, r2, $r8);

        if $z1 == 0 goto label02;

        z2 = 1;

        goto label02;

     label03:
        r6 = virtualinvoke r3.<javassist.bytecode.CodeAttribute: javassist.bytecode.ExceptionTable getExceptionTable()>();

        i0 = virtualinvoke r6.<javassist.bytecode.ExceptionTable: int size()>();

        i10 = 0;

     label04:
        if i10 >= i0 goto label06;

        $r11 = new javassist.expr.Handler;

        specialinvoke $r11.<javassist.expr.Handler: void <init>(javassist.bytecode.ExceptionTable,int,javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo)>(r6, i10, r4, r1, r2);

        virtualinvoke r0.<javassist.expr.ExprEditor: void edit(javassist.expr.Handler)>($r11);

        $z0 = virtualinvoke $r11.<javassist.expr.Handler: boolean edited()>();

        if $z0 == 0 goto label05;

        z2 = 1;

        $i8 = virtualinvoke $r11.<javassist.expr.Handler: int locals()>();

        $i9 = virtualinvoke $r11.<javassist.expr.Handler: int stack()>();

        virtualinvoke $r8.<javassist.expr.ExprEditor$LoopContext: void updateMax(int,int)>($i8, $i9);

     label05:
        i10 = i10 + 1;

        goto label04;

     label06:
        $i2 = virtualinvoke r3.<javassist.bytecode.CodeAttribute: int getMaxLocals()>();

        $i3 = $r8.<javassist.expr.ExprEditor$LoopContext: int maxLocals>;

        if $i2 >= $i3 goto label07;

        $i7 = $r8.<javassist.expr.ExprEditor$LoopContext: int maxLocals>;

        virtualinvoke r3.<javassist.bytecode.CodeAttribute: void setMaxLocals(int)>($i7);

     label07:
        $i4 = virtualinvoke r3.<javassist.bytecode.CodeAttribute: int getMaxStack()>();

        $i5 = $r8.<javassist.expr.ExprEditor$LoopContext: int maxStack>;

        $i6 = $i4 + $i5;

        virtualinvoke r3.<javassist.bytecode.CodeAttribute: void setMaxStack(int)>($i6);

     label08:
        if z2 == 0 goto label09;

        $r9 = virtualinvoke r1.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r10 = virtualinvoke r1.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile2()>();

        virtualinvoke r2.<javassist.bytecode.MethodInfo: void rebuildStackMapIf6(javassist.ClassPool,javassist.bytecode.ClassFile)>($r9, $r10);

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

        $r13 = new javassist.CannotCompileException;

        $r14 = virtualinvoke $r12.<javassist.bytecode.BadBytecode: java.lang.String getMessage()>();

        specialinvoke $r13.<javassist.CannotCompileException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r12);

        throw $r13;

     label11:
        return z2;

        catch javassist.bytecode.BadBytecode from label08 to label09 with label10;
    }

    boolean doit(javassist.CtClass, javassist.bytecode.MethodInfo, javassist.expr.ExprEditor$LoopContext, javassist.bytecode.CodeIterator, int) throws javassist.CannotCompileException
    {
        javassist.expr.ExprEditor r0;
        javassist.CtClass r1;
        javassist.bytecode.MethodInfo r2;
        javassist.expr.ExprEditor$LoopContext r3;
        javassist.bytecode.CodeIterator r4;
        int i0, i1, $i2, $i3, i4;
        boolean $z0, $z1, z2;

        r0 := @this: javassist.expr.ExprEditor;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: javassist.bytecode.MethodInfo;

        r3 := @parameter2: javassist.expr.ExprEditor$LoopContext;

        r4 := @parameter3: javassist.bytecode.CodeIterator;

        i4 := @parameter4: int;

        z2 = 0;

     label1:
        $z0 = virtualinvoke r4.<javassist.bytecode.CodeIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke r4.<javassist.bytecode.CodeIterator: int lookAhead()>();

        if $i2 >= i4 goto label3;

        i0 = virtualinvoke r4.<javassist.bytecode.CodeIterator: int getCodeLength()>();

        $z1 = virtualinvoke r0.<javassist.expr.ExprEditor: boolean loopBody(javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo,javassist.expr.ExprEditor$LoopContext)>(r4, r1, r2, r3);

        if $z1 == 0 goto label2;

        z2 = 1;

        i1 = virtualinvoke r4.<javassist.bytecode.CodeIterator: int getCodeLength()>();

        if i0 == i1 goto label2;

        $i3 = i1 - i0;

        i4 = i4 + $i3;

     label2:
        goto label1;

     label3:
        return z2;
    }

    final boolean loopBody(javassist.bytecode.CodeIterator, javassist.CtClass, javassist.bytecode.MethodInfo, javassist.expr.ExprEditor$LoopContext) throws javassist.CannotCompileException
    {
        javassist.expr.ExprEditor r0;
        javassist.bytecode.CodeIterator r1;
        javassist.CtClass r2;
        javassist.bytecode.MethodInfo r3;
        javassist.expr.ExprEditor$LoopContext r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean $z0, $z2;
        javassist.expr.Cast $r7, $r8;
        javassist.expr.Instanceof $r9, $r10;
        javassist.expr.MethodCall $r11, $r27, $r28;
        java.lang.String $r12, $r15, $r17, $r23;
        javassist.expr.ConstructorCall $r13;
        javassist.bytecode.ConstPool $r14, $r22;
        javassist.expr.NewExpr $r16, $r18;
        javassist.expr.ExprEditor$NewOp $r19, $r20, $r21, r31;
        javassist.bytecode.BadBytecode $r24;
        javassist.CannotCompileException $r25;
        javassist.expr.Expr r26;
        javassist.expr.FieldAccess $r29, $r30;
        javassist.expr.NewArray $r32, $r33;

        r0 := @this: javassist.expr.ExprEditor;

        r1 := @parameter0: javassist.bytecode.CodeIterator;

        r2 := @parameter1: javassist.CtClass;

        r3 := @parameter2: javassist.bytecode.MethodInfo;

        r4 := @parameter3: javassist.expr.ExprEditor$LoopContext;

     label01:
        r26 = null;

        i0 = virtualinvoke r1.<javassist.bytecode.CodeIterator: int next()>();

        i1 = virtualinvoke r1.<javassist.bytecode.CodeIterator: int byteAt(int)>(i0);

        if i1 >= 178 goto label02;

        goto label15;

     label02:
        if i1 >= 188 goto label11;

        if i1 == 184 goto label03;

        if i1 == 185 goto label03;

        if i1 != 182 goto label04;

     label03:
        $r27 = new javassist.expr.MethodCall;

        specialinvoke $r27.<javassist.expr.MethodCall: void <init>(int,javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo)>(i0, r1, r2, r3);

        r26 = $r27;

        $r28 = (javassist.expr.MethodCall) $r27;

        virtualinvoke r0.<javassist.expr.ExprEditor: void edit(javassist.expr.MethodCall)>($r28);

        goto label15;

     label04:
        if i1 == 180 goto label05;

        if i1 == 178 goto label05;

        if i1 == 181 goto label05;

        if i1 != 179 goto label06;

     label05:
        $r29 = new javassist.expr.FieldAccess;

        specialinvoke $r29.<javassist.expr.FieldAccess: void <init>(int,javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo,int)>(i0, r1, r2, r3, i1);

        r26 = $r29;

        $r30 = (javassist.expr.FieldAccess) $r29;

        virtualinvoke r0.<javassist.expr.ExprEditor: void edit(javassist.expr.FieldAccess)>($r30);

        goto label15;

     label06:
        if i1 != 187 goto label07;

        $i8 = i0 + 1;

        i9 = virtualinvoke r1.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i8);

        $r20 = new javassist.expr.ExprEditor$NewOp;

        $r21 = r4.<javassist.expr.ExprEditor$LoopContext: javassist.expr.ExprEditor$NewOp newList>;

        $r22 = virtualinvoke r3.<javassist.bytecode.MethodInfo: javassist.bytecode.ConstPool getConstPool()>();

        $r23 = virtualinvoke $r22.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>(i9);

        specialinvoke $r20.<javassist.expr.ExprEditor$NewOp: void <init>(javassist.expr.ExprEditor$NewOp,int,java.lang.String)>($r21, i0, $r23);

        r4.<javassist.expr.ExprEditor$LoopContext: javassist.expr.ExprEditor$NewOp newList> = $r20;

        goto label15;

     label07:
        if i1 != 183 goto label15;

        r31 = r4.<javassist.expr.ExprEditor$LoopContext: javassist.expr.ExprEditor$NewOp newList>;

        if r31 == null goto label08;

        $r14 = virtualinvoke r3.<javassist.bytecode.MethodInfo: javassist.bytecode.ConstPool getConstPool()>();

        $r15 = r31.<javassist.expr.ExprEditor$NewOp: java.lang.String type>;

        $i4 = i0 + 1;

        $i5 = virtualinvoke r1.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i4);

        $i6 = virtualinvoke $r14.<javassist.bytecode.ConstPool: int isConstructor(java.lang.String,int)>($r15, $i5);

        if $i6 <= 0 goto label08;

        $r16 = new javassist.expr.NewExpr;

        $r17 = r31.<javassist.expr.ExprEditor$NewOp: java.lang.String type>;

        $i7 = r31.<javassist.expr.ExprEditor$NewOp: int pos>;

        specialinvoke $r16.<javassist.expr.NewExpr: void <init>(int,javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo,java.lang.String,int)>(i0, r1, r2, r3, $r17, $i7);

        r26 = $r16;

        $r18 = (javassist.expr.NewExpr) $r16;

        virtualinvoke r0.<javassist.expr.ExprEditor: void edit(javassist.expr.NewExpr)>($r18);

        $r19 = r31.<javassist.expr.ExprEditor$NewOp: javassist.expr.ExprEditor$NewOp next>;

        r4.<javassist.expr.ExprEditor$LoopContext: javassist.expr.ExprEditor$NewOp newList> = $r19;

        goto label10;

     label08:
        $r11 = new javassist.expr.MethodCall;

        specialinvoke $r11.<javassist.expr.MethodCall: void <init>(int,javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo)>(i0, r1, r2, r3);

        $r12 = virtualinvoke $r11.<javassist.expr.MethodCall: java.lang.String getMethodName()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z2 == 0 goto label09;

        $r13 = new javassist.expr.ConstructorCall;

        specialinvoke $r13.<javassist.expr.ConstructorCall: void <init>(int,javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo)>(i0, r1, r2, r3);

        r26 = $r13;

        virtualinvoke r0.<javassist.expr.ExprEditor: void edit(javassist.expr.ConstructorCall)>($r13);

        goto label10;

     label09:
        r26 = $r11;

        virtualinvoke r0.<javassist.expr.ExprEditor: void edit(javassist.expr.MethodCall)>($r11);

     label10:
        goto label15;

     label11:
        if i1 == 188 goto label12;

        if i1 == 189 goto label12;

        if i1 != 197 goto label13;

     label12:
        $r32 = new javassist.expr.NewArray;

        specialinvoke $r32.<javassist.expr.NewArray: void <init>(int,javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo,int)>(i0, r1, r2, r3, i1);

        r26 = $r32;

        $r33 = (javassist.expr.NewArray) $r32;

        virtualinvoke r0.<javassist.expr.ExprEditor: void edit(javassist.expr.NewArray)>($r33);

        goto label15;

     label13:
        if i1 != 193 goto label14;

        $r9 = new javassist.expr.Instanceof;

        specialinvoke $r9.<javassist.expr.Instanceof: void <init>(int,javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo)>(i0, r1, r2, r3);

        r26 = $r9;

        $r10 = (javassist.expr.Instanceof) $r9;

        virtualinvoke r0.<javassist.expr.ExprEditor: void edit(javassist.expr.Instanceof)>($r10);

        goto label15;

     label14:
        if i1 != 192 goto label15;

        $r7 = new javassist.expr.Cast;

        specialinvoke $r7.<javassist.expr.Cast: void <init>(int,javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo)>(i0, r1, r2, r3);

        r26 = $r7;

        $r8 = (javassist.expr.Cast) $r7;

        virtualinvoke r0.<javassist.expr.ExprEditor: void edit(javassist.expr.Cast)>($r8);

     label15:
        if r26 == null goto label17;

        $z0 = virtualinvoke r26.<javassist.expr.Expr: boolean edited()>();

        if $z0 == 0 goto label17;

        $i2 = virtualinvoke r26.<javassist.expr.Expr: int locals()>();

        $i3 = virtualinvoke r26.<javassist.expr.Expr: int stack()>();

        virtualinvoke r4.<javassist.expr.ExprEditor$LoopContext: void updateMax(int,int)>($i2, $i3);

     label16:
        return 1;

     label17:
        return 0;

     label18:
        $r24 := @caughtexception;

        $r25 = new javassist.CannotCompileException;

        specialinvoke $r25.<javassist.CannotCompileException: void <init>(java.lang.Throwable)>($r24);

        throw $r25;

        catch javassist.bytecode.BadBytecode from label01 to label16 with label18;
    }

    public void edit(javassist.expr.NewExpr) throws javassist.CannotCompileException
    {
        javassist.expr.ExprEditor r0;
        javassist.expr.NewExpr r1;

        r0 := @this: javassist.expr.ExprEditor;

        r1 := @parameter0: javassist.expr.NewExpr;

        return;
    }

    public void edit(javassist.expr.NewArray) throws javassist.CannotCompileException
    {
        javassist.expr.ExprEditor r0;
        javassist.expr.NewArray r1;

        r0 := @this: javassist.expr.ExprEditor;

        r1 := @parameter0: javassist.expr.NewArray;

        return;
    }

    public void edit(javassist.expr.MethodCall) throws javassist.CannotCompileException
    {
        javassist.expr.ExprEditor r0;
        javassist.expr.MethodCall r1;

        r0 := @this: javassist.expr.ExprEditor;

        r1 := @parameter0: javassist.expr.MethodCall;

        return;
    }

    public void edit(javassist.expr.ConstructorCall) throws javassist.CannotCompileException
    {
        javassist.expr.ExprEditor r0;
        javassist.expr.ConstructorCall r1;

        r0 := @this: javassist.expr.ExprEditor;

        r1 := @parameter0: javassist.expr.ConstructorCall;

        return;
    }

    public void edit(javassist.expr.FieldAccess) throws javassist.CannotCompileException
    {
        javassist.expr.ExprEditor r0;
        javassist.expr.FieldAccess r1;

        r0 := @this: javassist.expr.ExprEditor;

        r1 := @parameter0: javassist.expr.FieldAccess;

        return;
    }

    public void edit(javassist.expr.Instanceof) throws javassist.CannotCompileException
    {
        javassist.expr.ExprEditor r0;
        javassist.expr.Instanceof r1;

        r0 := @this: javassist.expr.ExprEditor;

        r1 := @parameter0: javassist.expr.Instanceof;

        return;
    }

    public void edit(javassist.expr.Cast) throws javassist.CannotCompileException
    {
        javassist.expr.ExprEditor r0;
        javassist.expr.Cast r1;

        r0 := @this: javassist.expr.ExprEditor;

        r1 := @parameter0: javassist.expr.Cast;

        return;
    }

    public void edit(javassist.expr.Handler) throws javassist.CannotCompileException
    {
        javassist.expr.ExprEditor r0;
        javassist.expr.Handler r1;

        r0 := @this: javassist.expr.ExprEditor;

        r1 := @parameter0: javassist.expr.Handler;

        return;
    }
}
