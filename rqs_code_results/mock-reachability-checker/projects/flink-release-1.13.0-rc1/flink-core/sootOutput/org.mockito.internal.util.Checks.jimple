public class org.mockito.internal.util.Checks extends java.lang.Object
{

    public void <init>()
    {
        org.mockito.internal.util.Checks r0;

        r0 := @this: org.mockito.internal.util.Checks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object checkNotNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0, $r2;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.mockito.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.String)>(r0, r1, null);

        return $r2;
    }

    public static java.lang.Object checkNotNull(java.lang.Object, java.lang.String, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1, r2, r11;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        java.lang.IllegalArgumentException $r6;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should not be null");

        r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        if r2 == null goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r11);

        throw $r6;

     label2:
        return r0;
    }

    public static java.lang.Iterable checkItemsNotNull(java.lang.Iterable, java.lang.String)
    {
        java.lang.Iterable r0;
        java.lang.String r1, $r8;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.String;

        staticinvoke <org.mockito.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r0, r1);

        r2 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("item in ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.mockito.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r3, $r8);

        goto label1;

     label2:
        return r0;
    }
}
