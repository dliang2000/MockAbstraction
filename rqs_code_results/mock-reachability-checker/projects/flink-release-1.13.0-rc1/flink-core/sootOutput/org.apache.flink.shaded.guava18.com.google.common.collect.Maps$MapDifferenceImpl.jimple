class org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl extends java.lang.Object implements org.apache.flink.shaded.guava18.com.google.common.collect.MapDifference
{
    final java.util.Map onlyOnLeft;
    final java.util.Map onlyOnRight;
    final java.util.Map onBoth;
    final java.util.Map differences;

    void <init>(java.util.Map, java.util.Map, java.util.Map, java.util.Map)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.util.Map r1, r2, r3, r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Maps: java.util.Map access$100(java.util.Map)>(r1);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnLeft> = $r5;

        $r6 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Maps: java.util.Map access$100(java.util.Map)>(r2);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnRight> = $r6;

        $r7 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Maps: java.util.Map access$100(java.util.Map)>(r3);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onBoth> = $r7;

        $r8 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Maps: java.util.Map access$100(java.util.Map)>(r4);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map differences> = $r8;

        return;
    }

    public boolean areEqual()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.util.Map $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnLeft>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnRight>;

        $z1 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map differences>;

        $z2 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public java.util.Map entriesOnlyOnLeft()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.util.Map $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnLeft>;

        return $r1;
    }

    public java.util.Map entriesOnlyOnRight()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.util.Map $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnRight>;

        return $r1;
    }

    public java.util.Map entriesInCommon()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.util.Map $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onBoth>;

        return $r1;
    }

    public java.util.Map entriesDiffering()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.util.Map $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map differences>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.lang.Object r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapDifference r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Map $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.MapDifference;

        if $z0 == 0 goto label4;

        r2 = (org.apache.flink.shaded.guava18.com.google.common.collect.MapDifference) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesOnlyOnLeft()>();

        $r4 = interfaceinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.collect.MapDifference: java.util.Map entriesOnlyOnLeft()>();

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesOnlyOnRight()>();

        $r6 = interfaceinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.collect.MapDifference: java.util.Map entriesOnlyOnRight()>();

        $z2 = interfaceinvoke $r5.<java.util.Map: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label2;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesInCommon()>();

        $r8 = interfaceinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.collect.MapDifference: java.util.Map entriesInCommon()>();

        $z3 = interfaceinvoke $r7.<java.util.Map: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label2;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesDiffering()>();

        $r10 = interfaceinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.collect.MapDifference: java.util.Map entriesDiffering()>();

        $z4 = interfaceinvoke $r9.<java.util.Map: boolean equals(java.lang.Object)>($r10);

        if $z4 == 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;

     label4:
        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl r0;
        java.lang.Object[] $r1;
        java.util.Map $r2, $r3, $r4, $r5;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl;

        $r1 = newarray (java.lang.Object)[4];

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesOnlyOnLeft()>();

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesOnlyOnRight()>();

        $r1[1] = $r3;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesInCommon()>();

        $r1[2] = $r4;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map entriesDiffering()>();

        $r1[3] = $r5;

        $i0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r2, $r7, $r10, $r13;
        java.util.Map $r3, $r4, $r5, $r8, $r11, $r14;
        java.lang.String $r6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: boolean areEqual()>();

        if $z0 == 0 goto label1;

        return "equal";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("not equal");

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnLeft>;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": only on left=");

        $r14 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnLeft>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

     label2:
        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnRight>;

        $z2 = interfaceinvoke $r4.<java.util.Map: boolean isEmpty()>();

        if $z2 != 0 goto label3;

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": only on right=");

        $r11 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map onlyOnRight>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

     label3:
        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map differences>;

        $z3 = interfaceinvoke $r5.<java.util.Map: boolean isEmpty()>();

        if $z3 != 0 goto label4;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": value differences=");

        $r8 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Maps$MapDifferenceImpl: java.util.Map differences>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

     label4:
        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
