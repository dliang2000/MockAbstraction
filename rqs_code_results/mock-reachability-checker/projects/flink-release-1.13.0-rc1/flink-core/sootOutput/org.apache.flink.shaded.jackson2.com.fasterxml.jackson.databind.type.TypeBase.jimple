public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializable
{
    private static final long serialVersionUID;
    private static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings NO_BINDINGS;
    private static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] NO_TYPES;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _superClass;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _superInterfaces;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings _bindings;
    transient volatile java.lang.String _canonicalName;

    protected void <init>(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[], int, java.lang.Object, java.lang.Object, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings r2, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] r4;
        int i0;
        java.lang.Object r5, r6;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[];

        i0 := @parameter4: int;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.lang.Object;

        z0 := @parameter7: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean)>(r1, i0, r5, r6, z0);

        if r2 != null goto label1;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings NO_BINDINGS>;

        goto label2;

     label1:
        $r8 = r2;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings _bindings> = $r8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _superClass> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _superInterfaces> = r4;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        $r2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _superClass>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _superClass> = $r2;

        $r3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _superInterfaces> = $r3;

        $r4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings _bindings>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings _bindings> = $r4;

        return;
    }

    public java.lang.String toCanonical()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: java.lang.String _canonicalName>;

        if r1 != null goto label1;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: java.lang.String buildCanonicalName()>();

     label1:
        return r1;
    }

    protected java.lang.String buildCanonicalName()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: java.lang.Class _class>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public abstract java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder);

    public abstract java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings getBindings()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings _bindings>;

        return $r1;
    }

    public int containedTypeCount()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings _bindings>;

        $i0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: int size()>();

        return $i0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType containedType(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings _bindings>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getBoundType(int)>(i0);

        return $r2;
    }

    public java.lang.String containedTypeName(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings _bindings>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: java.lang.String getBoundName(int)>(i0);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getSuperClass()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _superClass>;

        return $r1;
    }

    public java.util.List getInterfaces()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] $r1, $r2, $r3, $r7;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        java.util.List $r5, $r6, $r8, $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;

        if $r1 != null goto label1;

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r9;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;

        $i0 = lengthof $r2;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label4;
        };

     label2:
        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r6;

     label3:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;

        $r4 = $r3[0];

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        return $r5;

     label4:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        return $r8;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        java.lang.Class r1, $r3;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, $r4, $r8, $r9, r10;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] $r5, $r6, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        r1 := @parameter0: java.lang.Class;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: java.lang.Class _class>;

        if r1 != $r3 goto label1;

        return r0;

     label1:
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;

        if $r5 == null goto label4;

        i1 = 0;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;

        i0 = lengthof $r6;

     label2:
        if i1 >= i0 goto label4;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;

        $r8 = $r7[i1];

        r2 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(r1);

        if r2 == null goto label3;

        return r2;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _superClass>;

        if $r9 == null goto label5;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _superClass>;

        r10 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(r1);

        if r10 == null goto label5;

        return r10;

     label5:
        return null;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        r1 := @parameter0: java.lang.Class;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(r1);

        if r2 != null goto label1;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] NO_TYPES>;

        return $r5;

     label1:
        $r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] typeParameterArray()>();

        return $r4;
    }

    public void serializeWithType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId: void <init>(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r0, $r6);

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r1, $r5);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2);

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r1, $r5);

        return;
    }

    public void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>();

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>($r3);

        return;
    }

    protected static java.lang.StringBuilder _classSignature(java.lang.Class, java.lang.StringBuilder, boolean)
    {
        java.lang.Class r0, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.StringBuilder r1, $r16, $r17, $r19;
        boolean z0, $z1;
        java.lang.String r2, $r18, $r20;
        int i0, i1;
        java.lang.IllegalStateException $r15;
        char c2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.StringBuilder;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z1 == 0 goto label10;

        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r6 goto label01;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);

        goto label14;

     label01:
        $r7 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r7 goto label02;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(66);

        goto label14;

     label02:
        $r8 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r8 goto label03;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(83);

        goto label14;

     label03:
        $r9 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r9 goto label04;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(67);

        goto label14;

     label04:
        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r10 goto label05;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(73);

        goto label14;

     label05:
        $r11 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r11 goto label06;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(74);

        goto label14;

     label06:
        $r12 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r12 goto label07;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(70);

        goto label14;

     label07:
        $r13 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r13 goto label08;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(68);

        goto label14;

     label08:
        $r14 = <java.lang.Void: java.lang.Class TYPE>;

        if r0 != $r14 goto label09;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(86);

        goto label14;

     label09:
        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized primitive type: ");

        $r18 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label10:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(76);

        r2 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        i1 = 0;

        i0 = virtualinvoke r2.<java.lang.String: int length()>();

     label11:
        if i1 >= i0 goto label13;

        c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i1);

        if c2 != 46 goto label12;

        c2 = 47;

     label12:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        i1 = i1 + 1;

        goto label11;

     label13:
        if z0 == 0 goto label14;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

     label14:
        return r1;
    }

    protected static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _bogusSuperClass(java.lang.Class)
    {
        java.lang.Class r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2;

        r0 := @parameter0: java.lang.Class;

        r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.ResolvedType containedType(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType containedType(int)>(i0);

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings $r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] $r1;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: long serialVersionUID> = 1L;

        $r0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings emptyBindings()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBindings NO_BINDINGS> = $r0;

        $r1 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)[0];

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType[] NO_TYPES> = $r1;

        return;
    }
}
