public final class org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner extends java.lang.Object
{
    private final org.apache.flink.shaded.guava18.com.google.common.base.Joiner joiner;
    private final java.lang.String keyValueSeparator;

    private void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Joiner, java.lang.String)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner r1;
        java.lang.String r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.Joiner;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: org.apache.flink.shaded.guava18.com.google.common.base.Joiner joiner> = r1;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.String keyValueSeparator> = $r4;

        return;
    }

    public java.lang.Appendable appendTo(java.lang.Appendable, java.util.Map) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0;
        java.lang.Appendable r1, $r4;
        java.util.Map r2;
        java.util.Set $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: java.util.Map;

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable)>(r1, $r3);

        return $r4;
    }

    public java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Map)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0;
        java.lang.StringBuilder r1, $r4;
        java.util.Map r2;
        java.util.Set $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: java.util.Map;

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable)>(r1, $r3);

        return $r4;
    }

    public java.lang.String join(java.util.Map)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0;
        java.util.Map r1;
        java.util.Set $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: java.util.Map;

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.String join(java.lang.Iterable)>($r2);

        return $r3;
    }

    public java.lang.Appendable appendTo(java.lang.Appendable, java.lang.Iterable) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0;
        java.lang.Appendable r1, $r4;
        java.lang.Iterable r2;
        java.util.Iterator $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>(r1, $r3);

        return $r4;
    }

    public java.lang.Appendable appendTo(java.lang.Appendable, java.util.Iterator) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0;
        java.lang.Appendable r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3, r4;
        boolean $z0, $z1;
        java.lang.Object $r6, $r8, $r14, $r20, $r22, $r28;
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner $r7, $r13, $r17, $r21, $r27;
        java.lang.CharSequence $r9, $r15, $r23, $r29;
        java.lang.String $r11, $r18, $r25;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: java.util.Iterator;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: org.apache.flink.shaded.guava18.com.google.common.base.Joiner joiner>;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = virtualinvoke $r7.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r8);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r9);

        $r11 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.String keyValueSeparator>;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r11);

        $r13 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: org.apache.flink.shaded.guava18.com.google.common.base.Joiner joiner>;

        $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = virtualinvoke $r13.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r14);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r15);

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r17 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: org.apache.flink.shaded.guava18.com.google.common.base.Joiner joiner>;

        $r18 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Joiner: java.lang.String access$100(org.apache.flink.shaded.guava18.com.google.common.base.Joiner)>($r17);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r18);

        $r20 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r20;

        $r21 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: org.apache.flink.shaded.guava18.com.google.common.base.Joiner joiner>;

        $r22 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = virtualinvoke $r21.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r22);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r23);

        $r25 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.String keyValueSeparator>;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r25);

        $r27 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: org.apache.flink.shaded.guava18.com.google.common.base.Joiner joiner>;

        $r28 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r29 = virtualinvoke $r27.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r28);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r29);

        goto label1;

     label2:
        return r1;
    }

    public java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0;
        java.lang.StringBuilder r1, $r4;
        java.lang.Iterable r2;
        java.util.Iterator $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator)>(r1, $r3);

        return $r4;
    }

    public java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Iterator)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0;
        java.lang.StringBuilder r1;
        java.util.Iterator r2;
        java.io.IOException $r5;
        java.lang.AssertionError $r6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: java.util.Iterator;

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r6;

     label4:
        return r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String join(java.lang.Iterable)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0;
        java.lang.Iterable r1;
        java.util.Iterator $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.String join(java.util.Iterator)>($r2);

        return $r3;
    }

    public java.lang.String join(java.util.Iterator)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0;
        java.util.Iterator r1;
        java.lang.StringBuilder $r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: java.util.Iterator;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator)>($r2, r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner useForNull(java.lang.String)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0, $r2;
        java.lang.String r1, $r5;
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner $r3, $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: org.apache.flink.shaded.guava18.com.google.common.base.Joiner joiner>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner: org.apache.flink.shaded.guava18.com.google.common.base.Joiner useForNull(java.lang.String)>(r1);

        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: java.lang.String keyValueSeparator>;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Joiner,java.lang.String)>($r4, $r5);

        return $r2;
    }

    void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Joiner, java.lang.String, org.apache.flink.shaded.guava18.com.google.common.base.Joiner$1)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner r1;
        java.lang.String r2;
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$1 r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.Joiner;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$1;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Joiner,java.lang.String)>(r1, r2);

        return;
    }
}
