public class javassist.bytecode.BadBytecode extends java.lang.Exception
{
    private static final long serialVersionUID;

    public void <init>(int)
    {
        javassist.bytecode.BadBytecode r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: javassist.bytecode.BadBytecode;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bytecode ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r4);

        return;
    }

    public void <init>(java.lang.String)
    {
        javassist.bytecode.BadBytecode r0;
        java.lang.String r1;

        r0 := @this: javassist.bytecode.BadBytecode;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        javassist.bytecode.BadBytecode r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: javassist.bytecode.BadBytecode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    public void <init>(javassist.bytecode.MethodInfo, java.lang.Throwable)
    {
        javassist.bytecode.BadBytecode r0;
        javassist.bytecode.MethodInfo r1;
        java.lang.Throwable r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r9, $r10, $r12;
        java.lang.String $r4, $r8, $r11, $r13;
        javassist.bytecode.ConstPool $r7;

        r0 := @this: javassist.bytecode.BadBytecode;

        r1 := @parameter0: javassist.bytecode.MethodInfo;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<javassist.bytecode.MethodInfo: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r7 = virtualinvoke r1.<javassist.bytecode.MethodInfo: javassist.bytecode.ConstPool getConstPool()>();

        $r8 = virtualinvoke $r7.<javassist.bytecode.ConstPool: java.lang.String getClassName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>($r13, r2);

        return;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.BadBytecode: long serialVersionUID> = 1L;

        return;
    }
}
