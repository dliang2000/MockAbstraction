class org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber extends org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter
{
    protected final int iMinPrintedDigits;

    protected void <init>(org.joda.time.DateTimeFieldType, int, boolean, int)
    {
        org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber r0;
        org.joda.time.DateTimeFieldType r1;
        int i0, i1;
        boolean z0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber;

        r1 := @parameter0: org.joda.time.DateTimeFieldType;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter: void <init>(org.joda.time.DateTimeFieldType,int,boolean)>(r1, i0, z0);

        r0.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: int iMinPrintedDigits> = i1;

        return;
    }

    public int estimatePrintedLength()
    {
        org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber r0;
        int $i0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber;

        $i0 = r0.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: int iMaxParsedDigits>;

        return $i0;
    }

    public void printTo(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber r0;
        java.lang.Appendable r1;
        long l0;
        org.joda.time.Chronology r2;
        int i1, $i2, $i3, $i4;
        org.joda.time.DateTimeZone r3;
        java.util.Locale r4;
        org.joda.time.DateTimeFieldType $r5;
        java.lang.RuntimeException $r6;
        org.joda.time.DateTimeField r7;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber;

        r1 := @parameter0: java.lang.Appendable;

        l0 := @parameter1: long;

        r2 := @parameter2: org.joda.time.Chronology;

        i1 := @parameter3: int;

        r3 := @parameter4: org.joda.time.DateTimeZone;

        r4 := @parameter5: java.util.Locale;

     label1:
        $r5 = r0.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: org.joda.time.DateTimeFieldType iFieldType>;

        r7 = virtualinvoke $r5.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>(r2);

        $i2 = virtualinvoke r7.<org.joda.time.DateTimeField: int get(long)>(l0);

        $i3 = r0.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: int iMinPrintedDigits>;

        staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.Appendable,int,int)>(r1, $i2, $i3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $i4 = r0.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: int iMinPrintedDigits>;

        staticinvoke <org.joda.time.format.DateTimeFormatterBuilder: void appendUnknownString(java.lang.Appendable,int)>(r1, $i4);

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void printTo(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber r0;
        java.lang.Appendable r1;
        org.joda.time.ReadablePartial r2;
        java.util.Locale r3;
        org.joda.time.DateTimeFieldType $r5, $r6;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.RuntimeException $r7;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: org.joda.time.ReadablePartial;

        r3 := @parameter2: java.util.Locale;

        $r5 = r0.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: org.joda.time.DateTimeFieldType iFieldType>;

        $z0 = interfaceinvoke r2.<org.joda.time.ReadablePartial: boolean isSupported(org.joda.time.DateTimeFieldType)>($r5);

        if $z0 == 0 goto label4;

     label1:
        $r6 = r0.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: org.joda.time.DateTimeFieldType iFieldType>;

        $i1 = interfaceinvoke r2.<org.joda.time.ReadablePartial: int get(org.joda.time.DateTimeFieldType)>($r6);

        $i2 = r0.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: int iMinPrintedDigits>;

        staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.Appendable,int,int)>(r1, $i1, $i2);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        $i3 = r0.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: int iMinPrintedDigits>;

        staticinvoke <org.joda.time.format.DateTimeFormatterBuilder: void appendUnknownString(java.lang.Appendable,int)>(r1, $i3);

        goto label5;

     label4:
        $i0 = r0.<org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber: int iMinPrintedDigits>;

        staticinvoke <org.joda.time.format.DateTimeFormatterBuilder: void appendUnknownString(java.lang.Appendable,int)>(r1, $i0);

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }
}
