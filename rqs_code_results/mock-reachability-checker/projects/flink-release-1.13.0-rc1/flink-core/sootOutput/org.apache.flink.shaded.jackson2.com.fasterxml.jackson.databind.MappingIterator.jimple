public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator extends java.lang.Object implements java.util.Iterator, java.io.Closeable
{
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator EMPTY_ITERATOR;
    protected static final int STATE_CLOSED;
    protected static final int STATE_NEED_RESYNC;
    protected static final int STATE_MAY_HAVE_VALUE;
    protected static final int STATE_HAS_VALUE;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _type;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext _context;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _deserializer;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext _seqContext;
    protected final java.lang.Object _updatedValue;
    protected final boolean _closeParser;
    protected int _state;

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer, boolean, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r4;
        boolean z0, $z1;
        java.lang.Object r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r6, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        z0 := @parameter4: boolean;

        r5 := @parameter5: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _type> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext _context> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _deserializer> = r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: boolean _closeParser> = z0;

        if r5 != null goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _updatedValue> = null;

        goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _updatedValue> = r5;

     label2:
        if r2 != null goto label3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext _seqContext> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int _state> = 0;

        goto label7;

     label3:
        r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext getParsingContext()>();

        if z0 == 0 goto label4;

        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z1 == 0 goto label4;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();

        goto label6;

     label4:
        r6 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r6 == $r7 goto label5;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r6 != $r8 goto label6;

     label5:
        r9 = virtualinvoke r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext getParent()>();

     label6:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext _seqContext> = r9;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int _state> = 2;

     label7:
        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator emptyIterator()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator EMPTY_ITERATOR>;

        return $r0;
    }

    public boolean hasNext()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        boolean $z0, $z1, $z2;
        java.io.IOException $r1;
        java.lang.Object $r2, $r5;
        java.lang.Boolean $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

     label1:
        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: boolean hasNextValue()>();

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _handleMappingException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z2 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label4:
        $r1 := @caughtexception;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _handleIOException(java.io.IOException)>($r1);

        $r3 = (java.lang.Boolean) $r2;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public java.lang.Object next()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        java.lang.Object $r1, $r3, $r5;
        java.io.IOException $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

     label1:
        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object nextValue()>();

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _handleMappingException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException)>($r4);

        return $r5;

     label4:
        $r2 := @caughtexception;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _handleIOException(java.io.IOException)>($r2);

        return $r3;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public void remove()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r1, $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int _state>;

        if $i0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int _state> = 0;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label1:
        return;
    }

    public boolean hasNextValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r1, $r2, $r3, $r4;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, r6, r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int _state>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label7;
            default: goto label7;
        };

     label1:
        return 0;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: void _resync()>();

     label3:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        r6 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        if r6 != null goto label6;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        r7 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if r7 == null goto label4;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if r7 != $r5 goto label6;

     label4:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int _state> = 0;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: boolean _closeParser>;

        if $z0 == 0 goto label5;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        if $r3 == null goto label5;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label5:
        return 0;

     label6:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int _state> = 3;

        return 1;

     label7:
        return 1;
    }

    public java.lang.Object nextValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        int $i0;
        boolean $z0;
        java.lang.Object $r3, $r4, $r13, $r14, r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext $r5, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r6, $r9, $r11, $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r7, $r12;
        java.lang.Throwable $r15;
        byte b1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int _state>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label3;
        };

     label1:
        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _throwNoSuchElement()>();

        return $r14;

     label2:
        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: boolean hasNextValue()>();

        if $z0 != 0 goto label3;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _throwNoSuchElement()>();

        return $r13;

     label3:
        b1 = 1;

     label4:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _updatedValue>;

        if $r3 != null goto label5;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _deserializer>;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext _context>;

        r17 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>($r11, $r10);

        goto label6;

     label5:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _deserializer>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext _context>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _updatedValue>;

        virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>($r6, $r5, $r4);

        r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _updatedValue>;

     label6:
        b1 = 2;

     label7:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int _state> = 2;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();

        return r17;

     label8:
        $r15 := @caughtexception;

     label9:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int _state> = b1;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        virtualinvoke $r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();

        throw $r15;

        catch java.lang.Throwable from label4 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public java.util.List readAll() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.util.List readAll(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List readAll(java.util.List) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        java.util.List r1;
        boolean $z0;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        r1 := @parameter0: java.util.List;

     label1:
        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: boolean hasNextValue()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object nextValue()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return r1;
    }

    public java.util.Collection readAll(java.util.Collection) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        java.util.Collection r1;
        boolean $z0;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        r1 := @parameter0: java.util.Collection;

     label1:
        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: boolean hasNextValue()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object nextValue()>();

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser getParser()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema getParserSchema()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema getSchema()>();

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation getCurrentLocation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation getCurrentLocation()>();

        return $r2;
    }

    protected void _resync() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r2, $r5, $r8, $r9, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext $r3, $r4, $r6, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _parser>;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext getParsingContext()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext _seqContext>;

        if $r3 != $r4 goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if r2 == $r5 goto label2;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if r2 != $r8 goto label3;

     label2:
        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext getParsingContext()>();

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext _seqContext>;

        if $r6 != $r7 goto label6;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();

        return;

     label3:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if r2 == $r9 goto label4;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r2 != $r11 goto label5;

     label4:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser skipChildren()>();

        goto label6;

     label5:
        if r2 != null goto label6;

        return;

     label6:
        goto label1;
    }

    protected java.lang.Object _throwNoSuchElement()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        java.util.NoSuchElementException $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    protected java.lang.Object _handleMappingException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.RuntimeJsonMappingException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.RuntimeJsonMappingException;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>();

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.RuntimeJsonMappingException: void <init>(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException)>($r3, r1);

        throw $r2;
    }

    protected java.lang.Object _handleIOException(java.io.IOException)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator r0;
        java.io.IOException r1;
        java.lang.RuntimeException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        r1 := @parameter0: java.io.IOException;

        $r2 = new java.lang.RuntimeException;

        $r3 = virtualinvoke r1.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r3, r1);

        throw $r2;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int STATE_HAS_VALUE> = 3;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int STATE_MAY_HAVE_VALUE> = 2;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int STATE_NEED_RESYNC> = 1;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: int STATE_CLOSED> = 0;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,boolean,java.lang.Object)>(null, null, null, null, 0, null);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator EMPTY_ITERATOR> = $r0;

        return;
    }
}
