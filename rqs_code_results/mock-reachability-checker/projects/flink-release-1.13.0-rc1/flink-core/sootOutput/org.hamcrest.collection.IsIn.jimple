public class org.hamcrest.collection.IsIn extends org.hamcrest.BaseMatcher
{
    private final java.util.Collection collection;

    public void <init>(java.util.Collection)
    {
        org.hamcrest.collection.IsIn r0;
        java.util.Collection r1;

        r0 := @this: org.hamcrest.collection.IsIn;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<org.hamcrest.BaseMatcher: void <init>()>();

        r0.<org.hamcrest.collection.IsIn: java.util.Collection collection> = r1;

        return;
    }

    public void <init>(java.lang.Object[])
    {
        org.hamcrest.collection.IsIn r0;
        java.lang.Object[] r1;
        java.util.List $r2;

        r0 := @this: org.hamcrest.collection.IsIn;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<org.hamcrest.BaseMatcher: void <init>()>();

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        r0.<org.hamcrest.collection.IsIn: java.util.Collection collection> = $r2;

        return;
    }

    public boolean matches(java.lang.Object)
    {
        org.hamcrest.collection.IsIn r0;
        java.lang.Object r1;
        java.util.Collection $r2;
        boolean $z0;

        r0 := @this: org.hamcrest.collection.IsIn;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.hamcrest.collection.IsIn: java.util.Collection collection>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.collection.IsIn r0;
        org.hamcrest.Description r1;
        java.util.Collection $r3;

        r0 := @this: org.hamcrest.collection.IsIn;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("one of ");

        $r3 = r0.<org.hamcrest.collection.IsIn: java.util.Collection collection>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendValueList(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable)>("{", ", ", "}", $r3);

        return;
    }

    public static org.hamcrest.Matcher isIn(java.util.Collection)
    {
        java.util.Collection r0;
        org.hamcrest.collection.IsIn $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = new org.hamcrest.collection.IsIn;

        specialinvoke $r1.<org.hamcrest.collection.IsIn: void <init>(java.util.Collection)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher isIn(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.hamcrest.collection.IsIn $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = new org.hamcrest.collection.IsIn;

        specialinvoke $r1.<org.hamcrest.collection.IsIn: void <init>(java.lang.Object[])>(r0);

        return $r1;
    }

    public static transient org.hamcrest.Matcher isOneOf(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <org.hamcrest.collection.IsIn: org.hamcrest.Matcher isIn(java.lang.Object[])>(r0);

        return $r1;
    }
}
