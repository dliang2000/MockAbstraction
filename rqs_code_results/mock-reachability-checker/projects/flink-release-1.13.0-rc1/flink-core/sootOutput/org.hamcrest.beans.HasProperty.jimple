public class org.hamcrest.beans.HasProperty extends org.hamcrest.TypeSafeMatcher
{
    private final java.lang.String propertyName;

    public void <init>(java.lang.String)
    {
        org.hamcrest.beans.HasProperty r0;
        java.lang.String r1;

        r0 := @this: org.hamcrest.beans.HasProperty;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        r0.<org.hamcrest.beans.HasProperty: java.lang.String propertyName> = r1;

        return;
    }

    public boolean matchesSafely(java.lang.Object)
    {
        org.hamcrest.beans.HasProperty r0;
        java.lang.Object r1;
        java.lang.String $r3;
        java.beans.PropertyDescriptor $r4;
        java.lang.IllegalArgumentException $r5;
        boolean $z0;

        r0 := @this: org.hamcrest.beans.HasProperty;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r3 = r0.<org.hamcrest.beans.HasProperty: java.lang.String propertyName>;

        $r4 = staticinvoke <org.hamcrest.beans.PropertyUtil: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String,java.lang.Object)>($r3, r1);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.IllegalArgumentException from label1 to label3 with label4;
    }

    public void describeMismatchSafely(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.beans.HasProperty r0;
        java.lang.Object r1;
        org.hamcrest.Description r2, $r3, $r5, $r6;
        java.lang.String $r4;

        r0 := @this: org.hamcrest.beans.HasProperty;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        $r3 = interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("no ");

        $r4 = r0.<org.hamcrest.beans.HasProperty: java.lang.String propertyName>;

        $r5 = interfaceinvoke $r3.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r5.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" in ");

        interfaceinvoke $r6.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>(r1);

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.beans.HasProperty r0;
        org.hamcrest.Description r1, $r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.hamcrest.beans.HasProperty;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("hasProperty(");

        $r3 = r0.<org.hamcrest.beans.HasProperty: java.lang.String propertyName>;

        $r4 = interfaceinvoke $r2.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r3);

        interfaceinvoke $r4.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(")");

        return;
    }

    public static org.hamcrest.Matcher hasProperty(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.beans.HasProperty $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.hamcrest.beans.HasProperty;

        specialinvoke $r1.<org.hamcrest.beans.HasProperty: void <init>(java.lang.String)>(r0);

        return $r1;
    }
}
