public class org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter extends java.lang.Object implements org.mockito.internal.configuration.injection.filter.MockCandidateFilter
{

    public void <init>()
    {
        org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter r0;

        r0 := @this: org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.mockito.internal.configuration.injection.filter.OngoingInjector filterCandidate(java.util.Collection, java.lang.reflect.Field, java.util.List, java.lang.Object)
    {
        org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter r0;
        java.util.Collection r1;
        java.lang.reflect.Field r2;
        java.util.List r3;
        java.lang.Object r4, r5;
        int $i0;
        org.mockito.internal.configuration.injection.filter.OngoingInjector $r6;
        java.util.Iterator $r7;
        org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter$1 $r8;

        r0 := @this: org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.lang.reflect.Field;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.lang.Object;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 != 1 goto label1;

        $r7 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

        r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = new org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter$1;

        specialinvoke $r8.<org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter$1: void <init>(org.mockito.internal.configuration.injection.filter.TerminalMockCandidateFilter,java.lang.Object,java.lang.reflect.Field,java.lang.Object)>(r0, r4, r2, r5);

        return $r8;

     label1:
        $r6 = <org.mockito.internal.configuration.injection.filter.OngoingInjector: org.mockito.internal.configuration.injection.filter.OngoingInjector 'nop'>;

        return $r6;
    }
}
