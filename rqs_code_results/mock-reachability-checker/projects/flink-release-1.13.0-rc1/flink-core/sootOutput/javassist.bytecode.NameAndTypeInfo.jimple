class javassist.bytecode.NameAndTypeInfo extends javassist.bytecode.ConstInfo
{
    static final int tag;
    int memberName;
    int typeDescriptor;

    public void <init>(int, int, int)
    {
        javassist.bytecode.NameAndTypeInfo r0;
        int i0, i1, i2;

        r0 := @this: javassist.bytecode.NameAndTypeInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<javassist.bytecode.ConstInfo: void <init>(int)>(i2);

        r0.<javassist.bytecode.NameAndTypeInfo: int memberName> = i0;

        r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor> = i1;

        return;
    }

    public void <init>(java.io.DataInputStream, int) throws java.io.IOException
    {
        javassist.bytecode.NameAndTypeInfo r0;
        java.io.DataInputStream r1;
        int i0, $i1, $i2;

        r0 := @this: javassist.bytecode.NameAndTypeInfo;

        r1 := @parameter0: java.io.DataInputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<javassist.bytecode.ConstInfo: void <init>(int)>(i0);

        $i1 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedShort()>();

        r0.<javassist.bytecode.NameAndTypeInfo: int memberName> = $i1;

        $i2 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedShort()>();

        r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor> = $i2;

        return;
    }

    public int hashCode()
    {
        javassist.bytecode.NameAndTypeInfo r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: javassist.bytecode.NameAndTypeInfo;

        $i0 = r0.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        $i2 = $i0 << 16;

        $i1 = r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        $i3 = $i2 ^ $i1;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        javassist.bytecode.NameAndTypeInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: javassist.bytecode.NameAndTypeInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof javassist.bytecode.NameAndTypeInfo;

        if $z0 == 0 goto label3;

        r2 = (javassist.bytecode.NameAndTypeInfo) r1;

        $i1 = r2.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        $i0 = r0.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        if $i1 != $i0 goto label1;

        $i3 = r2.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        $i2 = r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        if $i3 != $i2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public int getTag()
    {
        javassist.bytecode.NameAndTypeInfo r0;

        r0 := @this: javassist.bytecode.NameAndTypeInfo;

        return 12;
    }

    public void renameClass(javassist.bytecode.ConstPool, java.lang.String, java.lang.String, java.util.Map)
    {
        javassist.bytecode.NameAndTypeInfo r0;
        javassist.bytecode.ConstPool r1;
        java.lang.String r2, r3, r5, r6;
        java.util.Map r4;
        int $i0, $i1, $i2;

        r0 := @this: javassist.bytecode.NameAndTypeInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        $i0 = r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        r5 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i0);

        r6 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String rename(java.lang.String,java.lang.String,java.lang.String)>(r5, r2, r3);

        if r5 == r6 goto label2;

        if r4 != null goto label1;

        $i2 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r6);

        r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor> = $i2;

        goto label2;

     label1:
        interfaceinvoke r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

        $i1 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r6);

        r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor> = $i1;

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r0);

     label2:
        return;
    }

    public void renameClass(javassist.bytecode.ConstPool, java.util.Map, java.util.Map)
    {
        javassist.bytecode.NameAndTypeInfo r0;
        javassist.bytecode.ConstPool r1;
        java.util.Map r2, r3;
        java.lang.String r4, r5;
        int $i0, $i1, $i2;

        r0 := @this: javassist.bytecode.NameAndTypeInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

        $i0 = r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        r4 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i0);

        r5 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String rename(java.lang.String,java.util.Map)>(r4, r2);

        if r4 == r5 goto label2;

        if r3 != null goto label1;

        $i2 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r5);

        r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor> = $i2;

        goto label2;

     label1:
        interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

        $i1 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r5);

        r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor> = $i1;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r0);

     label2:
        return;
    }

    public int copy(javassist.bytecode.ConstPool, javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.NameAndTypeInfo r0;
        javassist.bytecode.ConstPool r1, r2;
        java.util.Map r3;
        java.lang.String r4, r5, r6;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: javassist.bytecode.NameAndTypeInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: javassist.bytecode.ConstPool;

        r3 := @parameter2: java.util.Map;

        $i0 = r0.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        r4 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i0);

        $i1 = r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        r5 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i1);

        r6 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String rename(java.lang.String,java.util.Map)>(r5, r3);

        $i2 = virtualinvoke r2.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r4);

        $i3 = virtualinvoke r2.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r6);

        $i4 = virtualinvoke r2.<javassist.bytecode.ConstPool: int addNameAndTypeInfo(int,int)>($i2, $i3);

        return $i4;
    }

    public void write(java.io.DataOutputStream) throws java.io.IOException
    {
        javassist.bytecode.NameAndTypeInfo r0;
        java.io.DataOutputStream r1;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.NameAndTypeInfo;

        r1 := @parameter0: java.io.DataOutputStream;

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>(12);

        $i0 = r0.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i0);

        $i1 = r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i1);

        return;
    }

    public void print(java.io.PrintWriter)
    {
        javassist.bytecode.NameAndTypeInfo r0;
        java.io.PrintWriter r1;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.NameAndTypeInfo;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("NameAndType #");

        $i0 = r0.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", type #");

        $i1 = r0.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i1);

        return;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.NameAndTypeInfo: int tag> = 12;

        return;
    }
}
