public class org.apache.flink.api.common.operators.base.BulkIterationBase extends org.apache.flink.api.common.operators.SingleInputOperator implements org.apache.flink.api.common.operators.IterationOperator
{
    private static final java.lang.String DEFAULT_NAME;
    public static final java.lang.String TERMINATION_CRITERION_AGGREGATOR_NAME;
    private org.apache.flink.api.common.operators.Operator iterationResult;
    private final org.apache.flink.api.common.operators.Operator inputPlaceHolder;
    private final org.apache.flink.api.common.aggregators.AggregatorRegistry aggregators;
    private int numberOfIterations;
    protected org.apache.flink.api.common.operators.Operator terminationCriterion;

    public void <init>(org.apache.flink.api.common.operators.UnaryOperatorInformation)
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        org.apache.flink.api.common.operators.UnaryOperatorInformation r1;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        r1 := @parameter0: org.apache.flink.api.common.operators.UnaryOperatorInformation;

        specialinvoke r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: void <init>(org.apache.flink.api.common.operators.UnaryOperatorInformation,java.lang.String)>(r1, "<Unnamed Bulk Iteration>");

        return;
    }

    public void <init>(org.apache.flink.api.common.operators.UnaryOperatorInformation, java.lang.String)
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        org.apache.flink.api.common.operators.UnaryOperatorInformation r1, $r6;
        java.lang.String r2;
        org.apache.flink.api.common.operators.util.UserCodeClassWrapper $r3;
        org.apache.flink.api.common.aggregators.AggregatorRegistry $r4;
        org.apache.flink.api.common.operators.base.BulkIterationBase$PartialSolutionPlaceHolder $r5;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        r1 := @parameter0: org.apache.flink.api.common.operators.UnaryOperatorInformation;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.flink.api.common.operators.util.UserCodeClassWrapper;

        specialinvoke $r3.<org.apache.flink.api.common.operators.util.UserCodeClassWrapper: void <init>(java.lang.Class)>(class "Lorg/apache/flink/api/common/functions/AbstractRichFunction;");

        specialinvoke r0.<org.apache.flink.api.common.operators.SingleInputOperator: void <init>(org.apache.flink.api.common.operators.util.UserCodeWrapper,org.apache.flink.api.common.operators.UnaryOperatorInformation,java.lang.String)>($r3, r1, r2);

        $r4 = new org.apache.flink.api.common.aggregators.AggregatorRegistry;

        specialinvoke $r4.<org.apache.flink.api.common.aggregators.AggregatorRegistry: void <init>()>();

        r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.aggregators.AggregatorRegistry aggregators> = $r4;

        r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: int numberOfIterations> = -1;

        $r5 = new org.apache.flink.api.common.operators.base.BulkIterationBase$PartialSolutionPlaceHolder;

        $r6 = virtualinvoke r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.UnaryOperatorInformation getOperatorInfo()>();

        specialinvoke $r5.<org.apache.flink.api.common.operators.base.BulkIterationBase$PartialSolutionPlaceHolder: void <init>(org.apache.flink.api.common.operators.base.BulkIterationBase,org.apache.flink.api.common.operators.OperatorInformation)>(r0, $r6);

        r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator inputPlaceHolder> = $r5;

        return;
    }

    public org.apache.flink.api.common.operators.Operator getPartialSolution()
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        org.apache.flink.api.common.operators.Operator $r1;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        $r1 = r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator inputPlaceHolder>;

        return $r1;
    }

    public void setNextPartialSolution(org.apache.flink.api.common.operators.Operator)
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        org.apache.flink.api.common.operators.Operator r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        r1 := @parameter0: org.apache.flink.api.common.operators.Operator;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Operator producing the next partial solution must not be null.");

        throw $r2;

     label1:
        r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator iterationResult> = r1;

        return;
    }

    public org.apache.flink.api.common.operators.Operator getNextPartialSolution()
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        org.apache.flink.api.common.operators.Operator $r1;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        $r1 = r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator iterationResult>;

        return $r1;
    }

    public org.apache.flink.api.common.operators.Operator getTerminationCriterion()
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        org.apache.flink.api.common.operators.Operator $r1;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        $r1 = r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator terminationCriterion>;

        return $r1;
    }

    public void setTerminationCriterion(org.apache.flink.api.common.operators.Operator)
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        org.apache.flink.api.common.operators.Operator r1;
        org.apache.flink.api.common.typeinfo.TypeInformation r2;
        org.apache.flink.api.common.operators.OperatorInformation $r4;
        org.apache.flink.api.common.operators.base.FlatMapOperatorBase $r5;
        org.apache.flink.api.common.operators.base.BulkIterationBase$TerminationCriterionMapper $r6;
        org.apache.flink.api.common.operators.UnaryOperatorInformation $r7;
        org.apache.flink.api.common.aggregators.AggregatorRegistry $r8;
        org.apache.flink.api.common.operators.base.BulkIterationBase$TerminationCriterionAggregator $r9;
        org.apache.flink.api.common.operators.base.BulkIterationBase$TerminationCriterionAggregationConvergence $r10;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        r1 := @parameter0: org.apache.flink.api.common.operators.Operator;

        $r4 = virtualinvoke r1.<org.apache.flink.api.common.operators.Operator: org.apache.flink.api.common.operators.OperatorInformation getOperatorInfo()>();

        r2 = virtualinvoke $r4.<org.apache.flink.api.common.operators.OperatorInformation: org.apache.flink.api.common.typeinfo.TypeInformation getOutputType()>();

        $r5 = new org.apache.flink.api.common.operators.base.FlatMapOperatorBase;

        $r6 = new org.apache.flink.api.common.operators.base.BulkIterationBase$TerminationCriterionMapper;

        specialinvoke $r6.<org.apache.flink.api.common.operators.base.BulkIterationBase$TerminationCriterionMapper: void <init>()>();

        $r7 = new org.apache.flink.api.common.operators.UnaryOperatorInformation;

        specialinvoke $r7.<org.apache.flink.api.common.operators.UnaryOperatorInformation: void <init>(org.apache.flink.api.common.typeinfo.TypeInformation,org.apache.flink.api.common.typeinfo.TypeInformation)>(r2, r2);

        specialinvoke $r5.<org.apache.flink.api.common.operators.base.FlatMapOperatorBase: void <init>(org.apache.flink.api.common.functions.FlatMapFunction,org.apache.flink.api.common.operators.UnaryOperatorInformation,java.lang.String)>($r6, $r7, "Termination Criterion Aggregation Wrapper");

        virtualinvoke $r5.<org.apache.flink.api.common.operators.base.FlatMapOperatorBase: void setInput(org.apache.flink.api.common.operators.Operator)>(r1);

        r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator terminationCriterion> = $r5;

        $r8 = virtualinvoke r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.aggregators.AggregatorRegistry getAggregators()>();

        $r9 = new org.apache.flink.api.common.operators.base.BulkIterationBase$TerminationCriterionAggregator;

        specialinvoke $r9.<org.apache.flink.api.common.operators.base.BulkIterationBase$TerminationCriterionAggregator: void <init>()>();

        $r10 = new org.apache.flink.api.common.operators.base.BulkIterationBase$TerminationCriterionAggregationConvergence;

        specialinvoke $r10.<org.apache.flink.api.common.operators.base.BulkIterationBase$TerminationCriterionAggregationConvergence: void <init>()>();

        virtualinvoke $r8.<org.apache.flink.api.common.aggregators.AggregatorRegistry: void registerAggregationConvergenceCriterion(java.lang.String,org.apache.flink.api.common.aggregators.Aggregator,org.apache.flink.api.common.aggregators.ConvergenceCriterion)>("terminationCriterion.aggregator", $r9, $r10);

        return;
    }

    public void setMaximumNumberOfIterations(int)
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The number of iterations must be at least one.");

        throw $r1;

     label1:
        r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: int numberOfIterations> = i0;

        return;
    }

    public int getMaximumNumberOfIterations()
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        int $i0;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        $i0 = r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: int numberOfIterations>;

        return $i0;
    }

    public org.apache.flink.api.common.aggregators.AggregatorRegistry getAggregators()
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        org.apache.flink.api.common.aggregators.AggregatorRegistry $r1;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        $r1 = r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.aggregators.AggregatorRegistry aggregators>;

        return $r1;
    }

    public void validate() throws org.apache.flink.api.common.InvalidProgramException
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        org.apache.flink.api.common.operators.Operator $r1, $r2, $r3;
        int $i0;
        org.apache.flink.api.common.InvalidProgramException $r4, $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        $r1 = r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator input>;

        if $r1 != null goto label1;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Operator for initial partial solution is not set.");

        throw $r6;

     label1:
        $r2 = r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator iterationResult>;

        if $r2 != null goto label2;

        $r5 = new org.apache.flink.api.common.InvalidProgramException;

        specialinvoke $r5.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>("Operator producing the next version of the partial solution (iteration result) is not set.");

        throw $r5;

     label2:
        $r3 = r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator terminationCriterion>;

        if $r3 != null goto label3;

        $i0 = r0.<org.apache.flink.api.common.operators.base.BulkIterationBase: int numberOfIterations>;

        if $i0 > 0 goto label3;

        $r4 = new org.apache.flink.api.common.InvalidProgramException;

        specialinvoke $r4.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>("No termination condition is set (neither fix number of iteration nor termination criterion).");

        throw $r4;

     label3:
        return;
    }

    public java.util.Map getBroadcastInputs()
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        java.util.Map $r1;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r1;
    }

    public void setBroadcastVariable(java.lang.String, org.apache.flink.api.common.operators.Operator)
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        java.lang.String r1;
        org.apache.flink.api.common.operators.Operator r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.api.common.operators.Operator;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The BulkIteration meta operator cannot have broadcast inputs.");

        throw $r3;
    }

    public void setBroadcastVariables(java.util.Map)
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        java.util.Map r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        r1 := @parameter0: java.util.Map;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The BulkIteration meta operator cannot have broadcast inputs.");

        throw $r2;
    }

    protected java.util.List executeOnCollections(java.util.List, org.apache.flink.api.common.functions.RuntimeContext, org.apache.flink.api.common.ExecutionConfig)
    {
        org.apache.flink.api.common.operators.base.BulkIterationBase r0;
        java.util.List r1;
        org.apache.flink.api.common.functions.RuntimeContext r2;
        org.apache.flink.api.common.ExecutionConfig r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: org.apache.flink.api.common.operators.base.BulkIterationBase;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.apache.flink.api.common.functions.RuntimeContext;

        r3 := @parameter2: org.apache.flink.api.common.ExecutionConfig;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.operators.base.BulkIterationBase: java.lang.String TERMINATION_CRITERION_AGGREGATOR_NAME> = "terminationCriterion.aggregator";

        <org.apache.flink.api.common.operators.base.BulkIterationBase: java.lang.String DEFAULT_NAME> = "<Unnamed Bulk Iteration>";

        return;
    }
}
