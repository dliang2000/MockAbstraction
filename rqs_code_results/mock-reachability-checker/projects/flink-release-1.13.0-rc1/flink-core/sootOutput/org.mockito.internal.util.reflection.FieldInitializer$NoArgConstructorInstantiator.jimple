class org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator extends java.lang.Object implements org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator
{
    private final java.lang.Object testClass;
    private final java.lang.reflect.Field field;

    void <init>(java.lang.Object, java.lang.reflect.Field)
    {
        org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator r0;
        java.lang.Object r1;
        java.lang.reflect.Field r2;

        r0 := @this: org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Field;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator: java.lang.Object testClass> = r1;

        r0.<org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator: java.lang.reflect.Field field> = r2;

        return;
    }

    public org.mockito.internal.util.reflection.FieldInitializationReport instantiate()
    {
        org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator r0;
        java.lang.Object r2, $r10, $r12, $r14;
        org.mockito.internal.util.reflection.AccessibilityChanger $r5;
        java.lang.reflect.Field $r6, $r9, $r13, $r20, $r33;
        java.lang.Class $r7, $r21, $r34;
        java.lang.Class[] $r8;
        org.mockito.internal.util.reflection.FieldInitializationReport $r11;
        java.lang.Throwable $r15, $r25;
        java.lang.reflect.InvocationTargetException $r16;
        org.mockito.exceptions.base.MockitoException $r17, $r30, $r40, $r47;
        java.lang.StringBuilder $r18, $r19, $r23, $r24, $r27, $r31, $r32, $r36, $r37, $r41, $r42, $r44, $r48, $r49, $r51;
        java.lang.String $r22, $r26, $r28, $r35, $r38, $r43, $r45, $r50, $r52;
        java.lang.NoSuchMethodException $r29;
        java.lang.IllegalAccessException $r39;
        java.lang.InstantiationException $r46;
        java.lang.reflect.Constructor r53;
        java.lang.Object[] r54;

        r0 := @this: org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator;

        $r5 = new org.mockito.internal.util.reflection.AccessibilityChanger;

        specialinvoke $r5.<org.mockito.internal.util.reflection.AccessibilityChanger: void <init>()>();

        r53 = null;

     label01:
        $r6 = r0.<org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator: java.lang.reflect.Field field>;

        $r7 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r8 = newarray (java.lang.Class)[0];

        r53 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r8);

        virtualinvoke $r5.<org.mockito.internal.util.reflection.AccessibilityChanger: void enableAccess(java.lang.reflect.AccessibleObject)>(r53);

        r54 = newarray (java.lang.Object)[0];

        r2 = virtualinvoke r53.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r54);

        $r10 = r0.<org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator: java.lang.Object testClass>;

        $r9 = r0.<org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator: java.lang.reflect.Field field>;

        staticinvoke <org.mockito.internal.util.reflection.FieldSetter: void setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)>($r10, $r9, r2);

        $r11 = new org.mockito.internal.util.reflection.FieldInitializationReport;

        $r13 = r0.<org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator: java.lang.reflect.Field field>;

        $r12 = r0.<org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator: java.lang.Object testClass>;

        $r14 = virtualinvoke $r13.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r12);

        specialinvoke $r11.<org.mockito.internal.util.reflection.FieldInitializationReport: void <init>(java.lang.Object,boolean,boolean)>($r14, 1, 0);

     label02:
        if r53 == null goto label03;

        virtualinvoke $r5.<org.mockito.internal.util.reflection.AccessibilityChanger: void safelyDisableAccess(java.lang.reflect.AccessibleObject)>(r53);

     label03:
        return $r11;

     label04:
        $r29 := @caughtexception;

        $r30 = new org.mockito.exceptions.base.MockitoException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the type \'");

        $r33 = r0.<org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator: java.lang.reflect.Field field>;

        $r34 = virtualinvoke $r33.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r35 = virtualinvoke $r34.<java.lang.Class: java.lang.String getSimpleName()>();

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has no default constructor");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<org.mockito.exceptions.base.MockitoException: void <init>(java.lang.String,java.lang.Throwable)>($r38, $r29);

        throw $r30;

     label05:
        $r16 := @caughtexception;

        $r17 = new org.mockito.exceptions.base.MockitoException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the default constructor of type \'");

        $r20 = r0.<org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator: java.lang.reflect.Field field>;

        $r21 = virtualinvoke $r20.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getSimpleName()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has raised an exception (see the stack trace for cause): ");

        $r25 = virtualinvoke $r16.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $r26 = virtualinvoke $r25.<java.lang.Throwable: java.lang.String toString()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.mockito.exceptions.base.MockitoException: void <init>(java.lang.String,java.lang.Throwable)>($r28, $r16);

        throw $r17;

     label06:
        $r46 := @caughtexception;

        $r47 = new org.mockito.exceptions.base.MockitoException;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InstantiationException (see the stack trace for cause): ");

        $r50 = virtualinvoke $r46.<java.lang.InstantiationException: java.lang.String toString()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<org.mockito.exceptions.base.MockitoException: void <init>(java.lang.String,java.lang.Throwable)>($r52, $r46);

        throw $r47;

     label07:
        $r39 := @caughtexception;

        $r40 = new org.mockito.exceptions.base.MockitoException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalAccessException (see the stack trace for cause): ");

        $r43 = virtualinvoke $r39.<java.lang.IllegalAccessException: java.lang.String toString()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<org.mockito.exceptions.base.MockitoException: void <init>(java.lang.String,java.lang.Throwable)>($r45, $r39);

        throw $r40;

     label08:
        $r15 := @caughtexception;

     label09:
        if r53 == null goto label10;

        virtualinvoke $r5.<org.mockito.internal.util.reflection.AccessibilityChanger: void safelyDisableAccess(java.lang.reflect.AccessibleObject)>(r53);

     label10:
        throw $r15;

        catch java.lang.NoSuchMethodException from label01 to label02 with label04;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label05;
        catch java.lang.InstantiationException from label01 to label02 with label06;
        catch java.lang.IllegalAccessException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label09 with label08;
    }
}
