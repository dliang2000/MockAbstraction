public final enum class org.apache.flink.types.RowKind extends java.lang.Enum
{
    public static final enum org.apache.flink.types.RowKind INSERT;
    public static final enum org.apache.flink.types.RowKind UPDATE_BEFORE;
    public static final enum org.apache.flink.types.RowKind UPDATE_AFTER;
    public static final enum org.apache.flink.types.RowKind DELETE;
    private final java.lang.String shortString;
    private final byte value;
    private static final org.apache.flink.types.RowKind[] $VALUES;

    public static org.apache.flink.types.RowKind[] values()
    {
        org.apache.flink.types.RowKind[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.flink.types.RowKind[]) $r1;

        return $r2;
    }

    public static org.apache.flink.types.RowKind valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.flink.types.RowKind $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/flink/types/RowKind;", r0);

        $r2 = (org.apache.flink.types.RowKind) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String, byte)
    {
        org.apache.flink.types.RowKind r0;
        java.lang.String r1, r2;
        int i0;
        byte b1;

        r0 := @this: org.apache.flink.types.RowKind;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        b1 := @parameter3: byte;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.flink.types.RowKind: java.lang.String shortString> = r2;

        r0.<org.apache.flink.types.RowKind: byte value> = b1;

        return;
    }

    public java.lang.String shortString()
    {
        org.apache.flink.types.RowKind r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.types.RowKind;

        $r1 = r0.<org.apache.flink.types.RowKind: java.lang.String shortString>;

        return $r1;
    }

    public byte toByteValue()
    {
        org.apache.flink.types.RowKind r0;
        byte $b0;

        r0 := @this: org.apache.flink.types.RowKind;

        $b0 = r0.<org.apache.flink.types.RowKind: byte value>;

        return $b0;
    }

    public static org.apache.flink.types.RowKind fromByteValue(byte)
    {
        byte b0;
        org.apache.flink.types.RowKind $r0, $r1, $r2, $r3;
        java.lang.UnsupportedOperationException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        b0 := @parameter0: byte;

        tableswitch(b0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        $r3 = <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind INSERT>;

        return $r3;

     label2:
        $r2 = <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind UPDATE_BEFORE>;

        return $r2;

     label3:
        $r1 = <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind UPDATE_AFTER>;

        return $r1;

     label4:
        $r0 = <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind DELETE>;

        return $r0;

     label5:
        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported byte value \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for row kind.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    static void <clinit>()
    {
        org.apache.flink.types.RowKind $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        org.apache.flink.types.RowKind[] $r4;

        $r0 = new org.apache.flink.types.RowKind;

        specialinvoke $r0.<org.apache.flink.types.RowKind: void <init>(java.lang.String,int,java.lang.String,byte)>("INSERT", 0, "+I", 0);

        <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind INSERT> = $r0;

        $r1 = new org.apache.flink.types.RowKind;

        specialinvoke $r1.<org.apache.flink.types.RowKind: void <init>(java.lang.String,int,java.lang.String,byte)>("UPDATE_BEFORE", 1, "-U", 1);

        <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind UPDATE_BEFORE> = $r1;

        $r2 = new org.apache.flink.types.RowKind;

        specialinvoke $r2.<org.apache.flink.types.RowKind: void <init>(java.lang.String,int,java.lang.String,byte)>("UPDATE_AFTER", 2, "+U", 2);

        <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind UPDATE_AFTER> = $r2;

        $r3 = new org.apache.flink.types.RowKind;

        specialinvoke $r3.<org.apache.flink.types.RowKind: void <init>(java.lang.String,int,java.lang.String,byte)>("DELETE", 3, "-D", 3);

        <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind DELETE> = $r3;

        $r4 = newarray (org.apache.flink.types.RowKind)[4];

        $r5 = <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind INSERT>;

        $r4[0] = $r5;

        $r6 = <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind UPDATE_BEFORE>;

        $r4[1] = $r6;

        $r7 = <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind UPDATE_AFTER>;

        $r4[2] = $r7;

        $r8 = <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind DELETE>;

        $r4[3] = $r8;

        <org.apache.flink.types.RowKind: org.apache.flink.types.RowKind[] $VALUES> = $r4;

        return;
    }
}
