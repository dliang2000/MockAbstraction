abstract class org.hamcrest.core.ShortcutCombination extends org.hamcrest.BaseMatcher
{
    private final java.lang.Iterable matchers;

    public void <init>(java.lang.Iterable)
    {
        org.hamcrest.core.ShortcutCombination r0;
        java.lang.Iterable r1;

        r0 := @this: org.hamcrest.core.ShortcutCombination;

        r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<org.hamcrest.BaseMatcher: void <init>()>();

        r0.<org.hamcrest.core.ShortcutCombination: java.lang.Iterable matchers> = r1;

        return;
    }

    public abstract boolean matches(java.lang.Object);

    public abstract void describeTo(org.hamcrest.Description);

    protected boolean matches(java.lang.Object, boolean)
    {
        org.hamcrest.core.ShortcutCombination r0;
        java.lang.Object r1, $r5;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r2;
        org.hamcrest.Matcher r3;
        java.lang.Iterable $r4;

        r0 := @this: org.hamcrest.core.ShortcutCombination;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        $r4 = r0.<org.hamcrest.core.ShortcutCombination: java.lang.Iterable matchers>;

        r2 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.hamcrest.Matcher) $r5;

        $z2 = interfaceinvoke r3.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r1);

        if $z2 != z0 goto label2;

        return z0;

     label2:
        goto label1;

     label3:
        if z0 != 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public void describeTo(org.hamcrest.Description, java.lang.String)
    {
        org.hamcrest.core.ShortcutCombination r0;
        org.hamcrest.Description r1;
        java.lang.String r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.Iterable $r8;

        r0 := @this: org.hamcrest.core.ShortcutCombination;

        r1 := @parameter0: org.hamcrest.Description;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<org.hamcrest.core.ShortcutCombination: java.lang.Iterable matchers>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendList(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable)>("(", $r7, ")", $r8);

        return;
    }
}
