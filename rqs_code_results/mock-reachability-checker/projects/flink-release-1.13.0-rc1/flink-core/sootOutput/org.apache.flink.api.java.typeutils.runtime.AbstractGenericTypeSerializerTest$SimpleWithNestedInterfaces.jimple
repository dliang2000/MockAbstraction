public final class org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces extends java.lang.Object
{
    java.util.Map map1;
    java.util.List list;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces r0;
        java.util.HashMap $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.Map map1> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.List list> = $r2;

        return;
    }

    public void <init>(java.lang.String, java.lang.Integer)
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces r0;
        java.lang.String r1;
        java.lang.Integer r2;
        java.util.HashMap $r3;
        java.util.Map $r4;
        java.util.ArrayList $r6;
        java.util.List $r7;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Integer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.Map map1> = $r3;

        $r4 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.Map map1>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.List list> = $r6;

        $r7 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.List list>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.util.List $r5, $r6;
        boolean $z0, $z1;
        java.util.Map $r7, $r8;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces) r1;

        $r6 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.List list>;

        $r5 = r2.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.List list>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.Map map1>;

        $r7 = r2.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.Map map1>;

        $z1 = interfaceinvoke $r8.<java.util.Map: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces r0;
        java.util.Map $r1;
        java.util.List $r2;
        int $i0, $i1, i2, i3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.Map map1>;

        i2 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        $i0 = 31 * i2;

        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleWithNestedInterfaces: java.util.List list>;

        $i1 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

        i3 = $i0 + $i1;

        return i3;
    }
}
