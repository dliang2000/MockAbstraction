class org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator extends java.lang.Object implements org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator
{
    private final java.lang.Object testClass;
    private final java.lang.reflect.Field field;
    private final org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver argResolver;
    private final java.util.Comparator byParameterNumber;

    void <init>(java.lang.Object, java.lang.reflect.Field, org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver)
    {
        org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator r0;
        java.lang.Object r1;
        java.lang.reflect.Field r2;
        org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver r3;
        org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1 $r4;

        r0 := @this: org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Field;

        r3 := @parameter2: org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1;

        specialinvoke $r4.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1: void <init>(org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator)>(r0);

        r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.util.Comparator byParameterNumber> = $r4;

        r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.lang.Object testClass> = r1;

        r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.lang.reflect.Field field> = r2;

        r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver argResolver> = r3;

        return;
    }

    public org.mockito.internal.util.reflection.FieldInitializationReport instantiate()
    {
        org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator r0;
        java.lang.Object r2, $r11, $r13, $r15;
        org.mockito.internal.util.reflection.AccessibilityChanger $r5;
        java.lang.reflect.Field $r6, $r10, $r14, $r29, $r46;
        java.lang.Class $r7, $r30, $r47;
        org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver $r8;
        java.lang.Class[] $r9;
        org.mockito.internal.util.reflection.FieldInitializationReport $r12;
        java.lang.IllegalAccessException $r16;
        org.mockito.exceptions.base.MockitoException $r17, $r24, $r36, $r43;
        java.lang.StringBuilder $r18, $r19, $r21, $r25, $r26, $r27, $r28, $r32, $r37, $r38, $r40, $r44, $r45, $r49, $r50, $r53;
        java.lang.String $r20, $r22, $r31, $r33, $r39, $r41, $r48, $r52, $r54;
        java.lang.IllegalArgumentException $r23;
        java.lang.Throwable $r34, $r51;
        java.lang.InstantiationException $r35;
        java.lang.reflect.InvocationTargetException $r42;
        java.lang.reflect.Constructor r55;
        java.lang.Object[] r56;

        r0 := @this: org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator;

        $r5 = new org.mockito.internal.util.reflection.AccessibilityChanger;

        specialinvoke $r5.<org.mockito.internal.util.reflection.AccessibilityChanger: void <init>()>();

        r55 = null;

     label01:
        $r6 = r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.lang.reflect.Field field>;

        $r7 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.Class getType()>();

        r55 = specialinvoke r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.lang.reflect.Constructor biggestConstructor(java.lang.Class)>($r7);

        virtualinvoke $r5.<org.mockito.internal.util.reflection.AccessibilityChanger: void enableAccess(java.lang.reflect.AccessibleObject)>(r55);

        $r8 = r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver argResolver>;

        $r9 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        r56 = interfaceinvoke $r8.<org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver: java.lang.Object[] resolveTypeInstances(java.lang.Class[])>($r9);

        r2 = virtualinvoke r55.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r56);

        $r11 = r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.lang.Object testClass>;

        $r10 = r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.lang.reflect.Field field>;

        staticinvoke <org.mockito.internal.util.reflection.FieldSetter: void setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)>($r11, $r10, r2);

        $r12 = new org.mockito.internal.util.reflection.FieldInitializationReport;

        $r14 = r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.lang.reflect.Field field>;

        $r13 = r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.lang.Object testClass>;

        $r15 = virtualinvoke $r14.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r13);

        specialinvoke $r12.<org.mockito.internal.util.reflection.FieldInitializationReport: void <init>(java.lang.Object,boolean,boolean)>($r15, 0, 1);

     label02:
        if r55 == null goto label03;

        virtualinvoke $r5.<org.mockito.internal.util.reflection.AccessibilityChanger: void safelyDisableAccess(java.lang.reflect.AccessibleObject)>(r55);

     label03:
        return $r12;

     label04:
        $r23 := @caughtexception;

        $r24 = new org.mockito.exceptions.base.MockitoException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("internal error : argResolver provided incorrect types for constructor ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r55);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ");

        $r29 = r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.lang.reflect.Field field>;

        $r30 = virtualinvoke $r29.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.String getSimpleName()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.mockito.exceptions.base.MockitoException: void <init>(java.lang.String,java.lang.Throwable)>($r33, $r23);

        throw $r24;

     label05:
        $r42 := @caughtexception;

        $r43 = new org.mockito.exceptions.base.MockitoException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the constructor of type \'");

        $r46 = r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.lang.reflect.Field field>;

        $r47 = virtualinvoke $r46.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r48 = virtualinvoke $r47.<java.lang.Class: java.lang.String getSimpleName()>();

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has raised an exception (see the stack trace for cause): ");

        $r51 = virtualinvoke $r42.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $r52 = virtualinvoke $r51.<java.lang.Throwable: java.lang.String toString()>();

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<org.mockito.exceptions.base.MockitoException: void <init>(java.lang.String,java.lang.Throwable)>($r54, $r42);

        throw $r43;

     label06:
        $r35 := @caughtexception;

        $r36 = new org.mockito.exceptions.base.MockitoException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InstantiationException (see the stack trace for cause): ");

        $r39 = virtualinvoke $r35.<java.lang.InstantiationException: java.lang.String toString()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<org.mockito.exceptions.base.MockitoException: void <init>(java.lang.String,java.lang.Throwable)>($r41, $r35);

        throw $r36;

     label07:
        $r16 := @caughtexception;

        $r17 = new org.mockito.exceptions.base.MockitoException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalAccessException (see the stack trace for cause): ");

        $r20 = virtualinvoke $r16.<java.lang.IllegalAccessException: java.lang.String toString()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.mockito.exceptions.base.MockitoException: void <init>(java.lang.String,java.lang.Throwable)>($r22, $r16);

        throw $r17;

     label08:
        $r34 := @caughtexception;

     label09:
        if r55 == null goto label10;

        virtualinvoke $r5.<org.mockito.internal.util.reflection.AccessibilityChanger: void safelyDisableAccess(java.lang.reflect.AccessibleObject)>(r55);

     label10:
        throw $r34;

        catch java.lang.IllegalArgumentException from label01 to label02 with label04;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label05;
        catch java.lang.InstantiationException from label01 to label02 with label06;
        catch java.lang.IllegalAccessException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label09 with label08;
    }

    private void checkParameterized(java.lang.reflect.Constructor, java.lang.reflect.Field)
    {
        org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator r0;
        java.lang.reflect.Constructor r1;
        java.lang.reflect.Field r2;
        java.lang.Class[] $r3;
        int $i0;
        org.mockito.exceptions.base.MockitoException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12;
        java.lang.String $r7, $r13;
        java.lang.Class $r10;

        r0 := @this: org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator;

        r1 := @parameter0: java.lang.reflect.Constructor;

        r2 := @parameter1: java.lang.reflect.Field;

        $r3 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r3;

        if $i0 != 0 goto label1;

        $r4 = new org.mockito.exceptions.base.MockitoException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the field ");

        $r7 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ");

        $r10 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no parameterized constructor");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.mockito.exceptions.base.MockitoException: void <init>(java.lang.String)>($r13);

        throw $r4;

     label1:
        return;
    }

    private java.lang.reflect.Constructor biggestConstructor(java.lang.Class)
    {
        org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator r0;
        java.lang.Class r1;
        java.util.List r2;
        java.lang.reflect.Constructor r3;
        java.lang.reflect.Constructor[] $r4;
        java.util.Comparator $r5;
        java.lang.Object $r6;
        java.lang.reflect.Field $r7;

        r0 := @this: org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator;

        r1 := @parameter0: java.lang.Class;

        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();

        r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r5 = r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.util.Comparator byParameterNumber>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r5);

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (java.lang.reflect.Constructor) $r6;

        $r7 = r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: java.lang.reflect.Field field>;

        specialinvoke r0.<org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator: void checkParameterized(java.lang.reflect.Constructor,java.lang.reflect.Field)>(r3, $r7);

        return r3;
    }
}
