public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected java.util.LinkedHashSet _registeredSubtypes;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver: void <init>()>();

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0, r1;
        java.util.LinkedHashSet r2, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver: void <init>()>();

        r2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;

        if r2 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = new java.util.LinkedHashSet;

        specialinvoke $r4.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r2);

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes> = $r4;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver copy()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0, $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver)>(r0);

        return $r1;
    }

    public transient void registerSubtypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType r3;
        java.util.LinkedHashSet $r4, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType[];

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;

        if $r4 != null goto label1;

        $r6 = new java.util.LinkedHashSet;

        specialinvoke $r6.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes> = $r6;

     label1:
        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;

        virtualinvoke $r5.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public transient void registerSubtypes(java.lang.Class[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0;
        java.lang.Class[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType[] r2;
        int i0, $i1, i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType $r3;
        java.lang.Class $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        r1 := @parameter0: java.lang.Class[];

        $i1 = lengthof r1;

        r2 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType)[$i1];

        i2 = 0;

        i0 = lengthof r1;

     label1:
        if i2 >= i0 goto label2;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        $r4 = r1[i2];

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class)>($r4);

        r2[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void registerSubtypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType[])>(r2);

        return;
    }

    public void registerSubtypes(java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0;
        java.util.Collection r1;
        int i0, $i1, i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType[] r2;
        java.util.Iterator r3;
        java.lang.Class r4;
        boolean $z0;
        java.lang.Object $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        r1 := @parameter0: java.util.Collection;

        i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        r2 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType)[i0];

        i2 = 0;

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Class) $r5;

        $i1 = i2;

        i2 = i2 + 1;

        $r6 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class)>(r4);

        r2[$i1] = $r6;

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void registerSubtypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType[])>(r2);

        return;
    }

    public java.util.Collection collectAndResolveSubtypesByClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r4;
        java.lang.Class r5, $r11, $r14, $r15, $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass r7, r19, r25;
        java.util.HashMap $r8;
        java.util.LinkedHashSet $r9, $r12;
        boolean $z0, $z1, $z2;
        java.lang.Object $r10, $r13;
        java.util.Iterator r17, r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType r18, r22, $r23;
        java.util.List r20;
        java.util.ArrayList $r26;
        java.util.Collection $r27;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        if r3 != null goto label1;

        $r16 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Class getRawType()>();

        goto label2;

     label1:
        $r16 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

     label2:
        r5 = $r16;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;

        if $r9 == null goto label5;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;

        r17 = virtualinvoke $r12.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r13 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r13;

        $r14 = virtualinvoke r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        $z2 = virtualinvoke r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r14);

        if $z2 == 0 goto label4;

        $r15 = virtualinvoke r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        r19 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r1, $r15);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(r19, r18, r1, r4, $r8);

     label4:
        goto label3;

     label5:
        if r2 == null goto label7;

        r20 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.List findSubtypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r2);

        if r20 == null goto label7;

        r21 = interfaceinvoke r20.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r10 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r10;

        $r11 = virtualinvoke r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r1, $r11);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(r7, r22, r1, r4, $r8);

        goto label6;

     label7:
        $r23 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        specialinvoke $r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>(r5, null);

        r25 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r1, r5);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(r25, $r23, r1, r4, $r8);

        $r26 = new java.util.ArrayList;

        $r27 = virtualinvoke $r8.<java.util.HashMap: java.util.Collection values()>();

        specialinvoke $r26.<java.util.ArrayList: void <init>(java.util.Collection)>($r27);

        return $r26;
    }

    public java.util.Collection collectAndResolveSubtypesByClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass r2, r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r3;
        java.util.Iterator r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType r6, $r10;
        java.util.HashMap $r8;
        java.util.LinkedHashSet $r9, $r14;
        java.lang.Class $r11, $r16, $r17, r18;
        java.util.ArrayList $r12;
        java.util.Collection $r13;
        boolean $z0, $z1;
        java.lang.Object $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;

        if $r9 == null goto label3;

        r18 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class getRawType()>();

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;

        r5 = virtualinvoke $r14.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r15;

        $r16 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        $z1 = virtualinvoke r18.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r16);

        if $z1 == 0 goto label2;

        $r17 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r1, $r17);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(r7, r6, r1, r3, $r8);

     label2:
        goto label1;

     label3:
        $r10 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        $r11 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class getRawType()>();

        specialinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>($r11, null);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(r2, $r10, r1, r3, $r8);

        $r12 = new java.util.ArrayList;

        $r13 = virtualinvoke $r8.<java.util.HashMap: java.util.Collection values()>();

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);

        return $r12;
    }

    public java.util.Collection collectAndResolveSubtypesByTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r4;
        java.lang.Class r5, $r15, $r16, $r18;
        java.util.HashSet $r9;
        java.util.LinkedHashMap $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType $r11, r22, r26;
        java.util.Collection $r12;
        java.util.LinkedHashSet $r13, $r24;
        boolean $z0, $z1, $z2;
        java.lang.Object $r14, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass r19, r23, r27;
        java.util.List r20;
        java.util.Iterator r21, r25;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        r5 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>()>();

        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>(r5, null);

        r19 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r1, r5);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(r19, $r11, r1, $r9, $r10);

        if r2 == null goto label2;

        r20 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.List findSubtypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r2);

        if r20 == null goto label2;

        r21 = interfaceinvoke r20.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r17 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r17;

        $r18 = virtualinvoke r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        r23 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r1, $r18);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(r23, r22, r1, $r9, $r10);

        goto label1;

     label2:
        $r24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;

        if $r24 == null goto label5;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;

        r25 = virtualinvoke $r13.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r14 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r26 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r14;

        $r15 = virtualinvoke r26.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        $z1 = virtualinvoke r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r15);

        if $z1 == 0 goto label4;

        $r16 = virtualinvoke r26.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        r27 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r1, $r16);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(r27, r26, r1, $r9, $r10);

     label4:
        goto label3;

     label5:
        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.Collection _combineNamedAndUnnamed(java.lang.Class,java.util.Set,java.util.Map)>(r5, $r9, $r10);

        return $r12;
    }

    public java.util.Collection collectAndResolveSubtypesByTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass r2, r9;
        java.lang.Class r3, $r17, $r18;
        java.util.Iterator r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType r8, $r12;
        java.util.HashSet $r10;
        java.util.LinkedHashMap $r11;
        java.util.LinkedHashSet $r13, $r15;
        java.util.Collection $r14;
        boolean $z0, $z1;
        java.lang.Object $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class getRawType()>();

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        $r11 = new java.util.LinkedHashMap;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>()>();

        $r12 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        specialinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>(r3, null);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(r2, $r12, r1, $r10, $r11);

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;

        if $r13 == null goto label3;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;

        r7 = virtualinvoke $r15.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r16 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r16;

        $r17 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        $z1 = virtualinvoke r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r17);

        if $z1 == 0 goto label2;

        $r18 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r1, $r18);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(r9, r8, r1, $r10, $r11);

     label2:
        goto label1;

     label3:
        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.Collection _combineNamedAndUnnamed(java.lang.Class,java.util.Set,java.util.Map)>(r3, $r10, $r11);

        return $r14;
    }

    protected void _collectAndResolve(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector, java.util.HashMap)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass r1, r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r3;
        java.util.HashMap r4;
        java.util.Iterator r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType r6, $r13, r15, $r17, r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r9, $r11;
        java.lang.Class $r10, $r14, $r18;
        java.lang.String r16;
        java.util.List r21;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        r15 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector;

        r4 := @parameter4: java.util.HashMap;

        $z0 = virtualinvoke r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: boolean hasName()>();

        if $z0 != 0 goto label1;

        r16 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String findTypeName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(r1);

        if r16 == null goto label1;

        $r13 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        $r14 = virtualinvoke r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        specialinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>($r14, r16);

        r15 = $r13;

     label1:
        $r17 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        $r18 = virtualinvoke r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        specialinvoke $r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class)>($r18);

        $z5 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r17);

        if $z5 == 0 goto label3;

        $z3 = virtualinvoke r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: boolean hasName()>();

        if $z3 == 0 goto label2;

        $r11 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r17);

        r20 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r11;

        $z4 = virtualinvoke r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: boolean hasName()>();

        if $z4 != 0 goto label2;

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r15);

     label2:
        return;

     label3:
        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r15);

        r21 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.List findSubtypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r1);

        if r21 == null goto label5;

        $z1 = interfaceinvoke r21.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        r5 = interfaceinvoke r21.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r9;

        $r10 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r2, $r10);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(r7, r6, r2, r3, r4);

        goto label4;

     label5:
        return;
    }

    protected void _collectAndResolveByTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, java.util.Set, java.util.Map)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass r1, r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r2;
        java.util.Set r3;
        java.util.Map r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r5;
        java.util.Iterator r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType r7, $r14, r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Class $r9, $r11, $r15;
        java.lang.Object $r10;
        java.lang.String $r12, r17;
        java.util.List r18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass;

        r16 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r3 := @parameter3: java.util.Set;

        r4 := @parameter4: java.util.Map;

        r5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $z0 = virtualinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: boolean hasName()>();

        if $z0 != 0 goto label1;

        r17 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String findTypeName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(r1);

        if r17 == null goto label1;

        $r14 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        $r15 = virtualinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        specialinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>($r15, r17);

        r16 = $r14;

     label1:
        $z4 = virtualinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: boolean hasName()>();

        if $z4 == 0 goto label2;

        $r12 = virtualinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.String getName()>();

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r16);

     label2:
        $r9 = virtualinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        $z1 = interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r9);

        if $z1 == 0 goto label4;

        r18 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.List findSubtypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r1);

        if r18 == null goto label4;

        $z2 = interfaceinvoke r18.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label4;

        r6 = interfaceinvoke r18.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r10;

        $r11 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r2, $r11);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(r8, r7, r2, r3, r4);

        goto label3;

     label4:
        return;
    }

    protected java.util.Collection _combineNamedAndUnnamed(java.lang.Class, java.util.Set, java.util.Map)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r0;
        java.lang.Class r1, $r11, r15;
        java.util.Set r2;
        java.util.Map r3;
        java.util.ArrayList $r5;
        java.util.Collection $r6, $r7;
        boolean $z0, $z2, $z4;
        java.lang.Object $r8, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType $r9, r13;
        int $i0;
        java.util.Iterator r12, r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: java.util.Map;

        $r5 = new java.util.ArrayList;

        $r6 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r7 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>();

        r12 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r10;

        $r11 = virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>($r11);

        goto label1;

     label2:
        r14 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r8 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.Class) $r8;

        if r15 != r1 goto label4;

        $i0 = virtualinvoke r15.<java.lang.Class: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        if $z2 == 0 goto label4;

        goto label3;

     label4:
        $r9 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType;

        specialinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class)>(r15);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label3;

     label5:
        return $r5;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: long serialVersionUID> = 1L;

        return;
    }
}
