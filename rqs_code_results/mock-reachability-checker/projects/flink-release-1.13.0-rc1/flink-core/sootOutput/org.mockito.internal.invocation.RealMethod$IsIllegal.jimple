public final enum class org.mockito.internal.invocation.RealMethod$IsIllegal extends java.lang.Enum implements org.mockito.internal.invocation.RealMethod
{
    public static final enum org.mockito.internal.invocation.RealMethod$IsIllegal INSTANCE;
    private static final org.mockito.internal.invocation.RealMethod$IsIllegal[] $VALUES;

    public static org.mockito.internal.invocation.RealMethod$IsIllegal[] values()
    {
        org.mockito.internal.invocation.RealMethod$IsIllegal[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.mockito.internal.invocation.RealMethod$IsIllegal: org.mockito.internal.invocation.RealMethod$IsIllegal[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.mockito.internal.invocation.RealMethod$IsIllegal[]) $r1;

        return $r2;
    }

    public static org.mockito.internal.invocation.RealMethod$IsIllegal valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.mockito.internal.invocation.RealMethod$IsIllegal $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/mockito/internal/invocation/RealMethod$IsIllegal;", r0);

        $r2 = (org.mockito.internal.invocation.RealMethod$IsIllegal) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.mockito.internal.invocation.RealMethod$IsIllegal r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.mockito.internal.invocation.RealMethod$IsIllegal;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public boolean isInvokable()
    {
        org.mockito.internal.invocation.RealMethod$IsIllegal r0;

        r0 := @this: org.mockito.internal.invocation.RealMethod$IsIllegal;

        return 0;
    }

    public java.lang.Object invoke()
    {
        org.mockito.internal.invocation.RealMethod$IsIllegal r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: org.mockito.internal.invocation.RealMethod$IsIllegal;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;
    }

    static void <clinit>()
    {
        org.mockito.internal.invocation.RealMethod$IsIllegal $r0, $r2;
        org.mockito.internal.invocation.RealMethod$IsIllegal[] $r1;

        $r0 = new org.mockito.internal.invocation.RealMethod$IsIllegal;

        specialinvoke $r0.<org.mockito.internal.invocation.RealMethod$IsIllegal: void <init>(java.lang.String,int)>("INSTANCE", 0);

        <org.mockito.internal.invocation.RealMethod$IsIllegal: org.mockito.internal.invocation.RealMethod$IsIllegal INSTANCE> = $r0;

        $r1 = newarray (org.mockito.internal.invocation.RealMethod$IsIllegal)[1];

        $r2 = <org.mockito.internal.invocation.RealMethod$IsIllegal: org.mockito.internal.invocation.RealMethod$IsIllegal INSTANCE>;

        $r1[0] = $r2;

        <org.mockito.internal.invocation.RealMethod$IsIllegal: org.mockito.internal.invocation.RealMethod$IsIllegal[] $VALUES> = $r1;

        return;
    }
}
