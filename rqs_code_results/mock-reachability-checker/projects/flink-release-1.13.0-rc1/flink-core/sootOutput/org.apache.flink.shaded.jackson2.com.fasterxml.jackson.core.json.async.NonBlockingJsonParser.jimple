public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.async.ByteArrayFeeder
{
    private static final int FEAT_MASK_TRAILING_COMMA;
    private static final int FEAT_MASK_LEADING_ZEROS;
    private static final int FEAT_MASK_ALLOW_MISSING;
    private static final int FEAT_MASK_ALLOW_SINGLE_QUOTES;
    private static final int FEAT_MASK_ALLOW_UNQUOTED_NAMES;
    private static final int FEAT_MASK_ALLOW_JAVA_COMMENTS;
    private static final int FEAT_MASK_ALLOW_YAML_COMMENTS;
    private static final int[] _icUTF8;
    protected static final int[] _icLatin1;
    protected byte[] _inputBuffer;
    protected int _origBufferLen;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer r2;
        byte[] $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)>(r1, i0, r2);

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] NO_BYTES>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer> = $r3;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.async.ByteArrayFeeder getNonBlockingInputFeeder()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        return r0;
    }

    public final boolean needMoreInput()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label1;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _endOfInput>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void feedInput(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0;
        long $l5, $l6, $l7;
        java.lang.Integer $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i3 >= $i2 goto label1;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i15 = $i14 - $i13;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportError(java.lang.String,java.lang.Object)>("Still have %d undecoded bytes, should not call \'feedInput\'", $r5);

     label1:
        if i1 >= i0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportError(java.lang.String,java.lang.Object,java.lang.Object)>("Input end (%d) may not be before start (%d)", $r3, $r4);

     label2:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _endOfInput>;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportError(java.lang.String)>("Already closed, can not feed more input");

     label3:
        $l6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: long _currInputProcessed>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _origBufferLen>;

        $l5 = (long) $i4;

        $l7 = $l6 + $l5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: long _currInputProcessed> = $l7;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart>;

        $i10 = $i9 - $i8;

        $i11 = i0 - $i10;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart> = $i11;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currBufferStart> = i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd> = i1;

        $i12 = i1 - i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _origBufferLen> = $i12;

        return;
    }

    public void endOfInput()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _endOfInput> = 1;

        return;
    }

    public int releaseBuffered(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        java.io.OutputStream r1;
        int i0, $i1, $i2, $i3;
        byte[] $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r1 := @parameter0: java.io.OutputStream;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        i0 = $i2 - $i1;

        if i0 <= 0 goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, $i3, i0);

     label1:
        return i0;
    }

    protected char _decodeEscaped() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: void throwInternal()>();

        return 32;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        short s0;
        int $i1, $i2, $i3, $i7, $i8, $i10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        long $l4, $l5, $l6;
        byte[] $r3;
        byte $b9;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label04;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _closed>;

        if $z0 == 0 goto label01;

        return null;

     label01:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _endOfInput>;

        if $z1 == 0 goto label03;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        if $r14 != $r13 goto label02;

        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishTokenWithEOF()>();

        return $r16;

     label02:
        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _eofAsNextToken()>();

        return $r15;

     label03:
        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        return $r12;

     label04:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        if $r2 != $r1 goto label05;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishToken()>();

        return $r11;

     label05:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _numTypesValid> = 0;

        $l5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: long _currInputProcessed>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $l4 = (long) $i3;

        $l6 = $l5 + $l4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: long _tokenInputTotal> = $l6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _binaryValue> = null;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i8;

        $b9 = $r3[$i7];

        s0 = $b9 & 255;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _majorState>;

        tableswitch($i10)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label10;
            case 5: goto label11;
            case 6: goto label12;
            default: goto label13;
        };

     label06:
        $r10 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startDocument(int)>(s0);

        return $r10;

     label07:
        $r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValue(int)>(s0);

        return $r9;

     label08:
        $r8 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFieldName(int)>(s0);

        return $r8;

     label09:
        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFieldNameAfterComma(int)>(s0);

        return $r7;

     label10:
        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValueExpectColon(int)>(s0);

        return $r6;

     label11:
        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValue(int)>(s0);

        return $r5;

     label12:
        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValueExpectComma(int)>(s0);

        return $r4;

     label13:
        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: void throwInternal()>();

        return null;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i23, $i25, $i26, $i27, $i29, $i30, $i31, $i34, $i35, $i38, $i39, $i40, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i52, $i53, $i56, $i57, $i60, $i61, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i77, $i78, $i81;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r28, $r29, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r46, $r48, $r50, $r52, $r53, $r54, $r55, $r56, $r58, $r60, $r61;
        byte[] $r8, $r12, $r17, $r25, $r27, $r36, $r45, $r47, $r49, $r51, $r57, $r59;
        byte $b11, $b17, $b22, $b32, $b36, $b41, $b50, $b54, $b58, $b62, $b75, $b79;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r16, $r20, $r30, $r32;
        char $c24, $c28;
        short $s33, $s37, $s42, $s51, $s55, $s59, $s63, $s76, $s80;
        char[] $r31;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState>;

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label42;
            case 3: goto label42;
            case 4: goto label02;
            case 5: goto label03;
            case 6: goto label42;
            case 7: goto label04;
            case 8: goto label05;
            case 9: goto label06;
            case 10: goto label07;
            case 11: goto label42;
            case 12: goto label08;
            case 13: goto label10;
            case 14: goto label11;
            case 15: goto label09;
            case 16: goto label12;
            case 17: goto label13;
            case 18: goto label14;
            case 19: goto label15;
            case 20: goto label42;
            case 21: goto label42;
            case 22: goto label42;
            case 23: goto label16;
            case 24: goto label17;
            case 25: goto label18;
            case 26: goto label19;
            case 27: goto label42;
            case 28: goto label42;
            case 29: goto label42;
            case 30: goto label20;
            case 31: goto label21;
            case 32: goto label22;
            case 33: goto label42;
            case 34: goto label42;
            case 35: goto label42;
            case 36: goto label42;
            case 37: goto label42;
            case 38: goto label42;
            case 39: goto label42;
            case 40: goto label23;
            case 41: goto label32;
            case 42: goto label24;
            case 43: goto label26;
            case 44: goto label29;
            case 45: goto label35;
            case 46: goto label42;
            case 47: goto label42;
            case 48: goto label42;
            case 49: goto label42;
            case 50: goto label36;
            case 51: goto label37;
            case 52: goto label38;
            case 53: goto label39;
            case 54: goto label40;
            case 55: goto label41;
            default: goto label42;
        };

     label01:
        $i81 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r61 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishBOM(int)>($i81);

        return $r61;

     label02:
        $r59 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i77 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i78 = $i77 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i78;

        $b79 = $r59[$i77];

        $s80 = $b79 & 255;

        $r60 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFieldName(int)>($s80);

        return $r60;

     label03:
        $r57 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i73 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i74 = $i73 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i74;

        $b75 = $r57[$i73];

        $s76 = $b75 & 255;

        $r58 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFieldNameAfterComma(int)>($s76);

        return $r58;

     label04:
        $i72 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength>;

        $i71 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $i70 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes>;

        $r56 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseEscapedName(int,int,int)>($i72, $i71, $i70);

        return $r56;

     label05:
        $r55 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishFieldWithEscape()>();

        return $r55;

     label06:
        $i69 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength>;

        $i68 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $i67 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes>;

        $r54 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishAposName(int,int,int)>($i69, $i68, $i67);

        return $r54;

     label07:
        $i66 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength>;

        $i65 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $i64 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes>;

        $r53 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishUnquotedName(int,int,int)>($i66, $i65, $i64);

        return $r53;

     label08:
        $r51 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i60 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i61 = $i60 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i61;

        $b62 = $r51[$i60];

        $s63 = $b62 & 255;

        $r52 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValue(int)>($s63);

        return $r52;

     label09:
        $r45 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i48 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i49 = $i48 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i49;

        $b50 = $r45[$i48];

        $s51 = $b50 & 255;

        $r46 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValueAfterComma(int)>($s51);

        return $r46;

     label10:
        $r49 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i56 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i57 = $i56 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i57;

        $b58 = $r49[$i56];

        $s59 = $b58 & 255;

        $r50 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValueExpectComma(int)>($s59);

        return $r50;

     label11:
        $r47 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i52 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i53 = $i52 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i53;

        $b54 = $r47[$i52];

        $s55 = $b54 & 255;

        $r48 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValueExpectColon(int)>($s55);

        return $r48;

     label12:
        $i47 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r43 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        $r44 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishKeywordToken(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>("null", $i47, $r43);

        return $r44;

     label13:
        $i46 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r41 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        $r42 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishKeywordToken(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>("true", $i46, $r41);

        return $r42;

     label14:
        $i45 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r39 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        $r40 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishKeywordToken(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>("false", $i45, $r39);

        return $r40;

     label15:
        $i44 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _nonStdTokenType>;

        $i43 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r38 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNonStdToken(int,int)>($i44, $i43);

        return $r38;

     label16:
        $r36 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i39 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i40 = $i39 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i40;

        $b41 = $r36[$i39];

        $s42 = $b41 & 255;

        $r37 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberMinus(int)>($s42);

        return $r37;

     label17:
        $r35 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberLeadingZeroes()>();

        return $r35;

     label18:
        $r34 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberLeadingNegZeroes()>();

        return $r34;

     label19:
        $r30 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r31 = virtualinvoke $r30.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getBufferWithoutReset()>();

        $r32 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i38 = virtualinvoke $r32.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

        $r33 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberIntegralPart(char[],int)>($r31, $i38);

        return $r33;

     label20:
        $r29 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishFloatFraction()>();

        return $r29;

     label21:
        $r27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i34 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i35 = $i34 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i35;

        $b36 = $r27[$i34];

        $s37 = $b36 & 255;

        $r28 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishFloatExponent(boolean,int)>(1, $s37);

        return $r28;

     label22:
        $r25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i30 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i31 = $i30 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i31;

        $b32 = $r25[$i30];

        $s33 = $b32 & 255;

        $r26 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishFloatExponent(boolean,int)>(0, $s33);

        return $r26;

     label23:
        $r24 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishRegularString()>();

        return $r24;

     label24:
        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i20 = $i19 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i20;

        $b22 = $r17[$i19];

        $i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeUTF8_2(int,int)>($i21, $b22);

        $c24 = (char) $i23;

        virtualinvoke $r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>($c24);

        $i25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorStateAfterSplit>;

        if $i25 != 45 goto label25;

        $r19 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishAposString()>();

        return $r19;

     label25:
        $r18 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishRegularString()>();

        return $r18;

     label26:
        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes>;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i14;

        $b17 = $r12[$i13];

        $z1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _decodeSplitUTF8_3(int,int,int)>($i15, $i16, $b17);

        if $z1 != 0 goto label27;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        return $r15;

     label27:
        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorStateAfterSplit>;

        if $i18 != 45 goto label28;

        $r14 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishAposString()>();

        return $r14;

     label28:
        $r13 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishRegularString()>();

        return $r13;

     label29:
        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes>;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i8;

        $b11 = $r8[$i7];

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _decodeSplitUTF8_4(int,int,int)>($i9, $i10, $b11);

        if $z0 != 0 goto label30;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        return $r11;

     label30:
        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorStateAfterSplit>;

        if $i12 != 45 goto label31;

        $r10 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishAposString()>();

        return $r10;

     label31:
        $r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishRegularString()>();

        return $r9;

     label32:
        $i27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quoted32>;

        $i26 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quotedDigits>;

        i0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeSplitEscaped(int,int)>($i27, $i26);

        if i0 >= 0 goto label33;

        $r23 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        return $r23;

     label33:
        $r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $c28 = (char) i0;

        virtualinvoke $r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>($c28);

        $i29 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorStateAfterSplit>;

        if $i29 != 45 goto label34;

        $r22 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishAposString()>();

        return $r22;

     label34:
        $r21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishRegularString()>();

        return $r21;

     label35:
        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishAposString()>();

        return $r7;

     label36:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishErrorToken()>();

        return $r6;

     label37:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startSlashComment(int)>($i6);

        return $r5;

     label38:
        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishCComment(int,boolean)>($i5, 1);

        return $r4;

     label39:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishCComment(int,boolean)>($i4, 0);

        return $r3;

     label40:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishCppComment(int)>($i3);

        return $r2;

     label41:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishHashComment(int)>($i2);

        return $r1;

     label42:
        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: void throwInternal()>();

        return null;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishTokenWithEOF() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r25, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r7;
        boolean $z0;
        java.lang.StringBuilder $r20, $r21, $r22, $r23;
        java.lang.String $r24;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState>;

        tableswitch($i0)
        {
            case 3: goto label01;
            case 4: goto label16;
            case 5: goto label16;
            case 6: goto label16;
            case 7: goto label16;
            case 8: goto label16;
            case 9: goto label16;
            case 10: goto label16;
            case 11: goto label16;
            case 12: goto label02;
            case 13: goto label16;
            case 14: goto label16;
            case 15: goto label16;
            case 16: goto label03;
            case 17: goto label04;
            case 18: goto label05;
            case 19: goto label06;
            case 20: goto label16;
            case 21: goto label16;
            case 22: goto label16;
            case 23: goto label16;
            case 24: goto label08;
            case 25: goto label08;
            case 26: goto label09;
            case 27: goto label16;
            case 28: goto label16;
            case 29: goto label16;
            case 30: goto label11;
            case 31: goto label13;
            case 32: goto label12;
            case 33: goto label16;
            case 34: goto label16;
            case 35: goto label16;
            case 36: goto label16;
            case 37: goto label16;
            case 38: goto label16;
            case 39: goto label16;
            case 40: goto label16;
            case 41: goto label16;
            case 42: goto label16;
            case 43: goto label16;
            case 44: goto label16;
            case 45: goto label16;
            case 46: goto label16;
            case 47: goto label16;
            case 48: goto label16;
            case 49: goto label16;
            case 50: goto label07;
            case 51: goto label16;
            case 52: goto label14;
            case 53: goto label14;
            case 54: goto label15;
            case 55: goto label15;
            default: goto label16;
        };

     label01:
        $r19 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _eofAsNextToken()>();

        return $r19;

     label02:
        $r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _eofAsNextToken()>();

        return $r18;

     label03:
        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        $r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishKeywordTokenWithEOF(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>("null", $i5, $r16);

        return $r17;

     label04:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishKeywordTokenWithEOF(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>("true", $i4, $r14);

        return $r15;

     label05:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishKeywordTokenWithEOF(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>("false", $i3, $r12);

        return $r13;

     label06:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _nonStdTokenType>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNonStdTokenWithEOF(int,int)>($i2, $i1);

        return $r11;

     label07:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishErrorTokenWithEOF()>();

        return $r3;

     label08:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueCompleteInt(int,java.lang.String)>(0, "0");

        return $r10;

     label09:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        i7 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _numberNegative>;

        if $z0 == 0 goto label10;

        i7 = i7 + -1;

     label10:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = i7;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r8);

        return $r9;

     label11:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _expLength> = 0;

     label12:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r4);

        return $r5;

     label13:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(": was expecting fraction after exponent marker", $r6);

     label14:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(": was expecting closing \'*/\' for comment", $r2);

     label15:
        $r26 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _eofAsNextToken()>();

        return $r26;

     label16:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": was expecting rest of token (internal state: ");

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidEOF(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r24, $r25);

        return r1;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startDocument(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r3, $r4, $r5;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, $i13;
        byte[] $r2;
        byte $b2;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i10 := @parameter0: int;

        i11 = i10 & 255;

        if i11 != 239 goto label1;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState>;

        if $i9 == 1 goto label1;

        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishBOM(int)>(1);

        return $r5;

     label1:
        if i11 > 32 goto label8;

        if i11 == 32 goto label4;

        if i11 != 10 goto label2;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRow>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRow> = $i7;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart> = $i8;

        goto label4;

     label2:
        if i11 != 13 goto label3;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowAlt>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowAlt> = $i4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart> = $i5;

        goto label4;

     label3:
        if i11 == 9 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _throwInvalidSpace(int)>(i11);

     label4:
        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i12 < $i13 goto label7;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 3;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _closed>;

        if $z0 == 0 goto label5;

        return null;

     label5:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _endOfInput>;

        if $z1 == 0 goto label6;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _eofAsNextToken()>();

        return $r4;

     label6:
        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        return $r3;

     label7:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = $i0 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i1;

        $b2 = $r2[$i0];

        i11 = $b2 & 255;

        goto label1;

     label8:
        $r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValue(int)>(i11);

        return $r1;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishBOM(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        short s0;
        int $i1, $i2, $i3, $i4, i8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r3;
        byte[] $r2;
        byte $b5;
        long $l6, $l7;
        java.lang.Integer $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i8 := @parameter0: int;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label6;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i4;

        $b5 = $r2[$i3];

        s0 = $b5 & 255;

        tableswitch(i8)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label5;
        };

     label2:
        $l6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: long _currInputProcessed>;

        $l7 = $l6 - 3L;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: long _currInputProcessed> = $l7;

        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startDocument(int)>(s0);

        return $r3;

     label3:
        if s0 == 191 goto label5;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(s0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportError(java.lang.String,java.lang.Object)>("Unexpected byte 0x%02x following 0xEF 0xBB; should get 0xBF as third byte of UTF-8 BOM", $r4);

        goto label5;

     label4:
        if s0 == 187 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(s0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportError(java.lang.String,java.lang.Object)>("Unexpected byte 0x%02x following 0xEF; should get 0xBB as second byte UTF-8 BOM", $r5);

     label5:
        i8 = i8 + 1;

        goto label1;

     label6:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 1;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r1;

        return $r1;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFieldName(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        java.lang.String r1;
        int $i0, $i1, $i2, i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i3 := @parameter0: int;

        if i3 > 32 goto label1;

        i3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _skipWS(int)>(i3);

        if i3 > 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 4;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r6;

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _updateTokenLocation()>();

        if i3 == 34 goto label3;

        if i3 != 125 goto label2;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeObjectScope()>();

        return $r5;

     label2:
        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleOddName(int)>(i3);

        return $r4;

     label3:
        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = $i0 + 13;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i2 > $i1 goto label4;

        r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _fastParseName()>();

        if r1 == null goto label4;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _fieldComplete(java.lang.String)>(r1);

        return $r3;

     label4:
        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseEscapedName(int,int,int)>(0, 0, 0);

        return $r2;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFieldNameAfterComma(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        java.lang.String r1, $r12, $r15;
        byte[] $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4, $r5, $r6, $r7, $r8, $r16, $r17, $r18, $r19;
        java.lang.StringBuilder $r9, $r10, $r13, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i9 := @parameter0: int;

        if i9 > 32 goto label01;

        i9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _skipWS(int)>(i9);

        if i9 > 0 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 5;

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r19;

     label01:
        if i9 == 44 goto label05;

        if i9 != 125 goto label02;

        $r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeObjectScope()>();

        return $r18;

     label02:
        if i9 != 35 goto label03;

        $r17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishHashComment(int)>(5);

        return $r17;

     label03:
        if i9 != 47 goto label04;

        $r16 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startSlashComment(int)>(5);

        return $r16;

     label04:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("was expecting comma to separate ");

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String typeDesc()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i9, $r15);

     label05:
        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if i0 < $i1 goto label06;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 4;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r8;

        return $r8;

     label06:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i10 = $r2[i0];

        $i2 = i0 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i2;

        if i10 > 32 goto label07;

        i10 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _skipWS(int)>(i10);

        if i10 > 0 goto label07;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 4;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r7;

     label07:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _updateTokenLocation()>();

        if i10 == 34 goto label09;

        if i10 != 125 goto label08;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_TRAILING_COMMA>;

        $i8 = $i7 & $i6;

        if $i8 == 0 goto label08;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeObjectScope()>();

        return $r6;

     label08:
        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleOddName(int)>(i10);

        return $r5;

     label09:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i5 = $i3 + 13;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i5 > $i4 goto label10;

        r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _fastParseName()>();

        if r1 == null goto label10;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _fieldComplete(java.lang.String)>(r1);

        return $r4;

     label10:
        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseEscapedName(int,int,int)>(0, 0, 0);

        return $r3;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValue(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r18, $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature $r13;
        boolean $z1;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i0 := @parameter0: int;

        if i0 > 32 goto label01;

        i0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _skipWS(int)>(i0);

        if i0 > 0 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 12;

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r19;

     label01:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _updateTokenLocation()>();

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean expectComma()>();

        if i0 != 34 goto label02;

        $r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startString()>();

        return $r18;

     label02:
        tableswitch(i0)
        {
            case 35: goto label03;
            case 36: goto label16;
            case 37: goto label16;
            case 38: goto label16;
            case 39: goto label16;
            case 40: goto label16;
            case 41: goto label16;
            case 42: goto label16;
            case 43: goto label16;
            case 44: goto label16;
            case 45: goto label04;
            case 46: goto label06;
            case 47: goto label05;
            case 48: goto label07;
            case 49: goto label08;
            case 50: goto label08;
            case 51: goto label08;
            case 52: goto label08;
            case 53: goto label08;
            case 54: goto label08;
            case 55: goto label08;
            case 56: goto label08;
            case 57: goto label08;
            case 58: goto label16;
            case 59: goto label16;
            case 60: goto label16;
            case 61: goto label16;
            case 62: goto label16;
            case 63: goto label16;
            case 64: goto label16;
            case 65: goto label16;
            case 66: goto label16;
            case 67: goto label16;
            case 68: goto label16;
            case 69: goto label16;
            case 70: goto label16;
            case 71: goto label16;
            case 72: goto label16;
            case 73: goto label16;
            case 74: goto label16;
            case 75: goto label16;
            case 76: goto label16;
            case 77: goto label16;
            case 78: goto label16;
            case 79: goto label16;
            case 80: goto label16;
            case 81: goto label16;
            case 82: goto label16;
            case 83: goto label16;
            case 84: goto label16;
            case 85: goto label16;
            case 86: goto label16;
            case 87: goto label16;
            case 88: goto label16;
            case 89: goto label16;
            case 90: goto label16;
            case 91: goto label12;
            case 92: goto label16;
            case 93: goto label13;
            case 94: goto label16;
            case 95: goto label16;
            case 96: goto label16;
            case 97: goto label16;
            case 98: goto label16;
            case 99: goto label16;
            case 100: goto label16;
            case 101: goto label16;
            case 102: goto label09;
            case 103: goto label16;
            case 104: goto label16;
            case 105: goto label16;
            case 106: goto label16;
            case 107: goto label16;
            case 108: goto label16;
            case 109: goto label16;
            case 110: goto label10;
            case 111: goto label16;
            case 112: goto label16;
            case 113: goto label16;
            case 114: goto label16;
            case 115: goto label16;
            case 116: goto label11;
            case 117: goto label16;
            case 118: goto label16;
            case 119: goto label16;
            case 120: goto label16;
            case 121: goto label16;
            case 122: goto label16;
            case 123: goto label14;
            case 124: goto label16;
            case 125: goto label15;
            default: goto label16;
        };

     label03:
        $r17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishHashComment(int)>(12);

        return $r17;

     label04:
        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNegativeNumber()>();

        return $r16;

     label05:
        $r11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startSlashComment(int)>(12);

        return $r11;

     label06:
        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS>;

        $r13 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)>($r13);

        if $z1 == 0 goto label16;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloatThatStartsWithPeriod()>();

        return $r15;

     label07:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNumberLeadingZero()>();

        return $r10;

     label08:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startPositiveNumber(int)>(i0);

        return $r9;

     label09:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFalseToken()>();

        return $r6;

     label10:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNullToken()>();

        return $r5;

     label11:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startTrueToken()>();

        return $r4;

     label12:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startArrayScope()>();

        return $r8;

     label13:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeArrayScope()>();

        return $r7;

     label14:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startObjectScope()>();

        return $r3;

     label15:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeObjectScope()>();

        return $r2;

     label16:
        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startUnexpectedValue(boolean,int)>(0, i0);

        return $r14;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValueExpectComma(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r1, $r20;
        byte[] $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r25, $r26, $r27, $r28, $r29, $r30;
        java.lang.StringBuilder $r18, $r19, $r22, $r23;
        java.lang.String $r21, $r24;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i9 := @parameter0: int;

        if i9 > 32 goto label01;

        i9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _skipWS(int)>(i9);

        if i9 > 0 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 13;

        $r29 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r29;

     label01:
        if i9 == 44 goto label06;

        if i9 != 93 goto label02;

        $r28 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeArrayScope()>();

        return $r28;

     label02:
        if i9 != 125 goto label03;

        $r27 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeObjectScope()>();

        return $r27;

     label03:
        if i9 != 47 goto label04;

        $r26 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startSlashComment(int)>(13);

        return $r26;

     label04:
        if i9 != 35 goto label05;

        $r25 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishHashComment(int)>(13);

        return $r25;

     label05:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("was expecting comma to separate ");

        $r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $r21 = virtualinvoke $r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String typeDesc()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i9, $r24);

     label06:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean expectComma()>();

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if i0 < $i1 goto label07;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 15;

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r17;

        return $r17;

     label07:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i10 = $r2[i0];

        $i2 = i0 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i2;

        if i10 > 32 goto label08;

        i10 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _skipWS(int)>(i10);

        if i10 > 0 goto label08;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 15;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r16;

     label08:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _updateTokenLocation()>();

        if i10 != 34 goto label09;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startString()>();

        return $r15;

     label09:
        lookupswitch(i10)
        {
            case 35: goto label10;
            case 45: goto label11;
            case 47: goto label12;
            case 48: goto label13;
            case 49: goto label14;
            case 50: goto label14;
            case 51: goto label14;
            case 52: goto label14;
            case 53: goto label14;
            case 54: goto label14;
            case 55: goto label14;
            case 56: goto label14;
            case 57: goto label14;
            case 91: goto label18;
            case 93: goto label19;
            case 102: goto label15;
            case 110: goto label16;
            case 116: goto label17;
            case 123: goto label20;
            case 125: goto label21;
            default: goto label22;
        };

     label10:
        $r14 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishHashComment(int)>(15);

        return $r14;

     label11:
        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNegativeNumber()>();

        return $r13;

     label12:
        $r12 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startSlashComment(int)>(15);

        return $r12;

     label13:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNumberLeadingZero()>();

        return $r11;

     label14:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startPositiveNumber(int)>(i10);

        return $r10;

     label15:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFalseToken()>();

        return $r7;

     label16:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNullToken()>();

        return $r6;

     label17:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startTrueToken()>();

        return $r5;

     label18:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startArrayScope()>();

        return $r9;

     label19:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_TRAILING_COMMA>;

        $i8 = $i7 & $i6;

        if $i8 == 0 goto label22;

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeArrayScope()>();

        return $r8;

     label20:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startObjectScope()>();

        return $r4;

     label21:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_TRAILING_COMMA>;

        $i5 = $i4 & $i3;

        if $i5 == 0 goto label22;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeObjectScope()>();

        return $r3;

     label22:
        $r30 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startUnexpectedValue(boolean,int)>(1, i10);

        return $r30;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValueExpectColon(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i1, $i2, i3, i4;
        byte[] $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i3 := @parameter0: int;

        if i3 > 32 goto label01;

        i3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _skipWS(int)>(i3);

        if i3 > 0 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 14;

        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r18;

     label01:
        if i3 == 58 goto label04;

        if i3 != 47 goto label02;

        $r17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startSlashComment(int)>(14);

        return $r17;

     label02:
        if i3 != 35 goto label03;

        $r16 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishHashComment(int)>(14);

        return $r16;

     label03:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i3, "was expecting a colon to separate field name and value");

     label04:
        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if i0 < $i1 goto label05;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 12;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r15;

        return $r15;

     label05:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i4 = $r1[i0];

        $i2 = i0 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i2;

        if i4 > 32 goto label06;

        i4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _skipWS(int)>(i4);

        if i4 > 0 goto label06;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 12;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r14;

     label06:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _updateTokenLocation()>();

        if i4 != 34 goto label07;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startString()>();

        return $r13;

     label07:
        lookupswitch(i4)
        {
            case 35: goto label08;
            case 45: goto label09;
            case 47: goto label10;
            case 48: goto label11;
            case 49: goto label12;
            case 50: goto label12;
            case 51: goto label12;
            case 52: goto label12;
            case 53: goto label12;
            case 54: goto label12;
            case 55: goto label12;
            case 56: goto label12;
            case 57: goto label12;
            case 91: goto label16;
            case 102: goto label13;
            case 110: goto label14;
            case 116: goto label15;
            case 123: goto label17;
            default: goto label18;
        };

     label08:
        $r11 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishHashComment(int)>(12);

        return $r11;

     label09:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNegativeNumber()>();

        return $r10;

     label10:
        $r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startSlashComment(int)>(12);

        return $r9;

     label11:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNumberLeadingZero()>();

        return $r8;

     label12:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startPositiveNumber(int)>(i4);

        return $r7;

     label13:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFalseToken()>();

        return $r5;

     label14:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNullToken()>();

        return $r4;

     label15:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startTrueToken()>();

        return $r3;

     label16:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startArrayScope()>();

        return $r6;

     label17:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startObjectScope()>();

        return $r2;

     label18:
        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startUnexpectedValue(boolean,int)>(0, i4);

        return $r12;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValueAfterComma(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i6 := @parameter0: int;

        if i6 > 32 goto label01;

        i6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _skipWS(int)>(i6);

        if i6 > 0 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 15;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r14;

     label01:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _updateTokenLocation()>();

        if i6 != 34 goto label02;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startString()>();

        return $r13;

     label02:
        lookupswitch(i6)
        {
            case 35: goto label03;
            case 45: goto label04;
            case 47: goto label05;
            case 48: goto label06;
            case 49: goto label07;
            case 50: goto label07;
            case 51: goto label07;
            case 52: goto label07;
            case 53: goto label07;
            case 54: goto label07;
            case 55: goto label07;
            case 56: goto label07;
            case 57: goto label07;
            case 91: goto label11;
            case 93: goto label12;
            case 102: goto label08;
            case 110: goto label09;
            case 116: goto label10;
            case 123: goto label13;
            case 125: goto label14;
            default: goto label15;
        };

     label03:
        $r12 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishHashComment(int)>(15);

        return $r12;

     label04:
        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNegativeNumber()>();

        return $r11;

     label05:
        $r10 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startSlashComment(int)>(15);

        return $r10;

     label06:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNumberLeadingZero()>();

        return $r9;

     label07:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startPositiveNumber(int)>(i6);

        return $r8;

     label08:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFalseToken()>();

        return $r5;

     label09:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNullToken()>();

        return $r4;

     label10:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startTrueToken()>();

        return $r3;

     label11:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startArrayScope()>();

        return $r7;

     label12:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_TRAILING_COMMA>;

        $i5 = $i4 & $i3;

        if $i5 == 0 goto label15;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeArrayScope()>();

        return $r6;

     label13:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startObjectScope()>();

        return $r2;

     label14:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_TRAILING_COMMA>;

        $i2 = $i1 & $i0;

        if $i2 == 0 goto label15;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeObjectScope()>();

        return $r1;

     label15:
        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startUnexpectedValue(boolean,int)>(1, i6);

        return $r15;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startUnexpectedValue(boolean, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 39: goto label4;
            case 43: goto label5;
            case 44: goto label2;
            case 73: goto label7;
            case 78: goto label6;
            case 93: goto label1;
            case 125: goto label3;
            default: goto label8;
        };

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z1 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inArray()>();

        if $z1 != 0 goto label2;

        goto label8;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;

        $z2 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonReadContext: boolean inRoot()>();

        if $z2 != 0 goto label3;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_MISSING>;

        $i3 = $i2 & $i1;

        if $i3 == 0 goto label3;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i5 = $i4 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i5;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r3);

        return $r4;

     label3:
        goto label8;

     label4:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_SINGLE_QUOTES>;

        $i8 = $i7 & $i6;

        if $i8 == 0 goto label8;

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startAposString()>();

        return $r8;

     label5:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNonStdToken(int,int)>(2, 1);

        return $r7;

     label6:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNonStdToken(int,int)>(0, 1);

        return $r5;

     label7:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNonStdToken(int,int)>(1, 1);

        return $r6;

     label8:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected a valid value ");

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _validJsonValueList()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i0, $r13);

        return null;
    }

    private final int _skipWS(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11;
        byte[] $r1;
        byte $b2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i9 := @parameter0: int;

     label1:
        if i9 == 32 goto label4;

        if i9 != 10 goto label2;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRow>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRow> = $i7;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart> = $i8;

        goto label4;

     label2:
        if i9 != 13 goto label3;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowAlt>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowAlt> = $i4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart> = $i5;

        goto label4;

     label3:
        if i9 == 9 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _throwInvalidSpace(int)>(i9);

     label4:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i10 < $i11 goto label5;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r2;

        return 0;

     label5:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = $i0 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i1;

        $b2 = $r1[$i0];

        i9 = $b2 & 255;

        if i9 <= 32 goto label1;

        return i9;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startSlashComment(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        byte b1;
        byte[] $r1;
        short $s9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i0 := @parameter0: int;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_JAVA_COMMENTS>;

        $i4 = $i3 & $i2;

        if $i4 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(47, "maybe a (non-standard) comment? (not recognized as one since Feature \'ALLOW_COMMENTS\' not enabled for parser)");

     label1:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i6 < $i5 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 51;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r4;

        return $r4;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i8;

        b1 = $r1[$i7];

        if b1 != 42 goto label3;

        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishCComment(int,boolean)>(i0, 0);

        return $r3;

     label3:
        if b1 != 47 goto label4;

        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishCppComment(int)>(i0);

        return $r2;

     label4:
        $s9 = b1 & 255;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportUnexpectedChar(int,java.lang.String)>($s9, "was expecting either \'*\' or \'/\' for a comment");

        return null;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishHashComment(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        short s1;
        byte[] $r1;
        byte $b7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i0 := @parameter0: int;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_YAML_COMMENTS>;

        $i4 = $i3 & $i2;

        if $i4 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(35, "maybe a (non-standard) comment? (not recognized as one since Feature \'ALLOW_YAML_COMMENTS\' not enabled for parser)");

     label1:
        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i14 < $i15 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 55;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i0;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r3;

        return $r3;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i6;

        $b7 = $r1[$i5];

        s1 = $b7 & 255;

        if s1 >= 32 goto label5;

        if s1 != 10 goto label3;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRow>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRow> = $i12;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart> = $i13;

        goto label6;

     label3:
        if s1 != 13 goto label4;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowAlt>;

        $i9 = $i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowAlt> = $i9;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart> = $i10;

        goto label6;

     label4:
        if s1 == 9 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _throwInvalidSpace(int)>(s1);

     label5:
        goto label1;

     label6:
        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startAfterComment(int)>(i0);

        return $r2;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishCppComment(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12;
        short s1;
        byte[] $r1;
        byte $b6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i0 := @parameter0: int;

     label1:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i3 < $i2 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 54;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i0;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r3;

        return $r3;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i5;

        $b6 = $r1[$i4];

        s1 = $b6 & 255;

        if s1 >= 32 goto label5;

        if s1 != 10 goto label3;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRow>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRow> = $i11;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart> = $i12;

        goto label6;

     label3:
        if s1 != 13 goto label4;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowAlt>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowAlt> = $i8;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart> = $i9;

        goto label6;

     label4:
        if s1 == 9 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _throwInvalidSpace(int)>(s1);

     label5:
        goto label1;

     label6:
        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startAfterComment(int)>(i0);

        return $r2;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishCComment(int, boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        short s1;
        byte[] $r1;
        byte $b4, $b13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label01:
        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i11 < $i12 goto label04;

        if z0 == 0 goto label02;

        $b13 = 52;

        goto label03;

     label02:
        $b13 = 53;

     label03:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = $b13;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i0;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r3;

        return $r3;

     label04:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i3;

        $b4 = $r1[$i2];

        s1 = $b4 & 255;

        if s1 >= 32 goto label07;

        if s1 != 10 goto label05;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRow>;

        $i9 = $i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRow> = $i9;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart> = $i10;

        goto label09;

     label05:
        if s1 != 13 goto label06;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowAlt>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowAlt> = $i6;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _currInputRowStart> = $i7;

        goto label09;

     label06:
        if s1 == 9 goto label09;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _throwInvalidSpace(int)>(s1);

        goto label09;

     label07:
        if s1 != 42 goto label08;

        z0 = 1;

        goto label01;

     label08:
        if s1 != 47 goto label09;

        if z0 == 0 goto label09;

        goto label10;

     label09:
        z0 = 0;

        goto label01;

     label10:
        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startAfterComment(int)>(i0);

        return $r2;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startAfterComment(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i2, $i3, $i4, $i5;
        short s1;
        byte[] $r1;
        byte $b6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i0 := @parameter0: int;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i3 < $i2 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = i0;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r8;

        return $r8;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i5;

        $b6 = $r1[$i4];

        s1 = $b6 & 255;

        tableswitch(i0)
        {
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label8;
            case 7: goto label8;
            case 8: goto label8;
            case 9: goto label8;
            case 10: goto label8;
            case 11: goto label8;
            case 12: goto label4;
            case 13: goto label5;
            case 14: goto label6;
            case 15: goto label7;
            default: goto label8;
        };

     label2:
        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFieldName(int)>(s1);

        return $r7;

     label3:
        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFieldNameAfterComma(int)>(s1);

        return $r6;

     label4:
        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValue(int)>(s1);

        return $r5;

     label5:
        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValueExpectComma(int)>(s1);

        return $r4;

     label6:
        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValueExpectColon(int)>(s1);

        return $r3;

     label7:
        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startValueAfterComma(int)>(s1);

        return $r2;

     label8:
        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: void throwInternal()>();

        return null;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFalseToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        byte[] r1;
        short s0;
        int $i1, $i2, i8, i9, i10, i11, i12;
        byte $b3, $b4, $b5, $b6, $b7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = i8 + 4;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label2;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i9 = i8 + 1;

        $b3 = r1[i8];

        if $b3 != 97 goto label2;

        i10 = i9 + 1;

        $b4 = r1[i9];

        if $b4 != 108 goto label2;

        i11 = i10 + 1;

        $b5 = r1[i10];

        if $b5 != 115 goto label2;

        i12 = i11 + 1;

        $b6 = r1[i11];

        if $b6 != 101 goto label2;

        $b7 = r1[i12];

        s0 = $b7 & 255;

        if s0 < 48 goto label1;

        if s0 == 93 goto label1;

        if s0 != 125 goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i12;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r2);

        return $r3;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 18;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishKeywordToken(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>("false", 1, $r4);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startTrueToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        byte[] r1;
        short s0;
        int $i1, $i2, i7, i8, i9, i10;
        byte $b3, $b4, $b5, $b6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = i7 + 3;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label2;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i8 = i7 + 1;

        $b3 = r1[i7];

        if $b3 != 114 goto label2;

        i9 = i8 + 1;

        $b4 = r1[i8];

        if $b4 != 117 goto label2;

        i10 = i9 + 1;

        $b5 = r1[i9];

        if $b5 != 101 goto label2;

        $b6 = r1[i10];

        s0 = $b6 & 255;

        if s0 < 48 goto label1;

        if s0 == 93 goto label1;

        if s0 != 125 goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i10;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r2);

        return $r3;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 17;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishKeywordToken(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>("true", 1, $r4);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNullToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        byte[] r1;
        short s0;
        int $i1, $i2, i7, i8, i9, i10;
        byte $b3, $b4, $b5, $b6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = i7 + 3;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i2 >= $i1 goto label2;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i8 = i7 + 1;

        $b3 = r1[i7];

        if $b3 != 117 goto label2;

        i9 = i8 + 1;

        $b4 = r1[i8];

        if $b4 != 108 goto label2;

        i10 = i9 + 1;

        $b5 = r1[i9];

        if $b5 != 108 goto label2;

        $b6 = r1[i10];

        s0 = $b6 & 255;

        if s0 < 48 goto label1;

        if s0 == 93 goto label1;

        if s0 != 125 goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i10;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r2);

        return $r3;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 16;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishKeywordToken(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>("null", 1, $r4);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishKeywordToken(java.lang.String, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r2, $r5, $r6, $r7;
        int i0, $i2, $i3, $i4, $i6, $i7, i8;
        byte b1;
        byte[] $r3;
        char $c5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r1 := @parameter0: java.lang.String;

        i8 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i3 < $i2 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i8;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r6;

        return $r6;

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        b1 = $r3[$i4];

        if i8 != i0 goto label4;

        if b1 < 48 goto label3;

        if b1 == 93 goto label3;

        if b1 != 125 goto label6;

     label3:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r2);

        return $r7;

     label4:
        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i8);

        if b1 == $c5 goto label5;

        goto label6;

     label5:
        i8 = i8 + 1;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i7;

        goto label1;

     label6:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 50;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void resetWithCopy(java.lang.String,int,int)>(r1, 0, i8);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishErrorToken()>();

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishKeywordTokenWithEOF(java.lang.String, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        java.lang.String r1;
        int i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 != $i1 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = r2;

        return r2;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void resetWithCopy(java.lang.String,int,int)>(r1, 0, i0);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishErrorTokenWithEOF()>();

        return $r4;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNonStdToken(int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, i1, $i3, $i4, $i5, $i7, $i8, i9;
        java.lang.String r1;
        byte b2;
        byte[] $r2;
        char $c6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i0 := @parameter0: int;

        i9 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _nonStdToken(int)>(i0);

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i4 < $i3 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _nonStdTokenType> = i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i9;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 19;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r5;

        return $r5;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        b2 = $r2[$i5];

        if i9 != i1 goto label4;

        if b2 < 48 goto label3;

        if b2 == 93 goto label3;

        if b2 != 125 goto label6;

     label3:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueNonStdNumberComplete(int)>(i0);

        return $r6;

     label4:
        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i9);

        if b2 == $c6 goto label5;

        goto label6;

     label5:
        i9 = i9 + 1;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i8;

        goto label1;

     label6:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 50;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void resetWithCopy(java.lang.String,int,int)>(r1, 0, i9);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishErrorToken()>();

        return $r4;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNonStdTokenWithEOF(int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, i1, $i2;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _nonStdToken(int)>(i0);

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i1 != $i2 goto label1;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueNonStdNumberComplete(int)>(i0);

        return $r4;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void resetWithCopy(java.lang.String,int,int)>(r1, 0, i1);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishErrorTokenWithEOF()>();

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishErrorToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        byte b0;
        char c1;
        int $i2, $i3, $i4, $i5, $i6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r5;
        byte[] $r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3, $r6, $r7;
        java.lang.String $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

     label1:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i3 >= $i2 goto label3;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i5;

        b0 = $r2[$i4];

        c1 = (char) b0;

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>(c1);

        if $z0 == 0 goto label2;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>(c1);

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i6 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int size()>();

        if $i6 >= 256 goto label2;

        goto label1;

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _reportErrorToken(java.lang.String)>($r4);

        return $r5;

     label3:
        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r1;

        return $r1;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishErrorTokenWithEOF() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r1;
        java.lang.String $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _reportErrorToken(java.lang.String)>($r2);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _reportErrorToken(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        java.lang.String r1, $r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _validJsonTokenList()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportError(java.lang.String,java.lang.Object,java.lang.Object)>("Unrecognized token \'%s\': was expecting %s", $r3, $r4);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloatThatStartsWithPeriod() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        char[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _numberNegative> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = 0;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r1 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r1, 0, 46);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startPositiveNumber(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r1, $r4, $r6, $r9, $r14;
        char $c0, $c7;
        int $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, i17, i18;
        byte[] $r2, $r3;
        byte $b4, $b12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, $r8, $r10, $r11, $r13, $r15;
        char[] r16;
        short s19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i17 := @parameter0: int;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _numberNegative> = 0;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r16 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        $c0 = (char) i17;

        r16[0] = $c0;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 26;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(1);

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r15;

        return $r15;

     label1:
        i18 = 1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $b4 = $r2[$i3];

        s19 = $b4 & 255;

     label2:
        if s19 >= 48 goto label3;

        if s19 != 46 goto label8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = i18;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i16 = $i15 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i16;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r16, i18, s19);

        return $r13;

     label3:
        if s19 <= 57 goto label5;

        if s19 == 101 goto label4;

        if s19 != 69 goto label8;

     label4:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = i18;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i14;

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r16, i18, s19);

        return $r8;

     label5:
        $i5 = lengthof r16;

        if i18 < $i5 goto label6;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r16 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label6:
        $i6 = i18;

        i18 = i18 + 1;

        $c7 = (char) s19;

        r16[$i6] = $c7;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i9 = $i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i9;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i9 < $i10 goto label7;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 26;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i18);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r5;

        return $r5;

     label7:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $b12 = $r3[$i11];

        s19 = $b12 & 255;

        goto label2;

     label8:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = i18;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i18);

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r10);

        return $r11;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNegativeNumber() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i23, $i24, i26;
        byte[] $r1, $r2, $r3;
        byte $b4, $b13;
        char $c8, $c22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4, $r6, $r9, $r14, $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, $r8, $r10, $r11, $r13, $r15, $r16, $r17, $r18;
        short s21, s25;
        char[] r20;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _numberNegative> = 1;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 23;

        $r18 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r18;

        return $r18;

     label01:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i3;

        $b4 = $r1[$i2];

        s21 = $b4 & 255;

        if s21 > 48 goto label03;

        if s21 != 48 goto label02;

        $r17 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberLeadingNegZeroes()>();

        return $r17;

     label02:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(s21, "expected digit (0-9) to follow minus sign, for valid numeric value");

        goto label05;

     label03:
        if s21 <= 57 goto label05;

        if s21 != 73 goto label04;

        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNonStdToken(int,int)>(3, 2);

        return $r16;

     label04:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(s21, "expected digit (0-9) to follow minus sign, for valid numeric value");

     label05:
        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r20 = virtualinvoke $r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r20[0] = 45;

        $c22 = (char) s21;

        r20[1] = $c22;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i23 < $i24 goto label06;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 26;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = 1;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r15;

        return $r15;

     label06:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        s25 = $r2[$i5];

        i26 = 2;

     label07:
        if s25 >= 48 goto label08;

        if s25 != 46 goto label13;

        $i18 = i26 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = $i18;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i20 = $i19 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i20;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r20, i26, s25);

        return $r13;

     label08:
        if s25 <= 57 goto label10;

        if s25 == 101 goto label09;

        if s25 != 69 goto label13;

     label09:
        $i14 = i26 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = $i14;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i16 = $i15 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i16;

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r20, i26, s25);

        return $r8;

     label10:
        $i6 = lengthof r20;

        if i26 < $i6 goto label11;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r20 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label11:
        $i7 = i26;

        i26 = i26 + 1;

        $c8 = (char) s25;

        r20[$i7] = $c8;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i10;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i10 < $i11 goto label12;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 26;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i26);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r5;

        return $r5;

     label12:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $b13 = $r3[$i12];

        s25 = $b13 & 255;

        goto label07;

     label13:
        $i17 = i26 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = $i17;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i26);

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r10);

        return $r11;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startNumberLeadingZero() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        short s0;
        int $i1, i3, i4;
        byte[] $r1;
        byte $b2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r4, $r6, $r7, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3, $r5;
        char[] r8, r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if i3 < $i1 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 24;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r7;

        return $r7;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i4 = i3 + 1;

        $b2 = $r1[i3];

        s0 = $b2 & 255;

        if s0 >= 48 goto label2;

        if s0 != 46 goto label6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = 1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r8 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r8[0] = 48;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r8, 1, s0);

        return $r6;

     label2:
        if s0 <= 57 goto label5;

        if s0 == 101 goto label3;

        if s0 != 69 goto label4;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = 1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r9[0] = 48;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r9, 1, s0);

        return $r4;

     label4:
        if s0 == 93 goto label6;

        if s0 == 125 goto label6;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(s0, "expected digit (0-9), decimal point (.) or exponent indicator (e/E) to follow \'0\'");

        goto label6;

     label5:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberLeadingZeroes()>();

        return $r2;

     label6:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueCompleteInt(int,java.lang.String)>(0, "0");

        return $r10;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberMinus(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0;
        char[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4;
        char $c1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i0 := @parameter0: int;

        if i0 > 48 goto label2;

        if i0 != 48 goto label1;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberLeadingNegZeroes()>();

        return $r3;

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(i0, "expected digit (0-9) to follow minus sign, for valid numeric value");

        goto label4;

     label2:
        if i0 <= 57 goto label4;

        if i0 != 73 goto label3;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNonStdToken(int,int)>(3, 2);

        return $r2;

     label3:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(i0, "expected digit (0-9) to follow minus sign, for valid numeric value");

     label4:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r1 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r1[0] = 45;

        $c1 = (char) i0;

        r1[1] = $c1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = 1;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberIntegralPart(char[],int)>(r1, 2);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberLeadingZeroes() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        short s0;
        int $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i10, $i11;
        byte[] $r1;
        byte $b5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2, $r4, $r6;
        char $c9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r5, $r7, $r8, $r13;
        char[] r9, r10, r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 24;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r8;

        return $r8;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i4;

        $b5 = $r1[$i3];

        s0 = $b5 & 255;

        if s0 >= 48 goto label3;

        if s0 != 46 goto label9;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r9[0] = 48;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = 1;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r9, 1, s0);

        return $r7;

     label3:
        if s0 <= 57 goto label6;

        if s0 == 101 goto label4;

        if s0 != 69 goto label5;

     label4:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r10 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r10[0] = 48;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = 1;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r10, 1, s0);

        return $r5;

     label5:
        if s0 == 93 goto label9;

        if s0 == 125 goto label9;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(s0, "expected digit (0-9), decimal point (.) or exponent indicator (e/E) to follow \'0\'");

        goto label9;

     label6:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_LEADING_ZEROS>;

        $i8 = $i7 & $i6;

        if $i8 != 0 goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportInvalidNumber(java.lang.String)>("Leading zeroes not allowed");

     label7:
        if s0 != 48 goto label8;

        goto label1;

     label8:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r11 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        $c9 = (char) s0;

        r11[0] = $c9;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = 1;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberIntegralPart(char[],int)>(r11, 1);

        return $r3;

     label9:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i11 = $i10 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i11;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueCompleteInt(int,java.lang.String)>(0, "0");

        return $r13;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberLeadingNegZeroes() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        short s0;
        int $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i10, $i11;
        byte[] $r1;
        byte $b5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2, $r4, $r6;
        char $c9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r5, $r7, $r8, $r13;
        char[] r9, r10, r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i2 < $i1 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 25;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r8;

        return $r8;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i4;

        $b5 = $r1[$i3];

        s0 = $b5 & 255;

        if s0 >= 48 goto label3;

        if s0 != 46 goto label9;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r9 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r9[0] = 45;

        r9[1] = 48;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = 1;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r9, 2, s0);

        return $r7;

     label3:
        if s0 <= 57 goto label6;

        if s0 == 101 goto label4;

        if s0 != 69 goto label5;

     label4:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r10 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r10[0] = 45;

        r10[1] = 48;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = 1;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r10, 2, s0);

        return $r5;

     label5:
        if s0 == 93 goto label9;

        if s0 == 125 goto label9;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(s0, "expected digit (0-9), decimal point (.) or exponent indicator (e/E) to follow \'0\'");

        goto label9;

     label6:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_LEADING_ZEROS>;

        $i8 = $i7 & $i6;

        if $i8 != 0 goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportInvalidNumber(java.lang.String)>("Leading zeroes not allowed");

     label7:
        if s0 != 48 goto label8;

        goto label1;

     label8:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r11 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r11[0] = 45;

        $c9 = (char) s0;

        r11[1] = $c9;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = 1;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberIntegralPart(char[],int)>(r11, 2);

        return $r3;

     label9:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i11 = $i10 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i11;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueCompleteInt(int,java.lang.String)>(0, "0");

        return $r13;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishNumberIntegralPart(char[], int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        byte b0, $b3, $b17;
        short s1;
        boolean $z0;
        int $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i18, $i19;
        byte[] $r1;
        char $c8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r2, $r4, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r5, $r6, $r8, $r10;
        char[] r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r11 := @parameter0: char[];

        i16 := @parameter1: int;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _numberNegative>;

        if $z0 == 0 goto label1;

        $b17 = -1;

        goto label2;

     label1:
        $b17 = 0;

     label2:
        b0 = $b17;

     label3:
        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i18 < $i19 goto label4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 26;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i16);

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r10;

        return $r10;

     label4:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $b3 = $r1[$i2];

        s1 = $b3 & 255;

        if s1 >= 48 goto label5;

        if s1 != 46 goto label9;

        $i13 = i16 + b0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = $i13;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i15 = $i14 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i15;

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r11, i16, s1);

        return $r8;

     label5:
        if s1 <= 57 goto label7;

        if s1 == 101 goto label6;

        if s1 != 69 goto label9;

     label6:
        $i9 = i16 + b0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = $i9;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i11;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int)>(r11, i16, s1);

        return $r3;

     label7:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i5;

        $i6 = lengthof r11;

        if i16 < $i6 goto label8;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r11 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label8:
        $i7 = i16;

        i16 = i16 + 1;

        $c8 = (char) s1;

        r11[$i7] = $c8;

        goto label3;

     label9:
        $i12 = i16 + b0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _intLength> = $i12;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i16);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r5);

        return $r6;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startFloat(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i28, i29, i30, $i31, $i32, i34, $i37, $i38;
        char $c2, $c9, $c16, $c27;
        byte[] $r1, $r2, $r3, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4, $r6, $r7, $r9, $r10, $r12, $r14, $r15, $r17, $r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, $r8, $r11, $r16, $r21, $r22;
        char[] r18;
        byte b33, b35;
        short s36;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r18 := @parameter0: char[];

        i28 := @parameter1: int;

        i29 := @parameter2: int;

        i30 = 0;

        if i29 != 46 goto label07;

        $i21 = lengthof r18;

        if i28 < $i21 goto label01;

        $r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r18 = virtualinvoke $r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label01:
        $i22 = i28;

        i28 = i28 + 1;

        r18[$i22] = 46;

     label02:
        $i31 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i32 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i31 < $i32 goto label03;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i28);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 30;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _fractLength> = i30;

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r16;

        return $r16;

     label03:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i24 = $i23 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i24;

        b33 = $r13[$i23];

        if b33 < 48 goto label04;

        if b33 <= 57 goto label05;

     label04:
        i29 = b33 & 255;

        if i30 != 0 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(i29, "Decimal point not followed by a digit");

        goto label07;

     label05:
        $i25 = lengthof r18;

        if i28 < $i25 goto label06;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r18 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label06:
        $i26 = i28;

        i28 = i28 + 1;

        $c27 = (char) b33;

        r18[$i26] = $c27;

        i30 = i30 + 1;

        goto label02;

     label07:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _fractLength> = i30;

        i34 = 0;

        if i29 == 101 goto label08;

        if i29 != 69 goto label18;

     label08:
        $i0 = lengthof r18;

        if i28 < $i0 goto label09;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r18 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label09:
        $i1 = i28;

        i28 = i28 + 1;

        $c2 = (char) i29;

        r18[$i1] = $c2;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i4 < $i3 goto label10;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i28);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 31;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _expLength> = 0;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r11;

        return $r11;

     label10:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i6;

        b35 = $r1[$i5];

        if b35 == 45 goto label11;

        if b35 != 43 goto label14;

     label11:
        $i7 = lengthof r18;

        if i28 < $i7 goto label12;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r18 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label12:
        $i8 = i28;

        i28 = i28 + 1;

        $c9 = (char) b35;

        r18[$i8] = $c9;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i11 < $i10 goto label13;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i28);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 32;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _expLength> = 0;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r8;

        return $r8;

     label13:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i13;

        b35 = $r2[$i12];

     label14:
        if b35 < 48 goto label17;

        if b35 > 57 goto label17;

        i34 = i34 + 1;

        $i14 = lengthof r18;

        if i28 < $i14 goto label15;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r18 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label15:
        $i15 = i28;

        i28 = i28 + 1;

        $c16 = (char) b35;

        r18[$i15] = $c16;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i18 < $i17 goto label16;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i28);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 32;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _expLength> = i34;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r5;

        return $r5;

     label16:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i20 = $i19 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i20;

        b35 = $r3[$i19];

        goto label14;

     label17:
        s36 = b35 & 255;

        if i34 != 0 goto label18;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(s36, "Exponent indicator not followed by a digit");

     label18:
        $i37 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i38 = $i37 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i38;

        $r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i28);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _expLength> = i34;

        $r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        $r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r21);

        return $r22;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishFloatFraction() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r1, $r2, $r4, $r5, $r9, $r13, $r15;
        int $i1, $i2, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i14, $i16, $i17, i18, i19;
        byte[] $r3, $r6;
        byte $b3, $b9;
        char $c4, $c15;
        short $s10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r7, $r8, $r10, $r11, $r14;
        char[] r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _fractLength>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r16 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getBufferWithoutReset()>();

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        i19 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i2;

        $b3 = $r3[$i1];

        if $b3 < 48 goto label3;

        if $b3 > 57 goto label3;

        i18 = i18 + 1;

        $i13 = lengthof r16;

        if i19 < $i13 goto label2;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r16 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label2:
        $i14 = i19;

        i19 = i19 + 1;

        $c15 = (char) $b3;

        r16[$i14] = $c15;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i17 < $i16 goto label1;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i19);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _fractLength> = i18;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        return $r14;

     label3:
        if i18 != 0 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>($b3, "Decimal point not followed by a digit");

     label4:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _fractLength> = i18;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i19);

        if $b3 == 101 goto label5;

        if $b3 != 69 goto label7;

     label5:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $c4 = (char) $b3;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>($c4);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _expLength> = 0;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i6 < $i5 goto label6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 31;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        return $r8;

     label6:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 32;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i8;

        $b9 = $r6[$i7];

        $s10 = $b9 & 255;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishFloatExponent(boolean,int)>(1, $s10);

        return $r7;

     label7:
        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i12 = $i11 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i12;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i19);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _expLength> = 0;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r10);

        return $r11;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishFloatExponent(boolean, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, i14, i15, i16, i17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r1, $r6, $r8, $r9, $r12, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r7, $r11;
        char $c4, $c9;
        byte[] $r5, $r10;
        char[] r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        z0 := @parameter0: boolean;

        i14 := @parameter1: int;

        if z0 == 0 goto label3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 32;

        if i14 == 45 goto label1;

        if i14 != 43 goto label3;

     label1:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $c9 = (char) i14;

        virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>($c9);

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i11 < $i10 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 32;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _expLength> = 0;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        return $r11;

     label2:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i13;

        i14 = $r10[$i12];

     label3:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r13 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getBufferWithoutReset()>();

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        i15 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

        i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _expLength>;

     label4:
        if i14 < 48 goto label7;

        if i14 > 57 goto label7;

        i16 = i16 + 1;

        $i2 = lengthof r13;

        if i15 < $i2 goto label5;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r13 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>();

     label5:
        $i3 = i15;

        i15 = i15 + 1;

        $c4 = (char) i14;

        r13[$i3] = $c4;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i6 < $i5 goto label6;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i15);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _expLength> = i16;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        return $r7;

     label6:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i8;

        i14 = $r5[$i7];

        goto label4;

     label7:
        i17 = i14 & 255;

        if i16 != 0 goto label8;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void reportUnexpectedNumberChar(int,java.lang.String)>(i17, "Exponent indicator not followed by a digit");

     label8:
        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = $i0 - 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i1;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i15);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _expLength> = i16;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r2);

        return $r3;
    }

    private final java.lang.String _fastParseName() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        byte[] r1;
        int[] r2;
        short s0, s17, s20, s23, s26;
        byte $b1, $b3, $b6, $b9, $b12;
        int $i2, $i4, $i5, $i7, $i8, $i10, $i11, $i13, i14, i15, i16, i18, i19, i21, i22, i24, i25;
        java.lang.String $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _icLatin1>;

        i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        i15 = i14 + 1;

        $b1 = r1[i14];

        s0 = $b1 & 255;

        $i2 = r2[s0];

        if $i2 != 0 goto label09;

        i16 = i15 + 1;

        $b3 = r1[i15];

        s17 = $b3 & 255;

        $i4 = r2[s17];

        if $i4 != 0 goto label07;

        $i5 = s0 << 8;

        i18 = $i5 | s17;

        i19 = i16 + 1;

        $b6 = r1[i16];

        s20 = $b6 & 255;

        $i7 = r2[s20];

        if $i7 != 0 goto label05;

        $i8 = i18 << 8;

        i21 = $i8 | s20;

        i22 = i19 + 1;

        $b9 = r1[i19];

        s23 = $b9 & 255;

        $i10 = r2[s23];

        if $i10 != 0 goto label03;

        $i11 = i21 << 8;

        i24 = $i11 | s23;

        i25 = i22 + 1;

        $b12 = r1[i22];

        s26 = $b12 & 255;

        $i13 = r2[s26];

        if $i13 != 0 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quad1> = i24;

        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _parseMediumName(int,int)>(i25, s26);

        return $r7;

     label01:
        if s26 != 34 goto label02;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i25;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int)>(i24, 4);

        return $r6;

     label02:
        return null;

     label03:
        if s23 != 34 goto label04;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i22;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int)>(i21, 3);

        return $r5;

     label04:
        return null;

     label05:
        if s20 != 34 goto label06;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i19;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int)>(i18, 2);

        return $r4;

     label06:
        return null;

     label07:
        if s17 != 34 goto label08;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i16;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int)>(s0, 1);

        return $r3;

     label08:
        return null;

     label09:
        if s0 != 34 goto label10;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i15;

        return "";

     label10:
        return null;
    }

    private final java.lang.String _parseMediumName(int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        byte[] r1;
        int[] r2;
        byte $b0, $b4, $b8, $b12;
        int $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i11, $i13, $i14, i15, i16, i17, i19, i20, i22, i23, i25, i26;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        short s18, s21, s24, s27;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i15 := @parameter0: int;

        i16 := @parameter1: int;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _icLatin1>;

        i17 = i15 + 1;

        $b0 = r1[i15];

        s18 = $b0 & 255;

        $i1 = r2[s18];

        if $i1 != 0 goto label7;

        $i3 = i16 << 8;

        i19 = $i3 | s18;

        i20 = i17 + 1;

        $b4 = r1[i17];

        s21 = $b4 & 255;

        $i5 = r2[s21];

        if $i5 != 0 goto label5;

        $i7 = i19 << 8;

        i22 = $i7 | s21;

        i23 = i20 + 1;

        $b8 = r1[i20];

        s24 = $b8 & 255;

        $i9 = r2[s24];

        if $i9 != 0 goto label3;

        $i11 = i22 << 8;

        i25 = $i11 | s24;

        i26 = i23 + 1;

        $b12 = r1[i23];

        s27 = $b12 & 255;

        $i13 = r2[s27];

        if $i13 != 0 goto label1;

        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _parseMediumName2(int,int,int)>(i26, s27, i25);

        return $r7;

     label1:
        if s27 != 34 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i26;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quad1>;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int,int)>($i14, i25, 4);

        return $r6;

     label2:
        return null;

     label3:
        if s24 != 34 goto label4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i23;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quad1>;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int,int)>($i10, i22, 3);

        return $r5;

     label4:
        return null;

     label5:
        if s21 != 34 goto label6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i20;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quad1>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int,int)>($i6, i19, 2);

        return $r4;

     label6:
        return null;

     label7:
        if s18 != 34 goto label8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i17;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quad1>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int,int)>($i2, i16, 1);

        return $r3;

     label8:
        return null;
    }

    private final java.lang.String _parseMediumName2(int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i2, $i3, $i5, $i6, $i8, $i9, $i11, $i12, $i13, $i14, i15, i16, i17, i19, i20, i22, i23, i25, i26;
        byte[] r1;
        int[] r2;
        byte $b1, $b4, $b7, $b10;
        java.lang.String $r3, $r4, $r5, $r6;
        short s18, s21, s24, s27;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i15 := @parameter0: int;

        i16 := @parameter1: int;

        i0 := @parameter2: int;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _icLatin1>;

        i17 = i15 + 1;

        $b1 = r1[i15];

        s18 = $b1 & 255;

        $i2 = r2[s18];

        if $i2 == 0 goto label2;

        if s18 != 34 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i17;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quad1>;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int,int,int)>($i14, i0, i16, 1);

        return $r6;

     label1:
        return null;

     label2:
        $i3 = i16 << 8;

        i19 = $i3 | s18;

        i20 = i17 + 1;

        $b4 = r1[i17];

        s21 = $b4 & 255;

        $i5 = r2[s21];

        if $i5 == 0 goto label4;

        if s21 != 34 goto label3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i20;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quad1>;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int,int,int)>($i13, i0, i19, 2);

        return $r5;

     label3:
        return null;

     label4:
        $i6 = i19 << 8;

        i22 = $i6 | s21;

        i23 = i20 + 1;

        $b7 = r1[i20];

        s24 = $b7 & 255;

        $i8 = r2[s24];

        if $i8 == 0 goto label6;

        if s24 != 34 goto label5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i23;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quad1>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int,int,int)>($i12, i0, i22, 3);

        return $r4;

     label5:
        return null;

     label6:
        $i9 = i22 << 8;

        i25 = $i9 | s24;

        i26 = i23 + 1;

        $b10 = r1[i23];

        s27 = $b10 & 255;

        if s27 != 34 goto label7;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i26;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quad1>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _findName(int,int,int,int)>($i11, i0, i25, 4);

        return $r3;

     label7:
        return null;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseEscapedName(int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int[] r1, $r3, $r8, $r9, r11;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, $i31, $i32, i33, i34, i35, $i36;
        byte[] $r2;
        byte $b2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4, $r6, $r7, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r5;
        java.lang.String r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i28 := @parameter0: int;

        i29 := @parameter1: int;

        i30 := @parameter2: int;

        r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer>;

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _icLatin1>;

     label01:
        $i31 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i32 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i31 < $i32 goto label02;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength> = i28;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i29;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes> = i30;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 7;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r10;

        return $r10;

     label02:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i1 = $i0 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i1;

        $b2 = $r2[$i0];

        i33 = $b2 & 255;

        $i3 = r1[i33];

        if $i3 != 0 goto label05;

        if i30 >= 4 goto label03;

        i30 = i30 + 1;

        $i27 = i29 << 8;

        i29 = $i27 | i33;

        goto label01;

     label03:
        $i24 = lengthof r11;

        if i28 < $i24 goto label04;

        $i26 = lengthof r11;

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] growArrayBy(int[],int)>(r11, $i26);

        r11 = $r9;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer> = $r9;

     label04:
        $i25 = i28;

        i28 = i28 + 1;

        r11[$i25] = i29;

        i29 = i33;

        i30 = 1;

        goto label01;

     label05:
        if i33 != 34 goto label06;

        goto label16;

     label06:
        if i33 == 92 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(i33, "name");

        goto label08;

     label07:
        i33 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeCharEscape()>();

        if i33 >= 0 goto label08;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorStateAfterSplit> = 7;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength> = i28;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i29;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes> = i30;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r4;

        return $r4;

     label08:
        $i4 = lengthof r11;

        if i28 < $i4 goto label09;

        $i19 = lengthof r11;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] growArrayBy(int[],int)>(r11, $i19);

        r11 = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer> = $r3;

     label09:
        if i33 <= 127 goto label14;

        if i30 < 4 goto label10;

        $i18 = i28;

        i28 = i28 + 1;

        r11[$i18] = i29;

        i29 = 0;

        i30 = 0;

     label10:
        if i33 >= 2048 goto label11;

        $i17 = i29 << 8;

        $i15 = i33 >> 6;

        $i16 = 192 | $i15;

        i29 = $i17 | $i16;

        i30 = i30 + 1;

        goto label13;

     label11:
        $i9 = i29 << 8;

        $i7 = i33 >> 12;

        $i8 = 224 | $i7;

        i34 = $i9 | $i8;

        i35 = i30 + 1;

        if i35 < 4 goto label12;

        $i14 = i28;

        i28 = i28 + 1;

        r11[$i14] = i34;

        i34 = 0;

        i35 = 0;

     label12:
        $i13 = i34 << 8;

        $i10 = i33 >> 6;

        $i11 = $i10 & 63;

        $i12 = 128 | $i11;

        i29 = $i13 | $i12;

        i30 = i35 + 1;

     label13:
        $i36 = i33 & 63;

        i33 = 128 | $i36;

     label14:
        if i30 >= 4 goto label15;

        i30 = i30 + 1;

        $i6 = i29 << 8;

        i29 = $i6 | i33;

        goto label01;

     label15:
        $i5 = i28;

        i28 = i28 + 1;

        r11[$i5] = i29;

        i29 = i33;

        i30 = 1;

        goto label01;

     label16:
        if i30 <= 0 goto label18;

        $i20 = lengthof r11;

        if i28 < $i20 goto label17;

        $i23 = lengthof r11;

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] growArrayBy(int[],int)>(r11, $i23);

        r11 = $r8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer> = $r8;

     label17:
        $i21 = i28;

        i28 = i28 + 1;

        $i22 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _padLastQuad(int,int)>(i29, i30);

        r11[$i21] = $i22;

        goto label19;

     label18:
        if i28 != 0 goto label19;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _fieldComplete(java.lang.String)>("");

        return $r7;

     label19:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        r12 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int[],int)>(r11, i28);

        if r12 != null goto label20;

        r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _addName(int[],int,int)>(r11, i28, i30);

     label20:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _fieldComplete(java.lang.String)>(r12);

        return $r6;
    }

    private org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _handleOddName(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3, $r4, $r5;
        char c11;
        int[] r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 35: goto label1;
            case 39: goto label3;
            case 47: goto label2;
            case 93: goto label4;
            default: goto label5;
        };

     label1:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_YAML_COMMENTS>;

        $i7 = $i6 & $i5;

        if $i7 == 0 goto label5;

        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishHashComment(int)>(4);

        return $r5;

     label2:
        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startSlashComment(int)>(4);

        return $r2;

     label3:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_SINGLE_QUOTES>;

        $i3 = $i2 & $i1;

        if $i3 == 0 goto label5;

        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishAposName(int,int,int)>(0, 0, 0);

        return $r4;

     label4:
        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _closeArrayScope()>();

        return $r1;

     label5:
        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _features>;

        $i9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_UNQUOTED_NAMES>;

        $i10 = $i8 & $i9;

        if $i10 != 0 goto label6;

        c11 = (char) i0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(c11, "was expecting double-quote to start field name");

     label6:
        r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeUtf8JsNames()>();

        $i4 = r6[i0];

        if $i4 == 0 goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportUnexpectedChar(int,java.lang.String)>(i0, "was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name");

     label7:
        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishUnquotedName(int,int,int)>(0, i0, 1);

        return $r3;
    }

    private org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishUnquotedName(int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int[] r1, $r3, $r5, r7;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        byte[] $r2;
        byte $b3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4, $r6;
        short s17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r8;
        java.lang.String r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i14 := @parameter0: int;

        i15 := @parameter1: int;

        i16 := @parameter2: int;

        r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer>;

        r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeUtf8JsNames()>();

     label01:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label02;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength> = i14;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i15;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes> = i16;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 10;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r6;

        return $r6;

     label02:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $b3 = $r2[$i2];

        s17 = $b3 & 255;

        $i4 = r1[s17];

        if $i4 == 0 goto label03;

        goto label07;

     label03:
        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i6;

        if i16 >= 4 goto label04;

        i16 = i16 + 1;

        $i10 = i15 << 8;

        i15 = $i10 | s17;

        goto label06;

     label04:
        $i7 = lengthof r7;

        if i14 < $i7 goto label05;

        $i9 = lengthof r7;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] growArrayBy(int[],int)>(r7, $i9);

        r7 = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer> = $r3;

     label05:
        $i8 = i14;

        i14 = i14 + 1;

        r7[$i8] = i15;

        i15 = s17;

        i16 = 1;

     label06:
        goto label01;

     label07:
        if i16 <= 0 goto label09;

        $i11 = lengthof r7;

        if i14 < $i11 goto label08;

        $i13 = lengthof r7;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] growArrayBy(int[],int)>(r7, $i13);

        r7 = $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer> = $r5;

     label08:
        $i12 = i14;

        i14 = i14 + 1;

        r7[$i12] = i15;

     label09:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int[],int)>(r7, i14);

        if r9 != null goto label10;

        r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _addName(int[],int,int)>(r7, i14, i16);

     label10:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _fieldComplete(java.lang.String)>(r9);

        return $r4;
    }

    private org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishAposName(int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int[] r1, $r3, $r4, $r5, $r10, r12;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, i30, i31, $i32, $i33, $i34, $i35, $i36;
        byte[] $r2;
        byte $b4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6, $r8, $r9, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r7;
        java.lang.String r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i26 := @parameter0: int;

        i27 := @parameter1: int;

        i28 := @parameter2: int;

        r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer>;

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _icLatin1>;

     label01:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label02;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength> = i26;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i27;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes> = i28;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 9;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r11;

        return $r11;

     label02:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i3;

        $b4 = $r2[$i2];

        i29 = $b4 & 255;

        if i29 != 39 goto label03;

        goto label16;

     label03:
        if i29 == 34 goto label12;

        $i9 = r1[i29];

        if $i9 == 0 goto label12;

        if i29 == 92 goto label04;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(i29, "name");

        goto label05;

     label04:
        i29 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeCharEscape()>();

        if i29 >= 0 goto label05;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorStateAfterSplit> = 9;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength> = i26;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i27;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes> = i28;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r6;

        return $r6;

     label05:
        if i29 <= 127 goto label12;

        if i28 < 4 goto label07;

        $i19 = lengthof r12;

        if i26 < $i19 goto label06;

        $i21 = lengthof r12;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] growArrayBy(int[],int)>(r12, $i21);

        r12 = $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer> = $r5;

     label06:
        $i20 = i26;

        i26 = i26 + 1;

        r12[$i20] = i27;

        i27 = 0;

        i28 = 0;

     label07:
        if i29 >= 2048 goto label08;

        $i18 = i27 << 8;

        $i16 = i29 >> 6;

        $i17 = 192 | $i16;

        i27 = $i18 | $i17;

        i28 = i28 + 1;

        goto label11;

     label08:
        $i12 = i27 << 8;

        $i10 = i29 >> 12;

        $i11 = 224 | $i10;

        i30 = $i12 | $i11;

        i31 = i28 + 1;

        if i31 < 4 goto label10;

        $i13 = lengthof r12;

        if i26 < $i13 goto label09;

        $i15 = lengthof r12;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] growArrayBy(int[],int)>(r12, $i15);

        r12 = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer> = $r4;

     label09:
        $i14 = i26;

        i26 = i26 + 1;

        r12[$i14] = i30;

        i30 = 0;

        i31 = 0;

     label10:
        $i32 = i30 << 8;

        $i33 = i29 >> 6;

        $i34 = $i33 & 63;

        $i35 = 128 | $i34;

        i27 = $i32 | $i35;

        i28 = i31 + 1;

     label11:
        $i36 = i29 & 63;

        i29 = 128 | $i36;

     label12:
        if i28 >= 4 goto label13;

        i28 = i28 + 1;

        $i8 = i27 << 8;

        i27 = $i8 | i29;

        goto label15;

     label13:
        $i5 = lengthof r12;

        if i26 < $i5 goto label14;

        $i7 = lengthof r12;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] growArrayBy(int[],int)>(r12, $i7);

        r12 = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer> = $r3;

     label14:
        $i6 = i26;

        i26 = i26 + 1;

        r12[$i6] = i27;

        i27 = i29;

        i28 = 1;

     label15:
        goto label01;

     label16:
        if i28 <= 0 goto label18;

        $i22 = lengthof r12;

        if i26 < $i22 goto label17;

        $i25 = lengthof r12;

        $r10 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] growArrayBy(int[],int)>(r12, $i25);

        r12 = $r10;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer> = $r10;

     label17:
        $i23 = i26;

        i26 = i26 + 1;

        $i24 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _padLastQuad(int,int)>(i27, i28);

        r12[$i23] = $i24;

        goto label19;

     label18:
        if i26 != 0 goto label19;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _fieldComplete(java.lang.String)>("");

        return $r9;

     label19:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols>;

        r13 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int[],int)>(r12, i26);

        if r13 != null goto label20;

        r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: java.lang.String _addName(int[],int,int)>(r12, i26, i28);

     label20:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _fieldComplete(java.lang.String)>(r13);

        return $r8;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishFieldWithEscape() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, $i29, i30, i31;
        int[] $r1, $r2, $r5, $r6, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4, $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quoted32>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quotedDigits>;

        i24 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeSplitEscaped(int,int)>($i1, $i0);

        if i24 >= 0 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 8;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        return $r9;

     label01:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label02;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer>;

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] growArrayBy(int[],int)>($r7, 32);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer> = $r8;

     label02:
        i25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32>;

        i26 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes>;

        if i24 <= 127 goto label07;

        if i26 < 4 goto label03;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer>;

        $i22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength>;

        $i23 = $i22 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength> = $i23;

        $r6[$i22] = i25;

        i25 = 0;

        i26 = 0;

     label03:
        if i24 >= 2048 goto label04;

        $i21 = i25 << 8;

        $i19 = i24 >> 6;

        $i20 = 192 | $i19;

        i25 = $i21 | $i20;

        i26 = i26 + 1;

        goto label06;

     label04:
        $i12 = i25 << 8;

        $i10 = i24 >> 12;

        $i11 = 224 | $i10;

        i27 = $i12 | $i11;

        i28 = i26 + 1;

        if i28 < 4 goto label05;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength>;

        $i18 = $i17 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength> = $i18;

        $r5[$i17] = i27;

        i27 = 0;

        i28 = 0;

     label05:
        $i16 = i27 << 8;

        $i13 = i24 >> 6;

        $i14 = $i13 & 63;

        $i15 = 128 | $i14;

        i25 = $i16 | $i15;

        i26 = i28 + 1;

     label06:
        $i29 = i24 & 63;

        i24 = 128 | $i29;

     label07:
        if i26 >= 4 goto label08;

        i30 = i26 + 1;

        $i9 = i25 << 8;

        i31 = $i9 | i24;

        goto label09;

     label08:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _quadBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength> = $i5;

        $r2[$i4] = i25;

        i31 = i24;

        i30 = 1;

     label09:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorStateAfterSplit>;

        if $i6 != 9 goto label10;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength>;

        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishAposName(int,int,int)>($i8, i31, i30);

        return $r4;

     label10:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quadLength>;

        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _parseEscapedName(int,int,int)>($i7, i31, i30);

        return $r3;
    }

    private int _decodeSplitEscaped(int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i14, i16, i17, i21;
        byte[] $r1, $r2, $r3;
        byte $b9, b18;
        short $s10, s20;
        char $c15, c19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i16 := @parameter0: int;

        i17 := @parameter1: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i1 < $i0 goto label01;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quoted32> = i16;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quotedDigits> = i17;

        return -1;

     label01:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i3;

        b18 = $r1[$i2];

        if i17 != -1 goto label12;

        lookupswitch(b18)
        {
            case 34: goto label07;
            case 47: goto label07;
            case 92: goto label07;
            case 98: goto label02;
            case 102: goto label05;
            case 110: goto label04;
            case 114: goto label06;
            case 116: goto label03;
            case 117: goto label08;
            default: goto label09;
        };

     label02:
        return 8;

     label03:
        return 9;

     label04:
        return 10;

     label05:
        return 12;

     label06:
        return 13;

     label07:
        return b18;

     label08:
        goto label10;

     label09:
        c19 = (char) b18;

        $c15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: char _handleUnrecognizedCharacterEscape(char)>(c19);

        return $c15;

     label10:
        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i12 < $i11 goto label11;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quotedDigits> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quoted32> = 0;

        return -1;

     label11:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i14;

        b18 = $r3[$i13];

        i17 = 0;

     label12:
        s20 = b18 & 255;

     label13:
        i21 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int charToHex(int)>(s20);

        if i21 >= 0 goto label14;

        $s10 = s20 & 255;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportUnexpectedChar(int,java.lang.String)>($s10, "expected a hex-digit for character escape sequence");

     label14:
        $i4 = i16 << 4;

        i16 = $i4 | i21;

        i17 = i17 + 1;

        if i17 != 4 goto label15;

        return i16;

     label15:
        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i6 < $i5 goto label16;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quotedDigits> = i17;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _quoted32> = i16;

        return -1;

     label16:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i8;

        $b9 = $r2[$i7];

        s20 = $b9 & 255;

        goto label13;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        char[] r1;
        int[] r2;
        int i0, $i2, $i3, $i4, $i6, $i7, $i9, i10, i11;
        byte[] r3;
        short s1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4, $r5, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6, $r8, $r9;
        byte $b5;
        char $c8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        i11 = 0;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r1 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _icUTF8>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        $i2 = lengthof r1;

        $i3 = i10 + $i2;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i3);

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

     label1:
        if i10 >= i0 goto label3;

        $b5 = r3[i10];

        s1 = $b5 & 255;

        $i6 = r2[s1];

        if $i6 == 0 goto label2;

        if s1 != 34 goto label3;

        $i9 = i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i9;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i11);

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r8);

        return $r9;

     label2:
        i10 = i10 + 1;

        $i7 = i11;

        i11 = i11 + 1;

        $c8 = (char) s1;

        r1[$i7] = $c8;

        goto label1;

     label3:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i11);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i10;

        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishRegularString()>();

        return $r6;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishRegularString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int[] r1;
        byte[] r2, $r5, $r6, $r7, $r10, $r11, $r12;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i13, $i17, $i18, $i19, $i21, $i22, $i23, $i27, $i29, $i30, $i31, i32, i33, $i34, i35, i36, i37, i38, i39, $i40;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3, $r4, $r8, $r9, $r13, $r14, $r15, $r18, $r21, $r22;
        byte $b9, $b14, $b15, $b16, $b25, $b26, $b28;
        char $c12, $c20, $c24;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r16, $r19, $r20, $r23;
        char[] r24;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _icUTF8>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r24 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getBufferWithoutReset()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        i32 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

        i33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        i0 = $i2 - 5;

     label01:
        $i34 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if i33 < $i34 goto label02;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i33;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 40;

        $r22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i32);

        $r23 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r23;

        return $r23;

     label02:
        $i3 = lengthof r24;

        if i32 < $i3 goto label03;

        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r24 = virtualinvoke $r21.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i32 = 0;

     label03:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        $i4 = lengthof r24;

        $i5 = $i4 - i32;

        $i6 = i33 + $i5;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

     label04:
        if i33 >= i1 goto label06;

        $i8 = i33;

        i33 = i33 + 1;

        $b9 = r2[$i8];

        i35 = $b9 & 255;

        $i10 = r1[i35];

        if $i10 == 0 goto label05;

        goto label07;

     label05:
        $i11 = i32;

        i32 = i32 + 1;

        $c12 = (char) i35;

        r24[$i11] = $c12;

        goto label04;

     label06:
        goto label01;

     label07:
        if i35 != 34 goto label08;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i33;

        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i32);

        $r19 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        $r20 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r19);

        return $r20;

     label08:
        if i33 < i0 goto label12;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i33;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i32);

        $i31 = i35;

        $i30 = r1[i35];

        $i29 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if i33 >= $i29 goto label09;

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _decodeSplitMultiByte(int,int,boolean)>($i31, $i30, $z1);

        if $z0 != 0 goto label11;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorStateAfterSplit> = 40;

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r16;

        return $r16;

     label11:
        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r24 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getBufferWithoutReset()>();

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        i32 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

        i33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        goto label01;

     label12:
        $i13 = r1[i35];

        tableswitch($i13)
        {
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label15;
            case 4: goto label16;
            default: goto label18;
        };

     label13:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i33;

        i35 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeFastCharEscape()>();

        i33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        goto label20;

     label14:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i27 = i33;

        i33 = i33 + 1;

        $b28 = $r12[$i27];

        i35 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeUTF8_2(int,int)>(i35, $b28);

        goto label20;

     label15:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i36 = i33 + 1;

        $b26 = $r10[i33];

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i33 = i36 + 1;

        $b25 = $r11[i36];

        i35 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeUTF8_3(int,int,int)>(i35, $b26, $b25);

        goto label20;

     label16:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i37 = i33 + 1;

        $b16 = $r5[i33];

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i38 = i37 + 1;

        $b15 = $r6[i37];

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i33 = i38 + 1;

        $b14 = $r7[i38];

        i39 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeUTF8_4(int,int,int,int)>(i35, $b16, $b15, $b14);

        $i17 = i32;

        i32 = i32 + 1;

        $i18 = i39 >> 10;

        $i19 = 55296 | $i18;

        $c20 = (char) $i19;

        r24[$i17] = $c20;

        $i21 = lengthof r24;

        if i32 < $i21 goto label17;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r24 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i32 = 0;

     label17:
        $i22 = i39 & 1023;

        i35 = 56320 | $i22;

        goto label20;

     label18:
        if i35 >= 32 goto label19;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(i35, "string value");

        goto label20;

     label19:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidChar(int)>(i35);

     label20:
        $i40 = lengthof r24;

        if i32 < $i40 goto label21;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r24 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i32 = 0;

     label21:
        $i23 = i32;

        i32 = i32 + 1;

        $c24 = (char) i35;

        r24[$i23] = $c24;

        goto label01;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _startAposString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        char[] r1;
        int[] r2;
        int i0, $i2, $i3, $i4, $i6, $i7, $i9, i10, i11;
        byte[] r3;
        short s1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4, $r5, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6, $r8, $r9;
        byte $b5;
        char $c8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        i11 = 0;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r1 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _icUTF8>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        $i2 = lengthof r1;

        $i3 = i10 + $i2;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i3);

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

     label1:
        if i10 >= i0 goto label4;

        $b5 = r3[i10];

        s1 = $b5 & 255;

        if s1 != 39 goto label2;

        $i9 = i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i9;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i11);

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r8);

        return $r9;

     label2:
        $i6 = r2[s1];

        if $i6 == 0 goto label3;

        goto label4;

     label3:
        i10 = i10 + 1;

        $i7 = i11;

        i11 = i11 + 1;

        $c8 = (char) s1;

        r1[$i7] = $c8;

        goto label1;

     label4:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i11);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i10;

        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishAposString()>();

        return $r6;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _finishAposString() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int[] r1;
        byte[] r2, $r8, $r9, $r10, $r13, $r14, $r15;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i13, $i17, $i18, $i19, $i21, $i22, $i23, $i27, $i29, $i30, $i31, i32, i33, $i34, i35, i36, i37, i38, i39, $i40;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r3, $r4, $r5, $r11, $r12, $r16, $r17, $r18, $r21, $r22;
        byte $b9, $b14, $b15, $b16, $b25, $b26, $b28;
        char $c12, $c20, $c24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6, $r7, $r19, $r23;
        boolean $z0, $z1;
        char[] r24;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _icUTF8>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r24 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getBufferWithoutReset()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        i32 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

        i33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        i0 = $i2 - 5;

     label01:
        $i34 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if i33 < $i34 goto label02;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i33;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 45;

        $r22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i32);

        $r23 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r23;

        return $r23;

     label02:
        $i3 = lengthof r24;

        if i32 < $i3 goto label03;

        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r24 = virtualinvoke $r21.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i32 = 0;

     label03:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        $i4 = lengthof r24;

        $i5 = $i4 - i32;

        $i6 = i33 + $i5;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

     label04:
        if i33 >= i1 goto label07;

        $i8 = i33;

        i33 = i33 + 1;

        $b9 = r2[$i8];

        i35 = $b9 & 255;

        $i10 = r1[i35];

        if $i10 == 0 goto label05;

        if i35 == 34 goto label05;

        goto label08;

     label05:
        if i35 != 39 goto label06;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i33;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i32);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _valueComplete(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r6);

        return $r7;

     label06:
        $i11 = i32;

        i32 = i32 + 1;

        $c12 = (char) i35;

        r24[$i11] = $c12;

        goto label04;

     label07:
        goto label01;

     label08:
        if i33 < i0 goto label12;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i33;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        virtualinvoke $r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>(i32);

        $i31 = i35;

        $i30 = r1[i35];

        $i29 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if i33 >= $i29 goto label09;

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _decodeSplitMultiByte(int,int,boolean)>($i31, $i30, $z1);

        if $z0 != 0 goto label11;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorStateAfterSplit> = 45;

        $r19 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r19;

        return $r19;

     label11:
        $r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r24 = virtualinvoke $r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] getBufferWithoutReset()>();

        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        i32 = virtualinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>();

        i33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        goto label01;

     label12:
        $i13 = r1[i35];

        tableswitch($i13)
        {
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label15;
            case 4: goto label16;
            default: goto label18;
        };

     label13:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = i33;

        i35 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeFastCharEscape()>();

        i33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        goto label20;

     label14:
        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i27 = i33;

        i33 = i33 + 1;

        $b28 = $r15[$i27];

        i35 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeUTF8_2(int,int)>(i35, $b28);

        goto label20;

     label15:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i36 = i33 + 1;

        $b26 = $r13[i33];

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i33 = i36 + 1;

        $b25 = $r14[i36];

        i35 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeUTF8_3(int,int,int)>(i35, $b26, $b25);

        goto label20;

     label16:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i37 = i33 + 1;

        $b16 = $r8[i33];

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i38 = i37 + 1;

        $b15 = $r9[i37];

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        i33 = i38 + 1;

        $b14 = $r10[i38];

        i39 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeUTF8_4(int,int,int,int)>(i35, $b16, $b15, $b14);

        $i17 = i32;

        i32 = i32 + 1;

        $i18 = i39 >> 10;

        $i19 = 55296 | $i18;

        $c20 = (char) $i19;

        r24[$i17] = $c20;

        $i21 = lengthof r24;

        if i32 < $i21 goto label17;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r24 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i32 = 0;

     label17:
        $i22 = i39 & 1023;

        i35 = 56320 | $i22;

        goto label20;

     label18:
        if i35 >= 32 goto label19;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(i35, "string value");

        goto label20;

     label19:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidChar(int)>(i35);

     label20:
        $i40 = lengthof r24;

        if i32 < $i40 goto label21;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        r24 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>();

        i32 = 0;

     label21:
        $i23 = i32;

        i32 = i32 + 1;

        $c24 = (char) i35;

        r24[$i23] = $c24;

        goto label01;
    }

    private final boolean _decodeSplitMultiByte(int, int, boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i1, $i2, $i4, $i5, $i7, $i8, i13, i14, i15, i16, i17;
        boolean z0, $z1, $z2;
        byte[] $r1, $r2, $r3;
        byte $b3, $b6, $b9;
        char $c10, $c11, $c12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r4, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i13 := @parameter0: int;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label03;
            case 3: goto label05;
            case 4: goto label07;
            default: goto label09;
        };

     label01:
        i14 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeSplitEscaped(int,int)>(0, -1);

        if i14 >= 0 goto label02;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 41;

        return 0;

     label02:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $c11 = (char) i14;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>($c11);

        return 1;

     label03:
        if z0 == 0 goto label04;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i8;

        $b9 = $r3[$i7];

        i15 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeUTF8_2(int,int)>(i13, $b9);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $c10 = (char) i15;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>($c10);

        return 1;

     label04:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 42;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i13;

        return 0;

     label05:
        i16 = i13 & 15;

        if z0 == 0 goto label06;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i5;

        $b6 = $r2[$i4];

        $z2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _decodeSplitUTF8_3(int,int,int)>(i16, 1, $b6);

        return $z2;

     label06:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 43;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i16;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes> = 1;

        return 0;

     label07:
        i17 = i13 & 7;

        if z0 == 0 goto label08;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i2;

        $b3 = $r1[$i1];

        $z1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: boolean _decodeSplitUTF8_4(int,int,int)>(i17, 1, $b3);

        return $z1;

     label08:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i17;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes> = 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 44;

        return 0;

     label09:
        if i13 >= 32 goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _throwUnquotedSpace(int,java.lang.String)>(i13, "string value");

        goto label11;

     label10:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidChar(int)>(i13);

     label11:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $c12 = (char) i13;

        virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>($c12);

        return 1;
    }

    private final boolean _decodeSplitUTF8_3(int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        char $c5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r1;
        byte[] $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i17 := @parameter0: int;

        i0 := @parameter1: int;

        i18 := @parameter2: int;

        if i0 != 1 goto label3;

        $i8 = i18 & 192;

        if $i8 == 128 goto label1;

        $i16 = i18 & 255;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidOther(int,int)>($i16, $i15);

     label1:
        $i10 = i17 << 6;

        $i9 = i18 & 63;

        i17 = $i10 | $i9;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i12 < $i11 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 43;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i17;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes> = 2;

        return 0;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i14;

        i18 = $r2[$i13];

     label3:
        $i1 = i18 & 192;

        if $i1 == 128 goto label4;

        $i7 = i18 & 255;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidOther(int,int)>($i7, $i6);

     label4:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i3 = i17 << 6;

        $i2 = i18 & 63;

        $i4 = $i3 | $i2;

        $c5 = (char) $i4;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>($c5);

        return 1;
    }

    private final boolean _decodeSplitUTF8_4(int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30, i31, i32, i33;
        char $c6, $c8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r1, $r2;
        byte[] $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i29 := @parameter0: int;

        i30 := @parameter1: int;

        i31 := @parameter2: int;

        if i30 != 1 goto label3;

        $i20 = i31 & 192;

        if $i20 == 128 goto label1;

        $i28 = i31 & 255;

        $i27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidOther(int,int)>($i28, $i27);

     label1:
        $i22 = i29 << 6;

        $i21 = i31 & 63;

        i29 = $i22 | $i21;

        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i24 < $i23 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 44;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i29;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes> = 2;

        return 0;

     label2:
        i30 = 2;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i26 = $i25 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i26;

        i31 = $r4[$i25];

     label3:
        if i30 != 2 goto label6;

        $i11 = i31 & 192;

        if $i11 == 128 goto label4;

        $i19 = i31 & 255;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidOther(int,int)>($i19, $i18);

     label4:
        $i13 = i29 << 6;

        $i12 = i31 & 63;

        i29 = $i13 | $i12;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        if $i15 < $i14 goto label5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _minorState> = 44;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pending32> = i29;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _pendingBytes> = 3;

        return 0;

     label5:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i17 = $i16 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i17;

        i31 = $r3[$i16];

     label6:
        $i0 = i31 & 192;

        if $i0 == 128 goto label7;

        $i10 = i31 & 255;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidOther(int,int)>($i10, $i9);

     label7:
        $i2 = i29 << 6;

        $i1 = i31 & 63;

        $i3 = $i2 | $i1;

        i32 = $i3 - 65536;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $i4 = i32 >> 10;

        $i5 = 55296 | $i4;

        $c6 = (char) $i5;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>($c6);

        $i7 = i32 & 1023;

        i33 = 56320 | $i7;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer _textBuffer>;

        $c8 = (char) i33;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char)>($c8);

        return 1;
    }

    private final int _decodeCharEscape() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputEnd>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        i0 = $i2 - $i1;

        if i0 >= 5 goto label1;

        $i4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeSplitEscaped(int,int)>(0, -1);

        return $i4;

     label1:
        $i3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _decodeFastCharEscape()>();

        return $i3;
    }

    private final int _decodeFastCharEscape() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        byte b0, b18;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i19, i21, i22, i23, i24, i25;
        byte[] $r1, $r2, $r3, $r4, $r5;
        char $c15, $c16, c17;
        short $s26;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i2;

        b0 = $r1[$i1];

        lookupswitch(b0)
        {
            case 34: goto label06;
            case 47: goto label06;
            case 92: goto label06;
            case 98: goto label01;
            case 102: goto label04;
            case 110: goto label03;
            case 114: goto label05;
            case 116: goto label02;
            case 117: goto label07;
            default: goto label08;
        };

     label01:
        return 8;

     label02:
        return 9;

     label03:
        return 10;

     label04:
        return 12;

     label05:
        return 13;

     label06:
        $c15 = (char) b0;

        return $c15;

     label07:
        goto label09;

     label08:
        c17 = (char) b0;

        $c16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: char _handleUnrecognizedCharacterEscape(char)>(c17);

        return $c16;

     label09:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i4;

        b18 = $r2[$i3];

        i19 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int charToHex(int)>(b18);

        if i19 < 0 goto label10;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i6;

        b18 = $r3[$i5];

        i21 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int charToHex(int)>(b18);

        if i21 < 0 goto label10;

        $i7 = i19 << 4;

        i22 = $i7 | i21;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i9 = $i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i9;

        b18 = $r4[$i8];

        i23 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int charToHex(int)>(b18);

        if i23 < 0 goto label10;

        $i10 = i22 << 4;

        i24 = $i10 | i23;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: byte[] _inputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr> = $i12;

        b18 = $r5[$i11];

        i25 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int charToHex(int)>(b18);

        if i25 < 0 goto label10;

        $i13 = i24 << 4;

        $i14 = $i13 | i25;

        return $i14;

     label10:
        $s26 = b18 & 255;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportUnexpectedChar(int,java.lang.String)>($s26, "expected a hex-digit for character escape sequence");

        return -1;
    }

    private final int _decodeUTF8_2(int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 & 192;

        if $i2 == 128 goto label1;

        $i8 = i1 & 255;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidOther(int,int)>($i8, $i7);

     label1:
        $i3 = i0 & 31;

        $i5 = $i3 << 6;

        $i4 = i1 & 63;

        $i6 = $i5 | $i4;

        return $i6;
    }

    private final int _decodeUTF8_3(int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i13 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i14 = i13 & 15;

        $i2 = i0 & 192;

        if $i2 == 128 goto label1;

        $i12 = i0 & 255;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidOther(int,int)>($i12, $i11);

     label1:
        $i4 = i14 << 6;

        $i3 = i0 & 63;

        i15 = $i4 | $i3;

        $i5 = i1 & 192;

        if $i5 == 128 goto label2;

        $i10 = i1 & 255;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidOther(int,int)>($i10, $i9);

     label2:
        $i7 = i15 << 6;

        $i6 = i1 & 63;

        $i8 = $i7 | $i6;

        return $i8;
    }

    private final int _decodeUTF8_4(int, int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        i21 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = i0 & 192;

        if $i3 == 128 goto label1;

        $i20 = i0 & 255;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidOther(int,int)>($i20, $i19);

     label1:
        $i4 = i21 & 7;

        $i6 = $i4 << 6;

        $i5 = i0 & 63;

        i22 = $i6 | $i5;

        $i7 = i1 & 192;

        if $i7 == 128 goto label2;

        $i18 = i1 & 255;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidOther(int,int)>($i18, $i17);

     label2:
        $i9 = i22 << 6;

        $i8 = i1 & 63;

        i23 = $i9 | $i8;

        $i10 = i2 & 192;

        if $i10 == 128 goto label3;

        $i16 = i2 & 255;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int _inputPtr>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void _reportInvalidOther(int,int)>($i16, $i15);

     label3:
        $i12 = i23 << 6;

        $i11 = i2 & 63;

        $i13 = $i12 | $i11;

        $i14 = $i13 - 65536;

        return $i14;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.async.NonBlockingInputFeeder getNonBlockingInputFeeder()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.async.ByteArrayFeeder $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.async.ByteArrayFeeder getNonBlockingInputFeeder()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature $r0, $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r7, $r8;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_TRAILING_COMMA>;

        $i0 = virtualinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_TRAILING_COMMA> = $i0;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS>;

        $i1 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_LEADING_ZEROS> = $i1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_MISSING_VALUES>;

        $i2 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_MISSING> = $i2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_SINGLE_QUOTES>;

        $i3 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_SINGLE_QUOTES> = $i3;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES>;

        $i4 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_UNQUOTED_NAMES> = $i4;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_COMMENTS>;

        $i5 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_JAVA_COMMENTS> = $i5;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature ALLOW_YAML_COMMENTS>;

        $i6 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int FEAT_MASK_ALLOW_YAML_COMMENTS> = $i6;

        $r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeUtf8()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _icUTF8> = $r7;

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeLatin1()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: int[] _icLatin1> = $r8;

        return;
    }
}
