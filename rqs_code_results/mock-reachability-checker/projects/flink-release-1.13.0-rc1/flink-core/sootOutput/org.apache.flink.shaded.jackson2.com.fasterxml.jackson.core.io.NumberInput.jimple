public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput extends java.lang.Object
{
    public static final java.lang.String NASTY_SMALL_DOUBLE;
    static final long L_BILLION;
    static final java.lang.String MIN_LONG_STR_NO_SIGN;
    static final java.lang.String MAX_LONG_STR;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int parseInt(char[], int, int)
    {
        char[] r0;
        int i0, $i1, $i2, $i4, $i6, $i7, $i8, $i10, $i11, i12, i13, $i14, $i16, $i17, $i18, $i20, $i21, $i22, $i24, $i25, $i26, $i28, $i29, $i30, $i32, $i33, $i35, $i36;
        char $c3, $c5, $c9, $c15, $c19, $c23, $c27, $c31, $c34;

        r0 := @parameter0: char[];

        i12 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = i12 + i0;

        $i2 = $i1 - 1;

        $c3 = r0[$i2];

        i13 = $c3 - 48;

        tableswitch(i0)
        {
            case 2: goto label8;
            case 3: goto label7;
            case 4: goto label6;
            case 5: goto label5;
            case 6: goto label4;
            case 7: goto label3;
            case 8: goto label2;
            case 9: goto label1;
            default: goto label9;
        };

     label1:
        $i4 = i12;

        i12 = i12 + 1;

        $c5 = r0[$i4];

        $i6 = $c5 - 48;

        $i7 = $i6 * 100000000;

        i13 = i13 + $i7;

     label2:
        $i8 = i12;

        i12 = i12 + 1;

        $c9 = r0[$i8];

        $i10 = $c9 - 48;

        $i11 = $i10 * 10000000;

        i13 = i13 + $i11;

     label3:
        $i14 = i12;

        i12 = i12 + 1;

        $c15 = r0[$i14];

        $i16 = $c15 - 48;

        $i17 = $i16 * 1000000;

        i13 = i13 + $i17;

     label4:
        $i18 = i12;

        i12 = i12 + 1;

        $c19 = r0[$i18];

        $i20 = $c19 - 48;

        $i21 = $i20 * 100000;

        i13 = i13 + $i21;

     label5:
        $i22 = i12;

        i12 = i12 + 1;

        $c23 = r0[$i22];

        $i24 = $c23 - 48;

        $i25 = $i24 * 10000;

        i13 = i13 + $i25;

     label6:
        $i26 = i12;

        i12 = i12 + 1;

        $c27 = r0[$i26];

        $i28 = $c27 - 48;

        $i29 = $i28 * 1000;

        i13 = i13 + $i29;

     label7:
        $i30 = i12;

        i12 = i12 + 1;

        $c31 = r0[$i30];

        $i32 = $c31 - 48;

        $i33 = $i32 * 100;

        i13 = i13 + $i33;

     label8:
        $c34 = r0[i12];

        $i35 = $c34 - 48;

        $i36 = $i35 * 10;

        i13 = i13 + $i36;

     label9:
        return i13;
    }

    public static int parseInt(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i16, i17, i18, i20, $i23;
        boolean z0, $z1;
        char c15, c19, c21, c22;

        r0 := @parameter0: java.lang.String;

        c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if c15 != 45 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        i16 = 1;

        if $z1 == 0 goto label05;

        if i0 == 1 goto label03;

        if i0 <= 10 goto label04;

     label03:
        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

        return $i13;

     label04:
        i16 = 1 + 1;

        c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        goto label06;

     label05:
        if i0 <= 9 goto label06;

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

        return $i12;

     label06:
        if c15 > 57 goto label07;

        if c15 >= 48 goto label08;

     label07:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

        return $i1;

     label08:
        i17 = c15 - 48;

        if i16 >= i0 goto label16;

        i18 = i16 + 1;

        c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16);

        if c19 > 57 goto label09;

        if c19 >= 48 goto label10;

     label09:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

        return $i2;

     label10:
        $i4 = i17 * 10;

        $i3 = c19 - 48;

        i17 = $i4 + $i3;

        if i18 >= i0 goto label16;

        i20 = i18 + 1;

        c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i18);

        if c21 > 57 goto label11;

        if c21 >= 48 goto label12;

     label11:
        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

        return $i5;

     label12:
        $i7 = i17 * 10;

        $i6 = c21 - 48;

        i17 = $i7 + $i6;

        if i20 >= i0 goto label16;

     label13:
        $i8 = i20;

        i20 = i20 + 1;

        c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i8);

        if c22 > 57 goto label14;

        if c22 >= 48 goto label15;

     label14:
        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

        return $i9;

     label15:
        $i11 = i17 * 10;

        $i10 = c22 - 48;

        i17 = $i11 + $i10;

        if i20 < i0 goto label13;

     label16:
        if z0 == 0 goto label17;

        $i23 = neg i17;

        goto label18;

     label17:
        $i23 = i17;

     label18:
        return $i23;
    }

    public static long parseLong(char[], int, int)
    {
        char[] r0;
        int i0, i1, i2, $i4, $i6, $i7;
        long l3, $l5, $l8, $l9;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i1 - 9;

        $i4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: int parseInt(char[],int,int)>(r0, i0, i2);

        $l5 = (long) $i4;

        l3 = $l5 * 1000000000L;

        $i6 = i0 + i2;

        $i7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: int parseInt(char[],int,int)>(r0, $i6, 9);

        $l8 = (long) $i7;

        $l9 = l3 + $l8;

        return $l9;
    }

    public static long parseLong(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i2;
        long $l1, $l3;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 > 9 goto label1;

        $i2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(r0);

        $l3 = (long) $i2;

        return $l3;

     label1:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0);

        return $l1;
    }

    public static boolean inLongRange(char[], int, int, boolean)
    {
        char[] r0;
        int i0, i1, i2, i3, $i4, i7;
        boolean z0, $z1;
        java.lang.String r1, $r2;
        char $c5, $c6;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN>;

        goto label2;

     label1:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.lang.String MAX_LONG_STR>;

     label2:
        r1 = $r2;

        i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i1 >= i2 goto label3;

        return 1;

     label3:
        if i1 <= i2 goto label4;

        return 0;

     label4:
        i7 = 0;

     label5:
        if i7 >= i2 goto label9;

        $i4 = i0 + i7;

        $c5 = r0[$i4];

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        i3 = $c5 - $c6;

        if i3 == 0 goto label8;

        if i3 >= 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;

     label8:
        i7 = i7 + 1;

        goto label5;

     label9:
        return 1;
    }

    public static boolean inLongRange(java.lang.String, boolean)
    {
        java.lang.String r0, r1, $r2;
        boolean z0, $z1;
        int i0, i1, i2, i5;
        char $c3, $c4;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN>;

        goto label2;

     label1:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.lang.String MAX_LONG_STR>;

     label2:
        r1 = $r2;

        i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= i0 goto label3;

        return 1;

     label3:
        if i1 <= i0 goto label4;

        return 0;

     label4:
        i5 = 0;

     label5:
        if i5 >= i0 goto label9;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        i2 = $c3 - $c4;

        if i2 == 0 goto label8;

        if i2 >= 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;

     label8:
        i5 = i5 + 1;

        goto label5;

     label9:
        return 1;
    }

    public static int parseAsInt(java.lang.String, int)
    {
        int i0, $i2, $i3, i4, i5;
        char c1, c6;
        double $d0;
        java.lang.NumberFormatException $r1, $r2;
        java.lang.String r3, r4;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r3 != null goto label01;

        return i0;

     label01:
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        i4 = virtualinvoke r4.<java.lang.String: int length()>();

        if i4 != 0 goto label02;

        return i0;

     label02:
        i5 = 0;

        c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        if c1 != 43 goto label03;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(1);

        i4 = virtualinvoke r4.<java.lang.String: int length()>();

        goto label04;

     label03:
        if c1 != 45 goto label04;

        i5 = 1;

     label04:
        if i5 >= i4 goto label09;

        c6 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i5);

        if c6 > 57 goto label05;

        if c6 >= 48 goto label08;

     label05:
        $d0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String)>(r4);

        $i3 = (int) $d0;

     label06:
        return $i3;

     label07:
        $r2 := @caughtexception;

        return i0;

     label08:
        i5 = i5 + 1;

        goto label04;

     label09:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

     label10:
        return $i2;

     label11:
        $r1 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }

    public static long parseAsLong(java.lang.String, long)
    {
        long l0, $l2, $l3;
        char c1, c6;
        double $d0;
        java.lang.NumberFormatException $r1, $r2;
        java.lang.String r3, r4;
        int i4, i5;

        r3 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        if r3 != null goto label01;

        return l0;

     label01:
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        i4 = virtualinvoke r4.<java.lang.String: int length()>();

        if i4 != 0 goto label02;

        return l0;

     label02:
        i5 = 0;

        c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        if c1 != 43 goto label03;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(1);

        i4 = virtualinvoke r4.<java.lang.String: int length()>();

        goto label04;

     label03:
        if c1 != 45 goto label04;

        i5 = 1;

     label04:
        if i5 >= i4 goto label09;

        c6 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i5);

        if c6 > 57 goto label05;

        if c6 >= 48 goto label08;

     label05:
        $d0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String)>(r4);

        $l3 = (long) $d0;

     label06:
        return $l3;

     label07:
        $r2 := @caughtexception;

        return l0;

     label08:
        i5 = i5 + 1;

        goto label04;

     label09:
        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r4);

     label10:
        return $l2;

     label11:
        $r1 := @caughtexception;

        return l0;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }

    public static double parseAsDouble(java.lang.String, double)
    {
        double d0, $d1;
        int i0;
        java.lang.NumberFormatException $r1;
        java.lang.String r2, r3;

        r2 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        if r2 != null goto label1;

        return d0;

     label1:
        r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if i0 != 0 goto label2;

        return d0;

     label2:
        $d1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String)>(r3);

     label3:
        return $d1;

     label4:
        $r1 := @caughtexception;

        return d0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public static double parseDouble(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String r0, $r1;
        boolean $z0;
        double $d0;

        r0 := @parameter0: java.lang.String;

        $r1 = "2.2250738585072012e-308";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return 4.9E-324;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r0);

        return $d0;
    }

    public static java.math.BigDecimal parseBigDecimal(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String r0;
        java.math.BigDecimal $r2;
        java.lang.NumberFormatException $r3, $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = new java.math.BigDecimal;

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.lang.NumberFormatException _badBD(java.lang.String)>(r0);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.math.BigDecimal parseBigDecimal(char[]) throws java.lang.NumberFormatException
    {
        char[] r0;
        int $i0;
        java.math.BigDecimal $r1;

        r0 := @parameter0: char[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.math.BigDecimal parseBigDecimal(char[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static java.math.BigDecimal parseBigDecimal(char[], int, int) throws java.lang.NumberFormatException
    {
        char[] r0;
        int i0, i1;
        java.math.BigDecimal $r2;
        java.lang.NumberFormatException $r3, $r5;
        java.lang.String $r4;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r2 = new java.math.BigDecimal;

        specialinvoke $r2.<java.math.BigDecimal: void <init>(char[],int,int)>(r0, i0, i1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r0, i0, i1);

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.lang.NumberFormatException _badBD(java.lang.String)>($r4);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static java.lang.NumberFormatException _badBD(java.lang.String)
    {
        java.lang.String r0, $r6;
        java.lang.NumberFormatException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.NumberFormatException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value \"");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" can not be represented as BigDecimal");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r6);

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r1, $r2;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: long L_BILLION> = 1000000000L;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.lang.String NASTY_SMALL_DOUBLE> = "2.2250738585072012e-308";

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(-9223372036854775808L);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN> = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(9223372036854775807L);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.lang.String MAX_LONG_STR> = $r2;

        return;
    }
}
