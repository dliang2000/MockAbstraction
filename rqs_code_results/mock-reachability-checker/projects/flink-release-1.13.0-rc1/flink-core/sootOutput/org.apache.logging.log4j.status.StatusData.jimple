public class org.apache.logging.log4j.status.StatusData extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final long timestamp;
    private final java.lang.StackTraceElement caller;
    private final org.apache.logging.log4j.Level level;
    private final org.apache.logging.log4j.message.Message msg;
    private java.lang.String threadName;
    private final java.lang.Throwable throwable;

    public void <init>(java.lang.StackTraceElement, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable, java.lang.String)
    {
        org.apache.logging.log4j.status.StatusData r0;
        java.lang.StackTraceElement r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.message.Message r3;
        java.lang.Throwable r4;
        java.lang.String r5;
        long $l0;

        r0 := @this: org.apache.logging.log4j.status.StatusData;

        r1 := @parameter0: java.lang.StackTraceElement;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.message.Message;

        r4 := @parameter3: java.lang.Throwable;

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.apache.logging.log4j.status.StatusData: long timestamp> = $l0;

        r0.<org.apache.logging.log4j.status.StatusData: java.lang.StackTraceElement caller> = r1;

        r0.<org.apache.logging.log4j.status.StatusData: org.apache.logging.log4j.Level level> = r2;

        r0.<org.apache.logging.log4j.status.StatusData: org.apache.logging.log4j.message.Message msg> = r3;

        r0.<org.apache.logging.log4j.status.StatusData: java.lang.Throwable throwable> = r4;

        r0.<org.apache.logging.log4j.status.StatusData: java.lang.String threadName> = r5;

        return;
    }

    public long getTimestamp()
    {
        org.apache.logging.log4j.status.StatusData r0;
        long $l0;

        r0 := @this: org.apache.logging.log4j.status.StatusData;

        $l0 = r0.<org.apache.logging.log4j.status.StatusData: long timestamp>;

        return $l0;
    }

    public java.lang.StackTraceElement getStackTraceElement()
    {
        org.apache.logging.log4j.status.StatusData r0;
        java.lang.StackTraceElement $r1;

        r0 := @this: org.apache.logging.log4j.status.StatusData;

        $r1 = r0.<org.apache.logging.log4j.status.StatusData: java.lang.StackTraceElement caller>;

        return $r1;
    }

    public org.apache.logging.log4j.Level getLevel()
    {
        org.apache.logging.log4j.status.StatusData r0;
        org.apache.logging.log4j.Level $r1;

        r0 := @this: org.apache.logging.log4j.status.StatusData;

        $r1 = r0.<org.apache.logging.log4j.status.StatusData: org.apache.logging.log4j.Level level>;

        return $r1;
    }

    public org.apache.logging.log4j.message.Message getMessage()
    {
        org.apache.logging.log4j.status.StatusData r0;
        org.apache.logging.log4j.message.Message $r1;

        r0 := @this: org.apache.logging.log4j.status.StatusData;

        $r1 = r0.<org.apache.logging.log4j.status.StatusData: org.apache.logging.log4j.message.Message msg>;

        return $r1;
    }

    public java.lang.String getThreadName()
    {
        org.apache.logging.log4j.status.StatusData r0;
        java.lang.String $r1, $r2, $r4;
        java.lang.Thread $r3;

        r0 := @this: org.apache.logging.log4j.status.StatusData;

        $r1 = r0.<org.apache.logging.log4j.status.StatusData: java.lang.String threadName>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.String getName()>();

        r0.<org.apache.logging.log4j.status.StatusData: java.lang.String threadName> = $r4;

     label1:
        $r2 = r0.<org.apache.logging.log4j.status.StatusData: java.lang.String threadName>;

        return $r2;
    }

    public java.lang.Throwable getThrowable()
    {
        org.apache.logging.log4j.status.StatusData r0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.logging.log4j.status.StatusData;

        $r1 = r0.<org.apache.logging.log4j.status.StatusData: java.lang.Throwable throwable>;

        return $r1;
    }

    public java.lang.String getFormattedStatus()
    {
        org.apache.logging.log4j.status.StatusData r0;
        java.lang.Object[] r3;
        java.lang.StringBuilder $r5;
        java.text.SimpleDateFormat $r6;
        java.util.Date $r7;
        long $l0;
        java.lang.String $r8, $r11, $r15, $r19, $r23, $r27;
        org.apache.logging.log4j.Level $r14;
        org.apache.logging.log4j.message.Message $r18, $r21;
        java.lang.Throwable $r22, r31;
        java.io.ByteArrayOutputStream $r25;
        java.io.PrintStream $r26;
        int $i1, $i2, $i3, $i4;
        java.lang.Object $r29, $r30;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.status.StatusData;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = new java.text.SimpleDateFormat;

        specialinvoke $r6.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss,SSS");

        $r7 = new java.util.Date;

        $l0 = r0.<org.apache.logging.log4j.status.StatusData: long timestamp>;

        specialinvoke $r7.<java.util.Date: void <init>(long)>($l0);

        $r8 = virtualinvoke $r6.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r11 = virtualinvoke r0.<org.apache.logging.log4j.status.StatusData: java.lang.String getThreadName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r14 = r0.<org.apache.logging.log4j.status.StatusData: org.apache.logging.log4j.Level level>;

        $r15 = virtualinvoke $r14.<org.apache.logging.log4j.Level: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r18 = r0.<org.apache.logging.log4j.status.StatusData: org.apache.logging.log4j.message.Message msg>;

        $r19 = interfaceinvoke $r18.<org.apache.logging.log4j.message.Message: java.lang.String getFormattedMessage()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = r0.<org.apache.logging.log4j.status.StatusData: org.apache.logging.log4j.message.Message msg>;

        r3 = interfaceinvoke $r21.<org.apache.logging.log4j.message.Message: java.lang.Object[] getParameters()>();

        $r22 = r0.<org.apache.logging.log4j.status.StatusData: java.lang.Throwable throwable>;

        if $r22 != null goto label1;

        if r3 == null goto label1;

        $i1 = lengthof r3;

        $i2 = $i1 - 1;

        $r29 = r3[$i2];

        $z0 = $r29 instanceof java.lang.Throwable;

        if $z0 == 0 goto label1;

        $i3 = lengthof r3;

        $i4 = $i3 - 1;

        $r30 = r3[$i4];

        r31 = (java.lang.Throwable) $r30;

        goto label2;

     label1:
        r31 = r0.<org.apache.logging.log4j.status.StatusData: java.lang.Throwable throwable>;

     label2:
        if r31 == null goto label3;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r25 = new java.io.ByteArrayOutputStream;

        specialinvoke $r25.<java.io.ByteArrayOutputStream: void <init>()>();

        $r26 = new java.io.PrintStream;

        specialinvoke $r26.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r25);

        virtualinvoke r31.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r26);

        $r27 = virtualinvoke $r25.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

     label3:
        $r23 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;
    }

    public static void <clinit>()
    {
        <org.apache.logging.log4j.status.StatusData: long serialVersionUID> = -4341916115118014017L;

        return;
    }
}
