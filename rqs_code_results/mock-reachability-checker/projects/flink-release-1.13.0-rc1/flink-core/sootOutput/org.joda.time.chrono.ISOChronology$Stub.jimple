final class org.joda.time.chrono.ISOChronology$Stub extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private transient org.joda.time.DateTimeZone iZone;

    void <init>(org.joda.time.DateTimeZone)
    {
        org.joda.time.chrono.ISOChronology$Stub r0;
        org.joda.time.DateTimeZone r1;

        r0 := @this: org.joda.time.chrono.ISOChronology$Stub;

        r1 := @parameter0: org.joda.time.DateTimeZone;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.chrono.ISOChronology$Stub: org.joda.time.DateTimeZone iZone> = r1;

        return;
    }

    private java.lang.Object readResolve()
    {
        org.joda.time.chrono.ISOChronology$Stub r0;
        org.joda.time.DateTimeZone $r1;
        org.joda.time.chrono.ISOChronology $r2;

        r0 := @this: org.joda.time.chrono.ISOChronology$Stub;

        $r1 = r0.<org.joda.time.chrono.ISOChronology$Stub: org.joda.time.DateTimeZone iZone>;

        $r2 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance(org.joda.time.DateTimeZone)>($r1);

        return $r2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.joda.time.chrono.ISOChronology$Stub r0;
        java.io.ObjectOutputStream r1;
        org.joda.time.DateTimeZone $r2;

        r0 := @this: org.joda.time.chrono.ISOChronology$Stub;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r0.<org.joda.time.chrono.ISOChronology$Stub: org.joda.time.DateTimeZone iZone>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.joda.time.chrono.ISOChronology$Stub r0;
        java.io.ObjectInputStream r1;
        java.lang.Object $r2;
        org.joda.time.DateTimeZone $r3;

        r0 := @this: org.joda.time.chrono.ISOChronology$Stub;

        r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (org.joda.time.DateTimeZone) $r2;

        r0.<org.joda.time.chrono.ISOChronology$Stub: org.joda.time.DateTimeZone iZone> = $r3;

        return;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.ISOChronology$Stub: long serialVersionUID> = -6212696554273812441L;

        return;
    }
}
