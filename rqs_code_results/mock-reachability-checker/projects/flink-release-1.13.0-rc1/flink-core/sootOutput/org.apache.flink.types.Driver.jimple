public class org.apache.flink.types.Driver extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.types.Driver r0;

        r0 := @this: org.apache.flink.types.Driver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void runall()
    {
        org.apache.flink.types.Driver r0;
        org.apache.flink.types.RowUtilsTest $r9;
        org.apache.flink.types.NormalizableKeyTest $r10;
        org.apache.flink.types.RecordITCase $r11;
        org.apache.flink.types.BasicTypeInfoTest $r12;
        org.apache.flink.types.JavaToValueConverterTest $r13;
        org.apache.flink.types.StringSerializationTest $r14;
        org.apache.flink.types.PrimitiveDataTypeTest $r15;
        org.apache.flink.types.RecordTest $r16;
        org.apache.flink.types.RowTest $r17;
        org.apache.flink.types.StringValueSerializationTest $r18;
        org.apache.flink.types.CopyableValueTest $r19;
        java.io.IOException $r20;
        java.lang.Exception $r21, $r22, $r23;

        r0 := @this: org.apache.flink.types.Driver;

        $r9 = new org.apache.flink.types.RowUtilsTest;

        specialinvoke $r9.<org.apache.flink.types.RowUtilsTest: void <init>()>();

        virtualinvoke $r9.<org.apache.flink.types.RowUtilsTest: void testCompareRowsUnordered()>();

        $r10 = new org.apache.flink.types.NormalizableKeyTest;

        specialinvoke $r10.<org.apache.flink.types.NormalizableKeyTest: void <init>()>();

        virtualinvoke $r10.<org.apache.flink.types.NormalizableKeyTest: void testIntValue()>();

        virtualinvoke $r10.<org.apache.flink.types.NormalizableKeyTest: void testLongValue()>();

        virtualinvoke $r10.<org.apache.flink.types.NormalizableKeyTest: void testStringValue()>();

        virtualinvoke $r10.<org.apache.flink.types.NormalizableKeyTest: void testPactNull()>();

        virtualinvoke $r10.<org.apache.flink.types.NormalizableKeyTest: void testPactChar()>();

        $r11 = new org.apache.flink.types.RecordITCase;

        specialinvoke $r11.<org.apache.flink.types.RecordITCase: void <init>()>();

     label01:
        virtualinvoke $r11.<org.apache.flink.types.RecordITCase: void setUp()>();

     label02:
        goto label04;

     label03:
        $r23 := @caughtexception;

        virtualinvoke $r23.<java.lang.Exception: void printStackTrace()>();

     label04:
        virtualinvoke $r11.<org.apache.flink.types.RecordITCase: void massiveRandomBlackBoxTests()>();

        $r12 = new org.apache.flink.types.BasicTypeInfoTest;

        specialinvoke $r12.<org.apache.flink.types.BasicTypeInfoTest: void <init>()>();

        virtualinvoke $r12.<org.apache.flink.types.BasicTypeInfoTest: void testBasicTypeInfoEquality()>();

        virtualinvoke $r12.<org.apache.flink.types.BasicTypeInfoTest: void testBasicTypeInfoInequality()>();

        $r13 = new org.apache.flink.types.JavaToValueConverterTest;

        specialinvoke $r13.<org.apache.flink.types.JavaToValueConverterTest: void <init>()>();

        virtualinvoke $r13.<org.apache.flink.types.JavaToValueConverterTest: void testJavaToValueConversion()>();

        virtualinvoke $r13.<org.apache.flink.types.JavaToValueConverterTest: void testValueToJavaConversion()>();

        $r14 = new org.apache.flink.types.StringSerializationTest;

        specialinvoke $r14.<org.apache.flink.types.StringSerializationTest: void <init>()>();

        virtualinvoke $r14.<org.apache.flink.types.StringSerializationTest: void testNonNullValues()>();

        virtualinvoke $r14.<org.apache.flink.types.StringSerializationTest: void testUnicodeValues()>();

        virtualinvoke $r14.<org.apache.flink.types.StringSerializationTest: void testUnicodeSurrogatePairs()>();

        virtualinvoke $r14.<org.apache.flink.types.StringSerializationTest: void testStringBinaryCompatibility()>();

        virtualinvoke $r14.<org.apache.flink.types.StringSerializationTest: void testNullValues()>();

        virtualinvoke $r14.<org.apache.flink.types.StringSerializationTest: void testLongValues()>();

        virtualinvoke $r14.<org.apache.flink.types.StringSerializationTest: void testMixedValues()>();

        virtualinvoke $r14.<org.apache.flink.types.StringSerializationTest: void testBinaryCopyOfLongStrings()>();

        $r15 = new org.apache.flink.types.PrimitiveDataTypeTest;

        specialinvoke $r15.<org.apache.flink.types.PrimitiveDataTypeTest: void <init>()>();

     label05:
        virtualinvoke $r15.<org.apache.flink.types.PrimitiveDataTypeTest: void setup()>();

     label06:
        goto label08;

     label07:
        $r21 := @caughtexception;

        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

     label08:
        virtualinvoke $r15.<org.apache.flink.types.PrimitiveDataTypeTest: void testIntValue()>();

        virtualinvoke $r15.<org.apache.flink.types.PrimitiveDataTypeTest: void testDoubleValue()>();

        virtualinvoke $r15.<org.apache.flink.types.PrimitiveDataTypeTest: void testStringValue()>();

        virtualinvoke $r15.<org.apache.flink.types.PrimitiveDataTypeTest: void testPactNull()>();

        $r16 = new org.apache.flink.types.RecordTest;

        specialinvoke $r16.<org.apache.flink.types.RecordTest: void <init>()>();

     label09:
        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void setUp()>();

     label10:
        goto label12;

     label11:
        $r22 := @caughtexception;

        virtualinvoke $r22.<java.lang.Exception: void printStackTrace()>();

     label12:
        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void testEmptyRecordSerialization()>();

        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void testAddField()>();

        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void testRemoveField()>();

        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void testSetNullInt()>();

        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void testSetNullLong()>();

        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void testSetNullLongArray()>();

        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void testUpdateBinaryRepresentations()>();

        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void testDeSerialization()>();

     label13:
        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void testClear()>();

     label14:
        goto label16;

     label15:
        $r20 := @caughtexception;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

     label16:
        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void blackBoxTests()>();

        virtualinvoke $r16.<org.apache.flink.types.RecordTest: void testUnionFields()>();

        $r17 = new org.apache.flink.types.RowTest;

        specialinvoke $r17.<org.apache.flink.types.RowTest: void <init>()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testRowNamed()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testRowPositioned()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testRowNamedPositioned()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testRowOf()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testRowCopyPositioned()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testRowCopyNamed()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testRowProjectPositioned()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testRowProjectNamed()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testRowJoinPositioned()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testDeepEqualsAndHashCodePositioned()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testDeepEqualsCodeNamed()>();

        virtualinvoke $r17.<org.apache.flink.types.RowTest: void testDeepToString()>();

        $r18 = new org.apache.flink.types.StringValueSerializationTest;

        specialinvoke $r18.<org.apache.flink.types.StringValueSerializationTest: void <init>()>();

        virtualinvoke $r18.<org.apache.flink.types.StringValueSerializationTest: void testNonNullValues()>();

        virtualinvoke $r18.<org.apache.flink.types.StringValueSerializationTest: void testLongValues()>();

        virtualinvoke $r18.<org.apache.flink.types.StringValueSerializationTest: void testMixedValues()>();

        virtualinvoke $r18.<org.apache.flink.types.StringValueSerializationTest: void testBinaryCopyOfLongStrings()>();

        $r19 = new org.apache.flink.types.CopyableValueTest;

        specialinvoke $r19.<org.apache.flink.types.CopyableValueTest: void <init>()>();

        virtualinvoke $r19.<org.apache.flink.types.CopyableValueTest: void testCopy()>();

        virtualinvoke $r19.<org.apache.flink.types.CopyableValueTest: void testCopyTo()>();

        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.io.IOException from label13 to label14 with label15;
    }
}
