public class org.apache.flink.api.common.operators.Driver extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.common.operators.Driver r0;

        r0 := @this: org.apache.flink.api.common.operators.Driver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void runall()
    {
        org.apache.flink.api.common.operators.Driver r0;
        org.apache.flink.api.common.operators.GenericDataSinkBaseTest $r7;
        org.apache.flink.api.common.operators.GenericDataSourceBaseTest $r8;
        org.apache.flink.api.common.operators.OrderingTest $r9;
        org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest $r10;
        org.apache.flink.api.common.operators.DualInputSemanticPropertiesTest $r11;
        org.apache.flink.api.common.operators.ResourceSpecTest $r12;
        org.apache.flink.api.common.operators.SelectorFunctionKeysTest $r13;
        org.apache.flink.api.common.operators.ExpressionKeysTest $r14;
        java.lang.IllegalAccessException $r15;
        org.apache.flink.api.common.operators.Keys$IncompatibleKeysException $r16, $r17, $r19, $r23, $r26, $r30, $r32, $r33, $r34, $r36, $r38, $r39, $r40, $r42;
        java.lang.Exception $r18, $r20, $r21, $r25, $r28, $r31, $r35, $r37, $r41, $r43;
        java.lang.Throwable $r22, $r29;
        java.lang.reflect.InvocationTargetException $r24;
        java.lang.IllegalArgumentException $r27;

        r0 := @this: org.apache.flink.api.common.operators.Driver;

        $r7 = new org.apache.flink.api.common.operators.GenericDataSinkBaseTest;

        specialinvoke $r7.<org.apache.flink.api.common.operators.GenericDataSinkBaseTest: void <init>()>();

        virtualinvoke $r7.<org.apache.flink.api.common.operators.GenericDataSinkBaseTest: void testDataSourcePlain()>();

        virtualinvoke $r7.<org.apache.flink.api.common.operators.GenericDataSinkBaseTest: void testDataSourceWithRuntimeContext()>();

        $r8 = new org.apache.flink.api.common.operators.GenericDataSourceBaseTest;

        specialinvoke $r8.<org.apache.flink.api.common.operators.GenericDataSourceBaseTest: void <init>()>();

        virtualinvoke $r8.<org.apache.flink.api.common.operators.GenericDataSourceBaseTest: void testDataSourcePlain()>();

        virtualinvoke $r8.<org.apache.flink.api.common.operators.GenericDataSourceBaseTest: void testDataSourceWithRuntimeContext()>();

        $r9 = new org.apache.flink.api.common.operators.OrderingTest;

        specialinvoke $r9.<org.apache.flink.api.common.operators.OrderingTest: void <init>()>();

        virtualinvoke $r9.<org.apache.flink.api.common.operators.OrderingTest: void testNewOrdering()>();

        $r10 = new org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest;

        specialinvoke $r10.<org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest: void <init>()>();

        virtualinvoke $r10.<org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest: void testGetTargetFields()>();

        virtualinvoke $r10.<org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest: void testGetSourceField()>();

        virtualinvoke $r10.<org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest: void testGetReadSet()>();

        virtualinvoke $r10.<org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest: void testAddForwardedFieldsTargetTwice()>();

        virtualinvoke $r10.<org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest: void testGetTargetFieldInvalidIndex()>();

        virtualinvoke $r10.<org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest: void testGetSourceFieldInvalidIndex()>();

        virtualinvoke $r10.<org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest: void testGetReadFieldsInvalidIndex()>();

        virtualinvoke $r10.<org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest: void testAllForwardedSingleInputSemProps()>();

        virtualinvoke $r10.<org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest: void testAllForwardedSingleInputSemPropsInvalidIndex1()>();

        virtualinvoke $r10.<org.apache.flink.api.common.operators.SingleInputSemanticPropertiesTest: void testAllForwardedSingleInputSemPropsInvalidIndex2()>();

        $r11 = new org.apache.flink.api.common.operators.DualInputSemanticPropertiesTest;

        specialinvoke $r11.<org.apache.flink.api.common.operators.DualInputSemanticPropertiesTest: void <init>()>();

        virtualinvoke $r11.<org.apache.flink.api.common.operators.DualInputSemanticPropertiesTest: void testGetTargetFields()>();

        virtualinvoke $r11.<org.apache.flink.api.common.operators.DualInputSemanticPropertiesTest: void testGetSourceField()>();

        virtualinvoke $r11.<org.apache.flink.api.common.operators.DualInputSemanticPropertiesTest: void testGetReadSet()>();

        virtualinvoke $r11.<org.apache.flink.api.common.operators.DualInputSemanticPropertiesTest: void testAddForwardedFieldsTargetTwice1()>();

        virtualinvoke $r11.<org.apache.flink.api.common.operators.DualInputSemanticPropertiesTest: void testAddForwardedFieldsTargetTwice2()>();

        $r12 = new org.apache.flink.api.common.operators.ResourceSpecTest;

        specialinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void <init>()>();

        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testLessThanOrEqualWhenBothSpecified()>();

        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testLessThanOrEqualWhenBothUnknown()>();

        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testLessThanOrEqualWhenUnknownWithSpecified()>();

        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testLessThanOrEqualWhenSpecifiedWithUnknown()>();

     label01:
        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testEquals()>();

     label02:
        goto label04;

     label03:
        $r20 := @caughtexception;

        virtualinvoke $r20.<java.lang.Exception: void printStackTrace()>();

     label04:
        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testHashCode()>();

     label05:
        goto label07;

     label06:
        $r37 := @caughtexception;

        virtualinvoke $r37.<java.lang.Exception: void printStackTrace()>();

     label07:
        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testMerge()>();

     label08:
        goto label10;

     label09:
        $r43 := @caughtexception;

        virtualinvoke $r43.<java.lang.Exception: void printStackTrace()>();

     label10:
        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testSerializable()>();

     label11:
        goto label13;

     label12:
        $r18 := @caughtexception;

        virtualinvoke $r18.<java.lang.Exception: void printStackTrace()>();

     label13:
        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testMergeThisUnknown()>();

     label14:
        goto label16;

     label15:
        $r21 := @caughtexception;

        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

     label16:
        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testMergeOtherUnknown()>();

     label17:
        goto label19;

     label18:
        $r41 := @caughtexception;

        virtualinvoke $r41.<java.lang.Exception: void printStackTrace()>();

     label19:
        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testMergeBothUnknown()>();

     label20:
        goto label22;

     label21:
        $r25 := @caughtexception;

        virtualinvoke $r25.<java.lang.Exception: void printStackTrace()>();

     label22:
        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testMergeWithSerializationCopy()>();

     label23:
        goto label25;

     label24:
        $r31 := @caughtexception;

        virtualinvoke $r31.<java.lang.Exception: void printStackTrace()>();

     label25:
        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testSingletonPropertyOfUnknown()>();

     label26:
        goto label28;

     label27:
        $r28 := @caughtexception;

        virtualinvoke $r28.<java.lang.Exception: void printStackTrace()>();

     label28:
        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testSubtract()>();

        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testSubtractOtherHasLargerResources()>();

        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testSubtractThisUnknown()>();

        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testSubtractOtherUnknown()>();

        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testZeroExtendedResourceFromConstructor()>();

        virtualinvoke $r12.<org.apache.flink.api.common.operators.ResourceSpecTest: void testZeroExtendedResourceFromSubtract()>();

        $r13 = new org.apache.flink.api.common.operators.SelectorFunctionKeysTest;

        specialinvoke $r13.<org.apache.flink.api.common.operators.SelectorFunctionKeysTest: void <init>()>();

     label29:
        virtualinvoke $r13.<org.apache.flink.api.common.operators.SelectorFunctionKeysTest: void testAreCompatible1()>();

     label30:
        goto label32;

     label31:
        $r19 := @caughtexception;

        virtualinvoke $r19.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label32:
        virtualinvoke $r13.<org.apache.flink.api.common.operators.SelectorFunctionKeysTest: void testAreCompatible2()>();

     label33:
        goto label35;

     label34:
        $r40 := @caughtexception;

        virtualinvoke $r40.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label35:
        virtualinvoke $r13.<org.apache.flink.api.common.operators.SelectorFunctionKeysTest: void testAreCompatible3()>();

     label36:
        goto label38;

     label37:
        $r34 := @caughtexception;

        virtualinvoke $r34.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label38:
        virtualinvoke $r13.<org.apache.flink.api.common.operators.SelectorFunctionKeysTest: void testAreCompatible4()>();

     label39:
        goto label41;

     label40:
        $r42 := @caughtexception;

        virtualinvoke $r42.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label41:
        virtualinvoke $r13.<org.apache.flink.api.common.operators.SelectorFunctionKeysTest: void testOriginalTypes1()>();

     label42:
        goto label44;

     label43:
        $r36 := @caughtexception;

        virtualinvoke $r36.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label44:
        virtualinvoke $r13.<org.apache.flink.api.common.operators.SelectorFunctionKeysTest: void testOriginalTypes2()>();

     label45:
        goto label47;

     label46:
        $r35 := @caughtexception;

        virtualinvoke $r35.<java.lang.Exception: void printStackTrace()>();

     label47:
        $r14 = new org.apache.flink.api.common.operators.ExpressionKeysTest;

        specialinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void <init>()>();

        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testBasicType()>();

        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testGenericNonKeyType()>();

        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testKeyGenericType()>();

     label48:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testTupleRangeCheck()>();

     label49:
        goto label53;

     label50:
        $r15 := @caughtexception;

        virtualinvoke $r15.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label53;

     label51:
        $r27 := @caughtexception;

        virtualinvoke $r27.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label53;

     label52:
        $r24 := @caughtexception;

        virtualinvoke $r24.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

     label53:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testStandardTupleKeys()>();

     label54:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testInvalidTuple()>();

     label55:
        goto label57;

     label56:
        $r29 := @caughtexception;

        virtualinvoke $r29.<java.lang.Throwable: void printStackTrace()>();

     label57:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testTupleNonKeyField()>();

        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testTupleKeyExpansion()>();

        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testPojoKeys()>();

        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testTupleWithNestedPojo()>();

        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testOriginalTypes()>();

        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testNonKeyPojoField()>();

     label58:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testInvalidPojo()>();

     label59:
        goto label61;

     label60:
        $r22 := @caughtexception;

        virtualinvoke $r22.<java.lang.Throwable: void printStackTrace()>();

     label61:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testAreCompatible1()>();

     label62:
        goto label64;

     label63:
        $r39 := @caughtexception;

        virtualinvoke $r39.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label64:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testAreCompatible2()>();

     label65:
        goto label67;

     label66:
        $r17 := @caughtexception;

        virtualinvoke $r17.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label67:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testAreCompatible3()>();

     label68:
        goto label70;

     label69:
        $r33 := @caughtexception;

        virtualinvoke $r33.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label70:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testAreCompatible4()>();

     label71:
        goto label73;

     label72:
        $r38 := @caughtexception;

        virtualinvoke $r38.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label73:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testAreCompatible5()>();

     label74:
        goto label76;

     label75:
        $r30 := @caughtexception;

        virtualinvoke $r30.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label76:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testAreCompatible6()>();

     label77:
        goto label79;

     label78:
        $r26 := @caughtexception;

        virtualinvoke $r26.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label79:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testAreCompatible7()>();

     label80:
        goto label82;

     label81:
        $r23 := @caughtexception;

        virtualinvoke $r23.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label82:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testAreCompatible8()>();

     label83:
        goto label85;

     label84:
        $r32 := @caughtexception;

        virtualinvoke $r32.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label85:
        virtualinvoke $r14.<org.apache.flink.api.common.operators.ExpressionKeysTest: void testAreCompatible9()>();

     label86:
        goto label88;

     label87:
        $r16 := @caughtexception;

        virtualinvoke $r16.<org.apache.flink.api.common.operators.Keys$IncompatibleKeysException: void printStackTrace()>();

     label88:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Exception from label22 to label23 with label24;
        catch java.lang.Exception from label25 to label26 with label27;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label29 to label30 with label31;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label32 to label33 with label34;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label35 to label36 with label37;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label38 to label39 with label40;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label41 to label42 with label43;
        catch java.lang.Exception from label44 to label45 with label46;
        catch java.lang.IllegalAccessException from label48 to label49 with label50;
        catch java.lang.IllegalArgumentException from label48 to label49 with label51;
        catch java.lang.reflect.InvocationTargetException from label48 to label49 with label52;
        catch java.lang.Throwable from label54 to label55 with label56;
        catch java.lang.Throwable from label58 to label59 with label60;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label61 to label62 with label63;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label64 to label65 with label66;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label67 to label68 with label69;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label70 to label71 with label72;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label73 to label74 with label75;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label76 to label77 with label78;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label79 to label80 with label81;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label82 to label83 with label84;
        catch org.apache.flink.api.common.operators.Keys$IncompatibleKeysException from label85 to label86 with label87;
    }
}
