final class org.apache.flink.api.common.Plan$MaxDopVisitor extends java.lang.Object implements org.apache.flink.util.Visitor
{
    private final java.util.Set visitedOperators;
    private int maxDop;

    private void <init>()
    {
        org.apache.flink.api.common.Plan$MaxDopVisitor r0;
        java.util.HashSet $r1;

        r0 := @this: org.apache.flink.api.common.Plan$MaxDopVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.flink.api.common.Plan$MaxDopVisitor: java.util.Set visitedOperators> = $r1;

        r0.<org.apache.flink.api.common.Plan$MaxDopVisitor: int maxDop> = -1;

        return;
    }

    public boolean preVisit(org.apache.flink.api.common.operators.Operator)
    {
        org.apache.flink.api.common.Plan$MaxDopVisitor r0;
        org.apache.flink.api.common.operators.Operator r1;
        java.util.Set $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.api.common.Plan$MaxDopVisitor;

        r1 := @parameter0: org.apache.flink.api.common.operators.Operator;

        $r2 = r0.<org.apache.flink.api.common.Plan$MaxDopVisitor: java.util.Set visitedOperators>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<org.apache.flink.api.common.Plan$MaxDopVisitor: int maxDop>;

        $i1 = virtualinvoke r1.<org.apache.flink.api.common.operators.Operator: int getParallelism()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        r0.<org.apache.flink.api.common.Plan$MaxDopVisitor: int maxDop> = $i2;

        return 1;
    }

    public void postVisit(org.apache.flink.api.common.operators.Operator)
    {
        org.apache.flink.api.common.Plan$MaxDopVisitor r0;
        org.apache.flink.api.common.operators.Operator r1;

        r0 := @this: org.apache.flink.api.common.Plan$MaxDopVisitor;

        r1 := @parameter0: org.apache.flink.api.common.operators.Operator;

        return;
    }

    public volatile void postVisit(org.apache.flink.util.Visitable)
    {
        org.apache.flink.api.common.Plan$MaxDopVisitor r0;
        org.apache.flink.util.Visitable r1;
        org.apache.flink.api.common.operators.Operator $r2;

        r0 := @this: org.apache.flink.api.common.Plan$MaxDopVisitor;

        r1 := @parameter0: org.apache.flink.util.Visitable;

        $r2 = (org.apache.flink.api.common.operators.Operator) r1;

        virtualinvoke r0.<org.apache.flink.api.common.Plan$MaxDopVisitor: void postVisit(org.apache.flink.api.common.operators.Operator)>($r2);

        return;
    }

    public volatile boolean preVisit(org.apache.flink.util.Visitable)
    {
        org.apache.flink.api.common.Plan$MaxDopVisitor r0;
        org.apache.flink.util.Visitable r1;
        org.apache.flink.api.common.operators.Operator $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.Plan$MaxDopVisitor;

        r1 := @parameter0: org.apache.flink.util.Visitable;

        $r2 = (org.apache.flink.api.common.operators.Operator) r1;

        $z0 = virtualinvoke r0.<org.apache.flink.api.common.Plan$MaxDopVisitor: boolean preVisit(org.apache.flink.api.common.operators.Operator)>($r2);

        return $z0;
    }

    void <init>(org.apache.flink.api.common.Plan$1)
    {
        org.apache.flink.api.common.Plan$MaxDopVisitor r0;
        org.apache.flink.api.common.Plan$1 r1;

        r0 := @this: org.apache.flink.api.common.Plan$MaxDopVisitor;

        r1 := @parameter0: org.apache.flink.api.common.Plan$1;

        specialinvoke r0.<org.apache.flink.api.common.Plan$MaxDopVisitor: void <init>()>();

        return;
    }

    static int access$100(org.apache.flink.api.common.Plan$MaxDopVisitor)
    {
        org.apache.flink.api.common.Plan$MaxDopVisitor r0;
        int $i0;

        r0 := @parameter0: org.apache.flink.api.common.Plan$MaxDopVisitor;

        $i0 = r0.<org.apache.flink.api.common.Plan$MaxDopVisitor: int maxDop>;

        return $i0;
    }
}
