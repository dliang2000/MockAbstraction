public abstract class javassist.CtClass extends java.lang.Object
{
    protected java.lang.String qualifiedName;
    public static java.lang.String debugDump;
    public static final java.lang.String version;
    static final java.lang.String javaLangObject;
    public static javassist.CtClass booleanType;
    public static javassist.CtClass charType;
    public static javassist.CtClass byteType;
    public static javassist.CtClass shortType;
    public static javassist.CtClass intType;
    public static javassist.CtClass longType;
    public static javassist.CtClass floatType;
    public static javassist.CtClass doubleType;
    public static javassist.CtClass voidType;
    static javassist.CtClass[] primitiveTypes;

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.io.PrintStream $r1, $r2;

        r0 := @parameter0: java.lang.String[];

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Javassist version 3.24.0-GA");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Copyright (C) 1999-2018 Shigeru Chiba. All Rights Reserved.");

        return;
    }

    protected void <init>(java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.CtClass: java.lang.String qualifiedName> = r1;

        return;
    }

    public java.lang.String toString()
    {
        javassist.CtClass r0;
        java.lang.StringBuffer $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r6, $r10;
        int $i0;

        r0 := @this: javassist.CtClass;

        $r2 = new java.lang.StringBuffer;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        virtualinvoke r0.<javassist.CtClass: void extendToString(java.lang.StringBuffer)>($r2);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r10 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    protected void extendToString(java.lang.StringBuffer)
    {
        javassist.CtClass r0;
        java.lang.StringBuffer r1;
        java.lang.String $r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.StringBuffer;

        $r2 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        return;
    }

    public javassist.ClassPool getClassPool()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return null;
    }

    public javassist.bytecode.ClassFile getClassFile()
    {
        javassist.CtClass r0;
        javassist.bytecode.ClassFile $r1;

        r0 := @this: javassist.CtClass;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        $r1 = virtualinvoke r0.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile2()>();

        return $r1;
    }

    public javassist.bytecode.ClassFile getClassFile2()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return null;
    }

    public javassist.compiler.AccessorMaker getAccessorMaker()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return null;
    }

    public java.net.URL getURL() throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        javassist.NotFoundException $r1;
        java.lang.String $r2;

        r0 := @this: javassist.CtClass;

        $r1 = new javassist.NotFoundException;

        $r2 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        specialinvoke $r1.<javassist.NotFoundException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public boolean isModified()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return 0;
    }

    public boolean isFrozen()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return 1;
    }

    public void freeze()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return;
    }

    void checkModify() throws java.lang.RuntimeException
    {
        javassist.CtClass r0;
        boolean $z0;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: javassist.CtClass;

        $z0 = virtualinvoke r0.<javassist.CtClass: boolean isFrozen()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" class is frozen");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label1:
        return;
    }

    public void defrost()
    {
        javassist.CtClass r0;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: javassist.CtClass;

        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot defrost ");

        $r4 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public boolean isPrimitive()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return 0;
    }

    public boolean isArray()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return 0;
    }

    public javassist.CtClass getComponentType() throws javassist.NotFoundException
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return null;
    }

    public boolean subtypeOf(javassist.CtClass) throws javassist.NotFoundException
    {
        javassist.CtClass r0, r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtClass;

        if r0 == r1 goto label1;

        $r2 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.String getName()
    {
        javassist.CtClass r0;
        java.lang.String $r1;

        r0 := @this: javassist.CtClass;

        $r1 = r0.<javassist.CtClass: java.lang.String qualifiedName>;

        return $r1;
    }

    public final java.lang.String getSimpleName()
    {
        javassist.CtClass r0;
        java.lang.String r1, $r2;
        int i0, $i1;

        r0 := @this: javassist.CtClass;

        r1 = r0.<javassist.CtClass: java.lang.String qualifiedName>;

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 >= 0 goto label1;

        return r1;

     label1:
        $i1 = i0 + 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r2;
    }

    public final java.lang.String getPackageName()
    {
        javassist.CtClass r0;
        java.lang.String r1, $r2;
        int i0;

        r0 := @this: javassist.CtClass;

        r1 = r0.<javassist.CtClass: java.lang.String qualifiedName>;

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r2;
    }

    public void setName(java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        if r1 == null goto label1;

        r0.<javassist.CtClass: java.lang.String qualifiedName> = r1;

     label1:
        return;
    }

    public java.lang.String getGenericSignature()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return null;
    }

    public void setGenericSignature(java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public void replaceClassName(java.lang.String, java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1, r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public void replaceClassName(javassist.ClassMap)
    {
        javassist.CtClass r0;
        javassist.ClassMap r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.ClassMap;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public synchronized java.util.Collection getRefClasses()
    {
        javassist.CtClass r0;
        javassist.bytecode.ClassFile r1;
        javassist.CtClass$1 $r3;
        java.util.Collection $r4;

        r0 := @this: javassist.CtClass;

        r1 = virtualinvoke r0.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile2()>();

        if r1 == null goto label1;

        $r3 = new javassist.CtClass$1;

        specialinvoke $r3.<javassist.CtClass$1: void <init>(javassist.CtClass)>(r0);

        virtualinvoke r1.<javassist.bytecode.ClassFile: void getRefClasses(java.util.Map)>($r3);

        $r4 = virtualinvoke $r3.<javassist.ClassMap: java.util.Collection values()>();

        return $r4;

     label1:
        return null;
    }

    public boolean isInterface()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return 0;
    }

    public boolean isAnnotation()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return 0;
    }

    public boolean isEnum()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return 0;
    }

    public int getModifiers()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return 0;
    }

    public boolean hasAnnotation(java.lang.Class)
    {
        javassist.CtClass r0;
        java.lang.Class r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke r0.<javassist.CtClass: boolean hasAnnotation(java.lang.String)>($r2);

        return $z0;
    }

    public boolean hasAnnotation(java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public java.lang.Object getAnnotation(java.lang.Class) throws java.lang.ClassNotFoundException
    {
        javassist.CtClass r0;
        java.lang.Class r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.Class;

        return null;
    }

    public java.lang.Object[] getAnnotations() throws java.lang.ClassNotFoundException
    {
        javassist.CtClass r0;
        java.lang.Object[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = newarray (java.lang.Object)[0];

        return $r1;
    }

    public java.lang.Object[] getAvailableAnnotations()
    {
        javassist.CtClass r0;
        java.lang.Object[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = newarray (java.lang.Object)[0];

        return $r1;
    }

    public javassist.CtClass[] getDeclaredClasses() throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        javassist.CtClass[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = virtualinvoke r0.<javassist.CtClass: javassist.CtClass[] getNestedClasses()>();

        return $r1;
    }

    public javassist.CtClass[] getNestedClasses() throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        javassist.CtClass[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = newarray (javassist.CtClass)[0];

        return $r1;
    }

    public void setModifiers(int)
    {
        javassist.CtClass r0;
        int i0;

        r0 := @this: javassist.CtClass;

        i0 := @parameter0: int;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public boolean subclassOf(javassist.CtClass)
    {
        javassist.CtClass r0, r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtClass;

        return 0;
    }

    public javassist.CtClass getSuperclass() throws javassist.NotFoundException
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return null;
    }

    public void setSuperclass(javassist.CtClass) throws javassist.CannotCompileException
    {
        javassist.CtClass r0, r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtClass;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public javassist.CtClass[] getInterfaces() throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        javassist.CtClass[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = newarray (javassist.CtClass)[0];

        return $r1;
    }

    public void setInterfaces(javassist.CtClass[])
    {
        javassist.CtClass r0;
        javassist.CtClass[] r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtClass[];

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public void addInterface(javassist.CtClass)
    {
        javassist.CtClass r0, r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtClass;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public javassist.CtClass getDeclaringClass() throws javassist.NotFoundException
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return null;
    }

    public final javassist.CtMethod getEnclosingMethod() throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        javassist.CtBehavior r1;
        boolean $z0;
        javassist.NotFoundException $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        javassist.CtMethod $r10;

        r0 := @this: javassist.CtClass;

        r1 = virtualinvoke r0.<javassist.CtClass: javassist.CtBehavior getEnclosingBehavior()>();

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = r1 instanceof javassist.CtMethod;

        if $z0 == 0 goto label2;

        $r10 = (javassist.CtMethod) r1;

        return $r10;

     label2:
        $r2 = new javassist.NotFoundException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<javassist.CtBehavior: java.lang.String getLongName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is enclosing ");

        $r7 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<javassist.NotFoundException: void <init>(java.lang.String)>($r9);

        throw $r2;
    }

    public javassist.CtBehavior getEnclosingBehavior() throws javassist.NotFoundException
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return null;
    }

    public javassist.CtClass makeNestedClass(java.lang.String, boolean)
    {
        javassist.CtClass r0;
        java.lang.String r1, $r4, $r7;
        boolean z0;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r5, $r6;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a class");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public javassist.CtField[] getFields()
    {
        javassist.CtClass r0;
        javassist.CtField[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = newarray (javassist.CtField)[0];

        return $r1;
    }

    public javassist.CtField getField(java.lang.String) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        java.lang.String r1;
        javassist.CtField $r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<javassist.CtClass: javassist.CtField getField(java.lang.String,java.lang.String)>(r1, null);

        return $r2;
    }

    public javassist.CtField getField(java.lang.String, java.lang.String) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        java.lang.String r1, r2;
        javassist.NotFoundException $r3;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new javassist.NotFoundException;

        specialinvoke $r3.<javassist.NotFoundException: void <init>(java.lang.String)>(r1);

        throw $r3;
    }

    javassist.CtField getField2(java.lang.String, java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1, r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public javassist.CtField[] getDeclaredFields()
    {
        javassist.CtClass r0;
        javassist.CtField[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = newarray (javassist.CtField)[0];

        return $r1;
    }

    public javassist.CtField getDeclaredField(java.lang.String) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        java.lang.String r1;
        javassist.NotFoundException $r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        $r2 = new javassist.NotFoundException;

        specialinvoke $r2.<javassist.NotFoundException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public javassist.CtField getDeclaredField(java.lang.String, java.lang.String) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        java.lang.String r1, r2;
        javassist.NotFoundException $r3;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new javassist.NotFoundException;

        specialinvoke $r3.<javassist.NotFoundException: void <init>(java.lang.String)>(r1);

        throw $r3;
    }

    public javassist.CtBehavior[] getDeclaredBehaviors()
    {
        javassist.CtClass r0;
        javassist.CtBehavior[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = newarray (javassist.CtBehavior)[0];

        return $r1;
    }

    public javassist.CtConstructor[] getConstructors()
    {
        javassist.CtClass r0;
        javassist.CtConstructor[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = newarray (javassist.CtConstructor)[0];

        return $r1;
    }

    public javassist.CtConstructor getConstructor(java.lang.String) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        java.lang.String r1;
        javassist.NotFoundException $r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        $r2 = new javassist.NotFoundException;

        specialinvoke $r2.<javassist.NotFoundException: void <init>(java.lang.String)>("no such constructor");

        throw $r2;
    }

    public javassist.CtConstructor[] getDeclaredConstructors()
    {
        javassist.CtClass r0;
        javassist.CtConstructor[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = newarray (javassist.CtConstructor)[0];

        return $r1;
    }

    public javassist.CtConstructor getDeclaredConstructor(javassist.CtClass[]) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        javassist.CtClass[] r1;
        java.lang.String r2;
        javassist.CtConstructor $r3;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtClass[];

        r2 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String ofConstructor(javassist.CtClass[])>(r1);

        $r3 = virtualinvoke r0.<javassist.CtClass: javassist.CtConstructor getConstructor(java.lang.String)>(r2);

        return $r3;
    }

    public javassist.CtConstructor getClassInitializer()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return null;
    }

    public javassist.CtMethod[] getMethods()
    {
        javassist.CtClass r0;
        javassist.CtMethod[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = newarray (javassist.CtMethod)[0];

        return $r1;
    }

    public javassist.CtMethod getMethod(java.lang.String, java.lang.String) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        java.lang.String r1, r2;
        javassist.NotFoundException $r3;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new javassist.NotFoundException;

        specialinvoke $r3.<javassist.NotFoundException: void <init>(java.lang.String)>(r1);

        throw $r3;
    }

    public javassist.CtMethod[] getDeclaredMethods()
    {
        javassist.CtClass r0;
        javassist.CtMethod[] $r1;

        r0 := @this: javassist.CtClass;

        $r1 = newarray (javassist.CtMethod)[0];

        return $r1;
    }

    public javassist.CtMethod getDeclaredMethod(java.lang.String, javassist.CtClass[]) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        java.lang.String r1;
        javassist.CtClass[] r2;
        javassist.NotFoundException $r3;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javassist.CtClass[];

        $r3 = new javassist.NotFoundException;

        specialinvoke $r3.<javassist.NotFoundException: void <init>(java.lang.String)>(r1);

        throw $r3;
    }

    public javassist.CtMethod[] getDeclaredMethods(java.lang.String) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        java.lang.String r1;
        javassist.NotFoundException $r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        $r2 = new javassist.NotFoundException;

        specialinvoke $r2.<javassist.NotFoundException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public javassist.CtMethod getDeclaredMethod(java.lang.String) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        java.lang.String r1;
        javassist.NotFoundException $r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        $r2 = new javassist.NotFoundException;

        specialinvoke $r2.<javassist.NotFoundException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public javassist.CtConstructor makeClassInitializer() throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        javassist.CannotCompileException $r1;

        r0 := @this: javassist.CtClass;

        $r1 = new javassist.CannotCompileException;

        specialinvoke $r1.<javassist.CannotCompileException: void <init>(java.lang.String)>("not a class");

        throw $r1;
    }

    public void addConstructor(javassist.CtConstructor) throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        javassist.CtConstructor r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtConstructor;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public void removeConstructor(javassist.CtConstructor) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        javassist.CtConstructor r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtConstructor;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public void addMethod(javassist.CtMethod) throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        javassist.CtMethod r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtMethod;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public void removeMethod(javassist.CtMethod) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        javassist.CtMethod r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtMethod;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public void addField(javassist.CtField) throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        javassist.CtField r1;
        javassist.CtField$Initializer $r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtField;

        $r2 = (javassist.CtField$Initializer) null;

        virtualinvoke r0.<javassist.CtClass: void addField(javassist.CtField,javassist.CtField$Initializer)>(r1, $r2);

        return;
    }

    public void addField(javassist.CtField, java.lang.String) throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        javassist.CtField r1;
        java.lang.String r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtField;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public void addField(javassist.CtField, javassist.CtField$Initializer) throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        javassist.CtField r1;
        javassist.CtField$Initializer r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtField;

        r2 := @parameter1: javassist.CtField$Initializer;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public void removeField(javassist.CtField) throws javassist.NotFoundException
    {
        javassist.CtClass r0;
        javassist.CtField r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CtField;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public byte[] getAttribute(java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public void setAttribute(java.lang.String, byte[])
    {
        javassist.CtClass r0;
        java.lang.String r1;
        byte[] r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public void instrument(javassist.CodeConverter) throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        javassist.CodeConverter r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.CodeConverter;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public void instrument(javassist.expr.ExprEditor) throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        javassist.expr.ExprEditor r1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: javassist.expr.ExprEditor;

        virtualinvoke r0.<javassist.CtClass: void checkModify()>();

        return;
    }

    public java.lang.Class toClass() throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        javassist.ClassPool $r1;
        java.lang.Class $r2;

        r0 := @this: javassist.CtClass;

        $r1 = virtualinvoke r0.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r2 = virtualinvoke $r1.<javassist.ClassPool: java.lang.Class toClass(javassist.CtClass)>(r0);

        return $r2;
    }

    public java.lang.Class toClass(java.lang.Class) throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        java.lang.Class r1, $r3;
        javassist.ClassPool $r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r3 = virtualinvoke $r2.<javassist.ClassPool: java.lang.Class toClass(javassist.CtClass,java.lang.Class)>(r0, r1);

        return $r3;
    }

    public java.lang.Class toClass(java.lang.invoke.MethodHandles$Lookup) throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        java.lang.invoke.MethodHandles$Lookup r1;
        javassist.ClassPool $r2;
        java.lang.Class $r3;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.invoke.MethodHandles$Lookup;

        $r2 = virtualinvoke r0.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r3 = virtualinvoke $r2.<javassist.ClassPool: java.lang.Class toClass(javassist.CtClass,java.lang.invoke.MethodHandles$Lookup)>(r0, r1);

        return $r3;
    }

    public java.lang.Class toClass(java.lang.ClassLoader, java.security.ProtectionDomain) throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        java.security.ProtectionDomain r1;
        javassist.ClassPool r2;
        java.lang.Class $r3;
        java.lang.ClassLoader r4;

        r0 := @this: javassist.CtClass;

        r4 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.security.ProtectionDomain;

        r2 = virtualinvoke r0.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        if r4 != null goto label1;

        r4 = virtualinvoke r2.<javassist.ClassPool: java.lang.ClassLoader getClassLoader()>();

     label1:
        $r3 = virtualinvoke r2.<javassist.ClassPool: java.lang.Class toClass(javassist.CtClass,java.lang.Class,java.lang.ClassLoader,java.security.ProtectionDomain)>(r0, null, r4, r1);

        return $r3;
    }

    public final java.lang.Class toClass(java.lang.ClassLoader) throws javassist.CannotCompileException
    {
        javassist.CtClass r0;
        java.lang.ClassLoader r1;
        javassist.ClassPool $r2;
        java.lang.Class $r3;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.ClassLoader;

        $r2 = virtualinvoke r0.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r3 = virtualinvoke $r2.<javassist.ClassPool: java.lang.Class toClass(javassist.CtClass,java.lang.Class,java.lang.ClassLoader,java.security.ProtectionDomain)>(r0, null, r1, null);

        return $r3;
    }

    public void detach()
    {
        javassist.CtClass r0, r2;
        javassist.ClassPool r1;
        java.lang.String $r3, $r4;

        r0 := @this: javassist.CtClass;

        r1 = virtualinvoke r0.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r3 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        r2 = virtualinvoke r1.<javassist.ClassPool: javassist.CtClass removeCached(java.lang.String)>($r3);

        if r2 == r0 goto label1;

        $r4 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        virtualinvoke r1.<javassist.ClassPool: void cacheCtClass(java.lang.String,javassist.CtClass,boolean)>($r4, r2, 0);

     label1:
        return;
    }

    public boolean stopPruning(boolean)
    {
        javassist.CtClass r0;
        boolean z0;

        r0 := @this: javassist.CtClass;

        z0 := @parameter0: boolean;

        return 1;
    }

    public void prune()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return;
    }

    void incGetCounter()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return;
    }

    public void rebuildClassFile()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return;
    }

    public byte[] toBytecode() throws java.io.IOException, javassist.CannotCompileException
    {
        javassist.CtClass r0;
        java.io.ByteArrayOutputStream $r4;
        java.io.DataOutputStream $r5;
        byte[] $r6;
        java.lang.Throwable $r7;

        r0 := @this: javassist.CtClass;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        $r5 = new java.io.DataOutputStream;

        specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r4);

     label1:
        virtualinvoke r0.<javassist.CtClass: void toBytecode(java.io.DataOutputStream)>($r5);

     label2:
        virtualinvoke $r5.<java.io.DataOutputStream: void close()>();

        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r5.<java.io.DataOutputStream: void close()>();

        throw $r7;

     label4:
        $r6 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void writeFile() throws javassist.NotFoundException, java.io.IOException, javassist.CannotCompileException
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        virtualinvoke r0.<javassist.CtClass: void writeFile(java.lang.String)>(".");

        return;
    }

    public void writeFile(java.lang.String) throws javassist.CannotCompileException, java.io.IOException
    {
        javassist.CtClass r0;
        java.lang.String r1;
        java.io.DataOutputStream r2;
        java.lang.Throwable $r4;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<javassist.CtClass: java.io.DataOutputStream makeFileOutput(java.lang.String)>(r1);

     label1:
        virtualinvoke r0.<javassist.CtClass: void toBytecode(java.io.DataOutputStream)>(r2);

     label2:
        virtualinvoke r2.<java.io.DataOutputStream: void close()>();

        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r2.<java.io.DataOutputStream: void close()>();

        throw $r4;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected java.io.DataOutputStream makeFileOutput(java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1, r2, r3, r4, $r8;
        int i0;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10;
        char $c1, $c2, $c3;
        boolean $z0;
        java.io.File $r11;
        java.io.DataOutputStream $r12;
        java.io.BufferedOutputStream $r13;
        javassist.CtClass$DelayedFileOutputStream $r14;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $c1 = <java.io.File: char separatorChar>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $c2 = <java.io.File: char separatorChar>;

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(46, $c2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $c3 = <java.io.File: char separatorChar>;

        i0 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>($c3);

        if i0 <= 0 goto label1;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(".");

        if $z0 != 0 goto label1;

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>(r4);

        virtualinvoke $r11.<java.io.File: boolean mkdirs()>();

     label1:
        $r12 = new java.io.DataOutputStream;

        $r13 = new java.io.BufferedOutputStream;

        $r14 = new javassist.CtClass$DelayedFileOutputStream;

        specialinvoke $r14.<javassist.CtClass$DelayedFileOutputStream: void <init>(java.lang.String)>(r3);

        specialinvoke $r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r14);

        specialinvoke $r12.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r13);

        return $r12;
    }

    public void debugWriteFile()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        virtualinvoke r0.<javassist.CtClass: void debugWriteFile(java.lang.String)>(".");

        return;
    }

    public void debugWriteFile(java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1;
        java.lang.Exception $r2;
        java.lang.RuntimeException $r3;
        boolean z1;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

     label1:
        z1 = virtualinvoke r0.<javassist.CtClass: boolean stopPruning(boolean)>(1);

        virtualinvoke r0.<javassist.CtClass: void writeFile(java.lang.String)>(r1);

        virtualinvoke r0.<javassist.CtClass: void defrost()>();

        virtualinvoke r0.<javassist.CtClass: boolean stopPruning(boolean)>(z1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void toBytecode(java.io.DataOutputStream) throws javassist.CannotCompileException, java.io.IOException
    {
        javassist.CtClass r0;
        java.io.DataOutputStream r1;
        javassist.CannotCompileException $r2;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.io.DataOutputStream;

        $r2 = new javassist.CannotCompileException;

        specialinvoke $r2.<javassist.CannotCompileException: void <init>(java.lang.String)>("not a class");

        throw $r2;
    }

    public java.lang.String makeUniqueName(java.lang.String)
    {
        javassist.CtClass r0;
        java.lang.String r1, $r5, $r7;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;

        r0 := @this: javassist.CtClass;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not available in ");

        $r5 = virtualinvoke r0.<javassist.CtClass: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    void compress()
    {
        javassist.CtClass r0;

        r0 := @this: javassist.CtClass;

        return;
    }

    static void <clinit>()
    {
        javassist.CtClass[] $r0, $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27;
        javassist.CtPrimitiveType $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25;
        javassist.CtClass $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26;

        <javassist.CtClass: java.lang.String javaLangObject> = "java.lang.Object";

        <javassist.CtClass: java.lang.String version> = "3.24.0-GA";

        <javassist.CtClass: java.lang.String debugDump> = null;

        $r0 = newarray (javassist.CtClass)[9];

        <javassist.CtClass: javassist.CtClass[] primitiveTypes> = $r0;

        $r1 = new javassist.CtPrimitiveType;

        specialinvoke $r1.<javassist.CtPrimitiveType: void <init>(java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,int,int,int)>("boolean", 90, "java.lang.Boolean", "booleanValue", "()Z", 172, 4, 1);

        <javassist.CtClass: javassist.CtClass booleanType> = $r1;

        $r3 = <javassist.CtClass: javassist.CtClass[] primitiveTypes>;

        $r2 = <javassist.CtClass: javassist.CtClass booleanType>;

        $r3[0] = $r2;

        $r4 = new javassist.CtPrimitiveType;

        specialinvoke $r4.<javassist.CtPrimitiveType: void <init>(java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,int,int,int)>("char", 67, "java.lang.Character", "charValue", "()C", 172, 5, 1);

        <javassist.CtClass: javassist.CtClass charType> = $r4;

        $r6 = <javassist.CtClass: javassist.CtClass[] primitiveTypes>;

        $r5 = <javassist.CtClass: javassist.CtClass charType>;

        $r6[1] = $r5;

        $r7 = new javassist.CtPrimitiveType;

        specialinvoke $r7.<javassist.CtPrimitiveType: void <init>(java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,int,int,int)>("byte", 66, "java.lang.Byte", "byteValue", "()B", 172, 8, 1);

        <javassist.CtClass: javassist.CtClass byteType> = $r7;

        $r9 = <javassist.CtClass: javassist.CtClass[] primitiveTypes>;

        $r8 = <javassist.CtClass: javassist.CtClass byteType>;

        $r9[2] = $r8;

        $r10 = new javassist.CtPrimitiveType;

        specialinvoke $r10.<javassist.CtPrimitiveType: void <init>(java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,int,int,int)>("short", 83, "java.lang.Short", "shortValue", "()S", 172, 9, 1);

        <javassist.CtClass: javassist.CtClass shortType> = $r10;

        $r12 = <javassist.CtClass: javassist.CtClass[] primitiveTypes>;

        $r11 = <javassist.CtClass: javassist.CtClass shortType>;

        $r12[3] = $r11;

        $r13 = new javassist.CtPrimitiveType;

        specialinvoke $r13.<javassist.CtPrimitiveType: void <init>(java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,int,int,int)>("int", 73, "java.lang.Integer", "intValue", "()I", 172, 10, 1);

        <javassist.CtClass: javassist.CtClass intType> = $r13;

        $r15 = <javassist.CtClass: javassist.CtClass[] primitiveTypes>;

        $r14 = <javassist.CtClass: javassist.CtClass intType>;

        $r15[4] = $r14;

        $r16 = new javassist.CtPrimitiveType;

        specialinvoke $r16.<javassist.CtPrimitiveType: void <init>(java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,int,int,int)>("long", 74, "java.lang.Long", "longValue", "()J", 173, 11, 2);

        <javassist.CtClass: javassist.CtClass longType> = $r16;

        $r18 = <javassist.CtClass: javassist.CtClass[] primitiveTypes>;

        $r17 = <javassist.CtClass: javassist.CtClass longType>;

        $r18[5] = $r17;

        $r19 = new javassist.CtPrimitiveType;

        specialinvoke $r19.<javassist.CtPrimitiveType: void <init>(java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,int,int,int)>("float", 70, "java.lang.Float", "floatValue", "()F", 174, 6, 1);

        <javassist.CtClass: javassist.CtClass floatType> = $r19;

        $r21 = <javassist.CtClass: javassist.CtClass[] primitiveTypes>;

        $r20 = <javassist.CtClass: javassist.CtClass floatType>;

        $r21[6] = $r20;

        $r22 = new javassist.CtPrimitiveType;

        specialinvoke $r22.<javassist.CtPrimitiveType: void <init>(java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,int,int,int)>("double", 68, "java.lang.Double", "doubleValue", "()D", 175, 7, 2);

        <javassist.CtClass: javassist.CtClass doubleType> = $r22;

        $r24 = <javassist.CtClass: javassist.CtClass[] primitiveTypes>;

        $r23 = <javassist.CtClass: javassist.CtClass doubleType>;

        $r24[7] = $r23;

        $r25 = new javassist.CtPrimitiveType;

        specialinvoke $r25.<javassist.CtPrimitiveType: void <init>(java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,int,int,int)>("void", 86, "java.lang.Void", null, null, 177, 0, 0);

        <javassist.CtClass: javassist.CtClass voidType> = $r25;

        $r27 = <javassist.CtClass: javassist.CtClass[] primitiveTypes>;

        $r26 = <javassist.CtClass: javassist.CtClass voidType>;

        $r27[8] = $r26;

        return;
    }
}
