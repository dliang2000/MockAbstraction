public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer
{
    protected final java.lang.Boolean _unwrapSingle;

    protected void <init>(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase r0;
        java.lang.Class r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class,boolean)>(r1, 0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: java.lang.Boolean _unwrapSingle> = null;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase r0, r1;
        java.lang.Boolean r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;

        r2 := @parameter1: java.lang.Boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: java.lang.Boolean _unwrapSingle> = r2;

        return;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, java.lang.Boolean);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember r3;
        java.lang.Object r4;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Boolean $r7, r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r8, r10, r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r12;
        java.lang.Class $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r10 = null;

        r11 = null;

        if r2 == null goto label1;

        r12 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        r3 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();

        if r3 == null goto label1;

        r4 = virtualinvoke r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findContentSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r3);

        if r4 == null goto label1;

        r10 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(r3, r4);

     label1:
        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: java.lang.Class handledType()>();

        r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(r1, r2, $r13);

        if r14 == null goto label2;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;

        r11 = virtualinvoke r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getFeature(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature)>($r9);

     label2:
        r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findContextualConvertingSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r2, r10);

        if r15 != null goto label3;

        r15 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(class "Ljava/lang/String;", r2);

     label3:
        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: boolean isDefaultSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r15);

        if $z0 == 0 goto label5;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: java.lang.Boolean _unwrapSingle>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r11, $r7);

        if $z1 == 0 goto label4;

        return r0;

     label4:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean)>(r2, r11);

        return $r8;

     label5:
        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(class "Ljava/lang/String;");

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>($r6, 1, null, r15);

        return $r5;
    }

    public boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.util.Collection r2;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.util.Collection;

        if r2 == null goto label1;

        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode getSchema(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.reflect.Type r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.reflect.Type;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("array", 1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode contentSchema()>();

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode set(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)>("items", $r4);

        return $r5;
    }

    public void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor expectArrayFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

        if r3 == null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: void acceptContentVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor)>(r3);

     label1:
        return;
    }

    protected abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode contentSchema();

    protected abstract void acceptContentVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException;

    public abstract void serializeWithType(java.util.Collection, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException;

    public volatile boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.Object r2;
        java.util.Collection $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Collection) r2;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection)>(r1, $r3);

        return $z0;
    }

    public volatile void serializeWithType(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        java.util.Collection $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r5 = (java.util.Collection) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: void serializeWithType(java.util.Collection,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r5, r2, r3, r4);

        return;
    }
}
