public final class org.apache.flink.shaded.guava18.com.google.common.base.Enums extends java.lang.Object
{
    private static final java.util.Map enumConstantCache;

    private void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Enums r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Enums;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.reflect.Field getField(java.lang.Enum)
    {
        java.lang.Enum r0;
        java.lang.Class r1;
        java.lang.String $r3;
        java.lang.reflect.Field $r4;
        java.lang.NoSuchFieldException $r5;
        java.lang.AssertionError $r6;

        r0 := @parameter0: java.lang.Enum;

        r1 = virtualinvoke r0.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

     label1:
        $r3 = virtualinvoke r0.<java.lang.Enum: java.lang.String name()>();

        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r6;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.base.Optional getIfPresent(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Optional $r4;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Platform: org.apache.flink.shaded.guava18.com.google.common.base.Optional getEnumIfPresent(java.lang.Class,java.lang.String)>(r0, r1);

        return $r4;
    }

    private static java.util.Map populateCache(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.Iterator r2;
        java.lang.Enum r3;
        java.util.HashMap $r4;
        java.util.EnumSet $r5;
        boolean $z0;
        java.util.Map $r6;
        java.lang.Object $r8;
        java.lang.String $r9;
        java.lang.ref.WeakReference $r10;

        r0 := @parameter0: java.lang.Class;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(r0);

        r2 = virtualinvoke $r5.<java.util.EnumSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Enum) $r8;

        $r9 = virtualinvoke r3.<java.lang.Enum: java.lang.String name()>();

        $r10 = new java.lang.ref.WeakReference;

        specialinvoke $r10.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r3);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        goto label1;

     label2:
        $r6 = <org.apache.flink.shaded.guava18.com.google.common.base.Enums: java.util.Map enumConstantCache>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r4);

        return $r4;
    }

    static java.util.Map getEnumConstants(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.Map $r3, $r4, r8;
        java.lang.Object $r5;
        java.lang.Throwable $r7;

        r0 := @parameter0: java.lang.Class;

        $r3 = <org.apache.flink.shaded.guava18.com.google.common.base.Enums: java.util.Map enumConstantCache>;

        entermonitor $r3;

     label1:
        $r4 = <org.apache.flink.shaded.guava18.com.google.common.base.Enums: java.util.Map enumConstantCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r8 = (java.util.Map) $r5;

        if r8 != null goto label2;

        r8 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Enums: java.util.Map populateCache(java.lang.Class)>(r0);

     label2:
        exitmonitor $r3;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.base.Converter stringConverter(java.lang.Class)
    {
        java.lang.Class r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Enums$StringConverter $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.base.Enums$StringConverter;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.base.Enums$StringConverter: void <init>(java.lang.Class)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <org.apache.flink.shaded.guava18.com.google.common.base.Enums: java.util.Map enumConstantCache> = $r0;

        return;
    }
}
