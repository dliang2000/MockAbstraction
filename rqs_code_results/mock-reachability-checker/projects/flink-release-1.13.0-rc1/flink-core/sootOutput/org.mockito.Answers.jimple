public final enum class org.mockito.Answers extends java.lang.Enum implements org.mockito.stubbing.Answer
{
    public static final enum org.mockito.Answers RETURNS_DEFAULTS;
    public static final enum org.mockito.Answers RETURNS_SMART_NULLS;
    public static final enum org.mockito.Answers RETURNS_MOCKS;
    public static final enum org.mockito.Answers RETURNS_DEEP_STUBS;
    public static final enum org.mockito.Answers CALLS_REAL_METHODS;
    public static final enum org.mockito.Answers RETURNS_SELF;
    private final org.mockito.stubbing.Answer implementation;
    private static final org.mockito.Answers[] $VALUES;

    public static org.mockito.Answers[] values()
    {
        org.mockito.Answers[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.mockito.Answers: org.mockito.Answers[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.mockito.Answers[]) $r1;

        return $r2;
    }

    public static org.mockito.Answers valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.mockito.Answers $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/mockito/Answers;", r0);

        $r2 = (org.mockito.Answers) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, org.mockito.stubbing.Answer)
    {
        org.mockito.Answers r0;
        java.lang.String r1;
        int i0;
        org.mockito.stubbing.Answer r2;

        r0 := @this: org.mockito.Answers;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.mockito.stubbing.Answer;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.mockito.Answers: org.mockito.stubbing.Answer implementation> = r2;

        return;
    }

    public org.mockito.stubbing.Answer get()
    {
        org.mockito.Answers r0;

        r0 := @this: org.mockito.Answers;

        return r0;
    }

    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable
    {
        org.mockito.Answers r0;
        org.mockito.invocation.InvocationOnMock r1;
        org.mockito.stubbing.Answer $r2;
        java.lang.Object $r3;

        r0 := @this: org.mockito.Answers;

        r1 := @parameter0: org.mockito.invocation.InvocationOnMock;

        $r2 = r0.<org.mockito.Answers: org.mockito.stubbing.Answer implementation>;

        $r3 = interfaceinvoke $r2.<org.mockito.stubbing.Answer: java.lang.Object answer(org.mockito.invocation.InvocationOnMock)>(r1);

        return $r3;
    }

    static void <clinit>()
    {
        org.mockito.Answers $r0, $r2, $r4, $r6, $r8, $r10, $r13, $r14, $r15, $r16, $r17, $r18;
        org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer $r1;
        org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls $r3;
        org.mockito.internal.stubbing.defaultanswers.ReturnsMocks $r5;
        org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs $r7;
        org.mockito.internal.stubbing.answers.CallsRealMethods $r9;
        org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf $r11;
        org.mockito.Answers[] $r12;

        $r0 = new org.mockito.Answers;

        $r1 = new org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer;

        specialinvoke $r1.<org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer: void <init>()>();

        specialinvoke $r0.<org.mockito.Answers: void <init>(java.lang.String,int,org.mockito.stubbing.Answer)>("RETURNS_DEFAULTS", 0, $r1);

        <org.mockito.Answers: org.mockito.Answers RETURNS_DEFAULTS> = $r0;

        $r2 = new org.mockito.Answers;

        $r3 = new org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls;

        specialinvoke $r3.<org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls: void <init>()>();

        specialinvoke $r2.<org.mockito.Answers: void <init>(java.lang.String,int,org.mockito.stubbing.Answer)>("RETURNS_SMART_NULLS", 1, $r3);

        <org.mockito.Answers: org.mockito.Answers RETURNS_SMART_NULLS> = $r2;

        $r4 = new org.mockito.Answers;

        $r5 = new org.mockito.internal.stubbing.defaultanswers.ReturnsMocks;

        specialinvoke $r5.<org.mockito.internal.stubbing.defaultanswers.ReturnsMocks: void <init>()>();

        specialinvoke $r4.<org.mockito.Answers: void <init>(java.lang.String,int,org.mockito.stubbing.Answer)>("RETURNS_MOCKS", 2, $r5);

        <org.mockito.Answers: org.mockito.Answers RETURNS_MOCKS> = $r4;

        $r6 = new org.mockito.Answers;

        $r7 = new org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs;

        specialinvoke $r7.<org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs: void <init>()>();

        specialinvoke $r6.<org.mockito.Answers: void <init>(java.lang.String,int,org.mockito.stubbing.Answer)>("RETURNS_DEEP_STUBS", 3, $r7);

        <org.mockito.Answers: org.mockito.Answers RETURNS_DEEP_STUBS> = $r6;

        $r8 = new org.mockito.Answers;

        $r9 = new org.mockito.internal.stubbing.answers.CallsRealMethods;

        specialinvoke $r9.<org.mockito.internal.stubbing.answers.CallsRealMethods: void <init>()>();

        specialinvoke $r8.<org.mockito.Answers: void <init>(java.lang.String,int,org.mockito.stubbing.Answer)>("CALLS_REAL_METHODS", 4, $r9);

        <org.mockito.Answers: org.mockito.Answers CALLS_REAL_METHODS> = $r8;

        $r10 = new org.mockito.Answers;

        $r11 = new org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf;

        specialinvoke $r11.<org.mockito.internal.stubbing.defaultanswers.TriesToReturnSelf: void <init>()>();

        specialinvoke $r10.<org.mockito.Answers: void <init>(java.lang.String,int,org.mockito.stubbing.Answer)>("RETURNS_SELF", 5, $r11);

        <org.mockito.Answers: org.mockito.Answers RETURNS_SELF> = $r10;

        $r12 = newarray (org.mockito.Answers)[6];

        $r13 = <org.mockito.Answers: org.mockito.Answers RETURNS_DEFAULTS>;

        $r12[0] = $r13;

        $r14 = <org.mockito.Answers: org.mockito.Answers RETURNS_SMART_NULLS>;

        $r12[1] = $r14;

        $r15 = <org.mockito.Answers: org.mockito.Answers RETURNS_MOCKS>;

        $r12[2] = $r15;

        $r16 = <org.mockito.Answers: org.mockito.Answers RETURNS_DEEP_STUBS>;

        $r12[3] = $r16;

        $r17 = <org.mockito.Answers: org.mockito.Answers CALLS_REAL_METHODS>;

        $r12[4] = $r17;

        $r18 = <org.mockito.Answers: org.mockito.Answers RETURNS_SELF>;

        $r12[5] = $r18;

        <org.mockito.Answers: org.mockito.Answers[] $VALUES> = $r12;

        return;
    }
}
