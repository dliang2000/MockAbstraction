public final class org.apache.flink.api.common.functions.util.FunctionUtils extends java.lang.Object
{

    public static void openFunction(org.apache.flink.api.common.functions.Function, org.apache.flink.configuration.Configuration) throws java.lang.Exception
    {
        org.apache.flink.api.common.functions.Function r0;
        org.apache.flink.configuration.Configuration r1;
        org.apache.flink.api.common.functions.RichFunction r2;
        boolean $z0;

        r0 := @parameter0: org.apache.flink.api.common.functions.Function;

        r1 := @parameter1: org.apache.flink.configuration.Configuration;

        $z0 = r0 instanceof org.apache.flink.api.common.functions.RichFunction;

        if $z0 == 0 goto label1;

        r2 = (org.apache.flink.api.common.functions.RichFunction) r0;

        interfaceinvoke r2.<org.apache.flink.api.common.functions.RichFunction: void open(org.apache.flink.configuration.Configuration)>(r1);

     label1:
        return;
    }

    public static void closeFunction(org.apache.flink.api.common.functions.Function) throws java.lang.Exception
    {
        org.apache.flink.api.common.functions.Function r0;
        org.apache.flink.api.common.functions.RichFunction r1;
        boolean $z0;

        r0 := @parameter0: org.apache.flink.api.common.functions.Function;

        $z0 = r0 instanceof org.apache.flink.api.common.functions.RichFunction;

        if $z0 == 0 goto label1;

        r1 = (org.apache.flink.api.common.functions.RichFunction) r0;

        interfaceinvoke r1.<org.apache.flink.api.common.functions.RichFunction: void close()>();

     label1:
        return;
    }

    public static void setFunctionRuntimeContext(org.apache.flink.api.common.functions.Function, org.apache.flink.api.common.functions.RuntimeContext)
    {
        org.apache.flink.api.common.functions.Function r0;
        org.apache.flink.api.common.functions.RuntimeContext r1;
        org.apache.flink.api.common.functions.RichFunction r2;
        boolean $z0;

        r0 := @parameter0: org.apache.flink.api.common.functions.Function;

        r1 := @parameter1: org.apache.flink.api.common.functions.RuntimeContext;

        $z0 = r0 instanceof org.apache.flink.api.common.functions.RichFunction;

        if $z0 == 0 goto label1;

        r2 = (org.apache.flink.api.common.functions.RichFunction) r0;

        interfaceinvoke r2.<org.apache.flink.api.common.functions.RichFunction: void setRuntimeContext(org.apache.flink.api.common.functions.RuntimeContext)>(r1);

     label1:
        return;
    }

    public static org.apache.flink.api.common.functions.RuntimeContext getFunctionRuntimeContext(org.apache.flink.api.common.functions.Function, org.apache.flink.api.common.functions.RuntimeContext)
    {
        org.apache.flink.api.common.functions.Function r0;
        org.apache.flink.api.common.functions.RuntimeContext r1, $r3;
        org.apache.flink.api.common.functions.RichFunction r2;
        boolean $z0;

        r0 := @parameter0: org.apache.flink.api.common.functions.Function;

        r1 := @parameter1: org.apache.flink.api.common.functions.RuntimeContext;

        $z0 = r0 instanceof org.apache.flink.api.common.functions.RichFunction;

        if $z0 == 0 goto label1;

        r2 = (org.apache.flink.api.common.functions.RichFunction) r0;

        $r3 = interfaceinvoke r2.<org.apache.flink.api.common.functions.RichFunction: org.apache.flink.api.common.functions.RuntimeContext getRuntimeContext()>();

        return $r3;

     label1:
        return r1;
    }

    private void <init>()
    {
        org.apache.flink.api.common.functions.util.FunctionUtils r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.flink.api.common.functions.util.FunctionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>()>();

        throw $r1;
    }
}
