class org.powermock.reflect.internal.proxy.UnproxiedTypeFactory extends java.lang.Object
{
    private static final java.lang.String[] RESTRICTED_INTERFACES;

    void <init>()
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory r0;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    org.powermock.reflect.internal.proxy.UnproxiedType createFromInterfaces(java.lang.Class[])
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory r0;
        java.lang.Class[] r1, r2;
        int $i0, $i1;
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl $r3, $r4, $r6;
        java.lang.Class $r5;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory;

        r1 := @parameter0: java.lang.Class[];

        r2 = specialinvoke r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory: java.lang.Class[] filterInterfaces(java.lang.Class[])>(r1);

        $i0 = lengthof r2;

        if $i0 != 0 goto label1;

        $r6 = new org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        specialinvoke $r6.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: void <init>(java.lang.Class,org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1)>(class "Ljava/lang/Object;", null);

        return $r6;

     label1:
        $i1 = lengthof r2;

        if $i1 != 1 goto label2;

        $r4 = new org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        $r5 = r2[0];

        specialinvoke $r4.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: void <init>(java.lang.Class,org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1)>($r5, null);

        return $r4;

     label2:
        $r3 = new org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        specialinvoke $r3.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: void <init>(java.lang.Class[],org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1)>(r2, null);

        return $r3;
    }

    org.powermock.reflect.internal.proxy.UnproxiedType createFromSuperclassAndInterfaces(java.lang.Class, java.lang.Class[])
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory r0;
        java.lang.Class r1, $r4;
        java.lang.Class[] r2, r3;
        boolean $z0;
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl $r5;
        org.powermock.reflect.internal.proxy.UnproxiedType $r6;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        $r4 = class "Ljava/lang/Object;";

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory: org.powermock.reflect.internal.proxy.UnproxiedType createFromInterfaces(java.lang.Class[])>(r2);

        return $r6;

     label1:
        r3 = specialinvoke r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory: java.lang.Class[] filterInterfaces(java.lang.Class[])>(r2);

        $r5 = new org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        specialinvoke $r5.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: void <init>(java.lang.Class,java.lang.Class[],org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1)>(r1, r3, null);

        return $r5;
    }

    org.powermock.reflect.internal.proxy.UnproxiedType createFromType(java.lang.Class)
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory r0;
        java.lang.Class r1;
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl $r2;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = new org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl;

        specialinvoke $r2.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$UnproxiedTypeImpl: void <init>(java.lang.Class,org.powermock.reflect.internal.proxy.UnproxiedTypeFactory$1)>(r1, null);

        return $r2;
    }

    private java.lang.Class[] filterInterfaces(java.lang.Class[])
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory r0;
        java.lang.Class[] r1, $r6, $r8;
        int i0, $i1, i2;
        java.lang.Class r4;
        java.util.ArrayList $r5;
        java.lang.Object[] $r7;
        boolean $z0;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory;

        r1 := @parameter0: java.lang.Class[];

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r4 = r1[i2];

        $z0 = specialinvoke r0.<org.powermock.reflect.internal.proxy.UnproxiedTypeFactory: boolean isMockFrameworkInterface(java.lang.Class)>(r4);

        if $z0 != 0 goto label2;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = newarray (java.lang.Class)[$i1];

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.lang.Class[]) $r7;

        return $r8;
    }

    private boolean isMockFrameworkInterface(java.lang.Class)
    {
        org.powermock.reflect.internal.proxy.UnproxiedTypeFactory r0;
        java.lang.Class r1;
        java.lang.String r2, r4;
        java.lang.String[] r3;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.powermock.reflect.internal.proxy.UnproxiedTypeFactory;

        r1 := @parameter0: java.lang.Class;

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        r3 = <org.powermock.reflect.internal.proxy.UnproxiedTypeFactory: java.lang.String[] RESTRICTED_INTERFACES>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>(r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "cglib.proxy.Factory";

        <org.powermock.reflect.internal.proxy.UnproxiedTypeFactory: java.lang.String[] RESTRICTED_INTERFACES> = $r0;

        return;
    }
}
