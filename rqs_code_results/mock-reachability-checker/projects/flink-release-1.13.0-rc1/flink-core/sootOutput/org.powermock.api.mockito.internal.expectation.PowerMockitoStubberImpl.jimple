public class org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl extends java.lang.Object implements org.powermock.api.mockito.expectation.PowerMockitoStubber, org.mockito.stubbing.Stubber
{
    private final org.mockito.stubbing.Stubber stubber;

    public void <init>(org.mockito.stubbing.Stubber)
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        org.mockito.stubbing.Stubber r1;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: org.mockito.stubbing.Stubber;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber> = r1;

        return;
    }

    public java.lang.Object when(java.lang.Object)
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Object r1, r3, r9;
        org.powermock.api.mockito.invocation.MockitoMethodInvocationControl r2;
        org.powermock.core.spi.MethodInvocationControl $r4;
        org.powermock.api.mockito.invocation.MockHandlerAdaptor $r5;
        org.mockito.stubbing.Stubber $r6, $r8;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Object;

        $r4 = staticinvoke <org.powermock.core.MockRepository: org.powermock.core.spi.MethodInvocationControl getInstanceMethodInvocationControl(java.lang.Object)>(r1);

        r2 = (org.powermock.api.mockito.invocation.MockitoMethodInvocationControl) $r4;

        if r2 != null goto label1;

        $r8 = r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber>;

        r9 = interfaceinvoke $r8.<org.mockito.stubbing.Stubber: java.lang.Object when(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r5 = virtualinvoke r2.<org.powermock.api.mockito.invocation.MockitoMethodInvocationControl: org.powermock.api.mockito.invocation.MockHandlerAdaptor getMockHandlerAdaptor()>();

        r3 = virtualinvoke $r5.<org.powermock.api.mockito.invocation.MockHandlerAdaptor: java.lang.Object getMock()>();

        $r6 = r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber>;

        interfaceinvoke $r6.<org.mockito.stubbing.Stubber: java.lang.Object when(java.lang.Object)>(r3);

        r9 = r1;

     label2:
        return r9;
    }

    public transient org.mockito.stubbing.Stubber doThrow(java.lang.Throwable[])
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Throwable[] r1;
        org.mockito.stubbing.Stubber $r2, $r3;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Throwable[];

        $r2 = r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber>;

        $r3 = interfaceinvoke $r2.<org.mockito.stubbing.Stubber: org.mockito.stubbing.Stubber doThrow(java.lang.Throwable[])>(r1);

        return $r3;
    }

    public org.mockito.stubbing.Stubber doThrow(java.lang.Class)
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Class r1;
        org.mockito.stubbing.Stubber $r2, $r3;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber>;

        $r3 = interfaceinvoke $r2.<org.mockito.stubbing.Stubber: org.mockito.stubbing.Stubber doThrow(java.lang.Class)>(r1);

        return $r3;
    }

    public org.mockito.stubbing.Stubber doThrow(java.lang.Class, java.lang.Class[])
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Class r1;
        java.lang.Class[] r2;
        org.mockito.stubbing.Stubber $r3, $r4;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        $r3 = r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber>;

        $r4 = interfaceinvoke $r3.<org.mockito.stubbing.Stubber: org.mockito.stubbing.Stubber doThrow(java.lang.Class,java.lang.Class[])>(r1, r2);

        return $r4;
    }

    public org.mockito.stubbing.Stubber doAnswer(org.mockito.stubbing.Answer)
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        org.mockito.stubbing.Answer r1;
        org.mockito.stubbing.Stubber $r2, $r3;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: org.mockito.stubbing.Answer;

        $r2 = r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber>;

        $r3 = interfaceinvoke $r2.<org.mockito.stubbing.Stubber: org.mockito.stubbing.Stubber doAnswer(org.mockito.stubbing.Answer)>(r1);

        return $r3;
    }

    public org.mockito.stubbing.Stubber doNothing()
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        org.mockito.stubbing.Stubber $r1, $r2;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        $r1 = r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber>;

        $r2 = interfaceinvoke $r1.<org.mockito.stubbing.Stubber: org.mockito.stubbing.Stubber doNothing()>();

        return $r2;
    }

    public org.mockito.stubbing.Stubber doReturn(java.lang.Object)
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Object r1;
        org.mockito.stubbing.Stubber $r2, $r3;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber>;

        $r3 = interfaceinvoke $r2.<org.mockito.stubbing.Stubber: org.mockito.stubbing.Stubber doReturn(java.lang.Object)>(r1);

        return $r3;
    }

    public transient org.mockito.stubbing.Stubber doReturn(java.lang.Object, java.lang.Object[])
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Object r1;
        java.lang.Object[] r2;
        org.mockito.stubbing.Stubber $r3, $r4;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber>;

        $r4 = interfaceinvoke $r3.<org.mockito.stubbing.Stubber: org.mockito.stubbing.Stubber doReturn(java.lang.Object,java.lang.Object[])>(r1, r2);

        return $r4;
    }

    public org.mockito.stubbing.Stubber doCallRealMethod()
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        org.mockito.stubbing.Stubber $r1, $r2;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        $r1 = r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber>;

        $r2 = interfaceinvoke $r1.<org.mockito.stubbing.Stubber: org.mockito.stubbing.Stubber doCallRealMethod()>();

        return $r2;
    }

    public void when(java.lang.Class)
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Class r1;
        org.powermock.api.mockito.invocation.MockitoMethodInvocationControl r2;
        java.lang.Object r3;
        org.powermock.core.spi.MethodInvocationControl $r4;
        org.powermock.api.mockito.invocation.MockHandlerAdaptor $r5;
        org.mockito.stubbing.Stubber $r6;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Class;

        $r4 = staticinvoke <org.powermock.core.MockRepository: org.powermock.core.spi.MethodInvocationControl getStaticMethodInvocationControl(java.lang.Class)>(r1);

        r2 = (org.powermock.api.mockito.invocation.MockitoMethodInvocationControl) $r4;

        $r5 = virtualinvoke r2.<org.powermock.api.mockito.invocation.MockitoMethodInvocationControl: org.powermock.api.mockito.invocation.MockHandlerAdaptor getMockHandlerAdaptor()>();

        r3 = virtualinvoke $r5.<org.powermock.api.mockito.invocation.MockHandlerAdaptor: java.lang.Object getMock()>();

        $r6 = r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: org.mockito.stubbing.Stubber stubber>;

        interfaceinvoke $r6.<org.mockito.stubbing.Stubber: java.lang.Object when(java.lang.Object)>(r3);

        return;
    }

    public org.powermock.api.mockito.expectation.PrivatelyExpectedArguments when(java.lang.Object, java.lang.reflect.Method) throws java.lang.Exception
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Object r1;
        java.lang.reflect.Method r2;
        org.powermock.api.mockito.internal.expectation.DefaultPrivatelyExpectedArguments $r4;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Method;

        specialinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void assertNotNull(java.lang.Object,java.lang.String)>(r1, "mock");

        specialinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void assertNotNull(java.lang.Object,java.lang.String)>(r2, "Method");

        virtualinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: java.lang.Object when(java.lang.Object)>(r1);

        $r4 = new org.powermock.api.mockito.internal.expectation.DefaultPrivatelyExpectedArguments;

        specialinvoke $r4.<org.powermock.api.mockito.internal.expectation.DefaultPrivatelyExpectedArguments: void <init>(java.lang.Object,java.lang.reflect.Method)>(r1, r2);

        return $r4;
    }

    public transient void when(java.lang.Object, java.lang.Object[]) throws java.lang.Exception
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Object r1;
        java.lang.Object[] r2;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        specialinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void assertNotNull(java.lang.Object,java.lang.String)>(r1, "mock");

        virtualinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: java.lang.Object when(java.lang.Object)>(r1);

        staticinvoke <org.powermock.reflect.Whitebox: java.lang.Object invokeMethod(java.lang.Object,java.lang.Object[])>(r1, r2);

        return;
    }

    public transient void when(java.lang.Object, java.lang.String, java.lang.Object[]) throws java.lang.Exception
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Object r1;
        java.lang.String r2;
        java.lang.Object[] r3;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        specialinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void assertNotNull(java.lang.Object,java.lang.String)>(r1, "mock");

        specialinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void assertNotNull(java.lang.Object,java.lang.String)>(r2, "methodToExpect");

        virtualinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: java.lang.Object when(java.lang.Object)>(r1);

        staticinvoke <org.powermock.reflect.Whitebox: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    public transient void when(java.lang.Class, java.lang.Object[]) throws java.lang.Exception
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Class r1;
        java.lang.Object[] r2;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object[];

        specialinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void assertNotNull(java.lang.Object,java.lang.String)>(r1, "classMock");

        virtualinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void when(java.lang.Class)>(r1);

        staticinvoke <org.powermock.reflect.Whitebox: java.lang.Object invokeMethod(java.lang.Class,java.lang.Object[])>(r1, r2);

        return;
    }

    public transient void when(java.lang.Class, java.lang.String, java.lang.Object[]) throws java.lang.Exception
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Class r1;
        java.lang.String r2;
        java.lang.Object[] r3;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        specialinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void assertNotNull(java.lang.Object,java.lang.String)>(r1, "classMock");

        specialinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void assertNotNull(java.lang.Object,java.lang.String)>(r2, "methodToExpect");

        virtualinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void when(java.lang.Class)>(r1);

        staticinvoke <org.powermock.reflect.Whitebox: java.lang.Object invokeMethod(java.lang.Class,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    public org.powermock.api.mockito.expectation.PrivatelyExpectedArguments when(java.lang.Class, java.lang.reflect.Method) throws java.lang.Exception
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Class r1;
        java.lang.reflect.Method r2;
        org.powermock.api.mockito.internal.expectation.DefaultPrivatelyExpectedArguments $r3;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Method;

        specialinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void assertNotNull(java.lang.Object,java.lang.String)>(r1, "classMock");

        specialinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void assertNotNull(java.lang.Object,java.lang.String)>(r2, "Method");

        virtualinvoke r0.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void when(java.lang.Class)>(r1);

        $r3 = new org.powermock.api.mockito.internal.expectation.DefaultPrivatelyExpectedArguments;

        specialinvoke $r3.<org.powermock.api.mockito.internal.expectation.DefaultPrivatelyExpectedArguments: void <init>(java.lang.Object,java.lang.reflect.Method)>(r1, r2);

        return $r3;
    }

    private void assertNotNull(java.lang.Object, java.lang.String)
    {
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl r0;
        java.lang.Object r1;
        java.lang.String r2, $r7;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be null");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        return;
    }
}
