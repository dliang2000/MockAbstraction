public class org.apache.logging.log4j.spi.Provider extends java.lang.Object
{
    public static final java.lang.String FACTORY_PRIORITY;
    public static final java.lang.String THREAD_CONTEXT_MAP;
    public static final java.lang.String LOGGER_CONTEXT_FACTORY;
    private static final java.lang.Integer DEFAULT_PRIORITY;
    private static final org.apache.logging.log4j.Logger LOGGER;
    private final java.lang.Integer priority;
    private final java.lang.String className;
    private final java.lang.Class loggerContextFactoryClass;
    private final java.lang.String threadContextMap;
    private final java.lang.Class threadContextMapClass;
    private final java.lang.String versions;
    private final java.net.URL url;
    private final java.lang.ref.WeakReference classLoader;

    public void <init>(java.util.Properties, java.net.URL, java.lang.ClassLoader)
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.util.Properties r1;
        java.net.URL r2;
        java.lang.ClassLoader r3;
        java.lang.String r4, $r6, $r7;
        java.lang.ref.WeakReference $r5;
        java.lang.Integer $r9;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        r1 := @parameter0: java.util.Properties;

        r2 := @parameter1: java.net.URL;

        r3 := @parameter2: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.logging.log4j.spi.Provider: java.net.URL url> = r2;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r3);

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.ref.WeakReference classLoader> = $r5;

        r4 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("FactoryPriority");

        if r4 != null goto label1;

        $r9 = <org.apache.logging.log4j.spi.Provider: java.lang.Integer DEFAULT_PRIORITY>;

        goto label2;

     label1:
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r4);

     label2:
        r0.<org.apache.logging.log4j.spi.Provider: java.lang.Integer priority> = $r9;

        $r6 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("LoggerContextFactory");

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className> = $r6;

        $r7 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("ThreadContextMap");

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.String threadContextMap> = $r7;

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass> = null;

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class threadContextMapClass> = null;

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.String versions> = null;

        return;
    }

    public void <init>(java.lang.Integer, java.lang.String, java.lang.Class)
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.lang.Integer r1;
        java.lang.String r2;
        java.lang.Class r3;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        specialinvoke r0.<org.apache.logging.log4j.spi.Provider: void <init>(java.lang.Integer,java.lang.String,java.lang.Class,java.lang.Class)>(r1, r2, r3, null);

        return;
    }

    public void <init>(java.lang.Integer, java.lang.String, java.lang.Class, java.lang.Class)
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.lang.Integer r1;
        java.lang.String r2;
        java.lang.Class r3, r4;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.logging.log4j.spi.Provider: java.net.URL url> = null;

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.ref.WeakReference classLoader> = null;

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.Integer priority> = r1;

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass> = r3;

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class threadContextMapClass> = r4;

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className> = null;

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.String threadContextMap> = null;

        r0.<org.apache.logging.log4j.spi.Provider: java.lang.String versions> = r2;

        return;
    }

    public java.lang.String getVersions()
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.lang.String $r1;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        $r1 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String versions>;

        return $r1;
    }

    public java.lang.Integer getPriority()
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        $r1 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Integer priority>;

        return $r1;
    }

    public java.lang.String getClassName()
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.lang.Class $r1, $r3;
        java.lang.String $r2, $r4;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        $r1 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        return $r4;

     label1:
        $r2 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        return $r2;
    }

    public java.lang.Class loadLoggerContextFactory()
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.lang.ClassLoader r1;
        java.lang.Class $r2, $r7, $r8, $r9, r15;
        java.lang.String $r3, $r6, $r13, $r14;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.Exception $r10;
        java.net.URL $r11;
        org.apache.logging.log4j.Logger $r12;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        $r2 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        if $r2 == null goto label1;

        $r9 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        return $r9;

     label1:
        $r3 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.ref.WeakReference classLoader>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (java.lang.ClassLoader) $r5;

        if r1 != null goto label3;

        return null;

     label3:
        $r6 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        r15 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r6);

        $r7 = class "Lorg/apache/logging/log4j/spi/LoggerContextFactory;";

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r15);

        if $z0 == 0 goto label5;

        $r8 = virtualinvoke r15.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/logging/log4j/spi/LoggerContextFactory;");

     label4:
        return $r8;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r12 = <org.apache.logging.log4j.spi.Provider: org.apache.logging.log4j.Logger LOGGER>;

        $r13 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        $r11 = r0.<org.apache.logging.log4j.spi.Provider: java.net.URL url>;

        $r14 = virtualinvoke $r11.<java.net.URL: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.logging.log4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>("Unable to create class {} specified in {}", $r13, $r14, $r10);

     label7:
        return null;

        catch java.lang.Exception from label3 to label4 with label6;
    }

    public java.lang.String getThreadContextMap()
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.lang.Class $r1, $r3;
        java.lang.String $r2, $r4;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        $r1 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class threadContextMapClass>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class threadContextMapClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        return $r4;

     label1:
        $r2 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String threadContextMap>;

        return $r2;
    }

    public java.lang.Class loadThreadContextMap()
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.lang.ClassLoader r1;
        java.lang.Class $r2, $r7, $r8, $r9, r15;
        java.lang.String $r3, $r6, $r13, $r14;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.Exception $r10;
        java.net.URL $r11;
        org.apache.logging.log4j.Logger $r12;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        $r2 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class threadContextMapClass>;

        if $r2 == null goto label1;

        $r9 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class threadContextMapClass>;

        return $r9;

     label1:
        $r3 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String threadContextMap>;

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.ref.WeakReference classLoader>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (java.lang.ClassLoader) $r5;

        if r1 != null goto label3;

        return null;

     label3:
        $r6 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String threadContextMap>;

        r15 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r6);

        $r7 = class "Lorg/apache/logging/log4j/spi/ThreadContextMap;";

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r15);

        if $z0 == 0 goto label5;

        $r8 = virtualinvoke r15.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/logging/log4j/spi/ThreadContextMap;");

     label4:
        return $r8;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r12 = <org.apache.logging.log4j.spi.Provider: org.apache.logging.log4j.Logger LOGGER>;

        $r13 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String threadContextMap>;

        $r11 = r0.<org.apache.logging.log4j.spi.Provider: java.net.URL url>;

        $r14 = virtualinvoke $r11.<java.net.URL: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.logging.log4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>("Unable to create class {} specified in {}", $r13, $r14, $r10);

     label7:
        return null;

        catch java.lang.Exception from label3 to label4 with label6;
    }

    public java.net.URL getUrl()
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.net.URL $r1;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        $r1 = r0.<org.apache.logging.log4j.spi.Provider: java.net.URL url>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.lang.StringBuilder $r3, $r16, $r18, $r21, $r25, $r27, $r29, $r33, $r35, $r37, $r39;
        java.lang.Integer $r4, $r5, $r38;
        boolean $z0;
        java.lang.String $r6, $r12, $r23, $r26, $r31, $r34, $r41;
        java.lang.Class $r7, $r8, $r22, $r30;
        java.lang.ref.WeakReference $r9, $r13;
        java.lang.Object $r14;
        java.lang.ClassLoader $r15;
        java.net.URL $r19, $r42;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Provider[");

        $r5 = <org.apache.logging.log4j.spi.Provider: java.lang.Integer DEFAULT_PRIORITY>;

        $r4 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Integer priority>;

        $z0 = virtualinvoke $r5.<java.lang.Integer: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r37 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("priority=");

        $r38 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Integer priority>;

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label1:
        $r6 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String threadContextMap>;

        if $r6 == null goto label2;

        $r33 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("threadContextMap=");

        $r34 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String threadContextMap>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label3;

     label2:
        $r7 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class threadContextMapClass>;

        if $r7 == null goto label3;

        $r29 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("threadContextMapClass=");

        $r30 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class threadContextMapClass>;

        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

     label3:
        $r41 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        if $r41 == null goto label4;

        $r25 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("className=");

        $r26 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label5;

     label4:
        $r8 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        if $r8 == null goto label5;

        $r21 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class=");

        $r22 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label5:
        $r42 = r0.<org.apache.logging.log4j.spi.Provider: java.net.URL url>;

        if $r42 == null goto label6;

        $r18 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url=");

        $r19 = r0.<org.apache.logging.log4j.spi.Provider: java.net.URL url>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

     label6:
        $r9 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.ref.WeakReference classLoader>;

        if $r9 == null goto label7;

        $r13 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.ref.WeakReference classLoader>;

        $r14 = virtualinvoke $r13.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r15 = (java.lang.ClassLoader) $r14;

        if $r15 != null goto label8;

     label7:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", classLoader=null(not reachable)");

        goto label9;

     label8:
        $r16 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", classLoader=");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

     label9:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.logging.log4j.spi.Provider r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4, $r9, $r10, $r15, $r16;
        java.lang.Integer $r5, $r6, $r19, $r20;
        java.lang.String $r7, $r8, $r11, $r12, $r13, $r14, $r17, $r18;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r1 == null goto label02;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label03;

     label02:
        return 0;

     label03:
        r2 = (org.apache.logging.log4j.spi.Provider) r1;

        $r5 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Integer priority>;

        if $r5 == null goto label04;

        $r20 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Integer priority>;

        $r19 = r2.<org.apache.logging.log4j.spi.Provider: java.lang.Integer priority>;

        $z2 = virtualinvoke $r20.<java.lang.Integer: boolean equals(java.lang.Object)>($r19);

        if $z2 != 0 goto label06;

        goto label05;

     label04:
        $r6 = r2.<org.apache.logging.log4j.spi.Provider: java.lang.Integer priority>;

        if $r6 == null goto label06;

     label05:
        return 0;

     label06:
        $r7 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        if $r7 == null goto label07;

        $r18 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        $r17 = r2.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 != 0 goto label09;

        goto label08;

     label07:
        $r8 = r2.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        if $r8 == null goto label09;

     label08:
        return 0;

     label09:
        $r9 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        if $r9 == null goto label10;

        $r16 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        $r15 = r2.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        $z0 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label12;

        goto label11;

     label10:
        $r10 = r2.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        if $r10 == null goto label12;

     label11:
        return 0;

     label12:
        $r11 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String versions>;

        if $r11 == null goto label13;

        $r14 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String versions>;

        $r13 = r2.<org.apache.logging.log4j.spi.Provider: java.lang.String versions>;

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        goto label15;

     label13:
        $r12 = r2.<org.apache.logging.log4j.spi.Provider: java.lang.String versions>;

        if $r12 != null goto label14;

        $z3 = 1;

        goto label15;

     label14:
        $z3 = 0;

     label15:
        return $z3;
    }

    public int hashCode()
    {
        org.apache.logging.log4j.spi.Provider r0;
        java.lang.Integer $r1, $r8;
        java.lang.String $r2, $r4, $r5, $r7;
        int $i0, $i1, $i2, $i3, $i5, i6, $i7, i8, $i9, i10;
        java.lang.Class $r3, $r6;

        r0 := @this: org.apache.logging.log4j.spi.Provider;

        $r1 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Integer priority>;

        if $r1 == null goto label1;

        $r8 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Integer priority>;

        $i3 = virtualinvoke $r8.<java.lang.Integer: int hashCode()>();

        goto label2;

     label1:
        $i3 = 0;

     label2:
        $i0 = 31 * $i3;

        $r2 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        if $r2 == null goto label3;

        $r7 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String className>;

        $i5 = virtualinvoke $r7.<java.lang.String: int hashCode()>();

        goto label4;

     label3:
        $i5 = 0;

     label4:
        i6 = $i0 + $i5;

        $i1 = 31 * i6;

        $r3 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        if $r3 == null goto label5;

        $r6 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.Class loggerContextFactoryClass>;

        $i7 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

        goto label6;

     label5:
        $i7 = 0;

     label6:
        i8 = $i1 + $i7;

        $i2 = 31 * i8;

        $r4 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String versions>;

        if $r4 == null goto label7;

        $r5 = r0.<org.apache.logging.log4j.spi.Provider: java.lang.String versions>;

        $i9 = virtualinvoke $r5.<java.lang.String: int hashCode()>();

        goto label8;

     label7:
        $i9 = 0;

     label8:
        i10 = $i2 + $i9;

        return i10;
    }

    static void <clinit>()
    {
        java.lang.Integer $r0;
        org.apache.logging.log4j.status.StatusLogger $r1;

        <org.apache.logging.log4j.spi.Provider: java.lang.String LOGGER_CONTEXT_FACTORY> = "LoggerContextFactory";

        <org.apache.logging.log4j.spi.Provider: java.lang.String THREAD_CONTEXT_MAP> = "ThreadContextMap";

        <org.apache.logging.log4j.spi.Provider: java.lang.String FACTORY_PRIORITY> = "FactoryPriority";

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        <org.apache.logging.log4j.spi.Provider: java.lang.Integer DEFAULT_PRIORITY> = $r0;

        $r1 = staticinvoke <org.apache.logging.log4j.status.StatusLogger: org.apache.logging.log4j.status.StatusLogger getLogger()>();

        <org.apache.logging.log4j.spi.Provider: org.apache.logging.log4j.Logger LOGGER> = $r1;

        return;
    }
}
