public class javassist.bytecode.stackmap.TypeData$UninitData extends javassist.bytecode.stackmap.TypeData$ClassName
{
    int offset;
    boolean initialized;

    void <init>(int, java.lang.String)
    {
        javassist.bytecode.stackmap.TypeData$UninitData r0;
        int i0;
        java.lang.String r1;

        r0 := @this: javassist.bytecode.stackmap.TypeData$UninitData;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<javassist.bytecode.stackmap.TypeData$ClassName: void <init>(java.lang.String)>(r1);

        r0.<javassist.bytecode.stackmap.TypeData$UninitData: int offset> = i0;

        r0.<javassist.bytecode.stackmap.TypeData$UninitData: boolean initialized> = 0;

        return;
    }

    public javassist.bytecode.stackmap.TypeData$UninitData copy()
    {
        javassist.bytecode.stackmap.TypeData$UninitData r0, $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.stackmap.TypeData$UninitData;

        $r1 = new javassist.bytecode.stackmap.TypeData$UninitData;

        $i0 = r0.<javassist.bytecode.stackmap.TypeData$UninitData: int offset>;

        $r2 = virtualinvoke r0.<javassist.bytecode.stackmap.TypeData$UninitData: java.lang.String getName()>();

        specialinvoke $r1.<javassist.bytecode.stackmap.TypeData$UninitData: void <init>(int,java.lang.String)>($i0, $r2);

        return $r1;
    }

    public int getTypeTag()
    {
        javassist.bytecode.stackmap.TypeData$UninitData r0;

        r0 := @this: javassist.bytecode.stackmap.TypeData$UninitData;

        return 8;
    }

    public int getTypeData(javassist.bytecode.ConstPool)
    {
        javassist.bytecode.stackmap.TypeData$UninitData r0;
        javassist.bytecode.ConstPool r1;
        int $i0;

        r0 := @this: javassist.bytecode.stackmap.TypeData$UninitData;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        $i0 = r0.<javassist.bytecode.stackmap.TypeData$UninitData: int offset>;

        return $i0;
    }

    public javassist.bytecode.stackmap.TypeData join()
    {
        javassist.bytecode.stackmap.TypeData$UninitData r0, $r2;
        boolean $z0;
        javassist.bytecode.stackmap.TypeData$UninitTypeVar $r1;
        javassist.bytecode.stackmap.TypeData$TypeVar $r3;
        javassist.bytecode.stackmap.TypeData$ClassName $r4;
        java.lang.String $r5;

        r0 := @this: javassist.bytecode.stackmap.TypeData$UninitData;

        $z0 = r0.<javassist.bytecode.stackmap.TypeData$UninitData: boolean initialized>;

        if $z0 == 0 goto label1;

        $r3 = new javassist.bytecode.stackmap.TypeData$TypeVar;

        $r4 = new javassist.bytecode.stackmap.TypeData$ClassName;

        $r5 = virtualinvoke r0.<javassist.bytecode.stackmap.TypeData$UninitData: java.lang.String getName()>();

        specialinvoke $r4.<javassist.bytecode.stackmap.TypeData$ClassName: void <init>(java.lang.String)>($r5);

        specialinvoke $r3.<javassist.bytecode.stackmap.TypeData$TypeVar: void <init>(javassist.bytecode.stackmap.TypeData)>($r4);

        return $r3;

     label1:
        $r1 = new javassist.bytecode.stackmap.TypeData$UninitTypeVar;

        $r2 = virtualinvoke r0.<javassist.bytecode.stackmap.TypeData$UninitData: javassist.bytecode.stackmap.TypeData$UninitData copy()>();

        specialinvoke $r1.<javassist.bytecode.stackmap.TypeData$UninitTypeVar: void <init>(javassist.bytecode.stackmap.TypeData$UninitData)>($r2);

        return $r1;
    }

    public boolean isUninit()
    {
        javassist.bytecode.stackmap.TypeData$UninitData r0;

        r0 := @this: javassist.bytecode.stackmap.TypeData$UninitData;

        return 1;
    }

    public boolean eq(javassist.bytecode.stackmap.TypeData)
    {
        javassist.bytecode.stackmap.TypeData$UninitData r0, r2;
        javassist.bytecode.stackmap.TypeData r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        java.lang.String $r3, $r4;

        r0 := @this: javassist.bytecode.stackmap.TypeData$UninitData;

        r1 := @parameter0: javassist.bytecode.stackmap.TypeData;

        $z0 = r1 instanceof javassist.bytecode.stackmap.TypeData$UninitData;

        if $z0 == 0 goto label3;

        r2 = (javassist.bytecode.stackmap.TypeData$UninitData) r1;

        $i1 = r0.<javassist.bytecode.stackmap.TypeData$UninitData: int offset>;

        $i0 = r2.<javassist.bytecode.stackmap.TypeData$UninitData: int offset>;

        if $i1 != $i0 goto label1;

        $r3 = virtualinvoke r0.<javassist.bytecode.stackmap.TypeData$UninitData: java.lang.String getName()>();

        $r4 = virtualinvoke r2.<javassist.bytecode.stackmap.TypeData$UninitData: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        return 0;
    }

    public int offset()
    {
        javassist.bytecode.stackmap.TypeData$UninitData r0;
        int $i0;

        r0 := @this: javassist.bytecode.stackmap.TypeData$UninitData;

        $i0 = r0.<javassist.bytecode.stackmap.TypeData$UninitData: int offset>;

        return $i0;
    }

    public void constructorCalled(int)
    {
        javassist.bytecode.stackmap.TypeData$UninitData r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.stackmap.TypeData$UninitData;

        i0 := @parameter0: int;

        $i1 = r0.<javassist.bytecode.stackmap.TypeData$UninitData: int offset>;

        if i0 != $i1 goto label1;

        r0.<javassist.bytecode.stackmap.TypeData$UninitData: boolean initialized> = 1;

     label1:
        return;
    }

    java.lang.String toString2(java.util.Set)
    {
        javassist.bytecode.stackmap.TypeData$UninitData r0;
        java.util.Set r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;
        java.lang.String $r3, $r7;
        int $i0;

        r0 := @this: javassist.bytecode.stackmap.TypeData$UninitData;

        r1 := @parameter0: java.util.Set;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<javassist.bytecode.stackmap.TypeData$UninitData: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i0 = r0.<javassist.bytecode.stackmap.TypeData$UninitData: int offset>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
