abstract class javassist.bytecode.ConstInfo extends java.lang.Object
{
    int index;

    public void <init>(int)
    {
        javassist.bytecode.ConstInfo r0;
        int i0;

        r0 := @this: javassist.bytecode.ConstInfo;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.bytecode.ConstInfo: int index> = i0;

        return;
    }

    public abstract int getTag();

    public java.lang.String getClassName(javassist.bytecode.ConstPool)
    {
        javassist.bytecode.ConstInfo r0;
        javassist.bytecode.ConstPool r1;

        r0 := @this: javassist.bytecode.ConstInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        return null;
    }

    public void renameClass(javassist.bytecode.ConstPool, java.lang.String, java.lang.String, java.util.Map)
    {
        javassist.bytecode.ConstInfo r0;
        javassist.bytecode.ConstPool r1;
        java.lang.String r2, r3;
        java.util.Map r4;

        r0 := @this: javassist.bytecode.ConstInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        return;
    }

    public void renameClass(javassist.bytecode.ConstPool, java.util.Map, java.util.Map)
    {
        javassist.bytecode.ConstInfo r0;
        javassist.bytecode.ConstPool r1;
        java.util.Map r2, r3;

        r0 := @this: javassist.bytecode.ConstInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

        return;
    }

    public abstract int copy(javassist.bytecode.ConstPool, javassist.bytecode.ConstPool, java.util.Map);

    public abstract void write(java.io.DataOutputStream) throws java.io.IOException;

    public abstract void print(java.io.PrintWriter);

    public java.lang.String toString()
    {
        javassist.bytecode.ConstInfo r0;
        java.io.ByteArrayOutputStream $r3;
        java.io.PrintWriter $r4;
        java.lang.String $r5;

        r0 := @this: javassist.bytecode.ConstInfo;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = new java.io.PrintWriter;

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r3);

        virtualinvoke r0.<javassist.bytecode.ConstInfo: void print(java.io.PrintWriter)>($r4);

        $r5 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r5;
    }
}
