public class org.mockito.internal.progress.MockingProgressImpl extends java.lang.Object implements org.mockito.internal.progress.MockingProgress
{
    private final org.mockito.internal.progress.ArgumentMatcherStorage argumentMatcherStorage;
    private org.mockito.stubbing.OngoingStubbing ongoingStubbing;
    private org.mockito.internal.debugging.Localized verificationMode;
    private org.mockito.invocation.Location stubbingInProgress;
    private org.mockito.verification.VerificationStrategy verificationStrategy;
    private final java.util.Set listeners;

    public void <init>()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.internal.progress.ArgumentMatcherStorageImpl $r1;
        java.util.LinkedHashSet $r2;
        org.mockito.verification.VerificationStrategy $r3;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.mockito.internal.progress.ArgumentMatcherStorageImpl;

        specialinvoke $r1.<org.mockito.internal.progress.ArgumentMatcherStorageImpl: void <init>()>();

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.progress.ArgumentMatcherStorage argumentMatcherStorage> = $r1;

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.invocation.Location stubbingInProgress> = null;

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.mockito.internal.progress.MockingProgressImpl: java.util.Set listeners> = $r2;

        $r3 = staticinvoke <org.mockito.internal.progress.MockingProgressImpl: org.mockito.verification.VerificationStrategy getDefaultVerificationStrategy()>();

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.verification.VerificationStrategy verificationStrategy> = $r3;

        return;
    }

    public static org.mockito.verification.VerificationStrategy getDefaultVerificationStrategy()
    {
        org.mockito.internal.progress.MockingProgressImpl$1 $r0;

        $r0 = new org.mockito.internal.progress.MockingProgressImpl$1;

        specialinvoke $r0.<org.mockito.internal.progress.MockingProgressImpl$1: void <init>()>();

        return $r0;
    }

    public void reportOngoingStubbing(org.mockito.stubbing.OngoingStubbing)
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.stubbing.OngoingStubbing r1;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        r1 := @parameter0: org.mockito.stubbing.OngoingStubbing;

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.stubbing.OngoingStubbing ongoingStubbing> = r1;

        return;
    }

    public org.mockito.stubbing.OngoingStubbing pullOngoingStubbing()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.stubbing.OngoingStubbing r1;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        r1 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.stubbing.OngoingStubbing ongoingStubbing>;

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.stubbing.OngoingStubbing ongoingStubbing> = null;

        return r1;
    }

    public java.util.Set verificationListeners()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        java.util.Iterator r2;
        org.mockito.listeners.MockitoListener r3;
        java.util.LinkedHashSet $r4;
        java.util.Set $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        org.mockito.listeners.VerificationListener $r7;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        $r4 = new java.util.LinkedHashSet;

        specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>();

        $r5 = r0.<org.mockito.internal.progress.MockingProgressImpl: java.util.Set listeners>;

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.mockito.listeners.MockitoListener) $r6;

        $z1 = r3 instanceof org.mockito.listeners.VerificationListener;

        if $z1 == 0 goto label2;

        $r7 = (org.mockito.listeners.VerificationListener) r3;

        virtualinvoke $r4.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r7);

     label2:
        goto label1;

     label3:
        return $r4;
    }

    public void verificationStarted(org.mockito.verification.VerificationMode)
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.verification.VerificationMode r1;
        org.mockito.internal.debugging.Localized $r2;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        r1 := @parameter0: org.mockito.verification.VerificationMode;

        virtualinvoke r0.<org.mockito.internal.progress.MockingProgressImpl: void validateState()>();

        virtualinvoke r0.<org.mockito.internal.progress.MockingProgressImpl: void resetOngoingStubbing()>();

        $r2 = new org.mockito.internal.debugging.Localized;

        specialinvoke $r2.<org.mockito.internal.debugging.Localized: void <init>(java.lang.Object)>(r1);

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.debugging.Localized verificationMode> = $r2;

        return;
    }

    public void resetOngoingStubbing()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.stubbing.OngoingStubbing ongoingStubbing> = null;

        return;
    }

    public org.mockito.verification.VerificationMode pullVerificationMode()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.verification.VerificationMode r1;
        org.mockito.internal.debugging.Localized $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        $r2 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.debugging.Localized verificationMode>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.debugging.Localized verificationMode>;

        $r4 = virtualinvoke $r3.<org.mockito.internal.debugging.Localized: java.lang.Object getObject()>();

        r1 = (org.mockito.verification.VerificationMode) $r4;

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.debugging.Localized verificationMode> = null;

        return r1;
    }

    public void stubbingStarted()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.internal.debugging.LocationImpl $r1;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        virtualinvoke r0.<org.mockito.internal.progress.MockingProgressImpl: void validateState()>();

        $r1 = new org.mockito.internal.debugging.LocationImpl;

        specialinvoke $r1.<org.mockito.internal.debugging.LocationImpl: void <init>()>();

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.invocation.Location stubbingInProgress> = $r1;

        return;
    }

    public void validateState()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.invocation.Location r1, $r2;
        org.mockito.exceptions.base.MockitoException $r3;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        specialinvoke r0.<org.mockito.internal.progress.MockingProgressImpl: void validateMostStuff()>();

        $r2 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.invocation.Location stubbingInProgress>;

        if $r2 == null goto label1;

        r1 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.invocation.Location stubbingInProgress>;

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.invocation.Location stubbingInProgress> = null;

        $r3 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException unfinishedStubbing(org.mockito.invocation.Location)>(r1);

        throw $r3;

     label1:
        return;
    }

    private void validateMostStuff()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.invocation.Location r1;
        org.mockito.internal.debugging.Localized $r2, $r4;
        org.mockito.internal.progress.ArgumentMatcherStorage $r3;
        org.mockito.exceptions.base.MockitoException $r5;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        staticinvoke <org.mockito.internal.configuration.GlobalConfiguration: void validate()>();

        $r2 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.debugging.Localized verificationMode>;

        if $r2 == null goto label1;

        $r4 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.debugging.Localized verificationMode>;

        r1 = virtualinvoke $r4.<org.mockito.internal.debugging.Localized: org.mockito.invocation.Location getLocation()>();

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.debugging.Localized verificationMode> = null;

        $r5 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException unfinishedVerificationException(org.mockito.invocation.Location)>(r1);

        throw $r5;

     label1:
        $r3 = virtualinvoke r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.progress.ArgumentMatcherStorage getArgumentMatcherStorage()>();

        interfaceinvoke $r3.<org.mockito.internal.progress.ArgumentMatcherStorage: void validateState()>();

        return;
    }

    public void stubbingCompleted()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.invocation.Location stubbingInProgress> = null;

        return;
    }

    public java.lang.String toString()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10;
        org.mockito.stubbing.OngoingStubbing $r3;
        org.mockito.internal.debugging.Localized $r6;
        org.mockito.invocation.Location $r9;
        java.lang.String $r11;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ongoingStubbing: ");

        $r3 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.stubbing.OngoingStubbing ongoingStubbing>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", verificationMode: ");

        $r6 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.debugging.Localized verificationMode>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stubbingInProgress: ");

        $r9 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.invocation.Location stubbingInProgress>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public void reset()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.internal.progress.ArgumentMatcherStorage $r1;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.invocation.Location stubbingInProgress> = null;

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.debugging.Localized verificationMode> = null;

        $r1 = virtualinvoke r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.progress.ArgumentMatcherStorage getArgumentMatcherStorage()>();

        interfaceinvoke $r1.<org.mockito.internal.progress.ArgumentMatcherStorage: void reset()>();

        return;
    }

    public org.mockito.internal.progress.ArgumentMatcherStorage getArgumentMatcherStorage()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.internal.progress.ArgumentMatcherStorage $r1;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        $r1 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.internal.progress.ArgumentMatcherStorage argumentMatcherStorage>;

        return $r1;
    }

    public void mockingStarted(java.lang.Object, org.mockito.mock.MockCreationSettings)
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        java.lang.Object r1, $r6;
        org.mockito.mock.MockCreationSettings r2;
        java.util.Iterator r3;
        org.mockito.listeners.MockitoListener r4;
        java.util.Set $r5;
        boolean $z0, $z1;
        org.mockito.listeners.MockCreationListener $r7;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.mockito.mock.MockCreationSettings;

        $r5 = r0.<org.mockito.internal.progress.MockingProgressImpl: java.util.Set listeners>;

        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.mockito.listeners.MockitoListener) $r6;

        $z1 = r4 instanceof org.mockito.listeners.MockCreationListener;

        if $z1 == 0 goto label2;

        $r7 = (org.mockito.listeners.MockCreationListener) r4;

        interfaceinvoke $r7.<org.mockito.listeners.MockCreationListener: void onMockCreated(java.lang.Object,org.mockito.mock.MockCreationSettings)>(r1, r2);

     label2:
        goto label1;

     label3:
        specialinvoke r0.<org.mockito.internal.progress.MockingProgressImpl: void validateMostStuff()>();

        return;
    }

    public void addListener(org.mockito.listeners.MockitoListener)
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.listeners.MockitoListener r1, r3;
        java.util.Iterator r2;
        java.util.Set $r4, $r5;
        boolean $z0, $z2;
        java.lang.Object $r6;
        java.lang.Class $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        r1 := @parameter0: org.mockito.listeners.MockitoListener;

        $r4 = r0.<org.mockito.internal.progress.MockingProgressImpl: java.util.Set listeners>;

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.mockito.listeners.MockitoListener) $r6;

        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label2;

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <org.mockito.internal.exceptions.Reporter: void redundantMockitoListener(java.lang.String)>($r10);

     label2:
        goto label1;

     label3:
        $r5 = r0.<org.mockito.internal.progress.MockingProgressImpl: java.util.Set listeners>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(org.mockito.listeners.MockitoListener)
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.listeners.MockitoListener r1;
        java.util.Set $r2;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        r1 := @parameter0: org.mockito.listeners.MockitoListener;

        $r2 = r0.<org.mockito.internal.progress.MockingProgressImpl: java.util.Set listeners>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void setVerificationStrategy(org.mockito.verification.VerificationStrategy)
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.verification.VerificationStrategy r1;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        r1 := @parameter0: org.mockito.verification.VerificationStrategy;

        r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.verification.VerificationStrategy verificationStrategy> = r1;

        return;
    }

    public org.mockito.verification.VerificationMode maybeVerifyLazily(org.mockito.verification.VerificationMode)
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        org.mockito.verification.VerificationMode r1, $r3;
        org.mockito.verification.VerificationStrategy $r2;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        r1 := @parameter0: org.mockito.verification.VerificationMode;

        $r2 = r0.<org.mockito.internal.progress.MockingProgressImpl: org.mockito.verification.VerificationStrategy verificationStrategy>;

        $r3 = interfaceinvoke $r2.<org.mockito.verification.VerificationStrategy: org.mockito.verification.VerificationMode maybeVerifyLazily(org.mockito.verification.VerificationMode)>(r1);

        return $r3;
    }

    public void clearListeners()
    {
        org.mockito.internal.progress.MockingProgressImpl r0;
        java.util.Set $r1;

        r0 := @this: org.mockito.internal.progress.MockingProgressImpl;

        $r1 = r0.<org.mockito.internal.progress.MockingProgressImpl: java.util.Set listeners>;

        interfaceinvoke $r1.<java.util.Set: void clear()>();

        return;
    }
}
