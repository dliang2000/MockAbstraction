class org.apache.flink.core.memory.MemorySegmentTestBase$1 extends java.io.OutputStream
{
    int bytesSoFar;
    final org.apache.flink.core.memory.MemorySegmentTestBase this$0;

    void <init>(org.apache.flink.core.memory.MemorySegmentTestBase)
    {
        org.apache.flink.core.memory.MemorySegmentTestBase$1 r0;
        org.apache.flink.core.memory.MemorySegmentTestBase r1;

        r0 := @this: org.apache.flink.core.memory.MemorySegmentTestBase$1;

        r1 := @parameter0: org.apache.flink.core.memory.MemorySegmentTestBase;

        r0.<org.apache.flink.core.memory.MemorySegmentTestBase$1: org.apache.flink.core.memory.MemorySegmentTestBase this$0> = r1;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.apache.flink.core.memory.MemorySegmentTestBase$1: int bytesSoFar> = 0;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.flink.core.memory.MemorySegmentTestBase$1 r0;
        int i0, $i1, $i2, $i3;
        java.io.IOException $r1;

        r0 := @this: org.apache.flink.core.memory.MemorySegmentTestBase$1;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.core.memory.MemorySegmentTestBase$1: int bytesSoFar>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.core.memory.MemorySegmentTestBase$1: int bytesSoFar> = $i2;

        $i3 = r0.<org.apache.flink.core.memory.MemorySegmentTestBase$1: int bytesSoFar>;

        if $i3 <= 668 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("overflow");

        throw $r1;

     label1:
        return;
    }
}
