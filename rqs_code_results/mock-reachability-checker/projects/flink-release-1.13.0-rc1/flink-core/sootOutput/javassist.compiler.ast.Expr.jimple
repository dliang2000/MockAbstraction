public class javassist.compiler.ast.Expr extends javassist.compiler.ast.ASTList implements javassist.compiler.TokenId
{
    private static final long serialVersionUID;
    protected int operatorId;

    void <init>(int, javassist.compiler.ast.ASTree, javassist.compiler.ast.ASTList)
    {
        javassist.compiler.ast.Expr r0;
        int i0;
        javassist.compiler.ast.ASTree r1;
        javassist.compiler.ast.ASTList r2;

        r0 := @this: javassist.compiler.ast.Expr;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.compiler.ast.ASTree;

        r2 := @parameter2: javassist.compiler.ast.ASTList;

        specialinvoke r0.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTList)>(r1, r2);

        r0.<javassist.compiler.ast.Expr: int operatorId> = i0;

        return;
    }

    void <init>(int, javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.Expr r0;
        int i0;
        javassist.compiler.ast.ASTree r1;

        r0 := @this: javassist.compiler.ast.Expr;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.compiler.ast.ASTree;

        specialinvoke r0.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree)>(r1);

        r0.<javassist.compiler.ast.Expr: int operatorId> = i0;

        return;
    }

    public static javassist.compiler.ast.Expr make(int, javassist.compiler.ast.ASTree, javassist.compiler.ast.ASTree)
    {
        int i0;
        javassist.compiler.ast.ASTree r0, r1;
        javassist.compiler.ast.Expr $r2;
        javassist.compiler.ast.ASTList $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: javassist.compiler.ast.ASTree;

        r1 := @parameter2: javassist.compiler.ast.ASTree;

        $r2 = new javassist.compiler.ast.Expr;

        $r3 = new javassist.compiler.ast.ASTList;

        specialinvoke $r3.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree)>(r1);

        specialinvoke $r2.<javassist.compiler.ast.Expr: void <init>(int,javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTList)>(i0, r0, $r3);

        return $r2;
    }

    public static javassist.compiler.ast.Expr make(int, javassist.compiler.ast.ASTree)
    {
        int i0;
        javassist.compiler.ast.ASTree r0;
        javassist.compiler.ast.Expr $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: javassist.compiler.ast.ASTree;

        $r1 = new javassist.compiler.ast.Expr;

        specialinvoke $r1.<javassist.compiler.ast.Expr: void <init>(int,javassist.compiler.ast.ASTree)>(i0, r0);

        return $r1;
    }

    public int getOperator()
    {
        javassist.compiler.ast.Expr r0;
        int $i0;

        r0 := @this: javassist.compiler.ast.Expr;

        $i0 = r0.<javassist.compiler.ast.Expr: int operatorId>;

        return $i0;
    }

    public void setOperator(int)
    {
        javassist.compiler.ast.Expr r0;
        int i0;

        r0 := @this: javassist.compiler.ast.Expr;

        i0 := @parameter0: int;

        r0.<javassist.compiler.ast.Expr: int operatorId> = i0;

        return;
    }

    public javassist.compiler.ast.ASTree oprand1()
    {
        javassist.compiler.ast.Expr r0;
        javassist.compiler.ast.ASTree $r1;

        r0 := @this: javassist.compiler.ast.Expr;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree getLeft()>();

        return $r1;
    }

    public void setOprand1(javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.Expr r0;
        javassist.compiler.ast.ASTree r1;

        r0 := @this: javassist.compiler.ast.Expr;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        virtualinvoke r0.<javassist.compiler.ast.Expr: void setLeft(javassist.compiler.ast.ASTree)>(r1);

        return;
    }

    public javassist.compiler.ast.ASTree oprand2()
    {
        javassist.compiler.ast.Expr r0;
        javassist.compiler.ast.ASTree $r1, $r2;

        r0 := @this: javassist.compiler.ast.Expr;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree getRight()>();

        $r2 = virtualinvoke $r1.<javassist.compiler.ast.ASTree: javassist.compiler.ast.ASTree getLeft()>();

        return $r2;
    }

    public void setOprand2(javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.Expr r0;
        javassist.compiler.ast.ASTree r1, $r2;

        r0 := @this: javassist.compiler.ast.Expr;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        $r2 = virtualinvoke r0.<javassist.compiler.ast.Expr: javassist.compiler.ast.ASTree getRight()>();

        virtualinvoke $r2.<javassist.compiler.ast.ASTree: void setLeft(javassist.compiler.ast.ASTree)>(r1);

        return;
    }

    public void accept(javassist.compiler.ast.Visitor) throws javassist.compiler.CompileError
    {
        javassist.compiler.ast.Expr r0;
        javassist.compiler.ast.Visitor r1;

        r0 := @this: javassist.compiler.ast.Expr;

        r1 := @parameter0: javassist.compiler.ast.Visitor;

        virtualinvoke r1.<javassist.compiler.ast.Visitor: void atExpr(javassist.compiler.ast.Expr)>(r0);

        return;
    }

    public java.lang.String getName()
    {
        javassist.compiler.ast.Expr r0;
        int i0, $i1;
        java.lang.String $r1, $r3, $r4;
        java.lang.String[] $r2;
        char $c2;

        r0 := @this: javassist.compiler.ast.Expr;

        i0 = r0.<javassist.compiler.ast.Expr: int operatorId>;

        if i0 >= 128 goto label1;

        $c2 = (char) i0;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

        return $r4;

     label1:
        if 350 > i0 goto label2;

        if i0 > 371 goto label2;

        $r2 = <javassist.compiler.ast.Expr: java.lang.String[] opNames>;

        $i1 = i0 - 350;

        $r3 = $r2[$i1];

        return $r3;

     label2:
        if i0 != 323 goto label3;

        return "instanceof";

     label3:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        return $r1;
    }

    protected java.lang.String getTag()
    {
        javassist.compiler.ast.Expr r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: javassist.compiler.ast.Expr;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("op:");

        $r3 = virtualinvoke r0.<javassist.compiler.ast.Expr: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <javassist.compiler.ast.Expr: long serialVersionUID> = 1L;

        return;
    }
}
