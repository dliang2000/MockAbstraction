public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.lang.String PACKAGE_PREFIX_JAVAX_XML;
    private static final java.lang.String SERIALIZERS_FOR_JAVAX_XML;
    private static final java.lang.String DESERIALIZERS_FOR_JAVAX_XML;
    private static final java.lang.String SERIALIZER_FOR_DOM_NODE;
    private static final java.lang.String DESERIALIZER_FOR_DOM_DOCUMENT;
    private static final java.lang.String DESERIALIZER_FOR_DOM_NODE;
    private static final java.lang.Class CLASS_DOM_NODE;
    private static final java.lang.Class CLASS_DOM_DOCUMENT;
    private static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers _jdk7Helper;
    public static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance;
    private final java.util.Map _sqlDeserializers;
    private final java.util.Map _sqlSerializers;
    private static final java.lang.String CLS_NAME_JAVA_SQL_TIMESTAMP;
    private static final java.lang.String CLS_NAME_JAVA_SQL_DATE;
    private static final java.lang.String CLS_NAME_JAVA_SQL_TIME;
    private static final java.lang.String CLS_NAME_JAVA_SQL_BLOB;
    private static final java.lang.String CLS_NAME_JAVA_SQL_SERIALBLOB;

    protected void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory r0;
        java.util.HashMap $r1, $r6;
        java.util.Map $r2, $r4, $r8, $r10, $r12, $r14, $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.DateSerializer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlDeserializers> = $r1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlDeserializers>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.sql.Date", "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer");

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlDeserializers>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.sql.Timestamp", "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer");

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlSerializers> = $r6;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlSerializers>;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.DateSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.DateSerializer instance>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.sql.Timestamp", $r7);

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlSerializers>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.sql.Date", "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.SqlDateSerializer");

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlSerializers>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.sql.Time", "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer");

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlSerializers>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.sql.Blob", "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.SqlBlobSerializer");

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlSerializers>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.sql.rowset.serial.SerialBlob", "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.SqlBlobSerializer");

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        java.lang.Class r4, $r8;
        java.lang.Object r5, r7, $r14, $r18;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers $r9, $r17;
        java.util.Map $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r12, $r15, $r16, $r19, r20;
        java.lang.String $r13, r21;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Class CLASS_DOM_NODE>;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean _IsXOfY(java.lang.Class,java.lang.Class)>(r4, $r8);

        if $z0 == 0 goto label1;

        $r18 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>("org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.DOMSerializer", r2);

        $r19 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) $r18;

        return $r19;

     label1:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers _jdk7Helper>;

        if $r9 == null goto label2;

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers _jdk7Helper>;

        r20 = virtualinvoke $r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getSerializerForJavaNioFilePath(java.lang.Class)>(r4);

        if r20 == null goto label2;

        return r20;

     label2:
        r21 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlSerializers>;

        r5 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r21);

        if r5 == null goto label4;

        $z3 = r5 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        if $z3 == 0 goto label3;

        $r16 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) r5;

        return $r16;

     label3:
        $r13 = (java.lang.String) r5;

        $r14 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r13, r2);

        $r15 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) $r14;

        return $r15;

     label4:
        $z1 = virtualinvoke r21.<java.lang.String: boolean startsWith(java.lang.String)>("javax.xml.");

        if $z1 != 0 goto label5;

        $z2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean hasSuperClassStartingWith(java.lang.Class,java.lang.String)>(r4, "javax.xml.");

        if $z2 == 0 goto label6;

     label5:
        goto label7;

     label6:
        return null;

     label7:
        r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>("org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.CoreXMLSerializers", r2);

        if r7 != null goto label8;

        return null;

     label8:
        $r11 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers) r7;

        $r12 = interfaceinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.Serializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r2, r3);

        return $r12;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r3;
        java.lang.Class r4, $r9, $r10;
        java.lang.String r5, r23;
        java.lang.Object r7, $r12, $r15, $r17, $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers $r8, $r21;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.Deserializers $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r14, $r16, $r18, $r20, r22;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers _jdk7Helper>;

        if $r8 == null goto label1;

        $r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers _jdk7Helper>;

        r22 = virtualinvoke $r21.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer getDeserializerForJavaNioFilePath(java.lang.Class)>(r4);

        if r22 == null goto label1;

        return r22;

     label1:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Class CLASS_DOM_NODE>;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean _IsXOfY(java.lang.Class,java.lang.Class)>(r4, $r9);

        if $z0 == 0 goto label2;

        $r19 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>("org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer", r1);

        $r20 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) $r19;

        return $r20;

     label2:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Class CLASS_DOM_DOCUMENT>;

        $z1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean _IsXOfY(java.lang.Class,java.lang.Class)>(r4, $r10);

        if $z1 == 0 goto label3;

        $r17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>("org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer", r1);

        $r18 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) $r17;

        return $r18;

     label3:
        r23 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlDeserializers>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r23);

        r5 = (java.lang.String) $r12;

        if r5 == null goto label4;

        $r15 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r5, r1);

        $r16 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) $r15;

        return $r16;

     label4:
        $z2 = virtualinvoke r23.<java.lang.String: boolean startsWith(java.lang.String)>("javax.xml.");

        if $z2 != 0 goto label5;

        $z3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean hasSuperClassStartingWith(java.lang.Class,java.lang.String)>(r4, "javax.xml.");

        if $z3 == 0 goto label6;

     label5:
        goto label7;

     label6:
        return null;

     label7:
        r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>("org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.CoreXMLDeserializers", r1);

        if r7 != null goto label8;

        return null;

     label8:
        $r13 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.Deserializers) r7;

        $r14 = interfaceinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.Deserializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r2, r3);

        return $r14;
    }

    public boolean hasDeserializerFor(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory r0;
        java.lang.Class r1, $r3, $r4;
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Map $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        r1 := @parameter0: java.lang.Class;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Class CLASS_DOM_NODE>;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean _IsXOfY(java.lang.Class,java.lang.Class)>(r1, $r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Class CLASS_DOM_DOCUMENT>;

        $z1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean _IsXOfY(java.lang.Class,java.lang.Class)>(r1, $r4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("javax.xml.");

        if $z2 != 0 goto label3;

        $z3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: boolean hasSuperClassStartingWith(java.lang.Class,java.lang.String)>(r1, "javax.xml.");

        if $z3 == 0 goto label4;

     label3:
        return 1;

     label4:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.util.Map _sqlDeserializers>;

        $z4 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        return $z4;
    }

    private boolean _IsXOfY(java.lang.Class, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory r0;
        java.lang.Class r1, r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private java.lang.Object instantiate(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory r0;
        java.lang.String r1, $r12, $r16, $r19, $r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        java.lang.Class $r4, $r15;
        java.lang.Object $r5;
        java.lang.Throwable $r6;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r14, $r17, $r18, $r20;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

     label1:
        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, r2);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find class `");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` for handling values of type ");

        $r12 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", problem: (");

        $r15 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r19 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private java.lang.Object instantiate(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory r0;
        java.lang.Class r1, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13, $r14, $r17, $r18, $r20;
        java.lang.String $r9, $r12, $r16, $r19, $r21;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

     label1:
        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r1, 0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create instance of `");

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` for handling values of type ");

        $r12 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", problem: (");

        $r15 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r19 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean hasSuperClassStartingWith(java.lang.Class, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory r0;
        java.lang.Class r1, r4;
        java.lang.String r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r4 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();

     label1:
        if r4 == null goto label4;

        if r4 != class "Ljava/lang/Object;" goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>(r2);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        r4 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label4:
        return 0;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory $r1;
        java.lang.Throwable $r2, $r3;
        java.lang.Class r4, r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers r6;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.String CLS_NAME_JAVA_SQL_SERIALBLOB> = "javax.sql.rowset.serial.SerialBlob";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.String CLS_NAME_JAVA_SQL_BLOB> = "java.sql.Blob";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.String CLS_NAME_JAVA_SQL_TIME> = "java.sql.Time";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.String CLS_NAME_JAVA_SQL_DATE> = "java.sql.Date";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.String CLS_NAME_JAVA_SQL_TIMESTAMP> = "java.sql.Timestamp";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.String DESERIALIZER_FOR_DOM_NODE> = "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.String DESERIALIZER_FOR_DOM_DOCUMENT> = "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.String SERIALIZER_FOR_DOM_NODE> = "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.DOMSerializer";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.String DESERIALIZERS_FOR_JAVAX_XML> = "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.CoreXMLDeserializers";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.String SERIALIZERS_FOR_JAVAX_XML> = "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.CoreXMLSerializers";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.String PACKAGE_PREFIX_JAVAX_XML> = "javax.xml.";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: long serialVersionUID> = 1L;

        r4 = null;

        r5 = null;

     label1:
        r5 = class "Lorg/w3c/dom/Node;";

        r4 = class "Lorg/w3c/dom/Document;";

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Class CLASS_DOM_NODE> = r5;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: java.lang.Class CLASS_DOM_DOCUMENT> = r4;

        r6 = null;

     label5:
        r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers instance()>();

     label6:
        goto label8;

     label7:
        $r2 := @caughtexception;

     label8:
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.Java7Handlers _jdk7Helper> = r6;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance> = $r1;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
}
