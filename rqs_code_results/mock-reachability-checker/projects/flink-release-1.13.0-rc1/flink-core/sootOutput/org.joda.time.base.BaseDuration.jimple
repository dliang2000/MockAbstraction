public abstract class org.joda.time.base.BaseDuration extends org.joda.time.base.AbstractDuration implements org.joda.time.ReadableDuration, java.io.Serializable
{
    private static final long serialVersionUID;
    private volatile long iMillis;

    protected void <init>(long)
    {
        org.joda.time.base.BaseDuration r0;
        long l0;

        r0 := @this: org.joda.time.base.BaseDuration;

        l0 := @parameter0: long;

        specialinvoke r0.<org.joda.time.base.AbstractDuration: void <init>()>();

        r0.<org.joda.time.base.BaseDuration: long iMillis> = l0;

        return;
    }

    protected void <init>(long, long)
    {
        org.joda.time.base.BaseDuration r0;
        long l0, l1, $l2;

        r0 := @this: org.joda.time.base.BaseDuration;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<org.joda.time.base.AbstractDuration: void <init>()>();

        $l2 = staticinvoke <org.joda.time.field.FieldUtils: long safeSubtract(long,long)>(l1, l0);

        r0.<org.joda.time.base.BaseDuration: long iMillis> = $l2;

        return;
    }

    protected void <init>(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant)
    {
        org.joda.time.base.BaseDuration r0;
        org.joda.time.ReadableInstant r1, r2;
        long l0, l1, $l2;

        r0 := @this: org.joda.time.base.BaseDuration;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        r2 := @parameter1: org.joda.time.ReadableInstant;

        specialinvoke r0.<org.joda.time.base.AbstractDuration: void <init>()>();

        if r1 != r2 goto label1;

        r0.<org.joda.time.base.BaseDuration: long iMillis> = 0L;

        goto label2;

     label1:
        l0 = staticinvoke <org.joda.time.DateTimeUtils: long getInstantMillis(org.joda.time.ReadableInstant)>(r1);

        l1 = staticinvoke <org.joda.time.DateTimeUtils: long getInstantMillis(org.joda.time.ReadableInstant)>(r2);

        $l2 = staticinvoke <org.joda.time.field.FieldUtils: long safeSubtract(long,long)>(l1, l0);

        r0.<org.joda.time.base.BaseDuration: long iMillis> = $l2;

     label2:
        return;
    }

    protected void <init>(java.lang.Object)
    {
        org.joda.time.base.BaseDuration r0;
        java.lang.Object r1;
        org.joda.time.convert.DurationConverter r2;
        org.joda.time.convert.ConverterManager $r3;
        long $l0;

        r0 := @this: org.joda.time.base.BaseDuration;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.joda.time.base.AbstractDuration: void <init>()>();

        $r3 = staticinvoke <org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterManager getInstance()>();

        r2 = virtualinvoke $r3.<org.joda.time.convert.ConverterManager: org.joda.time.convert.DurationConverter getDurationConverter(java.lang.Object)>(r1);

        $l0 = interfaceinvoke r2.<org.joda.time.convert.DurationConverter: long getDurationMillis(java.lang.Object)>(r1);

        r0.<org.joda.time.base.BaseDuration: long iMillis> = $l0;

        return;
    }

    public long getMillis()
    {
        org.joda.time.base.BaseDuration r0;
        long $l0;

        r0 := @this: org.joda.time.base.BaseDuration;

        $l0 = r0.<org.joda.time.base.BaseDuration: long iMillis>;

        return $l0;
    }

    protected void setMillis(long)
    {
        org.joda.time.base.BaseDuration r0;
        long l0;

        r0 := @this: org.joda.time.base.BaseDuration;

        l0 := @parameter0: long;

        r0.<org.joda.time.base.BaseDuration: long iMillis> = l0;

        return;
    }

    public org.joda.time.Period toPeriod(org.joda.time.PeriodType)
    {
        org.joda.time.base.BaseDuration r0;
        org.joda.time.PeriodType r1;
        org.joda.time.Period $r2;
        long $l0;

        r0 := @this: org.joda.time.base.BaseDuration;

        r1 := @parameter0: org.joda.time.PeriodType;

        $r2 = new org.joda.time.Period;

        $l0 = virtualinvoke r0.<org.joda.time.base.BaseDuration: long getMillis()>();

        specialinvoke $r2.<org.joda.time.Period: void <init>(long,org.joda.time.PeriodType)>($l0, r1);

        return $r2;
    }

    public org.joda.time.Period toPeriod(org.joda.time.Chronology)
    {
        org.joda.time.base.BaseDuration r0;
        org.joda.time.Chronology r1;
        org.joda.time.Period $r2;
        long $l0;

        r0 := @this: org.joda.time.base.BaseDuration;

        r1 := @parameter0: org.joda.time.Chronology;

        $r2 = new org.joda.time.Period;

        $l0 = virtualinvoke r0.<org.joda.time.base.BaseDuration: long getMillis()>();

        specialinvoke $r2.<org.joda.time.Period: void <init>(long,org.joda.time.Chronology)>($l0, r1);

        return $r2;
    }

    public org.joda.time.Period toPeriod(org.joda.time.PeriodType, org.joda.time.Chronology)
    {
        org.joda.time.base.BaseDuration r0;
        org.joda.time.PeriodType r1;
        org.joda.time.Chronology r2;
        org.joda.time.Period $r3;
        long $l0;

        r0 := @this: org.joda.time.base.BaseDuration;

        r1 := @parameter0: org.joda.time.PeriodType;

        r2 := @parameter1: org.joda.time.Chronology;

        $r3 = new org.joda.time.Period;

        $l0 = virtualinvoke r0.<org.joda.time.base.BaseDuration: long getMillis()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(long,org.joda.time.PeriodType,org.joda.time.Chronology)>($l0, r1, r2);

        return $r3;
    }

    public org.joda.time.Period toPeriodFrom(org.joda.time.ReadableInstant)
    {
        org.joda.time.base.BaseDuration r0;
        org.joda.time.ReadableInstant r1;
        org.joda.time.Period $r2;

        r0 := @this: org.joda.time.base.BaseDuration;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        $r2 = new org.joda.time.Period;

        specialinvoke $r2.<org.joda.time.Period: void <init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)>(r1, r0);

        return $r2;
    }

    public org.joda.time.Period toPeriodFrom(org.joda.time.ReadableInstant, org.joda.time.PeriodType)
    {
        org.joda.time.base.BaseDuration r0;
        org.joda.time.ReadableInstant r1;
        org.joda.time.PeriodType r2;
        org.joda.time.Period $r3;

        r0 := @this: org.joda.time.base.BaseDuration;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        r2 := @parameter1: org.joda.time.PeriodType;

        $r3 = new org.joda.time.Period;

        specialinvoke $r3.<org.joda.time.Period: void <init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)>(r1, r0, r2);

        return $r3;
    }

    public org.joda.time.Period toPeriodTo(org.joda.time.ReadableInstant)
    {
        org.joda.time.base.BaseDuration r0;
        org.joda.time.ReadableInstant r1;
        org.joda.time.Period $r2;

        r0 := @this: org.joda.time.base.BaseDuration;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        $r2 = new org.joda.time.Period;

        specialinvoke $r2.<org.joda.time.Period: void <init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)>(r0, r1);

        return $r2;
    }

    public org.joda.time.Period toPeriodTo(org.joda.time.ReadableInstant, org.joda.time.PeriodType)
    {
        org.joda.time.base.BaseDuration r0;
        org.joda.time.ReadableInstant r1;
        org.joda.time.PeriodType r2;
        org.joda.time.Period $r3;

        r0 := @this: org.joda.time.base.BaseDuration;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        r2 := @parameter1: org.joda.time.PeriodType;

        $r3 = new org.joda.time.Period;

        specialinvoke $r3.<org.joda.time.Period: void <init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)>(r0, r1, r2);

        return $r3;
    }

    public org.joda.time.Interval toIntervalFrom(org.joda.time.ReadableInstant)
    {
        org.joda.time.base.BaseDuration r0;
        org.joda.time.ReadableInstant r1;
        org.joda.time.Interval $r2;

        r0 := @this: org.joda.time.base.BaseDuration;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        $r2 = new org.joda.time.Interval;

        specialinvoke $r2.<org.joda.time.Interval: void <init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)>(r1, r0);

        return $r2;
    }

    public org.joda.time.Interval toIntervalTo(org.joda.time.ReadableInstant)
    {
        org.joda.time.base.BaseDuration r0;
        org.joda.time.ReadableInstant r1;
        org.joda.time.Interval $r2;

        r0 := @this: org.joda.time.base.BaseDuration;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        $r2 = new org.joda.time.Interval;

        specialinvoke $r2.<org.joda.time.Interval: void <init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)>(r0, r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.joda.time.base.BaseDuration: long serialVersionUID> = 2581698638990L;

        return;
    }
}
