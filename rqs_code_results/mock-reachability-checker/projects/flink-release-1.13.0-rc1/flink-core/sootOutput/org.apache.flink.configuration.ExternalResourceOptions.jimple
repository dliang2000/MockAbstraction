public class org.apache.flink.configuration.ExternalResourceOptions extends java.lang.Object
{
    public static final java.lang.String EXTERNAL_RESOURCE_AMOUNT_SUFFIX;
    public static final java.lang.String NONE;
    public static final java.lang.String EXTERNAL_RESOURCE_DRIVER_FACTORY_SUFFIX;
    public static final java.lang.String EXTERNAL_RESOURCE_DRIVER_PARAM_SUFFIX;
    private static final java.lang.String EXTERNAL_RESOURCE_DRIVER_PARAM_PATTERN_SUFFIX;
    private static final java.lang.String EXTERNAL_RESOURCE_PREFIX;
    public static final org.apache.flink.configuration.ConfigOption EXTERNAL_RESOURCE_LIST;
    public static final org.apache.flink.configuration.ConfigOption EXTERNAL_RESOURCE_DRIVER_FACTORY_CLASS;
    public static final org.apache.flink.configuration.ConfigOption EXTERNAL_RESOURCE_AMOUNT;
    public static final org.apache.flink.configuration.ConfigOption EXTERNAL_RESOURCE_DRIVER_PARAM;

    public void <init>()
    {
        org.apache.flink.configuration.ExternalResourceOptions r0;

        r0 := @this: org.apache.flink.configuration.ExternalResourceOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String genericKeyWithSuffix(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String keyWithResourceNameAndSuffix(java.lang.String,java.lang.String)>("<resource_name>", r0);

        return $r1;
    }

    private static java.lang.String keyWithResourceNameAndSuffix(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        java.lang.Object[] $r2;
        java.lang.Object $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = "external-resource";

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2[1] = $r3;

        $r4 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2[2] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s.%s.%s", $r2);

        return $r5;
    }

    public static java.lang.String getAmountConfigOptionForResource(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String keyWithResourceNameAndSuffix(java.lang.String,java.lang.String)>(r0, "amount");

        return $r1;
    }

    public static java.lang.String getSystemConfigKeyConfigOptionForResource(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String keyWithResourceNameAndSuffix(java.lang.String,java.lang.String)>(r0, r1);

        return $r2;
    }

    public static java.lang.String getExternalResourceDriverFactoryConfigOptionForResource(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String keyWithResourceNameAndSuffix(java.lang.String,java.lang.String)>(r0, "driver-factory.class");

        return $r1;
    }

    public static java.lang.String getExternalResourceParamConfigPrefixForResource(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String keyWithResourceNameAndSuffix(java.lang.String,java.lang.String)>(r0, "param.");

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r0, $r7, $r12, $r17;
        org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder $r1, $r8, $r13, $r18;
        org.apache.flink.configuration.ConfigOptions$ListConfigOptionBuilder $r2;
        java.lang.String[] $r3;
        org.apache.flink.configuration.ConfigOption $r4, $r5, $r9, $r10, $r14, $r15, $r19, $r20;
        java.lang.String $r6, $r11, $r16;

        <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String EXTERNAL_RESOURCE_PREFIX> = "external-resource";

        <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String EXTERNAL_RESOURCE_DRIVER_PARAM_PATTERN_SUFFIX> = "param.<param>";

        <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String EXTERNAL_RESOURCE_DRIVER_PARAM_SUFFIX> = "param.";

        <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String EXTERNAL_RESOURCE_DRIVER_FACTORY_SUFFIX> = "driver-factory.class";

        <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String NONE> = "none";

        <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String EXTERNAL_RESOURCE_AMOUNT_SUFFIX> = "amount";

        $r0 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("external-resources");

        $r1 = virtualinvoke $r0.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder stringType()>();

        $r2 = virtualinvoke $r1.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOptions$ListConfigOptionBuilder asList()>();

        $r3 = newarray (java.lang.String)[0];

        $r4 = virtualinvoke $r2.<org.apache.flink.configuration.ConfigOptions$ListConfigOptionBuilder: org.apache.flink.configuration.ConfigOption defaultValues(java.lang.Object[])>($r3);

        $r5 = virtualinvoke $r4.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("List of the <resource_name> of all external resources with delimiter \";\", e.g. \"gpu;fpga\" for two external resource gpu and fpga. The <resource_name> will be used to splice related config options for external resource. Only the <resource_name> defined here will go into effect by external resource framework. Do not set the <resource_name> to \'none\', which is preserved internally");

        <org.apache.flink.configuration.ExternalResourceOptions: org.apache.flink.configuration.ConfigOption EXTERNAL_RESOURCE_LIST> = $r5;

        $r6 = staticinvoke <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String genericKeyWithSuffix(java.lang.String)>("driver-factory.class");

        $r7 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder stringType()>();

        $r9 = virtualinvoke $r8.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r10 = virtualinvoke $r9.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("Defines the factory class name for the external resource identified by <resource_name>. The factory will be used to instantiated the ExternalResourceDriver at the TaskExecutor side. For example, org.apache.flink.externalresource.gpu.GPUDriverFactory");

        <org.apache.flink.configuration.ExternalResourceOptions: org.apache.flink.configuration.ConfigOption EXTERNAL_RESOURCE_DRIVER_FACTORY_CLASS> = $r10;

        $r11 = staticinvoke <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String genericKeyWithSuffix(java.lang.String)>("amount");

        $r12 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder longType()>();

        $r14 = virtualinvoke $r13.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r15 = virtualinvoke $r14.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The amount for the external resource specified by <resource_name> per TaskExecutor.");

        <org.apache.flink.configuration.ExternalResourceOptions: org.apache.flink.configuration.ConfigOption EXTERNAL_RESOURCE_AMOUNT> = $r15;

        $r16 = staticinvoke <org.apache.flink.configuration.ExternalResourceOptions: java.lang.String genericKeyWithSuffix(java.lang.String)>("param.<param>");

        $r17 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder stringType()>();

        $r19 = virtualinvoke $r18.<org.apache.flink.configuration.ConfigOptions$TypedConfigOptionBuilder: org.apache.flink.configuration.ConfigOption noDefaultValue()>();

        $r20 = virtualinvoke $r19.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The naming pattern of custom config options for the external resource specified by <resource_name>. Only the configurations that follow this pattern would be passed into the driver factory of that external resource.");

        <org.apache.flink.configuration.ExternalResourceOptions: org.apache.flink.configuration.ConfigOption EXTERNAL_RESOURCE_DRIVER_PARAM> = $r20;

        return;
    }
}
