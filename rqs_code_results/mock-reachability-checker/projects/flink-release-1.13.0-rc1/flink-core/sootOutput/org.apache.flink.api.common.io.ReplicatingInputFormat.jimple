public final class org.apache.flink.api.common.io.ReplicatingInputFormat extends org.apache.flink.api.common.io.RichInputFormat
{
    private static final long serialVersionUID;
    private org.apache.flink.api.common.io.InputFormat replicatedIF;

    public void <init>(org.apache.flink.api.common.io.InputFormat)
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.api.common.io.InputFormat r1;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        r1 := @parameter0: org.apache.flink.api.common.io.InputFormat;

        specialinvoke r0.<org.apache.flink.api.common.io.RichInputFormat: void <init>()>();

        r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF> = r1;

        return;
    }

    public org.apache.flink.api.common.io.InputFormat getReplicatedInputFormat()
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.api.common.io.InputFormat $r1;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        $r1 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        return $r1;
    }

    public void configure(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.configuration.Configuration r1;
        org.apache.flink.api.common.io.InputFormat $r2;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        $r2 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        interfaceinvoke $r2.<org.apache.flink.api.common.io.InputFormat: void configure(org.apache.flink.configuration.Configuration)>(r1);

        return;
    }

    public org.apache.flink.api.common.io.statistics.BaseStatistics getStatistics(org.apache.flink.api.common.io.statistics.BaseStatistics) throws java.io.IOException
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.api.common.io.statistics.BaseStatistics r1, $r3;
        org.apache.flink.api.common.io.InputFormat $r2;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        r1 := @parameter0: org.apache.flink.api.common.io.statistics.BaseStatistics;

        $r2 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $r3 = interfaceinvoke $r2.<org.apache.flink.api.common.io.InputFormat: org.apache.flink.api.common.io.statistics.BaseStatistics getStatistics(org.apache.flink.api.common.io.statistics.BaseStatistics)>(r1);

        return $r3;
    }

    public org.apache.flink.core.io.InputSplit[] createInputSplits(int) throws java.io.IOException
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        int i0;
        org.apache.flink.api.common.io.InputFormat $r1;
        org.apache.flink.core.io.InputSplit[] $r2;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $r2 = interfaceinvoke $r1.<org.apache.flink.api.common.io.InputFormat: org.apache.flink.core.io.InputSplit[] createInputSplits(int)>(i0);

        return $r2;
    }

    public org.apache.flink.core.io.InputSplitAssigner getInputSplitAssigner(org.apache.flink.core.io.InputSplit[])
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.core.io.InputSplit[] r1;
        org.apache.flink.api.common.io.ReplicatingInputSplitAssigner $r2;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        r1 := @parameter0: org.apache.flink.core.io.InputSplit[];

        $r2 = new org.apache.flink.api.common.io.ReplicatingInputSplitAssigner;

        specialinvoke $r2.<org.apache.flink.api.common.io.ReplicatingInputSplitAssigner: void <init>(org.apache.flink.core.io.InputSplit[])>(r1);

        return $r2;
    }

    public void open(org.apache.flink.core.io.InputSplit) throws java.io.IOException
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.core.io.InputSplit r1;
        org.apache.flink.api.common.io.InputFormat $r2;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        r1 := @parameter0: org.apache.flink.core.io.InputSplit;

        $r2 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        interfaceinvoke $r2.<org.apache.flink.api.common.io.InputFormat: void open(org.apache.flink.core.io.InputSplit)>(r1);

        return;
    }

    public boolean reachedEnd() throws java.io.IOException
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.api.common.io.InputFormat $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        $r1 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $z0 = interfaceinvoke $r1.<org.apache.flink.api.common.io.InputFormat: boolean reachedEnd()>();

        return $z0;
    }

    public java.lang.Object nextRecord(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        java.lang.Object r1, $r3;
        org.apache.flink.api.common.io.InputFormat $r2;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $r3 = interfaceinvoke $r2.<org.apache.flink.api.common.io.InputFormat: java.lang.Object nextRecord(java.lang.Object)>(r1);

        return $r3;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.api.common.io.InputFormat $r1;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        $r1 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        interfaceinvoke $r1.<org.apache.flink.api.common.io.InputFormat: void close()>();

        return;
    }

    public void setRuntimeContext(org.apache.flink.api.common.functions.RuntimeContext)
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.api.common.functions.RuntimeContext r1;
        org.apache.flink.api.common.io.InputFormat $r2, $r3;
        boolean $z0;
        org.apache.flink.api.common.io.RichInputFormat $r4;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        r1 := @parameter0: org.apache.flink.api.common.functions.RuntimeContext;

        $r2 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $z0 = $r2 instanceof org.apache.flink.api.common.io.RichInputFormat;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $r4 = (org.apache.flink.api.common.io.RichInputFormat) $r3;

        virtualinvoke $r4.<org.apache.flink.api.common.io.RichInputFormat: void setRuntimeContext(org.apache.flink.api.common.functions.RuntimeContext)>(r1);

     label1:
        return;
    }

    public org.apache.flink.api.common.functions.RuntimeContext getRuntimeContext()
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.api.common.io.InputFormat $r1, $r3;
        boolean $z0;
        java.lang.RuntimeException $r2;
        org.apache.flink.api.common.io.RichInputFormat $r4;
        org.apache.flink.api.common.functions.RuntimeContext $r5;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        $r1 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $z0 = $r1 instanceof org.apache.flink.api.common.io.RichInputFormat;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $r4 = (org.apache.flink.api.common.io.RichInputFormat) $r3;

        $r5 = virtualinvoke $r4.<org.apache.flink.api.common.io.RichInputFormat: org.apache.flink.api.common.functions.RuntimeContext getRuntimeContext()>();

        return $r5;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("The underlying input format to this ReplicatingInputFormat isn\'t context aware");

        throw $r2;
    }

    public void openInputFormat() throws java.io.IOException
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.api.common.io.InputFormat $r1, $r2;
        boolean $z0;
        org.apache.flink.api.common.io.RichInputFormat $r3;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        $r1 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $z0 = $r1 instanceof org.apache.flink.api.common.io.RichInputFormat;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $r3 = (org.apache.flink.api.common.io.RichInputFormat) $r2;

        virtualinvoke $r3.<org.apache.flink.api.common.io.RichInputFormat: void openInputFormat()>();

     label1:
        return;
    }

    public void closeInputFormat() throws java.io.IOException
    {
        org.apache.flink.api.common.io.ReplicatingInputFormat r0;
        org.apache.flink.api.common.io.InputFormat $r1, $r2;
        boolean $z0;
        org.apache.flink.api.common.io.RichInputFormat $r3;

        r0 := @this: org.apache.flink.api.common.io.ReplicatingInputFormat;

        $r1 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $z0 = $r1 instanceof org.apache.flink.api.common.io.RichInputFormat;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.flink.api.common.io.ReplicatingInputFormat: org.apache.flink.api.common.io.InputFormat replicatedIF>;

        $r3 = (org.apache.flink.api.common.io.RichInputFormat) $r2;

        virtualinvoke $r3.<org.apache.flink.api.common.io.RichInputFormat: void closeInputFormat()>();

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.io.ReplicatingInputFormat: long serialVersionUID> = 1L;

        return;
    }
}
