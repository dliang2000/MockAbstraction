public class org.hamcrest.core.IsInstanceOf extends org.hamcrest.DiagnosingMatcher
{
    private final java.lang.Class expectedClass;
    private final java.lang.Class matchableClass;

    public void <init>(java.lang.Class)
    {
        org.hamcrest.core.IsInstanceOf r0;
        java.lang.Class r1, $r2;

        r0 := @this: org.hamcrest.core.IsInstanceOf;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.hamcrest.DiagnosingMatcher: void <init>()>();

        r0.<org.hamcrest.core.IsInstanceOf: java.lang.Class expectedClass> = r1;

        $r2 = staticinvoke <org.hamcrest.core.IsInstanceOf: java.lang.Class matchableClass(java.lang.Class)>(r1);

        r0.<org.hamcrest.core.IsInstanceOf: java.lang.Class matchableClass> = $r2;

        return;
    }

    private static java.lang.Class matchableClass(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.lang.Boolean: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return class "Ljava/lang/Boolean;";

     label1:
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return class "Ljava/lang/Byte;";

     label2:
        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        $z2 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        return class "Ljava/lang/Character;";

     label3:
        $r4 = <java.lang.Double: java.lang.Class TYPE>;

        $z3 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label4;

        return class "Ljava/lang/Double;";

     label4:
        $r5 = <java.lang.Float: java.lang.Class TYPE>;

        $z4 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label5;

        return class "Ljava/lang/Float;";

     label5:
        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $z5 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label6;

        return class "Ljava/lang/Integer;";

     label6:
        $r7 = <java.lang.Long: java.lang.Class TYPE>;

        $z6 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z6 == 0 goto label7;

        return class "Ljava/lang/Long;";

     label7:
        $r8 = <java.lang.Short: java.lang.Class TYPE>;

        $z7 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z7 == 0 goto label8;

        return class "Ljava/lang/Short;";

     label8:
        return r0;
    }

    protected boolean matches(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.core.IsInstanceOf r0;
        java.lang.Object r1;
        org.hamcrest.Description r2, $r4;
        java.lang.Class $r3, $r7;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: org.hamcrest.core.IsInstanceOf;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        if null != r1 goto label1;

        interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("null");

        return 0;

     label1:
        $r3 = r0.<org.hamcrest.core.IsInstanceOf: java.lang.Class matchableClass>;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r4 = interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>(r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is a ");

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r10);

        return 0;

     label2:
        return 1;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.core.IsInstanceOf r0;
        org.hamcrest.Description r1, $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: org.hamcrest.core.IsInstanceOf;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("an instance of ");

        $r3 = r0.<org.hamcrest.core.IsInstanceOf: java.lang.Class expectedClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r4);

        return;
    }

    public static org.hamcrest.Matcher instanceOf(java.lang.Class)
    {
        java.lang.Class r0;
        org.hamcrest.core.IsInstanceOf $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new org.hamcrest.core.IsInstanceOf;

        specialinvoke $r1.<org.hamcrest.core.IsInstanceOf: void <init>(java.lang.Class)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher any(java.lang.Class)
    {
        java.lang.Class r0;
        org.hamcrest.core.IsInstanceOf $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new org.hamcrest.core.IsInstanceOf;

        specialinvoke $r1.<org.hamcrest.core.IsInstanceOf: void <init>(java.lang.Class)>(r0);

        return $r1;
    }
}
