public class org.slf4j.MarkerFactory extends java.lang.Object
{
    static org.slf4j.IMarkerFactory MARKER_FACTORY;

    private void <init>()
    {
        org.slf4j.MarkerFactory r0;

        r0 := @this: org.slf4j.MarkerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static org.slf4j.IMarkerFactory bwCompatibleGetMarkerFactoryFromBinder() throws java.lang.NoClassDefFoundError
    {
        org.slf4j.impl.StaticMarkerBinder $r1, $r4;
        org.slf4j.IMarkerFactory $r2, $r5;
        java.lang.NoSuchMethodError $r3;

     label1:
        $r1 = staticinvoke <org.slf4j.impl.StaticMarkerBinder: org.slf4j.impl.StaticMarkerBinder getSingleton()>();

        $r2 = virtualinvoke $r1.<org.slf4j.impl.StaticMarkerBinder: org.slf4j.IMarkerFactory getMarkerFactory()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.slf4j.impl.StaticMarkerBinder: org.slf4j.impl.StaticMarkerBinder SINGLETON>;

        $r5 = virtualinvoke $r4.<org.slf4j.impl.StaticMarkerBinder: org.slf4j.IMarkerFactory getMarkerFactory()>();

        return $r5;

        catch java.lang.NoSuchMethodError from label1 to label2 with label3;
    }

    public static org.slf4j.Marker getMarker(java.lang.String)
    {
        java.lang.String r0;
        org.slf4j.IMarkerFactory $r1;
        org.slf4j.Marker $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.slf4j.MarkerFactory: org.slf4j.IMarkerFactory MARKER_FACTORY>;

        $r2 = interfaceinvoke $r1.<org.slf4j.IMarkerFactory: org.slf4j.Marker getMarker(java.lang.String)>(r0);

        return $r2;
    }

    public static org.slf4j.Marker getDetachedMarker(java.lang.String)
    {
        java.lang.String r0;
        org.slf4j.IMarkerFactory $r1;
        org.slf4j.Marker $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.slf4j.MarkerFactory: org.slf4j.IMarkerFactory MARKER_FACTORY>;

        $r2 = interfaceinvoke $r1.<org.slf4j.IMarkerFactory: org.slf4j.Marker getDetachedMarker(java.lang.String)>(r0);

        return $r2;
    }

    public static org.slf4j.IMarkerFactory getIMarkerFactory()
    {
        org.slf4j.IMarkerFactory $r0;

        $r0 = <org.slf4j.MarkerFactory: org.slf4j.IMarkerFactory MARKER_FACTORY>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.IMarkerFactory $r0;
        java.lang.NoClassDefFoundError $r1;
        org.slf4j.helpers.BasicMarkerFactory $r2;
        java.lang.Exception $r3;

     label1:
        $r0 = staticinvoke <org.slf4j.MarkerFactory: org.slf4j.IMarkerFactory bwCompatibleGetMarkerFactoryFromBinder()>();

        <org.slf4j.MarkerFactory: org.slf4j.IMarkerFactory MARKER_FACTORY> = $r0;

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        $r2 = new org.slf4j.helpers.BasicMarkerFactory;

        specialinvoke $r2.<org.slf4j.helpers.BasicMarkerFactory: void <init>()>();

        <org.slf4j.MarkerFactory: org.slf4j.IMarkerFactory MARKER_FACTORY> = $r2;

        goto label5;

     label4:
        $r3 := @caughtexception;

        staticinvoke <org.slf4j.helpers.Util: void report(java.lang.String,java.lang.Throwable)>("Unexpected failure while binding MarkerFactory", $r3);

     label5:
        return;

        catch java.lang.NoClassDefFoundError from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }
}
