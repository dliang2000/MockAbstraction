final class org.apache.flink.api.common.eventtime.WatermarkMatchers$1 extends org.hamcrest.FeatureMatcher
{

    void <init>(org.hamcrest.Matcher, java.lang.String, java.lang.String)
    {
        org.apache.flink.api.common.eventtime.WatermarkMatchers$1 r0;
        org.hamcrest.Matcher r1;
        java.lang.String r2, r3;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarkMatchers$1;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.hamcrest.FeatureMatcher: void <init>(org.hamcrest.Matcher,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    protected java.lang.Long featureValueOf(org.apache.flink.api.common.eventtime.Watermark)
    {
        org.apache.flink.api.common.eventtime.WatermarkMatchers$1 r0;
        org.apache.flink.api.common.eventtime.Watermark r1;
        long $l0;
        java.lang.Long $r2;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarkMatchers$1;

        r1 := @parameter0: org.apache.flink.api.common.eventtime.Watermark;

        $l0 = virtualinvoke r1.<org.apache.flink.api.common.eventtime.Watermark: long getTimestamp()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r2;
    }

    protected volatile java.lang.Object featureValueOf(java.lang.Object)
    {
        org.apache.flink.api.common.eventtime.WatermarkMatchers$1 r0;
        java.lang.Object r1;
        org.apache.flink.api.common.eventtime.Watermark $r2;
        java.lang.Long $r3;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarkMatchers$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.flink.api.common.eventtime.Watermark) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.common.eventtime.WatermarkMatchers$1: java.lang.Long featureValueOf(org.apache.flink.api.common.eventtime.Watermark)>($r2);

        return $r3;
    }
}
