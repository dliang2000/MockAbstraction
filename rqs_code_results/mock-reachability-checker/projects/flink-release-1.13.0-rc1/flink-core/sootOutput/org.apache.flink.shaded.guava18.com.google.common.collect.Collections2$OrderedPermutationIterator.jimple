final class org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator extends org.apache.flink.shaded.guava18.com.google.common.collect.AbstractIterator
{
    java.util.List nextPermutation;
    final java.util.Comparator comparator;

    void <init>(java.util.List, java.util.Comparator)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator r0;
        java.util.List r1;
        java.util.Comparator r2;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.Comparator;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractIterator: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(r1);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation> = $r3;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.Comparator comparator> = r2;

        return;
    }

    protected java.util.List computeNext()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList r1;
        java.util.List $r2, $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation>;

        if $r2 != null goto label1;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.lang.Object endOfData()>();

        $r5 = (java.util.List) $r4;

        return $r5;

     label1:
        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation>;

        r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList copyOf(java.util.Collection)>($r3);

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: void calculateNextPermutation()>();

        return r1;
    }

    void calculateNextPermutation()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator r0;
        int i0, i1, i2, $i3;
        java.util.List $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator;

        i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: int findNextJ()>();

        if i0 != -1 goto label1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation> = null;

        return;

     label1:
        i1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: int findNextL(int)>(i0);

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation>;

        staticinvoke <java.util.Collections: void swap(java.util.List,int,int)>($r1, i0, i1);

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation>;

        i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation>;

        $i3 = i0 + 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.List subList(int,int)>($i3, i2);

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r4);

        return;
    }

    int findNextJ()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator r0;
        java.util.List $r1, $r2, $r5;
        int $i0, $i1, $i2, i3;
        java.util.Comparator $r3;
        java.lang.Object $r4, $r6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i3 = $i0 - 2;

     label1:
        if i3 < 0 goto label3;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.Comparator comparator>;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation>;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation>;

        $i1 = i3 + 1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        $i2 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r6);

        if $i2 >= 0 goto label2;

        return i3;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        return -1;
    }

    int findNextL(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator r0;
        int i0, $i1, $i2, i3;
        java.lang.Object r1, $r7;
        java.util.List $r2, $r3, $r5;
        java.lang.AssertionError $r4;
        java.util.Comparator $r6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation>;

        r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        i3 = $i1 - 1;

     label1:
        if i3 <= i0 goto label3;

        $r6 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.Comparator comparator>;

        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List nextPermutation>;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i3);

        $i2 = interfaceinvoke $r6.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, $r7);

        if $i2 >= 0 goto label2;

        return i3;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("this statement should be unreachable");

        throw $r4;
    }

    protected volatile java.lang.Object computeNext()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator r0;
        java.util.List $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: java.util.List computeNext()>();

        return $r1;
    }
}
