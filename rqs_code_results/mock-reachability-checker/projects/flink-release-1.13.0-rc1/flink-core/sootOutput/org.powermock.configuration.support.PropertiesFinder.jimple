class org.powermock.configuration.support.PropertiesFinder extends java.lang.Object
{
    private final java.lang.ClassLoader classLoader;

    void <init>(java.lang.ClassLoader)
    {
        org.powermock.configuration.support.PropertiesFinder r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.powermock.configuration.support.PropertiesFinder;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.powermock.configuration.support.PropertiesFinder: java.lang.ClassLoader classLoader> = r1;

        return;
    }

    java.util.List find(java.lang.String) throws java.io.IOException, java.net.URISyntaxException
    {
        org.powermock.configuration.support.PropertiesFinder r0;
        java.lang.String r1, $r9;
        java.util.Enumeration r3;
        java.net.URL r4;
        java.util.ArrayList $r5;
        java.lang.ClassLoader $r6;
        boolean $z0;
        java.lang.Object $r7;
        org.powermock.configuration.support.PropertiesFinder$ConfigurationSource $r8;
        java.io.InputStream $r10;

        r0 := @this: org.powermock.configuration.support.PropertiesFinder;

        r1 := @parameter0: java.lang.String;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<org.powermock.configuration.support.PropertiesFinder: java.lang.ClassLoader classLoader>;

        r3 = virtualinvoke $r6.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>(r1);

     label1:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.net.URL) $r7;

        $r8 = new org.powermock.configuration.support.PropertiesFinder$ConfigurationSource;

        $r9 = virtualinvoke r4.<java.net.URL: java.lang.String getFile()>();

        $r10 = virtualinvoke r4.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r8.<org.powermock.configuration.support.PropertiesFinder$ConfigurationSource: void <init>(java.lang.String,java.io.InputStream)>($r9, $r10);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return $r5;
    }
}
