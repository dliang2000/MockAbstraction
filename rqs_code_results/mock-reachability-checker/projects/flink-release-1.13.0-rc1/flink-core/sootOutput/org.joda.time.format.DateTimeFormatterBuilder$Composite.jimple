class org.joda.time.format.DateTimeFormatterBuilder$Composite extends java.lang.Object implements org.joda.time.format.InternalPrinter, org.joda.time.format.InternalParser
{
    private final org.joda.time.format.InternalPrinter[] iPrinters;
    private final org.joda.time.format.InternalParser[] iParsers;
    private final int iPrintedLengthEstimate;
    private final int iParsedLengthEstimate;

    void <init>(java.util.List)
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        java.util.List r1;
        java.util.ArrayList $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        org.joda.time.format.InternalParser[] $r6, $r8;
        java.lang.Object $r7, $r10;
        int $i0, $i1, i2, i3, i4, i5, i6, i7;
        org.joda.time.format.InternalPrinter[] $r9, $r11;
        org.joda.time.format.InternalPrinter r12;
        org.joda.time.format.InternalParser r13;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>(r1, $r4, $r5);

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(null);

        if $z0 != 0 goto label01;

        $z3 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label02;

     label01:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters> = null;

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iPrintedLengthEstimate> = 0;

        goto label05;

     label02:
        i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r9 = newarray (org.joda.time.format.InternalPrinter)[i2];

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters> = $r9;

        i3 = 0;

        i4 = 0;

     label03:
        if i4 >= i2 goto label04;

        $r10 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i4);

        r12 = (org.joda.time.format.InternalPrinter) $r10;

        $i1 = interfaceinvoke r12.<org.joda.time.format.InternalPrinter: int estimatePrintedLength()>();

        i3 = i3 + $i1;

        $r11 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters>;

        $r11[i4] = r12;

        i4 = i4 + 1;

        goto label03;

     label04:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iPrintedLengthEstimate> = i3;

     label05:
        $z1 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(null);

        if $z1 != 0 goto label06;

        $z2 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label07;

     label06:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers> = null;

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iParsedLengthEstimate> = 0;

        goto label10;

     label07:
        i5 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = newarray (org.joda.time.format.InternalParser)[i5];

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers> = $r6;

        i6 = 0;

        i7 = 0;

     label08:
        if i7 >= i5 goto label09;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i7);

        r13 = (org.joda.time.format.InternalParser) $r7;

        $i0 = interfaceinvoke r13.<org.joda.time.format.InternalParser: int estimateParsedLength()>();

        i6 = i6 + $i0;

        $r8 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers>;

        $r8[i7] = r13;

        i7 = i7 + 1;

        goto label08;

     label09:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iParsedLengthEstimate> = i6;

     label10:
        return;
    }

    public int estimatePrintedLength()
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        int $i0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $i0 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iPrintedLengthEstimate>;

        return $i0;
    }

    public void printTo(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        java.lang.Appendable r1;
        long l0;
        org.joda.time.Chronology r2;
        int i1, i2, i3;
        org.joda.time.DateTimeZone r3;
        org.joda.time.format.InternalPrinter[] r4;
        org.joda.time.format.InternalPrinter $r5;
        java.lang.UnsupportedOperationException $r6;
        java.util.Locale r7;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r1 := @parameter0: java.lang.Appendable;

        l0 := @parameter1: long;

        r2 := @parameter2: org.joda.time.Chronology;

        i1 := @parameter3: int;

        r3 := @parameter4: org.joda.time.DateTimeZone;

        r7 := @parameter5: java.util.Locale;

        r4 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters>;

        if r4 != null goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;

     label1:
        if r7 != null goto label2;

        r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        i2 = lengthof r4;

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        $r5 = r4[i3];

        interfaceinvoke $r5.<org.joda.time.format.InternalPrinter: void printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)>(r1, l0, r2, i1, r3, r7);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void printTo(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        java.lang.Appendable r1;
        org.joda.time.ReadablePartial r2;
        org.joda.time.format.InternalPrinter[] r3;
        int i0, i1;
        org.joda.time.format.InternalPrinter $r4;
        java.lang.UnsupportedOperationException $r5;
        java.util.Locale r6;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: org.joda.time.ReadablePartial;

        r6 := @parameter2: java.util.Locale;

        r3 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters>;

        if r3 != null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;

     label1:
        if r6 != null goto label2;

        r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        i0 = lengthof r3;

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r4 = r3[i1];

        interfaceinvoke $r4.<org.joda.time.format.InternalPrinter: void printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)>(r1, r2, r6);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    public int estimateParsedLength()
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        int $i0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $i0 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iParsedLengthEstimate>;

        return $i0;
    }

    public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int)
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.DateTimeParserBucket r1;
        java.lang.CharSequence r2;
        org.joda.time.format.InternalParser[] r3;
        int i0, i1, i2;
        org.joda.time.format.InternalParser $r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r1 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        r2 := @parameter1: java.lang.CharSequence;

        i1 := @parameter2: int;

        r3 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers>;

        if r3 != null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;

     label1:
        i0 = lengthof r3;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        if i1 < 0 goto label3;

        $r4 = r3[i2];

        i1 = interfaceinvoke $r4.<org.joda.time.format.InternalParser: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>(r1, r2, i1);

        i2 = i2 + 1;

        goto label2;

     label3:
        return i1;
    }

    boolean isPrinter()
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.InternalPrinter[] $r1;
        boolean $z0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isParser()
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.InternalParser[] $r1;
        boolean $z0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void decompose(java.util.List, java.util.List, java.util.List)
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0, $r4, $r6;
        java.util.List r1, r2, r3;
        int i0, $i1, i2;
        boolean $z0, $z2;
        org.joda.time.format.InternalParser[] $r5;
        org.joda.time.format.InternalPrinter[] $r7;
        java.lang.Object r8, r9;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

        r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $z0 = r8 instanceof org.joda.time.format.DateTimeFormatterBuilder$Composite;

        if $z0 == 0 goto label2;

        $r6 = (org.joda.time.format.DateTimeFormatterBuilder$Composite) r8;

        $r7 = $r6.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters>;

        specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: void addArrayToList(java.util.List,java.lang.Object[])>(r2, $r7);

        goto label3;

     label2:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r8);

     label3:
        $i1 = i2 + 1;

        r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        $z2 = r9 instanceof org.joda.time.format.DateTimeFormatterBuilder$Composite;

        if $z2 == 0 goto label4;

        $r4 = (org.joda.time.format.DateTimeFormatterBuilder$Composite) r9;

        $r5 = $r4.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers>;

        specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: void addArrayToList(java.util.List,java.lang.Object[])>(r3, $r5);

        goto label5;

     label4:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r9);

     label5:
        i2 = i2 + 2;

        goto label1;

     label6:
        return;
    }

    private void addArrayToList(java.util.List, java.lang.Object[])
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        java.util.List r1;
        java.lang.Object[] r2;
        int $i0, i1;
        java.lang.Object $r3;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object[];

        if r2 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
