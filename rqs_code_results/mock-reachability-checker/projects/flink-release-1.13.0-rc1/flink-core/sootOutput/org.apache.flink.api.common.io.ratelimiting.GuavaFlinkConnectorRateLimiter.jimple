public class org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter extends java.lang.Object implements org.apache.flink.api.common.io.ratelimiting.FlinkConnectorRateLimiter
{
    private static final long serialVersionUID;
    private long globalRateBytesPerSecond;
    private long localRateBytesPerSecond;
    private org.apache.flink.api.common.functions.RuntimeContext runtimeContext;
    private org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter rateLimiter;

    public void <init>()
    {
        org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter r0;

        r0 := @this: org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void open(org.apache.flink.api.common.functions.RuntimeContext)
    {
        org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter r0;
        org.apache.flink.api.common.functions.RuntimeContext r1;
        long $l0, $l2, $l3, $l4;
        int $i1;
        double $d0;
        org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter $r2;

        r0 := @this: org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter;

        r1 := @parameter0: org.apache.flink.api.common.functions.RuntimeContext;

        r0.<org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter: org.apache.flink.api.common.functions.RuntimeContext runtimeContext> = r1;

        $l0 = r0.<org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter: long globalRateBytesPerSecond>;

        $i1 = interfaceinvoke r1.<org.apache.flink.api.common.functions.RuntimeContext: int getNumberOfParallelSubtasks()>();

        $l2 = (long) $i1;

        $l3 = $l0 / $l2;

        r0.<org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter: long localRateBytesPerSecond> = $l3;

        $l4 = r0.<org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter: long localRateBytesPerSecond>;

        $d0 = (double) $l4;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter: org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter create(double)>($d0);

        r0.<org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter: org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter rateLimiter> = $r2;

        return;
    }

    public void setRate(long)
    {
        org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter r0;
        long l0;

        r0 := @this: org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter;

        l0 := @parameter0: long;

        r0.<org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter: long globalRateBytesPerSecond> = l0;

        return;
    }

    public void acquire(int)
    {
        org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter r0;
        int i0, $i1;
        org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter $r1;

        r0 := @this: org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter: org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter rateLimiter>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(1, i0);

        virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.util.concurrent.RateLimiter: double acquire(int)>($i1);

        return;
    }

    public long getRate()
    {
        org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter r0;
        long $l0;

        r0 := @this: org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter;

        $l0 = r0.<org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter: long globalRateBytesPerSecond>;

        return $l0;
    }

    public void close()
    {
        org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter r0;

        r0 := @this: org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.io.ratelimiting.GuavaFlinkConnectorRateLimiter: long serialVersionUID> = -3680641524643737192L;

        return;
    }
}
