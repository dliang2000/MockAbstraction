final class org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl$MethodInvocationHandler extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
    private final java.lang.reflect.Method methodDelegator;
    final org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl this$0;

    public void <init>(org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl, java.lang.reflect.Method)
    {
        org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl$MethodInvocationHandler r0;
        org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl r1;
        java.lang.reflect.Method r2;

        r0 := @this: org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl$MethodInvocationHandler;

        r1 := @parameter0: org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl;

        r2 := @parameter1: java.lang.reflect.Method;

        r0.<org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl$MethodInvocationHandler: org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl$MethodInvocationHandler: java.lang.reflect.Method methodDelegator> = r2;

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl$MethodInvocationHandler r0;
        java.lang.Object r1, $r5;
        java.lang.reflect.Method r2, $r4;
        java.lang.Object[] r3;

        r0 := @this: org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl$MethodInvocationHandler;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object[];

        $r4 = r0.<org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl$MethodInvocationHandler: java.lang.reflect.Method methodDelegator>;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, r3);

        return $r5;
    }
}
