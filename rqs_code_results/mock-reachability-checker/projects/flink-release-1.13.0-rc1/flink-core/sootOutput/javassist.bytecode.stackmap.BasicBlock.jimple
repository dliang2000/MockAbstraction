public class javassist.bytecode.stackmap.BasicBlock extends java.lang.Object
{
    protected int position;
    protected int length;
    protected int incoming;
    protected javassist.bytecode.stackmap.BasicBlock[] exit;
    protected boolean stop;
    protected javassist.bytecode.stackmap.BasicBlock$Catch toCatch;

    protected void <init>(int)
    {
        javassist.bytecode.stackmap.BasicBlock r0;
        int i0;

        r0 := @this: javassist.bytecode.stackmap.BasicBlock;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.bytecode.stackmap.BasicBlock: int position> = i0;

        r0.<javassist.bytecode.stackmap.BasicBlock: int length> = 0;

        r0.<javassist.bytecode.stackmap.BasicBlock: int incoming> = 0;

        return;
    }

    public static javassist.bytecode.stackmap.BasicBlock find(javassist.bytecode.stackmap.BasicBlock[], int) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.stackmap.BasicBlock[] r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        javassist.bytecode.stackmap.BasicBlock r2;
        javassist.bytecode.BadBytecode $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: javassist.bytecode.stackmap.BasicBlock[];

        i0 := @parameter1: int;

        i1 = lengthof r0;

        i6 = 0;

     label1:
        if i6 >= i1 goto label3;

        r2 = r0[i6];

        $i2 = r2.<javassist.bytecode.stackmap.BasicBlock: int position>;

        if $i2 > i0 goto label2;

        $i4 = r2.<javassist.bytecode.stackmap.BasicBlock: int position>;

        $i3 = r2.<javassist.bytecode.stackmap.BasicBlock: int length>;

        $i5 = $i4 + $i3;

        if i0 >= $i5 goto label2;

        return r2;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        $r3 = new javassist.bytecode.BadBytecode;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no basic block at ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public java.lang.String toString()
    {
        javassist.bytecode.stackmap.BasicBlock r0;
        java.lang.String r2, $r8, $r10;
        int i0, $i1;
        java.lang.StringBuffer $r3;
        java.lang.Class $r4;

        r0 := @this: javassist.bytecode.stackmap.BasicBlock;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 >= 0 goto label1;

        $r10 = r2;

        goto label2;

     label1:
        $i1 = i0 + 1;

        $r10 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

     label2:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        virtualinvoke r0.<javassist.bytecode.stackmap.BasicBlock: void toString2(java.lang.StringBuffer)>($r3);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r8 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    protected void toString2(java.lang.StringBuffer)
    {
        javassist.bytecode.stackmap.BasicBlock r0, r2, $r14;
        java.lang.StringBuffer r1, $r3, $r4, $r5, $r6, $r7, $r8, $r13, $r15, $r16, $r17, $r19;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        javassist.bytecode.stackmap.BasicBlock[] $r10, r21;
        javassist.bytecode.stackmap.BasicBlock$Catch r22;

        r0 := @this: javassist.bytecode.stackmap.BasicBlock;

        r1 := @parameter0: java.lang.StringBuffer;

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("pos=");

        $i1 = r0.<javassist.bytecode.stackmap.BasicBlock: int position>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", len=");

        $i2 = r0.<javassist.bytecode.stackmap.BasicBlock: int length>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", in=");

        $i3 = r0.<javassist.bytecode.stackmap.BasicBlock: int incoming>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", exit{");

        $r10 = r0.<javassist.bytecode.stackmap.BasicBlock: javassist.bytecode.stackmap.BasicBlock[] exit>;

        if $r10 == null goto label2;

        r21 = r0.<javassist.bytecode.stackmap.BasicBlock: javassist.bytecode.stackmap.BasicBlock[] exit>;

        i0 = lengthof r21;

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        r2 = r21[i7];

        $i6 = r2.<javassist.bytecode.stackmap.BasicBlock: int position>;

        $r19 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        i7 = i7 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}, {");

        r22 = r0.<javassist.bytecode.stackmap.BasicBlock: javassist.bytecode.stackmap.BasicBlock$Catch toCatch>;

     label3:
        if r22 == null goto label4;

        $r13 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r14 = r22.<javassist.bytecode.stackmap.BasicBlock$Catch: javassist.bytecode.stackmap.BasicBlock body>;

        $i4 = $r14.<javassist.bytecode.stackmap.BasicBlock: int position>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $i5 = r22.<javassist.bytecode.stackmap.BasicBlock$Catch: int typeIndex>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("), ");

        r22 = r22.<javassist.bytecode.stackmap.BasicBlock$Catch: javassist.bytecode.stackmap.BasicBlock$Catch next>;

        goto label3;

     label4:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        return;
    }
}
