public abstract class org.apache.flink.api.common.typeutils.TypeSerializer extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.TypeSerializer r0;

        r0 := @this: org.apache.flink.api.common.typeutils.TypeSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract boolean isImmutableType();

    public abstract org.apache.flink.api.common.typeutils.TypeSerializer duplicate();

    public abstract java.lang.Object createInstance();

    public abstract java.lang.Object copy(java.lang.Object);

    public abstract java.lang.Object copy(java.lang.Object, java.lang.Object);

    public abstract int getLength();

    public abstract void serialize(java.lang.Object, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException;

    public abstract java.lang.Object deserialize(org.apache.flink.core.memory.DataInputView) throws java.io.IOException;

    public abstract java.lang.Object deserialize(java.lang.Object, org.apache.flink.core.memory.DataInputView) throws java.io.IOException;

    public abstract void copy(org.apache.flink.core.memory.DataInputView, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException;

    public abstract boolean equals(java.lang.Object);

    public abstract int hashCode();

    public abstract org.apache.flink.api.common.typeutils.TypeSerializerSnapshot snapshotConfiguration();

    public static void <clinit>()
    {
        <org.apache.flink.api.common.typeutils.TypeSerializer: long serialVersionUID> = 1L;

        return;
    }
}
