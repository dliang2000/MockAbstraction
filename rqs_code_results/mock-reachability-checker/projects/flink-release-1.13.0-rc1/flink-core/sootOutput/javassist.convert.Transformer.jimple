public abstract class javassist.convert.Transformer extends java.lang.Object implements javassist.bytecode.Opcode
{
    private javassist.convert.Transformer next;

    public void <init>(javassist.convert.Transformer)
    {
        javassist.convert.Transformer r0, r1;

        r0 := @this: javassist.convert.Transformer;

        r1 := @parameter0: javassist.convert.Transformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.convert.Transformer: javassist.convert.Transformer next> = r1;

        return;
    }

    public javassist.convert.Transformer getNext()
    {
        javassist.convert.Transformer r0, $r1;

        r0 := @this: javassist.convert.Transformer;

        $r1 = r0.<javassist.convert.Transformer: javassist.convert.Transformer next>;

        return $r1;
    }

    public void initialize(javassist.bytecode.ConstPool, javassist.bytecode.CodeAttribute)
    {
        javassist.convert.Transformer r0;
        javassist.bytecode.ConstPool r1;
        javassist.bytecode.CodeAttribute r2;

        r0 := @this: javassist.convert.Transformer;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: javassist.bytecode.CodeAttribute;

        return;
    }

    public void initialize(javassist.bytecode.ConstPool, javassist.CtClass, javassist.bytecode.MethodInfo) throws javassist.CannotCompileException
    {
        javassist.convert.Transformer r0;
        javassist.bytecode.ConstPool r1;
        javassist.CtClass r2;
        javassist.bytecode.MethodInfo r3;
        javassist.bytecode.CodeAttribute $r4;

        r0 := @this: javassist.convert.Transformer;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: javassist.CtClass;

        r3 := @parameter2: javassist.bytecode.MethodInfo;

        $r4 = virtualinvoke r3.<javassist.bytecode.MethodInfo: javassist.bytecode.CodeAttribute getCodeAttribute()>();

        virtualinvoke r0.<javassist.convert.Transformer: void initialize(javassist.bytecode.ConstPool,javassist.bytecode.CodeAttribute)>(r1, $r4);

        return;
    }

    public void clean()
    {
        javassist.convert.Transformer r0;

        r0 := @this: javassist.convert.Transformer;

        return;
    }

    public abstract int transform(javassist.CtClass, int, javassist.bytecode.CodeIterator, javassist.bytecode.ConstPool) throws javassist.CannotCompileException, javassist.bytecode.BadBytecode;

    public int extraLocals()
    {
        javassist.convert.Transformer r0;

        r0 := @this: javassist.convert.Transformer;

        return 0;
    }

    public int extraStack()
    {
        javassist.convert.Transformer r0;

        r0 := @this: javassist.convert.Transformer;

        return 0;
    }
}
