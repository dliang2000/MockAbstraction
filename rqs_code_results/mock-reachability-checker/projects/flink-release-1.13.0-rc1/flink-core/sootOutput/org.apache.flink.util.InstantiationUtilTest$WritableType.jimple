public final class org.apache.flink.util.InstantiationUtilTest$WritableType extends java.lang.Object implements org.apache.flink.core.io.IOReadableWritable
{
    private int aInt;
    private long aLong;

    public void <init>()
    {
        org.apache.flink.util.InstantiationUtilTest$WritableType r0;
        java.util.Random $r2;
        int $i0;
        long $l1;

        r0 := @this: org.apache.flink.util.InstantiationUtilTest$WritableType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r2.<java.util.Random: int nextInt()>();

        r0.<org.apache.flink.util.InstantiationUtilTest$WritableType: int aInt> = $i0;

        $l1 = virtualinvoke $r2.<java.util.Random: long nextLong()>();

        r0.<org.apache.flink.util.InstantiationUtilTest$WritableType: long aLong> = $l1;

        return;
    }

    public int hashCode()
    {
        org.apache.flink.util.InstantiationUtilTest$WritableType r0;
        java.lang.Object[] $r1;
        int $i0, $i2;
        java.lang.Integer $r2;
        long $l1;
        java.lang.Long $r3;

        r0 := @this: org.apache.flink.util.InstantiationUtilTest$WritableType;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = r0.<org.apache.flink.util.InstantiationUtilTest$WritableType: int aInt>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $l1 = r0.<org.apache.flink.util.InstantiationUtilTest$WritableType: long aLong>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r1[1] = $r3;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.util.InstantiationUtilTest$WritableType r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3;
        long $l0, $l1;
        byte $b2;
        int $i3, $i4;
        boolean $z0;

        r0 := @this: org.apache.flink.util.InstantiationUtilTest$WritableType;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 == null goto label4;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 != class "Lorg/apache/flink/util/InstantiationUtilTest$WritableType;" goto label4;

        r2 = (org.apache.flink.util.InstantiationUtilTest$WritableType) r1;

        $l1 = r0.<org.apache.flink.util.InstantiationUtilTest$WritableType: long aLong>;

        $l0 = r2.<org.apache.flink.util.InstantiationUtilTest$WritableType: long aLong>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label2;

        $i4 = r0.<org.apache.flink.util.InstantiationUtilTest$WritableType: int aInt>;

        $i3 = r2.<org.apache.flink.util.InstantiationUtilTest$WritableType: int aInt>;

        if $i4 != $i3 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        return 0;
    }

    public void write(org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.util.InstantiationUtilTest$WritableType r0;
        org.apache.flink.core.memory.DataOutputView r1;
        int $i0;
        long $l1;

        r0 := @this: org.apache.flink.util.InstantiationUtilTest$WritableType;

        r1 := @parameter0: org.apache.flink.core.memory.DataOutputView;

        $i0 = r0.<org.apache.flink.util.InstantiationUtilTest$WritableType: int aInt>;

        interfaceinvoke r1.<org.apache.flink.core.memory.DataOutputView: void writeInt(int)>($i0);

        $l1 = r0.<org.apache.flink.util.InstantiationUtilTest$WritableType: long aLong>;

        interfaceinvoke r1.<org.apache.flink.core.memory.DataOutputView: void writeLong(long)>($l1);

        return;
    }

    public void read(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.util.InstantiationUtilTest$WritableType r0;
        org.apache.flink.core.memory.DataInputView r1;
        int $i0;
        long $l1;

        r0 := @this: org.apache.flink.util.InstantiationUtilTest$WritableType;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        $i0 = interfaceinvoke r1.<org.apache.flink.core.memory.DataInputView: int readInt()>();

        r0.<org.apache.flink.util.InstantiationUtilTest$WritableType: int aInt> = $i0;

        $l1 = interfaceinvoke r1.<org.apache.flink.core.memory.DataInputView: long readLong()>();

        r0.<org.apache.flink.util.InstantiationUtilTest$WritableType: long aLong> = $l1;

        return;
    }
}
