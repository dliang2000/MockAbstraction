public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Versioned, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final java.lang.String FORMAT_NAME_JSON;
    protected static final int DEFAULT_FACTORY_FEATURE_FLAGS;
    protected static final int DEFAULT_PARSER_FEATURE_FLAGS;
    protected static final int DEFAULT_GENERATOR_FEATURE_FLAGS;
    public static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR;
    public static final char DEFAULT_QUOTE_CHAR;
    protected final transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols;
    protected final transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer;
    protected int _factoryFeatures;
    protected int _parserFeatures;
    protected int _generatorFeatures;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator;
    protected int _maximumNonEscapedChar;
    protected final char _quoteChar;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r1 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec) null;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>($r1);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r3;
        int $i0, $i1, $i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory: void <init>()>();

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols> = $r2;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer> = $r3;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_FACTORY_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = $i0;

        $i1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_PARSER_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = $i1;

        $i2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_GENERATOR_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = $i2;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: char _quoteChar> = 34;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r5, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r8;
        char $c7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols> = $r3;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer> = $r4;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_FACTORY_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = $i0;

        $i1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_PARSER_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = $i1;

        $i2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_GENERATOR_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = $i2;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r2;

        $i3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = $i3;

        $i4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = $i4;

        $i5 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = $i5;

        $r6 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator> = $r6;

        $r7 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator> = $r7;

        $r8 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes> = $r8;

        $r9 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = $r9;

        $i6 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar> = $i6;

        $c7 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: char _quoteChar>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: char _quoteChar> = $c7;

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r4, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r7;
        char $c7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory: void <init>()>();

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols> = $r2;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer> = $r3;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_FACTORY_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = $i0;

        $i1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_PARSER_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = $i1;

        $i2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_GENERATOR_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = $i2;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = null;

        $i3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder: int _factoryFeatures>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = $i3;

        $i4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder: int _streamReadFeatures>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = $i4;

        $i5 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder: int _streamWriteFeatures>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = $i5;

        $r5 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator> = $r5;

        $r6 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator> = $r6;

        $r7 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes> = $r7;

        $r8 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = $r8;

        $i6 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder: int _maximumNonEscapedChar>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar> = $i6;

        $c7 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder: char _quoteChar>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: char _quoteChar> = $c7;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TSFBuilder, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TSFBuilder r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TSFBuilder;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TokenStreamFactory: void <init>()>();

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols> = $r2;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer> = $r3;

        $i0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_FACTORY_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = $i0;

        $i1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_PARSER_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = $i1;

        $i2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_GENERATOR_FEATURE_FLAGS>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = $i2;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = null;

        $i3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TSFBuilder: int _factoryFeatures>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = $i3;

        $i4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TSFBuilder: int _streamReadFeatures>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = $i4;

        $i5 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TSFBuilder: int _streamWriteFeatures>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = $i5;

        $r5 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TSFBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator> = $r5;

        $r6 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TSFBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator> = $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: char _quoteChar> = 34;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TSFBuilder rebuild()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: void _requireJSONFactory(java.lang.String)>("Factory implementation for format (%s) MUST override `rebuild()` method");

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory)>(r0);

        return $r1;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TSFBuilder builder()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder $r0;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactoryBuilder: void <init>()>();

        return $r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory copy()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0, $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: void _checkInvalidCopy(java.lang.Class)>(class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonFactory;");

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>(r0, null);

        return $r1;
    }

    protected void _checkInvalidCopy(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.lang.Class r1, $r2, $r6;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r11, $r12;
        java.lang.String $r7, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == r1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed copy(): ");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (version: ");

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version version()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") does not override copy(); it has to");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r3;

     label1:
        return;
    }

    protected java.lang.Object readResolve()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0, $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>(r0, $r2);

        return $r1;
    }

    public boolean requiresPropertyOrdering()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        return 0;
    }

    public boolean canHandleBinaryNatively()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        return 0;
    }

    public boolean canUseCharArrays()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        return 1;
    }

    public boolean canParseAsync()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: boolean _isJSONFactory()>();

        return $z0;
    }

    public java.lang.Class getFormatReadFeatureType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        return null;
    }

    public java.lang.Class getFormatWriteFeatureType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        return null;
    }

    public boolean canUseSchema(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema r1;
        java.lang.String r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.lang.String getFormatName()>();

        if r2 == null goto label2;

        $r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema: java.lang.String getSchemaType()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.String getFormatName()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 != class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonFactory;" goto label1;

        return "JSON";

     label1:
        return null;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength hasFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor r1;
        java.lang.Class $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 != class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonFactory;" goto label1;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor)>(r1);

        return $r3;

     label1:
        return null;
    }

    public boolean requiresCustomCodec()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        return 0;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor;

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.format.InputAccessor)>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version version()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.PackageVersion: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version VERSION>;

        return $r1;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory configure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature r1;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature)>(r1);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature)>(r1);

     label2:
        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature: int getMask()>();

        $i2 = $i0 | $i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = $i2;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature: int getMask()>();

        $i2 = $i1 ^ -1;

        $i3 = $i0 & $i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = $i3;

        return r0;
    }

    public final boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature: int getMask()>();

        $i2 = $i0 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int getParserFeatures()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        return $i0;
    }

    public final int getGeneratorFeatures()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;

        return $i0;
    }

    public int getFormatParserFeatures()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        return 0;
    }

    public int getFormatGeneratorFeatures()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        return 0;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory configure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature r1;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)>(r1);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)>(r1);

     label2:
        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        $i2 = $i0 | $i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = $i2;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        $i2 = $i1 ^ -1;

        $i3 = $i0 & $i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = $i3;

        return r0;
    }

    public final boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        $i2 = $i0 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadFeature r1;
        int $i0, $i1, $i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadFeature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        $r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();

        $i1 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();

        $i2 = $i0 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator getInputDecorator()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory setInputDecorator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator> = r1;

        return r0;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory configure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature r1;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>(r1);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>(r1);

     label2:
        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();

        $i2 = $i0 | $i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = $i2;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();

        $i2 = $i1 ^ -1;

        $i3 = $i0 & $i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = $i3;

        return r0;
    }

    public final boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;

        $i1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();

        $i2 = $i0 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamWriteFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamWriteFeature r1;
        int $i0, $i1, $i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamWriteFeature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;

        $r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamWriteFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()>();

        $i1 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();

        $i2 = $i0 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory setCharacterEscapes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator getOutputDecorator()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory setOutputDecorator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory setRootValueSeparator(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>(r1);

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = $r3;

        return r0;
    }

    public java.lang.String getRootValueSeparator()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;

        $r3 = interfaceinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

     label2:
        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory setCodec(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec getCodec()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.File) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.File r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        java.io.FileInputStream $r4;
        java.io.InputStream $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.File;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(r1, 1);

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.InputStream _decorate(java.io.InputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r4, r2);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r5, r2);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.net.URL r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        java.io.InputStream r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.net.URL;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(r1, 1);

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.InputStream _optimizedStreamFromURL(java.net.URL)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.InputStream _decorate(java.io.InputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r3, r2);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r4, r2);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.InputStream r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.InputStream;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(r1, 0);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.InputStream _decorate(java.io.InputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r3, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.Reader r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.Reader;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(r1, 0);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.Reader _decorate(java.io.Reader,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(java.io.Reader,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r3, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[]) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        byte[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        java.io.InputStream r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator $r4, $r6;
        int $i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: byte[];

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(r1, 1);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        if $r4 == null goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        $i1 = lengthof r1;

        r3 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator: java.io.InputStream decorate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,byte[],int,int)>(r2, r1, 0, $i1);

        if r3 == null goto label1;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r3, r2);

        return $r7;

     label1:
        $i0 = lengthof r1;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(byte[],int,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r1, 0, $i0, r2);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[], int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        byte[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        java.io.InputStream r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator $r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(r1, 1);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        if $r4 == null goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        r3 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator: java.io.InputStream decorate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,byte[],int,int)>(r2, r1, i0, i1);

        if r3 == null goto label1;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r3, r2);

        return $r7;

     label1:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(byte[],int,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r1, i0, i1, r2);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.lang.String r1;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        char[] r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator $r4;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r5, $r7;
        java.io.StringReader $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        if $r4 != null goto label1;

        if i0 > 32768 goto label1;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: boolean canUseCharArrays()>();

        if $z0 != 0 goto label2;

     label1:
        $r6 = new java.io.StringReader;

        specialinvoke $r6.<java.io.StringReader: void <init>(java.lang.String)>(r1);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>($r6);

        return $r7;

     label2:
        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(r1, 1);

        r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] allocTokenBuffer(int)>(i0);

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, r3, 0);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(char[],int,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,boolean)>(r3, 0, i0, r2, 1);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(char[]) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        char[] r1;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: char[];

        $i0 = lengthof r1;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(char[],int,int)>(r1, 0, $i0);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        char[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r6;
        java.io.CharArrayReader $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        if $r2 == null goto label1;

        $r5 = new java.io.CharArrayReader;

        specialinvoke $r5.<java.io.CharArrayReader: void <init>(char[],int,int)>(r1, i0, i1);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>($r5);

        return $r6;

     label1:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(r1, 1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(char[],int,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,boolean)>(r1, i0, i1, $r3, 0);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.DataInput r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.DataInput;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(r1, 0);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.DataInput _decorate(java.io.DataInput,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(java.io.DataInput,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r3, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer r2, $r3;
        int $i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: void _requireJSONFactory(java.lang.String)>("Non-blocking source not (yet?) supported for this format (%s)");

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createNonBlockingContext(java.lang.Object)>(null);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;

        r2 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int)>($i0);

        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)>(r1, $i1, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.OutputStream r1, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r2, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r3;
        java.io.Writer r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r7, $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(r1, 0);

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void setEncoding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>(r2);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        if r2 != $r5 goto label1;

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.OutputStream _decorate(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r1, r3);

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r8, r3);

        return $r9;

     label1:
        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.Writer _createWriter(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r1, r2, r3);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.Writer _decorate(java.io.Writer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r4, r3);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r6, r3);

        return $r7;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.OutputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.Writer r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.Writer;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>(r1, 0);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.Writer _decorate(java.io.Writer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r3, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.File r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r2, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r4;
        java.io.Writer r5, $r8;
        java.io.FileOutputStream $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r9, $r11;
        java.io.OutputStream $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding;

        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>($r6, 1);

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void setEncoding(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>(r2);

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        if r2 != $r7 goto label1;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.OutputStream _decorate(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r6, r4);

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r10, r4);

        return $r11;

     label1:
        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.Writer _createWriter(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r6, r2, r4);

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.Writer _decorate(java.io.Writer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>(r5, r4);

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext)>($r8, r4);

        return $r9;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.DataOutput r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r2;
        java.io.OutputStream $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.DataOutput;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>($r3, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.DataOutput r1;
        java.io.OutputStream $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.DataOutput;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput)>(r1);

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>($r2, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.File) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.File r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createJsonParser(java.net.URL) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.net.URL r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.InputStream) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.InputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.Reader) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.Reader r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.Reader;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createJsonParser(byte[]) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        byte[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[])>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createJsonParser(byte[], int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        byte[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(r1, i0, i1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createJsonParser(java.lang.String) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.lang.String)>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.OutputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>(r1, r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.Writer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.Writer r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.Writer;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer)>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.OutputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>(r1, $r2);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.InputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper $r3;
        int $i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,java.io.InputStream)>(r2, r1);

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;

        $r7 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser constructParser(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int)>($i1, $r6, $r5, $r4, $i0);

        return $r7;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(java.io.Reader, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.Reader r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser $r3;
        int $i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;

        $r6 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int)>($i0);

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)>(r2, $i1, r1, $r5, $r6);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(char[], int, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        z0 := @parameter4: boolean;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;

        $r6 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int)>($i2);

        $i4 = i0 + i1;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean)>(r2, $i3, null, $r5, $r6, r1, i0, $i4, z0);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(byte[], int, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        byte[] r1;
        int i0, i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,byte[],int,int)>(r2, r1, i0, i1);

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;

        $r7 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser constructParser(int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int)>($i3, $r6, $r5, $r4, $i2);

        return $r7;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser _createParser(java.io.DataInput, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.DataInput r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        int i0, $i1, $i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8DataInputJsonParser $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.DataInput;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: void _requireJSONFactory(java.lang.String)>("InputData source not (yet?) supported for this format (%s)");

        i0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipUTF8BOM(java.io.DataInput)>(r1);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;

        r3 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int)>($i1);

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8DataInputJsonParser;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8DataInputJsonParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,java.io.DataInput,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,int)>(r2, $i2, r1, $r6, r3, i0);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.Writer r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r4, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator $r5;
        char $c0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r6;
        int $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r7, $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        $c0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: char _quoteChar>;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,java.io.Writer,char)>(r2, $i1, $r6, r1, $c0);

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar>;

        if $i2 <= 0 goto label1;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)>($i3);

     label1:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        if $r7 == null goto label2;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes)>($r10);

     label2:
        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;

        if r4 == $r8 goto label3;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>(r4);

     label3:
        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.OutputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r4, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator $r5;
        char $c0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r6;
        int $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r7, $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        $c0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: char _quoteChar>;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream,char)>(r2, $i1, $r6, r1, $c0);

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar>;

        if $i2 <= 0 goto label1;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)>($i3);

     label1:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        if $r7 == null goto label2;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes)>($r10);

     label2:
        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;

        if r4 == $r8 goto label3;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>(r4);

     label3:
        return $r5;
    }

    protected java.io.Writer _createWriter(java.io.OutputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.OutputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r3;
        java.io.OutputStreamWriter $r5;
        java.lang.String $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        if r2 != $r4 goto label1;

        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer;

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF8Writer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)>(r3, r1);

        return $r7;

     label1:
        $r5 = new java.io.OutputStreamWriter;

        $r6 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: java.lang.String getJavaName()>();

        specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, $r6);

        return $r5;
    }

    protected final java.io.InputStream _decorate(java.io.InputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.InputStream r1, r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        r3 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator: java.io.InputStream decorate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,java.io.InputStream)>(r2, r1);

        if r3 == null goto label1;

        return r3;

     label1:
        return r1;
    }

    protected final java.io.Reader _decorate(java.io.Reader, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.Reader r1, r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        r3 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator: java.io.Reader decorate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,java.io.Reader)>(r2, r1);

        if r3 == null goto label1;

        return r3;

     label1:
        return r1;
    }

    protected final java.io.DataInput _decorate(java.io.DataInput, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.DataInput r1, r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.DataInput;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;

        r3 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.InputDecorator: java.io.DataInput decorate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,java.io.DataInput)>(r2, r1);

        if r3 == null goto label1;

        return r3;

     label1:
        return r1;
    }

    protected final java.io.OutputStream _decorate(java.io.OutputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.OutputStream r1, r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;

        r3 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator: java.io.OutputStream decorate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)>(r2, r1);

        if r3 == null goto label1;

        return r3;

     label1:
        return r1;
    }

    protected final java.io.Writer _decorate(java.io.Writer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.io.Writer r1, r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;

        r3 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.OutputDecorator: java.io.Writer decorate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,java.io.Writer)>(r2, r1);

        if r3 == null goto label1;

        return r3;

     label1:
        return r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature $r1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledIn(int)>($i0);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecyclers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler getBufferRecycler()>();

        return $r3;

     label1:
        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: void <init>()>();

        return $r2;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.lang.Object r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()>();

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler,java.lang.Object,boolean)>($r3, r1, z0);

        return $r2;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _createNonBlockingContext(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()>();

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler,java.lang.Object,boolean)>($r3, r1, 0);

        return $r2;
    }

    private final void _requireJSONFactory(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.lang.String r1, $r4, $r5;
        boolean $z0;
        java.lang.UnsupportedOperationException $r2;
        java.lang.Object[] $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: boolean _isJSONFactory()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.lang.String getFormatName()>();

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r3);

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label1:
        return;
    }

    private final boolean _isJSONFactory()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.lang.String getFormatName()>();

        if $r1 != "JSON" goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        int $i0, $i1, $i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: char DEFAULT_QUOTE_CHAR> = 34;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.lang.String FORMAT_NAME_JSON> = "JSON";

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: long serialVersionUID> = 2L;

        $i0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature: int collectDefaults()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_FACTORY_FEATURE_FLAGS> = $i0;

        $i1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature: int collectDefaults()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_PARSER_FEATURE_FLAGS> = $i1;

        $i2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: int collectDefaults()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: int DEFAULT_GENERATOR_FEATURE_FLAGS> = $i2;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultPrettyPrinter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR>;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR> = $r0;

        return;
    }
}
