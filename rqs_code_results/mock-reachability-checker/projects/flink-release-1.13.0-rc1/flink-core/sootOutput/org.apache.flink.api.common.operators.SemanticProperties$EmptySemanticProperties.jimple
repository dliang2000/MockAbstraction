public class org.apache.flink.api.common.operators.SemanticProperties$EmptySemanticProperties extends java.lang.Object implements org.apache.flink.api.common.operators.SemanticProperties
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.api.common.operators.SemanticProperties$EmptySemanticProperties r0;

        r0 := @this: org.apache.flink.api.common.operators.SemanticProperties$EmptySemanticProperties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.api.common.operators.util.FieldSet getForwardingTargetFields(int, int)
    {
        org.apache.flink.api.common.operators.SemanticProperties$EmptySemanticProperties r0;
        int i0, i1;
        org.apache.flink.api.common.operators.util.FieldSet $r1;

        r0 := @this: org.apache.flink.api.common.operators.SemanticProperties$EmptySemanticProperties;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = <org.apache.flink.api.common.operators.util.FieldSet: org.apache.flink.api.common.operators.util.FieldSet EMPTY_SET>;

        return $r1;
    }

    public int getForwardingSourceField(int, int)
    {
        org.apache.flink.api.common.operators.SemanticProperties$EmptySemanticProperties r0;
        int i0, i1;

        r0 := @this: org.apache.flink.api.common.operators.SemanticProperties$EmptySemanticProperties;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return -1;
    }

    public org.apache.flink.api.common.operators.util.FieldSet getReadFields(int)
    {
        org.apache.flink.api.common.operators.SemanticProperties$EmptySemanticProperties r0;
        int i0;

        r0 := @this: org.apache.flink.api.common.operators.SemanticProperties$EmptySemanticProperties;

        i0 := @parameter0: int;

        return null;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.operators.SemanticProperties$EmptySemanticProperties: long serialVersionUID> = 1L;

        return;
    }
}
