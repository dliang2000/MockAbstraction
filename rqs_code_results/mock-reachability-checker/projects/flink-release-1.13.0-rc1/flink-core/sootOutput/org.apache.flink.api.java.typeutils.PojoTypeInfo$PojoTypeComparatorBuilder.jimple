class org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder extends java.lang.Object implements org.apache.flink.api.common.typeutils.CompositeType$TypeComparatorBuilder
{
    private java.util.ArrayList fieldComparators;
    private java.util.ArrayList keyFields;
    final org.apache.flink.api.java.typeutils.PojoTypeInfo this$0;

    public void <init>(org.apache.flink.api.java.typeutils.PojoTypeInfo)
    {
        org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder r0;
        org.apache.flink.api.java.typeutils.PojoTypeInfo r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder;

        r1 := @parameter0: org.apache.flink.api.java.typeutils.PojoTypeInfo;

        r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.java.typeutils.PojoTypeInfo this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList fieldComparators> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList keyFields> = $r3;

        return;
    }

    public void initializeTypeComparatorBuilder(int)
    {
        org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder r0;
        int i0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList fieldComparators>;

        virtualinvoke $r1.<java.util.ArrayList: void ensureCapacity(int)>(i0);

        $r2 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList keyFields>;

        virtualinvoke $r2.<java.util.ArrayList: void ensureCapacity(int)>(i0);

        return;
    }

    public void addComparatorField(int, org.apache.flink.api.common.typeutils.TypeComparator)
    {
        org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder r0;
        int i0;
        org.apache.flink.api.common.typeutils.TypeComparator r1;
        java.util.ArrayList $r2, $r4;
        org.apache.flink.api.java.typeutils.PojoTypeInfo $r3;
        org.apache.flink.api.java.typeutils.PojoField[] $r5;
        org.apache.flink.api.java.typeutils.PojoField $r6;
        java.lang.reflect.Field $r7;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.api.common.typeutils.TypeComparator;

        $r2 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList fieldComparators>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList keyFields>;

        $r3 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.java.typeutils.PojoTypeInfo this$0>;

        $r5 = staticinvoke <org.apache.flink.api.java.typeutils.PojoTypeInfo: org.apache.flink.api.java.typeutils.PojoField[] access$000(org.apache.flink.api.java.typeutils.PojoTypeInfo)>($r3);

        $r6 = $r5[i0];

        $r7 = virtualinvoke $r6.<org.apache.flink.api.java.typeutils.PojoField: java.lang.reflect.Field getField()>();

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        return;
    }

    public org.apache.flink.api.common.typeutils.TypeComparator createTypeComparator(org.apache.flink.api.common.ExecutionConfig)
    {
        org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder r0;
        org.apache.flink.api.common.ExecutionConfig r1;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r7, $r8, $r11, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.flink.api.java.typeutils.runtime.PojoComparator $r6;
        java.lang.reflect.Field[] $r9, $r12;
        java.lang.Object[] $r10, $r15;
        org.apache.flink.api.common.typeutils.TypeComparator[] $r14, $r17;
        org.apache.flink.api.java.typeutils.PojoTypeInfo $r16, $r19;
        org.apache.flink.api.common.typeutils.TypeSerializer $r18;
        java.lang.Class $r20;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder;

        r1 := @parameter0: org.apache.flink.api.common.ExecutionConfig;

        $r2 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList keyFields>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.flink.util.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "No keys were defined for the PojoTypeComparatorBuilder.");

        $r3 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList fieldComparators>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.flink.util.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "No type comparators were defined for the PojoTypeComparatorBuilder.");

        $r4 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList keyFields>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r5 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList fieldComparators>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i2 != $i3 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        staticinvoke <org.apache.flink.util.Preconditions: void checkState(boolean,java.lang.Object)>($z2, "Number of key fields and field comparators is not equal.");

        $r6 = new org.apache.flink.api.java.typeutils.runtime.PojoComparator;

        $r8 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList keyFields>;

        $r7 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList keyFields>;

        $i4 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r9 = newarray (java.lang.reflect.Field)[$i4];

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r12 = (java.lang.reflect.Field[]) $r10;

        $r13 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList fieldComparators>;

        $r11 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: java.util.ArrayList fieldComparators>;

        $i5 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $r14 = newarray (org.apache.flink.api.common.typeutils.TypeComparator)[$i5];

        $r15 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r17 = (org.apache.flink.api.common.typeutils.TypeComparator[]) $r15;

        $r16 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.java.typeutils.PojoTypeInfo this$0>;

        $r18 = virtualinvoke $r16.<org.apache.flink.api.java.typeutils.PojoTypeInfo: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>(r1);

        $r19 = r0.<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.java.typeutils.PojoTypeInfo this$0>;

        $r20 = virtualinvoke $r19.<org.apache.flink.api.java.typeutils.PojoTypeInfo: java.lang.Class getTypeClass()>();

        specialinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.PojoComparator: void <init>(java.lang.reflect.Field[],org.apache.flink.api.common.typeutils.TypeComparator[],org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class)>($r12, $r17, $r18, $r20);

        return $r6;
    }
}
