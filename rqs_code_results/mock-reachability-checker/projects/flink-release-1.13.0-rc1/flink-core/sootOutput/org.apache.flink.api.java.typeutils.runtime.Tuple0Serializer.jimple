public class org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer extends org.apache.flink.api.java.typeutils.runtime.TupleSerializer implements org.apache.flink.api.common.typeutils.TypeSerializerConfigSnapshot$SelfResolvingTypeSerializer
{
    private static final long serialVersionUID;
    public static final org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer INSTANCE;

    private void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.common.typeutils.TypeSerializer[] $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        $r1 = newarray (org.apache.flink.api.common.typeutils.TypeSerializer)[0];

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.TupleSerializer: void <init>(java.lang.Class,org.apache.flink.api.common.typeutils.TypeSerializer[])>(class "Lorg/apache/flink/api/java/tuple/Tuple0;", $r1);

        return;
    }

    public org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer duplicate()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        return r0;
    }

    public org.apache.flink.api.java.tuple.Tuple0 createInstance()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.tuple.Tuple0 $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        $r1 = <org.apache.flink.api.java.tuple.Tuple0: org.apache.flink.api.java.tuple.Tuple0 INSTANCE>;

        return $r1;
    }

    public org.apache.flink.api.java.tuple.Tuple0 createInstance(java.lang.Object[])
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        java.lang.Object[] r1;
        org.apache.flink.api.java.tuple.Tuple0 $r2;
        int $i0;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: java.lang.Object[];

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

     label1:
        $r2 = <org.apache.flink.api.java.tuple.Tuple0: org.apache.flink.api.java.tuple.Tuple0 INSTANCE>;

        return $r2;

     label2:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tuple0 cannot take any data, as it has zero fields.");

        throw $r3;
    }

    public org.apache.flink.api.java.tuple.Tuple0 copy(org.apache.flink.api.java.tuple.Tuple0)
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.tuple.Tuple0 r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple0;

        return r1;
    }

    public org.apache.flink.api.java.tuple.Tuple0 copy(org.apache.flink.api.java.tuple.Tuple0, org.apache.flink.api.java.tuple.Tuple0)
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.tuple.Tuple0 r1, r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple0;

        r2 := @parameter1: org.apache.flink.api.java.tuple.Tuple0;

        return r2;
    }

    public int getLength()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        return 1;
    }

    public void serialize(org.apache.flink.api.java.tuple.Tuple0, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.tuple.Tuple0 r1;
        org.apache.flink.core.memory.DataOutputView r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple0;

        r2 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke r2.<org.apache.flink.core.memory.DataOutputView: void writeByte(int)>(42);

        return;
    }

    public org.apache.flink.api.java.tuple.Tuple0 deserialize(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.core.memory.DataInputView r1;
        org.apache.flink.api.java.tuple.Tuple0 $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        interfaceinvoke r1.<org.apache.flink.core.memory.DataInputView: byte readByte()>();

        $r2 = <org.apache.flink.api.java.tuple.Tuple0: org.apache.flink.api.java.tuple.Tuple0 INSTANCE>;

        return $r2;
    }

    public org.apache.flink.api.java.tuple.Tuple0 deserialize(org.apache.flink.api.java.tuple.Tuple0, org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.tuple.Tuple0 r1;
        org.apache.flink.core.memory.DataInputView r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple0;

        r2 := @parameter1: org.apache.flink.core.memory.DataInputView;

        interfaceinvoke r2.<org.apache.flink.core.memory.DataInputView: byte readByte()>();

        return r1;
    }

    public void copy(org.apache.flink.core.memory.DataInputView, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.core.memory.DataInputView r1;
        org.apache.flink.core.memory.DataOutputView r2;
        byte $b0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        r2 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        $b0 = interfaceinvoke r1.<org.apache.flink.core.memory.DataInputView: byte readByte()>();

        interfaceinvoke r2.<org.apache.flink.core.memory.DataOutputView: void writeByte(int)>($b0);

        return;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializerSnapshot snapshotConfiguration()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.typeutils.runtime.Tuple0SerializerSnapshot $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        $r1 = new org.apache.flink.api.java.typeutils.runtime.Tuple0SerializerSnapshot;

        specialinvoke $r1.<org.apache.flink.api.java.typeutils.runtime.Tuple0SerializerSnapshot: void <init>()>();

        return $r1;
    }

    public int hashCode()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        java.lang.Class $r1;
        int $i0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        $r1 = class "Lorg/apache/flink/api/java/typeutils/runtime/Tuple0Serializer;";

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        return "Tuple0Serializer";
    }

    public org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility resolveSchemaCompatibilityViaRedirectingToNewSnapshotClass(org.apache.flink.api.common.typeutils.TypeSerializerConfigSnapshot)
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.common.typeutils.TypeSerializerConfigSnapshot r1;
        org.apache.flink.api.java.typeutils.runtime.Tuple0SerializerSnapshot $r3;
        org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility $r4;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializerConfigSnapshot;

        $r3 = new org.apache.flink.api.java.typeutils.runtime.Tuple0SerializerSnapshot;

        specialinvoke $r3.<org.apache.flink.api.java.typeutils.runtime.Tuple0SerializerSnapshot: void <init>()>();

        $r4 = virtualinvoke $r3.<org.apache.flink.api.java.typeutils.runtime.Tuple0SerializerSnapshot: org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility resolveSchemaCompatibility(org.apache.flink.api.common.typeutils.TypeSerializer)>(r0);

        return $r4;
    }

    public volatile org.apache.flink.api.java.tuple.Tuple deserialize(org.apache.flink.api.java.tuple.Tuple, org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.tuple.Tuple r1;
        org.apache.flink.core.memory.DataInputView r2;
        org.apache.flink.api.java.tuple.Tuple0 $r3, $r4;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple;

        r2 := @parameter1: org.apache.flink.core.memory.DataInputView;

        $r3 = (org.apache.flink.api.java.tuple.Tuple0) r1;

        $r4 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 deserialize(org.apache.flink.api.java.tuple.Tuple0,org.apache.flink.core.memory.DataInputView)>($r3, r2);

        return $r4;
    }

    public volatile org.apache.flink.api.java.tuple.Tuple deserialize(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.core.memory.DataInputView r1;
        org.apache.flink.api.java.tuple.Tuple0 $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        $r2 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 deserialize(org.apache.flink.core.memory.DataInputView)>(r1);

        return $r2;
    }

    public volatile void serialize(org.apache.flink.api.java.tuple.Tuple, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.tuple.Tuple r1;
        org.apache.flink.core.memory.DataOutputView r2;
        org.apache.flink.api.java.tuple.Tuple0 $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple;

        r2 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        $r3 = (org.apache.flink.api.java.tuple.Tuple0) r1;

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: void serialize(org.apache.flink.api.java.tuple.Tuple0,org.apache.flink.core.memory.DataOutputView)>($r3, r2);

        return;
    }

    public volatile org.apache.flink.api.java.tuple.Tuple copy(org.apache.flink.api.java.tuple.Tuple, org.apache.flink.api.java.tuple.Tuple)
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.tuple.Tuple r1, r2;
        org.apache.flink.api.java.tuple.Tuple0 $r3, $r4, $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple;

        r2 := @parameter1: org.apache.flink.api.java.tuple.Tuple;

        $r4 = (org.apache.flink.api.java.tuple.Tuple0) r1;

        $r3 = (org.apache.flink.api.java.tuple.Tuple0) r2;

        $r5 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 copy(org.apache.flink.api.java.tuple.Tuple0,org.apache.flink.api.java.tuple.Tuple0)>($r4, $r3);

        return $r5;
    }

    public volatile org.apache.flink.api.java.tuple.Tuple copy(org.apache.flink.api.java.tuple.Tuple)
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.tuple.Tuple r1;
        org.apache.flink.api.java.tuple.Tuple0 $r2, $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple;

        $r2 = (org.apache.flink.api.java.tuple.Tuple0) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 copy(org.apache.flink.api.java.tuple.Tuple0)>($r2);

        return $r3;
    }

    public volatile org.apache.flink.api.java.tuple.Tuple createInstance(java.lang.Object[])
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        java.lang.Object[] r1;
        org.apache.flink.api.java.tuple.Tuple0 $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 createInstance(java.lang.Object[])>(r1);

        return $r2;
    }

    public volatile org.apache.flink.api.java.tuple.Tuple createInstance()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.tuple.Tuple0 $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 createInstance()>();

        return $r1;
    }

    public volatile org.apache.flink.api.java.typeutils.runtime.TupleSerializer duplicate()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0, $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer duplicate()>();

        return $r1;
    }

    public volatile java.lang.Object createInstance(java.lang.Object[])
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        java.lang.Object[] r1;
        org.apache.flink.api.java.tuple.Tuple0 $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 createInstance(java.lang.Object[])>(r1);

        return $r2;
    }

    public volatile java.lang.Object deserialize(java.lang.Object, org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        java.lang.Object r1;
        org.apache.flink.core.memory.DataInputView r2;
        org.apache.flink.api.java.tuple.Tuple0 $r3, $r4;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.core.memory.DataInputView;

        $r3 = (org.apache.flink.api.java.tuple.Tuple0) r1;

        $r4 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 deserialize(org.apache.flink.api.java.tuple.Tuple0,org.apache.flink.core.memory.DataInputView)>($r3, r2);

        return $r4;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.core.memory.DataInputView r1;
        org.apache.flink.api.java.tuple.Tuple0 $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        $r2 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 deserialize(org.apache.flink.core.memory.DataInputView)>(r1);

        return $r2;
    }

    public volatile void serialize(java.lang.Object, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        java.lang.Object r1;
        org.apache.flink.core.memory.DataOutputView r2;
        org.apache.flink.api.java.tuple.Tuple0 $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        $r3 = (org.apache.flink.api.java.tuple.Tuple0) r1;

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: void serialize(org.apache.flink.api.java.tuple.Tuple0,org.apache.flink.core.memory.DataOutputView)>($r3, r2);

        return;
    }

    public volatile java.lang.Object copy(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        java.lang.Object r1, r2;
        org.apache.flink.api.java.tuple.Tuple0 $r3, $r4, $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.flink.api.java.tuple.Tuple0) r1;

        $r3 = (org.apache.flink.api.java.tuple.Tuple0) r2;

        $r5 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 copy(org.apache.flink.api.java.tuple.Tuple0,org.apache.flink.api.java.tuple.Tuple0)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object copy(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        java.lang.Object r1;
        org.apache.flink.api.java.tuple.Tuple0 $r2, $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.flink.api.java.tuple.Tuple0) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 copy(org.apache.flink.api.java.tuple.Tuple0)>($r2);

        return $r3;
    }

    public volatile java.lang.Object createInstance()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0;
        org.apache.flink.api.java.tuple.Tuple0 $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.tuple.Tuple0 createInstance()>();

        return $r1;
    }

    public volatile org.apache.flink.api.common.typeutils.TypeSerializer duplicate()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer r0, $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer duplicate()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer $r0;

        <org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: long serialVersionUID> = 1278813169022975971L;

        $r0 = new org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer;

        specialinvoke $r0.<org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: void <init>()>();

        <org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer: org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer INSTANCE> = $r0;

        return;
    }
}
