public class org.apache.flink.api.common.accumulators.AverageAccumulator extends java.lang.Object implements org.apache.flink.api.common.accumulators.SimpleAccumulator
{
    private static final long serialVersionUID;
    private long count;
    private double sum;

    public void <init>()
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void add(java.lang.Double)
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0;
        java.lang.Double r1;
        long $l0, $l1;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        r1 := @parameter0: java.lang.Double;

        $l0 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count>;

        $l1 = $l0 + 1L;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count> = $l1;

        $d0 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum>;

        $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 + $d1;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum> = $d2;

        return;
    }

    public void add(double)
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0;
        double d0, $d1, $d2;
        long $l0, $l1;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        d0 := @parameter0: double;

        $l0 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count>;

        $l1 = $l0 + 1L;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count> = $l1;

        $d1 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum>;

        $d2 = $d1 + d0;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum> = $d2;

        return;
    }

    public void add(long)
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0;
        long l0, $l1, $l2;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        l0 := @parameter0: long;

        $l1 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count>;

        $l2 = $l1 + 1L;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count> = $l2;

        $d1 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum>;

        $d0 = (double) l0;

        $d2 = $d1 + $d0;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum> = $d2;

        return;
    }

    public void add(int)
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0;
        int i0;
        long $l1, $l2;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        i0 := @parameter0: int;

        $l1 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count>;

        $l2 = $l1 + 1L;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count> = $l2;

        $d1 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum>;

        $d0 = (double) i0;

        $d2 = $d1 + $d0;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum> = $d2;

        return;
    }

    public java.lang.Double getLocalValue()
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0;
        long $l0, $l2;
        byte $b1;
        double $d0, $d1, $d2;
        java.lang.Double $r1, $r2;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        $l0 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        return $r2;

     label1:
        $d1 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum>;

        $l2 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count>;

        $d0 = (double) $l2;

        $d2 = $d1 / $d0;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        return $r1;
    }

    public void resetLocal()
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count> = 0L;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum> = 0.0;

        return;
    }

    public void merge(org.apache.flink.api.common.accumulators.Accumulator)
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0, r2;
        org.apache.flink.api.common.accumulators.Accumulator r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        long $l0, $l1, $l2;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        r1 := @parameter0: org.apache.flink.api.common.accumulators.Accumulator;

        $z0 = r1 instanceof org.apache.flink.api.common.accumulators.AverageAccumulator;

        if $z0 == 0 goto label1;

        r2 = (org.apache.flink.api.common.accumulators.AverageAccumulator) r1;

        $l1 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count>;

        $l0 = r2.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count>;

        $l2 = $l1 + $l0;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count> = $l2;

        $d1 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum>;

        $d0 = r2.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum>;

        $d2 = $d1 + $d0;

        r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum> = $d2;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The merged accumulator must be AverageAccumulator.");

        throw $r3;

     label2:
        return;
    }

    public org.apache.flink.api.common.accumulators.AverageAccumulator clone()
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0, $r2;
        long $l0;
        double $d0;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        $r2 = new org.apache.flink.api.common.accumulators.AverageAccumulator;

        specialinvoke $r2.<org.apache.flink.api.common.accumulators.AverageAccumulator: void <init>()>();

        $l0 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count>;

        $r2.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count> = $l0;

        $d0 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum>;

        $r2.<org.apache.flink.api.common.accumulators.AverageAccumulator: double sum> = $d0;

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7;
        java.lang.Double $r3;
        long $l0;
        java.lang.String $r8;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AverageAccumulator ");

        $r3 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: java.lang.Double getLocalValue()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $l0 = r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: long count>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elements");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0, $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: org.apache.flink.api.common.accumulators.AverageAccumulator clone()>();

        return $r1;
    }

    public volatile org.apache.flink.api.common.accumulators.Accumulator clone()
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0, $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: org.apache.flink.api.common.accumulators.AverageAccumulator clone()>();

        return $r1;
    }

    public volatile java.io.Serializable getLocalValue()
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0;
        java.lang.Double $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: java.lang.Double getLocalValue()>();

        return $r1;
    }

    public volatile void add(java.lang.Object)
    {
        org.apache.flink.api.common.accumulators.AverageAccumulator r0;
        java.lang.Object r1;
        java.lang.Double $r2;

        r0 := @this: org.apache.flink.api.common.accumulators.AverageAccumulator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        virtualinvoke r0.<org.apache.flink.api.common.accumulators.AverageAccumulator: void add(java.lang.Double)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.accumulators.AverageAccumulator: long serialVersionUID> = 3672555084179165255L;

        return;
    }
}
