public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator extends java.lang.Object
{
    private final java.lang.Class _elementType;
    private final java.util.Collection _result;
    private java.util.List _accumulator;

    public void <init>(java.lang.Class, java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator r0;
        java.lang.Class r1;
        java.util.Collection r2;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator> = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.lang.Class _elementType> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.Collection _result> = r2;

        return;
    }

    public void add(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator r0;
        java.lang.Object r1, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring r2;
        java.util.List $r3, $r4, $r5, $r7;
        boolean $z0;
        int $i0, $i1;
        java.util.Collection $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.Collection _result>;

        interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring) $r6;

        $r7 = r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring: java.util.List next>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.UnresolvedForwardReference r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring $r3;
        java.lang.Class $r4;
        java.util.List $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.lang.Class _elementType>;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class)>(r0, r1, $r4);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r3);

        return $r3;
    }

    public void resolveForwardReference(java.lang.Object, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator r0;
        java.lang.Object r1, r2, $r12;
        java.util.Iterator r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring r4;
        java.util.List $r5, $r13;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;
        java.util.Collection r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator>;

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.Collection _result>;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring) $r12;

        $z1 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring: boolean hasId(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        interfaceinvoke r14.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        $r13 = r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring: java.util.List next>;

        interfaceinvoke r14.<java.util.Collection: boolean addAll(java.util.Collection)>($r13);

        return;

     label2:
        r14 = r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring: java.util.List next>;

        goto label1;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to resolve a forward reference with id [");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] that wasn\'t previously seen as unresolved.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;
    }
}
