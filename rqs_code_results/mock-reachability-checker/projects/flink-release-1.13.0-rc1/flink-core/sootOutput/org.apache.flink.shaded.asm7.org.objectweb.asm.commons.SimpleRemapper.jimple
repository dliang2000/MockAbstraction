public class org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper extends org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper
{
    private final java.util.Map mapping;

    public void <init>(java.util.Map)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper r0;
        java.util.Map r1;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper: java.util.Map mapping> = r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper r0;
        java.lang.String r1, r2;
        java.util.Map $r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r1, r2);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper: java.util.Map mapping> = $r3;

        return;
    }

    public java.lang.String mapMethodName(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper r0;
        java.lang.String r1, r2, r3, r4, $r10, $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper: java.lang.String map(java.lang.String)>($r10);

        if r4 != null goto label1;

        $r11 = r2;

        goto label2;

     label1:
        $r11 = r4;

     label2:
        return $r11;
    }

    public java.lang.String mapInvokeDynamicMethodName(java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper r0;
        java.lang.String r1, r2, r3, $r8, $r9;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper: java.lang.String map(java.lang.String)>($r8);

        if r3 != null goto label1;

        $r9 = r1;

        goto label2;

     label1:
        $r9 = r3;

     label2:
        return $r9;
    }

    public java.lang.String mapFieldName(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper r0;
        java.lang.String r1, r2, r3, r4, $r9, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper: java.lang.String map(java.lang.String)>($r9);

        if r4 != null goto label1;

        $r10 = r2;

        goto label2;

     label1:
        $r10 = r4;

     label2:
        return $r10;
    }

    public java.lang.String map(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper r0;
        java.lang.String r1, $r4;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.SimpleRemapper: java.util.Map mapping>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }
}
