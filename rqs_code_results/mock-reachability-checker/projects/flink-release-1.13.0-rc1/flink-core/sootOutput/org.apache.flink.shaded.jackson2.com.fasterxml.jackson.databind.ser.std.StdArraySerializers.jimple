public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers extends java.lang.Object
{
    protected static final java.util.HashMap _arraySerializers;

    protected void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findStandardImpl(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.HashMap $r1;
        java.lang.String $r2;
        java.lang.Object $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r4;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) $r3;

        return $r4;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r2, $r7, $r12, $r17, $r22, $r27, $r32, $r37;
        java.lang.Class $r1, $r6, $r11, $r16, $r21, $r26, $r31, $r36;
        java.lang.String $r3, $r8, $r13, $r18, $r23, $r28, $r33, $r38;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ByteArraySerializer $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer $r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer $r29;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer $r34;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer $r39;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers> = $r0;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;

        $r1 = class "[Z";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer: void <init>()>();

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;

        $r6 = class "[B";

        $r8 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r9 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ByteArraySerializer;

        specialinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.ByteArraySerializer: void <init>()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;

        $r11 = class "[C";

        $r13 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r14 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer;

        specialinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer: void <init>()>();

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;

        $r16 = class "[S";

        $r18 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r19 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer;

        specialinvoke $r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer: void <init>()>();

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

        $r22 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;

        $r21 = class "[I";

        $r23 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r24 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer;

        specialinvoke $r24.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer: void <init>()>();

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r24);

        $r27 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;

        $r26 = class "[J";

        $r28 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();

        $r29 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer;

        specialinvoke $r29.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer: void <init>()>();

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r29);

        $r32 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;

        $r31 = class "[F";

        $r33 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>();

        $r34 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer;

        specialinvoke $r34.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer: void <init>()>();

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34);

        $r37 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers: java.util.HashMap _arraySerializers>;

        $r36 = class "[D";

        $r38 = virtualinvoke $r36.<java.lang.Class: java.lang.String getName()>();

        $r39 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer;

        specialinvoke $r39.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer: void <init>()>();

        virtualinvoke $r37.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r39);

        return;
    }
}
