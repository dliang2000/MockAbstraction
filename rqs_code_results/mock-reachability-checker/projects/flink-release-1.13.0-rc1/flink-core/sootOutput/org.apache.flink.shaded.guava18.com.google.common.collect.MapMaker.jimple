public final class org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker extends org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker
{
    private static final int DEFAULT_INITIAL_CAPACITY;
    private static final int DEFAULT_CONCURRENCY_LEVEL;
    private static final int DEFAULT_EXPIRATION_NANOS;
    static final int UNSET_INT;
    boolean useCustomMap;
    int initialCapacity;
    int concurrencyLevel;
    int maximumSize;
    org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength keyStrength;
    org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength valueStrength;
    long expireAfterWriteNanos;
    long expireAfterAccessNanos;
    org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause nullRemovalCause;
    org.apache.flink.shaded.guava18.com.google.common.base.Equivalence keyEquivalence;
    org.apache.flink.shaded.guava18.com.google.common.base.Ticker ticker;

    public void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker: void <init>()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int initialCapacity> = -1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int concurrencyLevel> = -1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int maximumSize> = -1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterWriteNanos> = -1L;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterAccessNanos> = -1L;

        return;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker keyEquivalence(org.apache.flink.shaded.guava18.com.google.common.base.Equivalence)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence r1, $r2, $r4, $r6;
        java.lang.Object[] $r3;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence keyEquivalence>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence keyEquivalence>;

        $r3[0] = $r4;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z0, "key equivalence was already set to %s", $r3);

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = (org.apache.flink.shaded.guava18.com.google.common.base.Equivalence) $r5;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence keyEquivalence> = $r6;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: boolean useCustomMap> = 1;

        return r0;
    }

    org.apache.flink.shaded.guava18.com.google.common.base.Equivalence getKeyEquivalence()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence $r1, $r3, $r5;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength $r2;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence keyEquivalence>;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence defaultEquivalence()>();

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>($r1, $r3);

        $r5 = (org.apache.flink.shaded.guava18.com.google.common.base.Equivalence) $r4;

        return $r5;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker initialCapacity(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        int i0, $i1, $i2;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int initialCapacity>;

        if $i1 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $i2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int initialCapacity>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[0] = $r2;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z0, "initial capacity was already set to %s", $r1);

        if i0 < 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean)>($z1);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int initialCapacity> = i0;

        return r0;
    }

    int getInitialCapacity()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int initialCapacity>;

        if $i0 != -1 goto label1;

        $i1 = 16;

        goto label2;

     label1:
        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int initialCapacity>;

     label2:
        return $i1;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker maximumSize(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int maximumSize>;

        if $i1 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $i2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int maximumSize>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[0] = $r2;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z0, "maximum size was already set to %s", $r1);

        if i0 < 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "maximum size must not be negative");

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int maximumSize> = i0;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: boolean useCustomMap> = 1;

        $i3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int maximumSize>;

        if $i3 != 0 goto label5;

        $r3 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause SIZE>;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause nullRemovalCause> = $r3;

     label5:
        return r0;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker concurrencyLevel(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        int i0, $i1, $i2;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int concurrencyLevel>;

        if $i1 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $i2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int concurrencyLevel>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[0] = $r2;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z0, "concurrency level was already set to %s", $r1);

        if i0 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean)>($z1);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int concurrencyLevel> = i0;

        return r0;
    }

    int getConcurrencyLevel()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int concurrencyLevel>;

        if $i0 != -1 goto label1;

        $i1 = 4;

        goto label2;

     label1:
        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int concurrencyLevel>;

     label2:
        return $i1;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker weakKeys()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $r1 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength WEAK>;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker setKeyStrength(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength)>($r1);

        return $r2;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker setKeyStrength(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength r1, $r2, $r4, $r6, $r7, $r8, $r9;
        java.lang.Object[] $r3;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength keyStrength>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength keyStrength>;

        $r3[0] = $r4;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z0, "Key strength was already set to %s", $r3);

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = (org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength) $r5;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength keyStrength> = $r6;

        $r8 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength keyStrength>;

        $r7 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength SOFT>;

        if $r8 == $r7 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "Soft keys are not supported");

        $r9 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength STRONG>;

        if r1 == $r9 goto label5;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: boolean useCustomMap> = 1;

     label5:
        return r0;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength keyStrength>;

        $r1 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength STRONG>;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>($r2, $r1);

        $r4 = (org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength) $r3;

        return $r4;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker weakValues()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $r1 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength WEAK>;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker setValueStrength(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength)>($r1);

        return $r2;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker softValues()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $r1 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength SOFT>;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker setValueStrength(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength)>($r1);

        return $r2;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker setValueStrength(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength r1, $r2, $r4, $r6, $r7;
        java.lang.Object[] $r3;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength valueStrength>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength valueStrength>;

        $r3[0] = $r4;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z0, "Value strength was already set to %s", $r3);

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = (org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength) $r5;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength valueStrength> = $r6;

        $r7 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength STRONG>;

        if r1 == $r7 goto label3;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: boolean useCustomMap> = 1;

     label3:
        return r0;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength getValueStrength()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength valueStrength>;

        $r1 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength STRONG>;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>($r2, $r1);

        $r4 = (org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength) $r3;

        return $r4;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker expireAfterWrite(long, java.util.concurrent.TimeUnit)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        long l0, $l1;
        java.util.concurrent.TimeUnit r1;
        byte $b2;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause $r2, $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: void checkExpiration(long,java.util.concurrent.TimeUnit)>(l0, r1);

        $l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterWriteNanos> = $l1;

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label1;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause nullRemovalCause>;

        if $r2 != null goto label1;

        $r3 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause EXPIRED>;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause nullRemovalCause> = $r3;

     label1:
        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: boolean useCustomMap> = 1;

        return r0;
    }

    private void checkExpiration(long, java.util.concurrent.TimeUnit)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        long l0, $l1, $l3, $l4, $l6;
        java.util.concurrent.TimeUnit r1;
        byte $b2, $b5, $b7;
        java.lang.Object[] $r2, $r4, $r6;
        java.lang.Long $r3, $r5, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $l1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterWriteNanos>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = newarray (java.lang.Object)[1];

        $l3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterWriteNanos>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r2[0] = $r3;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z0, "expireAfterWrite was already set to %s ns", $r2);

        $l4 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterAccessNanos>;

        $b5 = $l4 cmp -1L;

        if $b5 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $l6 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterAccessNanos>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r4[0] = $r5;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z1, "expireAfterAccess was already set to %s ns", $r4);

        $b7 = l0 cmp 0L;

        if $b7 < 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        $r6 = newarray (java.lang.Object)[2];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6[0] = $r7;

        $r6[1] = r1;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z2, "duration cannot be negative: %s %s", $r6);

        return;
    }

    long getExpireAfterWriteNanos()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $l0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterWriteNanos>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $l2 = 0L;

        goto label2;

     label1:
        $l2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterWriteNanos>;

     label2:
        return $l2;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker expireAfterAccess(long, java.util.concurrent.TimeUnit)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        long l0, $l1;
        java.util.concurrent.TimeUnit r1;
        byte $b2;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause $r2, $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: void checkExpiration(long,java.util.concurrent.TimeUnit)>(l0, r1);

        $l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterAccessNanos> = $l1;

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label1;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause nullRemovalCause>;

        if $r2 != null goto label1;

        $r3 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause EXPIRED>;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause nullRemovalCause> = $r3;

     label1:
        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: boolean useCustomMap> = 1;

        return r0;
    }

    long getExpireAfterAccessNanos()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $l0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterAccessNanos>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $l2 = 0L;

        goto label2;

     label1:
        $l2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterAccessNanos>;

     label2:
        return $l2;
    }

    org.apache.flink.shaded.guava18.com.google.common.base.Ticker getTicker()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Ticker $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.base.Ticker ticker>;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Ticker: org.apache.flink.shaded.guava18.com.google.common.base.Ticker systemTicker()>();

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r4 = (org.apache.flink.shaded.guava18.com.google.common.base.Ticker) $r3;

        return $r4;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker removalListener(org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalListener)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalListener r1, $r3, $r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalListener;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalListener removalListener>;

        if $r3 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalListener) $r4;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalListener removalListener> = $r5;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: boolean useCustomMap> = 1;

        return r0;
    }

    public java.util.concurrent.ConcurrentMap makeMap()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause $r1;
        java.util.concurrent.ConcurrentMap $r2;
        java.util.concurrent.ConcurrentHashMap $r3;
        int $i0, $i1;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap $r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$NullConcurrentMap $r5;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $z0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: boolean useCustomMap>;

        if $z0 != 0 goto label1;

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int getInitialCapacity()>();

        $i1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int getConcurrencyLevel()>();

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>($i0, 0.75F, $i1);

        return $r3;

     label1:
        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause nullRemovalCause>;

        if $r1 != null goto label2;

        $r4 = new org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap;

        specialinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker)>(r0);

        return $r4;

     label2:
        $r5 = new org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$NullConcurrentMap;

        specialinvoke $r5.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$NullConcurrentMap: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker)>(r0);

        $r2 = (java.util.concurrent.ConcurrentMap) $r5;

        return $r2;
    }

    org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap makeCustomMap()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker)>(r0);

        return $r1;
    }

    java.util.concurrent.ConcurrentMap makeComputingMap(org.apache.flink.shaded.guava18.com.google.common.base.Function)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Function r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause $r2;
        java.util.concurrent.ConcurrentMap $r3;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$ComputingMapAdapter $r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$NullComputingConcurrentMap $r5;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.Function;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause nullRemovalCause>;

        if $r2 != null goto label1;

        $r4 = new org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$ComputingMapAdapter;

        specialinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$ComputingMapAdapter: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker,org.apache.flink.shaded.guava18.com.google.common.base.Function)>(r0, r1);

        return $r4;

     label1:
        $r5 = new org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$NullComputingConcurrentMap;

        specialinvoke $r5.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$NullComputingConcurrentMap: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker,org.apache.flink.shaded.guava18.com.google.common.base.Function)>(r0, r1);

        $r3 = (java.util.concurrent.ConcurrentMap) $r5;

        return $r3;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0;
        org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper r1;
        int $i0, $i1, $i2, $i7, $i8, $i9;
        long $l3, $l5, l10, l11;
        byte $b4, $b6;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength $r2, $r3, $r9, $r13;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence $r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalListener $r5;
        java.lang.String $r6, $r10, $r11, $r14, $r15, $r20, $r25;
        java.lang.StringBuilder $r17, $r18, $r19, $r22, $r23, $r24;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects: org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>(r0);

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int initialCapacity>;

        if $i0 == -1 goto label1;

        $i9 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int initialCapacity>;

        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper: org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int)>("initialCapacity", $i9);

     label1:
        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int concurrencyLevel>;

        if $i1 == -1 goto label2;

        $i8 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int concurrencyLevel>;

        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper: org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int)>("concurrencyLevel", $i8);

     label2:
        $i2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int maximumSize>;

        if $i2 == -1 goto label3;

        $i7 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int maximumSize>;

        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper: org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int)>("maximumSize", $i7);

     label3:
        $l3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterWriteNanos>;

        $b4 = $l3 cmp -1L;

        if $b4 == 0 goto label4;

        l10 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterWriteNanos>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(int)>(22);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l10);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ns");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper: org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("expireAfterWrite", $r25);

     label4:
        $l5 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterAccessNanos>;

        $b6 = $l5 cmp -1L;

        if $b6 == 0 goto label5;

        l11 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: long expireAfterAccessNanos>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(int)>(22);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l11);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ns");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper: org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("expireAfterAccess", $r20);

     label5:
        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength keyStrength>;

        if $r2 == null goto label6;

        $r13 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength keyStrength>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength: java.lang.String toString()>();

        $r15 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>($r14);

        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper: org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("keyStrength", $r15);

     label6:
        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength valueStrength>;

        if $r3 == null goto label7;

        $r9 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength valueStrength>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Strength: java.lang.String toString()>();

        $r11 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>($r10);

        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper: org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("valueStrength", $r11);

     label7:
        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence keyEquivalence>;

        if $r4 == null goto label8;

        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper: org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object)>("keyEquivalence");

     label8:
        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalListener removalListener>;

        if $r5 == null goto label9;

        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper: org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object)>("removalListener");

     label9:
        $r6 = virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r6;
    }

    volatile org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker expireAfterAccess(long, java.util.concurrent.TimeUnit)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r2;
        long l0;
        java.util.concurrent.TimeUnit r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker expireAfterAccess(long,java.util.concurrent.TimeUnit)>(l0, r1);

        return $r2;
    }

    volatile org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker expireAfterWrite(long, java.util.concurrent.TimeUnit)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r2;
        long l0;
        java.util.concurrent.TimeUnit r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker expireAfterWrite(long,java.util.concurrent.TimeUnit)>(l0, r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker softValues()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker softValues()>();

        return $r1;
    }

    public volatile org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker weakValues()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker weakValues()>();

        return $r1;
    }

    public volatile org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker weakKeys()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker weakKeys()>();

        return $r1;
    }

    public volatile org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker concurrencyLevel(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r1;
        int i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker concurrencyLevel(int)>(i0);

        return $r1;
    }

    volatile org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker maximumSize(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r1;
        int i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker maximumSize(int)>(i0);

        return $r1;
    }

    public volatile org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker initialCapacity(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r1;
        int i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker initialCapacity(int)>(i0);

        return $r1;
    }

    volatile org.apache.flink.shaded.guava18.com.google.common.collect.GenericMapMaker keyEquivalence(org.apache.flink.shaded.guava18.com.google.common.base.Equivalence)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker r0, $r2;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker keyEquivalence(org.apache.flink.shaded.guava18.com.google.common.base.Equivalence)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int UNSET_INT> = -1;

        <org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int DEFAULT_EXPIRATION_NANOS> = 0;

        <org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int DEFAULT_CONCURRENCY_LEVEL> = 4;

        <org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker: int DEFAULT_INITIAL_CAPACITY> = 16;

        return;
    }
}
