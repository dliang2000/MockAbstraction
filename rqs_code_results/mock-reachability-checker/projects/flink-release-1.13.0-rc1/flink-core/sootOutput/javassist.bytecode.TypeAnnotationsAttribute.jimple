public class javassist.bytecode.TypeAnnotationsAttribute extends javassist.bytecode.AttributeInfo
{
    public static final java.lang.String visibleTag;
    public static final java.lang.String invisibleTag;

    public void <init>(javassist.bytecode.ConstPool, java.lang.String, byte[])
    {
        javassist.bytecode.TypeAnnotationsAttribute r0;
        javassist.bytecode.ConstPool r1;
        java.lang.String r2;
        byte[] r3;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, r2, r3);

        return;
    }

    void <init>(javassist.bytecode.ConstPool, int, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.TypeAnnotationsAttribute r0;
        javassist.bytecode.ConstPool r1;
        int i0;
        java.io.DataInputStream r2;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.DataInputStream;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r1, i0, r2);

        return;
    }

    public int numAnnotations()
    {
        javassist.bytecode.TypeAnnotationsAttribute r0;
        byte[] $r1;
        int $i0;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute;

        $r1 = r0.<javassist.bytecode.TypeAnnotationsAttribute: byte[] info>;

        $i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, 0);

        return $i0;
    }

    public javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.TypeAnnotationsAttribute r0, $r8;
        javassist.bytecode.ConstPool r1, $r6;
        java.util.Map r2;
        javassist.bytecode.TypeAnnotationsAttribute$Copier $r5;
        byte[] $r7, $r10;
        java.lang.String $r9;
        java.lang.Exception $r11;
        java.lang.RuntimeException $r12;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        $r5 = new javassist.bytecode.TypeAnnotationsAttribute$Copier;

        $r7 = r0.<javassist.bytecode.TypeAnnotationsAttribute: byte[] info>;

        $r6 = r0.<javassist.bytecode.TypeAnnotationsAttribute: javassist.bytecode.ConstPool constPool>;

        specialinvoke $r5.<javassist.bytecode.TypeAnnotationsAttribute$Copier: void <init>(byte[],javassist.bytecode.ConstPool,javassist.bytecode.ConstPool,java.util.Map)>($r7, $r6, r1, r2);

     label1:
        virtualinvoke $r5.<javassist.bytecode.TypeAnnotationsAttribute$Copier: void annotationArray()>();

        $r8 = new javassist.bytecode.TypeAnnotationsAttribute;

        $r9 = virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute: java.lang.String getName()>();

        $r10 = virtualinvoke $r5.<javassist.bytecode.TypeAnnotationsAttribute$Copier: byte[] close()>();

        specialinvoke $r8.<javassist.bytecode.TypeAnnotationsAttribute: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, $r9, $r10);

     label2:
        return $r8;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    void renameClass(java.lang.String, java.lang.String)
    {
        javassist.bytecode.TypeAnnotationsAttribute r0;
        java.lang.String r1, r2;
        java.util.HashMap $r4;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute: void renameClass(java.util.Map)>($r4);

        return;
    }

    void renameClass(java.util.Map)
    {
        javassist.bytecode.TypeAnnotationsAttribute r0;
        java.util.Map r1;
        javassist.bytecode.TypeAnnotationsAttribute$Renamer $r4;
        byte[] $r5;
        javassist.bytecode.ConstPool $r6;
        java.lang.Exception $r7;
        java.lang.RuntimeException $r8;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute;

        r1 := @parameter0: java.util.Map;

        $r4 = new javassist.bytecode.TypeAnnotationsAttribute$Renamer;

        $r5 = r0.<javassist.bytecode.TypeAnnotationsAttribute: byte[] info>;

        $r6 = virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute: javassist.bytecode.ConstPool getConstPool()>();

        specialinvoke $r4.<javassist.bytecode.TypeAnnotationsAttribute$Renamer: void <init>(byte[],javassist.bytecode.ConstPool,java.util.Map)>($r5, $r6, r1);

     label1:
        virtualinvoke $r4.<javassist.bytecode.TypeAnnotationsAttribute$Renamer: void annotationArray()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    void getRefClasses(java.util.Map)
    {
        javassist.bytecode.TypeAnnotationsAttribute r0;
        java.util.Map r1;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute;

        r1 := @parameter0: java.util.Map;

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute: void renameClass(java.util.Map)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.TypeAnnotationsAttribute: java.lang.String invisibleTag> = "RuntimeInvisibleTypeAnnotations";

        <javassist.bytecode.TypeAnnotationsAttribute: java.lang.String visibleTag> = "RuntimeVisibleTypeAnnotations";

        return;
    }
}
