public final class org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable extends java.lang.Object implements org.apache.flink.types.CopyableValue
{
    public static final long serialVersionUID;
    private long value;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(long)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable r0;
        long l0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: long value> = l0;

        return;
    }

    public int getBinaryLength()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        return 8;
    }

    public void copyTo(org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable r0, r1;
        long $l0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        r1 := @parameter0: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        $l0 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: long value>;

        r1.<org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: long value> = $l0;

        return;
    }

    public org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable copy()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable r0, $r1;
        long $l0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        $r1 = new org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        $l0 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: long value>;

        specialinvoke $r1.<org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: void <init>(long)>($l0);

        return $r1;
    }

    public void copy(org.apache.flink.core.memory.DataInputView, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable r0;
        org.apache.flink.core.memory.DataInputView r1;
        org.apache.flink.core.memory.DataOutputView r2;
        long $l0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        r2 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        $l0 = interfaceinvoke r1.<org.apache.flink.core.memory.DataInputView: long readLong()>();

        interfaceinvoke r2.<org.apache.flink.core.memory.DataOutputView: void writeLong(long)>($l0);

        return;
    }

    public void write(org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable r0;
        org.apache.flink.core.memory.DataOutputView r1;
        long $l0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        r1 := @parameter0: org.apache.flink.core.memory.DataOutputView;

        $l0 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: long value>;

        interfaceinvoke r1.<org.apache.flink.core.memory.DataOutputView: void writeLong(long)>($l0);

        return;
    }

    public void read(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable r0;
        org.apache.flink.core.memory.DataInputView r1;
        long $l0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        $l0 = interfaceinvoke r1.<org.apache.flink.core.memory.DataInputView: long readLong()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: long value> = $l0;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        long $l0, $l1;
        byte $b2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable) r1;

        $l1 = r0.<org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: long value>;

        $l0 = r2.<org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: long value>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public volatile java.lang.Object copy()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable r0, $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable copy()>();

        return $r1;
    }

    public volatile void copyTo(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable) r1;

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: void copyTo(org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.runtime.CopyableSerializerUpgradeTest$SimpleCopyable: long serialVersionUID> = 1L;

        return;
    }
}
