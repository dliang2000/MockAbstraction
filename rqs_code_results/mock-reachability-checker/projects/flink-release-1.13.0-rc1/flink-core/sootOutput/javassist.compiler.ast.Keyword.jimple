public class javassist.compiler.ast.Keyword extends javassist.compiler.ast.ASTree
{
    private static final long serialVersionUID;
    protected int tokenId;

    public void <init>(int)
    {
        javassist.compiler.ast.Keyword r0;
        int i0;

        r0 := @this: javassist.compiler.ast.Keyword;

        i0 := @parameter0: int;

        specialinvoke r0.<javassist.compiler.ast.ASTree: void <init>()>();

        r0.<javassist.compiler.ast.Keyword: int tokenId> = i0;

        return;
    }

    public int get()
    {
        javassist.compiler.ast.Keyword r0;
        int $i0;

        r0 := @this: javassist.compiler.ast.Keyword;

        $i0 = r0.<javassist.compiler.ast.Keyword: int tokenId>;

        return $i0;
    }

    public java.lang.String toString()
    {
        javassist.compiler.ast.Keyword r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i0;
        java.lang.String $r4;

        r0 := @this: javassist.compiler.ast.Keyword;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id:");

        $i0 = r0.<javassist.compiler.ast.Keyword: int tokenId>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public void accept(javassist.compiler.ast.Visitor) throws javassist.compiler.CompileError
    {
        javassist.compiler.ast.Keyword r0;
        javassist.compiler.ast.Visitor r1;

        r0 := @this: javassist.compiler.ast.Keyword;

        r1 := @parameter0: javassist.compiler.ast.Visitor;

        virtualinvoke r1.<javassist.compiler.ast.Visitor: void atKeyword(javassist.compiler.ast.Keyword)>(r0);

        return;
    }

    public static void <clinit>()
    {
        <javassist.compiler.ast.Keyword: long serialVersionUID> = 1L;

        return;
    }
}
