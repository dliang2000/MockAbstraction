final class org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection extends java.util.AbstractCollection
{
    final org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList inputList;
    final java.util.Comparator comparator;
    final int size;

    void <init>(java.lang.Iterable, java.util.Comparator)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection r0;
        java.lang.Iterable r1;
        java.util.Comparator r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering $r3;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r4, $r5;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.util.Comparator;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering 'from'(java.util.Comparator)>(r2);

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable)>(r1);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList inputList> = $r4;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection: java.util.Comparator comparator> = r2;

        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList inputList>;

        $i0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection: int calculateSize(java.util.List,java.util.Comparator)>($r5, r2);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection: int size> = $i0;

        return;
    }

    private static int calculateSize(java.util.List, java.util.Comparator)
    {
        java.util.List r0;
        java.util.Comparator r1;
        int i0, $i1, $i3, $i4, i7, i8;
        long $l2, $l5, l6, l9;
        boolean $z0, $z1;
        java.lang.Object $r2, $r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Comparator;

        l6 = 1L;

        i7 = 1;

        i8 = 1;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i7 >= $i1 goto label3;

        $i4 = i7 - 1;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i4);

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i7);

        i0 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r3);

        if i0 >= 0 goto label2;

        $l5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.math.LongMath: long binomial(int,int)>(i7, i8);

        l6 = l6 * $l5;

        i8 = 0;

        $z1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: boolean access$000(long)>(l6);

        if $z1 != 0 goto label2;

        return 2147483647;

     label2:
        i7 = i7 + 1;

        i8 = i8 + 1;

        goto label1;

     label3:
        $l2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.math.LongMath: long binomial(int,int)>(i7, i8);

        l9 = l6 * $l2;

        $z0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: boolean access$000(long)>(l9);

        if $z0 != 0 goto label4;

        return 2147483647;

     label4:
        $i3 = (int) l9;

        return $i3;
    }

    public int size()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection: int size>;

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection;

        return 0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator $r1;
        java.util.Comparator $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList inputList>;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection: java.util.Comparator comparator>;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationIterator: void <init>(java.util.List,java.util.Comparator)>($r3, $r2);

        return $r1;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection r0;
        java.lang.Object r1;
        java.util.List r2;
        boolean $z0, $z1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.List;

        if $z0 == 0 goto label1;

        r2 = (java.util.List) r1;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList inputList>;

        $z1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: boolean access$100(java.util.List,java.util.List)>($r3, r2);

        return $z1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection r0;
        java.lang.String r1, $r3, $r8;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList inputList>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r4 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = 30 + $i0;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("orderedPermutationCollection(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
