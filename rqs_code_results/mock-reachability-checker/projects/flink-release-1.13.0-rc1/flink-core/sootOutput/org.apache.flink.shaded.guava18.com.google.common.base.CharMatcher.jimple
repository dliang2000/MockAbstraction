public abstract class org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher extends java.lang.Object implements org.apache.flink.shaded.guava18.com.google.common.base.Predicate
{
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher BREAKING_WHITESPACE;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher ASCII;
    private static final java.lang.String ZEROES;
    private static final java.lang.String NINES;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher DIGIT;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_DIGIT;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_LETTER;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_LETTER_OR_DIGIT;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_UPPER_CASE;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_LOWER_CASE;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_ISO_CONTROL;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher INVISIBLE;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher SINGLE_WIDTH;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher ANY;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher NONE;
    final java.lang.String description;
    private static final int DISTINCT_CHARS;
    static final java.lang.String WHITESPACE_TABLE;
    static final int WHITESPACE_MULTIPLIER;
    static final int WHITESPACE_SHIFT;
    public static final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher WHITESPACE;

    private static java.lang.String showCharacter(char)
    {
        java.lang.String r0, $r3;
        char[] $r2;
        char $c0, $c2, $c3, c4;
        int $i1, i5;

        c4 := @parameter0: char;

        r0 = "0123456789ABCDEF";

        $r2 = newarray (char)[6];

        $r2[0] = 92;

        $r2[1] = 117;

        $r2[2] = 0;

        $r2[3] = 0;

        $r2[4] = 0;

        $r2[5] = 0;

        i5 = 0;

     label1:
        if i5 >= 4 goto label2;

        $i1 = 5 - i5;

        $c0 = c4 & 15;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($c0);

        $r2[$i1] = $c2;

        $c3 = c4 >> 4;

        c4 = (char) $c3;

        i5 = i5 + 1;

        goto label1;

     label2:
        $r3 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[])>($r2);

        return $r3;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher is(char)
    {
        char c0;
        java.lang.String r0, r1, $r2, $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        int $i1, $i2;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$9 $r8;

        c0 := @parameter0: char;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String showCharacter(char)>(c0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r4 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = 18 + $i1;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CharMatcher.is(\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$9;

        specialinvoke $r8.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$9: void <init>(java.lang.String,char)>(r0, c0);

        return $r8;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher isNot(char)
    {
        char c0;
        java.lang.String r0, r1, $r2, $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        int $i1, $i2;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$10 $r8;

        c0 := @parameter0: char;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String showCharacter(char)>(c0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r4 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = 21 + $i1;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CharMatcher.isNot(\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$10;

        specialinvoke $r8.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$10: void <init>(java.lang.String,char)>(r0, c0);

        return $r8;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher anyOf(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        char[] r1;
        int i0, $i2, i6;
        char c1, $c3, $c4, $c5;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r4, $r5, $r6;
        java.lang.String $r7, $r11, $r12;
        java.lang.StringBuilder $r8;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$11 $r10;

        r0 := @parameter0: java.lang.CharSequence;

        $i2 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        tableswitch($i2)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r6 = <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher NONE>;

        return $r6;

     label2:
        $c5 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher is(char)>($c5);

        return $r5;

     label3:
        $c3 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(0);

        $c4 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(1);

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher isEither(char,char)>($c3, $c4);

        return $r4;

     label4:
        $r7 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        r1 = virtualinvoke $r7.<java.lang.String: char[] toCharArray()>();

        staticinvoke <java.util.Arrays: void sort(char[])>(r1);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("CharMatcher.anyOf(\"");

        i0 = lengthof r1;

        i6 = 0;

     label5:
        if i6 >= i0 goto label6;

        c1 = r1[i6];

        $r12 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String showCharacter(char)>(c1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        i6 = i6 + 1;

        goto label5;

     label6:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")");

        $r10 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$11;

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$11: void <init>(java.lang.String,char[])>($r11, r1);

        return $r10;
    }

    private static org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher isEither(char, char)
    {
        char c0, c1;
        java.lang.String r0, r1, r2, $r3, $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        int $i2, $i3, $i4, $i5;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$12 $r12;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String showCharacter(char)>(c0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String showCharacter(char)>(c1);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $r7 = new java.lang.StringBuilder;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = 21 + $i2;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CharMatcher.anyOf(\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")");

        r0 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$12;

        specialinvoke $r12.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$12: void <init>(java.lang.String,char,char)>(r0, c0, c1);

        return $r12;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher noneOf(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r1, $r2;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher anyOf(java.lang.CharSequence)>(r0);

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher negate()>();

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher inRange(char, char)
    {
        char c0, c1;
        java.lang.String r0, r1, r2, $r3, $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12;
        int $i2, $i3, $i4, $i5;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r13;
        boolean $z0;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        if c1 < c0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String showCharacter(char)>(c0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String showCharacter(char)>(c1);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $r7 = new java.lang.StringBuilder;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = 27 + $i2;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CharMatcher.inRange(\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        r0 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher inRange(char,char,java.lang.String)>(c0, c1, r0);

        return $r13;
    }

    static org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher inRange(char, char, java.lang.String)
    {
        char c0, c1;
        java.lang.String r0;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$13 $r1;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        r0 := @parameter2: java.lang.String;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$13;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$13: void <init>(java.lang.String,char,char)>(r0, c0, c1);

        return $r1;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher forPredicate(org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r0;
        java.lang.String r1, r2, $r4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        int $i0, $i1;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$14 $r9;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r10;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $z0 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        if $z0 == 0 goto label1;

        $r10 = (org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher) r0;

        return $r10;

     label1:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $r5 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i1 = 26 + $i0;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CharMatcher.forPredicate(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$14;

        specialinvoke $r9.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$14: void <init>(java.lang.String,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r1, r0);

        return $r9;
    }

    void <init>(java.lang.String)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String description> = r1;

        return;
    }

    protected void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String description> = $r1;

        return;
    }

    public abstract boolean matches(char);

    public org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher negate()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$NegatedMatcher $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$NegatedMatcher;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$NegatedMatcher: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher)>(r0);

        return $r1;
    }

    public org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher and(org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0, r1, $r4;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$And $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$And;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher) $r3;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$And: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher,org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher)>(r0, $r4);

        return $r2;
    }

    public org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher or(org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0, r1, $r4;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$Or $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$Or;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher) $r3;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$Or: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher,org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher)>(r0, $r4);

        return $r2;
    }

    public org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher precomputed()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0, $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Platform: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher precomputeCharMatcher(org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher)>(r0);

        return $r1;
    }

    org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher withToString(java.lang.String)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher precomputedInternal()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0, $r12, $r16;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String r2, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15;
        java.util.BitSet $r4;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$NegatedFastMatcher $r14;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        $r4 = new java.util.BitSet;

        specialinvoke $r4.<java.util.BitSet: void <init>()>();

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: void setBits(java.util.BitSet)>($r4);

        i0 = virtualinvoke $r4.<java.util.BitSet: int cardinality()>();

        $i2 = i0 * 2;

        if $i2 > 65536 goto label1;

        $r11 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String description>;

        $r12 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher precomputedPositive(int,java.util.BitSet,java.lang.String)>(i0, $r4, $r11);

        return $r12;

     label1:
        virtualinvoke $r4.<java.util.BitSet: void flip(int,int)>(0, 65536);

        i1 = 65536 - i0;

        r2 = ".negate()";

        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String description>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>(".negate()");

        if $z0 == 0 goto label2;

        $r10 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String description>;

        $r9 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String description>;

        $i4 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        $i6 = $i4 - $i5;

        $r13 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        goto label4;

     label2:
        $r6 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String description>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(".negate()");

        $i3 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i3 == 0 goto label3;

        $r13 = virtualinvoke $r7.<java.lang.String: java.lang.String concat(java.lang.String)>($r8);

        goto label4;

     label3:
        $r13 = new java.lang.String;

        specialinvoke $r13.<java.lang.String: void <init>(java.lang.String)>($r7);

     label4:
        $r14 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$NegatedFastMatcher;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String toString()>();

        $r16 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher precomputedPositive(int,java.util.BitSet,java.lang.String)>(i1, $r4, $r13);

        specialinvoke $r14.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$NegatedFastMatcher: void <init>(java.lang.String,org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher)>($r15, $r16);

        return $r14;
    }

    private static org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher precomputedPositive(int, java.util.BitSet, java.lang.String)
    {
        int i0, $i3, $i4, $i5, $i6, $i8;
        java.util.BitSet r0;
        java.lang.String r1;
        char c1, c2, $c7;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r2, $r3, $r4, $r5;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$BitSetMatcher r6;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.BitSet;

        r1 := @parameter2: java.lang.String;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r4 = <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher NONE>;

        return $r4;

     label2:
        $i6 = virtualinvoke r0.<java.util.BitSet: int nextSetBit(int)>(0);

        $c7 = (char) $i6;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher is(char)>($c7);

        return $r3;

     label3:
        $i3 = virtualinvoke r0.<java.util.BitSet: int nextSetBit(int)>(0);

        c1 = (char) $i3;

        $i4 = c1 + 1;

        $i5 = virtualinvoke r0.<java.util.BitSet: int nextSetBit(int)>($i4);

        c2 = (char) $i5;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher isEither(char,char)>(c1, c2);

        return $r2;

     label4:
        $i8 = virtualinvoke r0.<java.util.BitSet: int length()>();

        $z0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean isSmall(int,int)>(i0, $i8);

        if $z0 == 0 goto label5;

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.SmallCharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher 'from'(java.util.BitSet,java.lang.String)>(r0, r1);

        goto label6;

     label5:
        r6 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$BitSetMatcher;

        $r5 = r6;

        specialinvoke r6.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$BitSetMatcher: void <init>(java.util.BitSet,java.lang.String,org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$1)>(r0, r1, null);

     label6:
        return $r5;
    }

    private static boolean isSmall(int, int)
    {
        int i0, i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 > 1023 goto label1;

        $i2 = i0 * 4;

        $i3 = $i2 * 16;

        if i1 <= $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void setBits(java.util.BitSet)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.util.BitSet r1;
        char $c0;
        boolean $z0;
        int i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.util.BitSet;

        i1 = 65535;

     label1:
        if i1 < 0 goto label3;

        $c0 = (char) i1;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c0);

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.util.BitSet: void set(int)>(i1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    public boolean matchesAnyOf(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matchesNoneOf(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean matchesAllOf(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1;
        int $i0, i2;
        char $c1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        $c1 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i2);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return 1;
    }

    public boolean matchesNoneOf(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: int indexIn(java.lang.CharSequence)>(r1);

        if $i0 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int indexIn(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1;
        int i0, i2;
        char $c1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $c1 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i2);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c1);

        if $z0 == 0 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int indexIn(java.lang.CharSequence, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1;
        int i0, i1, i4;
        char $c3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: int checkPositionIndex(int,int)>(i0, i1);

        i4 = i0;

     label1:
        if i4 >= i1 goto label3;

        $c3 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i4);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c3);

        if $z0 == 0 goto label2;

        return i4;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int lastIndexIn(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1;
        int $i0, i2;
        char $c1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        $c1 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i2);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c1);

        if $z0 == 0 goto label2;

        return i2;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return -1;
    }

    public int countIn(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1;
        int $i0, i2, i3;
        char $c1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i2 = 0;

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if i3 >= $i0 goto label3;

        $c1 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i3);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c1);

        if $z0 == 0 goto label2;

        i2 = i2 + 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    public java.lang.String removeFrom(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1;
        java.lang.String r2, $r4;
        char[] r3;
        char $c0, $c1;
        boolean $z0;
        int $i2, $i3, i4, i5, $i6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        i4 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: int indexIn(java.lang.CharSequence)>(r2);

        if i4 != -1 goto label1;

        return r2;

     label1:
        r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        i5 = 1;

     label2:
        i4 = i4 + 1;

     label3:
        $i6 = lengthof r3;

        if i4 != $i6 goto label4;

        goto label7;

     label4:
        $c0 = r3[i4];

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c0);

        if $z0 == 0 goto label5;

        goto label6;

     label5:
        $i2 = i4 - i5;

        $c1 = r3[i4];

        r3[$i2] = $c1;

        i4 = i4 + 1;

        goto label3;

     label6:
        i5 = i5 + 1;

        goto label2;

     label7:
        $r4 = new java.lang.String;

        $i3 = i4 - i5;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r3, 0, $i3);

        return $r4;
    }

    public java.lang.String retainFrom(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0, $r2;
        java.lang.CharSequence r1;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher negate()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String removeFrom(java.lang.CharSequence)>(r1);

        return $r3;
    }

    public java.lang.String replaceFrom(java.lang.CharSequence, char)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1;
        char c0, $c3;
        java.lang.String r2, $r4;
        int i1, $i2, i4;
        char[] r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        i1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: int indexIn(java.lang.CharSequence)>(r2);

        if i1 != -1 goto label1;

        return r2;

     label1:
        r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        r3[i1] = c0;

        i4 = i1 + 1;

     label2:
        $i2 = lengthof r3;

        if i4 >= $i2 goto label4;

        $c3 = r3[i4];

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c3);

        if $z0 == 0 goto label3;

        r3[i4] = c0;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>(r3);

        return $r4;
    }

    public java.lang.String replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1, r2;
        int i0, i1, $i2, $i3, $i4, i6, i7;
        java.lang.String r3, $r9, $r10, $r11;
        java.lang.StringBuilder $r5;
        char $c5;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        i0 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        if i0 != 0 goto label1;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String removeFrom(java.lang.CharSequence)>(r1);

        return $r11;

     label1:
        if i0 != 1 goto label2;

        $c5 = interfaceinvoke r2.<java.lang.CharSequence: char charAt(int)>(0);

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String replaceFrom(java.lang.CharSequence,char)>(r1, $c5);

        return $r10;

     label2:
        r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        i6 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: int indexIn(java.lang.CharSequence)>(r3);

        if i6 != -1 goto label3;

        return r3;

     label3:
        i1 = virtualinvoke r3.<java.lang.String: int length()>();

        $r5 = new java.lang.StringBuilder;

        $i2 = i1 * 3;

        $i3 = $i2 / 2;

        $i4 = $i3 + 16;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i4);

        i7 = 0;

     label4:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r3, i7, i6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r2);

        i7 = i6 + 1;

        i6 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: int indexIn(java.lang.CharSequence,int)>(r3, i7);

        if i6 != -1 goto label4;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r3, i7, i1);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.String trimFrom(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1, $r2;
        int i0, $i1, i4, i5;
        java.lang.String $r3;
        char $c2, $c3;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        $c3 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i4);

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c3);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        i5 = i0 - 1;

     label4:
        if i5 <= i4 goto label6;

        $c2 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i5);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c2);

        if $z0 != 0 goto label5;

        goto label6;

     label5:
        i5 = i5 + -1;

        goto label4;

     label6:
        $i1 = i5 + 1;

        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i4, $i1);

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String trimLeadingFrom(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1, $r2;
        int i0, i2;
        char $c1;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $c1 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i2);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c1);

        if $z0 != 0 goto label2;

        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i2, i0);

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return "";
    }

    public java.lang.String trimTrailingFrom(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1, $r2;
        int i0, $i2, i3;
        char $c1;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i3 = i0 - 1;

     label1:
        if i3 < 0 goto label3;

        $c1 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i3);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c1);

        if $z0 != 0 goto label2;

        $i2 = i3 + 1;

        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i2);

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r3;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        return "";
    }

    public java.lang.String collapseFrom(java.lang.CharSequence, char)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1, $r5;
        char c0, c2, $c6;
        int i1, $i3, $i4, $i5, i7;
        java.lang.StringBuilder r2, $r4, $r6;
        java.lang.String $r3, $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i7 = 0;

     label1:
        if i7 >= i1 goto label5;

        c2 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i7);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>(c2);

        if $z0 == 0 goto label4;

        if c2 != c0 goto label3;

        $i4 = i1 - 1;

        if i7 == $i4 goto label2;

        $i5 = i7 + 1;

        $c6 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i5);

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c6);

        if $z1 != 0 goto label3;

     label2:
        i7 = i7 + 1;

        goto label4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(i1);

        $r5 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, i7);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r5);

        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $i3 = i7 + 1;

        $r7 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String finishCollapseFrom(java.lang.CharSequence,int,int,char,java.lang.StringBuilder,boolean)>(r1, $i3, i1, c0, r2, 1);

        return $r7;

     label4:
        i7 = i7 + 1;

        goto label1;

     label5:
        $r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String trimAndCollapseFrom(java.lang.CharSequence, char)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1;
        char c0, $c6, $c7;
        int i1, $i2, $i3, $i4, $i5, i8, i9;
        java.lang.StringBuilder $r2;
        boolean $z0, $z1;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i8 = 0;

     label1:
        if i8 >= i1 goto label2;

        $c7 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i8);

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c7);

        if $z1 == 0 goto label2;

        i8 = i8 + 1;

        goto label1;

     label2:
        i9 = i1 - 1;

     label3:
        if i9 <= i8 goto label4;

        $c6 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i9);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c6);

        if $z0 == 0 goto label4;

        i9 = i9 + -1;

        goto label3;

     label4:
        if i8 != 0 goto label5;

        $i5 = i1 - 1;

        if i9 != $i5 goto label5;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String collapseFrom(java.lang.CharSequence,char)>(r1, c0);

        goto label6;

     label5:
        $i4 = i9 + 1;

        $r2 = new java.lang.StringBuilder;

        $i2 = i9 + 1;

        $i3 = $i2 - i8;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i3);

        $r3 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String finishCollapseFrom(java.lang.CharSequence,int,int,char,java.lang.StringBuilder,boolean)>(r1, i8, $i4, c0, $r2, 0);

     label6:
        return $r3;
    }

    private java.lang.String finishCollapseFrom(java.lang.CharSequence, int, int, char, java.lang.StringBuilder, boolean)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.CharSequence r1;
        int i0, i1, i4;
        char c2, c3;
        java.lang.StringBuilder r2;
        java.lang.String $r3;
        boolean $z0, z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        c2 := @parameter3: char;

        r2 := @parameter4: java.lang.StringBuilder;

        z1 := @parameter5: boolean;

        i4 = i0;

     label1:
        if i4 >= i1 goto label4;

        c3 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i4);

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>(c3);

        if $z0 == 0 goto label2;

        if z1 != 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        z1 = 1;

        goto label3;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

        z1 = 0;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public boolean apply(java.lang.Character)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.Character r1;
        char $c0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.Character;

        $c0 = virtualinvoke r1.<java.lang.Character: char charValue()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c0);

        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String description>;

        return $r1;
    }

    public volatile boolean apply(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher r0;
        java.lang.Object r1;
        java.lang.Character $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Character) r1;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean apply(java.lang.Character)>($r2);

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$1 $r1;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r2, $r17, $r18, $r19, $r20;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r5, $r6, $r8, $r10, $r22, $r24, $r27, $r29, $r33, $r35;
        int $i0, $i1, $i2, $i3, $i4, $i6, i8;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$RangesMatcher $r7, $r21, $r26;
        char[] $r9, $r11, $r23, $r25, $r28, $r30;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$2 $r12;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$3 $r13;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$4 $r14;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$5 $r15;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$6 $r16;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$7 $r31;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$8 $r32;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$15 $r34;
        char $c5, $c7;

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: int WHITESPACE_MULTIPLIER> = 1682554634;

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String WHITESPACE_TABLE> = "\u2002\u3000\r\u0085\u200a\u2005\u2000\u3000\u2029\u000b\u3000\u2008\u2003\u205f\u3000\u1680\t \u2006\u2001\u202f\u00a0\f\u2009\u3000\u2004\u3000\u3000\u2028\n\u2007\u3000";

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: int DISTINCT_CHARS> = 65536;

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String ZEROES> = "0\u0660\u06f0\u07c0\u0966\u09e6\u0a66\u0ae6\u0b66\u0be6\u0c66\u0ce6\u0d66\u0e50\u0ed0\u0f20\u1040\u1090\u17e0\u1810\u1946\u19d0\u1b50\u1bb0\u1c40\u1c50\ua620\ua8d0\ua900\uaa50\uff10";

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$1;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$1: void <init>()>();

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher BREAKING_WHITESPACE> = $r1;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher inRange(char,char,java.lang.String)>(0, 127, "CharMatcher.ASCII");

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher ASCII> = $r2;

        $r3 = new java.lang.StringBuilder;

        $r4 = "0\u0660\u06f0\u07c0\u0966\u09e6\u0a66\u0ae6\u0b66\u0be6\u0c66\u0ce6\u0d66\u0e50\u0ed0\u0f20\u1040\u1090\u17e0\u1810\u1946\u19d0\u1b50\u1bb0\u1c40\u1c50\ua620\ua8d0\ua900\uaa50\uff10";

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i0);

        i8 = 0;

     label1:
        $r5 = "0\u0660\u06f0\u07c0\u0966\u09e6\u0a66\u0ae6\u0b66\u0be6\u0c66\u0ce6\u0d66\u0e50\u0ed0\u0f20\u1040\u1090\u17e0\u1810\u1946\u19d0\u1b50\u1bb0\u1c40\u1c50\ua620\ua8d0\ua900\uaa50\uff10";

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if i8 >= $i1 goto label2;

        $r35 = "0\u0660\u06f0\u07c0\u0966\u09e6\u0a66\u0ae6\u0b66\u0be6\u0c66\u0ce6\u0d66\u0e50\u0ed0\u0f20\u1040\u1090\u17e0\u1810\u1946\u19d0\u1b50\u1bb0\u1c40\u1c50\ua620\ua8d0\ua900\uaa50\uff10";

        $c5 = virtualinvoke $r35.<java.lang.String: char charAt(int)>(i8);

        $i6 = $c5 + 9;

        $c7 = (char) $i6;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        i8 = i8 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String NINES> = $r6;

        $r7 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$RangesMatcher;

        $r8 = "0\u0660\u06f0\u07c0\u0966\u09e6\u0a66\u0ae6\u0b66\u0be6\u0c66\u0ce6\u0d66\u0e50\u0ed0\u0f20\u1040\u1090\u17e0\u1810\u1946\u19d0\u1b50\u1bb0\u1c40\u1c50\ua620\ua8d0\ua900\uaa50\uff10";

        $r9 = virtualinvoke $r8.<java.lang.String: char[] toCharArray()>();

        $r10 = <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: java.lang.String NINES>;

        $r11 = virtualinvoke $r10.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r7.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$RangesMatcher: void <init>(java.lang.String,char[],char[])>("CharMatcher.DIGIT", $r9, $r11);

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher DIGIT> = $r7;

        $r12 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$2;

        specialinvoke $r12.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$2: void <init>(java.lang.String)>("CharMatcher.JAVA_DIGIT");

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_DIGIT> = $r12;

        $r13 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$3;

        specialinvoke $r13.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$3: void <init>(java.lang.String)>("CharMatcher.JAVA_LETTER");

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_LETTER> = $r13;

        $r14 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$4;

        specialinvoke $r14.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$4: void <init>(java.lang.String)>("CharMatcher.JAVA_LETTER_OR_DIGIT");

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_LETTER_OR_DIGIT> = $r14;

        $r15 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$5;

        specialinvoke $r15.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$5: void <init>(java.lang.String)>("CharMatcher.JAVA_UPPER_CASE");

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_UPPER_CASE> = $r15;

        $r16 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$6;

        specialinvoke $r16.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$6: void <init>(java.lang.String)>("CharMatcher.JAVA_LOWER_CASE");

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_LOWER_CASE> = $r16;

        $r17 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher inRange(char,char)>(0, 31);

        $r18 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher inRange(char,char)>(127, 159);

        $r19 = virtualinvoke $r17.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher or(org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher)>($r18);

        $r20 = virtualinvoke $r19.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher withToString(java.lang.String)>("CharMatcher.JAVA_ISO_CONTROL");

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher JAVA_ISO_CONTROL> = $r20;

        $r21 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$RangesMatcher;

        $r22 = "\u0000\u007f\u00ad\u0600\u061c\u06dd\u070f\u1680\u180e\u2000\u2028\u205f\u2066\u2067\u2068\u2069\u206a\u3000\ud800\ufeff\ufff9\ufffa";

        $r23 = virtualinvoke $r22.<java.lang.String: char[] toCharArray()>();

        $r24 = " \u00a0\u00ad\u0604\u061c\u06dd\u070f\u1680\u180e\u200f\u202f\u2064\u2066\u2067\u2068\u2069\u206f\u3000\uf8ff\ufeff\ufff9\ufffb";

        $r25 = virtualinvoke $r24.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r21.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$RangesMatcher: void <init>(java.lang.String,char[],char[])>("CharMatcher.INVISIBLE", $r23, $r25);

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher INVISIBLE> = $r21;

        $r26 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$RangesMatcher;

        $r27 = "\u0000\u05be\u05d0\u05f3\u0600\u0750\u0e00\u1e00\u2100\ufb50\ufe70\uff61";

        $r28 = virtualinvoke $r27.<java.lang.String: char[] toCharArray()>();

        $r29 = "\u04f9\u05be\u05ea\u05f4\u06ff\u077f\u0e7f\u20af\u213a\ufdff\ufeff\uffdc";

        $r30 = virtualinvoke $r29.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r26.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$RangesMatcher: void <init>(java.lang.String,char[],char[])>("CharMatcher.SINGLE_WIDTH", $r28, $r30);

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher SINGLE_WIDTH> = $r26;

        $r31 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$7;

        specialinvoke $r31.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$7: void <init>(java.lang.String)>("CharMatcher.ANY");

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher ANY> = $r31;

        $r32 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$8;

        specialinvoke $r32.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$8: void <init>(java.lang.String)>("CharMatcher.NONE");

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher NONE> = $r32;

        $r33 = "\u2002\u3000\r\u0085\u200a\u2005\u2000\u3000\u2029\u000b\u3000\u2008\u2003\u205f\u3000\u1680\t \u2006\u2001\u202f\u00a0\f\u2009\u3000\u2004\u3000\u3000\u2028\n\u2007\u3000";

        $i2 = virtualinvoke $r33.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        $i4 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>($i3);

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: int WHITESPACE_SHIFT> = $i4;

        $r34 = new org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$15;

        specialinvoke $r34.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher$15: void <init>(java.lang.String)>("WHITESPACE");

        <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher WHITESPACE> = $r34;

        return;
    }
}
