class org.apache.flink.core.fs.local.LocalRecoverable extends java.lang.Object implements org.apache.flink.core.fs.RecoverableWriter$CommitRecoverable, org.apache.flink.core.fs.RecoverableWriter$ResumeRecoverable
{
    private final java.io.File targetFile;
    private final java.io.File tempFile;
    private final long offset;

    void <init>(java.io.File, java.io.File, long)
    {
        org.apache.flink.core.fs.local.LocalRecoverable r0;
        java.io.File r1, r2, $r4, $r6;
        long l0;
        byte $b1;
        java.lang.Object $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.flink.core.fs.local.LocalRecoverable;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        l0 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.flink.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "offset must be >= 0");

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "targetFile");

        $r4 = (java.io.File) $r3;

        r0.<org.apache.flink.core.fs.local.LocalRecoverable: java.io.File targetFile> = $r4;

        $r5 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r2, "tempFile");

        $r6 = (java.io.File) $r5;

        r0.<org.apache.flink.core.fs.local.LocalRecoverable: java.io.File tempFile> = $r6;

        r0.<org.apache.flink.core.fs.local.LocalRecoverable: long offset> = l0;

        return;
    }

    public java.io.File targetFile()
    {
        org.apache.flink.core.fs.local.LocalRecoverable r0;
        java.io.File $r1;

        r0 := @this: org.apache.flink.core.fs.local.LocalRecoverable;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalRecoverable: java.io.File targetFile>;

        return $r1;
    }

    public java.io.File tempFile()
    {
        org.apache.flink.core.fs.local.LocalRecoverable r0;
        java.io.File $r1;

        r0 := @this: org.apache.flink.core.fs.local.LocalRecoverable;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalRecoverable: java.io.File tempFile>;

        return $r1;
    }

    public long offset()
    {
        org.apache.flink.core.fs.local.LocalRecoverable r0;
        long $l0;

        r0 := @this: org.apache.flink.core.fs.local.LocalRecoverable;

        $l0 = r0.<org.apache.flink.core.fs.local.LocalRecoverable: long offset>;

        return $l0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.core.fs.local.LocalRecoverable r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r9;
        java.io.File $r3, $r8;
        long $l0;
        java.lang.String $r10;

        r0 := @this: org.apache.flink.core.fs.local.LocalRecoverable;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LocalRecoverable ");

        $r3 = r0.<org.apache.flink.core.fs.local.LocalRecoverable: java.io.File tempFile>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @ ");

        $l0 = r0.<org.apache.flink.core.fs.local.LocalRecoverable: long offset>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r8 = r0.<org.apache.flink.core.fs.local.LocalRecoverable: java.io.File targetFile>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }
}
