public class org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    static final org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$CleanupStrategy EMPTY_STRATEGY;
    private final boolean isCleanupInBackground;
    private final java.util.EnumMap strategies;

    private void <init>(java.util.EnumMap, boolean)
    {
        org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies r0;
        java.util.EnumMap r1;
        boolean z0;

        r0 := @this: org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies;

        r1 := @parameter0: java.util.EnumMap;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: java.util.EnumMap strategies> = r1;

        r0.<org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: boolean isCleanupInBackground> = z0;

        return;
    }

    public boolean inFullSnapshot()
    {
        org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies r0;
        org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$Strategies $r1;
        java.util.EnumMap $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies;

        $r2 = r0.<org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: java.util.EnumMap strategies>;

        $r1 = <org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$Strategies: org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$Strategies FULL_STATE_SCAN_SNAPSHOT>;

        $z0 = virtualinvoke $r2.<java.util.EnumMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean isCleanupInBackground()
    {
        org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies r0;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies;

        $z0 = r0.<org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: boolean isCleanupInBackground>;

        return $z0;
    }

    public org.apache.flink.api.common.state.StateTtlConfig$IncrementalCleanupStrategy getIncrementalCleanupStrategy()
    {
        org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies r0;
        boolean $z0;
        org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$Strategies $r2;
        java.util.EnumMap $r3;
        java.lang.Object $r4;
        org.apache.flink.api.common.state.StateTtlConfig$IncrementalCleanupStrategy $r5, $r6;

        r0 := @this: org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies;

        $z0 = r0.<org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: boolean isCleanupInBackground>;

        if $z0 == 0 goto label1;

        $r6 = <org.apache.flink.api.common.state.StateTtlConfig$IncrementalCleanupStrategy: org.apache.flink.api.common.state.StateTtlConfig$IncrementalCleanupStrategy DEFAULT_INCREMENTAL_CLEANUP_STRATEGY>;

        goto label2;

     label1:
        $r6 = null;

     label2:
        $r3 = r0.<org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: java.util.EnumMap strategies>;

        $r2 = <org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$Strategies: org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$Strategies INCREMENTAL_CLEANUP>;

        $r4 = virtualinvoke $r3.<java.util.EnumMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r2, $r6);

        $r5 = (org.apache.flink.api.common.state.StateTtlConfig$IncrementalCleanupStrategy) $r4;

        return $r5;
    }

    public boolean inRocksdbCompactFilter()
    {
        org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies r0;
        org.apache.flink.api.common.state.StateTtlConfig$RocksdbCompactFilterCleanupStrategy $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: org.apache.flink.api.common.state.StateTtlConfig$RocksdbCompactFilterCleanupStrategy getRocksdbCompactFilterCleanupStrategy()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.flink.api.common.state.StateTtlConfig$RocksdbCompactFilterCleanupStrategy getRocksdbCompactFilterCleanupStrategy()
    {
        org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies r0;
        boolean $z0;
        org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$Strategies $r2;
        java.util.EnumMap $r3;
        java.lang.Object $r4;
        org.apache.flink.api.common.state.StateTtlConfig$RocksdbCompactFilterCleanupStrategy $r5, $r6;

        r0 := @this: org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies;

        $z0 = r0.<org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: boolean isCleanupInBackground>;

        if $z0 == 0 goto label1;

        $r6 = <org.apache.flink.api.common.state.StateTtlConfig$RocksdbCompactFilterCleanupStrategy: org.apache.flink.api.common.state.StateTtlConfig$RocksdbCompactFilterCleanupStrategy DEFAULT_ROCKSDB_COMPACT_FILTER_CLEANUP_STRATEGY>;

        goto label2;

     label1:
        $r6 = null;

     label2:
        $r3 = r0.<org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: java.util.EnumMap strategies>;

        $r2 = <org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$Strategies: org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$Strategies ROCKSDB_COMPACTION_FILTER>;

        $r4 = virtualinvoke $r3.<java.util.EnumMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r2, $r6);

        $r5 = (org.apache.flink.api.common.state.StateTtlConfig$RocksdbCompactFilterCleanupStrategy) $r4;

        return $r5;
    }

    void <init>(java.util.EnumMap, boolean, org.apache.flink.api.common.state.StateTtlConfig$1)
    {
        org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies r0;
        java.util.EnumMap r1;
        boolean z0;
        org.apache.flink.api.common.state.StateTtlConfig$1 r2;

        r0 := @this: org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies;

        r1 := @parameter0: java.util.EnumMap;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.flink.api.common.state.StateTtlConfig$1;

        specialinvoke r0.<org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: void <init>(java.util.EnumMap,boolean)>(r1, z0);

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$EmptyCleanupStrategy $r0;

        <org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: long serialVersionUID> = -1617740467277313524L;

        $r0 = new org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$EmptyCleanupStrategy;

        specialinvoke $r0.<org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$EmptyCleanupStrategy: void <init>()>();

        <org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies: org.apache.flink.api.common.state.StateTtlConfig$CleanupStrategies$CleanupStrategy EMPTY_STRATEGY> = $r0;

        return;
    }
}
