public class org.apache.flink.configuration.ParentFirstPatternsTest extends org.apache.flink.util.TestLogger
{
    private static final java.util.HashSet PARENT_FIRST_PACKAGES;

    public void <init>()
    {
        org.apache.flink.configuration.ParentFirstPatternsTest r0;

        r0 := @this: org.apache.flink.configuration.ParentFirstPatternsTest;

        specialinvoke r0.<org.apache.flink.util.TestLogger: void <init>()>();

        return;
    }

    public void testAllCorePatterns()
    {
        org.apache.flink.configuration.ParentFirstPatternsTest r0;
        java.util.HashSet $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.configuration.ParentFirstPatternsTest;

        $r1 = <org.apache.flink.configuration.ParentFirstPatternsTest: java.util.HashSet PARENT_FIRST_PACKAGES>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>("java.");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r2 = <org.apache.flink.configuration.ParentFirstPatternsTest: java.util.HashSet PARENT_FIRST_PACKAGES>;

        $z1 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>("org.apache.flink.");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r3 = <org.apache.flink.configuration.ParentFirstPatternsTest: java.util.HashSet PARENT_FIRST_PACKAGES>;

        $z2 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>("javax.annotation.");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        return;
    }

    public void testLoggersParentFirst()
    {
        org.apache.flink.configuration.ParentFirstPatternsTest r0;
        java.util.HashSet $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.flink.configuration.ParentFirstPatternsTest;

        $r1 = <org.apache.flink.configuration.ParentFirstPatternsTest: java.util.HashSet PARENT_FIRST_PACKAGES>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>("org.slf4j");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r2 = <org.apache.flink.configuration.ParentFirstPatternsTest: java.util.HashSet PARENT_FIRST_PACKAGES>;

        $z1 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>("org.apache.log4j");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r3 = <org.apache.flink.configuration.ParentFirstPatternsTest: java.util.HashSet PARENT_FIRST_PACKAGES>;

        $z2 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>("org.apache.logging");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r4 = <org.apache.flink.configuration.ParentFirstPatternsTest: java.util.HashSet PARENT_FIRST_PACKAGES>;

        $z3 = virtualinvoke $r4.<java.util.HashSet: boolean contains(java.lang.Object)>("org.apache.commons.logging");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r5 = <org.apache.flink.configuration.ParentFirstPatternsTest: java.util.HashSet PARENT_FIRST_PACKAGES>;

        $z4 = virtualinvoke $r5.<java.util.HashSet: boolean contains(java.lang.Object)>("ch.qos.logback");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        return;
    }

    public void testScalaParentFirst()
    {
        org.apache.flink.configuration.ParentFirstPatternsTest r0;
        java.util.HashSet $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.configuration.ParentFirstPatternsTest;

        $r1 = <org.apache.flink.configuration.ParentFirstPatternsTest: java.util.HashSet PARENT_FIRST_PACKAGES>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>("scala.");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        return;
    }

    public void testHadoopParentFirst()
    {
        org.apache.flink.configuration.ParentFirstPatternsTest r0;
        java.util.HashSet $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.configuration.ParentFirstPatternsTest;

        $r1 = <org.apache.flink.configuration.ParentFirstPatternsTest: java.util.HashSet PARENT_FIRST_PACKAGES>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>("org.apache.hadoop.");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        return;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        org.apache.flink.configuration.ConfigOption $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        java.util.List $r5;

        $r0 = new java.util.HashSet;

        $r1 = <org.apache.flink.configuration.CoreOptions: org.apache.flink.configuration.ConfigOption ALWAYS_PARENT_FIRST_LOADER_PATTERNS>;

        $r2 = virtualinvoke $r1.<org.apache.flink.configuration.ConfigOption: java.lang.Object defaultValue()>();

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r5);

        <org.apache.flink.configuration.ParentFirstPatternsTest: java.util.HashSet PARENT_FIRST_PACKAGES> = $r0;

        return;
    }
}
