public class org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest extends org.apache.flink.api.common.typeutils.SerializerTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.SerializerTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest r0;
        org.apache.flink.api.common.typeutils.base.SqlDateSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.SqlDateSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.SqlDateSerializer: void <init>()>();

        return $r1;
    }

    protected int getLength()
    {
        org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest;

        return 8;
    }

    protected java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest;

        return class "Ljava/sql/Date;";
    }

    protected java.sql.Date[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest r0;
        java.sql.Date[] $r1;
        java.sql.Date $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest;

        $r1 = newarray (java.sql.Date)[5];

        $r2 = new java.sql.Date;

        specialinvoke $r2.<java.sql.Date: void <init>(long)>(0L);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.sql.Date: java.sql.Date valueOf(java.lang.String)>("1970-01-01");

        $r1[1] = $r3;

        $r4 = staticinvoke <java.sql.Date: java.sql.Date valueOf(java.lang.String)>("1990-10-14");

        $r1[2] = $r4;

        $r5 = staticinvoke <java.sql.Date: java.sql.Date valueOf(java.lang.String)>("2013-08-12");

        $r1[3] = $r5;

        $r6 = staticinvoke <java.sql.Date: java.sql.Date valueOf(java.lang.String)>("2040-05-12");

        $r1[4] = $r6;

        return $r1;
    }

    protected volatile java.lang.Object[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest r0;
        java.sql.Date[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.SqlDateSerializerTest: java.sql.Date[] getTestData()>();

        return $r1;
    }
}
