public class org.apache.flink.api.java.typeutils.runtime.KryoRegistration extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.Class registeredClass;
    private final java.lang.Class serializerClass;
    private final org.apache.flink.api.common.ExecutionConfig$SerializableSerializer serializableSerializerInstance;
    private final org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType serializerDefinitionType;

    public void <init>(java.lang.Class)
    {
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration r0;
        java.lang.Class r1, $r3;
        java.lang.Object $r2;
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType $r4;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.Class) $r2;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class registeredClass> = $r3;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class serializerClass> = null;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.common.ExecutionConfig$SerializableSerializer serializableSerializerInstance> = null;

        $r4 = <org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType UNSPECIFIED>;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType serializerDefinitionType> = $r4;

        return;
    }

    public void <init>(java.lang.Class, java.lang.Class)
    {
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration r0;
        java.lang.Class r1, r2, $r4, $r6;
        java.lang.Object $r3, $r5;
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType $r7;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (java.lang.Class) $r3;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class registeredClass> = $r4;

        $r5 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (java.lang.Class) $r5;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class serializerClass> = $r6;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.common.ExecutionConfig$SerializableSerializer serializableSerializerInstance> = null;

        $r7 = <org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType CLASS>;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType serializerDefinitionType> = $r7;

        return;
    }

    public void <init>(java.lang.Class, org.apache.flink.api.common.ExecutionConfig$SerializableSerializer)
    {
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration r0;
        java.lang.Class r1, $r4;
        org.apache.flink.api.common.ExecutionConfig$SerializableSerializer r2, $r6;
        java.lang.Object $r3, $r5;
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType $r7;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.api.common.ExecutionConfig$SerializableSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (java.lang.Class) $r3;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class registeredClass> = $r4;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class serializerClass> = null;

        $r5 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (org.apache.flink.api.common.ExecutionConfig$SerializableSerializer) $r5;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.common.ExecutionConfig$SerializableSerializer serializableSerializerInstance> = $r6;

        $r7 = <org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType INSTANCE>;

        r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType serializerDefinitionType> = $r7;

        return;
    }

    public java.lang.Class getRegisteredClass()
    {
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class registeredClass>;

        return $r1;
    }

    public org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType getSerializerDefinitionType()
    {
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration r0;
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType serializerDefinitionType>;

        return $r1;
    }

    public java.lang.Class getSerializerClass()
    {
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class serializerClass>;

        return $r1;
    }

    public org.apache.flink.api.common.ExecutionConfig$SerializableSerializer getSerializableSerializerInstance()
    {
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration r0;
        org.apache.flink.api.common.ExecutionConfig$SerializableSerializer $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.common.ExecutionConfig$SerializableSerializer serializableSerializerInstance>;

        return $r1;
    }

    public com.esotericsoftware.kryo.Serializer getSerializer(com.esotericsoftware.kryo.Kryo)
    {
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration r0;
        com.esotericsoftware.kryo.Kryo r1;
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType $r2, $r12;
        int[] $r3;
        int $i0, $i1;
        org.apache.flink.api.common.ExecutionConfig$SerializableSerializer $r4;
        com.esotericsoftware.kryo.Serializer $r5, $r8;
        java.lang.Class $r6, $r7;
        java.lang.IllegalStateException $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r14;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        r1 := @parameter0: com.esotericsoftware.kryo.Kryo;

        $r3 = <org.apache.flink.api.java.typeutils.runtime.KryoRegistration$1: int[] $SwitchMap$org$apache$flink$api$java$typeutils$runtime$KryoRegistration$SerializerDefinitionType>;

        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType serializerDefinitionType>;

        $i0 = virtualinvoke $r2.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        return null;

     label2:
        $r7 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class serializerClass>;

        $r6 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class registeredClass>;

        $r8 = staticinvoke <com.esotericsoftware.kryo.factories.ReflectionSerializerFactory: com.esotericsoftware.kryo.Serializer makeSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class,java.lang.Class)>(r1, $r7, $r6);

        return $r8;

     label3:
        $r4 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.common.ExecutionConfig$SerializableSerializer serializableSerializerInstance>;

        $r5 = virtualinvoke $r4.<org.apache.flink.api.common.ExecutionConfig$SerializableSerializer: com.esotericsoftware.kryo.Serializer getSerializer()>();

        return $r5;

     label4:
        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized Kryo registration serializer definition type: ");

        $r12 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType serializerDefinitionType>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r9;
    }

    public boolean isDummy()
    {
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration r0;
        java.lang.Class $r1, $r2, $r6;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.api.common.ExecutionConfig$SerializableSerializer $r3, $r4;
        com.esotericsoftware.kryo.Serializer $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class registeredClass>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lorg/apache/flink/api/java/typeutils/runtime/KryoRegistrationSerializerConfigSnapshot$DummyRegisteredClass;");

        if $z0 != 0 goto label2;

        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class serializerClass>;

        if $r2 == null goto label1;

        $r6 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class serializerClass>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lorg/apache/flink/api/java/typeutils/runtime/KryoRegistrationSerializerConfigSnapshot$DummyKryoSerializerClass;");

        if $z2 != 0 goto label2;

     label1:
        $r3 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.common.ExecutionConfig$SerializableSerializer serializableSerializerInstance>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.common.ExecutionConfig$SerializableSerializer serializableSerializerInstance>;

        $r5 = virtualinvoke $r4.<org.apache.flink.api.common.ExecutionConfig$SerializableSerializer: com.esotericsoftware.kryo.Serializer getSerializer()>();

        $z1 = $r5 instanceof org.apache.flink.api.java.typeutils.runtime.KryoRegistrationSerializerConfigSnapshot$DummyKryoSerializerClass;

        if $z1 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType $r3, $r4;
        java.lang.Class $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        if $z0 == 0 goto label5;

        r2 = (org.apache.flink.api.java.typeutils.runtime.KryoRegistration) r1;

        $r4 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType serializerDefinitionType>;

        $r3 = r2.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType serializerDefinitionType>;

        if $r4 != $r3 goto label3;

        $r6 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class registeredClass>;

        $r5 = r2.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class registeredClass>;

        if $r6 != $r5 goto label3;

        $r8 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class serializerClass>;

        $r7 = r2.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class serializerClass>;

        if $r8 != $r7 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration r0;
        org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType $r1;
        java.lang.Class $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, i4, i5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.KryoRegistration;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType serializerDefinitionType>;

        i4 = virtualinvoke $r1.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration$SerializerDefinitionType: int hashCode()>();

        $i0 = 31 * i4;

        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class registeredClass>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i5 = $i0 + $i1;

        $r3 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class serializerClass>;

        if $r3 == null goto label1;

        $i2 = 31 * i5;

        $r4 = r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistration: java.lang.Class serializerClass>;

        $i3 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        i5 = $i2 + $i3;

     label1:
        return i5;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.runtime.KryoRegistration: long serialVersionUID> = 5375110512910892655L;

        return;
    }
}
