public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase
{
    private static final long serialVersionUID;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void <init>(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(class "Ljava/util/Collection;", r1, z0, r2, r3);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, z0, r2, r4);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4;
        java.lang.Boolean r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r5 := @parameter4: java.lang.Boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean)>(r1, r2, r3, r4, r5);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r1;
        java.lang.Boolean $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: java.lang.Boolean _unwrapSingle>;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean)>(r0, $r5, r1, $r4, $r3);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3;
        java.lang.Boolean r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 := @parameter3: java.lang.Boolean;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    public boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.util.Collection r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.util.Collection;

        $z0 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>();

        return $z0;
    }

    public boolean hasSingleElement(java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0;
        java.util.Collection r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void serialize(java.util.Collection, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0;
        java.util.Collection r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        int i0;
        java.lang.Boolean $r4, $r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r7;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if i0 != 1 goto label3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: java.lang.Boolean _unwrapSingle>;

        if $r4 != null goto label1;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r7);

        if $z0 != 0 goto label2;

     label1:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: java.lang.Boolean _unwrapSingle>;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if $r6 != $r5 goto label3;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        return;

     label3:
        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeStartArray(java.lang.Object,int)>(r1, i0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();

        return;
    }

    public void serializeContents(java.util.Collection, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0;
        java.util.Collection r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.util.Iterator r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r5;
        java.lang.Class r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r7, $r11, r15;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r8, $r9, $r10;
        java.lang.Exception $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap r13;
        int i0;
        java.lang.Object r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void setCurrentValue(java.lang.Object)>(r1);

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        if $r7 == null goto label01;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _elementSerializer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContentsUsing(java.util.Collection,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r2, r3, $r11);

        return;

     label01:
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label02;

        return;

     label02:
        r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

        r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        i0 = 0;

     label03:
        r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        if r14 != null goto label04;

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r2);

        goto label09;

     label04:
        r6 = virtualinvoke r14.<java.lang.Object: java.lang.Class getClass()>();

        r15 = virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(r6);

        if r15 != null goto label07;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _elementType>;

        $z1 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean hasGenericTypes()>();

        if $z1 == 0 goto label05;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _elementType>;

        $r10 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r9, r6);

        r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r13, $r10, r3);

        goto label06;

     label05:
        r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r13, r6, r3);

     label06:
        r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

     label07:
        if r5 != null goto label08;

        virtualinvoke r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r14, r2, r3);

        goto label09;

     label08:
        virtualinvoke r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(r14, r2, r3, r5);

     label09:
        i0 = i0 + 1;

        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label03;

     label10:
        goto label12;

     label11:
        $r12 := @caughtexception;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void wrapAndThrow(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>(r3, $r12, r1, i0);

     label12:
        return;

        catch java.lang.Exception from label03 to label10 with label11;
    }

    public void serializeContentsUsing(java.util.Collection, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0;
        java.util.Collection r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4;
        java.util.Iterator r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r6;
        java.lang.Object r7;
        boolean $z0, $z1;
        java.lang.Exception $r9;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r5 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        i0 = 0;

     label1:
        r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

     label2:
        if r7 != null goto label3;

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r2);

        goto label5;

     label3:
        if r6 != null goto label4;

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r7, r2, r3);

        goto label5;

     label4:
        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(r7, r2, r3, r6);

     label5:
        i0 = i0 + 1;

     label6:
        goto label8;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void wrapAndThrow(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>(r3, $r9, r1, i0);

     label8:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

     label9:
        return;

        catch java.lang.Exception from label2 to label6 with label7;
    }

    public volatile void serializeContents(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.util.Collection $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.util.Collection) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>($r4, r2, r3);

        return;
    }

    public volatile void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.util.Collection $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.util.Collection) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serialize(java.util.Collection,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>($r4, r2, r3);

        return;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3;
        java.lang.Boolean r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 := @parameter3: java.lang.Boolean;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean)>(r1, r2, r3, r4);

        return $r5;
    }

    public volatile boolean hasSingleElement(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0;
        java.lang.Object r1;
        java.util.Collection $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Collection) r1;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: boolean hasSingleElement(java.util.Collection)>($r2);

        return $z0;
    }

    public volatile boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.Object r2;
        java.util.Collection $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Collection) r2;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection)>(r1, $r3);

        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: long serialVersionUID> = 1L;

        return;
    }
}
