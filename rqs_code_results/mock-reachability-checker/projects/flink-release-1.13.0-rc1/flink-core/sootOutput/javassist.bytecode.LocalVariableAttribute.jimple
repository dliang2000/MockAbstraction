public class javassist.bytecode.LocalVariableAttribute extends javassist.bytecode.AttributeInfo
{
    public static final java.lang.String tag;
    public static final java.lang.String typeTag;

    public void <init>(javassist.bytecode.ConstPool)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        javassist.bytecode.ConstPool r1;
        byte[] $r2, $r3;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        $r2 = newarray (byte)[2];

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, "LocalVariableTable", $r2);

        $r3 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(0, $r3, 0);

        return;
    }

    public void <init>(javassist.bytecode.ConstPool, java.lang.String)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        javassist.bytecode.ConstPool r1;
        java.lang.String r2;
        byte[] $r3, $r4;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.lang.String;

        $r3 = newarray (byte)[2];

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, r2, $r3);

        $r4 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(0, $r4, 0);

        return;
    }

    void <init>(javassist.bytecode.ConstPool, int, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.LocalVariableAttribute r0;
        javassist.bytecode.ConstPool r1;
        int i0;
        java.io.DataInputStream r2;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.DataInputStream;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r1, i0, r2);

        return;
    }

    void <init>(javassist.bytecode.ConstPool, java.lang.String, byte[])
    {
        javassist.bytecode.LocalVariableAttribute r0;
        javassist.bytecode.ConstPool r1;
        java.lang.String r2;
        byte[] r3;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, r2, r3);

        return;
    }

    public void addEntry(int, int, int, int, int)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i14;
        byte[] r1, $r2, $r3;
        byte $b13;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r2 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        i5 = lengthof $r2;

        $i6 = i5 + 10;

        r1 = newarray (byte)[$i6];

        $i7 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: int tableLength()>();

        $i8 = $i7 + 1;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i8, r1, 0);

        i14 = 2;

     label1:
        if i14 >= i5 goto label2;

        $r3 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $b13 = $r3[i14];

        r1[i14] = $b13;

        i14 = i14 + 1;

        goto label1;

     label2:
        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i0, r1, i5);

        $i9 = i5 + 2;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i1, r1, $i9);

        $i10 = i5 + 4;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i2, r1, $i10);

        $i11 = i5 + 6;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i3, r1, $i11);

        $i12 = i5 + 8;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i4, r1, $i12);

        r0.<javassist.bytecode.LocalVariableAttribute: byte[] info> = r1;

        return;
    }

    void renameClass(java.lang.String, java.lang.String)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        java.lang.String r1, r2, r6, r7;
        javassist.bytecode.ConstPool r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7;
        byte[] $r4, $r5;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: javassist.bytecode.ConstPool getConstPool()>();

        i0 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: int tableLength()>();

        i7 = 0;

     label1:
        if i7 >= i0 goto label3;

        $i3 = i7 * 10;

        i1 = $i3 + 2;

        $r4 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i4 = i1 + 6;

        i2 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r4, $i4);

        if i2 == 0 goto label2;

        r6 = virtualinvoke r3.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>(i2);

        r7 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: java.lang.String renameEntry(java.lang.String,java.lang.String,java.lang.String)>(r6, r1, r2);

        $i5 = virtualinvoke r3.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r7);

        $r5 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i6 = i1 + 6;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i5, $r5, $i6);

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        return;
    }

    java.lang.String renameEntry(java.lang.String, java.lang.String, java.lang.String)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        java.lang.String r1, r2, r3, $r4;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String rename(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    void renameClass(java.util.Map)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        java.util.Map r1;
        javassist.bytecode.ConstPool r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7;
        byte[] $r3, $r4;
        java.lang.String r5, r6;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        r1 := @parameter0: java.util.Map;

        r2 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: javassist.bytecode.ConstPool getConstPool()>();

        i0 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: int tableLength()>();

        i7 = 0;

     label1:
        if i7 >= i0 goto label3;

        $i3 = i7 * 10;

        i1 = $i3 + 2;

        $r3 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i4 = i1 + 6;

        i2 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r3, $i4);

        if i2 == 0 goto label2;

        r5 = virtualinvoke r2.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>(i2);

        r6 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: java.lang.String renameEntry(java.lang.String,java.util.Map)>(r5, r1);

        $i5 = virtualinvoke r2.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r6);

        $r4 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i6 = i1 + 6;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i5, $r4, $i6);

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        return;
    }

    java.lang.String renameEntry(java.lang.String, java.util.Map)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        java.lang.String r1, $r3;
        java.util.Map r2;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String rename(java.lang.String,java.util.Map)>(r1, r2);

        return $r3;
    }

    public void shiftIndex(int, int)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7;
        byte[] $r1, $r2, $r3;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        i2 = lengthof $r1;

        i7 = 2;

     label1:
        if i7 >= i2 goto label3;

        $r2 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i4 = i7 + 8;

        i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r2, $i4);

        if i3 < i0 goto label2;

        $i6 = i3 + i1;

        $r3 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i5 = i7 + 8;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i6, $r3, $i5);

     label2:
        i7 = i7 + 10;

        goto label1;

     label3:
        return;
    }

    public int tableLength()
    {
        javassist.bytecode.LocalVariableAttribute r0;
        byte[] $r1;
        int $i0;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        $r1 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, 0);

        return $i0;
    }

    public int startPc(int)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i1 = i0 * 10;

        $i2 = $i1 + 2;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    public int codeLength(int)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i1 = i0 * 10;

        $i2 = $i1 + 4;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    void shiftPc(int, int, boolean)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13;
        boolean z0;
        byte[] $r1, $r2, $r3, $r4;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: int tableLength()>();

        i12 = 0;

     label1:
        if i12 >= i2 goto label6;

        $i6 = i12 * 10;

        i3 = $i6 + 2;

        $r1 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        i4 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, i3);

        $r2 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i7 = i3 + 2;

        i5 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r2, $i7);

        if i4 > i0 goto label2;

        if z0 == 0 goto label3;

        if i4 != i0 goto label3;

        if i4 == 0 goto label3;

     label2:
        $i8 = i4 + i1;

        $r3 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i8, $r3, i3);

        goto label5;

     label3:
        $i13 = i4 + i5;

        if $i13 > i0 goto label4;

        if z0 == 0 goto label5;

        $i11 = i4 + i5;

        if $i11 != i0 goto label5;

     label4:
        $i10 = i5 + i1;

        $r4 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i9 = i3 + 2;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i10, $r4, $i9);

     label5:
        i12 = i12 + 1;

        goto label1;

     label6:
        return;
    }

    public int nameIndex(int)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i1 = i0 * 10;

        $i2 = $i1 + 6;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    public java.lang.String variableName(int)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0, $i1;
        javassist.bytecode.ConstPool $r1;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: javassist.bytecode.ConstPool getConstPool()>();

        $i1 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: int nameIndex(int)>(i0);

        $r2 = virtualinvoke $r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i1);

        return $r2;
    }

    public int descriptorIndex(int)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i1 = i0 * 10;

        $i2 = $i1 + 8;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    public int signatureIndex(int)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0, $i1;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: int descriptorIndex(int)>(i0);

        return $i1;
    }

    public java.lang.String descriptor(int)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0, $i1;
        javassist.bytecode.ConstPool $r1;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: javassist.bytecode.ConstPool getConstPool()>();

        $i1 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: int descriptorIndex(int)>(i0);

        $r2 = virtualinvoke $r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i1);

        return $r2;
    }

    public java.lang.String signature(int)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: java.lang.String descriptor(int)>(i0);

        return $r1;
    }

    public int index(int)
    {
        javassist.bytecode.LocalVariableAttribute r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.LocalVariableAttribute: byte[] info>;

        $i1 = i0 * 10;

        $i2 = $i1 + 10;

        $i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, $i2);

        return $i3;
    }

    public javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.LocalVariableAttribute r0, r6;
        javassist.bytecode.ConstPool r1, r5;
        java.util.Map r2;
        byte[] r3, r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16;
        java.lang.String r7, r8;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        r3 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: byte[] get()>();

        $i4 = lengthof r3;

        r4 = newarray (byte)[$i4];

        r5 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: javassist.bytecode.ConstPool getConstPool()>();

        r6 = virtualinvoke r0.<javassist.bytecode.LocalVariableAttribute: javassist.bytecode.LocalVariableAttribute makeThisAttr(javassist.bytecode.ConstPool,byte[])>(r1, r4);

        i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, 0);

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i0, r4, 0);

        i13 = 2;

        i14 = 0;

     label1:
        if i14 >= i0 goto label4;

        i1 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, i13);

        $i5 = i13 + 2;

        i2 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, $i5);

        $i6 = i13 + 4;

        i15 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, $i6);

        $i7 = i13 + 6;

        i16 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, $i7);

        $i8 = i13 + 8;

        i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>(r3, $i8);

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i1, r4, i13);

        $i9 = i13 + 2;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i2, r4, $i9);

        if i15 == 0 goto label2;

        i15 = virtualinvoke r5.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>(i15, r1, null);

     label2:
        $i10 = i13 + 4;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i15, r4, $i10);

        if i16 == 0 goto label3;

        r7 = virtualinvoke r5.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>(i16);

        r8 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String rename(java.lang.String,java.util.Map)>(r7, r2);

        i16 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r8);

     label3:
        $i11 = i13 + 6;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i16, r4, $i11);

        $i12 = i13 + 8;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i3, r4, $i12);

        i13 = i13 + 10;

        i14 = i14 + 1;

        goto label1;

     label4:
        return r6;
    }

    javassist.bytecode.LocalVariableAttribute makeThisAttr(javassist.bytecode.ConstPool, byte[])
    {
        javassist.bytecode.LocalVariableAttribute r0, $r3;
        javassist.bytecode.ConstPool r1;
        byte[] r2;

        r0 := @this: javassist.bytecode.LocalVariableAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: byte[];

        $r3 = new javassist.bytecode.LocalVariableAttribute;

        specialinvoke $r3.<javassist.bytecode.LocalVariableAttribute: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, "LocalVariableTable", r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.LocalVariableAttribute: java.lang.String typeTag> = "LocalVariableTypeTable";

        <javassist.bytecode.LocalVariableAttribute: java.lang.String tag> = "LocalVariableTable";

        return;
    }
}
