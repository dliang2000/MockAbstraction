final class org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference extends java.lang.Object implements org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference
{
    final java.lang.Object value;

    void <init>(java.lang.Object)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference r0;
        java.lang.Object r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference: java.lang.Object value> = r1;

        return;
    }

    public java.lang.Object get()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference: java.lang.Object value>;

        return $r1;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference;

        return null;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue, java.lang.Object, org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference r0;
        java.lang.ref.ReferenceQueue r1;
        java.lang.Object r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference;

        r1 := @parameter0: java.lang.ref.ReferenceQueue;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry;

        return r0;
    }

    public boolean isComputingReference()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference;

        return 0;
    }

    public java.lang.Object waitForValue()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference: java.lang.Object get()>();

        return $r1;
    }

    public void clear(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputedReference;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference;

        return;
    }
}
