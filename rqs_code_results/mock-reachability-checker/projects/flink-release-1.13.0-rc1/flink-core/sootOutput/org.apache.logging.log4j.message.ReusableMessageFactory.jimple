public final class org.apache.logging.log4j.message.ReusableMessageFactory extends java.lang.Object implements org.apache.logging.log4j.message.MessageFactory2, java.io.Serializable
{
    public static final org.apache.logging.log4j.message.ReusableMessageFactory INSTANCE;
    private static final long serialVersionUID;
    private static java.lang.ThreadLocal threadLocalParameterized;
    private static java.lang.ThreadLocal threadLocalSimpleMessage;
    private static java.lang.ThreadLocal threadLocalObjectMessage;

    public void <init>()
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()
    {
        java.lang.ThreadLocal $r0, $r4;
        java.lang.Object $r1;
        boolean $z0;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r2, $r3, r5, $r6;

        $r0 = <org.apache.logging.log4j.message.ReusableMessageFactory: java.lang.ThreadLocal threadLocalParameterized>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r5 = (org.apache.logging.log4j.message.ReusableParameterizedMessage) $r1;

        if r5 != null goto label1;

        $r3 = new org.apache.logging.log4j.message.ReusableParameterizedMessage;

        specialinvoke $r3.<org.apache.logging.log4j.message.ReusableParameterizedMessage: void <init>()>();

        r5 = $r3;

        $r4 = <org.apache.logging.log4j.message.ReusableMessageFactory: java.lang.ThreadLocal threadLocalParameterized>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r3);

     label1:
        $z0 = r5.<org.apache.logging.log4j.message.ReusableParameterizedMessage: boolean reserved>;

        if $z0 == 0 goto label2;

        $r2 = new org.apache.logging.log4j.message.ReusableParameterizedMessage;

        specialinvoke $r2.<org.apache.logging.log4j.message.ReusableParameterizedMessage: void <init>()>();

        $r6 = virtualinvoke $r2.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage reserve()>();

        goto label3;

     label2:
        $r6 = virtualinvoke r5.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage reserve()>();

     label3:
        return $r6;
    }

    private static org.apache.logging.log4j.message.ReusableSimpleMessage getSimple()
    {
        java.lang.ThreadLocal $r0, $r3;
        java.lang.Object $r1;
        org.apache.logging.log4j.message.ReusableSimpleMessage $r2, r4;

        $r0 = <org.apache.logging.log4j.message.ReusableMessageFactory: java.lang.ThreadLocal threadLocalSimpleMessage>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r4 = (org.apache.logging.log4j.message.ReusableSimpleMessage) $r1;

        if r4 != null goto label1;

        $r2 = new org.apache.logging.log4j.message.ReusableSimpleMessage;

        specialinvoke $r2.<org.apache.logging.log4j.message.ReusableSimpleMessage: void <init>()>();

        r4 = $r2;

        $r3 = <org.apache.logging.log4j.message.ReusableMessageFactory: java.lang.ThreadLocal threadLocalSimpleMessage>;

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2);

     label1:
        return r4;
    }

    private static org.apache.logging.log4j.message.ReusableObjectMessage getObject()
    {
        java.lang.ThreadLocal $r0, $r3;
        java.lang.Object $r1;
        org.apache.logging.log4j.message.ReusableObjectMessage $r2, r4;

        $r0 = <org.apache.logging.log4j.message.ReusableMessageFactory: java.lang.ThreadLocal threadLocalObjectMessage>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r4 = (org.apache.logging.log4j.message.ReusableObjectMessage) $r1;

        if r4 != null goto label1;

        $r2 = new org.apache.logging.log4j.message.ReusableObjectMessage;

        specialinvoke $r2.<org.apache.logging.log4j.message.ReusableObjectMessage: void <init>()>();

        r4 = $r2;

        $r3 = <org.apache.logging.log4j.message.ReusableMessageFactory: java.lang.ThreadLocal threadLocalObjectMessage>;

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2);

     label1:
        return r4;
    }

    public static void release(org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.message.Message r0;
        boolean $z0;
        org.apache.logging.log4j.message.Clearable $r1;

        r0 := @parameter0: org.apache.logging.log4j.message.Message;

        $z0 = r0 instanceof org.apache.logging.log4j.message.Clearable;

        if $z0 == 0 goto label1;

        $r1 = (org.apache.logging.log4j.message.Clearable) r0;

        interfaceinvoke $r1.<org.apache.logging.log4j.message.Clearable: void clear()>();

     label1:
        return;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.CharSequence)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.CharSequence r1;
        org.apache.logging.log4j.message.ReusableSimpleMessage r2;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.CharSequence;

        r2 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableSimpleMessage getSimple()>();

        virtualinvoke r2.<org.apache.logging.log4j.message.ReusableSimpleMessage: void set(java.lang.CharSequence)>(r1);

        return r2;
    }

    public transient org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r3, $r4;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()>();

        $r4 = virtualinvoke $r3.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage set(java.lang.String,java.lang.Object[])>(r1, r2);

        return $r4;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r3, $r4;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()>();

        $r4 = virtualinvoke $r3.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage set(java.lang.String,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r4, $r5;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()>();

        $r5 = virtualinvoke $r4.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage set(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return $r5;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r5, $r6;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()>();

        $r6 = virtualinvoke $r5.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage set(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4);

        return $r6;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r6, $r7;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r6 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()>();

        $r7 = virtualinvoke $r6.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage set(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5);

        return $r7;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r7, $r8;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r7 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()>();

        $r8 = virtualinvoke $r7.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage set(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6);

        return $r8;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6, r7;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r8, $r9;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r8 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()>();

        $r9 = virtualinvoke $r8.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage set(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7);

        return $r9;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r9, $r10;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r9 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()>();

        $r10 = virtualinvoke $r9.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage set(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8);

        return $r10;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r10, $r11;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r10 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()>();

        $r11 = virtualinvoke $r10.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage set(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return $r11;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r11, $r12;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r11 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()>();

        $r12 = virtualinvoke $r11.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage set(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return $r12;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.message.ReusableParameterizedMessage $r12, $r13;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r12 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableParameterizedMessage getParameterized()>();

        $r13 = virtualinvoke $r12.<org.apache.logging.log4j.message.ReusableParameterizedMessage: org.apache.logging.log4j.message.ReusableParameterizedMessage set(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return $r13;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.String)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.String r1;
        org.apache.logging.log4j.message.ReusableSimpleMessage r2;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableSimpleMessage getSimple()>();

        virtualinvoke r2.<org.apache.logging.log4j.message.ReusableSimpleMessage: void set(java.lang.String)>(r1);

        return r2;
    }

    public org.apache.logging.log4j.message.Message newMessage(java.lang.Object)
    {
        org.apache.logging.log4j.message.ReusableMessageFactory r0;
        java.lang.Object r1;
        org.apache.logging.log4j.message.ReusableObjectMessage r2;

        r0 := @this: org.apache.logging.log4j.message.ReusableMessageFactory;

        r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableObjectMessage getObject()>();

        virtualinvoke r2.<org.apache.logging.log4j.message.ReusableObjectMessage: void set(java.lang.Object)>(r1);

        return r2;
    }

    static void <clinit>()
    {
        org.apache.logging.log4j.message.ReusableMessageFactory $r0;
        java.lang.ThreadLocal $r1, $r2, $r3;

        <org.apache.logging.log4j.message.ReusableMessageFactory: long serialVersionUID> = -8970940216592525651L;

        $r0 = new org.apache.logging.log4j.message.ReusableMessageFactory;

        specialinvoke $r0.<org.apache.logging.log4j.message.ReusableMessageFactory: void <init>()>();

        <org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.ReusableMessageFactory INSTANCE> = $r0;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.logging.log4j.message.ReusableMessageFactory: java.lang.ThreadLocal threadLocalParameterized> = $r1;

        $r2 = new java.lang.ThreadLocal;

        specialinvoke $r2.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.logging.log4j.message.ReusableMessageFactory: java.lang.ThreadLocal threadLocalSimpleMessage> = $r2;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.logging.log4j.message.ReusableMessageFactory: java.lang.ThreadLocal threadLocalObjectMessage> = $r3;

        return;
    }
}
