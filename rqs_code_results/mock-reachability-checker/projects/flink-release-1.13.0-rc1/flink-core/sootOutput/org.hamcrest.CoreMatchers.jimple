public class org.hamcrest.CoreMatchers extends java.lang.Object
{

    public void <init>()
    {
        org.hamcrest.CoreMatchers r0;

        r0 := @this: org.hamcrest.CoreMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.hamcrest.Matcher allOf(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(java.lang.Iterable)>(r0);

        return $r1;
    }

    public static transient org.hamcrest.Matcher allOf(org.hamcrest.Matcher[])
    {
        org.hamcrest.Matcher[] r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: org.hamcrest.Matcher[];

        $r1 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher[])>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher allOf(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, $r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1);

        return $r2;
    }

    public static org.hamcrest.Matcher allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        $r3 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1, r2);

        return $r3;
    }

    public static org.hamcrest.Matcher allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3, $r4;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        $r4 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1, r2, r3);

        return $r4;
    }

    public static org.hamcrest.Matcher allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3, r4, $r5;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        r4 := @parameter4: org.hamcrest.Matcher;

        $r5 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    public static org.hamcrest.Matcher allOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3, r4, r5, $r6;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        r4 := @parameter4: org.hamcrest.Matcher;

        r5 := @parameter5: org.hamcrest.Matcher;

        $r6 = staticinvoke <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1, r2, r3, r4, r5);

        return $r6;
    }

    public static org.hamcrest.core.AnyOf anyOf(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.hamcrest.core.AnyOf $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(java.lang.Iterable)>(r0);

        return $r1;
    }

    public static org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2;
        org.hamcrest.core.AnyOf $r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        $r3 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1, r2);

        return $r3;
    }

    public static org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3;
        org.hamcrest.core.AnyOf $r4;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        $r4 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1, r2, r3);

        return $r4;
    }

    public static org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3, r4;
        org.hamcrest.core.AnyOf $r5;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        r4 := @parameter4: org.hamcrest.Matcher;

        $r5 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    public static org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3, r4, r5;
        org.hamcrest.core.AnyOf $r6;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        r4 := @parameter4: org.hamcrest.Matcher;

        r5 := @parameter5: org.hamcrest.Matcher;

        $r6 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1, r2, r3, r4, r5);

        return $r6;
    }

    public static org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        org.hamcrest.core.AnyOf $r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1);

        return $r2;
    }

    public static transient org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher[])
    {
        org.hamcrest.Matcher[] r0;
        org.hamcrest.core.AnyOf $r1;

        r0 := @parameter0: org.hamcrest.Matcher[];

        $r1 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher[])>(r0);

        return $r1;
    }

    public static org.hamcrest.core.CombinableMatcher$CombinableBothMatcher both(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;
        org.hamcrest.core.CombinableMatcher$CombinableBothMatcher $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.core.CombinableMatcher: org.hamcrest.core.CombinableMatcher$CombinableBothMatcher both(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher either(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;
        org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.core.CombinableMatcher: org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher either(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static transient org.hamcrest.Matcher describedAs(java.lang.String, org.hamcrest.Matcher, java.lang.Object[])
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r3;
        java.lang.Object[] r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: java.lang.Object[];

        $r3 = staticinvoke <org.hamcrest.core.DescribedAs: org.hamcrest.Matcher describedAs(java.lang.String,org.hamcrest.Matcher,java.lang.Object[])>(r0, r1, r2);

        return $r3;
    }

    public static org.hamcrest.Matcher everyItem(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.core.Every: org.hamcrest.Matcher everyItem(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher is(java.lang.Object)
    {
        java.lang.Object r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher is(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher is(java.lang.Class)
    {
        java.lang.Class r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Class)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher isA(java.lang.Class)
    {
        java.lang.Class r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher isA(java.lang.Class)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher anything()
    {
        org.hamcrest.Matcher $r0;

        $r0 = staticinvoke <org.hamcrest.core.IsAnything: org.hamcrest.Matcher anything()>();

        return $r0;
    }

    public static org.hamcrest.Matcher anything(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.core.IsAnything: org.hamcrest.Matcher anything(java.lang.String)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher hasItem(java.lang.Object)
    {
        java.lang.Object r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.hamcrest.core.IsCollectionContaining: org.hamcrest.Matcher hasItem(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher hasItem(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.core.IsCollectionContaining: org.hamcrest.Matcher hasItem(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static transient org.hamcrest.Matcher hasItems(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <org.hamcrest.core.IsCollectionContaining: org.hamcrest.Matcher hasItems(java.lang.Object[])>(r0);

        return $r1;
    }

    public static transient org.hamcrest.Matcher hasItems(org.hamcrest.Matcher[])
    {
        org.hamcrest.Matcher[] r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: org.hamcrest.Matcher[];

        $r1 = staticinvoke <org.hamcrest.core.IsCollectionContaining: org.hamcrest.Matcher hasItems(org.hamcrest.Matcher[])>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher equalTo(java.lang.Object)
    {
        java.lang.Object r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher any(java.lang.Class)
    {
        java.lang.Class r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.hamcrest.core.IsInstanceOf: org.hamcrest.Matcher any(java.lang.Class)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher instanceOf(java.lang.Class)
    {
        java.lang.Class r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.hamcrest.core.IsInstanceOf: org.hamcrest.Matcher instanceOf(java.lang.Class)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher not(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <org.hamcrest.core.IsNot: org.hamcrest.Matcher not(org.hamcrest.Matcher)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher not(java.lang.Object)
    {
        java.lang.Object r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.hamcrest.core.IsNot: org.hamcrest.Matcher not(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher nullValue()
    {
        org.hamcrest.Matcher $r0;

        $r0 = staticinvoke <org.hamcrest.core.IsNull: org.hamcrest.Matcher nullValue()>();

        return $r0;
    }

    public static org.hamcrest.Matcher nullValue(java.lang.Class)
    {
        java.lang.Class r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.hamcrest.core.IsNull: org.hamcrest.Matcher nullValue(java.lang.Class)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher notNullValue()
    {
        org.hamcrest.Matcher $r0;

        $r0 = staticinvoke <org.hamcrest.core.IsNull: org.hamcrest.Matcher notNullValue()>();

        return $r0;
    }

    public static org.hamcrest.Matcher notNullValue(java.lang.Class)
    {
        java.lang.Class r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.hamcrest.core.IsNull: org.hamcrest.Matcher notNullValue(java.lang.Class)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher sameInstance(java.lang.Object)
    {
        java.lang.Object r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.hamcrest.core.IsSame: org.hamcrest.Matcher sameInstance(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher theInstance(java.lang.Object)
    {
        java.lang.Object r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.hamcrest.core.IsSame: org.hamcrest.Matcher theInstance(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher containsString(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.core.StringContains: org.hamcrest.Matcher containsString(java.lang.String)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher startsWith(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.core.StringStartsWith: org.hamcrest.Matcher startsWith(java.lang.String)>(r0);

        return $r1;
    }

    public static org.hamcrest.Matcher endsWith(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.core.StringEndsWith: org.hamcrest.Matcher endsWith(java.lang.String)>(r0);

        return $r1;
    }
}
