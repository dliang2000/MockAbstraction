public final class org.apache.flink.types.SerializableOptional extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final org.apache.flink.types.SerializableOptional EMPTY;
    private final java.io.Serializable value;

    private void <init>(java.io.Serializable)
    {
        org.apache.flink.types.SerializableOptional r0;
        java.io.Serializable r1;

        r0 := @this: org.apache.flink.types.SerializableOptional;

        r1 := @parameter0: java.io.Serializable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.types.SerializableOptional: java.io.Serializable value> = r1;

        return;
    }

    public java.io.Serializable get()
    {
        org.apache.flink.types.SerializableOptional r0;
        java.io.Serializable $r1, $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: org.apache.flink.types.SerializableOptional;

        $r1 = r0.<org.apache.flink.types.SerializableOptional: java.io.Serializable value>;

        if $r1 != null goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No value present");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.flink.types.SerializableOptional: java.io.Serializable value>;

        return $r2;
    }

    public boolean isPresent()
    {
        org.apache.flink.types.SerializableOptional r0;
        java.io.Serializable $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.types.SerializableOptional;

        $r1 = r0.<org.apache.flink.types.SerializableOptional: java.io.Serializable value>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void ifPresent(java.util.function.Consumer)
    {
        org.apache.flink.types.SerializableOptional r0;
        java.util.function.Consumer r1;
        java.io.Serializable $r2, $r3;

        r0 := @this: org.apache.flink.types.SerializableOptional;

        r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<org.apache.flink.types.SerializableOptional: java.io.Serializable value>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.flink.types.SerializableOptional: java.io.Serializable value>;

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r3);

     label1:
        return;
    }

    public org.apache.flink.types.SerializableOptional map(java.util.function.Function)
    {
        org.apache.flink.types.SerializableOptional r0, $r6, $r7;
        java.util.function.Function r1;
        java.io.Serializable $r2, $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.types.SerializableOptional;

        r1 := @parameter0: java.util.function.Function;

        $r2 = r0.<org.apache.flink.types.SerializableOptional: java.io.Serializable value>;

        if $r2 != null goto label1;

        $r7 = staticinvoke <org.apache.flink.types.SerializableOptional: org.apache.flink.types.SerializableOptional empty()>();

        return $r7;

     label1:
        $r3 = r0.<org.apache.flink.types.SerializableOptional: java.io.Serializable value>;

        $r4 = interfaceinvoke r1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r3);

        $r5 = (java.io.Serializable) $r4;

        $r6 = staticinvoke <org.apache.flink.types.SerializableOptional: org.apache.flink.types.SerializableOptional ofNullable(java.io.Serializable)>($r5);

        return $r6;
    }

    public java.util.Optional toOptional()
    {
        org.apache.flink.types.SerializableOptional r0;
        java.io.Serializable $r1;
        java.util.Optional $r2;

        r0 := @this: org.apache.flink.types.SerializableOptional;

        $r1 = r0.<org.apache.flink.types.SerializableOptional: java.io.Serializable value>;

        $r2 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($r1);

        return $r2;
    }

    public static org.apache.flink.types.SerializableOptional of(java.io.Serializable)
    {
        java.io.Serializable r0;
        org.apache.flink.types.SerializableOptional $r1;

        r0 := @parameter0: java.io.Serializable;

        $r1 = new org.apache.flink.types.SerializableOptional;

        specialinvoke $r1.<org.apache.flink.types.SerializableOptional: void <init>(java.io.Serializable)>(r0);

        return $r1;
    }

    public static org.apache.flink.types.SerializableOptional ofNullable(java.io.Serializable)
    {
        java.io.Serializable r0;
        org.apache.flink.types.SerializableOptional $r1, $r2;

        r0 := @parameter0: java.io.Serializable;

        if r0 != null goto label1;

        $r2 = staticinvoke <org.apache.flink.types.SerializableOptional: org.apache.flink.types.SerializableOptional empty()>();

        return $r2;

     label1:
        $r1 = staticinvoke <org.apache.flink.types.SerializableOptional: org.apache.flink.types.SerializableOptional of(java.io.Serializable)>(r0);

        return $r1;
    }

    public static org.apache.flink.types.SerializableOptional empty()
    {
        org.apache.flink.types.SerializableOptional $r0;

        $r0 = <org.apache.flink.types.SerializableOptional: org.apache.flink.types.SerializableOptional EMPTY>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.flink.types.SerializableOptional $r0;

        <org.apache.flink.types.SerializableOptional: long serialVersionUID> = -3312769593551775940L;

        $r0 = new org.apache.flink.types.SerializableOptional;

        specialinvoke $r0.<org.apache.flink.types.SerializableOptional: void <init>(java.io.Serializable)>(null);

        <org.apache.flink.types.SerializableOptional: org.apache.flink.types.SerializableOptional EMPTY> = $r0;

        return;
    }
}
