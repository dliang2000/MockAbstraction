public class org.apache.flink.api.java.typeutils.TypeExtractorTest$Either1 extends org.apache.flink.types.Either
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$Either1 r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$Either1;

        specialinvoke r0.<org.apache.flink.types.Either: void <init>()>();

        return;
    }

    public java.lang.String left() throws java.lang.IllegalStateException
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$Either1 r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$Either1;

        return null;
    }

    public java.lang.Object right() throws java.lang.IllegalStateException
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$Either1 r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$Either1;

        return null;
    }

    public volatile java.lang.Object left() throws java.lang.IllegalStateException
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$Either1 r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$Either1;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.TypeExtractorTest$Either1: java.lang.String left()>();

        return $r1;
    }
}
