final class javassist.CtArray extends javassist.CtClass
{
    protected javassist.ClassPool pool;
    private javassist.CtClass[] interfaces;

    void <init>(java.lang.String, javassist.ClassPool)
    {
        javassist.CtArray r0;
        java.lang.String r1;
        javassist.ClassPool r2;

        r0 := @this: javassist.CtArray;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javassist.ClassPool;

        specialinvoke r0.<javassist.CtClass: void <init>(java.lang.String)>(r1);

        r0.<javassist.CtArray: javassist.CtClass[] interfaces> = null;

        r0.<javassist.CtArray: javassist.ClassPool pool> = r2;

        return;
    }

    public javassist.ClassPool getClassPool()
    {
        javassist.CtArray r0;
        javassist.ClassPool $r1;

        r0 := @this: javassist.CtArray;

        $r1 = r0.<javassist.CtArray: javassist.ClassPool pool>;

        return $r1;
    }

    public boolean isArray()
    {
        javassist.CtArray r0;

        r0 := @this: javassist.CtArray;

        return 1;
    }

    public int getModifiers()
    {
        javassist.CtArray r0;
        javassist.CtClass $r2;
        int $i0, $i1, i2;
        javassist.NotFoundException $r3;

        r0 := @this: javassist.CtArray;

        i2 = 16;

     label1:
        $r2 = virtualinvoke r0.<javassist.CtArray: javassist.CtClass getComponentType()>();

        $i0 = virtualinvoke $r2.<javassist.CtClass: int getModifiers()>();

        $i1 = $i0 & 7;

        i2 = 16 | $i1;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return i2;

        catch javassist.NotFoundException from label1 to label2 with label3;
    }

    public javassist.CtClass[] getInterfaces() throws javassist.NotFoundException
    {
        javassist.CtArray r0;
        java.lang.Class[] r1;
        javassist.CtClass[] $r2, $r3, $r5, $r7;
        java.lang.Class $r4, $r6;
        int $i0, $i1, i2;
        javassist.ClassPool $r8;
        java.lang.String $r9;
        javassist.CtClass $r10;

        r0 := @this: javassist.CtArray;

        $r2 = r0.<javassist.CtArray: javassist.CtClass[] interfaces>;

        if $r2 != null goto label2;

        $r4 = class "[Ljava/lang/Object;";

        r1 = virtualinvoke $r4.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i0 = lengthof r1;

        $r5 = newarray (javassist.CtClass)[$i0];

        r0.<javassist.CtArray: javassist.CtClass[] interfaces> = $r5;

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r7 = r0.<javassist.CtArray: javassist.CtClass[] interfaces>;

        $r8 = r0.<javassist.CtArray: javassist.ClassPool pool>;

        $r6 = r1[i2];

        $r9 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<javassist.ClassPool: javassist.CtClass get(java.lang.String)>($r9);

        $r7[i2] = $r10;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = r0.<javassist.CtArray: javassist.CtClass[] interfaces>;

        return $r3;
    }

    public boolean subtypeOf(javassist.CtClass) throws javassist.NotFoundException
    {
        javassist.CtArray r0;
        javassist.CtClass r1, $r4, $r5, $r6;
        java.lang.String r2;
        javassist.CtClass[] r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, i1;

        r0 := @this: javassist.CtArray;

        r1 := @parameter0: javassist.CtClass;

        $z0 = specialinvoke r0.<javassist.CtClass: boolean subtypeOf(javassist.CtClass)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r2 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Object");

        if $z1 == 0 goto label2;

        return 1;

     label2:
        r3 = virtualinvoke r0.<javassist.CtArray: javassist.CtClass[] getInterfaces()>();

        i1 = 0;

     label3:
        $i0 = lengthof r3;

        if i1 >= $i0 goto label5;

        $r6 = r3[i1];

        $z4 = virtualinvoke $r6.<javassist.CtClass: boolean subtypeOf(javassist.CtClass)>(r1);

        if $z4 == 0 goto label4;

        return 1;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $z2 = virtualinvoke r1.<javassist.CtClass: boolean isArray()>();

        if $z2 == 0 goto label6;

        $r4 = virtualinvoke r0.<javassist.CtArray: javassist.CtClass getComponentType()>();

        $r5 = virtualinvoke r1.<javassist.CtClass: javassist.CtClass getComponentType()>();

        $z3 = virtualinvoke $r4.<javassist.CtClass: boolean subtypeOf(javassist.CtClass)>($r5);

        if $z3 == 0 goto label6;

        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        return $z5;
    }

    public javassist.CtClass getComponentType() throws javassist.NotFoundException
    {
        javassist.CtArray r0;
        java.lang.String r1, $r3;
        javassist.ClassPool $r2;
        int $i0, $i1;
        javassist.CtClass $r4;

        r0 := @this: javassist.CtArray;

        r1 = virtualinvoke r0.<javassist.CtArray: java.lang.String getName()>();

        $r2 = r0.<javassist.CtArray: javassist.ClassPool pool>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 - 2;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r4 = virtualinvoke $r2.<javassist.ClassPool: javassist.CtClass get(java.lang.String)>($r3);

        return $r4;
    }

    public javassist.CtClass getSuperclass() throws javassist.NotFoundException
    {
        javassist.CtArray r0;
        javassist.ClassPool $r1;
        javassist.CtClass $r2;

        r0 := @this: javassist.CtArray;

        $r1 = r0.<javassist.CtArray: javassist.ClassPool pool>;

        $r2 = virtualinvoke $r1.<javassist.ClassPool: javassist.CtClass get(java.lang.String)>("java.lang.Object");

        return $r2;
    }

    public javassist.CtMethod[] getMethods()
    {
        javassist.CtArray r0;
        javassist.CtClass $r2;
        javassist.CtMethod[] $r3, $r5;
        javassist.NotFoundException $r4;

        r0 := @this: javassist.CtArray;

     label1:
        $r2 = virtualinvoke r0.<javassist.CtArray: javassist.CtClass getSuperclass()>();

        $r3 = virtualinvoke $r2.<javassist.CtClass: javassist.CtMethod[] getMethods()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = specialinvoke r0.<javassist.CtClass: javassist.CtMethod[] getMethods()>();

        return $r5;

        catch javassist.NotFoundException from label1 to label2 with label3;
    }

    public javassist.CtMethod getMethod(java.lang.String, java.lang.String) throws javassist.NotFoundException
    {
        javassist.CtArray r0;
        java.lang.String r1, r2;
        javassist.CtClass $r3;
        javassist.CtMethod $r4;

        r0 := @this: javassist.CtArray;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<javassist.CtArray: javassist.CtClass getSuperclass()>();

        $r4 = virtualinvoke $r3.<javassist.CtClass: javassist.CtMethod getMethod(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public javassist.CtConstructor[] getConstructors()
    {
        javassist.CtArray r0;
        javassist.CtClass $r2;
        javassist.CtConstructor[] $r3, $r5;
        javassist.NotFoundException $r4;

        r0 := @this: javassist.CtArray;

     label1:
        $r2 = virtualinvoke r0.<javassist.CtArray: javassist.CtClass getSuperclass()>();

        $r3 = virtualinvoke $r2.<javassist.CtClass: javassist.CtConstructor[] getConstructors()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = specialinvoke r0.<javassist.CtClass: javassist.CtConstructor[] getConstructors()>();

        return $r5;

        catch javassist.NotFoundException from label1 to label2 with label3;
    }
}
