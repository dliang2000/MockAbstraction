public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Versioned, java.io.Serializable
{
    private static final long serialVersionUID;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext;
    protected java.util.Set _registeredModuleTypes;
    protected final java.util.concurrent.ConcurrentHashMap _rootDeserializers;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)>(null, null, null);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)>(r1, null, null);

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, r1;
        java.util.Set r3;
        java.util.concurrent.ConcurrentHashMap $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r5, $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver $r9, $r10, $r23, $r29;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides $r13, $r14, $r21, $r27;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs $r15, $r16, $r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver $r17, $r18, $r22, $r28;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RootNameLookup $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r20, $r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r25, $r30;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r31, $r32;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext $r33, $r34;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory $r35;
        java.util.LinkedHashSet $r36;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec: void <init>()>();

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(64, 0.6F, 2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers> = $r4;

        $r5 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory copy()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory> = $r6;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory setCodec(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>(r0);

        $r9 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver copy()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver> = $r10;

        $r11 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory> = $r11;

        $r12 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues> = $r12;

        $r13 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides copy()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides> = $r14;

        $r15 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;

        $r16 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs copy()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs> = $r16;

        $r17 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;

        $r18 = virtualinvoke $r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver copy()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns> = $r18;

        $r19 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RootNameLookup;

        specialinvoke $r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RootNameLookup: void <init>()>();

        $r20 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        $r24 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;

        $r22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;

        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        specialinvoke $r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RootNameLookup,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides)>($r24, $r23, $r22, $r19, $r21);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r20;

        $r25 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        $r30 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r29 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;

        $r28 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;

        $r27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        $r26 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;

        specialinvoke $r25.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RootNameLookup,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs)>($r30, $r29, $r28, $r19, $r27, $r26);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r25;

        $r31 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider>;

        $r32 = virtualinvoke $r31.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider copy()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider> = $r32;

        $r33 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext>;

        $r34 = virtualinvoke $r33.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext copy()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext> = $r34;

        $r35 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = $r35;

        r3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes>;

        if r3 != null goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes> = null;

        goto label2;

     label1:
        $r36 = new java.util.LinkedHashSet;

        specialinvoke $r36.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes> = $r36;

     label2:
        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory r1, $r15, $r33;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r2, $r36;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext r3, $r37;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings r6, $r22;
        boolean z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerFactory $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.BeanDeserializerFactory $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r13, $r35;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector $r23;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver $r27, $r30;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides $r28, $r31, r43;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs $r32, r44;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r34, r45;
        java.util.concurrent.ConcurrentHashMap r38;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingJsonFactory r39;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver r40;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RootNameLookup r41;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver r42;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r46;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl r47;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl r48;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec: void <init>()>();

        r38 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke r38.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(64, 0.6F, 2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers> = r38;

        if r1 != null goto label1;

        r39 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingJsonFactory;

        specialinvoke r39.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingJsonFactory: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper)>(r0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory> = r39;

        goto label2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory> = r1;

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec getCodec()>();

        if $r8 != null goto label2;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory setCodec(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>(r0);

     label2:
        r40 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;

        specialinvoke r40.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver> = r40;

        r41 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RootNameLookup;

        specialinvoke r41.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RootNameLookup: void <init>()>();

        $r20 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory> = $r20;

        r42 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver;

        specialinvoke r42.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>(null);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns> = r42;

        $r22 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE>;

        $r23 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector defaultClassIntrospector()>();

        r6 = virtualinvoke $r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings withClassIntrospector(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector)>($r23);

        r43 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        specialinvoke r43.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides> = r43;

        r44 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs;

        specialinvoke r44.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs> = r44;

        r45 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        $r27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;

        $r28 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        specialinvoke r45.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RootNameLookup,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides)>(r6, $r27, r42, r41, $r28);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = r45;

        r46 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        $r30 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;

        $r31 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        $r32 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;

        specialinvoke r46.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.RootNameLookup,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs)>(r6, $r30, r42, r41, $r31, $r32);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = r46;

        $r33 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        z0 = virtualinvoke $r33.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: boolean requiresPropertyOrdering()>();

        $r34 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r35 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature SORT_PROPERTIES_ALPHABETICALLY>;

        $z1 = virtualinvoke $r34.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r35);

        $z2 = z0 ^ $z1;

        if $z2 == 0 goto label3;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature SORT_PROPERTIES_ALPHABETICALLY>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper configure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature,boolean)>($r13, z0);

     label3:
        if r2 != null goto label4;

        r47 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl;

        $r36 = r47;

        specialinvoke r47.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl: void <init>()>();

        goto label5;

     label4:
        $r36 = r2;

     label5:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider> = $r36;

        if r3 != null goto label6;

        r48 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl;

        $r37 = r48;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.BeanDeserializerFactory instance>;

        specialinvoke r48.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory)>($r10);

        goto label7;

     label6:
        $r37 = r3;

     label7:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext> = $r37;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = $r9;

        return;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector defaultClassIntrospector()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BasicClassIntrospector $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BasicClassIntrospector;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: void <init>()>();

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper copy()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _checkInvalidCopy(java.lang.Class)>(class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/ObjectMapper;");

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper)>(r0);

        return $r1;
    }

    protected void _checkInvalidCopy(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1, $r2, $r6;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r11, $r12;
        java.lang.String $r7, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == r1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed copy(): ");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (version: ");

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version version()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") does not override copy(); it has to");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r3;

     label1:
        return;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>(r0, r1);

        return $r2;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        java.lang.Object r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema;

        r5 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues;

        $r6 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>(r0, r1, r2, r3, r4, r5);

        return $r6;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>(r0, r1);

        return $r2;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema)>(r0, r1, r2);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter;

        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)>(r0, r1, r2, r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version version()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.PackageVersion: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version VERSION>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper registerModule(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module r1, r4;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version r3;
        java.lang.Iterable $r5;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r6;
        java.util.Set $r7, $r8;
        java.util.LinkedHashSet $r9;
        java.lang.Object $r10, r15;
        java.lang.IllegalArgumentException $r12, $r13;
        java.util.Iterator r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$1 $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("module", r1);

        r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module: java.lang.String getModuleName()>();

        if r2 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Module without defined name");

        throw $r13;

     label1:
        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version version()>();

        if r3 != null goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Module without defined version");

        throw $r12;

     label2:
        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module: java.lang.Iterable getDependencies()>();

        r14 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module) $r10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper registerModule(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module)>(r4);

        goto label3;

     label4:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature IGNORE_DUPLICATE_MODULE_REGISTRATIONS>;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r6);

        if $z1 == 0 goto label6;

        r15 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module: java.lang.Object getTypeId()>();

        if r15 == null goto label6;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes>;

        if $r7 != null goto label5;

        $r9 = new java.util.LinkedHashSet;

        specialinvoke $r9.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes> = $r9;

     label5:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes>;

        $z2 = interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r15);

        if $z2 != 0 goto label6;

        return r0;

     label6:
        $r16 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$1;

        specialinvoke $r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$1: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper)>(r0);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module: void setupModule(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module$SetupContext)>($r16);

        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper registerModules(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r1[i1];

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper registerModule(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper registerModules(java.lang.Iterable)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Iterable r1;
        java.util.Iterator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Iterable;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("modules", r1);

        r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module) $r4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper registerModule(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module)>(r3);

        goto label1;

     label2:
        return r0;
    }

    public java.util.Set getRegisteredModuleIds()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.util.Set $r1, $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes>;

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

     label2:
        return $r3;
    }

    public static java.util.List findModules()
    {
        java.util.List $r0;

        $r0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.List findModules(java.lang.ClassLoader)>(null);

        return $r0;
    }

    public static java.util.List findModules(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r0;
        java.util.ServiceLoader r2;
        java.util.Iterator r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module r4;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @parameter0: java.lang.ClassLoader;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.ServiceLoader secureGetServiceLoader(java.lang.Class,java.lang.ClassLoader)>(class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/Module;", r0);

        r3 = virtualinvoke r2.<java.util.ServiceLoader: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.Module) $r6;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label1;

     label2:
        return $r5;
    }

    private static java.util.ServiceLoader secureGetServiceLoader(java.lang.Class, java.lang.ClassLoader)
    {
        java.lang.Class r0;
        java.lang.ClassLoader r1;
        java.lang.SecurityManager r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$2 $r3;
        java.lang.Object $r4;
        java.util.ServiceLoader $r5, $r6;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.ClassLoader;

        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if r2 != null goto label3;

        if r1 != null goto label1;

        $r6 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>(r0);

        goto label2;

     label1:
        $r6 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(r0, r1);

     label2:
        return $r6;

     label3:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$2;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$2: void <init>(java.lang.ClassLoader,java.lang.Class)>(r1, r0);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);

        $r5 = (java.util.ServiceLoader) $r4;

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper findAndRegisterModules()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r2;
        java.util.List $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.List findModules()>();

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper registerModules(java.lang.Iterable)>($r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.OutputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.OutputStream;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("out", r1);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        r2 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>(r1, $r3);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: void initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r2);

        return r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.OutputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("out", r1);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        r3 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>(r1, r2);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: void initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r3);

        return r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.Writer r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.Writer;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("w", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        r2 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer)>(r1);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: void initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r2);

        return r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.File r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("outputFile", r1);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        r3 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>(r1, r2);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: void initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r3);

        return r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.DataOutput r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.DataOutput;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("out", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        r2 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput)>(r1);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: void initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r2);

        return r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.File) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.File r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.File;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(r1);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.net.URL r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.net.URL;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(r1);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.InputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.InputStream;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("in", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(r1);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.Reader r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.Reader;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("r", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(r1);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[]) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        byte[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: byte[];

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[])>(r1);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        byte[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(r1, i0, i1);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.lang.String)>(r1);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(char[]) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        char[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: char[];

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(char[])>(r1);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        char[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(char[],int,int)>(r1, i0, i1);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.DataInput r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.DataInput;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput)>(r1);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser()>();

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext getDeserializationContext()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setSerializerFactory(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory getSerializerFactory()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setSerializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider getSerializerProvider()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider getSerializerProviderInstance()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setMixIns(java.util.Map)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: void setLocalDefinitions(java.util.Map)>(r1);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper addMixIn(java.lang.Class, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1, r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: void addLocalDefinition(java.lang.Class,java.lang.Class)>(r1, r2);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setMixInResolver(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver r2, $r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r7, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;

        r2 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver withOverrides(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>(r1);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;

        if r2 == $r4 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns> = r2;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver)>($r6, r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r5;

        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver)>($r8, r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r7;

     label1:
        return r0;
    }

    public java.lang.Class findMixInClassFor(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>(r1);

        return $r3;
    }

    public int mixInCount()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;

        $i0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: int localSize()>();

        return $i0;
    }

    public void setMixInAnnotations(java.util.Map)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.util.Map r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.util.Map;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setMixIns(java.util.Map)>(r1);

        return;
    }

    public final void addMixInAnnotations(java.lang.Class, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1, r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper addMixIn(java.lang.Class,java.lang.Class)>(r1, r2);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker getVisibilityChecker()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setVisibility(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultVisibility(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker)>(r1);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setVisibility(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.PropertyAccessor, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.PropertyAccessor r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides $r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker r5, r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.PropertyAccessor;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibility()>();

        r6 = interfaceinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker withVisibility(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.PropertyAccessor,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility)>(r1, r2);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultVisibility(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker)>(r6);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setSubtypeResolver(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver> = r1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r5;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setAnnotationIntrospector(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector)>(r1);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r7;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setAnnotationIntrospectors(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r1, r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r4, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r6, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector)>(r1);

        $r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r5;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector)>(r2);

        $r8 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r7;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r8;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setPropertyNamingStrategy(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy)>(r1);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r7;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy()>();

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setAccessorNaming(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider)>(r1);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r7;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultPrettyPrinter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig withDefaultPrettyPrinter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r3;

        return r0;
    }

    public void setVisibilityChecker(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setVisibility(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker)>(r1);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setPolymorphicTypeValidator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings getBaseSettings()>();

        r2 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _withBase(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings)>(r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r6;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings getBaseSettings()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()>();

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setSerializationInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include;

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include)>(r1, r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setPropertyInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)>($r2);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setPropertyInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultPropertyInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultPropertyInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(r1);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultPropertyInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include)>(r1, r1);

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)>($r3);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultSetterInfo(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultSetterInfo(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value)>(r1);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultVisibility(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonAutoDetect$Value)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonAutoDetect$Value r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonAutoDetect$Value;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonAutoDetect$Value)>(r1);

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultVisibility(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker)>($r3);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultMergeable(java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Boolean r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Boolean;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultMergeable(java.lang.Boolean)>(r1);

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultLeniency(java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Boolean r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Boolean;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultLeniency(java.lang.Boolean)>(r1);

        return r0;
    }

    public transient void registerSubtypes(java.lang.Class[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class[];

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver: void registerSubtypes(java.lang.Class[])>(r1);

        return;
    }

    public transient void registerSubtypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType[];

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver: void registerSubtypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType[])>(r1);

        return;
    }

    public void registerSubtypes(java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.util.Collection r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.util.Collection;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver: void registerSubtypes(java.util.Collection)>(r1);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping OBJECT_AND_NON_CONCRETE>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As WRAPPER_ARRAY>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>(r1, r2, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id $r5;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder r12, r13, r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As EXTERNAL_PROPERTY>;

        if r3 != $r4 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot use includeAs of ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _constructDefaultTypeResolverBuilder(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r2, r1);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id CLASS>;

        r13 = interfaceinvoke r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver)>($r5, null);

        r14 = interfaceinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>(r3);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(r14);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper activateDefaultTypingAsProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping r2;
        java.lang.String r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder r7, r8, r9, r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;

        r3 := @parameter2: java.lang.String;

        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _constructDefaultTypeResolverBuilder(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r2, r1);

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id CLASS>;

        r8 = interfaceinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver)>($r4, null);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As PROPERTY>;

        r9 = interfaceinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>($r5);

        r10 = interfaceinvoke r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String)>(r3);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(r10);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper deactivateDefaultTyping()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(null);

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(r1);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r7;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()>();

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>($r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As WRAPPER_ARRAY>;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>(r1, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>($r3, r1, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enableDefaultTypingAsProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper activateDefaultTypingAsProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,java.lang.String)>($r3, r1, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper disableDefaultTyping()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0, $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(null);

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride configOverride(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride findOrCreateOverride(java.lang.Class)>(r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigDefaults()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableCoercionConfig $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableCoercionConfig defaultCoercions()>();

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigFor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableCoercionConfig $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableCoercionConfig findOrCreateCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType)>(r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigFor(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableCoercionConfig $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionConfigs: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableCoercionConfig findOrCreateCoercion(java.lang.Class)>(r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setTypeFactory(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory> = r1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>(r1);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r7;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.reflect.Type r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.reflect.Type;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("t", r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("typeRef", r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setNodeFactory(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r3;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setConstructorDetector(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConstructorDetector)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConstructorDetector r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConstructorDetector;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConstructorDetector)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r3;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper addHandler(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializationProblemHandler r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializationProblemHandler;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig withHandler(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r3;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper clearProblemHandlers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r1, $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig withNoProblemHandlers()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r2;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setConfig(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("config", r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = r1;

        return r0;
    }

    public void setFilters(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig withFilters(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r3;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setFilterProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig withFilters(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r3;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setBase64Variant(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r7;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setConfig(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("config", r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory tokenStreamFactory()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory getFactory()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory getJsonFactory()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory getFactory()>();

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setDateFormat(java.text.DateFormat)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.text.DateFormat r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.text.DateFormat;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(java.text.DateFormat)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig 'with'(java.text.DateFormat)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r6;

        return r0;
    }

    public java.text.DateFormat getDateFormat()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        java.text.DateFormat $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: java.text.DateFormat getDateFormat()>();

        return $r2;
    }

    public java.lang.Object setHandlerInstantiator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator)>(r1);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r7;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setInjectableValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues getInjectableValues()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setLocale(java.util.Locale)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.util.Locale r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(java.util.Locale)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(java.util.Locale)>(r1);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r7;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper setTimeZone(java.util.TimeZone)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.util.TimeZone r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.util.TimeZone;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(java.util.TimeZone)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(java.util.TimeZone)>(r1);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r7;

        return r0;
    }

    public boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $z0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>(r1);

        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper configure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[] $r2, $r5, $r8, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3, $r13, $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r4, $r7, $r10, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r6, $r9, $r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r12 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)[1];

        $r12[0] = r1;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[])>($r12);

        $r16 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r14;

        goto label2;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r2 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)[1];

        $r2[0] = r1;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[])>($r2);

        $r16 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r4;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r16;

        if z0 == 0 goto label3;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r8 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)[1];

        $r8[0] = r1;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[])>($r8);

        $r17 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r10;

        goto label4;

     label3:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r5 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)[1];

        $r5[0] = r1;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[])>($r5);

        $r17 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r7;

     label4:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r17;

        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[];

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[])>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[])>(r1);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r7;

        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[];

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[])>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[])>(r1);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r7;

        return r0;
    }

    public boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $z0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>(r1);

        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper configure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r3, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>(r1);

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r5 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>(r1);

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r5;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r3;

        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[];

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[])>(r1, r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r4;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r3;

        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[];

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[])>(r1, r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $r4;

        return r0;
    }

    public boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $z0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>(r1);

        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper configure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r3, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>(r1);

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r5 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>(r1);

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r5;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r3;

        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[];

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[])>(r1, r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r4;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r3;

        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[];

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[])>(r1, r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = $r4;

        return r0;
    }

    public boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $z0 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory)>(r1, $r2);

        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper configure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory configure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature,boolean)>(r1, z0);

        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r1[i1];

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r1[i1];

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $z0 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory)>(r1, $r2);

        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper configure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory configure(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature,boolean)>(r1, z0);

        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r1[i1];

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory enable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r1[i1];

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory disable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $z0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory$Feature)>(r1);

        return $z0;
    }

    public boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadFeature;

        $r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamReadFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$Feature)>($r2);

        return $z0;
    }

    public boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamWriteFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamWriteFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamWriteFeature;

        $r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.StreamWriteFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r2);

        return $z0;
    }

    public java.lang.Object readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, java.lang.Class) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: java.lang.Class;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", r1);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r3, r1, $r5);

        return $r6;
    }

    public java.lang.Object readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", r1);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r2);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r3, r1, $r5);

        return $r6;
    }

    public final java.lang.Object readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.ResolvedType) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.ResolvedType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.ResolvedType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", r1);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) r2;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r3, r1, $r4);

        return $r5;
    }

    public java.lang.Object readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", r1);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r3, r1, r2);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode readTree(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        java.lang.Object $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r7, r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", r1);

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        if r7 != null goto label1;

        r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if r8 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonNode;");

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, r1, $r4);

        r9 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r5;

        if r9 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        r9 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

     label2:
        return r9;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.ResolvedType) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.ResolvedType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.ResolvedType;

        $r3 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) r2;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", r1);

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>(r1, r3);

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r4, r2);

        $r6 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,boolean,java.lang.Object)>(r2, r1, r4, r5, 0, null);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, java.lang.Class) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r2);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode readTree(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.InputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.InputStream;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("in", r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode readTree(java.io.Reader) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.Reader r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.Reader;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("r", r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode readTree(java.lang.String) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException $r5;
        java.io.IOException $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        throw $r5;

     label4:
        $r6 := @caughtexception;

        $r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>($r6);

        throw $r7;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode readTree(byte[]) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        byte[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: byte[];

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[])>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode readTree(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        byte[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(r1, i0, i1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode readTree(java.io.File) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.File r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.File;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("file", r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode readTree(java.net.URL) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.net.URL r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.net.URL;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("source", r1);

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r3);

        return $r4;
    }

    public void writeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r4, $r6, $r10;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r7, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("g", r1);

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT>;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r4);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter()>();

        if $r7 != null goto label1;

        $r8 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter constructDefaultPrettyPrinter()>();

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)>($r8);

     label1:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>;

        $z3 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r10);

        if $z3 == 0 goto label2;

        $z2 = r2 instanceof java.io.Closeable;

        if $z2 == 0 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>(r1, r2, r3);

        goto label3;

     label2:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>(r3);

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(r1, r2);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>;

        $z1 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r6);

        if $z1 == 0 goto label3;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void flush()>();

     label3:
        return;
    }

    public void writeTree(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r5;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("g", r1);

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>(r3);

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(r1, r2);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r5);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void flush()>();

     label1:
        return;
    }

    public void writeTree(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r5;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("g", r1);

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>(r3);

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(r1, r2);

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r5);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void flush()>();

     label1:
        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode createObjectNode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode createArrayNode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode missingNode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode missingNode()>();

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode nullNode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser treeAsTokens(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("n", r1);

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r3 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) r1;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>($r3, r0);

        return $r2;
    }

    public java.lang.Object treeToValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode, java.lang.Class) throws java.lang.IllegalArgumentException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode r1;
        java.lang.Class r2, $r4, $r8;
        java.lang.Object r3, $r15;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r5, r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.POJONode $r6;
        java.io.IOException $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.String $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode;

        r2 := @parameter1: java.lang.Class;

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/TreeNode;";

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z0 == 0 goto label3;

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z3 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r8);

        if $z3 == 0 goto label3;

     label2:
        return r1;

     label3:
        r13 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken asToken()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        if r13 != $r5 goto label5;

        $z1 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.POJONode;

        if $z1 == 0 goto label5;

        $r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.POJONode) r1;

        r3 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.POJONode: java.lang.Object getPojo()>();

        if r3 == null goto label4;

        $z2 = virtualinvoke r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3);

        if $z2 == 0 goto label5;

     label4:
        return r3;

     label5:
        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser treeAsTokens(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode)>(r1);

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.Class)>($r14, r2);

     label6:
        return $r15;

     label7:
        $r12 := @caughtexception;

        throw $r12;

     label8:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r9.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r9);

        throw $r10;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException from label1 to label2 with label7;
        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException from label3 to label4 with label7;
        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException from label5 to label6 with label7;
        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label5 to label6 with label8;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode valueToTree(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer $r3, r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r4;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode $r7;
        java.io.IOException $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        return $r7;

     label1:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,boolean)>(r0, 0);

        r11 = $r3;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r4);

        if $z0 == 0 goto label2;

        r11 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean)>(1);

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void writeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(r11, r1);

        r12 = virtualinvoke r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParser()>();

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode readTree(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r12);

        r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r5;

        virtualinvoke r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r8.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r8);

        throw $r9;

     label5:
        return r2;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public boolean canSerialize(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r2);

        $z0 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: boolean hasSerializerFor(java.lang.Class,java.util.concurrent.atomic.AtomicReference)>(r1, null);

        return $z0;
    }

    public boolean canSerialize(java.lang.Class, java.util.concurrent.atomic.AtomicReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        java.util.concurrent.atomic.AtomicReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicReference;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r3);

        $z0 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: boolean hasSerializerFor(java.lang.Class,java.util.concurrent.atomic.AtomicReference)>(r1, r2);

        return $z0;
    }

    public boolean canDeserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>(null, $r2);

        $z0 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: boolean hasValueDeserializerFor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference)>(r1, null);

        return $z0;
    }

    public boolean canDeserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.util.concurrent.atomic.AtomicReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        java.util.concurrent.atomic.AtomicReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext $r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicReference;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>(null, $r3);

        $z0 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: boolean hasValueDeserializerFor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference)>(r1, r2);

        return $z0;
    }

    public java.lang.Object readValue(java.io.File, java.lang.Class) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.File r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.Class;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.File, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.File r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.File, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.File r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(r1);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, r2);

        return $r5;
    }

    public java.lang.Object readValue(java.net.URL, java.lang.Class) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.net.URL r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.net.URL;

        r2 := @parameter1: java.lang.Class;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.net.URL, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.net.URL r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.net.URL;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.net.URL, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.net.URL r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.net.URL;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(r1);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, r2);

        return $r5;
    }

    public java.lang.Object readValue(java.lang.String, java.lang.Class) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.String r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r4);

        return $r5;
    }

    public java.lang.Object readValue(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r2);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r4);

        return $r5;
    }

    public java.lang.Object readValue(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        java.lang.Object $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException $r6;
        java.io.IOException $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", r1);

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.lang.String)>(r1);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, r2);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r7 := @caughtexception;

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>($r7);

        throw $r8;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public java.lang.Object readValue(java.io.Reader, java.lang.Class) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.Reader r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.Class;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.Reader, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.Reader r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.Reader, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.Reader r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(r1);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, r2);

        return $r5;
    }

    public java.lang.Object readValue(java.io.InputStream, java.lang.Class) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.InputStream r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.Class;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.InputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.InputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.InputStream, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.InputStream r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(r1);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, r2);

        return $r5;
    }

    public java.lang.Object readValue(byte[], java.lang.Class) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        byte[] r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.Class;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[])>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(byte[], int, int, java.lang.Class) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        byte[] r1;
        int i0, i1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Class;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(r1, i0, i1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(byte[], org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        byte[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: byte[];

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[])>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(byte[], int, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        byte[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(r1, i0, i1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(byte[], org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        byte[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: byte[];

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[])>(r1);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, r2);

        return $r5;
    }

    public java.lang.Object readValue(byte[], int, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        byte[] r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(r1, i0, i1);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, r2);

        return $r5;
    }

    public java.lang.Object readValue(java.io.DataInput, java.lang.Class) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.DataInput r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        java.lang.Object $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.DataInput;

        r2 := @parameter1: java.lang.Class;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.DataInput, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.DataInput r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.DataInput;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput)>(r1);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4, r2);

        return $r5;
    }

    public void writeValue(java.io.File, java.lang.Object) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.File r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.Object;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>(r1, $r3);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>($r4, r2);

        return;
    }

    public void writeValue(java.io.OutputStream, java.lang.Object) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.OutputStream r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.Object;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>(r1, $r3);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>($r4, r2);

        return;
    }

    public void writeValue(java.io.DataOutput, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.DataOutput r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.DataOutput;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>($r3, r2);

        return;
    }

    public void writeValue(java.io.Writer, java.lang.Object) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.io.Writer r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>($r3, r2);

        return;
    }

    public java.lang.String writeValueAsString(java.lang.Object) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r6;
        java.lang.String $r7;
        java.io.IOException $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()>();

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler)>($r5);

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer)>($r3);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>($r6, r1);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        throw $r10;

     label4:
        $r8 := @caughtexception;

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>($r8);

        throw $r9;

     label5:
        $r7 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SegmentedStringWriter: java.lang.String getAndClear()>();

        return $r7;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public byte[] writeValueAsBytes(java.lang.Object) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r7;
        java.io.IOException $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException $r10;
        byte[] r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()>();

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler)>($r5);

     label1:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding UTF8>;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonEncoding)>($r3, $r6);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>($r7, r1);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        throw $r10;

     label4:
        $r8 := @caughtexception;

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>($r8);

        throw $r9;

     label5:
        r13 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.ByteArrayBuilder: void release()>();

        return r13;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r3);

        return $r4;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[];

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature[])>(r1, r2);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writer(java.text.DateFormat)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.text.DateFormat r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.text.DateFormat;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig 'with'(java.text.DateFormat)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writerWithView(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig withView(java.lang.Class)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writerFor(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        if r1 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

     label2:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)>($r2, $r6, null);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writerFor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        if r1 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r1);

     label2:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)>($r2, $r6, null);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writerFor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)>($r2, r1, null);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r3 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter;

        if r3 != null goto label1;

        r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter NULL_PRETTY_PRINTER>;

     label1:
        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)>($r1, null, r3);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writerWithDefaultPrettyPrinter()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter getDefaultPrettyPrinter()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)>(r1, null, $r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig withFilters(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _verifySchemaType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema)>(r1);

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema)>($r2, r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) $r3;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes)>(r1);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writerWithType(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        if r1 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

     label2:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)>($r2, $r6, null);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writerWithType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        if r1 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r1);

     label2:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)>($r2, $r6, null);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter writerWithType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectWriter _newWriter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter)>($r2, r1, null);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader reader()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>($r1);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader reader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>($r3);

        return $r4;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader reader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[];

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature[])>(r1, r2);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader readerForUpdating(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        java.lang.Class $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>($r4);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r5, r2, r1, null, $r6);

        return $r7;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader readerFor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r2, r1, null, null, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader readerFor(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r2, $r4, null, null, $r5);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader readerFor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r2, $r4, null, null, $r5);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader readerForArrayOf(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType constructArrayType(java.lang.Class)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r2, $r4, null, null, $r5);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader readerForListOf(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class)>(class "Ljava/util/List;", r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r2, $r4, null, null, $r5);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader readerForMapOf(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class)>(class "Ljava/util/Map;", class "Ljava/lang/String;", r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r2, $r4, null, null, $r5);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader reader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory)>(r1);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader reader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _verifySchemaType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema)>(r1);

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r2, null, null, r1, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader reader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r2, null, null, null, r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader readerWithView(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig withView(java.lang.Class)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader reader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig) $r3;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader reader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader reader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r2, r1, null, null, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader reader(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r2, $r4, null, null, $r5);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader reader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r1);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader _newReader(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>($r2, $r4, null, null, $r5);

        return $r6;
    }

    public java.lang.Object convertValue(java.lang.Object, java.lang.Class) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Object r1, $r5;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _convert(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r4);

        return $r5;
    }

    public java.lang.Object convertValue(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Object r1, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r2);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _convert(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r4);

        return $r5;
    }

    public java.lang.Object convertValue(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Object r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _convert(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2);

        return $r3;
    }

    protected java.lang.Object _convert(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Object r1, r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r5, $r12, $r13, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r6, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer $r7, r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r8;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r9, r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r11;
        java.io.IOException $r16;
        java.lang.IllegalArgumentException $r17;
        java.lang.String $r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext r21, r23;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,boolean)>(r0, 0);

        r19 = $r7;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r8);

        if $z0 == 0 goto label1;

        r19 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean)>(1);

     label1:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;

        r20 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r10);

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>(r20);

        virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(r19, r1);

        r3 = virtualinvoke r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParser()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _initForReading(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r3, r2);

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if r5 != $r12 goto label2;

        r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>(r3, r4);

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r21, r2);

        r22 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r21);

        goto label5;

     label2:
        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if r5 == $r13 goto label3;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if r5 != $r14 goto label4;

     label3:
        r22 = null;

        goto label5;

     label4:
        r23 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>(r3, r4);

        r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r23, r2);

        r22 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r3, r23);

     label5:
        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label6:
        return r22;

     label7:
        $r16 := @caughtexception;

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r16.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r16);

        throw $r17;

        catch java.io.IOException from label1 to label6 with label7;
    }

    public java.lang.Object updateValue(java.lang.Object, java.lang.Object) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Object r1, r2, r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer $r4, r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r5;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r6, r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader $r9;
        java.io.IOException $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r11, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r13 = r1;

        if r1 == null goto label5;

        if r2 == null goto label5;

        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,boolean)>(r0, 0);

        r14 = $r4;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r5);

        if $z0 == 0 goto label1;

        r14 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean)>(1);

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;

        r15 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r7);

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>(r15);

        virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(r14, r2);

        r3 = virtualinvoke r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParser()>();

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader readerForUpdating(java.lang.Object)>(r1);

        r13 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectReader: java.lang.Object readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r3);

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        $z1 = $r10 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException;

        if $z1 == 0 goto label4;

        $r12 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException) $r10;

        throw $r12;

     label4:
        $r11 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>($r10);

        throw $r11;

     label5:
        return r13;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.JsonSchema $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class)>(r1);

        return $r4;
    }

    public void acceptJsonFormatVisitor(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)>($r4, r2);

        return;
    }

    public void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("type must be provided");

        throw $r5;

     label1:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>($r3);

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)>(r1, r2);

        return;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _constructDefaultTypeResolverBuilder(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r1, r2);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory)>(r1, $r2);

        return $r4;
    }

    protected final void _writeValueAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r5;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r6;
        java.lang.Exception $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Object;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r5);

        if $z0 == 0 goto label1;

        $z1 = r2 instanceof java.io.Closeable;

        if $z1 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>(r1, r2, r3);

        return;

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>(r3);

        virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: void closeOnFailAndThrowAsIOE(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(r1, $r7);

        return;

     label4:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void close()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private final void _writeCloseable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r4;
        java.lang.Exception $r5;
        java.io.Closeable r6, r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r6 = (java.io.Closeable) r2;

     label1:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>(r3);

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(r1, r2);

        r7 = r6;

        r6 = null;

        interfaceinvoke r7.<java.io.Closeable: void close()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: void closeOnFailAndThrowAsIOE(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception)>(r1, r6, $r5);

        return;

     label4:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void close()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private final void _writeCloseableValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r3;
        java.io.Closeable r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r7;
        boolean $z0;
        java.lang.Exception $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r4 = (java.io.Closeable) r2;

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig)>(r3);

        virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(r1, r2);

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r7);

        if $z0 == 0 goto label2;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void flush()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: void closeOnFailAndThrowAsIOE(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception)>(null, r4, $r8);

        return;

     label4:
        interfaceinvoke r4.<java.io.Closeable: void close()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected final void _configAndWriteValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: void initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(r1, r2);

        return;
    }

    protected java.lang.Object _readValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r4, $r6, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r9, $r10;
        java.lang.Object r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r12;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _initForReading(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, r3);

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>(r2, r1);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if r4 != $r6 goto label1;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r5, r3);

        r11 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r5);

        goto label4;

     label1:
        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if r4 == $r7 goto label2;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if r4 != $r8 goto label3;

     label2:
        r11 = null;

        goto label4;

     label3:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r5, r3);

        r11 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.lang.Object readRootValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object)>(r2, r3, $r9, null);

     label4:
        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_TRAILING_TOKENS>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r12);

        if $z0 == 0 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _verifyNoTrailingTokens(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, r5, r3);

     label5:
        return r11;
    }

    protected java.lang.Object _readMapAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r6, $r11, $r12, $r13;
        java.lang.Object r7, r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r14, $r15;
        java.lang.Throwable $r17, $r18, $r19, r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r22;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r20 = null;

     label01:
        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>(r1, r4);

        r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _initForReading(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2);

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if r6 != $r11 goto label02;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r5, r2);

        r21 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r5);

        goto label05;

     label02:
        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if r6 == $r12 goto label03;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if r6 != $r13 goto label04;

     label03:
        r21 = null;

        goto label05;

     label04:
        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r5, r2);

        r21 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.lang.Object readRootValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object)>(r1, r2, $r14, null);

        virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void checkUnresolvedObjectId()>();

     label05:
        $r22 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_TRAILING_TOKENS>;

        $z0 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r22);

        if $z0 == 0 goto label06;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _verifyNoTrailingTokens(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r5, r2);

     label06:
        r7 = r21;

     label07:
        if r1 == null goto label09;

        goto label08;

     label08:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label09:
        return r7;

     label10:
        $r18 := @caughtexception;

        r20 = $r18;

        throw $r18;

     label11:
        $r19 := @caughtexception;

     label12:
        if r1 == null goto label17;

        if r20 == null goto label16;

     label13:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label14:
        goto label17;

     label15:
        $r17 := @caughtexception;

        virtualinvoke r20.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r17);

        goto label17;

     label16:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label17:
        throw $r19;

        catch java.lang.Throwable from label01 to label07 with label10;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label10 to label12 with label11;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r4, r23, r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r9, r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r10;
        java.lang.Object $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r12;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory $r13, $r14;
        java.lang.Throwable $r16, $r17, $r18, r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext r25;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r20 = null;

     label01:
        r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonNode;");

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

        r22 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        if r22 != null goto label05;

        r22 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if r22 != null goto label05;

        $r14 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        r23 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode missingNode()>();

     label02:
        if r1 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label04:
        return r23;

     label05:
        r25 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)>(r1, r3);

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if r22 != $r9 goto label06;

        $r13 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();

        r26 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NullNode nullNode()>();

        goto label07;

     label06:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r25, r21);

        $r11 = virtualinvoke r25.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.lang.Object readRootValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object)>(r1, r21, $r10, null);

        r26 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode) $r11;

     label07:
        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_TRAILING_TOKENS>;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r12);

        if $z0 == 0 goto label08;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: void _verifyNoTrailingTokens(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r25, r21);

     label08:
        r4 = r26;

     label09:
        if r1 == null goto label11;

        goto label10;

     label10:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label11:
        return r4;

     label12:
        $r17 := @caughtexception;

        r20 = $r17;

        throw $r17;

     label13:
        $r18 := @caughtexception;

     label14:
        if r1 == null goto label19;

        if r20 == null goto label18;

     label15:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label16:
        goto label19;

     label17:
        $r16 := @caughtexception;

        virtualinvoke r20.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r16);

        goto label19;

     label18:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

     label19:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label05 to label09 with label12;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label12 to label14 with label13;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues _injectableValues>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.InjectableValues)>(r2, r1, $r3);

        return $r5;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _initForReading(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.MismatchedInputException $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser initialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r1);

        r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        if r6 != null goto label1;

        r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if r6 != null goto label1;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.MismatchedInputException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r1, r2, "No content to map due to end-of-input");

        throw $r5;

     label1:
        return r6;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _initForReading(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _initForReading(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, null);

        return $r2;
    }

    protected final void _verifyNoTrailingTokens(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r4;
        java.lang.Class r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if r4 == null goto label1;

        r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class rawClass(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r3);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportTrailingTokens(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r5, r1, r4);

     label1:
        return;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        java.util.concurrent.ConcurrentHashMap $r3, $r5;
        java.lang.Object $r4, $r11;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r12, r13, r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r2);

        r13 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) $r4;

        if r13 == null goto label1;

        return r13;

     label1:
        r14 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

        if r14 != null goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find a deserializer for type ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r2, $r10);

        $r12 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) $r11;

        return $r12;

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;

        virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r14);

        return r14;
    }

    protected void _verifySchemaType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory $r2, $r10;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r12;
        java.lang.Class $r6;
        java.lang.String $r7, $r11, $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema;

        if r1 == null goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $z0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: boolean canUseSchema(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.FormatSchema)>(r1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot use FormatSchema of type ");

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for format ");

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory _jsonFactory>;

        $r11 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory: java.lang.String getFormatName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r3;

     label1:
        return;
    }

    protected final void _assertNotNull(java.lang.String, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        java.lang.String r1, $r5;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r1;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("argument \"%s\" is null", $r4);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        return;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode createArrayNode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode createArrayNode()>();

        return $r1;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode createObjectNode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode createObjectNode()>();

        return $r1;
    }

    public volatile java.util.Iterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.ResolvedType) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.ResolvedType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.ResolvedType;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.ResolvedType)>(r1, r2);

        return $r3;
    }

    public volatile java.util.Iterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)>(r1, r2);

        return $r3;
    }

    public volatile java.util.Iterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, java.lang.Class) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MappingIterator readValues(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.Class)>(r1, r2);

        return $r3;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode nullNode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode nullNode()>();

        return $r1;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.TreeNode missingNode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode missingNode()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector $r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat $r4;
        java.util.Locale $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator $r8;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: long serialVersionUID> = 2L;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR> = $r0;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR>;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.StdDateFormat instance>;

        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variants: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant getDefaultVariant()>();

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator instance>;

        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider;

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider: void <init>()>();

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder,java.text.DateFormat,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator,java.util.Locale,java.util.TimeZone,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider)>(null, $r2, null, $r3, null, $r4, null, $r5, null, $r6, $r8, $r7);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE> = $r1;

        return;
    }
}
