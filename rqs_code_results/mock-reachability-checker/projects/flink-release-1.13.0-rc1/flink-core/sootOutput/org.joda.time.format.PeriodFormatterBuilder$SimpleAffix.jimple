class org.joda.time.format.PeriodFormatterBuilder$SimpleAffix extends org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix
{
    private final java.lang.String iText;

    void <init>(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder$SimpleAffix r0;
        java.lang.String r1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$SimpleAffix;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: java.lang.String iText> = r1;

        return;
    }

    public int calculatePrintedLength(int)
    {
        org.joda.time.format.PeriodFormatterBuilder$SimpleAffix r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$SimpleAffix;

        i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: java.lang.String iText>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i1;
    }

    public void printTo(java.lang.StringBuffer, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$SimpleAffix r0;
        java.lang.StringBuffer r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$SimpleAffix;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: java.lang.String iText>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        return;
    }

    public void printTo(java.io.Writer, int) throws java.io.IOException
    {
        org.joda.time.format.PeriodFormatterBuilder$SimpleAffix r0;
        java.io.Writer r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$SimpleAffix;

        r1 := @parameter0: java.io.Writer;

        i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: java.lang.String iText>;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return;
    }

    public int parse(java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$SimpleAffix r0;
        java.lang.String r1, r2;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$SimpleAffix;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: java.lang.String iText>;

        i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i0, r2, 0, i1);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: boolean matchesOtherAffix(int,java.lang.String,int)>(i1, r1, i0);

        if $z1 != 0 goto label1;

        $i3 = i0 + i1;

        return $i3;

     label1:
        $i2 = i0 ^ -1;

        return $i2;
    }

    public int scan(java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$SimpleAffix r0;
        java.lang.String r1, r2;
        int i0, i1, i2, $i3, i5;
        boolean $z0, $z1;
        char $c4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$SimpleAffix;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: java.lang.String iText>;

        i1 = virtualinvoke r2.<java.lang.String: int length()>();

        i2 = virtualinvoke r1.<java.lang.String: int length()>();

        i5 = i0;

     label1:
        if i5 >= i2 goto label6;

        $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i5, r2, 0, i1);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: boolean matchesOtherAffix(int,java.lang.String,int)>(i1, r1, i5);

        if $z1 != 0 goto label2;

        return i5;

     label2:
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        tableswitch($c4)
        {
            case 43: goto label3;
            case 44: goto label3;
            case 45: goto label3;
            case 46: goto label3;
            case 47: goto label4;
            case 48: goto label3;
            case 49: goto label3;
            case 50: goto label3;
            case 51: goto label3;
            case 52: goto label3;
            case 53: goto label3;
            case 54: goto label3;
            case 55: goto label3;
            case 56: goto label3;
            case 57: goto label3;
            default: goto label4;
        };

     label3:
        goto label5;

     label4:
        goto label6;

     label5:
        i5 = i5 + 1;

        goto label1;

     label6:
        $i3 = i0 ^ -1;

        return $i3;
    }

    public java.lang.String[] getAffixes()
    {
        org.joda.time.format.PeriodFormatterBuilder$SimpleAffix r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$SimpleAffix;

        $r1 = newarray (java.lang.String)[1];

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: java.lang.String iText>;

        $r1[0] = $r2;

        return $r1;
    }
}
