public abstract class jdk.internal.util.xml.SAXParser extends java.lang.Object
{

    protected void <init>()
    {
        jdk.internal.util.xml.SAXParser r0;

        r0 := @this: jdk.internal.util.xml.SAXParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void parse(java.io.InputStream, jdk.internal.org.xml.sax.helpers.DefaultHandler) throws jdk.internal.org.xml.sax.SAXException, java.io.IOException
    {
        jdk.internal.util.xml.SAXParser r0;
        java.io.InputStream r1;
        jdk.internal.org.xml.sax.helpers.DefaultHandler r2;
        jdk.internal.org.xml.sax.InputSource $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: jdk.internal.util.xml.SAXParser;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: jdk.internal.org.xml.sax.helpers.DefaultHandler;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("InputStream cannot be null");

        throw $r5;

     label1:
        $r4 = new jdk.internal.org.xml.sax.InputSource;

        specialinvoke $r4.<jdk.internal.org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r1);

        virtualinvoke r0.<jdk.internal.util.xml.SAXParser: void parse(jdk.internal.org.xml.sax.InputSource,jdk.internal.org.xml.sax.helpers.DefaultHandler)>($r4, r2);

        return;
    }

    public void parse(java.lang.String, jdk.internal.org.xml.sax.helpers.DefaultHandler) throws jdk.internal.org.xml.sax.SAXException, java.io.IOException
    {
        jdk.internal.util.xml.SAXParser r0;
        java.lang.String r1;
        jdk.internal.org.xml.sax.helpers.DefaultHandler r2;
        jdk.internal.org.xml.sax.InputSource $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: jdk.internal.util.xml.SAXParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: jdk.internal.org.xml.sax.helpers.DefaultHandler;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("uri cannot be null");

        throw $r5;

     label1:
        $r4 = new jdk.internal.org.xml.sax.InputSource;

        specialinvoke $r4.<jdk.internal.org.xml.sax.InputSource: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<jdk.internal.util.xml.SAXParser: void parse(jdk.internal.org.xml.sax.InputSource,jdk.internal.org.xml.sax.helpers.DefaultHandler)>($r4, r2);

        return;
    }

    public void parse(java.io.File, jdk.internal.org.xml.sax.helpers.DefaultHandler) throws jdk.internal.org.xml.sax.SAXException, java.io.IOException
    {
        jdk.internal.util.xml.SAXParser r0;
        java.io.File r1;
        jdk.internal.org.xml.sax.helpers.DefaultHandler r2;
        jdk.internal.org.xml.sax.InputSource $r4;
        java.net.URI $r5;
        java.lang.String $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: jdk.internal.util.xml.SAXParser;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: jdk.internal.org.xml.sax.helpers.DefaultHandler;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File cannot be null");

        throw $r7;

     label1:
        $r4 = new jdk.internal.org.xml.sax.InputSource;

        $r5 = virtualinvoke r1.<java.io.File: java.net.URI toURI()>();

        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String toASCIIString()>();

        specialinvoke $r4.<jdk.internal.org.xml.sax.InputSource: void <init>(java.lang.String)>($r6);

        virtualinvoke r0.<jdk.internal.util.xml.SAXParser: void parse(jdk.internal.org.xml.sax.InputSource,jdk.internal.org.xml.sax.helpers.DefaultHandler)>($r4, r2);

        return;
    }

    public void parse(jdk.internal.org.xml.sax.InputSource, jdk.internal.org.xml.sax.helpers.DefaultHandler) throws jdk.internal.org.xml.sax.SAXException, java.io.IOException
    {
        jdk.internal.util.xml.SAXParser r0;
        jdk.internal.org.xml.sax.InputSource r1;
        jdk.internal.org.xml.sax.helpers.DefaultHandler r2;
        jdk.internal.org.xml.sax.XMLReader r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: jdk.internal.util.xml.SAXParser;

        r1 := @parameter0: jdk.internal.org.xml.sax.InputSource;

        r2 := @parameter1: jdk.internal.org.xml.sax.helpers.DefaultHandler;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("InputSource cannot be null");

        throw $r4;

     label1:
        r3 = virtualinvoke r0.<jdk.internal.util.xml.SAXParser: jdk.internal.org.xml.sax.XMLReader getXMLReader()>();

        if r2 == null goto label2;

        interfaceinvoke r3.<jdk.internal.org.xml.sax.XMLReader: void setContentHandler(jdk.internal.org.xml.sax.ContentHandler)>(r2);

        interfaceinvoke r3.<jdk.internal.org.xml.sax.XMLReader: void setEntityResolver(jdk.internal.org.xml.sax.EntityResolver)>(r2);

        interfaceinvoke r3.<jdk.internal.org.xml.sax.XMLReader: void setErrorHandler(jdk.internal.org.xml.sax.ErrorHandler)>(r2);

        interfaceinvoke r3.<jdk.internal.org.xml.sax.XMLReader: void setDTDHandler(jdk.internal.org.xml.sax.DTDHandler)>(r2);

     label2:
        interfaceinvoke r3.<jdk.internal.org.xml.sax.XMLReader: void parse(jdk.internal.org.xml.sax.InputSource)>(r1);

        return;
    }

    public abstract jdk.internal.org.xml.sax.XMLReader getXMLReader() throws jdk.internal.org.xml.sax.SAXException;

    public abstract boolean isNamespaceAware();

    public abstract boolean isValidating();

    public boolean isXIncludeAware()
    {
        jdk.internal.util.xml.SAXParser r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r12, $r13;
        java.lang.Class $r4, $r9;
        java.lang.Package $r5, $r10;
        java.lang.String $r6, $r11, $r14;

        r0 := @this: jdk.internal.util.xml.SAXParser;

        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r1;
    }
}
