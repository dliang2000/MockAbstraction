public class org.mockito.internal.exceptions.stacktrace.StackTraceFilter extends java.lang.Object implements java.io.Serializable
{
    static final long serialVersionUID;
    private static final org.mockito.exceptions.stacktrace.StackTraceCleaner CLEANER;

    public void <init>()
    {
        org.mockito.internal.exceptions.stacktrace.StackTraceFilter r0;

        r0 := @this: org.mockito.internal.exceptions.stacktrace.StackTraceFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.StackTraceElement[] filter(java.lang.StackTraceElement[], boolean)
    {
        org.mockito.internal.exceptions.stacktrace.StackTraceFilter r0;
        java.lang.StackTraceElement[] r1, $r6, r9;
        boolean z0, $z1;
        int i0, $i1, i2;
        java.lang.StackTraceElement r3;
        java.util.ArrayList $r4;
        java.lang.Object[] $r5;
        org.mockito.exceptions.stacktrace.StackTraceCleaner $r7;

        r0 := @this: org.mockito.internal.exceptions.stacktrace.StackTraceFilter;

        r1 := @parameter0: java.lang.StackTraceElement[];

        z0 := @parameter1: boolean;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r3 = r1[i2];

        $r7 = <org.mockito.internal.exceptions.stacktrace.StackTraceFilter: org.mockito.exceptions.stacktrace.StackTraceCleaner CLEANER>;

        $z1 = interfaceinvoke $r7.<org.mockito.exceptions.stacktrace.StackTraceCleaner: boolean isIn(java.lang.StackTraceElement)>(r3);

        if $z1 == 0 goto label2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        r9 = newarray (java.lang.StackTraceElement)[$i1];

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r9);

        $r6 = (java.lang.StackTraceElement[]) $r5;

        return $r6;
    }

    static void <clinit>()
    {
        org.mockito.plugins.StackTraceCleanerProvider $r0;
        org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner $r1;
        org.mockito.exceptions.stacktrace.StackTraceCleaner $r2;

        <org.mockito.internal.exceptions.stacktrace.StackTraceFilter: long serialVersionUID> = -5499819791513105700L;

        $r0 = staticinvoke <org.mockito.internal.configuration.plugins.Plugins: org.mockito.plugins.StackTraceCleanerProvider getStackTraceCleanerProvider()>();

        $r1 = new org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner;

        specialinvoke $r1.<org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner: void <init>()>();

        $r2 = interfaceinvoke $r0.<org.mockito.plugins.StackTraceCleanerProvider: org.mockito.exceptions.stacktrace.StackTraceCleaner getStackTraceCleaner(org.mockito.exceptions.stacktrace.StackTraceCleaner)>($r1);

        <org.mockito.internal.exceptions.stacktrace.StackTraceFilter: org.mockito.exceptions.stacktrace.StackTraceCleaner CLEANER> = $r2;

        return;
    }
}
