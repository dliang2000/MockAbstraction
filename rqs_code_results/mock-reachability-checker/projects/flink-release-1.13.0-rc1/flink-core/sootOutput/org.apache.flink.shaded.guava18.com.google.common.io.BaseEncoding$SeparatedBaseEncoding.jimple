final class org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding extends org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding
{
    private final org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate;
    private final java.lang.String separator;
    private final int afterEveryChars;
    private final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher separatorChars;

    void <init>(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding, java.lang.String, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding r1, $r4;
        java.lang.String r2, $r6;
        int i0;
        java.lang.Object $r3, $r5;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r9, $r10;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding) $r3;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate> = $r4;

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (java.lang.String) $r5;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: java.lang.String separator> = $r6;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: int afterEveryChars> = i0;

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r8;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "Cannot add a separator after every %s chars", $r7);

        $r9 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher anyOf(java.lang.CharSequence)>(r2);

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher precomputed()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher separatorChars> = $r10;

        return;
    }

    org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher padding()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding $r1;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher padding()>();

        return $r2;
    }

    int maxEncodedSize(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding $r1;
        java.lang.String $r2;
        java.math.RoundingMode $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate>;

        i1 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: int maxEncodedSize(int)>(i0);

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: java.lang.String separator>;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = i1 - 1;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i5 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: int afterEveryChars>;

        $r3 = <java.math.RoundingMode: java.math.RoundingMode FLOOR>;

        $i6 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.math.IntMath: int divide(int,int,java.math.RoundingMode)>($i4, $i5, $r3);

        $i7 = $i2 * $i6;

        $i8 = i1 + $i7;

        return $i8;
    }

    org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$ByteOutput encodingStream(org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharOutput)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharOutput r1, $r4;
        int $i0;
        java.lang.String $r2;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding $r3;
        org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$ByteOutput $r5;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharOutput;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate>;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: java.lang.String separator>;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: int afterEveryChars>;

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharOutput separatingOutput(org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharOutput,java.lang.String,int)>(r1, $r2, $i0);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$ByteOutput encodingStream(org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharOutput)>($r4);

        return $r5;
    }

    int maxDecodedSize(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        int i0, $i1;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate>;

        $i1 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: int maxDecodedSize(int)>(i0);

        return $i1;
    }

    org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$ByteInput decodingStream(org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharInput)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharInput r1, $r4;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r2;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding $r3;
        org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$ByteInput $r5;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharInput;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate>;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher separatorChars>;

        $r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharInput ignoringInput(org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharInput,org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher)>(r1, $r2);

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$ByteInput decodingStream(org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharInput)>($r4);

        return $r5;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding omitPadding()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding $r1, $r2, $r4;
        int $i0;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding omitPadding()>();

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: java.lang.String separator>;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: int afterEveryChars>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding withSeparator(java.lang.String,int)>($r3, $i0);

        return $r4;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding withPadChar(char)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        char c0;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding $r1, $r2, $r4;
        int $i1;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding withPadChar(char)>(c0);

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: java.lang.String separator>;

        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: int afterEveryChars>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding withSeparator(java.lang.String,int)>($r3, $i1);

        return $r4;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding withSeparator(java.lang.String, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        java.lang.String r1;
        int i0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Already have a separator");

        throw $r2;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding upperCase()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding $r1, $r2, $r4;
        int $i0;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding upperCase()>();

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: java.lang.String separator>;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: int afterEveryChars>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding withSeparator(java.lang.String,int)>($r3, $i0);

        return $r4;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding lowerCase()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding $r1, $r2, $r4;
        int $i0;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding lowerCase()>();

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: java.lang.String separator>;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: int afterEveryChars>;

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding withSeparator(java.lang.String,int)>($r3, $i0);

        return $r4;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding r0;
        java.lang.String r1, r2, $r4, $r5, $r6, $r7, $r15;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding $r3;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding delegate>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r6 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: java.lang.String separator>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: int afterEveryChars>;

        $r8 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = 31 + $i1;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        $i4 = $i2 + $i3;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>($i4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".withSeparator(\"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }
}
