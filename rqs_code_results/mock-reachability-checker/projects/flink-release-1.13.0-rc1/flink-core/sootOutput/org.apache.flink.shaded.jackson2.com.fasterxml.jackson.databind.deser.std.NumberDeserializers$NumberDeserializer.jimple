public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{
    public static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer instance;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Number;");

        return;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Integer>;

        return $r1;
    }

    public java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction r3, $r9, $r10;
        int $i0, $i1, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature $r4, $r11, $r12, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Number $r5, $r7;
        java.math.BigDecimal $r6, $r17;
        java.lang.Object $r8, $r21, $r22, $r23, $r24, $r27, $r31;
        byte $b2, $b3;
        java.lang.Integer $r13;
        java.math.BigInteger $r14;
        java.lang.Double $r16, $r18, $r19, $r20;
        java.lang.Class $r25, $r30;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r26;
        java.lang.IllegalArgumentException $r28;
        java.lang.Object[] $r29;
        java.lang.String r32, r33;
        long l5;
        java.lang.Long $r34;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 1: goto label06;
            case 2: goto label08;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label08;
            case 6: goto label01;
            case 7: goto label02;
            case 8: goto label04;
            default: goto label08;
        };

     label01:
        r32 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        goto label09;

     label02:
        $i1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: int F_MASK_INT_COERCIONS>;

        $z2 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean hasSomeOfFeatures(int)>($i1);

        if $z2 == 0 goto label03;

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object _coerceIntegral(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r8;

     label03:
        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();

        return $r7;

     label04:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r4);

        if $z0 == 0 goto label05;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean isNaN()>();

        if $z1 != 0 goto label05;

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();

        return $r6;

     label05:
        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();

        return $r5;

     label06:
        $r25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Class _valueClass>;

        r32 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(r1, r0, $r25);

        goto label09;

     label07:
        $r24 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object _deserializeFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r24;

     label08:
        $r26 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r27 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r26, r1);

        return $r27;

     label09:
        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r2, r32);

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;

        if r3 != $r9 goto label10;

        $r23 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return $r23;

     label10:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;

        if r3 != $r10 goto label11;

        $r22 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return $r22;

     label11:
        r33 = virtualinvoke r32.<java.lang.String: java.lang.String trim()>();

        $z3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: boolean _hasTextualNull(java.lang.String)>(r33);

        if $z3 == 0 goto label12;

        $r21 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return $r21;

     label12:
        $z4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: boolean _isPosInf(java.lang.String)>(r33);

        if $z4 == 0 goto label13;

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#Infinity);

        return $r20;

     label13:
        $z5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: boolean _isNegInf(java.lang.String)>(r33);

        if $z5 == 0 goto label14;

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#-Infinity);

        return $r19;

     label14:
        $z6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: boolean _isNaN(java.lang.String)>(r33);

        if $z6 == 0 goto label15;

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);

        return $r18;

     label15:
        $z7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: boolean _isIntNumber(java.lang.String)>(r33);

        if $z7 != 0 goto label19;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;

        $z10 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r15);

        if $z10 == 0 goto label17;

        $r17 = new java.math.BigDecimal;

        specialinvoke $r17.<java.math.BigDecimal: void <init>(java.lang.String)>(r33);

     label16:
        return $r17;

     label17:
        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r33);

     label18:
        return $r16;

     label19:
        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS>;

        $z8 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r11);

        if $z8 == 0 goto label21;

        $r14 = new java.math.BigInteger;

        specialinvoke $r14.<java.math.BigInteger: void <init>(java.lang.String)>(r33);

     label20:
        return $r14;

     label21:
        l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r33);

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature USE_LONG_FOR_INTS>;

        $z9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationFeature)>($r12);

        if $z9 != 0 goto label23;

        $b2 = l5 cmp 2147483647L;

        if $b2 > 0 goto label23;

        $b3 = l5 cmp -2147483648L;

        if $b3 < 0 goto label23;

        $i4 = (int) l5;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

     label22:
        return $r13;

     label23:
        $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

     label24:
        return $r34;

     label25:
        $r28 := @caughtexception;

        $r30 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Class _valueClass>;

        $r29 = newarray (java.lang.Object)[0];

        $r31 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r30, r33, "not a valid number", $r29);

        return $r31;

        catch java.lang.IllegalArgumentException from label15 to label16 with label25;
        catch java.lang.IllegalArgumentException from label17 to label18 with label25;
        catch java.lang.IllegalArgumentException from label19 to label20 with label25;
        catch java.lang.IllegalArgumentException from label21 to label22 with label25;
        catch java.lang.IllegalArgumentException from label23 to label24 with label25;
    }

    public java.lang.Object deserializeWithType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r3;
        int $i0;
        java.lang.Object $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();

        tableswitch($i0)
        {
            case 6: goto label1;
            case 7: goto label1;
            case 8: goto label1;
            default: goto label2;
        };

     label1:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r4;

     label2:
        $r5 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromScalar(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r5;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer $r0;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer instance> = $r0;

        return;
    }
}
