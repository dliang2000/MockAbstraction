class javassist.CtField$CodeInitializer extends javassist.CtField$CodeInitializer0
{
    private java.lang.String expression;

    void <init>(java.lang.String)
    {
        javassist.CtField$CodeInitializer r0;
        java.lang.String r1;

        r0 := @this: javassist.CtField$CodeInitializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<javassist.CtField$CodeInitializer0: void <init>()>();

        r0.<javassist.CtField$CodeInitializer: java.lang.String expression> = r1;

        return;
    }

    void compileExpr(javassist.compiler.Javac) throws javassist.compiler.CompileError
    {
        javassist.CtField$CodeInitializer r0;
        javassist.compiler.Javac r1;
        java.lang.String $r2;

        r0 := @this: javassist.CtField$CodeInitializer;

        r1 := @parameter0: javassist.compiler.Javac;

        $r2 = r0.<javassist.CtField$CodeInitializer: java.lang.String expression>;

        virtualinvoke r1.<javassist.compiler.Javac: void compileExpr(java.lang.String)>($r2);

        return;
    }

    int getConstantValue(javassist.bytecode.ConstPool, javassist.CtClass)
    {
        javassist.CtField$CodeInitializer r0;
        javassist.bytecode.ConstPool r1;
        javassist.CtClass r2;
        javassist.compiler.SymbolTable $r3;
        java.lang.String $r4;
        int $i0;
        javassist.compiler.CompileError $r5;
        javassist.compiler.ast.ASTree r6;

        r0 := @this: javassist.CtField$CodeInitializer;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: javassist.CtClass;

     label1:
        $r4 = r0.<javassist.CtField$CodeInitializer: java.lang.String expression>;

        $r3 = new javassist.compiler.SymbolTable;

        specialinvoke $r3.<javassist.compiler.SymbolTable: void <init>()>();

        r6 = staticinvoke <javassist.compiler.Javac: javassist.compiler.ast.ASTree parseExpr(java.lang.String,javassist.compiler.SymbolTable)>($r4, $r3);

        $i0 = virtualinvoke r0.<javassist.CtField$CodeInitializer: int getConstantValue2(javassist.bytecode.ConstPool,javassist.CtClass,javassist.compiler.ast.ASTree)>(r1, r2, r6);

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch javassist.compiler.CompileError from label1 to label2 with label3;
    }
}
