public class org.joda.time.format.PeriodFormatterBuilder extends java.lang.Object
{
    private static final int PRINT_ZERO_RARELY_FIRST;
    private static final int PRINT_ZERO_RARELY_LAST;
    private static final int PRINT_ZERO_IF_SUPPORTED;
    private static final int PRINT_ZERO_ALWAYS;
    private static final int PRINT_ZERO_NEVER;
    private static final int YEARS;
    private static final int MONTHS;
    private static final int WEEKS;
    private static final int DAYS;
    private static final int HOURS;
    private static final int MINUTES;
    private static final int SECONDS;
    private static final int MILLIS;
    private static final int SECONDS_MILLIS;
    private static final int SECONDS_OPTIONAL_MILLIS;
    private static final int MAX_FIELD;
    private static final java.util.concurrent.ConcurrentMap PATTERNS;
    private int iMinPrintedDigits;
    private int iPrintZeroSetting;
    private int iMaxParsedDigits;
    private boolean iRejectSignedValues;
    private org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix;
    private java.util.List iElementPairs;
    private boolean iNotPrinter;
    private boolean iNotParser;
    private org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters;

    public void <init>()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clear()>();

        return;
    }

    public org.joda.time.format.PeriodFormatter toFormatter()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodFormatter r1;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] r2, $r5, $r7, $r8, $r9;
        int i0, i1;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter r3;
        boolean $z0, $z1;
        java.util.List $r4;
        java.lang.Object $r6;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $z1 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter>;

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser>;

        r1 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter(java.util.List,boolean,boolean)>($r4, $z1, $z0);

        r2 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        if r3 == null goto label2;

        $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        virtualinvoke r3.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[])>($r9);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]) $r6;

        $r8 = (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]) $r7;

        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r8;

        return r1;
    }

    public org.joda.time.format.PeriodPrinter toPrinter()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        boolean $z0;
        org.joda.time.format.PeriodFormatter $r1;
        org.joda.time.format.PeriodPrinter $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        $r2 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        return $r2;
    }

    public org.joda.time.format.PeriodParser toParser()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        boolean $z0;
        org.joda.time.format.PeriodFormatter $r1;
        org.joda.time.format.PeriodParser $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        $r2 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>();

        return $r2;
    }

    public void clear()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.util.List $r1, $r2;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r3;
        java.util.ArrayList $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits> = 1;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 2;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iMaxParsedDigits> = 10;

        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iRejectSignedValues> = 0;

        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs> = $r4;

        goto label2;

     label1:
        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

     label2:
        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> = 0;

        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser> = 0;

        $r3 = newarray (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter)[10];

        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters> = $r3;

        return;
    }

    public org.joda.time.format.PeriodFormatterBuilder append(org.joda.time.format.PeriodFormatter)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodFormatter r1;
        org.joda.time.format.PeriodPrinter $r2;
        org.joda.time.format.PeriodParser $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: org.joda.time.format.PeriodFormatter;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No formatter supplied");

        throw $r5;

     label1:
        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>();

        $r2 = virtualinvoke r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        $r3 = virtualinvoke r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r2, $r3);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder append(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodPrinter r1;
        org.joda.time.format.PeriodParser r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: org.joda.time.format.PeriodPrinter;

        r2 := @parameter1: org.joda.time.format.PeriodParser;

        if r1 != null goto label1;

        if r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No printer or parser supplied");

        throw $r4;

     label1:
        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(r1, r2);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendLiteral(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String r1;
        org.joda.time.format.PeriodFormatterBuilder$Literal $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Literal must not be null");

        throw $r5;

     label1:
        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>();

        $r3 = new org.joda.time.format.PeriodFormatterBuilder$Literal;

        specialinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$Literal: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r3, $r3);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        int i0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        i0 := @parameter0: int;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits> = i0;

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder maximumParsedDigits(int)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        int i0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        i0 := @parameter0: int;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iMaxParsedDigits> = i0;

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder rejectSignedValues(boolean)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        boolean z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        z0 := @parameter0: boolean;

        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iRejectSignedValues> = z0;

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder printZeroRarelyLast()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 2;

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder printZeroRarelyFirst()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 1;

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder printZeroIfSupported()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 3;

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder printZeroAlways()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 4;

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder printZeroNever()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting> = 5;

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0, $r3;
        java.lang.String r1;
        org.joda.time.format.PeriodFormatterBuilder$SimpleAffix $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r2 = new org.joda.time.format.PeriodFormatterBuilder$SimpleAffix;

        specialinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: void <init>(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r2);

        return $r3;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String, java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0, $r5;
        java.lang.String r1, r2;
        java.lang.IllegalArgumentException $r3;
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        $r4 = new org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        specialinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r4);

        return $r5;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String[], java.lang.String[])
    {
        org.joda.time.format.PeriodFormatterBuilder r0, $r4;
        java.lang.String[] r1, r2;
        int $i0, $i1, $i2;
        org.joda.time.format.PeriodFormatterBuilder$RegExAffix $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String[];

        if r1 == null goto label1;

        if r2 == null goto label1;

        $i0 = lengthof r1;

        if $i0 < 1 goto label1;

        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label2:
        $r3 = new org.joda.time.format.PeriodFormatterBuilder$RegExAffix;

        specialinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$RegExAffix: void <init>(java.lang.String[],java.lang.String[])>(r1, r2);

        $r4 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r3);

        return $r4;
    }

    private org.joda.time.format.PeriodFormatterBuilder appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r1, $r3, r5;
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r5 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        if r5 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r1 == null goto label2;

        $r2 = new org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        specialinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: void <init>(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r3, r5);

        r5 = $r2;

     label2:
        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = r5;

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendYears()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(0);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendMonths()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(1);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendWeeks()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(2);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendDays()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(3);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendHours()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(4);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendMinutes()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(5);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendSeconds()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(6);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendSecondsWithMillis()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(8);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendSecondsWithOptionalMillis()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(9);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendMillis()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int)>(7);

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendMillis3Digit()
    {
        org.joda.time.format.PeriodFormatterBuilder r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int,int)>(7, 3);

        return r0;
    }

    private void appendField(int)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        int i0, $i1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        i0 := @parameter0: int;

        $i1 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iMinPrintedDigits>;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void appendField(int,int)>(i0, $i1);

        return;
    }

    private void appendField(int, int)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        int i0, i1, $i2, $i3;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter $r2;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r3;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r4, $r6;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $i3 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iPrintZeroSetting>;

        $i2 = r0.<org.joda.time.format.PeriodFormatterBuilder: int iMaxParsedDigits>;

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iRejectSignedValues>;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        specialinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void <init>(int,int,int,boolean,int,org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[],org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>(i1, $i3, $i2, $z0, i0, $r4, $r3, null);

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r2, $r2);

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $r6[i0] = $r2;

        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null;

        return;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0, $r3;
        java.lang.String r1;
        org.joda.time.format.PeriodFormatterBuilder$SimpleAffix $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r2 = new org.joda.time.format.PeriodFormatterBuilder$SimpleAffix;

        specialinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: void <init>(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r2);

        return $r3;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String, java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0, $r5;
        java.lang.String r1, r2;
        java.lang.IllegalArgumentException $r3;
        org.joda.time.format.PeriodFormatterBuilder$PluralAffix $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        $r4 = new org.joda.time.format.PeriodFormatterBuilder$PluralAffix;

        specialinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PluralAffix: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r4);

        return $r5;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[], java.lang.String[])
    {
        org.joda.time.format.PeriodFormatterBuilder r0, $r4;
        java.lang.String[] r1, r2;
        int $i0, $i1, $i2;
        org.joda.time.format.PeriodFormatterBuilder$RegExAffix $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String[];

        if r1 == null goto label1;

        if r2 == null goto label1;

        $i0 = lengthof r1;

        if $i0 < 1 goto label1;

        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 == $i1 goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label2:
        $r3 = new org.joda.time.format.PeriodFormatterBuilder$RegExAffix;

        specialinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$RegExAffix: void <init>(java.lang.String[],java.lang.String[])>(r1, r2);

        $r4 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r3);

        return $r4;
    }

    private org.joda.time.format.PeriodFormatterBuilder appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix r1;
        java.util.List $r3, $r6, $r7, $r9, $r10, $r13, $r14, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter $r4, $r5;
        org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] $r12;
        java.lang.Object r17, r18;
        java.lang.IllegalStateException $r19;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r14 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $r13 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i6 = interfaceinvoke $r13.<java.util.List: int size()>();

        $i7 = $i6 - 2;

        r17 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>($i7);

        $r16 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $r15 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i8 = interfaceinvoke $r15.<java.util.List: int size()>();

        $i9 = $i8 - 1;

        r18 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i9);

        goto label2;

     label1:
        r17 = null;

        r18 = null;

     label2:
        if r17 == null goto label3;

        if r18 == null goto label3;

        if r17 != r18 goto label3;

        $z0 = r17 instanceof org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        if $z0 != 0 goto label4;

     label3:
        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No field to apply suffix to");

        throw $r19;

     label4:
        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>();

        $r4 = new org.joda.time.format.PeriodFormatterBuilder$FieldFormatter;

        $r5 = (org.joda.time.format.PeriodFormatterBuilder$FieldFormatter) r17;

        specialinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void <init>(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)>($r5, r1);

        $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i2 = $i1 - 2;

        interfaceinvoke $r7.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i2, $r4);

        $r10 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i3 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        interfaceinvoke $r10.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i4, $r4);

        $r12 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[] iFieldFormatters>;

        $i5 = virtualinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int getFieldType()>();

        $r12[$i5] = $r4;

        return r0;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0, $r2;
        java.lang.String r1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>(r1, r1, null, 1, 1);

        return $r2;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsAfter(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0, $r2;
        java.lang.String r1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>(r1, r1, null, 0, 1);

        return $r2;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsBefore(java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0, $r2;
        java.lang.String r1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>(r1, r1, null, 1, 0);

        return $r2;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String, java.lang.String)
    {
        org.joda.time.format.PeriodFormatterBuilder r0, $r3;
        java.lang.String r1, r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>(r1, r2, null, 1, 1);

        return $r3;
    }

    public org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String, java.lang.String, java.lang.String[])
    {
        org.joda.time.format.PeriodFormatterBuilder r0, $r4;
        java.lang.String r1, r2;
        java.lang.String[] r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r4 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>(r1, r2, r3, 1, 1);

        return $r4;
    }

    private org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String, java.lang.String, java.lang.String[], boolean, boolean)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        java.lang.String r1, r2;
        java.lang.String[] r3;
        boolean z0, z1, $z4;
        java.lang.Object[] r4;
        java.lang.IllegalArgumentException $r6;
        int $i0, $i1, $i2, $i3, i4, i5;
        org.joda.time.format.PeriodFormatterBuilder$Separator $r7, $r15, r21;
        java.lang.Object $r8, $r9, $r13, $r14;
        org.joda.time.format.PeriodParser $r10;
        org.joda.time.format.PeriodPrinter $r11;
        java.lang.IllegalStateException $r12;
        org.joda.time.format.PeriodFormatterBuilder$Literal $r16, $r17;
        java.util.List r19;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label2:
        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: void clearPrefix()>();

        r19 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        $i0 = interfaceinvoke r19.<java.util.List: int size()>();

        if $i0 != 0 goto label4;

        if z1 == 0 goto label3;

        if z0 != 0 goto label3;

        $r15 = new org.joda.time.format.PeriodFormatterBuilder$Separator;

        $r17 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY>;

        $r16 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY>;

        specialinvoke $r15.<org.joda.time.format.PeriodFormatterBuilder$Separator: void <init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)>(r1, r2, r3, $r17, $r16, z0, z1);

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r15, $r15);

     label3:
        return r0;

     label4:
        r21 = null;

        i4 = interfaceinvoke r19.<java.util.List: int size()>();

     label5:
        i5 = i4 + -1;

        if i5 < 0 goto label7;

        $r13 = interfaceinvoke r19.<java.util.List: java.lang.Object get(int)>(i5);

        $z4 = $r13 instanceof org.joda.time.format.PeriodFormatterBuilder$Separator;

        if $z4 == 0 goto label6;

        $r14 = interfaceinvoke r19.<java.util.List: java.lang.Object get(int)>(i5);

        r21 = (org.joda.time.format.PeriodFormatterBuilder$Separator) $r14;

        $i2 = i5 + 1;

        $i3 = interfaceinvoke r19.<java.util.List: int size()>();

        r19 = interfaceinvoke r19.<java.util.List: java.util.List subList(int,int)>($i2, $i3);

        goto label7;

     label6:
        i4 = i5 + -1;

        goto label5;

     label7:
        if r21 == null goto label8;

        $i1 = interfaceinvoke r19.<java.util.List: int size()>();

        if $i1 != 0 goto label8;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot have two adjacent separators");

        throw $r12;

     label8:
        r4 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: java.lang.Object[] createComposite(java.util.List)>(r19);

        interfaceinvoke r19.<java.util.List: void clear()>();

        $r7 = new org.joda.time.format.PeriodFormatterBuilder$Separator;

        $r8 = r4[0];

        $r11 = (org.joda.time.format.PeriodPrinter) $r8;

        $r9 = r4[1];

        $r10 = (org.joda.time.format.PeriodParser) $r9;

        specialinvoke $r7.<org.joda.time.format.PeriodFormatterBuilder$Separator: void <init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)>(r1, r2, r3, $r11, $r10, z0, z1);

        interfaceinvoke r19.<java.util.List: boolean add(java.lang.Object)>($r7);

        interfaceinvoke r19.<java.util.List: boolean add(java.lang.Object)>($r7);

        return r0;
    }

    private void clearPrefix() throws java.lang.IllegalStateException
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Prefix not followed by field");

        throw $r2;

     label1:
        r0.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> = null;

        return;
    }

    private org.joda.time.format.PeriodFormatterBuilder append0(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser)
    {
        org.joda.time.format.PeriodFormatterBuilder r0;
        org.joda.time.format.PeriodPrinter r1;
        org.joda.time.format.PeriodParser r2;
        java.util.List $r3, $r4;
        boolean $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder;

        r1 := @parameter0: org.joda.time.format.PeriodPrinter;

        r2 := @parameter1: org.joda.time.format.PeriodParser;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder: java.util.List iElementPairs>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        $z2 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter>;

        if r1 != null goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        $z3 = $z2 | $z6;

        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotPrinter> = $z3;

        $z4 = r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser>;

        if r2 != null goto label3;

        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        $z5 = $z4 | $z7;

        r0.<org.joda.time.format.PeriodFormatterBuilder: boolean iNotParser> = $z5;

        return r0;
    }

    private static org.joda.time.format.PeriodFormatter toFormatter(java.util.List, boolean, boolean)
    {
        java.util.List r0, $r17;
        boolean z0, z1, $z2;
        int i0;
        org.joda.time.format.PeriodFormatter r1, $r2, $r7, $r10, $r20;
        java.lang.Object $r3, $r4, $r8, $r11, $r13, $r14;
        org.joda.time.format.PeriodParser $r5, $r12, $r15, $r19;
        org.joda.time.format.PeriodPrinter $r6, $r9, $r16, $r18;
        java.lang.IllegalStateException $r21;
        org.joda.time.format.PeriodFormatterBuilder$Separator r22, r23;
        java.lang.Object[] r24;

        r0 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 == 0 goto label1;

        if z1 == 0 goto label1;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Builder has created neither a printer nor a parser");

        throw $r21;

     label1:
        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i0 < 2 goto label2;

        $r13 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $z2 = $r13 instanceof org.joda.time.format.PeriodFormatterBuilder$Separator;

        if $z2 == 0 goto label2;

        $r14 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        r22 = (org.joda.time.format.PeriodFormatterBuilder$Separator) $r14;

        $r15 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser access$000(org.joda.time.format.PeriodFormatterBuilder$Separator)>(r22);

        if $r15 != null goto label2;

        $r16 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter access$100(org.joda.time.format.PeriodFormatterBuilder$Separator)>(r22);

        if $r16 != null goto label2;

        $r17 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>(2, i0);

        r1 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter(java.util.List,boolean,boolean)>($r17, z0, z1);

        $r18 = virtualinvoke r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        $r19 = virtualinvoke r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>();

        r23 = virtualinvoke r22.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodFormatterBuilder$Separator finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r18, $r19);

        $r20 = new org.joda.time.format.PeriodFormatter;

        specialinvoke $r20.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(r23, r23);

        return $r20;

     label2:
        r24 = staticinvoke <org.joda.time.format.PeriodFormatterBuilder: java.lang.Object[] createComposite(java.util.List)>(r0);

        if z0 == 0 goto label3;

        $r10 = new org.joda.time.format.PeriodFormatter;

        $r11 = r24[1];

        $r12 = (org.joda.time.format.PeriodParser) $r11;

        specialinvoke $r10.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>(null, $r12);

        return $r10;

     label3:
        if z1 == 0 goto label4;

        $r7 = new org.joda.time.format.PeriodFormatter;

        $r8 = r24[0];

        $r9 = (org.joda.time.format.PeriodPrinter) $r8;

        specialinvoke $r7.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r9, null);

        return $r7;

     label4:
        $r2 = new org.joda.time.format.PeriodFormatter;

        $r3 = r24[0];

        $r6 = (org.joda.time.format.PeriodPrinter) $r3;

        $r4 = r24[1];

        $r5 = (org.joda.time.format.PeriodParser) $r4;

        specialinvoke $r2.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)>($r6, $r5);

        return $r2;
    }

    private static java.lang.Object[] createComposite(java.util.List)
    {
        java.util.List r0;
        int $i0;
        java.lang.Object[] $r2, $r5, $r9;
        java.lang.Object $r3, $r4;
        org.joda.time.format.PeriodFormatterBuilder$Literal $r6, $r7;
        org.joda.time.format.PeriodFormatterBuilder$Composite $r8;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r5 = newarray (java.lang.Object)[2];

        $r6 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY>;

        $r5[0] = $r6;

        $r7 = <org.joda.time.format.PeriodFormatterBuilder$Literal: org.joda.time.format.PeriodFormatterBuilder$Literal EMPTY>;

        $r5[1] = $r7;

        return $r5;

     label2:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r2[0] = $r3;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(1);

        $r2[1] = $r4;

        return $r2;

     label3:
        $r8 = new org.joda.time.format.PeriodFormatterBuilder$Composite;

        specialinvoke $r8.<org.joda.time.format.PeriodFormatterBuilder$Composite: void <init>(java.util.List)>(r0);

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r8;

        $r9[1] = $r8;

        return $r9;
    }

    static java.util.concurrent.ConcurrentMap access$200()
    {
        java.util.concurrent.ConcurrentMap $r0;

        $r0 = <org.joda.time.format.PeriodFormatterBuilder: java.util.concurrent.ConcurrentMap PATTERNS>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        <org.joda.time.format.PeriodFormatterBuilder: int MAX_FIELD> = 9;

        <org.joda.time.format.PeriodFormatterBuilder: int SECONDS_OPTIONAL_MILLIS> = 9;

        <org.joda.time.format.PeriodFormatterBuilder: int SECONDS_MILLIS> = 8;

        <org.joda.time.format.PeriodFormatterBuilder: int MILLIS> = 7;

        <org.joda.time.format.PeriodFormatterBuilder: int SECONDS> = 6;

        <org.joda.time.format.PeriodFormatterBuilder: int MINUTES> = 5;

        <org.joda.time.format.PeriodFormatterBuilder: int HOURS> = 4;

        <org.joda.time.format.PeriodFormatterBuilder: int DAYS> = 3;

        <org.joda.time.format.PeriodFormatterBuilder: int WEEKS> = 2;

        <org.joda.time.format.PeriodFormatterBuilder: int MONTHS> = 1;

        <org.joda.time.format.PeriodFormatterBuilder: int YEARS> = 0;

        <org.joda.time.format.PeriodFormatterBuilder: int PRINT_ZERO_NEVER> = 5;

        <org.joda.time.format.PeriodFormatterBuilder: int PRINT_ZERO_ALWAYS> = 4;

        <org.joda.time.format.PeriodFormatterBuilder: int PRINT_ZERO_IF_SUPPORTED> = 3;

        <org.joda.time.format.PeriodFormatterBuilder: int PRINT_ZERO_RARELY_LAST> = 2;

        <org.joda.time.format.PeriodFormatterBuilder: int PRINT_ZERO_RARELY_FIRST> = 1;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <org.joda.time.format.PeriodFormatterBuilder: java.util.concurrent.ConcurrentMap PATTERNS> = $r0;

        return;
    }
}
