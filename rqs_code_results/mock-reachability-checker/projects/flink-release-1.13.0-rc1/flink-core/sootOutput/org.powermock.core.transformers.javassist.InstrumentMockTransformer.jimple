public class org.powermock.core.transformers.javassist.InstrumentMockTransformer extends org.powermock.core.transformers.javassist.AbstractJavaAssistMockTransformer
{
    private java.lang.Class mockGetawayClass;

    public void <init>(org.powermock.core.transformers.TransformStrategy)
    {
        org.powermock.core.transformers.javassist.InstrumentMockTransformer r0;
        org.powermock.core.transformers.TransformStrategy r1;

        r0 := @this: org.powermock.core.transformers.javassist.InstrumentMockTransformer;

        r1 := @parameter0: org.powermock.core.transformers.TransformStrategy;

        specialinvoke r0.<org.powermock.core.transformers.javassist.AbstractJavaAssistMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        r0.<org.powermock.core.transformers.javassist.InstrumentMockTransformer: java.lang.Class mockGetawayClass> = class "Lorg/powermock/core/MockGateway;";

        return;
    }

    public javassist.CtClass transform(javassist.CtClass) throws javassist.CannotCompileException
    {
        org.powermock.core.transformers.javassist.InstrumentMockTransformer r0;
        javassist.CtClass r1;
        org.powermock.core.transformers.javassist.support.PowerMockExpressionEditor $r2;
        org.powermock.core.transformers.TransformStrategy $r3;
        java.lang.Class $r4;

        r0 := @this: org.powermock.core.transformers.javassist.InstrumentMockTransformer;

        r1 := @parameter0: javassist.CtClass;

        $r2 = new org.powermock.core.transformers.javassist.support.PowerMockExpressionEditor;

        $r3 = virtualinvoke r0.<org.powermock.core.transformers.javassist.InstrumentMockTransformer: org.powermock.core.transformers.TransformStrategy getStrategy()>();

        $r4 = r0.<org.powermock.core.transformers.javassist.InstrumentMockTransformer: java.lang.Class mockGetawayClass>;

        specialinvoke $r2.<org.powermock.core.transformers.javassist.support.PowerMockExpressionEditor: void <init>(org.powermock.core.transformers.TransformStrategy,javassist.CtClass,java.lang.Class)>($r3, r1, $r4);

        virtualinvoke r1.<javassist.CtClass: void instrument(javassist.expr.ExprEditor)>($r2);

        return r1;
    }
}
