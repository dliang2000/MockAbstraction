public class jdk.internal.util.xml.impl.ReaderUTF8 extends java.io.Reader
{
    private java.io.InputStream is;

    public void <init>(java.io.InputStream)
    {
        jdk.internal.util.xml.impl.ReaderUTF8 r0;
        java.io.InputStream r1;

        r0 := @this: jdk.internal.util.xml.impl.ReaderUTF8;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is> = r1;

        return;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        jdk.internal.util.xml.impl.ReaderUTF8 r0;
        char[] r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i22, i24, i25, $i26;
        java.io.InputStream $r2, $r4, $r5, $r6;
        java.io.UnsupportedEncodingException $r3;
        char $c14, $c21, $c23;

        r0 := @this: jdk.internal.util.xml.impl.ReaderUTF8;

        r1 := @parameter0: char[];

        i24 := @parameter1: int;

        i0 := @parameter2: int;

        i25 = 0;

     label01:
        if i25 >= i0 goto label10;

        $r2 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i2 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        if $i2 >= 0 goto label04;

        if i25 == 0 goto label02;

        $i26 = i25;

        goto label03;

     label02:
        $i26 = -1;

     label03:
        return $i26;

     label04:
        $i3 = $i2 & 240;

        lookupswitch($i3)
        {
            case 192: goto label05;
            case 208: goto label05;
            case 224: goto label06;
            case 240: goto label07;
            default: goto label08;
        };

     label05:
        $i15 = i24;

        i24 = i24 + 1;

        $i16 = $i2 & 31;

        $i17 = $i16 << 6;

        $r6 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i18 = virtualinvoke $r6.<java.io.InputStream: int read()>();

        $i19 = $i18 & 63;

        $i20 = $i17 | $i19;

        $c21 = (char) $i20;

        r1[$i15] = $c21;

        goto label09;

     label06:
        $i4 = i24;

        i24 = i24 + 1;

        $i5 = $i2 & 15;

        $i6 = $i5 << 12;

        $r4 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i7 = virtualinvoke $r4.<java.io.InputStream: int read()>();

        $i8 = $i7 & 63;

        $i9 = $i8 << 6;

        $i10 = $i6 | $i9;

        $r5 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i11 = virtualinvoke $r5.<java.io.InputStream: int read()>();

        $i12 = $i11 & 63;

        $i13 = $i10 | $i12;

        $c14 = (char) $i13;

        r1[$i4] = $c14;

        goto label09;

     label07:
        $r3 = new java.io.UnsupportedEncodingException;

        specialinvoke $r3.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>("UTF-32 (or UCS-4) encoding not supported.");

        throw $r3;

     label08:
        $i22 = i24;

        i24 = i24 + 1;

        $c23 = (char) $i2;

        r1[$i22] = $c23;

     label09:
        i25 = i25 + 1;

        goto label01;

     label10:
        return i25;
    }

    public int read() throws java.io.IOException
    {
        jdk.internal.util.xml.impl.ReaderUTF8 r0;
        java.io.InputStream $r1, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        java.io.UnsupportedEncodingException $r2;

        r0 := @this: jdk.internal.util.xml.impl.ReaderUTF8;

        $r1 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        i14 = $i0;

        if $i0 >= 0 goto label1;

        return -1;

     label1:
        $i1 = $i0 & 240;

        lookupswitch($i1)
        {
            case 192: goto label2;
            case 208: goto label2;
            case 224: goto label3;
            case 240: goto label4;
            default: goto label5;
        };

     label2:
        $i10 = $i0 & 31;

        $i11 = $i10 << 6;

        $r5 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i12 = virtualinvoke $r5.<java.io.InputStream: int read()>();

        $i13 = $i12 & 63;

        i14 = $i11 | $i13;

        goto label5;

     label3:
        $i2 = $i0 & 15;

        $i3 = $i2 << 12;

        $r3 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i4 = virtualinvoke $r3.<java.io.InputStream: int read()>();

        $i5 = $i4 & 63;

        $i6 = $i5 << 6;

        $i7 = $i3 | $i6;

        $r4 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i8 = virtualinvoke $r4.<java.io.InputStream: int read()>();

        $i9 = $i8 & 63;

        i14 = $i7 | $i9;

        goto label5;

     label4:
        $r2 = new java.io.UnsupportedEncodingException;

        specialinvoke $r2.<java.io.UnsupportedEncodingException: void <init>()>();

        throw $r2;

     label5:
        return i14;
    }

    public void close() throws java.io.IOException
    {
        jdk.internal.util.xml.impl.ReaderUTF8 r0;
        java.io.InputStream $r1;

        r0 := @this: jdk.internal.util.xml.impl.ReaderUTF8;

        $r1 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }
}
