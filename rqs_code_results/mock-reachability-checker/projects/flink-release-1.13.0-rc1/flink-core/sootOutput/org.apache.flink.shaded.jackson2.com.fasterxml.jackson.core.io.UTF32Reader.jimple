public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader extends java.io.Reader
{
    protected static final int LAST_VALID_UNICODE_CHAR;
    protected static final char NC;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context;
    protected java.io.InputStream _in;
    protected byte[] _buffer;
    protected int _ptr;
    protected int _length;
    protected final boolean _bigEndian;
    protected char _surrogate;
    protected int _charCount;
    protected int _byteCount;
    protected final boolean _managedBuffers;
    protected char[] _tmpBuf;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, java.io.InputStream, byte[], int, int, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        java.io.InputStream r2;
        byte[] r3;
        int i0, i1;
        boolean z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: char _surrogate> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: java.io.InputStream _in> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr> = i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length> = i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: boolean _bigEndian> = z0;

        if r2 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: boolean _managedBuffers> = $z1;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: java.io.InputStream _in>;

        if r1 == null goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: java.io.InputStream _in> = null;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: void freeBuffers()>();

        virtualinvoke r1.<java.io.InputStream: void close()>();

     label1:
        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader r0;
        char[] $r1, $r2, $r3, $r4;
        int $i0;
        char $c1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: char[] _tmpBuf>;

        if $r1 != null goto label1;

        $r4 = newarray (char)[1];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: char[] _tmpBuf> = $r4;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: char[] _tmpBuf>;

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int read(char[],int,int)>($r2, 0, 1);

        if $i0 >= 1 goto label2;

        return -1;

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: char[] _tmpBuf>;

        $c1 = $r3[0];

        return $c1;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader r0;
        char[] r1;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i10, $i12, $i14, $i16, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i31, $i33, $i36, $i37, $i40, $i43, $i44, $i45, $i46, $i49, $i50, i51, i53, $i54, i55, i56, i57, i58, i59, i60, $i61, $i62;
        byte[] $r2, $r3, $r4, $r5, $r6, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;
        byte $b6, $b8, $b13, $b15, $b32, $b34, $b38, $b41;
        short $s9, $s11, $s17, $s35, $s39, $s42;
        char $c21, $c28, $c30, $c48, $c52;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        java.lang.String $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        if $r2 != null goto label01;

        return -1;

     label01:
        if i1 >= 1 goto label02;

        return i1;

     label02:
        if i0 < 0 goto label03;

        $i50 = i0 + i1;

        $i49 = lengthof r1;

        if $i50 <= $i49 goto label04;

     label03:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: void reportBounds(char[],int,int)>(r1, i0, i1);

     label04:
        i51 = i0;

        i2 = i1 + i0;

        $c52 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: char _surrogate>;

        if $c52 == 0 goto label05;

        i51 = i0 + 1;

        $c48 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: char _surrogate>;

        r1[i0] = $c48;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: char _surrogate> = 0;

        goto label07;

     label05:
        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr>;

        i53 = $i5 - $i4;

        if i53 >= 4 goto label07;

        $z1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: boolean loadMore(int)>(i53);

        if $z1 != 0 goto label07;

        if i53 != 0 goto label06;

        return -1;

     label06:
        $i45 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length>;

        $i44 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr>;

        $i46 = $i45 - $i44;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: void reportUnexpectedEOF(int,int)>($i46, 4);

     label07:
        $i54 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length>;

        i55 = $i54 - 4;

     label08:
        if i51 >= i2 goto label14;

        i56 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr>;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: boolean _bigEndian>;

        if $z0 == 0 goto label09;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $b32 = $r10[i56];

        $i36 = $b32 << 8;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $i33 = i56 + 1;

        $b34 = $r11[$i33];

        $s35 = $b34 & 255;

        i57 = $i36 | $s35;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $i37 = i56 + 2;

        $b38 = $r12[$i37];

        $s39 = $b38 & 255;

        $i43 = $s39 << 8;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $i40 = i56 + 3;

        $b41 = $r13[$i40];

        $s42 = $b41 & 255;

        i58 = $i43 | $s42;

        goto label10;

     label09:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $b6 = $r3[i56];

        $s11 = $b6 & 255;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $i7 = i56 + 1;

        $b8 = $r4[$i7];

        $s9 = $b8 & 255;

        $i10 = $s9 << 8;

        i58 = $s11 | $i10;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $i12 = i56 + 2;

        $b13 = $r5[$i12];

        $s17 = $b13 & 255;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $i14 = i56 + 3;

        $b15 = $r6[$i14];

        $i16 = $b15 << 8;

        i57 = $s17 | $i16;

     label10:
        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr>;

        $i19 = $i18 + 4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr> = $i19;

        if i57 == 0 goto label12;

        i59 = i57 & 65535;

        $i23 = i59 - 1;

        $i24 = $i23 << 16;

        i3 = $i24 | i58;

        if i59 <= 16 goto label11;

        $i31 = i51 - i0;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1114111);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" (above 0x%08x)", $r7);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: void reportInvalid(int,int,java.lang.String)>(i3, $i31, $r9);

     label11:
        $i25 = i51;

        i51 = i51 + 1;

        $i26 = i3 >> 10;

        $i27 = 55296 + $i26;

        $c28 = (char) $i27;

        r1[$i25] = $c28;

        $i29 = i3 & 1023;

        i58 = 56320 | $i29;

        if i51 < i2 goto label12;

        $c30 = (char) i3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: char _surrogate> = $c30;

        goto label14;

     label12:
        $i20 = i51;

        i51 = i51 + 1;

        $c21 = (char) i58;

        r1[$i20] = $c21;

        $i22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr>;

        if $i22 <= i55 goto label13;

        goto label14;

     label13:
        goto label08;

     label14:
        i60 = i51 - i0;

        $i61 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _charCount>;

        $i62 = $i61 + i60;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _charCount> = $i62;

        return i60;
    }

    private void reportUnexpectedEOF(int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader r0;
        int i0, i1, i2, i3, $i4;
        java.io.CharConversionException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _byteCount>;

        i2 = $i4 + i0;

        i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _charCount>;

        $r1 = new java.io.CharConversionException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected EOF in the middle of a 4-byte UTF-32 char: got ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", needed ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", at char #");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", byte #");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.CharConversionException: void <init>(java.lang.String)>($r12);

        throw $r1;
    }

    private void reportInvalid(int, int, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        java.lang.String r1, $r5, $r13;
        java.io.CharConversionException $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _byteCount>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr>;

        $i6 = $i5 + $i4;

        i2 = $i6 - 1;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _charCount>;

        i3 = $i7 + i1;

        $r2 = new java.io.CharConversionException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid UTF-32 character 0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at char #");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", byte #");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.CharConversionException: void <init>(java.lang.String)>($r13);

        throw $r2;
    }

    private boolean loadMore(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, i16, $i17, $i18;
        java.io.InputStream $r1, $r3, $r4, $r7;
        byte[] $r2, $r5, $r6, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader;

        i0 := @parameter0: int;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _byteCount>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length>;

        $i2 = $i1 - i0;

        $i4 = $i3 + $i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _byteCount> = $i4;

        if i0 <= 0 goto label02;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr>;

        if $i10 <= 0 goto label01;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr>;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, $i11, $r8, 0, i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr> = 0;

     label01:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length> = i0;

        goto label08;

     label02:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _ptr> = 0;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: java.io.InputStream _in>;

        if $r1 != null goto label03;

        $i12 = -1;

        goto label04;

     label03:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: java.io.InputStream _in>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $i12 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r2);

     label04:
        i13 = $i12;

        if $i12 >= 1 goto label07;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length> = 0;

        if $i12 >= 0 goto label06;

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: boolean _managedBuffers>;

        if $z1 == 0 goto label05;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: void freeBuffers()>();

     label05:
        return 0;

     label06:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: void reportStrangeStream()>();

     label07:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length> = i13;

     label08:
        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length>;

        if $i14 >= 4 goto label14;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: java.io.InputStream _in>;

        if $r4 != null goto label09;

        $i15 = -1;

        goto label10;

     label09:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: java.io.InputStream _in>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        $i6 = lengthof $r5;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length>;

        $i7 = $i6 - $i5;

        $i15 = virtualinvoke $r7.<java.io.InputStream: int read(byte[],int,int)>($r6, $i8, $i7);

     label10:
        i16 = $i15;

        if $i15 >= 1 goto label13;

        if $i15 >= 0 goto label12;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: boolean _managedBuffers>;

        if $z0 == 0 goto label11;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: void freeBuffers()>();

     label11:
        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: void reportUnexpectedEOF(int,int)>($i9, 4);

     label12:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: void reportStrangeStream()>();

     label13:
        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length>;

        $i18 = $i17 + i16;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int _length> = $i18;

        goto label08;

     label14:
        return 1;
    }

    private void freeBuffers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader r0;
        byte[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer>;

        if r1 == null goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: byte[] _buffer> = null;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _context>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseReadIOBuffer(byte[])>(r1);

     label1:
        return;
    }

    private void reportBounds(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader r0;
        char[] r1;
        int i0, i1, $i2;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read(buf,");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), cbuf[");

        $i2 = lengthof r1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r11);

        throw $r2;
    }

    private void reportStrangeStream() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader r0;
        java.io.IOException $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Strange I/O stream, returned 0 bytes on read");

        throw $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: char NC> = 0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.UTF32Reader: int LAST_VALID_UNICODE_CHAR> = 1114111;

        return;
    }
}
