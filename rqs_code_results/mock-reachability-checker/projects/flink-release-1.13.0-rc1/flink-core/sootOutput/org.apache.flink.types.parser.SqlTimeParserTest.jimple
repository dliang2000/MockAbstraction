public class org.apache.flink.types.parser.SqlTimeParserTest extends org.apache.flink.types.parser.ParserTestBase
{

    public void <init>()
    {
        org.apache.flink.types.parser.SqlTimeParserTest r0;

        r0 := @this: org.apache.flink.types.parser.SqlTimeParserTest;

        specialinvoke r0.<org.apache.flink.types.parser.ParserTestBase: void <init>()>();

        return;
    }

    public java.lang.String[] getValidTestValues()
    {
        org.apache.flink.types.parser.SqlTimeParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.SqlTimeParserTest;

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "00:00:00";

        $r1[1] = "02:42:25";

        $r1[2] = "14:15:51";

        $r1[3] = "18:00:45";

        $r1[4] = "23:59:58";

        $r1[5] = "0:0:0";

        return $r1;
    }

    public java.sql.Time[] getValidTestResults()
    {
        org.apache.flink.types.parser.SqlTimeParserTest r0;
        java.sql.Time[] $r1;
        java.sql.Time $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.flink.types.parser.SqlTimeParserTest;

        $r1 = newarray (java.sql.Time)[6];

        $r2 = staticinvoke <java.sql.Time: java.sql.Time valueOf(java.lang.String)>("00:00:00");

        $r1[0] = $r2;

        $r3 = staticinvoke <java.sql.Time: java.sql.Time valueOf(java.lang.String)>("02:42:25");

        $r1[1] = $r3;

        $r4 = staticinvoke <java.sql.Time: java.sql.Time valueOf(java.lang.String)>("14:15:51");

        $r1[2] = $r4;

        $r5 = staticinvoke <java.sql.Time: java.sql.Time valueOf(java.lang.String)>("18:00:45");

        $r1[3] = $r5;

        $r6 = staticinvoke <java.sql.Time: java.sql.Time valueOf(java.lang.String)>("23:59:58");

        $r1[4] = $r6;

        $r7 = staticinvoke <java.sql.Time: java.sql.Time valueOf(java.lang.String)>("0:0:0");

        $r1[5] = $r7;

        return $r1;
    }

    public java.lang.String[] getInvalidTestValues()
    {
        org.apache.flink.types.parser.SqlTimeParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.SqlTimeParserTest;

        $r1 = newarray (java.lang.String)[7];

        $r1[0] = " 00:00:00";

        $r1[1] = "00:00:00 ";

        $r1[2] = "00:00::00";

        $r1[3] = "00x00:00";

        $r1[4] = "2013/08/12";

        $r1[5] = " ";

        $r1[6] = "\t";

        return $r1;
    }

    public boolean allowsEmptyField()
    {
        org.apache.flink.types.parser.SqlTimeParserTest r0;

        r0 := @this: org.apache.flink.types.parser.SqlTimeParserTest;

        return 0;
    }

    public org.apache.flink.types.parser.FieldParser getParser()
    {
        org.apache.flink.types.parser.SqlTimeParserTest r0;
        org.apache.flink.types.parser.SqlTimeParser $r1;

        r0 := @this: org.apache.flink.types.parser.SqlTimeParserTest;

        $r1 = new org.apache.flink.types.parser.SqlTimeParser;

        specialinvoke $r1.<org.apache.flink.types.parser.SqlTimeParser: void <init>()>();

        return $r1;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.types.parser.SqlTimeParserTest r0;

        r0 := @this: org.apache.flink.types.parser.SqlTimeParserTest;

        return class "Ljava/sql/Time;";
    }

    public volatile java.lang.Object[] getValidTestResults()
    {
        org.apache.flink.types.parser.SqlTimeParserTest r0;
        java.sql.Time[] $r1;

        r0 := @this: org.apache.flink.types.parser.SqlTimeParserTest;

        $r1 = virtualinvoke r0.<org.apache.flink.types.parser.SqlTimeParserTest: java.sql.Time[] getValidTestResults()>();

        return $r1;
    }
}
