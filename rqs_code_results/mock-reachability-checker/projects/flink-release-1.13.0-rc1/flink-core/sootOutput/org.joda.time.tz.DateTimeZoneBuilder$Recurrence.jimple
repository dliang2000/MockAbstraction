final class org.joda.time.tz.DateTimeZoneBuilder$Recurrence extends java.lang.Object
{
    final org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear;
    final java.lang.String iNameKey;
    final int iSaveMillis;

    static org.joda.time.tz.DateTimeZoneBuilder$Recurrence readFrom(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r0;
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence $r1;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r2;
        java.lang.String $r3;
        long $l0;
        int $i1;

        r0 := @parameter0: java.io.DataInput;

        $r1 = new org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $r2 = staticinvoke <org.joda.time.tz.DateTimeZoneBuilder$OfYear: org.joda.time.tz.DateTimeZoneBuilder$OfYear readFrom(java.io.DataInput)>(r0);

        $r3 = interfaceinvoke r0.<java.io.DataInput: java.lang.String readUTF()>();

        $l0 = staticinvoke <org.joda.time.tz.DateTimeZoneBuilder: long readMillis(java.io.DataInput)>(r0);

        $i1 = (int) $l0;

        specialinvoke $r1.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: void <init>(org.joda.time.tz.DateTimeZoneBuilder$OfYear,java.lang.String,int)>($r2, $r3, $i1);

        return $r1;
    }

    void <init>(org.joda.time.tz.DateTimeZoneBuilder$OfYear, java.lang.String, int)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear r1;
        java.lang.String r2;
        int i0;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        r1 := @parameter0: org.joda.time.tz.DateTimeZoneBuilder$OfYear;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear> = r1;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey> = r2;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis> = i0;

        return;
    }

    public org.joda.time.tz.DateTimeZoneBuilder$OfYear getOfYear()
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $r1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        return $r1;
    }

    public long next(long, int, int)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        long l0, $l3;
        int i1, i2;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        $l3 = virtualinvoke $r1.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long next(long,int,int)>(l0, i1, i2);

        return $l3;
    }

    public long previous(long, int, int)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        long l0, $l3;
        int i1, i2;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        $l3 = virtualinvoke $r1.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: long previous(long,int,int)>(l0, i1, i2);

        return $l3;
    }

    public java.lang.String getNameKey()
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        java.lang.String $r1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $r1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey>;

        return $r1;
    }

    public int getSaveMillis()
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        int $i0;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $i0 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        java.lang.String $r3, $r4;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r5, $r6;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        if $z0 == 0 goto label4;

        r2 = (org.joda.time.tz.DateTimeZoneBuilder$Recurrence) r1;

        $i1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis>;

        $i0 = r2.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis>;

        if $i1 != $i0 goto label2;

        $r4 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey>;

        $r3 = r2.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r6 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        $r5 = r2.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        $z2 = virtualinvoke $r6.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        return 0;
    }

    public void writeTo(java.io.DataOutput) throws java.io.IOException
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0;
        java.io.DataOutput r1;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r2;
        java.lang.String $r3;
        int $i0;
        long $l1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        r1 := @parameter0: java.io.DataOutput;

        $r2 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        virtualinvoke $r2.<org.joda.time.tz.DateTimeZoneBuilder$OfYear: void writeTo(java.io.DataOutput)>(r1);

        $r3 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey>;

        interfaceinvoke r1.<java.io.DataOutput: void writeUTF(java.lang.String)>($r3);

        $i0 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis>;

        $l1 = (long) $i0;

        staticinvoke <org.joda.time.tz.DateTimeZoneBuilder: void writeMillis(java.io.DataOutput,long)>(r1, $l1);

        return;
    }

    org.joda.time.tz.DateTimeZoneBuilder$Recurrence rename(java.lang.String)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0, $r2;
        java.lang.String r1;
        int $i0;
        org.joda.time.tz.DateTimeZoneBuilder$OfYear $r3;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        $r3 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$OfYear iOfYear>;

        $i0 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: int iSaveMillis>;

        specialinvoke $r2.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: void <init>(org.joda.time.tz.DateTimeZoneBuilder$OfYear,java.lang.String,int)>($r3, r1, $i0);

        return $r2;
    }

    org.joda.time.tz.DateTimeZoneBuilder$Recurrence renameAppend(java.lang.String)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Recurrence r0, $r8;
        java.lang.String r1, $r3, $r6, $r7;
        java.lang.StringBuilder $r2, $r4, $r5;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Recurrence;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: java.lang.String iNameKey>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String intern()>();

        $r8 = virtualinvoke r0.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: org.joda.time.tz.DateTimeZoneBuilder$Recurrence rename(java.lang.String)>($r7);

        return $r8;
    }
}
