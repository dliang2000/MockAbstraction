public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdScalarSerializer implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer
{
    private static final long serialVersionUID;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues _values;
    protected final java.lang.Boolean _serializeAsIndex;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues r1;
        java.lang.Boolean r2;
        java.lang.Class $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues;

        r2 := @parameter1: java.lang.Boolean;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues: java.lang.Class getEnumClass()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class,boolean)>($r3, 0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues _values> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _serializeAsIndex> = r2;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value)
    {
        java.lang.Class r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues r4;
        java.lang.Boolean r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer $r6;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r3 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value;

        r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues constructFromName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r1, r0);

        r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value,boolean,java.lang.Boolean)>(r0, r3, 1, null);

        $r6 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean)>(r4, r5);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer r0, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r3;
        java.lang.Class r4, $r6;
        java.lang.Boolean r5, $r7, $r8;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Class handledType()>();

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(r1, r2, $r6);

        if r3 == null goto label1;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Class handledType()>();

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _serializeAsIndex>;

        r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value,boolean,java.lang.Boolean)>(r4, r3, 0, $r7);

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _serializeAsIndex>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r5, $r8);

        if $z0 != 0 goto label1;

        $r9 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues _values>;

        specialinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean)>($r10, r5);

        return $r9;

     label1:
        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues getEnumValues()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues _values>;

        return $r1;
    }

    public final void serialize(java.lang.Enum, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer r0;
        java.lang.Enum r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r6;
        java.lang.String $r7;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        r1 := @parameter0: java.lang.Enum;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: boolean _serializeAsIndex(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r3);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>($i0);

        return;

     label1:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING>;

        $z1 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r4);

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke r1.<java.lang.Enum: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>($r7);

        return;

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues _values>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString serializedValueFor(java.lang.Enum)>(r1);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>($r6);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode getSchema(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.reflect.Type r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode r3, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode r5;
        java.util.Iterator r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r7;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues $r8;
        java.util.Collection $r9;
        java.lang.Object $r10;
        java.lang.String $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.reflect.Type;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: boolean _serializeAsIndex(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1);

        if $z0 == 0 goto label1;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("integer", 1);

        return $r13;

     label1:
        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("string", 1);

        if r2 == null goto label3;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r2);

        $z1 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isEnumType()>();

        if $z1 == 0 goto label3;

        r5 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode putArray(java.lang.String)>("enum");

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues _values>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues: java.util.Collection values()>();

        r6 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) $r10;

        $r11 = interfaceinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.String)>($r11);

        goto label2;

     label3:
        return r3;
    }

    public void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor r4;
        boolean $z0, $z2, $z3, $z5;
        java.util.LinkedHashSet $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues $r7, $r12;
        java.util.Collection $r8;
        java.lang.Object $r9, $r14;
        java.lang.String $r10, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r11;
        java.util.List $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType $r16;
        java.util.Iterator r17, r19;
        java.lang.Enum r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r20;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider getProvider()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: boolean _serializeAsIndex(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r3);

        if $z0 == 0 goto label1;

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType INT>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: void visitIntFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType)>(r1, r2, $r16);

        return;

     label1:
        r4 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor expectStringFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

        if r4 == null goto label7;

        $r6 = new java.util.LinkedHashSet;

        specialinvoke $r6.<java.util.LinkedHashSet: void <init>()>();

        if r3 == null goto label4;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING>;

        $z2 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r11);

        if $z2 == 0 goto label4;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues _values>;

        $r13 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues: java.util.List enums()>();

        r17 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r14 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.Enum) $r14;

        $r15 = virtualinvoke r18.<java.lang.Enum: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r15);

        goto label2;

     label3:
        goto label6;

     label4:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues _values>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues: java.util.Collection values()>();

        r19 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z5 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label6;

        $r9 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) $r9;

        $r10 = interfaceinvoke r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r10);

        goto label5;

     label6:
        interfaceinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor: void enumTypes(java.util.Set)>($r6);

     label7:
        return;
    }

    protected final boolean _serializeAsIndex(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.Boolean $r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _serializeAsIndex>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _serializeAsIndex>;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label1:
        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_INDEX>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r3);

        return $z0;
    }

    protected static java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value, boolean, java.lang.Boolean)
    {
        java.lang.Class r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r1;
        boolean z0, $z1;
        java.lang.Boolean r2, $r7, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape $r4, $r5, $r6, $r8, $r10, $r16;
        java.lang.IllegalArgumentException $r11;
        java.lang.Object[] $r12;
        java.lang.String $r14, $r15, $r17;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.Boolean;

        if r1 != null goto label01;

        $r16 = null;

        goto label02;

     label01:
        $r16 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();

     label02:
        if $r16 != null goto label03;

        return r2;

     label03:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape ANY>;

        if $r16 == $r4 goto label04;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape SCALAR>;

        if $r16 != $r5 goto label05;

     label04:
        return r2;

     label05:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape STRING>;

        if $r16 == $r6 goto label06;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape NATURAL>;

        if $r16 != $r8 goto label07;

     label06:
        $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r7;

     label07:
        $z1 = virtualinvoke $r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: boolean isNumeric()>();

        if $z1 != 0 goto label08;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape ARRAY>;

        if $r16 != $r10 goto label09;

     label08:
        $r9 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r9;

     label09:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = newarray (java.lang.Object)[3];

        $r12[0] = $r16;

        $r14 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r12[1] = $r14;

        if z0 == 0 goto label10;

        $r17 = "class";

        goto label11;

     label10:
        $r17 = "property";

     label11:
        $r12[2] = $r17;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported serialization shape (%s) for Enum %s, not supported as %s annotation", $r12);

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;
    }

    public volatile void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.lang.Enum $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.lang.Enum) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: void serialize(java.lang.Enum,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>($r4, r2, r3);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.EnumSerializer: long serialVersionUID> = 1L;

        return;
    }
}
