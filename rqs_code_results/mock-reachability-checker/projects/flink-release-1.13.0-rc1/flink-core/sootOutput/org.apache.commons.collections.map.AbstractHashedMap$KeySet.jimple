public class org.apache.commons.collections.map.AbstractHashedMap$KeySet extends java.util.AbstractSet
{
    protected final org.apache.commons.collections.map.AbstractHashedMap parent;

    protected void <init>(org.apache.commons.collections.map.AbstractHashedMap)
    {
        org.apache.commons.collections.map.AbstractHashedMap$KeySet r0;
        org.apache.commons.collections.map.AbstractHashedMap r1;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$KeySet;

        r1 := @parameter0: org.apache.commons.collections.map.AbstractHashedMap;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<org.apache.commons.collections.map.AbstractHashedMap$KeySet: org.apache.commons.collections.map.AbstractHashedMap parent> = r1;

        return;
    }

    public int size()
    {
        org.apache.commons.collections.map.AbstractHashedMap$KeySet r0;
        org.apache.commons.collections.map.AbstractHashedMap $r1;
        int $i0;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$KeySet;

        $r1 = r0.<org.apache.commons.collections.map.AbstractHashedMap$KeySet: org.apache.commons.collections.map.AbstractHashedMap parent>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections.map.AbstractHashedMap: int size()>();

        return $i0;
    }

    public void clear()
    {
        org.apache.commons.collections.map.AbstractHashedMap$KeySet r0;
        org.apache.commons.collections.map.AbstractHashedMap $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$KeySet;

        $r1 = r0.<org.apache.commons.collections.map.AbstractHashedMap$KeySet: org.apache.commons.collections.map.AbstractHashedMap parent>;

        virtualinvoke $r1.<org.apache.commons.collections.map.AbstractHashedMap: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections.map.AbstractHashedMap$KeySet r0;
        java.lang.Object r1;
        org.apache.commons.collections.map.AbstractHashedMap $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$KeySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.map.AbstractHashedMap$KeySet: org.apache.commons.collections.map.AbstractHashedMap parent>;

        $z0 = virtualinvoke $r2.<org.apache.commons.collections.map.AbstractHashedMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.commons.collections.map.AbstractHashedMap$KeySet r0;
        java.lang.Object r1;
        boolean z0;
        org.apache.commons.collections.map.AbstractHashedMap $r2, $r3;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$KeySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.map.AbstractHashedMap$KeySet: org.apache.commons.collections.map.AbstractHashedMap parent>;

        z0 = virtualinvoke $r2.<org.apache.commons.collections.map.AbstractHashedMap: boolean containsKey(java.lang.Object)>(r1);

        $r3 = r0.<org.apache.commons.collections.map.AbstractHashedMap$KeySet: org.apache.commons.collections.map.AbstractHashedMap parent>;

        virtualinvoke $r3.<org.apache.commons.collections.map.AbstractHashedMap: java.lang.Object remove(java.lang.Object)>(r1);

        return z0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.map.AbstractHashedMap$KeySet r0;
        org.apache.commons.collections.map.AbstractHashedMap $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.commons.collections.map.AbstractHashedMap$KeySet;

        $r1 = r0.<org.apache.commons.collections.map.AbstractHashedMap$KeySet: org.apache.commons.collections.map.AbstractHashedMap parent>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.map.AbstractHashedMap: java.util.Iterator createKeySetIterator()>();

        return $r2;
    }
}
