public class org.apache.flink.core.plugin.PluginLoader extends java.lang.Object
{
    private final java.lang.ClassLoader pluginClassLoader;

    public void <init>(java.lang.ClassLoader)
    {
        org.apache.flink.core.plugin.PluginLoader r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.apache.flink.core.plugin.PluginLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.core.plugin.PluginLoader: java.lang.ClassLoader pluginClassLoader> = r1;

        return;
    }

    public static java.lang.ClassLoader createPluginClassLoader(org.apache.flink.core.plugin.PluginDescriptor, java.lang.ClassLoader, java.lang.String[])
    {
        org.apache.flink.core.plugin.PluginDescriptor r0;
        java.lang.ClassLoader r1;
        java.lang.String[] r2, $r5, $r6;
        org.apache.flink.core.plugin.PluginLoader$PluginClassLoader $r3;
        java.net.URL[] $r4;

        r0 := @parameter0: org.apache.flink.core.plugin.PluginDescriptor;

        r1 := @parameter1: java.lang.ClassLoader;

        r2 := @parameter2: java.lang.String[];

        $r3 = new org.apache.flink.core.plugin.PluginLoader$PluginClassLoader;

        $r4 = virtualinvoke r0.<org.apache.flink.core.plugin.PluginDescriptor: java.net.URL[] getPluginResourceURLs()>();

        $r5 = virtualinvoke r0.<org.apache.flink.core.plugin.PluginDescriptor: java.lang.String[] getLoaderExcludePatterns()>();

        $r6 = staticinvoke <org.apache.flink.util.ArrayUtils: java.lang.String[] concat(java.lang.String[],java.lang.String[])>(r2, $r5);

        specialinvoke $r3.<org.apache.flink.core.plugin.PluginLoader$PluginClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.lang.String[])>($r4, r1, $r6);

        return $r3;
    }

    public static org.apache.flink.core.plugin.PluginLoader create(org.apache.flink.core.plugin.PluginDescriptor, java.lang.ClassLoader, java.lang.String[])
    {
        org.apache.flink.core.plugin.PluginDescriptor r0;
        java.lang.ClassLoader r1, $r4;
        java.lang.String[] r2;
        org.apache.flink.core.plugin.PluginLoader $r3;

        r0 := @parameter0: org.apache.flink.core.plugin.PluginDescriptor;

        r1 := @parameter1: java.lang.ClassLoader;

        r2 := @parameter2: java.lang.String[];

        $r3 = new org.apache.flink.core.plugin.PluginLoader;

        $r4 = staticinvoke <org.apache.flink.core.plugin.PluginLoader: java.lang.ClassLoader createPluginClassLoader(org.apache.flink.core.plugin.PluginDescriptor,java.lang.ClassLoader,java.lang.String[])>(r0, r1, r2);

        specialinvoke $r3.<org.apache.flink.core.plugin.PluginLoader: void <init>(java.lang.ClassLoader)>($r4);

        return $r3;
    }

    public java.util.Iterator load(java.lang.Class)
    {
        org.apache.flink.core.plugin.PluginLoader r0;
        java.lang.Class r1;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.ClassLoader $r6, $r8, $r11;
        org.apache.flink.core.plugin.PluginLoader$ContextClassLoaderSettingIterator $r7;
        java.util.ServiceLoader $r9;
        java.util.Iterator $r10;
        java.lang.Throwable $r12, $r13, $r14, r16;

        r0 := @this: org.apache.flink.core.plugin.PluginLoader;

        r1 := @parameter0: java.lang.Class;

        $r6 = r0.<org.apache.flink.core.plugin.PluginLoader: java.lang.ClassLoader pluginClassLoader>;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>($r6);

        r16 = null;

     label01:
        $r7 = new org.apache.flink.core.plugin.PluginLoader$ContextClassLoaderSettingIterator;

        $r8 = r0.<org.apache.flink.core.plugin.PluginLoader: java.lang.ClassLoader pluginClassLoader>;

        $r9 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(r1, $r8);

        $r10 = virtualinvoke $r9.<java.util.ServiceLoader: java.util.Iterator iterator()>();

        $r11 = r0.<org.apache.flink.core.plugin.PluginLoader: java.lang.ClassLoader pluginClassLoader>;

        specialinvoke $r7.<org.apache.flink.core.plugin.PluginLoader$ContextClassLoaderSettingIterator: void <init>(java.util.Iterator,java.lang.ClassLoader)>($r10, $r11);

     label02:
        if r2 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return $r7;

     label05:
        $r12 := @caughtexception;

        r16 = $r12;

        throw $r12;

     label06:
        $r14 := @caughtexception;

     label07:
        if r2 == null goto label12;

        if r16 == null goto label11;

     label08:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r13 := @caughtexception;

        virtualinvoke r16.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r13);

        goto label12;

     label11:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }
}
