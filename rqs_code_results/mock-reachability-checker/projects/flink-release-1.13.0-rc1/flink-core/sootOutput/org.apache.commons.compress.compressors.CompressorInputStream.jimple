public abstract class org.apache.commons.compress.compressors.CompressorInputStream extends java.io.InputStream
{
    private long bytesRead;

    public void <init>()
    {
        org.apache.commons.compress.compressors.CompressorInputStream r0;

        r0 := @this: org.apache.commons.compress.compressors.CompressorInputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.commons.compress.compressors.CompressorInputStream: long bytesRead> = 0L;

        return;
    }

    protected void count(int)
    {
        org.apache.commons.compress.compressors.CompressorInputStream r0;
        int i0;
        long $l1;

        r0 := @this: org.apache.commons.compress.compressors.CompressorInputStream;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        virtualinvoke r0.<org.apache.commons.compress.compressors.CompressorInputStream: void count(long)>($l1);

        return;
    }

    protected void count(long)
    {
        org.apache.commons.compress.compressors.CompressorInputStream r0;
        long l0, $l2, $l3;
        byte $b1;

        r0 := @this: org.apache.commons.compress.compressors.CompressorInputStream;

        l0 := @parameter0: long;

        $b1 = l0 cmp -1L;

        if $b1 == 0 goto label1;

        $l2 = r0.<org.apache.commons.compress.compressors.CompressorInputStream: long bytesRead>;

        $l3 = $l2 + l0;

        r0.<org.apache.commons.compress.compressors.CompressorInputStream: long bytesRead> = $l3;

     label1:
        return;
    }

    protected void pushedBackBytes(long)
    {
        org.apache.commons.compress.compressors.CompressorInputStream r0;
        long l0, $l1, $l2;

        r0 := @this: org.apache.commons.compress.compressors.CompressorInputStream;

        l0 := @parameter0: long;

        $l1 = r0.<org.apache.commons.compress.compressors.CompressorInputStream: long bytesRead>;

        $l2 = $l1 - l0;

        r0.<org.apache.commons.compress.compressors.CompressorInputStream: long bytesRead> = $l2;

        return;
    }

    public int getCount()
    {
        org.apache.commons.compress.compressors.CompressorInputStream r0;
        long $l0;
        int $i1;

        r0 := @this: org.apache.commons.compress.compressors.CompressorInputStream;

        $l0 = r0.<org.apache.commons.compress.compressors.CompressorInputStream: long bytesRead>;

        $i1 = (int) $l0;

        return $i1;
    }

    public long getBytesRead()
    {
        org.apache.commons.compress.compressors.CompressorInputStream r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.compressors.CompressorInputStream;

        $l0 = r0.<org.apache.commons.compress.compressors.CompressorInputStream: long bytesRead>;

        return $l0;
    }

    public long getUncompressedCount()
    {
        org.apache.commons.compress.compressors.CompressorInputStream r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.compressors.CompressorInputStream;

        $l0 = virtualinvoke r0.<org.apache.commons.compress.compressors.CompressorInputStream: long getBytesRead()>();

        return $l0;
    }
}
