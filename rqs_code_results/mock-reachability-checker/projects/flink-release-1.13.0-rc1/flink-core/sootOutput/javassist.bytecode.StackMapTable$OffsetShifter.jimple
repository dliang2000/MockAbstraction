class javassist.bytecode.StackMapTable$OffsetShifter extends javassist.bytecode.StackMapTable$Walker
{
    int where;
    int gap;

    public void <init>(javassist.bytecode.StackMapTable, int, int)
    {
        javassist.bytecode.StackMapTable$OffsetShifter r0;
        javassist.bytecode.StackMapTable r1;
        int i0, i1;

        r0 := @this: javassist.bytecode.StackMapTable$OffsetShifter;

        r1 := @parameter0: javassist.bytecode.StackMapTable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<javassist.bytecode.StackMapTable$Walker: void <init>(javassist.bytecode.StackMapTable)>(r1);

        r0.<javassist.bytecode.StackMapTable$OffsetShifter: int where> = i0;

        r0.<javassist.bytecode.StackMapTable$OffsetShifter: int gap> = i1;

        return;
    }

    public void objectOrUninitialized(int, int, int)
    {
        javassist.bytecode.StackMapTable$OffsetShifter r0;
        int i0, i1, i2, $i3, $i4, $i5;
        byte[] $r1;

        r0 := @this: javassist.bytecode.StackMapTable$OffsetShifter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 != 8 goto label1;

        $i3 = r0.<javassist.bytecode.StackMapTable$OffsetShifter: int where>;

        if $i3 > i1 goto label1;

        $i4 = r0.<javassist.bytecode.StackMapTable$OffsetShifter: int gap>;

        $i5 = i1 + $i4;

        $r1 = r0.<javassist.bytecode.StackMapTable$OffsetShifter: byte[] info>;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>($i5, $r1, i2);

     label1:
        return;
    }
}
