public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdScalarSerializer
{

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class)>(class "Ljava/net/InetSocketAddress;");

        return;
    }

    public void serialize(java.net.InetSocketAddress, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer r0;
        java.net.InetSocketAddress r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.net.InetAddress r4;
        int i0, $i1;
        java.lang.String $r5, $r8, $r11, r12, $r13, $r18;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r14, $r15, $r16, $r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer;

        r1 := @parameter0: java.net.InetSocketAddress;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 = virtualinvoke r1.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        if r4 != null goto label1;

        $r11 = virtualinvoke r1.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        goto label2;

     label1:
        $r5 = virtualinvoke r4.<java.net.InetAddress: java.lang.String toString()>();

        $r11 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

     label2:
        r12 = $r11;

        i0 = virtualinvoke $r11.<java.lang.String: int indexOf(int)>(47);

        if i0 < 0 goto label6;

        if i0 != 0 goto label5;

        $z0 = r4 instanceof java.net.Inet6Address;

        if $z0 == 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r8 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int)>(1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r13 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int)>(1);

     label4:
        r12 = $r13;

        goto label6;

     label5:
        r12 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label6:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i1 = virtualinvoke r1.<java.net.InetSocketAddress: int getPort()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>($r18);

        return;
    }

    public void serializeWithType(java.net.InetSocketAddress, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer r0;
        java.net.InetSocketAddress r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId r5, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer;

        r1 := @parameter0: java.net.InetSocketAddress;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        $r7 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r1, class "Ljava/net/InetSocketAddress;", $r6);

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, $r7);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer: void serialize(java.net.InetSocketAddress,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, r5);

        return;
    }

    public volatile void serializeWithType(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        java.net.InetSocketAddress $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r5 = (java.net.InetSocketAddress) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer: void serializeWithType(java.net.InetSocketAddress,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r5, r2, r3, r4);

        return;
    }

    public volatile void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.net.InetSocketAddress $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.net.InetSocketAddress) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer: void serialize(java.net.InetSocketAddress,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>($r4, r2, r3);

        return;
    }
}
