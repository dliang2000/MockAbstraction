public class javassist.bytecode.AttributeInfo extends java.lang.Object
{
    protected javassist.bytecode.ConstPool constPool;
    int name;
    byte[] info;

    protected void <init>(javassist.bytecode.ConstPool, int, byte[])
    {
        javassist.bytecode.AttributeInfo r0;
        javassist.bytecode.ConstPool r1;
        int i0;
        byte[] r2;

        r0 := @this: javassist.bytecode.AttributeInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.bytecode.AttributeInfo: javassist.bytecode.ConstPool constPool> = r1;

        r0.<javassist.bytecode.AttributeInfo: int name> = i0;

        r0.<javassist.bytecode.AttributeInfo: byte[] info> = r2;

        return;
    }

    protected void <init>(javassist.bytecode.ConstPool, java.lang.String)
    {
        javassist.bytecode.AttributeInfo r0;
        javassist.bytecode.ConstPool r1;
        java.lang.String r2;
        byte[] $r3;

        r0 := @this: javassist.bytecode.AttributeInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.lang.String;

        $r3 = (byte[]) null;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, r2, $r3);

        return;
    }

    public void <init>(javassist.bytecode.ConstPool, java.lang.String, byte[])
    {
        javassist.bytecode.AttributeInfo r0;
        javassist.bytecode.ConstPool r1;
        java.lang.String r2;
        byte[] r3;
        int $i0;

        r0 := @this: javassist.bytecode.AttributeInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        $i0 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r2);

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,int,byte[])>(r1, $i0, r3);

        return;
    }

    protected void <init>(javassist.bytecode.ConstPool, int, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.AttributeInfo r0;
        javassist.bytecode.ConstPool r1;
        int i0, i1;
        java.io.DataInputStream r2;
        byte[] $r3, $r4;

        r0 := @this: javassist.bytecode.AttributeInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.DataInputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.bytecode.AttributeInfo: javassist.bytecode.ConstPool constPool> = r1;

        r0.<javassist.bytecode.AttributeInfo: int name> = i0;

        i1 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        $r3 = newarray (byte)[i1];

        r0.<javassist.bytecode.AttributeInfo: byte[] info> = $r3;

        if i1 <= 0 goto label1;

        $r4 = r0.<javassist.bytecode.AttributeInfo: byte[] info>;

        virtualinvoke r2.<java.io.DataInputStream: void readFully(byte[])>($r4);

     label1:
        return;
    }

    static javassist.bytecode.AttributeInfo read(javassist.bytecode.ConstPool, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.ConstPool r0;
        java.io.DataInputStream r1;
        int i0;
        java.lang.String r2;
        char c1;
        javassist.bytecode.AttributeInfo $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        javassist.bytecode.StackMapTable $r4;
        javassist.bytecode.StackMap $r5;
        javassist.bytecode.SyntheticAttribute $r6;
        javassist.bytecode.SourceFileAttribute $r7;
        javassist.bytecode.SignatureAttribute $r8;
        javassist.bytecode.AnnotationsAttribute $r9;
        javassist.bytecode.ParameterAnnotationsAttribute $r10;
        javassist.bytecode.TypeAnnotationsAttribute $r11;
        javassist.bytecode.NestMembersAttribute $r12;
        javassist.bytecode.NestHostAttribute $r13;
        javassist.bytecode.MethodParametersAttribute $r14;
        javassist.bytecode.LocalVariableTypeAttribute $r15;
        javassist.bytecode.LocalVariableAttribute $r16;
        javassist.bytecode.LineNumberAttribute $r17;
        javassist.bytecode.InnerClassesAttribute $r18;
        javassist.bytecode.ExceptionsAttribute $r19;
        javassist.bytecode.EnclosingMethodAttribute $r20;
        javassist.bytecode.DeprecatedAttribute $r21;
        javassist.bytecode.ConstantAttribute $r22;
        javassist.bytecode.CodeAttribute $r23;
        javassist.bytecode.BootstrapMethodsAttribute $r24;
        javassist.bytecode.AnnotationDefaultAttribute $r25;

        r0 := @parameter0: javassist.bytecode.ConstPool;

        r1 := @parameter1: java.io.DataInputStream;

        i0 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedShort()>();

        r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>(i0);

        c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if c1 >= 69 goto label05;

        $z20 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("AnnotationDefault");

        if $z20 == 0 goto label01;

        $r25 = new javassist.bytecode.AnnotationDefaultAttribute;

        specialinvoke $r25.<javassist.bytecode.AnnotationDefaultAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r25;

     label01:
        $z21 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("BootstrapMethods");

        if $z21 == 0 goto label02;

        $r24 = new javassist.bytecode.BootstrapMethodsAttribute;

        specialinvoke $r24.<javassist.bytecode.BootstrapMethodsAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r24;

     label02:
        $z22 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Code");

        if $z22 == 0 goto label03;

        $r23 = new javassist.bytecode.CodeAttribute;

        specialinvoke $r23.<javassist.bytecode.CodeAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r23;

     label03:
        $z23 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ConstantValue");

        if $z23 == 0 goto label04;

        $r22 = new javassist.bytecode.ConstantAttribute;

        specialinvoke $r22.<javassist.bytecode.ConstantAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r22;

     label04:
        $z24 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Deprecated");

        if $z24 == 0 goto label05;

        $r21 = new javassist.bytecode.DeprecatedAttribute;

        specialinvoke $r21.<javassist.bytecode.DeprecatedAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r21;

     label05:
        if c1 >= 77 goto label11;

        $z14 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("EnclosingMethod");

        if $z14 == 0 goto label06;

        $r20 = new javassist.bytecode.EnclosingMethodAttribute;

        specialinvoke $r20.<javassist.bytecode.EnclosingMethodAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r20;

     label06:
        $z15 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Exceptions");

        if $z15 == 0 goto label07;

        $r19 = new javassist.bytecode.ExceptionsAttribute;

        specialinvoke $r19.<javassist.bytecode.ExceptionsAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r19;

     label07:
        $z16 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("InnerClasses");

        if $z16 == 0 goto label08;

        $r18 = new javassist.bytecode.InnerClassesAttribute;

        specialinvoke $r18.<javassist.bytecode.InnerClassesAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r18;

     label08:
        $z17 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("LineNumberTable");

        if $z17 == 0 goto label09;

        $r17 = new javassist.bytecode.LineNumberAttribute;

        specialinvoke $r17.<javassist.bytecode.LineNumberAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r17;

     label09:
        $z18 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("LocalVariableTable");

        if $z18 == 0 goto label10;

        $r16 = new javassist.bytecode.LocalVariableAttribute;

        specialinvoke $r16.<javassist.bytecode.LocalVariableAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r16;

     label10:
        $z19 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("LocalVariableTypeTable");

        if $z19 == 0 goto label11;

        $r15 = new javassist.bytecode.LocalVariableTypeAttribute;

        specialinvoke $r15.<javassist.bytecode.LocalVariableTypeAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r15;

     label11:
        if c1 >= 83 goto label20;

        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("MethodParameters");

        if $z5 == 0 goto label12;

        $r14 = new javassist.bytecode.MethodParametersAttribute;

        specialinvoke $r14.<javassist.bytecode.MethodParametersAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r14;

     label12:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("NestHost");

        if $z6 == 0 goto label13;

        $r13 = new javassist.bytecode.NestHostAttribute;

        specialinvoke $r13.<javassist.bytecode.NestHostAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r13;

     label13:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("NestMembers");

        if $z7 == 0 goto label14;

        $r12 = new javassist.bytecode.NestMembersAttribute;

        specialinvoke $r12.<javassist.bytecode.NestMembersAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r12;

     label14:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("RuntimeVisibleAnnotations");

        if $z8 != 0 goto label15;

        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("RuntimeInvisibleAnnotations");

        if $z9 == 0 goto label16;

     label15:
        $r9 = new javassist.bytecode.AnnotationsAttribute;

        specialinvoke $r9.<javassist.bytecode.AnnotationsAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r9;

     label16:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("RuntimeVisibleParameterAnnotations");

        if $z10 != 0 goto label17;

        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("RuntimeInvisibleParameterAnnotations");

        if $z11 == 0 goto label18;

     label17:
        $r10 = new javassist.bytecode.ParameterAnnotationsAttribute;

        specialinvoke $r10.<javassist.bytecode.ParameterAnnotationsAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r10;

     label18:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("RuntimeVisibleTypeAnnotations");

        if $z12 != 0 goto label19;

        $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("RuntimeInvisibleTypeAnnotations");

        if $z13 == 0 goto label20;

     label19:
        $r11 = new javassist.bytecode.TypeAnnotationsAttribute;

        specialinvoke $r11.<javassist.bytecode.TypeAnnotationsAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r11;

     label20:
        if c1 < 83 goto label25;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Signature");

        if $z0 == 0 goto label21;

        $r8 = new javassist.bytecode.SignatureAttribute;

        specialinvoke $r8.<javassist.bytecode.SignatureAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r8;

     label21:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("SourceFile");

        if $z1 == 0 goto label22;

        $r7 = new javassist.bytecode.SourceFileAttribute;

        specialinvoke $r7.<javassist.bytecode.SourceFileAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r7;

     label22:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Synthetic");

        if $z2 == 0 goto label23;

        $r6 = new javassist.bytecode.SyntheticAttribute;

        specialinvoke $r6.<javassist.bytecode.SyntheticAttribute: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r6;

     label23:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("StackMap");

        if $z3 == 0 goto label24;

        $r5 = new javassist.bytecode.StackMap;

        specialinvoke $r5.<javassist.bytecode.StackMap: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r5;

     label24:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("StackMapTable");

        if $z4 == 0 goto label25;

        $r4 = new javassist.bytecode.StackMapTable;

        specialinvoke $r4.<javassist.bytecode.StackMapTable: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r4;

     label25:
        $r3 = new javassist.bytecode.AttributeInfo;

        specialinvoke $r3.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r0, i0, r1);

        return $r3;
    }

    public java.lang.String getName()
    {
        javassist.bytecode.AttributeInfo r0;
        int $i0;
        javassist.bytecode.ConstPool $r1;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.AttributeInfo;

        $r1 = r0.<javassist.bytecode.AttributeInfo: javassist.bytecode.ConstPool constPool>;

        $i0 = r0.<javassist.bytecode.AttributeInfo: int name>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i0);

        return $r2;
    }

    public javassist.bytecode.ConstPool getConstPool()
    {
        javassist.bytecode.AttributeInfo r0;
        javassist.bytecode.ConstPool $r1;

        r0 := @this: javassist.bytecode.AttributeInfo;

        $r1 = r0.<javassist.bytecode.AttributeInfo: javassist.bytecode.ConstPool constPool>;

        return $r1;
    }

    public int length()
    {
        javassist.bytecode.AttributeInfo r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.AttributeInfo;

        $r1 = r0.<javassist.bytecode.AttributeInfo: byte[] info>;

        $i0 = lengthof $r1;

        $i1 = $i0 + 6;

        return $i1;
    }

    public byte[] get()
    {
        javassist.bytecode.AttributeInfo r0;
        byte[] $r1;

        r0 := @this: javassist.bytecode.AttributeInfo;

        $r1 = r0.<javassist.bytecode.AttributeInfo: byte[] info>;

        return $r1;
    }

    public void set(byte[])
    {
        javassist.bytecode.AttributeInfo r0;
        byte[] r1;

        r0 := @this: javassist.bytecode.AttributeInfo;

        r1 := @parameter0: byte[];

        r0.<javassist.bytecode.AttributeInfo: byte[] info> = r1;

        return;
    }

    public javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.AttributeInfo r0, $r3;
        javassist.bytecode.ConstPool r1;
        java.util.Map r2;
        java.lang.String $r4;
        byte[] $r5, $r6, $r7;
        int $i0;

        r0 := @this: javassist.bytecode.AttributeInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        $r3 = new javassist.bytecode.AttributeInfo;

        $r4 = virtualinvoke r0.<javassist.bytecode.AttributeInfo: java.lang.String getName()>();

        $r6 = r0.<javassist.bytecode.AttributeInfo: byte[] info>;

        $r5 = r0.<javassist.bytecode.AttributeInfo: byte[] info>;

        $i0 = lengthof $r5;

        $r7 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r6, $i0);

        specialinvoke $r3.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, $r4, $r7);

        return $r3;
    }

    void write(java.io.DataOutputStream) throws java.io.IOException
    {
        javassist.bytecode.AttributeInfo r0;
        java.io.DataOutputStream r1;
        int $i0, $i1, $i2;
        byte[] $r2, $r3, $r4;

        r0 := @this: javassist.bytecode.AttributeInfo;

        r1 := @parameter0: java.io.DataOutputStream;

        $i0 = r0.<javassist.bytecode.AttributeInfo: int name>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i0);

        $r2 = r0.<javassist.bytecode.AttributeInfo: byte[] info>;

        $i1 = lengthof $r2;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i1);

        $r3 = r0.<javassist.bytecode.AttributeInfo: byte[] info>;

        $i2 = lengthof $r3;

        if $i2 <= 0 goto label1;

        $r4 = r0.<javassist.bytecode.AttributeInfo: byte[] info>;

        virtualinvoke r1.<java.io.DataOutputStream: void write(byte[])>($r4);

     label1:
        return;
    }

    static int getLength(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator r1;
        javassist.bytecode.AttributeInfo r2;
        boolean $z0;
        java.lang.Object $r3;
        int $i0, i1;

        r0 := @parameter0: java.util.List;

        i1 = 0;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (javassist.bytecode.AttributeInfo) $r3;

        $i0 = virtualinvoke r2.<javassist.bytecode.AttributeInfo: int length()>();

        i1 = i1 + $i0;

        goto label1;

     label2:
        return i1;
    }

    static javassist.bytecode.AttributeInfo lookup(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1, $r5;
        java.util.Iterator r2;
        javassist.bytecode.AttributeInfo r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javassist.bytecode.AttributeInfo) $r4;

        $r5 = virtualinvoke r3.<javassist.bytecode.AttributeInfo: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        return r3;

     label3:
        goto label2;

     label4:
        return null;
    }

    static synchronized javassist.bytecode.AttributeInfo remove(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1, $r5;
        java.util.Iterator r2;
        javassist.bytecode.AttributeInfo r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javassist.bytecode.AttributeInfo) $r4;

        $r5 = virtualinvoke r3.<javassist.bytecode.AttributeInfo: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $z2 = interfaceinvoke r0.<java.util.List: boolean remove(java.lang.Object)>(r3);

        if $z2 == 0 goto label3;

        return r3;

     label3:
        goto label2;

     label4:
        return null;
    }

    static void writeAll(java.util.List, java.io.DataOutputStream) throws java.io.IOException
    {
        java.util.List r0;
        java.io.DataOutputStream r1;
        java.util.Iterator r2;
        javassist.bytecode.AttributeInfo r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.io.DataOutputStream;

        if r0 != null goto label1;

        return;

     label1:
        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javassist.bytecode.AttributeInfo) $r4;

        virtualinvoke r3.<javassist.bytecode.AttributeInfo: void write(java.io.DataOutputStream)>(r1);

        goto label2;

     label3:
        return;
    }

    static java.util.List copyAll(java.util.List, javassist.bytecode.ConstPool)
    {
        java.util.List r0;
        javassist.bytecode.ConstPool r1;
        java.util.Iterator r3;
        javassist.bytecode.AttributeInfo r4, $r7;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: javassist.bytecode.ConstPool;

        if r0 != null goto label1;

        return null;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (javassist.bytecode.AttributeInfo) $r6;

        $r7 = virtualinvoke r4.<javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool,java.util.Map)>(r1, null);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        return $r5;
    }

    void renameClass(java.lang.String, java.lang.String)
    {
        javassist.bytecode.AttributeInfo r0;
        java.lang.String r1, r2;

        r0 := @this: javassist.bytecode.AttributeInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    void renameClass(java.util.Map)
    {
        javassist.bytecode.AttributeInfo r0;
        java.util.Map r1;

        r0 := @this: javassist.bytecode.AttributeInfo;

        r1 := @parameter0: java.util.Map;

        return;
    }

    static void renameClass(java.util.List, java.lang.String, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1, r2;
        java.util.Iterator r3;
        javassist.bytecode.AttributeInfo r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (javassist.bytecode.AttributeInfo) $r5;

        virtualinvoke r4.<javassist.bytecode.AttributeInfo: void renameClass(java.lang.String,java.lang.String)>(r1, r2);

        goto label2;

     label3:
        return;
    }

    static void renameClass(java.util.List, java.util.Map)
    {
        java.util.List r0;
        java.util.Map r1;
        java.util.Iterator r2;
        javassist.bytecode.AttributeInfo r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Map;

        if r0 != null goto label1;

        return;

     label1:
        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javassist.bytecode.AttributeInfo) $r4;

        virtualinvoke r3.<javassist.bytecode.AttributeInfo: void renameClass(java.util.Map)>(r1);

        goto label2;

     label3:
        return;
    }

    void getRefClasses(java.util.Map)
    {
        javassist.bytecode.AttributeInfo r0;
        java.util.Map r1;

        r0 := @this: javassist.bytecode.AttributeInfo;

        r1 := @parameter0: java.util.Map;

        return;
    }

    static void getRefClasses(java.util.List, java.util.Map)
    {
        java.util.List r0;
        java.util.Map r1;
        java.util.Iterator r2;
        javassist.bytecode.AttributeInfo r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Map;

        if r0 != null goto label1;

        return;

     label1:
        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javassist.bytecode.AttributeInfo) $r4;

        virtualinvoke r3.<javassist.bytecode.AttributeInfo: void getRefClasses(java.util.Map)>(r1);

        goto label2;

     label3:
        return;
    }
}
