public final enum class org.apache.flink.util.TernaryBoolean extends java.lang.Enum
{
    public static final enum org.apache.flink.util.TernaryBoolean TRUE;
    public static final enum org.apache.flink.util.TernaryBoolean FALSE;
    public static final enum org.apache.flink.util.TernaryBoolean UNDEFINED;
    private static final org.apache.flink.util.TernaryBoolean[] $VALUES;

    public static org.apache.flink.util.TernaryBoolean[] values()
    {
        org.apache.flink.util.TernaryBoolean[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.flink.util.TernaryBoolean[]) $r1;

        return $r2;
    }

    public static org.apache.flink.util.TernaryBoolean valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.flink.util.TernaryBoolean $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/flink/util/TernaryBoolean;", r0);

        $r2 = (org.apache.flink.util.TernaryBoolean) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.apache.flink.util.TernaryBoolean r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.apache.flink.util.TernaryBoolean;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public boolean getOrDefault(boolean)
    {
        org.apache.flink.util.TernaryBoolean r0, $r1, $r2;
        boolean z0, $z1;

        r0 := @this: org.apache.flink.util.TernaryBoolean;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED>;

        if r0 != $r1 goto label1;

        $z1 = z0;

        goto label3;

     label1:
        $r2 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        if r0 != $r2 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public org.apache.flink.util.TernaryBoolean resolveUndefined(boolean)
    {
        org.apache.flink.util.TernaryBoolean r0, $r1, $r2;
        boolean z0;

        r0 := @this: org.apache.flink.util.TernaryBoolean;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED>;

        if r0 == $r1 goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = staticinvoke <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean fromBoolean(boolean)>(z0);

     label2:
        return $r2;
    }

    public java.lang.Boolean getAsBoolean()
    {
        org.apache.flink.util.TernaryBoolean r0, $r1, $r2;
        java.lang.Boolean $r3;

        r0 := @this: org.apache.flink.util.TernaryBoolean;

        $r1 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED>;

        if r0 != $r1 goto label1;

        $r3 = null;

        goto label3;

     label1:
        $r2 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        if r0 != $r2 goto label2;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label3;

     label2:
        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label3:
        return $r3;
    }

    public static org.apache.flink.util.TernaryBoolean fromBoolean(boolean)
    {
        boolean z0;
        org.apache.flink.util.TernaryBoolean $r0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r0 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        goto label2;

     label1:
        $r0 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

     label2:
        return $r0;
    }

    public static org.apache.flink.util.TernaryBoolean fromBoxedBoolean(java.lang.Boolean)
    {
        java.lang.Boolean r0;
        boolean $z0;
        org.apache.flink.util.TernaryBoolean $r1;

        r0 := @parameter0: java.lang.Boolean;

        if r0 != null goto label1;

        $r1 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED>;

        goto label2;

     label1:
        $z0 = virtualinvoke r0.<java.lang.Boolean: boolean booleanValue()>();

        $r1 = staticinvoke <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean fromBoolean(boolean)>($z0);

     label2:
        return $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.util.TernaryBoolean $r0, $r1, $r2, $r4, $r5, $r6;
        org.apache.flink.util.TernaryBoolean[] $r3;

        $r0 = new org.apache.flink.util.TernaryBoolean;

        specialinvoke $r0.<org.apache.flink.util.TernaryBoolean: void <init>(java.lang.String,int)>("TRUE", 0);

        <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE> = $r0;

        $r1 = new org.apache.flink.util.TernaryBoolean;

        specialinvoke $r1.<org.apache.flink.util.TernaryBoolean: void <init>(java.lang.String,int)>("FALSE", 1);

        <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE> = $r1;

        $r2 = new org.apache.flink.util.TernaryBoolean;

        specialinvoke $r2.<org.apache.flink.util.TernaryBoolean: void <init>(java.lang.String,int)>("UNDEFINED", 2);

        <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED> = $r2;

        $r3 = newarray (org.apache.flink.util.TernaryBoolean)[3];

        $r4 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        $r3[0] = $r4;

        $r5 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

        $r3[1] = $r5;

        $r6 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED>;

        $r3[2] = $r6;

        <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean[] $VALUES> = $r3;

        return;
    }
}
