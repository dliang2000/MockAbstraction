public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers;
    protected final java.util.HashMap _incompleteDeserializers;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: void <init>(int)>(2000);

        return;
    }

    public void <init>(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        int i0, i1, $i2;
        java.util.HashMap $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(8);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers> = $r1;

        $i2 = i0 >> 2;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(64, $i2);

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap: void <init>(int,int)>(i1, i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers> = $r2;

        return;
    }

    java.lang.Object writeReplace()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        return r0;
    }

    public int cachedDeserializersCount()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers>;

        $i0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap: int size()>();

        return $i0;
    }

    public void flushCachedDeserializers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers>;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap: void clear()>();

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r3);

        if r4 != null goto label1;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r3);

        if r4 != null goto label1;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r3);

     label1:
        return r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer r4, $r6;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ResolvableDeserializer $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r3);

        if r4 != null goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r3);

        return $r6;

     label1:
        $z0 = r4 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ResolvableDeserializer;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ResolvableDeserializer) r4;

        interfaceinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ResolvableDeserializer: void resolve(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

     label2:
        return r4;
    }

    public boolean hasValueDeserializerFor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r3);

        if r4 != null goto label1;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r3);

     label1:
        if r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap $r2;
        java.lang.Object $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null JavaType passed");

        throw $r5;

     label1:
        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: boolean _hasCustomHandlers(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) $r3;

        return $r4;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        int i0, $i1, $i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r5, r18, r19;
        java.util.HashMap $r8, $r9, $r10, $r11, $r12, $r16, $r17;
        java.lang.Object $r13;
        java.lang.Throwable $r14, $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        entermonitor $r8;

     label01:
        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r3);

        if r18 == null goto label03;

        exitmonitor $r8;

     label02:
        return r18;

     label03:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        i0 = virtualinvoke $r9.<java.util.HashMap: int size()>();

        if i0 <= 0 goto label05;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r19 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) $r13;

        if r19 == null goto label05;

        exitmonitor $r8;

     label04:
        return r19;

     label05:
        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r3);

     label06:
        if i0 != 0 goto label07;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        $i1 = virtualinvoke $r10.<java.util.HashMap: int size()>();

        if $i1 <= 0 goto label07;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        virtualinvoke $r11.<java.util.HashMap: void clear()>();

     label07:
        exitmonitor $r8;

     label08:
        return r5;

     label09:
        $r15 := @caughtexception;

     label10:
        if i0 != 0 goto label11;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        $i2 = virtualinvoke $r16.<java.util.HashMap: int size()>();

        if $i2 <= 0 goto label11;

        $r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        virtualinvoke $r17.<java.util.HashMap: void clear()>();

     label11:
        throw $r15;

     label12:
        $r14 := @caughtexception;

        exitmonitor $r8;

     label13:
        throw $r14;

        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label08 with label12;
        catch java.lang.Throwable from label09 to label13 with label12;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r4;
        boolean $z0, $z1, $z2, z3, $z4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap $r5;
        java.util.HashMap $r7, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ResolvableDeserializer $r9;
        java.lang.IllegalArgumentException $r12;
        java.lang.String $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

     label1:
        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r3);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>($r12);

        $r14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Throwable)>(r1, $r13, $r12);

        throw $r14;

     label4:
        if r4 != null goto label5;

        return null;

     label5:
        $z0 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: boolean _hasCustomHandlers(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r3);

        if $z0 != 0 goto label6;

        $z1 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: boolean isCachable()>();

        if $z1 == 0 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        z3 = $z2;

        $z4 = r4 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ResolvableDeserializer;

        if $z4 == 0 goto label8;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        $r9 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ResolvableDeserializer) r4;

        interfaceinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ResolvableDeserializer: void resolve(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r3);

     label8:
        if z3 == 0 goto label9;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.LRUMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

     label9:
        return r4;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r4, $r13, $r14, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r5, r8, r16;
        java.lang.Class r6, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter r7;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass $r9, $r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory;

        r16 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();

        $z0 = virtualinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isAbstract()>();

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isCollectionLikeType()>();

        if $z3 == 0 goto label2;

     label1:
        r16 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType mapAbstractType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r3, r16);

     label2:
        r17 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspect(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r16);

        $r18 = virtualinvoke r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r1, $r18);

        if r4 == null goto label3;

        return r4;

     label3:
        $r9 = virtualinvoke r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, $r9, r16);

        if r5 == r16 goto label4;

        r16 = r5;

        r17 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspect(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r5);

     label4:
        r6 = virtualinvoke r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: java.lang.Class findPOJOBuilder()>();

        if r6 == null goto label5;

        $r15 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,java.lang.Class)>(r1, r16, r17, r6);

        return $r15;

     label5:
        r7 = virtualinvoke r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter findDeserializationConverter()>();

        if r7 != null goto label6;

        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer2(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r2, r16, r17);

        return $r14;

     label6:
        $r10 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        r8 = interfaceinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getInputType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>($r10);

        $r11 = virtualinvoke r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z1 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>($r11);

        if $z1 != 0 goto label7;

        r17 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspect(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r8);

     label7:
        $r12 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer2(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r2, r8, r17);

        specialinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>(r7, r8, $r13);

        return $r12;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer2(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Class $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r8, $r9, $r11, $r14, $r16, $r19, $r21, $r23, $r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape $r12, $r13, $r17, $r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType $r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType $r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r25, r27;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType r28;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isEnumType()>();

        if $z0 == 0 goto label1;

        $r24 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r3, r4);

        return $r24;

     label1:
        $z1 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z1 == 0 goto label6;

        $z3 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isArrayType()>();

        if $z3 == 0 goto label2;

        $r22 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType) r3;

        $r23 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ArrayType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, $r22, r4);

        return $r23;

     label2:
        $z4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();

        if $z4 == 0 goto label4;

        r25 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);

        $r17 = virtualinvoke r25.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();

        $r18 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;

        if $r17 == $r18 goto label4;

        r26 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType) r3;

        $z7 = r26 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType;

        if $z7 == 0 goto label3;

        $r20 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType) r26;

        $r21 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, $r20, r4);

        return $r21;

     label3:
        $r19 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r26, r4);

        return $r19;

     label4:
        $z5 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isCollectionLikeType()>();

        if $z5 == 0 goto label6;

        r27 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);

        $r12 = virtualinvoke r27.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;

        if $r12 == $r13 goto label6;

        r28 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType) r3;

        $z6 = r28 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType;

        if $z6 == 0 goto label5;

        $r15 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType) r28;

        $r16 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, $r15, r4);

        return $r16;

     label5:
        $r14 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionLikeType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r28, r4);

        return $r14;

     label6:
        $z8 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();

        if $z8 == 0 goto label7;

        $r10 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType) r3;

        $r11 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createReferenceDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.ReferenceType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, $r10, r4);

        return $r11;

     label7:
        $r6 = class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonNode;";

        $r7 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z2 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z2 == 0 goto label8;

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r5, r3, r4);

        return $r9;

     label8:
        $r8 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription)>(r1, r3, r4);

        return $r8;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r2;
        java.lang.Object r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        r3 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r2);

        if r3 != null goto label1;

        return null;

     label1:
        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(r2, r3);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>(r1, r2, r4);

        return $r6;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter findConverter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r1, r2);

        if r4 != null goto label1;

        return r3;

     label1:
        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        r5 = interfaceinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getInputType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>($r6);

        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>(r4, r5, r3);

        return $r7;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter findConverter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r2;
        java.lang.Object r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        r3 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findDeserializationConverter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r2);

        if r3 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter converterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(r2, r3);

        return $r5;
    }

    private org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r3;
        java.lang.Class r4;
        boolean $z0, $z1;
        java.lang.Object $r5, $r6, r10, r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r8, r9, r12, r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        r8 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        if r3 != null goto label1;

        return r8;

     label1:
        $z0 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();

        if $z0 == 0 goto label2;

        r9 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getKeyType()>();

        if r9 == null goto label2;

        $r6 = virtualinvoke r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();

        if $r6 != null goto label2;

        r10 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findKeyDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r2);

        if r10 == null goto label2;

        r11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(r2, r10);

        if r11 == null goto label2;

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType) r8;

        r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object)>(r11);

     label2:
        r12 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        if r12 == null goto label5;

        $r5 = virtualinvoke r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();

        if $r5 != null goto label5;

        r13 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findContentDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r2);

        if r13 == null goto label5;

        r14 = null;

        $z1 = r13 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        if $z1 == 0 goto label3;

        r14 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) r13;

        goto label4;

     label3:
        r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: java.lang.Class _verifyAsClass(java.lang.Object,java.lang.String,java.lang.Class)>(r13, "findContentDeserializer", class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonDeserializer$None;");

        if r4 == null goto label4;

        r14 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(r2, r4);

     label4:
        if r14 == null goto label5;

        r8 = virtualinvoke r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object)>(r14);

     label5:
        $r15 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();

        r16 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType refineDeserializationType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r15, r2, r8);

        return r16;
    }

    private boolean _hasCustomHandlers(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r2, r3;
        boolean $z0, $z1;
        java.lang.Object $r4, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z0 == 0 goto label3;

        r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        if r2 == null goto label2;

        $r5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();

        if $r5 != null goto label1;

        $r6 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Object getTypeHandler()>();

        if $r6 == null goto label2;

     label1:
        return 1;

     label2:
        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();

        if $z1 == 0 goto label3;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getKeyType()>();

        $r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();

        if $r4 == null goto label3;

        return 1;

     label3:
        return 0;
    }

    private java.lang.Class _verifyAsClass(java.lang.Object, java.lang.String, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        java.lang.Object r1;
        java.lang.String r2, $r11, $r14;
        java.lang.Class r3, r4, $r10;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r12, $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = r1 instanceof java.lang.Class;

        if $z0 != 0 goto label2;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnnotationIntrospector.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() returned value of type ");

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": expected type JsonSerializer or Class<JsonSerializer> instead");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r5;

     label2:
        r4 = (java.lang.Class) r1;

        if r4 == r3 goto label3;

        $z1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isBogusClass(java.lang.Class)>(r4);

        if $z1 == 0 goto label4;

     label3:
        return null;

     label4:
        return r4;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        java.lang.Class r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r12;
        java.lang.String $r7, $r13;
        java.lang.Object $r8, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r9, $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isConcrete(java.lang.Class)>(r3);

        if $z0 != 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find a Value deserializer for abstract type ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r2, $r13);

        $r15 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) $r14;

        return $r15;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find a Value deserializer for type ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r2, $r7);

        $r9 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer) $r8;

        return $r9;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.Object $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find a (Map) Key deserializer for type ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r2, $r6);

        $r8 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.KeyDeserializer) $r7;

        return $r8;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.DeserializerCache: long serialVersionUID> = 1L;

        return;
    }
}
