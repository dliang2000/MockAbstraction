final enum class org.powermock.configuration.support.ConfigurationMapper$PropertyWriter$2 extends org.powermock.configuration.support.ConfigurationMapper$PropertyWriter
{

    void <init>(java.lang.String, int)
    {
        org.powermock.configuration.support.ConfigurationMapper$PropertyWriter$2 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.powermock.configuration.support.ConfigurationMapper$PropertyWriter$2;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.powermock.configuration.support.ConfigurationMapper$PropertyWriter: void <init>(java.lang.String,int,org.powermock.configuration.support.ConfigurationMapper$1)>(r1, i0, null);

        return;
    }

    public void writeProperty(java.beans.PropertyDescriptor, java.lang.Object, java.lang.String)
    {
        org.powermock.configuration.support.ConfigurationMapper$PropertyWriter$2 r0;
        java.beans.PropertyDescriptor r1;
        java.lang.Object r2;
        java.lang.String r3;
        java.lang.reflect.Method $r5;
        java.lang.Object[] $r6;
        java.lang.Exception $r8;
        org.powermock.PowerMockInternalException $r9;

        r0 := @this: org.powermock.configuration.support.ConfigurationMapper$PropertyWriter$2;

        r1 := @parameter0: java.beans.PropertyDescriptor;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

     label1:
        if r3 == null goto label2;

        $r5 = virtualinvoke r1.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r3;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r6);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.powermock.PowerMockInternalException;

        specialinvoke $r9.<org.powermock.PowerMockInternalException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
