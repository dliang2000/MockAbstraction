final class org.hamcrest.Condition$Matched extends org.hamcrest.Condition
{
    private final java.lang.Object theValue;
    private final org.hamcrest.Description mismatch;

    private void <init>(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.Condition$Matched r0;
        java.lang.Object r1;
        org.hamcrest.Description r2;

        r0 := @this: org.hamcrest.Condition$Matched;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        specialinvoke r0.<org.hamcrest.Condition: void <init>(org.hamcrest.Condition$1)>(null);

        r0.<org.hamcrest.Condition$Matched: java.lang.Object theValue> = r1;

        r0.<org.hamcrest.Condition$Matched: org.hamcrest.Description mismatch> = r2;

        return;
    }

    public boolean matching(org.hamcrest.Matcher, java.lang.String)
    {
        org.hamcrest.Condition$Matched r0;
        org.hamcrest.Matcher r1;
        java.lang.String r2;
        java.lang.Object $r3, $r7;
        boolean $z0;
        org.hamcrest.Description $r4, $r6;

        r0 := @this: org.hamcrest.Condition$Matched;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.hamcrest.Condition$Matched: java.lang.Object theValue>;

        $z0 = interfaceinvoke r1.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r4 = r0.<org.hamcrest.Condition$Matched: org.hamcrest.Description mismatch>;

        interfaceinvoke $r4.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(r2);

        $r7 = r0.<org.hamcrest.Condition$Matched: java.lang.Object theValue>;

        $r6 = r0.<org.hamcrest.Condition$Matched: org.hamcrest.Description mismatch>;

        interfaceinvoke r1.<org.hamcrest.Matcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>($r7, $r6);

        return 0;
    }

    public org.hamcrest.Condition and(org.hamcrest.Condition$Step)
    {
        org.hamcrest.Condition$Matched r0;
        org.hamcrest.Condition$Step r1;
        org.hamcrest.Description $r2;
        java.lang.Object $r3;
        org.hamcrest.Condition $r4;

        r0 := @this: org.hamcrest.Condition$Matched;

        r1 := @parameter0: org.hamcrest.Condition$Step;

        $r3 = r0.<org.hamcrest.Condition$Matched: java.lang.Object theValue>;

        $r2 = r0.<org.hamcrest.Condition$Matched: org.hamcrest.Description mismatch>;

        $r4 = interfaceinvoke r1.<org.hamcrest.Condition$Step: org.hamcrest.Condition apply(java.lang.Object,org.hamcrest.Description)>($r3, $r2);

        return $r4;
    }

    void <init>(java.lang.Object, org.hamcrest.Description, org.hamcrest.Condition$1)
    {
        org.hamcrest.Condition$Matched r0;
        java.lang.Object r1;
        org.hamcrest.Description r2;
        org.hamcrest.Condition$1 r3;

        r0 := @this: org.hamcrest.Condition$Matched;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        r3 := @parameter2: org.hamcrest.Condition$1;

        specialinvoke r0.<org.hamcrest.Condition$Matched: void <init>(java.lang.Object,org.hamcrest.Description)>(r1, r2);

        return;
    }
}
