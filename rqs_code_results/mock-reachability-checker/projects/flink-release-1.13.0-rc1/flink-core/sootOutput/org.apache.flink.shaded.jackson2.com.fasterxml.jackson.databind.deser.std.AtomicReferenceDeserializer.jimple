public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer
{
    private static final long serialVersionUID;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>(r1, r2, r3, r4);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _fullType>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>($r5, $r4, r1, r2);

        return $r3;
    }

    public java.util.concurrent.atomic.AtomicReference getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = new java.util.concurrent.atomic.AtomicReference;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r4);

        return $r2;
    }

    public java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.util.concurrent.atomic.AtomicReference $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: java.util.concurrent.atomic.AtomicReference getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r2;
    }

    public java.util.concurrent.atomic.AtomicReference referenceValue(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0;
        java.lang.Object r1;
        java.util.concurrent.atomic.AtomicReference $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(r1);

        return $r2;
    }

    public java.lang.Object getReferenced(java.util.concurrent.atomic.AtomicReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0;
        java.util.concurrent.atomic.AtomicReference r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        $r2 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        return $r2;
    }

    public java.util.concurrent.atomic.AtomicReference updateReference(java.util.concurrent.atomic.AtomicReference, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0;
        java.util.concurrent.atomic.AtomicReference r1;
        java.lang.Object r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r2);

        return r1;
    }

    public java.lang.Boolean supportsUpdate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r1;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r2;
    }

    public volatile java.lang.Object getReferenced(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0;
        java.lang.Object r1, $r3;
        java.util.concurrent.atomic.AtomicReference $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.concurrent.atomic.AtomicReference) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: java.lang.Object getReferenced(java.util.concurrent.atomic.AtomicReference)>($r2);

        return $r3;
    }

    public volatile java.lang.Object updateReference(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0;
        java.lang.Object r1, r2;
        java.util.concurrent.atomic.AtomicReference $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.concurrent.atomic.AtomicReference) r1;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: java.util.concurrent.atomic.AtomicReference updateReference(java.util.concurrent.atomic.AtomicReference,java.lang.Object)>($r3, r2);

        return $r4;
    }

    public volatile java.lang.Object referenceValue(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0;
        java.lang.Object r1;
        java.util.concurrent.atomic.AtomicReference $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: java.util.concurrent.atomic.AtomicReference referenceValue(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.util.concurrent.atomic.AtomicReference $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: java.util.concurrent.atomic.AtomicReference getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer r0, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer)>(r1, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: long serialVersionUID> = 1L;

        return;
    }
}
