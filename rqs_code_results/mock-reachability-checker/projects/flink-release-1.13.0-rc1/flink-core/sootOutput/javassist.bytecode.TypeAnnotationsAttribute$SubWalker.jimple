class javassist.bytecode.TypeAnnotationsAttribute$SubWalker extends java.lang.Object
{
    byte[] info;

    void <init>(byte[])
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        byte[] r1;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info> = r1;

        return;
    }

    final int targetInfo(int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i13, $i15, $i16, $i18, i20, i24, i25, i26, i27, i28;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        byte $b3, $b10, $b12, $b14, $b17;
        java.lang.RuntimeException $r12;
        java.lang.StringBuilder $r13, $r14, $r15;
        java.lang.String $r16;
        short s19, s21, s22, s23, s29;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        tableswitch(i1)
        {
            case 0: goto label01;
            case 1: goto label01;
            case 2: goto label11;
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label11;
            case 6: goto label11;
            case 7: goto label11;
            case 8: goto label11;
            case 9: goto label11;
            case 10: goto label11;
            case 11: goto label11;
            case 12: goto label11;
            case 13: goto label11;
            case 14: goto label11;
            case 15: goto label11;
            case 16: goto label02;
            case 17: goto label03;
            case 18: goto label03;
            case 19: goto label04;
            case 20: goto label04;
            case 21: goto label04;
            case 22: goto label05;
            case 23: goto label06;
            case 24: goto label11;
            case 25: goto label11;
            case 26: goto label11;
            case 27: goto label11;
            case 28: goto label11;
            case 29: goto label11;
            case 30: goto label11;
            case 31: goto label11;
            case 32: goto label11;
            case 33: goto label11;
            case 34: goto label11;
            case 35: goto label11;
            case 36: goto label11;
            case 37: goto label11;
            case 38: goto label11;
            case 39: goto label11;
            case 40: goto label11;
            case 41: goto label11;
            case 42: goto label11;
            case 43: goto label11;
            case 44: goto label11;
            case 45: goto label11;
            case 46: goto label11;
            case 47: goto label11;
            case 48: goto label11;
            case 49: goto label11;
            case 50: goto label11;
            case 51: goto label11;
            case 52: goto label11;
            case 53: goto label11;
            case 54: goto label11;
            case 55: goto label11;
            case 56: goto label11;
            case 57: goto label11;
            case 58: goto label11;
            case 59: goto label11;
            case 60: goto label11;
            case 61: goto label11;
            case 62: goto label11;
            case 63: goto label11;
            case 64: goto label07;
            case 65: goto label07;
            case 66: goto label08;
            case 67: goto label09;
            case 68: goto label09;
            case 69: goto label09;
            case 70: goto label09;
            case 71: goto label10;
            case 72: goto label10;
            case 73: goto label10;
            case 74: goto label10;
            case 75: goto label10;
            default: goto label11;
        };

     label01:
        $r11 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        $b17 = $r11[i0];

        s19 = $b17 & 255;

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: void typeParameterTarget(int,int,int)>(i0, i1, s19);

        $i18 = i0 + 1;

        return $i18;

     label02:
        $r10 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        i20 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r10, i0);

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: void supertypeTarget(int,int)>(i0, i20);

        $i16 = i0 + 2;

        return $i16;

     label03:
        $r8 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        $b12 = $r8[i0];

        s21 = $b12 & 255;

        $r9 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        $i13 = i0 + 1;

        $b14 = $r9[$i13];

        s22 = $b14 & 255;

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: void typeParameterBoundTarget(int,int,int,int)>(i0, i1, s21, s22);

        $i15 = i0 + 2;

        return $i15;

     label04:
        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: void emptyTarget(int,int)>(i0, i1);

        return i0;

     label05:
        $r7 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        $b10 = $r7[i0];

        s23 = $b10 & 255;

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: void formalParameterTarget(int,int)>(i0, s23);

        $i11 = i0 + 1;

        return $i11;

     label06:
        $r6 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        i24 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r6, i0);

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: void throwsTarget(int,int)>(i0, i24);

        $i9 = i0 + 2;

        return $i9;

     label07:
        $r5 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        i25 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r5, i0);

        $i7 = i0 + 2;

        $i8 = virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: int localvarTarget(int,int,int)>($i7, i1, i25);

        return $i8;

     label08:
        $r4 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        i26 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r4, i0);

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: void catchTarget(int,int)>(i0, i26);

        $i6 = i0 + 2;

        return $i6;

     label09:
        $r3 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        i27 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r3, i0);

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: void offsetTarget(int,int,int)>(i0, i1, i27);

        $i5 = i0 + 2;

        return $i5;

     label10:
        $r1 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        i28 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, i0);

        $r2 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        $i2 = i0 + 2;

        $b3 = $r2[$i2];

        s29 = $b3 & 255;

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: void typeArgumentTarget(int,int,int,int)>(i0, i1, i28, s29);

        $i4 = i0 + 3;

        return $i4;

     label11:
        $r12 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid target type: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r12;
    }

    void typeParameterTarget(int, int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1, i2;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return;
    }

    void supertypeTarget(int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    void typeParameterBoundTarget(int, int, int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1, i2, i3;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        return;
    }

    void emptyTarget(int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    void formalParameterTarget(int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    void throwsTarget(int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    int localvarTarget(int, int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1, i2, i3, i4, $i5, $i6, i7, i8;
        byte[] $r1, $r2, $r3;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i7 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i8 = 0;

     label1:
        if i8 >= i1 goto label2;

        $r1 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        i2 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, i7);

        $r2 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        $i5 = i7 + 2;

        i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r2, $i5);

        $r3 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        $i6 = i7 + 4;

        i4 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r3, $i6);

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: void localvarTarget(int,int,int,int,int)>(i7, i0, i2, i3, i4);

        i7 = i7 + 6;

        i8 = i8 + 1;

        goto label1;

     label2:
        return i7;
    }

    void localvarTarget(int, int, int, int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1, i2, i3, i4;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        return;
    }

    void catchTarget(int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    void offsetTarget(int, int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1, i2;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return;
    }

    void typeArgumentTarget(int, int, int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1, i2, i3;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        return;
    }

    final int typePath(int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        short s0;
        byte[] $r1;
        byte $b1;
        int $i2, i3, i4;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i3 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        i4 = i3 + 1;

        $b1 = $r1[i3];

        s0 = $b1 & 255;

        $i2 = virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: int typePath(int,int)>(i4, s0);

        return $i2;
    }

    int typePath(int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, $i4, i6, i7;
        short s1, s2;
        byte[] $r1, $r2;
        byte $b3, $b5;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        $r1 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        $b3 = $r1[i6];

        s1 = $b3 & 255;

        $r2 = r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: byte[] info>;

        $i4 = i6 + 1;

        $b5 = $r2[$i4];

        s2 = $b5 & 255;

        virtualinvoke r0.<javassist.bytecode.TypeAnnotationsAttribute$SubWalker: void typePath(int,int,int)>(i6, s1, s2);

        i6 = i6 + 2;

        i7 = i7 + 1;

        goto label1;

     label2:
        return i6;
    }

    void typePath(int, int, int) throws java.lang.Exception
    {
        javassist.bytecode.TypeAnnotationsAttribute$SubWalker r0;
        int i0, i1, i2;

        r0 := @this: javassist.bytecode.TypeAnnotationsAttribute$SubWalker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return;
    }
}
