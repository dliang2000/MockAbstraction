abstract class org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix extends java.lang.Object implements org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix
{
    private volatile java.lang.String[] iOtherAffixes;

    void <init>()
    {
        org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix r0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void finish(java.util.Set)
    {
        org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix r0;
        java.util.Set r1;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7;
        java.lang.String r2, r10;
        java.lang.String[] $r3, $r5, $r7, r9, r14;
        java.util.HashSet $r4;
        boolean $z0;
        java.lang.Object[] $r6;
        java.lang.Object $r8;
        java.util.Iterator r12;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix r13;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix;

        r1 := @parameter0: java.util.Set;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix: java.lang.String[] iOtherAffixes>;

        if $r3 != null goto label9;

        i4 = 2147483647;

        r9 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix: java.lang.String[] getAffixes()>();

        i5 = lengthof r9;

        i6 = 0;

     label1:
        if i6 >= i5 goto label3;

        r10 = r9[i6];

        $i3 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i3 >= i4 goto label2;

        i4 = virtualinvoke r10.<java.lang.String: int length()>();

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r12 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r8 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix) $r8;

        if r13 == null goto label7;

        r14 = interfaceinvoke r13.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: java.lang.String[] getAffixes()>();

        i0 = lengthof r14;

        i7 = 0;

     label5:
        if i7 >= i0 goto label7;

        r2 = r14[i7];

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 <= i4 goto label6;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r2);

     label6:
        i7 = i7 + 1;

        goto label5;

     label7:
        goto label4;

     label8:
        $i1 = interfaceinvoke $r4.<java.util.Set: int size()>();

        $r5 = newarray (java.lang.String)[$i1];

        $r6 = interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        r0.<org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix: java.lang.String[] iOtherAffixes> = $r7;

     label9:
        return;
    }

    protected boolean matchesOtherAffix(int, java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, r3;
        java.lang.String[] r2, $r4;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix: java.lang.String[] iOtherAffixes>;

        if $r4 == null goto label3;

        r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix: java.lang.String[] iOtherAffixes>;

        i2 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i2 goto label3;

        r3 = r2[i4];

        i3 = virtualinvoke r3.<java.lang.String: int length()>();

        if i0 >= i3 goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i1, r3, 0, i3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 0;
    }
}
