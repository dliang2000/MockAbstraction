public class org.powermock.core.transformers.javassist.StaticFinalNativeMethodMockTransformer extends org.powermock.core.transformers.javassist.MethodMockTransformer
{

    public void <init>(org.powermock.core.transformers.TransformStrategy)
    {
        org.powermock.core.transformers.javassist.StaticFinalNativeMethodMockTransformer r0;
        org.powermock.core.transformers.TransformStrategy r1;

        r0 := @this: org.powermock.core.transformers.javassist.StaticFinalNativeMethodMockTransformer;

        r1 := @parameter0: org.powermock.core.transformers.TransformStrategy;

        specialinvoke r0.<org.powermock.core.transformers.javassist.MethodMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        return;
    }

    public javassist.CtClass transform(javassist.CtClass) throws javassist.NotFoundException, javassist.CannotCompileException
    {
        org.powermock.core.transformers.javassist.StaticFinalNativeMethodMockTransformer r0;
        javassist.CtClass r1;
        javassist.CtMethod[] r2;
        int i0, i1;
        javassist.CtMethod r3;

        r0 := @this: org.powermock.core.transformers.javassist.StaticFinalNativeMethodMockTransformer;

        r1 := @parameter0: javassist.CtClass;

        r2 = virtualinvoke r1.<javassist.CtClass: javassist.CtMethod[] getDeclaredMethods()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        virtualinvoke r0.<org.powermock.core.transformers.javassist.StaticFinalNativeMethodMockTransformer: void modifyMethod(javassist.CtMethod)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }
}
