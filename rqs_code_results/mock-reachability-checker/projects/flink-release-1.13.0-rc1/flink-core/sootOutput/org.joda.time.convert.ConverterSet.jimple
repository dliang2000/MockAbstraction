class org.joda.time.convert.ConverterSet extends java.lang.Object
{
    private final org.joda.time.convert.Converter[] iConverters;
    private org.joda.time.convert.ConverterSet$Entry[] iSelectEntries;

    void <init>(org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.ConverterSet r0;
        org.joda.time.convert.Converter[] r1;
        org.joda.time.convert.ConverterSet$Entry[] $r2;

        r0 := @this: org.joda.time.convert.ConverterSet;

        r1 := @parameter0: org.joda.time.convert.Converter[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> = r1;

        $r2 = newarray (org.joda.time.convert.ConverterSet$Entry)[16];

        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries> = $r2;

        return;
    }

    org.joda.time.convert.Converter select(java.lang.Class) throws java.lang.IllegalStateException
    {
        org.joda.time.convert.ConverterSet r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, $i10, i11;
        org.joda.time.convert.Converter r1, $r8;
        org.joda.time.convert.ConverterSet$Entry[] r2, $r5, r10, r14;
        org.joda.time.convert.ConverterSet$Entry $r3, $r6, $r11, r15, $r17;
        java.lang.Object $r4;
        java.lang.Class $r7, r9, r16;

        r0 := @this: org.joda.time.convert.ConverterSet;

        r9 := @parameter0: java.lang.Class;

        r10 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries>;

        i0 = lengthof r10;

        if r9 != null goto label01;

        $i5 = 0;

        goto label02;

     label01:
        $i1 = virtualinvoke r9.<java.lang.Object: int hashCode()>();

        $i2 = i0 - 1;

        $i5 = $i1 & $i2;

     label02:
        i6 = $i5;

     label03:
        $r11 = r10[i6];

        if $r11 == null goto label05;

        $r7 = $r11.<org.joda.time.convert.ConverterSet$Entry: java.lang.Class iType>;

        if $r7 != r9 goto label04;

        $r8 = $r11.<org.joda.time.convert.ConverterSet$Entry: org.joda.time.convert.Converter iConverter>;

        return $r8;

     label04:
        i6 = i6 + 1;

        if i6 < i0 goto label03;

        i6 = 0;

        goto label03;

     label05:
        r1 = staticinvoke <org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)>(r0, r9);

        $r3 = new org.joda.time.convert.ConverterSet$Entry;

        specialinvoke $r3.<org.joda.time.convert.ConverterSet$Entry: void <init>(java.lang.Class,org.joda.time.convert.Converter)>(r9, r1);

        $r4 = virtualinvoke r10.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (org.joda.time.convert.ConverterSet$Entry[]) $r4;

        r14 = (org.joda.time.convert.ConverterSet$Entry[]) $r5;

        r14[i6] = $r3;

        i7 = 0;

     label06:
        if i7 >= i0 goto label08;

        $r6 = r14[i7];

        if $r6 != null goto label07;

        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries> = r14;

        return r1;

     label07:
        i7 = i7 + 1;

        goto label06;

     label08:
        i8 = i0 << 1;

        r2 = newarray (org.joda.time.convert.ConverterSet$Entry)[i8];

        i9 = 0;

     label09:
        if i9 >= i0 goto label14;

        r15 = r14[i9];

        r16 = r15.<org.joda.time.convert.ConverterSet$Entry: java.lang.Class iType>;

        if r16 != null goto label10;

        $i10 = 0;

        goto label11;

     label10:
        $i3 = virtualinvoke r16.<java.lang.Object: int hashCode()>();

        $i4 = i8 - 1;

        $i10 = $i3 & $i4;

     label11:
        i11 = $i10;

     label12:
        $r17 = r2[i11];

        if $r17 == null goto label13;

        i11 = i11 + 1;

        if i11 < i8 goto label12;

        i11 = 0;

        goto label12;

     label13:
        r2[i11] = r15;

        i9 = i9 + 1;

        goto label09;

     label14:
        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries> = r2;

        return r1;
    }

    int size()
    {
        org.joda.time.convert.ConverterSet r0;
        org.joda.time.convert.Converter[] $r1;
        int $i0;

        r0 := @this: org.joda.time.convert.ConverterSet;

        $r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i0 = lengthof $r1;

        return $i0;
    }

    void copyInto(org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.ConverterSet r0;
        org.joda.time.convert.Converter[] r1, $r2, $r3;
        int $i0;

        r0 := @this: org.joda.time.convert.ConverterSet;

        r1 := @parameter0: org.joda.time.convert.Converter[];

        $r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $r2 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i0);

        return;
    }

    org.joda.time.convert.ConverterSet add(org.joda.time.convert.Converter, org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.ConverterSet r0, $r6, $r9;
        org.joda.time.convert.Converter r1, r4, $r10;
        org.joda.time.convert.Converter[] r2, r3, r5, r11;
        int i0, $i1, i2, i3;
        boolean $z0;
        java.lang.Class $r7, $r8;

        r0 := @this: org.joda.time.convert.ConverterSet;

        r1 := @parameter0: org.joda.time.convert.Converter;

        r2 := @parameter1: org.joda.time.convert.Converter[];

        r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        i0 = lengthof r3;

        i2 = 0;

     label01:
        if i2 >= i0 goto label10;

        r4 = r3[i2];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label03;

        if r2 == null goto label02;

        r2[0] = null;

     label02:
        return r0;

     label03:
        $r7 = interfaceinvoke r1.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        $r8 = interfaceinvoke r4.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        if $r7 != $r8 goto label09;

        r5 = newarray (org.joda.time.convert.Converter)[i0];

        i3 = 0;

     label04:
        if i3 >= i0 goto label07;

        if i3 == i2 goto label05;

        $r10 = r3[i3];

        r5[i3] = $r10;

        goto label06;

     label05:
        r5[i3] = r1;

     label06:
        i3 = i3 + 1;

        goto label04;

     label07:
        if r2 == null goto label08;

        r2[0] = r4;

     label08:
        $r9 = new org.joda.time.convert.ConverterSet;

        specialinvoke $r9.<org.joda.time.convert.ConverterSet: void <init>(org.joda.time.convert.Converter[])>(r5);

        return $r9;

     label09:
        i2 = i2 + 1;

        goto label01;

     label10:
        $i1 = i0 + 1;

        r11 = newarray (org.joda.time.convert.Converter)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r11, 0, i0);

        r11[i0] = r1;

        if r2 == null goto label11;

        r2[0] = null;

     label11:
        $r6 = new org.joda.time.convert.ConverterSet;

        specialinvoke $r6.<org.joda.time.convert.ConverterSet: void <init>(org.joda.time.convert.Converter[])>(r11);

        return $r6;
    }

    org.joda.time.convert.ConverterSet remove(org.joda.time.convert.Converter, org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.ConverterSet r0, $r5;
        org.joda.time.convert.Converter r1, $r4;
        org.joda.time.convert.Converter[] r2, r3;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.joda.time.convert.ConverterSet;

        r1 := @parameter0: org.joda.time.convert.Converter;

        r2 := @parameter1: org.joda.time.convert.Converter[];

        r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r3[i1];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet remove(int,org.joda.time.convert.Converter[])>(i1, r2);

        return $r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if r2 == null goto label4;

        r2[0] = null;

     label4:
        return r0;
    }

    org.joda.time.convert.ConverterSet remove(int, org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.ConverterSet r0, $r4;
        int i0, i1, $i2, $i3, i4, i5;
        org.joda.time.convert.Converter[] r1, r2, r3;
        org.joda.time.convert.Converter $r5, $r6;
        java.lang.IndexOutOfBoundsException $r7;

        r0 := @this: org.joda.time.convert.ConverterSet;

        i0 := @parameter0: int;

        r1 := @parameter1: org.joda.time.convert.Converter[];

        r2 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        i1 = lengthof r2;

        if i0 < i1 goto label1;

        $r7 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r7;

     label1:
        if r1 == null goto label2;

        $r6 = r2[i0];

        r1[0] = $r6;

     label2:
        $i2 = i1 - 1;

        r3 = newarray (org.joda.time.convert.Converter)[$i2];

        i4 = 0;

        i5 = 0;

     label3:
        if i5 >= i1 goto label5;

        if i5 == i0 goto label4;

        $i3 = i4;

        i4 = i4 + 1;

        $r5 = r2[i5];

        r3[$i3] = $r5;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        $r4 = new org.joda.time.convert.ConverterSet;

        specialinvoke $r4.<org.joda.time.convert.ConverterSet: void <init>(org.joda.time.convert.Converter[])>(r3);

        return $r4;
    }

    private static org.joda.time.convert.Converter selectSlow(org.joda.time.convert.ConverterSet, java.lang.Class)
    {
        java.lang.Class r0, $r8, $r17, r22, r24, r27;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r7, $r9, $r28;
        java.lang.IllegalStateException $r6;
        org.joda.time.convert.Converter $r15, $r16, $r18, r21, r23, r26;
        boolean $z0, $z1;
        org.joda.time.convert.ConverterSet r19;
        org.joda.time.convert.Converter[] r20;
        int i0, i1, i2, i3, i4;

        r19 := @parameter0: org.joda.time.convert.ConverterSet;

        r0 := @parameter1: java.lang.Class;

        r20 = r19.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        i0 = lengthof r20;

        i1 = i0;

     label01:
        i1 = i1 + -1;

        if i1 < 0 goto label05;

        r21 = r20[i1];

        r22 = interfaceinvoke r21.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        if r22 != r0 goto label02;

        return r21;

     label02:
        if r22 == null goto label03;

        if r0 == null goto label04;

        $z1 = virtualinvoke r22.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 != 0 goto label04;

     label03:
        r19 = virtualinvoke r19.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet remove(int,org.joda.time.convert.Converter[])>(i1, null);

        r20 = r19.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        i0 = lengthof r20;

     label04:
        goto label01;

     label05:
        if r0 == null goto label06;

        if i0 != 0 goto label07;

     label06:
        return null;

     label07:
        if i0 != 1 goto label08;

        $r18 = r20[0];

        return $r18;

     label08:
        i2 = i0;

     label09:
        i2 = i2 + -1;

        if i2 < 0 goto label12;

        r23 = r20[i2];

        r24 = interfaceinvoke r23.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        i3 = i0;

     label10:
        i3 = i3 + -1;

        if i3 < 0 goto label11;

        if i3 == i2 goto label10;

        $r16 = r20[i3];

        $r17 = interfaceinvoke $r16.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        $z0 = virtualinvoke $r17.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r24);

        if $z0 == 0 goto label10;

        r19 = virtualinvoke r19.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet remove(int,org.joda.time.convert.Converter[])>(i3, null);

        r20 = r19.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        i0 = lengthof r20;

        i2 = i0 - 1;

        goto label10;

     label11:
        goto label09;

     label12:
        if i0 != 1 goto label13;

        $r15 = r20[0];

        return $r15;

     label13:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find best converter for type \"");

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" from remaining set: ");

        i4 = 0;

     label14:
        if i4 >= i0 goto label17;

        r26 = r20[i4];

        r27 = interfaceinvoke r26.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        $r8 = virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        if r27 != null goto label15;

        $r28 = null;

        goto label16;

     label15:
        $r28 = virtualinvoke r27.<java.lang.Class: java.lang.String getName()>();

     label16:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ");

        i4 = i4 + 1;

        goto label14;

     label17:
        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }
}
