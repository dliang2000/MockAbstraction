public class org.apache.flink.api.common.state.ListStateDescriptor extends org.apache.flink.api.common.state.StateDescriptor
{
    private static final long serialVersionUID;

    public void <init>(java.lang.String, java.lang.Class)
    {
        org.apache.flink.api.common.state.ListStateDescriptor r0;
        java.lang.String r1;
        java.lang.Class r2;
        org.apache.flink.api.java.typeutils.ListTypeInfo $r3;

        r0 := @this: org.apache.flink.api.common.state.ListStateDescriptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = new org.apache.flink.api.java.typeutils.ListTypeInfo;

        specialinvoke $r3.<org.apache.flink.api.java.typeutils.ListTypeInfo: void <init>(java.lang.Class)>(r2);

        specialinvoke r0.<org.apache.flink.api.common.state.StateDescriptor: void <init>(java.lang.String,org.apache.flink.api.common.typeinfo.TypeInformation,java.lang.Object)>(r1, $r3, null);

        return;
    }

    public void <init>(java.lang.String, org.apache.flink.api.common.typeinfo.TypeInformation)
    {
        org.apache.flink.api.common.state.ListStateDescriptor r0;
        java.lang.String r1;
        org.apache.flink.api.common.typeinfo.TypeInformation r2;
        org.apache.flink.api.java.typeutils.ListTypeInfo $r3;

        r0 := @this: org.apache.flink.api.common.state.ListStateDescriptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.api.common.typeinfo.TypeInformation;

        $r3 = new org.apache.flink.api.java.typeutils.ListTypeInfo;

        specialinvoke $r3.<org.apache.flink.api.java.typeutils.ListTypeInfo: void <init>(org.apache.flink.api.common.typeinfo.TypeInformation)>(r2);

        specialinvoke r0.<org.apache.flink.api.common.state.StateDescriptor: void <init>(java.lang.String,org.apache.flink.api.common.typeinfo.TypeInformation,java.lang.Object)>(r1, $r3, null);

        return;
    }

    public void <init>(java.lang.String, org.apache.flink.api.common.typeutils.TypeSerializer)
    {
        org.apache.flink.api.common.state.ListStateDescriptor r0;
        java.lang.String r1;
        org.apache.flink.api.common.typeutils.TypeSerializer r2;
        org.apache.flink.api.common.typeutils.base.ListSerializer $r3;

        r0 := @this: org.apache.flink.api.common.state.ListStateDescriptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.api.common.typeutils.TypeSerializer;

        $r3 = new org.apache.flink.api.common.typeutils.base.ListSerializer;

        specialinvoke $r3.<org.apache.flink.api.common.typeutils.base.ListSerializer: void <init>(org.apache.flink.api.common.typeutils.TypeSerializer)>(r2);

        specialinvoke r0.<org.apache.flink.api.common.state.StateDescriptor: void <init>(java.lang.String,org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Object)>(r1, $r3, null);

        return;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer getElementSerializer()
    {
        org.apache.flink.api.common.state.ListStateDescriptor r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r1, $r3;
        boolean $z0;
        org.apache.flink.api.common.typeutils.base.ListSerializer $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.apache.flink.api.common.state.ListStateDescriptor;

        r1 = virtualinvoke r0.<org.apache.flink.api.common.state.ListStateDescriptor: org.apache.flink.api.common.typeutils.TypeSerializer getSerializer()>();

        $z0 = r1 instanceof org.apache.flink.api.common.typeutils.base.ListSerializer;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label1:
        $r2 = (org.apache.flink.api.common.typeutils.base.ListSerializer) r1;

        $r3 = virtualinvoke $r2.<org.apache.flink.api.common.typeutils.base.ListSerializer: org.apache.flink.api.common.typeutils.TypeSerializer getElementSerializer()>();

        return $r3;
    }

    public org.apache.flink.api.common.state.StateDescriptor$Type getType()
    {
        org.apache.flink.api.common.state.ListStateDescriptor r0;
        org.apache.flink.api.common.state.StateDescriptor$Type $r1;

        r0 := @this: org.apache.flink.api.common.state.ListStateDescriptor;

        $r1 = <org.apache.flink.api.common.state.StateDescriptor$Type: org.apache.flink.api.common.state.StateDescriptor$Type LIST>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.state.ListStateDescriptor: long serialVersionUID> = 2L;

        return;
    }
}
