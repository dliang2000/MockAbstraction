public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode
{
    protected final double _value;

    public void <init>(double)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double d0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value> = d0;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode valueOf(double)
    {
        double d0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode $r0;

        d0 := @parameter0: double;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: void <init>(double)>(d0);

        return $r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken asToken()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType numberType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE>;

        return $r1;
    }

    public boolean isFloatingPointNumber()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        return 1;
    }

    public boolean isDouble()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        return 1;
    }

    public boolean canConvertToInt()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0, $d1;
        byte $b0, $b1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $b0 = $d0 cmpl -2.147483648E9;

        if $b0 < 0 goto label1;

        $d1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $b1 = $d1 cmpg 2.147483647E9;

        if $b1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canConvertToLong()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0, $d1;
        byte $b0, $b1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $b0 = $d0 cmpl -9.223372036854776E18;

        if $b0 < 0 goto label1;

        $d1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $b1 = $d1 cmpg 9.223372036854776E18;

        if $b1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canConvertToExactIntegral()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0, $z1, $z2;
        byte $b0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $d1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d1);

        if $z1 != 0 goto label1;

        $d3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $d2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $d4 = staticinvoke <java.lang.Math: double rint(double)>($d2);

        $b0 = $d3 cmpl $d4;

        if $b0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.Number numberValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0;
        java.lang.Double $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r1;
    }

    public short shortValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0;
        int $i0;
        short $s1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $i0 = (int) $d0;

        $s1 = (short) $i0;

        return $s1;
    }

    public int intValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $i0 = (int) $d0;

        return $i0;
    }

    public long longValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0;
        long $l0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $l0 = (long) $d0;

        return $l0;
    }

    public float floatValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0;
        float $f0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $f0 = (float) $d0;

        return $f0;
    }

    public double doubleValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        return $d0;
    }

    public java.math.BigDecimal decimalValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0;
        java.math.BigDecimal $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $r1 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($d0);

        return $r1;
    }

    public java.math.BigInteger bigIntegerValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        java.math.BigDecimal $r1;
        java.math.BigInteger $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: java.math.BigDecimal decimalValue()>();

        $r2 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigInteger toBigInteger()>();

        return $r2;
    }

    public java.lang.String asText()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(double)>($d0);

        return $r1;
    }

    public boolean isNaN()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        double $d0, $d1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $d1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public final void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r2;
        double $d0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(double)>($d0);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0, $r2;
        java.lang.Object r1;
        double d0, $d1;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        if $z0 == 0 goto label5;

        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode) r1;

        d0 = $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $d1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, d0);

        if $i0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode r0;
        long l0, $l1;
        double $d0;
        int $i2, $i3, $i4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode;

        $d0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.DoubleNode: double _value>;

        l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i3 = (int) l0;

        $l1 = l0 >> 32;

        $i2 = (int) $l1;

        $i4 = $i3 ^ $i2;

        return $i4;
    }
}
