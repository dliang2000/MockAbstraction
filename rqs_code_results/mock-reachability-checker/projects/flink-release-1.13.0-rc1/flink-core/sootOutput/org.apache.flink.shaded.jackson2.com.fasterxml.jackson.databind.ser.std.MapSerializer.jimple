public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer
{
    private static final long serialVersionUID;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE;
    public static final java.lang.Object MARKER_FOR_EMPTY;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property;
    protected final boolean _valueTypeIsStatic;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers;
    protected final java.util.Set _ignoredEntries;
    protected final java.util.Set _includedEntries;
    protected final java.lang.Object _filterId;
    protected final java.lang.Object _suppressableValue;
    protected final boolean _suppressNulls;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker;
    protected final boolean _sortKeys;

    protected void <init>(java.util.Set, java.util.Set, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Set r1, r2, $r9, $r10, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, r4;
        boolean z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r6, r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        z0 := @parameter4: boolean;

        r5 := @parameter5: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r6 := @parameter6: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r7 := @parameter7: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(class "Ljava/util/Map;", 0);

        if r1 == null goto label1;

        $z1 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        $r13 = null;

        goto label3;

     label2:
        $r13 = r1;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries> = $r13;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType> = r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic> = z0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = r7;

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = $r8;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls> = 0;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries>;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries>;

        $r11 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set,java.util.Set)>($r10, $r9);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = $r11;

        return;
    }

    protected void <init>(java.util.Set, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Set r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r3;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r5, r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r5 := @parameter5: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r6 := @parameter6: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(java.util.Set,java.util.Set,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, null, r2, r3, z0, r4, r5, r6);

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, java.util.Set, java.util.Set)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3, r4;
        java.util.Set r5, r6, $r13, $r14, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r10;
        java.lang.Object $r11, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r5 := @parameter4: java.util.Set;

        r6 := @parameter5: java.util.Set;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(class "Ljava/util/Map;", 0);

        if r5 == null goto label1;

        $z3 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>();

        if $z3 == 0 goto label2;

     label1:
        $r17 = null;

        goto label3;

     label2:
        $r17 = r5;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries> = $r17;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries> = r6;

        $r7 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType> = $r7;

        $r8 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType> = $r8;

        $z0 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic> = $z0;

        $r9 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = $r9;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = r4;

        $r10 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = $r10;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = r2;

        $r11 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId> = $r11;

        $z1 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys> = $z1;

        $r12 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue> = $r12;

        $z2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls> = $z2;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries>;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries>;

        $r15 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set,java.util.Set)>($r14, $r13);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = $r15;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, java.util.Set)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3, r4;
        java.util.Set r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r5 := @parameter4: java.util.Set;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set)>(r1, r2, r3, r4, r5, null);

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, java.lang.Object, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r2;
        java.lang.Object r3, $r12;
        boolean z0, $z1, $z2;
        java.util.Set $r4, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r8, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r3 := @parameter2: java.lang.Object;

        z0 := @parameter3: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(class "Ljava/util/Map;", 0);

        $r4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries> = $r4;

        $r5 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries> = $r5;

        $r6 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType> = $r6;

        $r7 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType> = $r7;

        $z1 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic> = $z1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = r2;

        $r8 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = $r8;

        $r9 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = $r9;

        $r10 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = $r10;

        $r11 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = $r11;

        $r12 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId> = $r12;

        $z2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys> = $z2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls> = z0;

        $r13 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = $r13;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer, java.lang.Object, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, r1;
        java.lang.Object r2, $r12;
        boolean z0, $z1, $z2;
        java.util.Set $r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r8, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker $r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r2 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(class "Ljava/util/Map;", 0);

        $r3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries> = $r3;

        $r4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries> = $r4;

        $r5 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType> = $r5;

        $r6 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType> = $r6;

        $z1 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic> = $z1;

        $r7 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = $r7;

        $r8 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = $r8;

        $r9 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = $r9;

        $r10 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = $r10;

        $r11 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property> = $r11;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys> = z0;

        $r12 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue> = $r12;

        $z2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls> = $z2;

        $r13 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = $r13;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer _withValueTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r1, $r2;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r2 != r1 goto label1;

        return r0;

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void _ensureOverride(java.lang.String)>("_withValueTypeSerializer");

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean)>(r0, r1, $r4, $z0);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, java.util.Set, java.util.Set, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, $r6, $r7, r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r2, r3;
        java.util.Set r4, r5;
        boolean z0, $z1;
        java.lang.Object $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 := @parameter3: java.util.Set;

        r5 := @parameter4: java.util.Set;

        z0 := @parameter5: boolean;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void _ensureOverride(java.lang.String)>("withResolved");

        $r6 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set)>(r0, r1, r2, r3, r4, r5);

        r9 = $r6;

        $z1 = $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys>;

        if z0 == $z1 goto label1;

        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean)>($r6, $r8, z0);

        r9 = $r7;

     label1:
        return r9;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, java.util.Set, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r2, r3;
        java.util.Set r4;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 := @parameter3: java.util.Set;

        z0 := @parameter4: boolean;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set,boolean)>(r1, r2, r3, r4, null, z0);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, $r3;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;

        if $r2 != r1 goto label1;

        return r0;

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void _ensureOverride(java.lang.String)>("withFilterId");

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys>;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean)>(r0, r1, $z0);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, $r3;
        java.lang.Object r1, $r2;
        boolean z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;

        if r1 != $r2 goto label1;

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        if z0 != $z1 goto label1;

        return r0;

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void _ensureOverride(java.lang.String)>("withContentInclusion");

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean)>(r0, $r4, r1, z0);

        return $r3;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set, java.util.Set, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, java.lang.Object)
    {
        java.util.Set r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, $r8, r9, r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4, r5;
        java.lang.Object r6;
        boolean $z0, $z1, z2, $z3;
        java.lang.Class $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer $r11, r12;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.Set;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        z2 := @parameter3: boolean;

        r3 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r4 := @parameter5: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r5 := @parameter6: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r6 := @parameter7: java.lang.Object;

        if r2 != null goto label1;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE>;

        r9 = $r8;

        r10 = $r8;

        goto label3;

     label1:
        r10 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getKeyType()>();

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/util/Properties;");

        if $z0 == 0 goto label2;

        r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        goto label3;

     label2:
        r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

     label3:
        if z2 != 0 goto label6;

        if r9 == null goto label4;

        $z1 = virtualinvoke r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isFinal()>();

        if $z1 == 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        z2 = $z3;

        goto label7;

     label6:
        $r7 = virtualinvoke r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        if $r7 != class "Ljava/lang/Object;" goto label7;

        z2 = 0;

     label7:
        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(java.util.Set,java.util.Set,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r0, r1, r10, r9, z2, r3, r4, r5);

        r12 = $r11;

        if r6 == null goto label8;

        r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object)>(r6);

     label8:
        return r12;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, java.lang.Object)
    {
        java.util.Set r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3, r4;
        java.lang.Object r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer $r6;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        z0 := @parameter2: boolean;

        r2 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r3 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 := @parameter5: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r5 := @parameter6: java.lang.Object;

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,java.util.Set,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object)>(r0, null, r1, z0, r2, r3, r4, r5);

        return $r6;
    }

    protected void _ensureOverride(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.lang.String;

        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: void verifyMustOverride(java.lang.Class,java.lang.Object,java.lang.String)>(class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/ser/std/MapSerializer;", r0, r1);

        return;
    }

    protected void _ensureOverride()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void _ensureOverride(java.lang.String)>("N/A");

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r2;
        java.lang.Object r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean)>(r1, r2, r3, 0);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, $r2;
        java.lang.Object r1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean)>(r0, $r3, r1, $z0);

        return $r2;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.lang.String[], org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, java.lang.Object)
    {
        java.lang.String[] r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3, r4;
        java.lang.Object r5;
        java.util.HashSet r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer $r7;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        z0 := @parameter2: boolean;

        r2 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r3 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 := @parameter5: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r5 := @parameter6: java.lang.Object;

        r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>(r0);

        $r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object)>(r6, r1, z0, r2, r3, r4, r5);

        return $r7;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, r41;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember r4, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z7, $z8, z9, $z10, $z11, z12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include $r5, r44;
        int[] $r6;
        int $i0, $i1;
        java.lang.Class $r7, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r8, $r9, $r17, $r18, $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value $r13;
        java.lang.Boolean $r14, r38, r40;
        java.lang.Object $r15, $r16, r23, r24, r42, r45, $r46;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r20, r21, r25, r26;
        java.util.Set r27, r28, r30, r34;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r29;
        java.util.HashSet $r31, $r35;
        java.util.Iterator r32, r36;
        java.lang.String r33, r37;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r39;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r43;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        r20 = null;

        r21 = null;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        if r2 != null goto label01;

        $r22 = null;

        goto label02;

     label01:
        $r22 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();

     label02:
        r4 = $r22;

        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _neitherNull(java.lang.Object,java.lang.Object)>($r22, r3);

        if $z0 == 0 goto label04;

        r23 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>($r22);

        if r23 == null goto label03;

        r21 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>($r22, r23);

     label03:
        r24 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findContentSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r4);

        if r24 == null goto label04;

        r20 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(r4, r24);

     label04:
        if r20 != null goto label05;

        r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

     label05:
        r25 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findContextualConvertingSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r2, r20);

        if r25 != null goto label06;

        $z7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic>;

        if $z7 == 0 goto label06;

        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        $z8 = virtualinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();

        if $z8 != 0 goto label06;

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        r25 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r19, r2);

     label06:
        if r21 != null goto label07;

        r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

     label07:
        if r21 != null goto label08;

        $r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        r26 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r17, r2);

        goto label09;

     label08:
        r26 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r21, r2);

     label09:
        r27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries>;

        r28 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries>;

        z9 = 0;

        $z1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _neitherNull(java.lang.Object,java.lang.Object)>(r4, r3);

        if $z1 == 0 goto label18;

        r29 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r12 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value findPropertyIgnoralByName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r29, r4);

        r30 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value: java.util.Set findIgnoredForSerialization()>();

        $z4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _nonEmpty(java.util.Collection)>(r30);

        if $z4 == 0 goto label13;

        if r27 != null goto label10;

        $r31 = new java.util.HashSet;

        specialinvoke $r31.<java.util.HashSet: void <init>()>();

        goto label11;

     label10:
        $r31 = new java.util.HashSet;

        specialinvoke $r31.<java.util.HashSet: void <init>(java.util.Collection)>(r27);

     label11:
        r27 = $r31;

        r32 = interfaceinvoke r30.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z10 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label13;

        $r16 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.lang.String) $r16;

        interfaceinvoke r27.<java.util.Set: boolean add(java.lang.Object)>(r33);

        goto label12;

     label13:
        $r13 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value findPropertyInclusionByName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r29, r4);

        r34 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value: java.util.Set getIncluded()>();

        if r34 == null goto label17;

        if r28 != null goto label14;

        $r35 = new java.util.HashSet;

        specialinvoke $r35.<java.util.HashSet: void <init>()>();

        goto label15;

     label14:
        $r35 = new java.util.HashSet;

        specialinvoke $r35.<java.util.HashSet: void <init>(java.util.Collection)>(r28);

     label15:
        r28 = $r35;

        r36 = interfaceinvoke r34.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z11 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label17;

        $r15 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.lang.String) $r15;

        interfaceinvoke r28.<java.util.Set: boolean add(java.lang.Object)>(r37);

        goto label16;

     label17:
        r38 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Boolean findSerializationSortAlphabetically(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r4);

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        z9 = virtualinvoke $r14.<java.lang.Boolean: boolean equals(java.lang.Object)>(r38);

     label18:
        r39 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(r1, r2, class "Ljava/util/Map;");

        if r39 == null goto label19;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SORTED_MAP_ENTRIES>;

        r40 = virtualinvoke r39.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getFeature(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Feature)>($r11);

        if r40 == null goto label19;

        z9 = virtualinvoke r40.<java.lang.Boolean: boolean booleanValue()>();

     label19:
        r41 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set,boolean)>(r2, r26, r25, r27, r28, z9);

        if r4 == null goto label20;

        r42 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findFilterId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated)>(r4);

        if r42 == null goto label20;

        r41 = virtualinvoke r41.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object)>(r42);

     label20:
        r43 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value findIncludeOverrides(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(r1, r2, class "Ljava/util/Map;");

        if r43 == null goto label31;

        r44 = virtualinvoke r43.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include getContentInclusion()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;

        if r44 == $r5 goto label31;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;

        $i0 = virtualinvoke r44.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label21;
            case 2: goto label22;
            case 3: goto label25;
            case 4: goto label26;
            case 5: goto label28;
            case 6: goto label29;
            default: goto label29;
        };

     label21:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        r45 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r9);

        z12 = 1;

        if r45 == null goto label30;

        $r10 = virtualinvoke r45.<java.lang.Object: java.lang.Class getClass()>();

        $z3 = virtualinvoke $r10.<java.lang.Class: boolean isArray()>();

        if $z3 == 0 goto label30;

        r45 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object getArrayComparator(java.lang.Object)>(r45);

        goto label30;

     label22:
        z12 = 1;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        $z2 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();

        if $z2 == 0 goto label23;

        $r46 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        goto label24;

     label23:
        $r46 = null;

     label24:
        r45 = $r46;

        goto label30;

     label25:
        z12 = 1;

        r45 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        goto label30;

     label26:
        $r7 = virtualinvoke r43.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();

        r45 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object includeFilterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(null, $r7);

        if r45 != null goto label27;

        z12 = 1;

        goto label30;

     label27:
        z12 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>(r45);

        goto label30;

     label28:
        r45 = null;

        z12 = 1;

        goto label30;

     label29:
        r45 = null;

        z12 = 0;

     label30:
        r41 = virtualinvoke r41.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object,boolean)>(r45, z12);

     label31:
        return r41;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getContentSerializer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        return $r1;
    }

    public boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.util.Map)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.util.Map r2;
        java.lang.Object r3, $r5, r11, r13;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.Collection $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r9, r14;
        java.util.Iterator r10, r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.util.Map;

        $z1 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label01;

        return 1;

     label01:
        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;

        if r3 != null goto label02;

        $z8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        if $z8 != 0 goto label02;

        return 0;

     label02:
        r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        if $r5 != r3 goto label03;

        $z9 = 1;

        goto label04;

     label03:
        $z9 = 0;

     label04:
        z0 = $z9;

        if r9 == null goto label12;

        $r7 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>();

        r10 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z10 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label11;

        r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        if r11 != null goto label07;

        $z7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        if $z7 == 0 goto label06;

        goto label05;

     label06:
        return 0;

     label07:
        if z0 == 0 goto label08;

        $z6 = virtualinvoke r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r1, r11);

        if $z6 != 0 goto label10;

        return 0;

     label08:
        if r3 == null goto label09;

        $z5 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z5 != 0 goto label10;

     label09:
        return 0;

     label10:
        goto label05;

     label11:
        return 1;

     label12:
        $r6 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>();

        r12 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label13:
        $z11 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label22;

        r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        if r13 != null goto label15;

        $z4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        if $z4 == 0 goto label14;

        goto label13;

     label14:
        return 0;

     label15:
        r14 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r1, r13);

     label16:
        goto label18;

     label17:
        $r8 := @caughtexception;

        return 0;

     label18:
        if z0 == 0 goto label19;

        $z3 = virtualinvoke r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r1, r13);

        if $z3 != 0 goto label21;

        return 0;

     label19:
        if r3 == null goto label20;

        $z2 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label21;

     label20:
        return 0;

     label21:
        goto label13;

     label22:
        return 1;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException from label15 to label16 with label17;
    }

    public boolean hasSingleElement(java.util.Map)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Map r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Map;

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getKeySerializer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        return $r1;
    }

    public void serialize(java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeStartObject(java.lang.Object)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeWithoutTypeInfo(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();

        return;
    }

    public void serializeWithType(java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId r5, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void setCurrentValue(java.lang.Object)>(r1);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        $r7 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>(r1, $r6);

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, $r7);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeWithoutTypeInfo(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.WritableTypeId)>(r2, r5);

        return;
    }

    public void serializeWithoutTypeInfo(java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r4, $r5, $r8, $r10, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyFilter $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r11;
        java.util.Map r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r12 := @parameter0: java.util.Map;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $z0 = interfaceinvoke r12.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys>;

        if $z1 != 0 goto label1;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS>;

        $z3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r11);

        if $z3 == 0 goto label2;

     label1:
        r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r12, r1, r2);

     label2:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;

        if $r13 == null goto label3;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;

        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)>(r2, $r8, r12);

        if $r9 == null goto label3;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>(r12, r1, r2, $r9, $r10);

        goto label7;

     label3:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;

        if $r4 != null goto label4;

        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        if $z2 == 0 goto label5;

     label4:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r12, r1, r2, $r5);

        goto label7;

     label5:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if $r6 == null goto label6;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r12, r1, r2, $r7);

        goto label7;

     label6:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r12, r1, r2);

     label7:
        return;
    }

    public void serializeFields(java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4, $r14, r19;
        java.util.Map$Entry r5;
        java.lang.Object r6, $r9, r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r7;
        java.util.Set $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker $r10, $r11;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r13;
        java.lang.Exception $r15;
        java.lang.String $r16;
        java.util.Iterator r18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r7 == null goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeTypedFields(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r1, r2, r3, null);

        return;

     label01:
        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        r17 = null;

     label02:
        $r8 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r18 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r9 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r9;

        r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        if r17 != null goto label04;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        $r14 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r13, $r12);

        virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(null, r2, r3);

        goto label06;

     label04:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        if $r10 == null goto label05;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        $z0 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(r17);

        if $z0 == 0 goto label05;

        goto label03;

     label05:
        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r17, r2, r3);

     label06:
        if r6 != null goto label07;

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r2);

        goto label03;

     label07:
        r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r19 != null goto label08;

        r19 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r3, r6);

     label08:
        virtualinvoke r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r6, r2, r3);

        goto label03;

     label09:
        goto label11;

     label10:
        $r15 := @caughtexception;

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r17);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(r3, $r15, r1, $r16);

     label11:
        return;

        catch java.lang.Exception from label02 to label09 with label10;
    }

    public void serializeOptionalFields(java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.lang.Object r4, r7, r8, $r11, $r13;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r10;
        java.util.Set $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker $r14, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r17;
        java.lang.Exception $r18;
        java.lang.String $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r20, r21;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: java.lang.Object;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        if $r10 == null goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeTypedFields(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r1, r2, r3, r4);

        return;

     label01:
        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        if $r11 != r4 goto label02;

        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        z0 = $z5;

        $r12 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label16;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r13;

        r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        if r7 != null goto label05;

        $r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r20 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r17, $r16);

        goto label07;

     label05:
        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        if $r14 == null goto label06;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        $z4 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(r7);

        if $z4 == 0 goto label06;

        goto label04;

     label06:
        r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

     label07:
        r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        if r8 != null goto label09;

        $z3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        if $z3 == 0 goto label08;

        goto label04;

     label08:
        r21 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();

        goto label12;

     label09:
        r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r21 != null goto label10;

        r21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r3, r8);

     label10:
        if z0 == 0 goto label11;

        $z2 = virtualinvoke r21.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r3, r8);

        if $z2 == 0 goto label12;

        goto label04;

     label11:
        if r4 == null goto label12;

        $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label12;

        goto label04;

     label12:
        virtualinvoke r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r7, r2, r3);

        virtualinvoke r21.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r8, r2, r3);

     label13:
        goto label15;

     label14:
        $r18 := @caughtexception;

        $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(r3, $r18, r1, $r19);

     label15:
        goto label04;

     label16:
        return;

        catch java.lang.Exception from label12 to label13 with label14;
    }

    public void serializeFieldsUsing(java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4, r5, $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r6;
        java.util.Iterator r7;
        java.util.Map$Entry r8;
        java.lang.Object r9, r10, $r13;
        java.util.Set $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker $r14, $r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r16;
        boolean $z0, $z1;
        java.lang.Exception $r19;
        java.lang.String $r20;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        $r12 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r7 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r13 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r13;

        r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        if $r14 == null goto label02;

        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        $z0 = virtualinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(r9);

        if $z0 == 0 goto label02;

        goto label01;

     label02:
        if r9 != null goto label03;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        $r17 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r16, $r15);

        virtualinvoke $r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(null, r2, r3);

        goto label04;

     label03:
        virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r9, r2, r3);

     label04:
        r10 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        if r10 != null goto label05;

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r2);

        goto label09;

     label05:
        if r6 != null goto label06;

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r10, r2, r3);

        goto label07;

     label06:
        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(r10, r2, r3, r6);

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r9);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(r3, $r19, r1, $r20);

     label09:
        goto label01;

     label10:
        return;

        catch java.lang.Exception from label05 to label07 with label08;
    }

    public void serializeFilteredFields(java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyFilter, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyFilter r4;
        java.lang.Object r5, r9, r10, $r15, $r17;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Iterator r7;
        java.util.Map$Entry r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapProperty $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r13, $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r14;
        java.util.Set $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker $r18, $r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r20;
        java.lang.Exception $r22;
        java.lang.String $r23;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r24, r25;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyFilter;

        r5 := @parameter4: java.lang.Object;

        $r12 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapProperty;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        specialinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapProperty: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r14, $r13);

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        if $r15 != r5 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        $r16 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r7 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z6 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label16;

        $r17 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r17;

        r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        if $r18 == null goto label04;

        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        $z4 = virtualinvoke $r21.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(r9);

        if $z4 == 0 goto label04;

        goto label03;

     label04:
        if r9 != null goto label05;

        $r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r24 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r20, $r19);

        goto label06;

     label05:
        r24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

     label06:
        r10 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        if r10 != null goto label08;

        $z3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        if $z3 == 0 goto label07;

        goto label03;

     label07:
        r25 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();

        goto label11;

     label08:
        r25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r25 != null goto label09;

        r25 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r3, r10);

     label09:
        if z0 == 0 goto label10;

        $z2 = virtualinvoke r25.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r3, r10);

        if $z2 == 0 goto label11;

        goto label03;

     label10:
        if r5 == null goto label11;

        $z1 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label11;

        goto label03;

     label11:
        virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapProperty: void reset(java.lang.Object,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r9, r10, r24, r25);

     label12:
        interfaceinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyFilter: void serializeAsField(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyWriter)>(r1, r2, r3, $r12);

     label13:
        goto label15;

     label14:
        $r22 := @caughtexception;

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r9);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(r3, $r22, r1, $r23);

     label15:
        goto label03;

     label16:
        return;

        catch java.lang.Exception from label12 to label13 with label14;
    }

    public void serializeTypedFields(java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.lang.Object r4, r7, r8, $r10, $r12;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        java.util.Set $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker $r13, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r16;
        java.lang.Exception $r17;
        java.lang.String $r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r19, r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r21;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: java.lang.Object;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        if $r10 != r4 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label16;

        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r12;

        r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        if r7 != null goto label04;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r19 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r16, $r15);

        goto label06;

     label04:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        if $r13 == null goto label05;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        $z4 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(r7);

        if $z4 == 0 goto label05;

        goto label03;

     label05:
        r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

     label06:
        r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        if r8 != null goto label08;

        $z3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        if $z3 == 0 goto label07;

        goto label03;

     label07:
        r20 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();

        goto label11;

     label08:
        r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r20 != null goto label09;

        r20 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r3, r8);

     label09:
        if z0 == 0 goto label10;

        $z2 = virtualinvoke r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r3, r8);

        if $z2 == 0 goto label11;

        goto label03;

     label10:
        if r4 == null goto label11;

        $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label11;

        goto label03;

     label11:
        virtualinvoke r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r7, r2, r3);

     label12:
        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        virtualinvoke r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(r8, r2, r3, $r21);

     label13:
        goto label15;

     label14:
        $r17 := @caughtexception;

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(r3, $r17, r1, $r18);

     label15:
        goto label03;

     label16:
        return;

        catch java.lang.Exception from label12 to label13 with label14;
    }

    public void serializeFilteredAnyProperties(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyFilter, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        java.lang.Object r3, r6, r10, r11, $r16, $r18;
        java.util.Map r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyFilter r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Iterator r8;
        java.util.Map$Entry r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapProperty $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r14, $r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r15;
        java.util.Set $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker $r19, $r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r21;
        java.lang.Exception $r23;
        java.lang.String $r24;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r25, r26;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyFilter;

        r6 := @parameter5: java.lang.Object;

        $r13 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapProperty;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        specialinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapProperty: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r15, $r14);

        $r16 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        if $r16 != r6 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        $r17 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        r8 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z6 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label16;

        $r18 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r18;

        r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        if $r19 == null goto label04;

        $r22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;

        $z4 = virtualinvoke $r22.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(r10);

        if $z4 == 0 goto label04;

        goto label03;

     label04:
        if r10 != null goto label05;

        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        $r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r25 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r21, $r20);

        goto label06;

     label05:
        r25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

     label06:
        r11 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        if r11 != null goto label08;

        $z3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        if $z3 == 0 goto label07;

        goto label03;

     label07:
        r26 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();

        goto label11;

     label08:
        r26 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r26 != null goto label09;

        r26 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r1, r11);

     label09:
        if z0 == 0 goto label10;

        $z2 = virtualinvoke r26.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r1, r11);

        if $z2 == 0 goto label11;

        goto label03;

     label10:
        if r6 == null goto label11;

        $z1 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>(r11);

        if $z1 == 0 goto label11;

        goto label03;

     label11:
        virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapProperty: void reset(java.lang.Object,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r10, r11, r25, r26);

     label12:
        interfaceinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyFilter: void serializeAsField(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.PropertyWriter)>(r3, r2, r1, $r13);

     label13:
        goto label15;

     label14:
        $r23 := @caughtexception;

        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r10);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(r1, $r23, r4, $r24);

     label15:
        goto label03;

     label16:
        return;

        catch java.lang.Exception from label12 to label13 with label14;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode getSchema(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.reflect.Type r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.reflect.Type;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("object", 1);

        return $r3;
    }

    public void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, $r4, $r6, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r5, r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor expectMapFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

        if r3 == null goto label2;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        interfaceinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor: void keyFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r5, $r4);

        r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r10 != null goto label1;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        $r9 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider getProvider()>();

        r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>($r7, $r8, $r9);

     label1:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        interfaceinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor: void valueFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r10, $r6);

     label2:
        return;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap r1, $r6, $r8;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r2, r3, $r5);

        $r6 = r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        if r1 == $r6 goto label1;

        $r8 = r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = $r8;

     label1:
        $r7 = r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializer>;

        return $r7;
    }

    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap r1, $r6, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r2, r3, $r5);

        $r6 = r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        if r1 == $r6 goto label1;

        $r8 = r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = $r8;

     label1:
        $r7 = r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializer>;

        return $r7;
    }

    protected java.util.Map _orderEntries(java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        java.lang.Object r7, $r11, $r12, $r14;
        boolean $z0, $z1, $z2;
        java.util.TreeMap $r8, $r9;
        java.util.Set $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $z0 = r1 instanceof java.util.SortedMap;

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _hasNullKey(java.util.Map)>(r1);

        if $z1 == 0 goto label5;

        $r9 = new java.util.TreeMap;

        specialinvoke $r9.<java.util.TreeMap: void <init>()>();

        $r10 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r11;

        r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        if r7 != null goto label3;

        $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void _writeNullKeyedEntry(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r2, r3, $r14);

        goto label2;

     label3:
        $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r9.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r12);

        goto label2;

     label4:
        return $r9;

     label5:
        $r8 = new java.util.TreeMap;

        specialinvoke $r8.<java.util.TreeMap: void <init>(java.util.Map)>(r1);

        return $r8;
    }

    protected boolean _hasNullKey(java.util.Map)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.util.Map r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.util.Map;

        $z0 = r1 instanceof java.util.HashMap;

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(null);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected void _writeNullKeyedEntry(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r2;
        java.lang.Object r3, $r8, $r9, $r10, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4, r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r7;
        boolean $z0, $z1, $z2;
        java.lang.Exception $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r3 := @parameter2: java.lang.Object;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _keyType>;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r7, $r6);

        if r3 != null goto label2;

        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;

        if $z2 == 0 goto label1;

        return;

     label1:
        r13 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();

        goto label5;

     label2:
        r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;

        if r13 != null goto label3;

        r13 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r2, r3);

     label3:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;

        if $r9 != $r8 goto label4;

        $z1 = virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(r2, r3);

        if $z1 == 0 goto label5;

        return;

     label4:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;

        if $r10 == null goto label5;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;

        $z0 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label5;

        return;

     label5:
        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(null, r1, r2);

        virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r3, r1, r2);

     label6:
        goto label8;

     label7:
        $r12 := @caughtexception;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(r2, $r12, r3, "");

     label8:
        return;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.Object r2;
        java.lang.Class r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4, $r8, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r5, $r7, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6, $r9, $r11;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.Object;

        r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;

        r4 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(r3);

        if r4 == null goto label1;

        return r4;

     label1:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        $z0 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean hasGenericTypes()>();

        if $z0 == 0 goto label2;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _valueType>;

        $r11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>($r9, r3);

        $r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>($r10, $r11, r1);

        return $r12;

     label2:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>($r7, r3, r1);

        return $r8;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer _withValueTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(r1);

        return $r2;
    }

    public volatile boolean hasSingleElement(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map) r1;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean hasSingleElement(java.util.Map)>($r2);

        return $z0;
    }

    public volatile void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.util.Map $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r4 = (java.util.Map) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serialize(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>($r4, r2, r3);

        return;
    }

    public volatile boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        java.lang.Object r2;
        java.util.Map $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Map) r2;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean isEmpty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.util.Map)>(r1, $r3);

        return $z0;
    }

    public volatile void serializeWithType(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        java.util.Map $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        $r5 = (java.util.Map) r1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeWithType(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>($r5, r2, r3, r4);

        return;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include $r1;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: long serialVersionUID> = 1L;

        $r0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE> = $r0;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include NON_EMPTY>;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY> = $r1;

        return;
    }
}
