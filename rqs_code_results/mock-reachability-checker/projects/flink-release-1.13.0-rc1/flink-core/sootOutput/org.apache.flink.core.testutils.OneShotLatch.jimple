public final class org.apache.flink.core.testutils.OneShotLatch extends java.lang.Object
{
    private final java.lang.Object lock;
    private final java.util.Set waitersSet;
    private volatile boolean triggered;

    public void <init>()
    {
        org.apache.flink.core.testutils.OneShotLatch r0;
        java.lang.Object $r1;
        java.util.IdentityHashMap $r2;
        java.util.Set $r3;

        r0 := @this: org.apache.flink.core.testutils.OneShotLatch;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.core.testutils.OneShotLatch: java.lang.Object lock> = $r1;

        $r2 = new java.util.IdentityHashMap;

        specialinvoke $r2.<java.util.IdentityHashMap: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r2);

        r0.<org.apache.flink.core.testutils.OneShotLatch: java.util.Set waitersSet> = $r3;

        return;
    }

    public void trigger()
    {
        org.apache.flink.core.testutils.OneShotLatch r0;
        java.lang.Object $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.flink.core.testutils.OneShotLatch;

        $r3 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.lang.Object lock>;

        entermonitor $r3;

     label1:
        r0.<org.apache.flink.core.testutils.OneShotLatch: boolean triggered> = 1;

        $r4 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.lang.Object lock>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor $r3;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void await() throws java.lang.InterruptedException
    {
        org.apache.flink.core.testutils.OneShotLatch r0;
        java.lang.Thread r2;
        java.lang.Object $r5, $r7;
        boolean $z0;
        java.util.Set $r6, $r8, $r10;
        java.lang.Throwable $r9, $r11;

        r0 := @this: org.apache.flink.core.testutils.OneShotLatch;

        $r5 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.lang.Object lock>;

        entermonitor $r5;

     label01:
        $z0 = r0.<org.apache.flink.core.testutils.OneShotLatch: boolean triggered>;

        if $z0 != 0 goto label06;

        r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

     label02:
        $r6 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.util.Set waitersSet>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r2);

        $r7 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.lang.Object lock>;

        virtualinvoke $r7.<java.lang.Object: void wait()>();

     label03:
        $r8 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.util.Set waitersSet>;

        interfaceinvoke $r8.<java.util.Set: boolean remove(java.lang.Object)>(r2);

        goto label05;

     label04:
        $r9 := @caughtexception;

        $r10 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.util.Set waitersSet>;

        interfaceinvoke $r10.<java.util.Set: boolean remove(java.lang.Object)>(r2);

        throw $r9;

     label05:
        goto label01;

     label06:
        exitmonitor $r5;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        exitmonitor $r5;

     label09:
        throw $r11;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void await(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException
    {
        org.apache.flink.core.testutils.OneShotLatch r0;
        long l0, l1, $l5, $l6, $l7, $l8, $l9;
        java.util.concurrent.TimeUnit r1;
        byte $b3, $b4, $b10;
        java.lang.Object $r4, $r6;
        boolean $z0, $z1;
        java.util.concurrent.TimeoutException $r5;
        java.lang.NullPointerException $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.flink.core.testutils.OneShotLatch;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $b3 = l0 cmp 0L;

        if $b3 >= 0 goto label01;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("time may not be negative");

        throw $r8;

     label01:
        if r1 != null goto label02;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("timeUnit");

        throw $r7;

     label02:
        $b4 = l0 cmp 0L;

        if $b4 != 0 goto label03;

        virtualinvoke r0.<org.apache.flink.core.testutils.OneShotLatch: void await()>();

        goto label10;

     label03:
        $l5 = staticinvoke <java.lang.System: long nanoTime()>();

        $l6 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        l1 = $l5 + $l6;

        $r4 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.lang.Object lock>;

        entermonitor $r4;

     label04:
        $z0 = r0.<org.apache.flink.core.testutils.OneShotLatch: boolean triggered>;

        if $z0 != 0 goto label05;

        $l7 = staticinvoke <java.lang.System: long nanoTime()>();

        $l8 = l1 - $l7;

        $l9 = $l8 / 1000000L;

        $b10 = $l9 cmp 0L;

        if $b10 <= 0 goto label05;

        $r6 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.lang.Object lock>;

        virtualinvoke $r6.<java.lang.Object: void wait(long)>($l9);

        goto label04;

     label05:
        $z1 = r0.<org.apache.flink.core.testutils.OneShotLatch: boolean triggered>;

        if $z1 != 0 goto label06;

        $r5 = new java.util.concurrent.TimeoutException;

        specialinvoke $r5.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r5;

     label06:
        exitmonitor $r4;

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        exitmonitor $r4;

     label09:
        throw $r9;

     label10:
        return;

        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean isTriggered()
    {
        org.apache.flink.core.testutils.OneShotLatch r0;
        boolean $z0;

        r0 := @this: org.apache.flink.core.testutils.OneShotLatch;

        $z0 = r0.<org.apache.flink.core.testutils.OneShotLatch: boolean triggered>;

        return $z0;
    }

    public int getWaitersCount()
    {
        org.apache.flink.core.testutils.OneShotLatch r0;
        java.lang.Object $r3;
        java.util.Set $r4;
        int $i0;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.flink.core.testutils.OneShotLatch;

        $r3 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.lang.Object lock>;

        entermonitor $r3;

     label1:
        $r4 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.util.Set waitersSet>;

        $i0 = interfaceinvoke $r4.<java.util.Set: int size()>();

        exitmonitor $r3;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void reset()
    {
        org.apache.flink.core.testutils.OneShotLatch r0;
        java.lang.Object $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.flink.core.testutils.OneShotLatch;

        $r3 = r0.<org.apache.flink.core.testutils.OneShotLatch: java.lang.Object lock>;

        entermonitor $r3;

     label1:
        r0.<org.apache.flink.core.testutils.OneShotLatch: boolean triggered> = 0;

        exitmonitor $r3;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String toString()
    {
        org.apache.flink.core.testutils.OneShotLatch r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        boolean $z0;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.flink.core.testutils.OneShotLatch;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latch ");

        $z0 = r0.<org.apache.flink.core.testutils.OneShotLatch: boolean triggered>;

        if $z0 == 0 goto label1;

        $r5 = "TRIGGERED";

        goto label2;

     label1:
        $r5 = "PENDING";

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
