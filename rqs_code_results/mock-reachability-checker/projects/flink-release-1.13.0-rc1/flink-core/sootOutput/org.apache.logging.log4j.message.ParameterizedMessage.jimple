public class org.apache.logging.log4j.message.ParameterizedMessage extends java.lang.Object implements org.apache.logging.log4j.message.Message, org.apache.logging.log4j.util.StringBuilderFormattable
{
    private static final int DEFAULT_STRING_BUILDER_SIZE;
    public static final java.lang.String RECURSION_PREFIX;
    public static final java.lang.String RECURSION_SUFFIX;
    public static final java.lang.String ERROR_PREFIX;
    public static final java.lang.String ERROR_SEPARATOR;
    public static final java.lang.String ERROR_MSG_SEPARATOR;
    public static final java.lang.String ERROR_SUFFIX;
    private static final long serialVersionUID;
    private static final int HASHVAL;
    private static java.lang.ThreadLocal threadLocalStringBuilder;
    private java.lang.String messagePattern;
    private transient java.lang.Object[] argArray;
    private java.lang.String formattedMessage;
    private transient java.lang.Throwable throwable;
    private int[] indices;
    private int usedCount;

    public void <init>(java.lang.String, java.lang.String[], java.lang.Throwable)
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.String r1;
        java.lang.String[] r2;
        java.lang.Throwable r3;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray> = r2;

        r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Throwable throwable> = r3;

        specialinvoke r0.<org.apache.logging.log4j.message.ParameterizedMessage: void init(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Object[], java.lang.Throwable)
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.lang.Throwable r3;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray> = r2;

        r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Throwable throwable> = r3;

        specialinvoke r0.<org.apache.logging.log4j.message.ParameterizedMessage: void init(java.lang.String)>(r1);

        return;
    }

    public transient void <init>(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray> = r2;

        specialinvoke r0.<org.apache.logging.log4j.message.ParameterizedMessage: void init(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Object[] $r3;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r2;

        specialinvoke r0.<org.apache.logging.log4j.message.ParameterizedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r3);

        return;
    }

    public void <init>(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r2;

        $r4[1] = r3;

        specialinvoke r0.<org.apache.logging.log4j.message.ParameterizedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, $r4);

        return;
    }

    private void init(java.lang.String)
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.String r1;
        int i0, i1, $i3, $i4, $i6, $i7;
        int[] $r2, $r3;
        java.lang.Object[] $r4, $r5, $r6;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String messagePattern> = r1;

        if r1 != null goto label1;

        $i6 = 0;

        goto label2;

     label1:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = $i3 >> 1;

     label2:
        i0 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i6);

        $r2 = newarray (int)[i0];

        r0.<org.apache.logging.log4j.message.ParameterizedMessage: int[] indices> = $r2;

        $r3 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: int[] indices>;

        i1 = staticinvoke <org.apache.logging.log4j.message.ParameterFormatter: int countArgumentPlaceholders2(java.lang.String,int[])>(r1, $r3);

        $r4 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray>;

        specialinvoke r0.<org.apache.logging.log4j.message.ParameterizedMessage: void initThrowable(java.lang.Object[],int)>($r4, i1);

        $r5 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray>;

        if $r5 != null goto label3;

        $i7 = 0;

        goto label4;

     label3:
        $r6 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray>;

        $i7 = lengthof $r6;

     label4:
        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i7);

        r0.<org.apache.logging.log4j.message.ParameterizedMessage: int usedCount> = $i4;

        return;
    }

    private void initThrowable(java.lang.Object[], int)
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.Object[] r1;
        int i0, i1, $i2, $i3;
        java.lang.Throwable $r2, $r5;
        java.lang.Object $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        if r1 == null goto label1;

        i1 = lengthof r1;

        if i0 >= i1 goto label1;

        $r2 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Throwable throwable>;

        if $r2 != null goto label1;

        $i2 = i1 - 1;

        $r3 = r1[$i2];

        $z0 = $r3 instanceof java.lang.Throwable;

        if $z0 == 0 goto label1;

        $i3 = i1 - 1;

        $r4 = r1[$i3];

        $r5 = (java.lang.Throwable) $r4;

        r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Throwable throwable> = $r5;

     label1:
        return;
    }

    public java.lang.String getFormat()
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.String $r1;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        $r1 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String messagePattern>;

        return $r1;
    }

    public java.lang.Object[] getParameters()
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.Object[] $r1;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        $r1 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray>;

        return $r1;
    }

    public java.lang.Throwable getThrowable()
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        $r1 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Throwable throwable>;

        return $r1;
    }

    public java.lang.String getFormattedMessage()
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2, $r3, $r4;
        int $i0;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        $r2 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String formattedMessage>;

        if $r2 != null goto label1;

        r1 = staticinvoke <org.apache.logging.log4j.message.ParameterizedMessage: java.lang.StringBuilder getThreadLocalStringBuilder()>();

        virtualinvoke r0.<org.apache.logging.log4j.message.ParameterizedMessage: void formatTo(java.lang.StringBuilder)>(r1);

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String formattedMessage> = $r4;

        $i0 = <org.apache.logging.log4j.util.Constants: int MAX_REUSABLE_MESSAGE_SIZE>;

        staticinvoke <org.apache.logging.log4j.util.StringBuilders: void trimToMaxSize(java.lang.StringBuilder,int)>(r1, $i0);

     label1:
        $r3 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String formattedMessage>;

        return $r3;
    }

    private static java.lang.StringBuilder getThreadLocalStringBuilder()
    {
        java.lang.ThreadLocal $r0, $r3;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2, r4;

        $r0 = <org.apache.logging.log4j.message.ParameterizedMessage: java.lang.ThreadLocal threadLocalStringBuilder>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r4 = (java.lang.StringBuilder) $r1;

        if r4 != null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(255);

        r4 = $r2;

        $r3 = <org.apache.logging.log4j.message.ParameterizedMessage: java.lang.ThreadLocal threadLocalStringBuilder>;

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2);

     label1:
        virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0);

        return r4;
    }

    public void formatTo(java.lang.StringBuilder)
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2, $r6, $r8, $r9;
        int[] $r3, $r4;
        int $i0, $i1, $i2;
        java.lang.Object[] $r5, $r7;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        r1 := @parameter0: java.lang.StringBuilder;

        $r2 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String formattedMessage>;

        if $r2 == null goto label1;

        $r9 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String formattedMessage>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        goto label3;

     label1:
        $r3 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: int[] indices>;

        $i0 = $r3[0];

        if $i0 >= 0 goto label2;

        $r8 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String messagePattern>;

        $r7 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray>;

        $i2 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: int usedCount>;

        staticinvoke <org.apache.logging.log4j.message.ParameterFormatter: void formatMessage(java.lang.StringBuilder,java.lang.String,java.lang.Object[],int)>(r1, $r8, $r7, $i2);

        goto label3;

     label2:
        $r6 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String messagePattern>;

        $r5 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray>;

        $i1 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: int usedCount>;

        $r4 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: int[] indices>;

        staticinvoke <org.apache.logging.log4j.message.ParameterFormatter: void formatMessage2(java.lang.StringBuilder,java.lang.String,java.lang.Object[],int,int[])>(r1, $r6, $r5, $i1, $r4);

     label3:
        return;
    }

    public static java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r2;
        java.lang.Object[] r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <org.apache.logging.log4j.message.ParameterFormatter: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, r1);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6, $r9, $r10;
        java.lang.Object[] $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (org.apache.logging.log4j.message.ParameterizedMessage) r1;

        $r5 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String messagePattern>;

        if $r5 == null goto label4;

        $r10 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String messagePattern>;

        $r9 = r2.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String messagePattern>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label6;

        goto label5;

     label4:
        $r6 = r2.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String messagePattern>;

        if $r6 == null goto label6;

     label5:
        return 0;

     label6:
        $r8 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray>;

        $r7 = r2.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r8, $r7);

        if $z0 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.String $r1, $r4;
        java.lang.Object[] $r2, $r3;
        int $i0, $i1, $i3, i4;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        $r1 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String messagePattern>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String messagePattern>;

        $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $i0 = 31 * $i1;

        $r2 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray>;

        if $r2 == null goto label3;

        $r3 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray>;

        $i3 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r3);

        goto label4;

     label3:
        $i3 = 0;

     label4:
        i4 = $i0 + $i3;

        return i4;
    }

    public static int countArgumentPlaceholders(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <org.apache.logging.log4j.message.ParameterFormatter: int countArgumentPlaceholders(java.lang.String)>(r0);

        return $i0;
    }

    public static java.lang.String deepToString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.apache.logging.log4j.message.ParameterFormatter: java.lang.String deepToString(java.lang.Object)>(r0);

        return $r1;
    }

    public static java.lang.String identityToString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.apache.logging.log4j.message.ParameterFormatter: java.lang.String identityToString(java.lang.Object)>(r0);

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.logging.log4j.message.ParameterizedMessage r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r8, $r9, $r11, $r12;
        java.lang.String $r3, $r7, $r13;
        java.lang.Object[] $r6;
        java.lang.Throwable $r10;

        r0 := @this: org.apache.logging.log4j.message.ParameterizedMessage;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ParameterizedMessage[messagePattern=");

        $r3 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String messagePattern>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stringArgs=");

        $r6 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Object[] argArray>;

        $r7 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", throwable=");

        $r10 = r0.<org.apache.logging.log4j.message.ParameterizedMessage: java.lang.Throwable throwable>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        <org.apache.logging.log4j.message.ParameterizedMessage: int HASHVAL> = 31;

        <org.apache.logging.log4j.message.ParameterizedMessage: long serialVersionUID> = -665975803997290697L;

        <org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String ERROR_SUFFIX> = "!!!]";

        <org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String ERROR_MSG_SEPARATOR> = ":";

        <org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String ERROR_SEPARATOR> = "=>";

        <org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String ERROR_PREFIX> = "[!!!";

        <org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String RECURSION_SUFFIX> = "...]";

        <org.apache.logging.log4j.message.ParameterizedMessage: java.lang.String RECURSION_PREFIX> = "[...";

        <org.apache.logging.log4j.message.ParameterizedMessage: int DEFAULT_STRING_BUILDER_SIZE> = 255;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.logging.log4j.message.ParameterizedMessage: java.lang.ThreadLocal threadLocalStringBuilder> = $r0;

        return;
    }
}
