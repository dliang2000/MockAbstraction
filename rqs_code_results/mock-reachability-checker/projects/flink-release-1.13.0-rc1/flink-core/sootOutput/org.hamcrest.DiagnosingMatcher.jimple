public abstract class org.hamcrest.DiagnosingMatcher extends org.hamcrest.BaseMatcher
{

    public void <init>()
    {
        org.hamcrest.DiagnosingMatcher r0;

        r0 := @this: org.hamcrest.DiagnosingMatcher;

        specialinvoke r0.<org.hamcrest.BaseMatcher: void <init>()>();

        return;
    }

    public final boolean matches(java.lang.Object)
    {
        org.hamcrest.DiagnosingMatcher r0;
        java.lang.Object r1;
        org.hamcrest.Description $r2;
        boolean $z0;

        r0 := @this: org.hamcrest.DiagnosingMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = <org.hamcrest.Description: org.hamcrest.Description NONE>;

        $z0 = virtualinvoke r0.<org.hamcrest.DiagnosingMatcher: boolean matches(java.lang.Object,org.hamcrest.Description)>(r1, $r2);

        return $z0;
    }

    public final void describeMismatch(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.DiagnosingMatcher r0;
        java.lang.Object r1;
        org.hamcrest.Description r2;

        r0 := @this: org.hamcrest.DiagnosingMatcher;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        virtualinvoke r0.<org.hamcrest.DiagnosingMatcher: boolean matches(java.lang.Object,org.hamcrest.Description)>(r1, r2);

        return;
    }

    protected abstract boolean matches(java.lang.Object, org.hamcrest.Description);
}
