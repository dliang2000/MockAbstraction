public final class org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory extends java.lang.Object implements org.apache.flink.api.common.typeutils.TypeSerializerFactory, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.lang.String CONFIG_KEY_SER;
    private static final java.lang.String CONFIG_KEY_CLASS;
    private org.apache.flink.api.common.typeutils.TypeSerializer serializer;
    private boolean firstSerializer;
    private java.lang.Class clazz;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: boolean firstSerializer> = 1;

        return;
    }

    public void <init>(org.apache.flink.api.common.typeutils.TypeSerializer, java.lang.Class)
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r1;
        java.lang.Class r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory;

        r1 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializer;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: boolean firstSerializer> = 1;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label2:
        r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: java.lang.Class clazz> = r2;

        r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: org.apache.flink.api.common.typeutils.TypeSerializer serializer> = r1;

        return;
    }

    public void writeParametersToConfig(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory r0;
        org.apache.flink.configuration.Configuration r1;
        java.lang.Class $r3;
        org.apache.flink.api.common.typeutils.TypeSerializer $r4;
        java.lang.Exception $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

     label1:
        $r3 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: java.lang.Class clazz>;

        staticinvoke <org.apache.flink.util.InstantiationUtil: void writeObjectToConfig(java.lang.Object,org.apache.flink.configuration.Configuration,java.lang.String)>($r3, r1, "CLASS_DATA");

        $r4 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: org.apache.flink.api.common.typeutils.TypeSerializer serializer>;

        staticinvoke <org.apache.flink.util.InstantiationUtil: void writeObjectToConfig(java.lang.Object,org.apache.flink.configuration.Configuration,java.lang.String)>($r4, r1, "SER_DATA");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not serialize serializer into the configuration.", $r5);

        throw $r6;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void readParametersFromConfig(org.apache.flink.configuration.Configuration, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory r0;
        org.apache.flink.configuration.Configuration r1;
        java.lang.ClassLoader r2;
        java.lang.NullPointerException $r3;
        java.lang.Object $r4, $r6;
        java.lang.Class $r5;
        org.apache.flink.api.common.typeutils.TypeSerializer $r7;
        java.lang.Exception $r8;
        java.lang.RuntimeException $r9;
        java.lang.ClassNotFoundException $r10;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        r2 := @parameter1: java.lang.ClassLoader;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label2:
        $r4 = staticinvoke <org.apache.flink.util.InstantiationUtil: java.lang.Object readObjectFromConfig(org.apache.flink.configuration.Configuration,java.lang.String,java.lang.ClassLoader)>(r1, "CLASS_DATA", r2);

        $r5 = (java.lang.Class) $r4;

        r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: java.lang.Class clazz> = $r5;

        $r6 = staticinvoke <org.apache.flink.util.InstantiationUtil: java.lang.Object readObjectFromConfig(org.apache.flink.configuration.Configuration,java.lang.String,java.lang.ClassLoader)>(r1, "SER_DATA", r2);

        $r7 = (org.apache.flink.api.common.typeutils.TypeSerializer) $r6;

        r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: org.apache.flink.api.common.typeutils.TypeSerializer serializer> = $r7;

        r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: boolean firstSerializer> = 1;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        throw $r10;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not load deserializer from the configuration.", $r8);

        throw $r9;

     label6:
        return;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer getSerializer()
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory r0;
        org.apache.flink.api.common.typeutils.TypeSerializer $r1, $r3, $r4, $r5;
        java.lang.RuntimeException $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: org.apache.flink.api.common.typeutils.TypeSerializer serializer>;

        if $r1 == null goto label2;

        $z0 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: boolean firstSerializer>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: boolean firstSerializer> = 0;

        $r5 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: org.apache.flink.api.common.typeutils.TypeSerializer serializer>;

        return $r5;

     label1:
        $r3 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: org.apache.flink.api.common.typeutils.TypeSerializer serializer>;

        $r4 = virtualinvoke $r3.<org.apache.flink.api.common.typeutils.TypeSerializer: org.apache.flink.api.common.typeutils.TypeSerializer duplicate()>();

        return $r4;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("SerializerFactory has not been initialized from configuration.");

        throw $r2;
    }

    public java.lang.Class getDataType()
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: java.lang.Class clazz>;

        return $r1;
    }

    public int hashCode()
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory r0;
        java.lang.Class $r1;
        int $i0, $i1, $i2;
        org.apache.flink.api.common.typeutils.TypeSerializer $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: java.lang.Class clazz>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: org.apache.flink.api.common.typeutils.TypeSerializer serializer>;

        $i1 = virtualinvoke $r2.<org.apache.flink.api.common.typeutils.TypeSerializer: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.Class $r3, $r4;
        org.apache.flink.api.common.typeutils.TypeSerializer $r5, $r6;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory;

        if $z0 == 0 goto label3;

        r2 = (org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory) r1;

        $r4 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: java.lang.Class clazz>;

        $r3 = r2.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: java.lang.Class clazz>;

        if $r4 != $r3 goto label1;

        $r6 = r0.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: org.apache.flink.api.common.typeutils.TypeSerializer serializer>;

        $r5 = r2.<org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: org.apache.flink.api.common.typeutils.TypeSerializer serializer>;

        $z1 = virtualinvoke $r6.<org.apache.flink.api.common.typeutils.TypeSerializer: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: java.lang.String CONFIG_KEY_CLASS> = "CLASS_DATA";

        <org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: java.lang.String CONFIG_KEY_SER> = "SER_DATA";

        <org.apache.flink.api.java.typeutils.runtime.RuntimeSerializerFactory: long serialVersionUID> = 1L;

        return;
    }
}
