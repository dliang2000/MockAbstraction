public class javassist.bytecode.NestHostAttribute extends javassist.bytecode.AttributeInfo
{
    public static final java.lang.String tag;

    void <init>(javassist.bytecode.ConstPool, int, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.NestHostAttribute r0;
        javassist.bytecode.ConstPool r1;
        int i0;
        java.io.DataInputStream r2;

        r0 := @this: javassist.bytecode.NestHostAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.DataInputStream;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r1, i0, r2);

        return;
    }

    private void <init>(javassist.bytecode.ConstPool, int)
    {
        javassist.bytecode.NestHostAttribute r0;
        javassist.bytecode.ConstPool r1;
        int i0;
        byte[] $r2, $r3;

        r0 := @this: javassist.bytecode.NestHostAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        $r2 = newarray (byte)[2];

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,byte[])>(r1, "NestHost", $r2);

        $r3 = virtualinvoke r0.<javassist.bytecode.NestHostAttribute: byte[] get()>();

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i0, $r3, 0);

        return;
    }

    public javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.NestHostAttribute r0, $r5;
        javassist.bytecode.ConstPool r1, $r4;
        java.util.Map r2;
        int i0, i1;
        byte[] $r3;

        r0 := @this: javassist.bytecode.NestHostAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke r0.<javassist.bytecode.NestHostAttribute: byte[] get()>();

        i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r3, 0);

        $r4 = virtualinvoke r0.<javassist.bytecode.NestHostAttribute: javassist.bytecode.ConstPool getConstPool()>();

        i1 = virtualinvoke $r4.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>(i0, r1, r2);

        $r5 = new javassist.bytecode.NestHostAttribute;

        specialinvoke $r5.<javassist.bytecode.NestHostAttribute: void <init>(javassist.bytecode.ConstPool,int)>(r1, i1);

        return $r5;
    }

    public int hostClassIndex()
    {
        javassist.bytecode.NestHostAttribute r0;
        byte[] $r1;
        int $i0;

        r0 := @this: javassist.bytecode.NestHostAttribute;

        $r1 = r0.<javassist.bytecode.NestHostAttribute: byte[] info>;

        $i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, 0);

        return $i0;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.NestHostAttribute: java.lang.String tag> = "NestHost";

        return;
    }
}
