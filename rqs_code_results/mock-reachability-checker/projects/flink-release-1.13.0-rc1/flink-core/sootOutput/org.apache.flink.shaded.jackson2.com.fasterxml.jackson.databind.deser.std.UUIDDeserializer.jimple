public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer
{
    private static final long serialVersionUID;
    static final int[] HEX_DIGITS;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/UUID;");

        return;
    }

    public java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.util.UUID $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r2 = new java.util.UUID;

        specialinvoke $r2.<java.util.UUID: void <init>(long,long)>(0L, 0L);

        return $r2;
    }

    protected java.util.UUID _deserialize(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        long l0, l2, l10, l11, $l13, l14, $l16, l17, l21, l22, l24, $l25, l26;
        int i1, $i3, $i8, $i9, $i12, $i15, $i18, $i19, $i20, $i23;
        char $c4, $c5, $c6, $c7;
        java.util.UUID $r4, $r6, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant $r5;
        byte[] r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 == 36 goto label2;

        $i8 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i8 != 24 goto label1;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variants: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant getDefaultVariant()>();

        r7 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: byte[] decode(java.lang.String)>(r1);

        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID _fromBytes(byte[],org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r7, r2);

        return $r6;

     label1:
        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID _badFormat(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r4;

     label2:
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(8);

        if $c4 != 45 goto label3;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(13);

        if $c5 != 45 goto label3;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(18);

        if $c6 != 45 goto label3;

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(23);

        if $c7 == 45 goto label4;

     label3:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID _badFormat(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

     label4:
        $i9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int intFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, 0, r2);

        l10 = (long) $i9;

        l11 = l10 << 32;

        $i12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int shortFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, 9, r2);

        $l13 = (long) $i12;

        l14 = $l13 << 16;

        $i15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int shortFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, 14, r2);

        $l16 = (long) $i15;

        l17 = l14 | $l16;

        l0 = l11 + l17;

        $i18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int shortFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, 19, r2);

        $i19 = $i18 << 16;

        $i20 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int shortFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, 24, r2);

        i1 = $i19 | $i20;

        l21 = (long) i1;

        l22 = l21 << 32;

        $i23 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int intFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, 28, r2);

        l24 = (long) $i23;

        $l25 = l24 << 32;

        l26 = $l25 >>> 32;

        l2 = l22 | l26;

        $r8 = new java.util.UUID;

        specialinvoke $r8.<java.util.UUID: void <init>(long,long)>(l0, l2);

        return $r8;
    }

    protected java.util.UUID _deserializeEmbedded(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;
        java.lang.Object r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        boolean $z0;
        java.util.UUID $r4, $r7;
        byte[] $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label1;

        $r5 = (byte[]) r1;

        $r6 = (byte[]) $r5;

        $r7 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID _fromBytes(byte[],org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>($r6, r2);

        return $r7;

     label1:
        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeEmbedded(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r4 = (java.util.UUID) $r3;

        return $r4;
    }

    private java.util.UUID _badFormat(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Class $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        java.util.UUID $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.lang.Class handledType()>();

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>($r3, r1, "UUID has to be represented by standard 36-char representation", $r4);

        $r6 = (java.util.UUID) $r5;

        return $r6;
    }

    int intFromChars(java.lang.String, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, i0, r2);

        $i3 = $i1 << 24;

        $i2 = i0 + 2;

        $i4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, $i2, r2);

        $i5 = $i4 << 16;

        $i7 = $i3 + $i5;

        $i6 = i0 + 4;

        $i8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, $i6, r2);

        $i9 = $i8 << 8;

        $i11 = $i7 + $i9;

        $i10 = i0 + 6;

        $i12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, $i10, r2);

        $i13 = $i11 + $i12;

        return $i13;
    }

    int shortFromChars(java.lang.String, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, i0, r2);

        $i3 = $i1 << 8;

        $i2 = i0 + 2;

        $i4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, $i2, r2);

        $i5 = $i3 + $i4;

        return $i5;
    }

    int byteFromChars(java.lang.String, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;
        java.lang.String r1;
        int i0, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        char c1, c2;
        int[] $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        $i4 = i0 + 1;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        if c1 > 127 goto label1;

        if c2 > 127 goto label1;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;

        $i9 = $r4[c1];

        $i11 = $i9 << 4;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;

        $i10 = $r5[c2];

        i3 = $i11 | $i10;

        if i3 < 0 goto label1;

        return i3;

     label1:
        if c1 > 127 goto label2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;

        $i6 = $r3[c1];

        if $i6 >= 0 goto label3;

     label2:
        $i5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int _badChar(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,char)>(r1, i0, r2, c1);

        return $i5;

     label3:
        $i7 = i0 + 1;

        $i8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int _badChar(java.lang.String,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,char)>(r1, $i7, r2, c2);

        return $i8;
    }

    int _badChar(java.lang.String, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, char) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;
        java.lang.String r1, $r6, $r7;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        char c1;
        java.lang.Class $r3;
        java.lang.Object[] $r4;
        java.lang.Character $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        c1 := @parameter3: char;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.lang.Class handledType()>();

        $r4 = newarray (java.lang.Object)[2];

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1);

        $r4[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Non-hex character \'%c\' (value 0x%s), not valid for UUID String", $r4);

        $r8 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String)>(r1, $r3, $r7);

        throw $r8;
    }

    private java.util.UUID _fromBytes(byte[], org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;
        byte[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int $i0, $i3;
        java.util.UUID $r3;
        long $l1, $l2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        java.lang.Class $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidFormatException $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        r1 := @parameter0: byte[];

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $i0 = lengthof r1;

        if $i0 == 16 goto label1;

        $r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser getParser()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can only construct UUIDs from byte[16]; got ");

        $i3 = lengthof r1;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.lang.Class handledType()>();

        $r11 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidFormatException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidFormatException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>($r4, $r9, r1, $r10);

        throw $r11;

     label1:
        $r3 = new java.util.UUID;

        $l1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: long _long(byte[],int)>(r1, 0);

        $l2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: long _long(byte[],int)>(r1, 8);

        specialinvoke $r3.<java.util.UUID: void <init>(long,long)>($l1, $l2);

        return $r3;
    }

    private static long _long(byte[], int)
    {
        byte[] r0;
        int i0, $i2, $i4, $i5;
        long l1, $l3, $l6, $l7, l8, l9;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int _int(byte[],int)>(r0, i0);

        $l3 = (long) $i2;

        l1 = $l3 << 32;

        $i4 = i0 + 4;

        $i5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int _int(byte[],int)>(r0, $i4);

        l8 = (long) $i5;

        $l6 = l8 << 32;

        l9 = $l6 >>> 32;

        $l7 = l1 | l9;

        return $l7;
    }

    private static int _int(byte[], int)
    {
        byte[] r0;
        int i0, $i2, $i5, $i6, $i7, $i10, $i11, $i12, $i15, $i16;
        byte $b1, $b3, $b8, $b13;
        short $s4, $s9, $s14;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $i6 = $b1 << 24;

        $i2 = i0 + 1;

        $b3 = r0[$i2];

        $s4 = $b3 & 255;

        $i5 = $s4 << 16;

        $i11 = $i6 | $i5;

        $i7 = i0 + 2;

        $b8 = r0[$i7];

        $s9 = $b8 & 255;

        $i10 = $s9 << 8;

        $i15 = $i11 | $i10;

        $i12 = i0 + 3;

        $b13 = r0[$i12];

        $s14 = $b13 & 255;

        $i16 = $i15 | $s14;

        return $i16;
    }

    protected volatile java.lang.Object _deserializeEmbedded(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.util.UUID $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID _deserializeEmbedded(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    protected volatile java.lang.Object _deserialize(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.util.UUID $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID _deserialize(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        int[] $r0, $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: long serialVersionUID> = 1L;

        $r0 = newarray (int)[127];

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS> = $r0;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r1, -1);

        i5 = 0;

     label1:
        if i5 >= 10 goto label2;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;

        $i4 = 48 + i5;

        $r4[$i4] = i5;

        i5 = i5 + 1;

        goto label1;

     label2:
        i6 = 0;

     label3:
        if i6 >= 6 goto label4;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;

        $i1 = 97 + i6;

        $i0 = 10 + i6;

        $r2[$i1] = $i0;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;

        $i3 = 65 + i6;

        $i2 = 10 + i6;

        $r3[$i3] = $i2;

        i6 = i6 + 1;

        goto label3;

     label4:
        return;
    }
}
