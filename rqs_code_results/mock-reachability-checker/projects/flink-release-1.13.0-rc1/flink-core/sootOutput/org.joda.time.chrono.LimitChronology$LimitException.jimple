class org.joda.time.chrono.LimitChronology$LimitException extends java.lang.IllegalArgumentException
{
    private static final long serialVersionUID;
    private final boolean iIsLow;
    final org.joda.time.chrono.LimitChronology this$0;

    void <init>(org.joda.time.chrono.LimitChronology, java.lang.String, boolean)
    {
        org.joda.time.chrono.LimitChronology$LimitException r0;
        org.joda.time.chrono.LimitChronology r1;
        java.lang.String r2;
        boolean z0;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitException;

        r1 := @parameter0: org.joda.time.chrono.LimitChronology;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r0.<org.joda.time.chrono.LimitChronology$LimitException: org.joda.time.chrono.LimitChronology this$0> = r1;

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r2);

        r0.<org.joda.time.chrono.LimitChronology$LimitException: boolean iIsLow> = z0;

        return;
    }

    public java.lang.String getMessage()
    {
        org.joda.time.chrono.LimitChronology$LimitException r0;
        java.lang.String r2, $r16;
        java.lang.StringBuffer $r3;
        org.joda.time.chrono.LimitChronology $r6, $r9, $r12, $r18;
        org.joda.time.Chronology $r7, $r13;
        boolean $z0;
        org.joda.time.DateTime $r10, $r19;
        long $l0, $l1;
        org.joda.time.format.DateTimeFormatter r22, r23;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>(85);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The");

        r2 = specialinvoke r0.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        if r2 == null goto label1;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

     label1:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" instant is ");

        r22 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateTime()>();

        $r6 = r0.<org.joda.time.chrono.LimitChronology$LimitException: org.joda.time.chrono.LimitChronology this$0>;

        $r7 = virtualinvoke $r6.<org.joda.time.chrono.LimitChronology: org.joda.time.Chronology getBase()>();

        r23 = virtualinvoke r22.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withChronology(org.joda.time.Chronology)>($r7);

        $z0 = r0.<org.joda.time.chrono.LimitChronology$LimitException: boolean iIsLow>;

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("below the supported minimum of ");

        $r18 = r0.<org.joda.time.chrono.LimitChronology$LimitException: org.joda.time.chrono.LimitChronology this$0>;

        $r19 = virtualinvoke $r18.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getLowerLimit()>();

        $l1 = virtualinvoke $r19.<org.joda.time.DateTime: long getMillis()>();

        virtualinvoke r23.<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long)>($r3, $l1);

        goto label3;

     label2:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("above the supported maximum of ");

        $r9 = r0.<org.joda.time.chrono.LimitChronology$LimitException: org.joda.time.chrono.LimitChronology this$0>;

        $r10 = virtualinvoke $r9.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getUpperLimit()>();

        $l0 = virtualinvoke $r10.<org.joda.time.DateTime: long getMillis()>();

        virtualinvoke r23.<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long)>($r3, $l0);

     label3:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r12 = r0.<org.joda.time.chrono.LimitChronology$LimitException: org.joda.time.chrono.LimitChronology this$0>;

        $r13 = virtualinvoke $r12.<org.joda.time.chrono.LimitChronology: org.joda.time.Chronology getBase()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r13);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r16 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r16;
    }

    public java.lang.String toString()
    {
        org.joda.time.chrono.LimitChronology$LimitException r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalArgumentException: ");

        $r3 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.LimitChronology$LimitException: long serialVersionUID> = -5924689995607498581L;

        return;
    }
}
