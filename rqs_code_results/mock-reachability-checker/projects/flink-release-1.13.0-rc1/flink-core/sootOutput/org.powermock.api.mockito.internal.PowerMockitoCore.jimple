public class org.powermock.api.mockito.internal.PowerMockitoCore extends java.lang.Object
{
    private static final org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod POWER_MOCK_CALL_REAL_METHOD;
    private static final java.lang.String NO_OBJECT_CREATION_ERROR_MESSAGE_TEMPLATE;

    public void <init>()
    {
        org.powermock.api.mockito.internal.PowerMockitoCore r0;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.powermock.api.mockito.expectation.PowerMockitoStubber doAnswer(org.mockito.stubbing.Answer)
    {
        org.powermock.api.mockito.internal.PowerMockitoCore r0;
        org.mockito.stubbing.Answer r1;
        org.powermock.api.mockito.internal.PowerMockitoCore$1 $r2;
        org.powermock.api.mockito.expectation.PowerMockitoStubber $r3;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore;

        r1 := @parameter0: org.mockito.stubbing.Answer;

        $r2 = new org.powermock.api.mockito.internal.PowerMockitoCore$1;

        specialinvoke $r2.<org.powermock.api.mockito.internal.PowerMockitoCore$1: void <init>(org.powermock.api.mockito.internal.PowerMockitoCore,org.mockito.stubbing.Answer)>(r0, r1);

        $r3 = specialinvoke r0.<org.powermock.api.mockito.internal.PowerMockitoCore: org.powermock.api.mockito.expectation.PowerMockitoStubber doAnswer(java.util.concurrent.Callable)>($r2);

        return $r3;
    }

    public org.powermock.api.mockito.expectation.PowerMockitoStubber doThrow(java.lang.Throwable)
    {
        org.powermock.api.mockito.internal.PowerMockitoCore r0;
        java.lang.Throwable r1;
        org.powermock.api.mockito.internal.PowerMockitoCore$2 $r2;
        org.powermock.api.mockito.expectation.PowerMockitoStubber $r3;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = new org.powermock.api.mockito.internal.PowerMockitoCore$2;

        specialinvoke $r2.<org.powermock.api.mockito.internal.PowerMockitoCore$2: void <init>(org.powermock.api.mockito.internal.PowerMockitoCore,java.lang.Throwable)>(r0, r1);

        $r3 = specialinvoke r0.<org.powermock.api.mockito.internal.PowerMockitoCore: org.powermock.api.mockito.expectation.PowerMockitoStubber doAnswer(java.util.concurrent.Callable)>($r2);

        return $r3;
    }

    public org.powermock.api.mockito.expectation.PowerMockitoStubber doCallRealMethod()
    {
        org.powermock.api.mockito.internal.PowerMockitoCore r0;
        org.powermock.api.mockito.internal.PowerMockitoCore$3 $r1;
        org.powermock.api.mockito.expectation.PowerMockitoStubber $r2;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore;

        $r1 = new org.powermock.api.mockito.internal.PowerMockitoCore$3;

        specialinvoke $r1.<org.powermock.api.mockito.internal.PowerMockitoCore$3: void <init>(org.powermock.api.mockito.internal.PowerMockitoCore)>(r0);

        $r2 = specialinvoke r0.<org.powermock.api.mockito.internal.PowerMockitoCore: org.powermock.api.mockito.expectation.PowerMockitoStubber doAnswer(java.util.concurrent.Callable)>($r1);

        return $r2;
    }

    public org.powermock.api.mockito.expectation.PowerMockitoStubber doNothing()
    {
        org.powermock.api.mockito.internal.PowerMockitoCore r0;
        org.powermock.api.mockito.internal.PowerMockitoCore$4 $r1;
        org.powermock.api.mockito.expectation.PowerMockitoStubber $r2;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore;

        $r1 = new org.powermock.api.mockito.internal.PowerMockitoCore$4;

        specialinvoke $r1.<org.powermock.api.mockito.internal.PowerMockitoCore$4: void <init>(org.powermock.api.mockito.internal.PowerMockitoCore)>(r0);

        $r2 = specialinvoke r0.<org.powermock.api.mockito.internal.PowerMockitoCore: org.powermock.api.mockito.expectation.PowerMockitoStubber doAnswer(java.util.concurrent.Callable)>($r1);

        return $r2;
    }

    public org.powermock.api.mockito.expectation.PowerMockitoStubber doReturn(java.lang.Object)
    {
        org.powermock.api.mockito.internal.PowerMockitoCore r0;
        java.lang.Object r1;
        org.powermock.api.mockito.internal.PowerMockitoCore$5 $r2;
        org.powermock.api.mockito.expectation.PowerMockitoStubber $r3;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore;

        r1 := @parameter0: java.lang.Object;

        $r2 = new org.powermock.api.mockito.internal.PowerMockitoCore$5;

        specialinvoke $r2.<org.powermock.api.mockito.internal.PowerMockitoCore$5: void <init>(org.powermock.api.mockito.internal.PowerMockitoCore,java.lang.Object)>(r0, r1);

        $r3 = specialinvoke r0.<org.powermock.api.mockito.internal.PowerMockitoCore: org.powermock.api.mockito.expectation.PowerMockitoStubber doAnswer(java.util.concurrent.Callable)>($r2);

        return $r3;
    }

    public transient org.powermock.api.mockito.expectation.PowerMockitoStubber doAnswer(java.lang.Object, java.lang.Object[])
    {
        org.powermock.api.mockito.internal.PowerMockitoCore r0;
        java.lang.Object r1;
        java.lang.Object[] r2;
        org.powermock.api.mockito.internal.PowerMockitoCore$6 $r3;
        org.powermock.api.mockito.expectation.PowerMockitoStubber $r4;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $r3 = new org.powermock.api.mockito.internal.PowerMockitoCore$6;

        specialinvoke $r3.<org.powermock.api.mockito.internal.PowerMockitoCore$6: void <init>(org.powermock.api.mockito.internal.PowerMockitoCore,java.lang.Object,java.lang.Object[])>(r0, r1, r2);

        $r4 = specialinvoke r0.<org.powermock.api.mockito.internal.PowerMockitoCore: org.powermock.api.mockito.expectation.PowerMockitoStubber doAnswer(java.util.concurrent.Callable)>($r3);

        return $r4;
    }

    public org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification verifyNew(java.lang.Class, org.mockito.verification.VerificationMode)
    {
        org.powermock.api.mockito.internal.PowerMockitoCore r0;
        java.lang.Class r1, $r6;
        org.mockito.verification.VerificationMode r2;
        org.powermock.api.mockito.internal.invocation.MockitoNewInvocationControl r3;
        org.powermock.core.spi.NewInvocationControl $r4;
        java.lang.Object[] $r5;
        java.lang.String $r7, $r8;
        org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification $r9;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.mockito.verification.VerificationMode;

        staticinvoke <org.powermock.utils.Asserts: void assertNotNull(java.lang.Object,java.lang.String)>(r1, "Class to verify cannot be null");

        staticinvoke <org.powermock.utils.Asserts: void assertNotNull(java.lang.Object,java.lang.String)>(r2, "Verify mode cannot be null");

        $r4 = staticinvoke <org.powermock.core.MockRepository: org.powermock.core.spi.NewInvocationControl getNewInstanceControl(java.lang.Class)>(r1);

        r3 = (org.powermock.api.mockito.internal.invocation.MockitoNewInvocationControl) $r4;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <org.powermock.reflect.Whitebox: java.lang.Class getType(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No instantiation of class %s was recorded during the test. Note that only expected object creations (e.g. those using whenNew(..)) can be verified.", $r5);

        staticinvoke <org.powermock.utils.Asserts: void assertNotNull(java.lang.Object,java.lang.String)>(r3, $r8);

        virtualinvoke r3.<org.powermock.api.mockito.internal.invocation.MockitoNewInvocationControl: void verify(org.mockito.verification.VerificationMode)>(r2);

        $r9 = new org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification;

        specialinvoke $r9.<org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification: void <init>(org.powermock.core.spi.NewInvocationControl,java.lang.Class)>(r3, r1);

        return $r9;
    }

    public java.lang.Object spy(java.lang.Object)
    {
        org.powermock.api.mockito.internal.PowerMockitoCore r0;
        java.lang.Object r1, $r8;
        org.mockito.MockSettings r2, $r3, $r4;
        org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod $r5;
        java.lang.Class $r6;
        java.lang.reflect.Method[] $r7;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore;

        r1 := @parameter0: java.lang.Object;

        $r3 = staticinvoke <org.mockito.Mockito: org.mockito.MockSettings withSettings()>();

        $r4 = interfaceinvoke $r3.<org.mockito.MockSettings: org.mockito.MockSettings spiedInstance(java.lang.Object)>(r1);

        $r5 = <org.powermock.api.mockito.internal.PowerMockitoCore: org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod POWER_MOCK_CALL_REAL_METHOD>;

        r2 = interfaceinvoke $r4.<org.mockito.MockSettings: org.mockito.MockSettings defaultAnswer(org.mockito.stubbing.Answer)>($r5);

        $r6 = staticinvoke <org.powermock.reflect.Whitebox: java.lang.Class getType(java.lang.Object)>(r1);

        $r7 = (java.lang.reflect.Method[]) null;

        $r8 = staticinvoke <org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator: java.lang.Object mock(java.lang.Class,boolean,boolean,java.lang.Object,org.mockito.MockSettings,java.lang.reflect.Method[])>($r6, 0, 1, r1, r2, $r7);

        return $r8;
    }

    private org.powermock.api.mockito.expectation.PowerMockitoStubber doAnswer(java.util.concurrent.Callable)
    {
        org.powermock.api.mockito.internal.PowerMockitoCore r0;
        java.util.concurrent.Callable r1;
        org.mockito.stubbing.Stubber r2;
        java.lang.Object $r3;
        org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl $r4;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore;

        r1 := @parameter0: java.util.concurrent.Callable;

        $r3 = staticinvoke <org.powermock.core.classloader.ClassloaderWrapper: java.lang.Object runWithClass(java.util.concurrent.Callable)>(r1);

        r2 = (org.mockito.stubbing.Stubber) $r3;

        $r4 = new org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl;

        specialinvoke $r4.<org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl: void <init>(org.mockito.stubbing.Stubber)>(r2);

        return $r4;
    }

    static void <clinit>()
    {
        org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod $r0;

        <org.powermock.api.mockito.internal.PowerMockitoCore: java.lang.String NO_OBJECT_CREATION_ERROR_MESSAGE_TEMPLATE> = "No instantiation of class %s was recorded during the test. Note that only expected object creations (e.g. those using whenNew(..)) can be verified.";

        $r0 = new org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod;

        specialinvoke $r0.<org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod: void <init>()>();

        <org.powermock.api.mockito.internal.PowerMockitoCore: org.powermock.api.mockito.internal.stubbing.PowerMockCallRealMethod POWER_MOCK_CALL_REAL_METHOD> = $r0;

        return;
    }
}
