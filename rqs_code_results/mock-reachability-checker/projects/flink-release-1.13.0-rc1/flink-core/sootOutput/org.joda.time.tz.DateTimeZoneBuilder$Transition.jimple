final class org.joda.time.tz.DateTimeZoneBuilder$Transition extends java.lang.Object
{
    private final long iMillis;
    private final java.lang.String iNameKey;
    private final int iWallOffset;
    private final int iStandardOffset;

    void <init>(long, org.joda.time.tz.DateTimeZoneBuilder$Transition)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Transition r0, r1;
        long l0;
        java.lang.String $r2;
        int $i1, $i2;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Transition;

        l0 := @parameter0: long;

        r1 := @parameter1: org.joda.time.tz.DateTimeZoneBuilder$Transition;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: long iMillis> = l0;

        $r2 = r1.<org.joda.time.tz.DateTimeZoneBuilder$Transition: java.lang.String iNameKey>;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: java.lang.String iNameKey> = $r2;

        $i1 = r1.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iWallOffset>;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iWallOffset> = $i1;

        $i2 = r1.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iStandardOffset>;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iStandardOffset> = $i2;

        return;
    }

    void <init>(long, org.joda.time.tz.DateTimeZoneBuilder$Rule, int)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Transition r0;
        long l0;
        org.joda.time.tz.DateTimeZoneBuilder$Rule r1;
        int i1, $i2, $i3;
        java.lang.String $r2;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Transition;

        l0 := @parameter0: long;

        r1 := @parameter1: org.joda.time.tz.DateTimeZoneBuilder$Rule;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: long iMillis> = l0;

        $r2 = virtualinvoke r1.<org.joda.time.tz.DateTimeZoneBuilder$Rule: java.lang.String getNameKey()>();

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: java.lang.String iNameKey> = $r2;

        $i2 = virtualinvoke r1.<org.joda.time.tz.DateTimeZoneBuilder$Rule: int getSaveMillis()>();

        $i3 = i1 + $i2;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iWallOffset> = $i3;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iStandardOffset> = i1;

        return;
    }

    void <init>(long, java.lang.String, int, int)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Transition r0;
        long l0;
        java.lang.String r1;
        int i1, i2;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Transition;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: long iMillis> = l0;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: java.lang.String iNameKey> = r1;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iWallOffset> = i1;

        r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iStandardOffset> = i2;

        return;
    }

    public long getMillis()
    {
        org.joda.time.tz.DateTimeZoneBuilder$Transition r0;
        long $l0;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Transition;

        $l0 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: long iMillis>;

        return $l0;
    }

    public java.lang.String getNameKey()
    {
        org.joda.time.tz.DateTimeZoneBuilder$Transition r0;
        java.lang.String $r1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Transition;

        $r1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: java.lang.String iNameKey>;

        return $r1;
    }

    public int getWallOffset()
    {
        org.joda.time.tz.DateTimeZoneBuilder$Transition r0;
        int $i0;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Transition;

        $i0 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iWallOffset>;

        return $i0;
    }

    public int getStandardOffset()
    {
        org.joda.time.tz.DateTimeZoneBuilder$Transition r0;
        int $i0;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Transition;

        $i0 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iStandardOffset>;

        return $i0;
    }

    public int getSaveMillis()
    {
        org.joda.time.tz.DateTimeZoneBuilder$Transition r0;
        int $i0, $i1, $i2;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Transition;

        $i1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iWallOffset>;

        $i0 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iStandardOffset>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public boolean isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)
    {
        org.joda.time.tz.DateTimeZoneBuilder$Transition r0, r1;
        long $l0, $l1;
        byte $b2;
        int $i3, $i4;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.joda.time.tz.DateTimeZoneBuilder$Transition;

        r1 := @parameter0: org.joda.time.tz.DateTimeZoneBuilder$Transition;

        if r1 != null goto label1;

        return 1;

     label1:
        $l1 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: long iMillis>;

        $l0 = r1.<org.joda.time.tz.DateTimeZoneBuilder$Transition: long iMillis>;

        $b2 = $l1 cmp $l0;

        if $b2 <= 0 goto label3;

        $i4 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iWallOffset>;

        $i3 = r1.<org.joda.time.tz.DateTimeZoneBuilder$Transition: int iWallOffset>;

        if $i4 != $i3 goto label2;

        $r3 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Transition: java.lang.String iNameKey>;

        $r2 = r1.<org.joda.time.tz.DateTimeZoneBuilder$Transition: java.lang.String iNameKey>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }
}
