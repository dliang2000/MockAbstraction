public class org.apache.flink.configuration.OptimizerOptions extends java.lang.Object
{
    public static final org.apache.flink.configuration.ConfigOption DELIMITED_FORMAT_MAX_LINE_SAMPLES;
    public static final org.apache.flink.configuration.ConfigOption DELIMITED_FORMAT_MIN_LINE_SAMPLES;
    public static final org.apache.flink.configuration.ConfigOption DELIMITED_FORMAT_MAX_SAMPLE_LEN;

    public void <init>()
    {
        org.apache.flink.configuration.OptimizerOptions r0;

        r0 := @this: org.apache.flink.configuration.OptimizerOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r0, $r4, $r8;
        java.lang.Integer $r1, $r5, $r9;
        org.apache.flink.configuration.ConfigOption $r2, $r3, $r6, $r7, $r10, $r11;

        $r0 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("compiler.delimited-informat.max-line-samples");

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r2 = virtualinvoke $r0.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The maximum number of line samples taken by the compiler for delimited inputs. The samples are used to estimate the number of records. This value can be overridden for a specific input with the input format\u2019s parameters.");

        <org.apache.flink.configuration.OptimizerOptions: org.apache.flink.configuration.ConfigOption DELIMITED_FORMAT_MAX_LINE_SAMPLES> = $r3;

        $r4 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("compiler.delimited-informat.min-line-samples");

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r6 = virtualinvoke $r4.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The minimum number of line samples taken by the compiler for delimited inputs. The samples are used to estimate the number of records. This value can be overridden for a specific input with the input format\u2019s parameters");

        <org.apache.flink.configuration.OptimizerOptions: org.apache.flink.configuration.ConfigOption DELIMITED_FORMAT_MIN_LINE_SAMPLES> = $r7;

        $r8 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("compiler.delimited-informat.max-sample-len");

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2097152);

        $r10 = virtualinvoke $r8.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDescription(java.lang.String)>("The maximal length of a line sample that the compiler takes for delimited inputs. If the length of a single sample exceeds this value (possible because of misconfiguration of the parser), the sampling aborts. This value can be overridden for a specific input with the input format\u2019s parameters.");

        <org.apache.flink.configuration.OptimizerOptions: org.apache.flink.configuration.ConfigOption DELIMITED_FORMAT_MAX_SAMPLE_LEN> = $r11;

        return;
    }
}
