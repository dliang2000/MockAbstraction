public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
{
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig _config;
    protected final java.util.concurrent.ConcurrentHashMap _typeToId;
    protected final java.util.Map _idToType;
    protected final boolean _caseInsensitive;

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.util.concurrent.ConcurrentHashMap, java.util.HashMap)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        java.util.concurrent.ConcurrentHashMap r3;
        java.util.HashMap r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r6;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: java.util.concurrent.ConcurrentHashMap;

        r4 := @parameter3: java.util.HashMap;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>(r2, $r5);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig _config> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.util.concurrent.ConcurrentHashMap _typeToId> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.util.Map _idToType> = r4;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_VALUES>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r6);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: boolean _caseInsensitive> = $z0;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.util.Collection, boolean, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r6, $r13;
        java.util.Collection r2;
        boolean z0, z1, z2, $z3, $z4, $z5;
        java.util.Iterator r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType r4;
        java.lang.Class r5, $r15;
        java.util.HashMap $r7, r21;
        java.util.concurrent.ConcurrentHashMap $r8, $r18, r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver $r10;
        java.lang.Object $r11, $r12;
        java.lang.String $r16, $r22, r23;
        java.lang.IllegalArgumentException $r19;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter2: java.util.Collection;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if z0 != z1 goto label01;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r19;

     label01:
        if z0 == 0 goto label02;

        $r18 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r18.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r20 = $r18;

        r21 = null;

        goto label03;

     label02:
        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r21 = $r7;

        $r8 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r8.<java.util.concurrent.ConcurrentHashMap: void <init>(int)>(4);

        r20 = $r8;

     label03:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_VALUES>;

        z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r9);

        if r2 == null goto label11;

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z5 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label11;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType) $r11;

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();

        $z3 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: boolean hasName()>();

        if $z3 == 0 goto label05;

        $r22 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.String getName()>();

        goto label06;

     label05:
        $r22 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.lang.String _defaultTypeId(java.lang.Class)>(r5);

     label06:
        r23 = $r22;

        if z0 == 0 goto label07;

        $r16 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r20.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r22);

     label07:
        if z1 == 0 goto label10;

        if z2 == 0 goto label08;

        r23 = virtualinvoke r23.<java.lang.String: java.lang.String toLowerCase()>();

     label08:
        $r12 = virtualinvoke r21.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r23);

        r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r12;

        if r6 == null goto label09;

        $r15 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z4 = virtualinvoke r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r15);

        if $z4 == 0 goto label09;

        goto label04;

     label09:
        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(r5);

        virtualinvoke r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r23, $r13);

     label10:
        goto label04;

     label11:
        $r10 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;

        specialinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.util.concurrent.ConcurrentHashMap,java.util.HashMap)>(r0, r1, r20, r21);

        return $r10;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id getMechanism()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id NAME>;

        return $r1;
    }

    public java.lang.String idFromValue(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver r0;
        java.lang.Object r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.lang.String idFromClass(java.lang.Class)>($r2);

        return $r3;
    }

    protected java.lang.String idFromClass(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver r0;
        java.lang.Class r1, r3;
        java.lang.String r2, r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r4;
        java.util.concurrent.ConcurrentHashMap $r5, $r10;
        java.lang.Object $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig $r9, $r12, $r13;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass $r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;

        r1 := @parameter0: java.lang.Class;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.util.concurrent.ConcurrentHashMap _typeToId>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r2);

        r16 = (java.lang.String) $r6;

        if r16 != null goto label4;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

        r3 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig _config>;

        $z0 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isAnnotationProcessingEnabled()>();

        if $z0 == 0 goto label2;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig _config>;

        r4 = virtualinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class)>(r3);

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig _config>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        $r15 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();

        r16 = virtualinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String findTypeName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass)>($r15);

     label2:
        if r16 != null goto label3;

        r16 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.lang.String _defaultTypeId(java.lang.Class)>(r3);

     label3:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.util.concurrent.ConcurrentHashMap _typeToId>;

        virtualinvoke $r10.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r16);

     label4:
        return r16;
    }

    public java.lang.String idFromValueAndType(java.lang.Object, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver r0;
        java.lang.Object r1;
        java.lang.Class r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        if r1 != null goto label1;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.lang.String idFromClass(java.lang.Class)>(r2);

        return $r4;

     label1:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.lang.String idFromValue(java.lang.Object)>(r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType typeFromId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String)>(r2);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver r0;
        boolean $z0;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;
        java.lang.String r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;

        r4 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: boolean _caseInsensitive>;

        if $z0 == 0 goto label1;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.util.Map _idToType>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r3 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r2;

        return $r3;
    }

    public java.lang.String getDescForKnownTypeIds()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver r0;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.TreeSet $r4;
        java.util.Map $r5;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.String $r7;
        java.lang.Object $r8, $r9, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;

        $r4 = new java.util.TreeSet;

        specialinvoke $r4.<java.util.TreeSet: void <init>()>();

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.util.Map _idToType>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r9;

        $z1 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isConcrete()>();

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r4.<java.util.TreeSet: boolean add(java.lang.Object)>($r11);

     label2:
        goto label1;

     label3:
        $r7 = virtualinvoke $r4.<java.util.TreeSet: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver r0;
        java.lang.Object[] $r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r5;
        java.util.Map $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1[0] = $r3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: java.util.Map _idToType>;

        $r1[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s; id-to-type=%s]", $r1);

        return $r5;
    }

    protected static java.lang.String _defaultTypeId(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String r1, $r2;
        int i0, $i1;

        r0 := @parameter0: java.lang.Class;

        r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 >= 0 goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $i1 = i0 + 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

     label2:
        return $r2;
    }
}
