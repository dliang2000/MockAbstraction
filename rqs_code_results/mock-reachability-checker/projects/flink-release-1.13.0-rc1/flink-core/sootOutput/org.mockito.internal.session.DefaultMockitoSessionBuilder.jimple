public class org.mockito.internal.session.DefaultMockitoSessionBuilder extends java.lang.Object implements org.mockito.session.MockitoSessionBuilder
{
    private java.util.List testClassInstances;
    private java.lang.String name;
    private org.mockito.quality.Strictness strictness;
    private org.mockito.session.MockitoSessionLogger logger;

    public void <init>()
    {
        org.mockito.internal.session.DefaultMockitoSessionBuilder r0;
        java.util.ArrayList $r1;

        r0 := @this: org.mockito.internal.session.DefaultMockitoSessionBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: java.util.List testClassInstances> = $r1;

        return;
    }

    public org.mockito.session.MockitoSessionBuilder initMocks(java.lang.Object)
    {
        org.mockito.internal.session.DefaultMockitoSessionBuilder r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: org.mockito.internal.session.DefaultMockitoSessionBuilder;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $r2 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: java.util.List testClassInstances>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return r0;
    }

    public transient org.mockito.session.MockitoSessionBuilder initMocks(java.lang.Object[])
    {
        org.mockito.internal.session.DefaultMockitoSessionBuilder r0;
        java.lang.Object[] r1;
        int i0, i1;
        java.lang.Object r3;

        r0 := @this: org.mockito.internal.session.DefaultMockitoSessionBuilder;

        r1 := @parameter0: java.lang.Object[];

        if r1 == null goto label2;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r1[i1];

        virtualinvoke r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: org.mockito.session.MockitoSessionBuilder initMocks(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public org.mockito.session.MockitoSessionBuilder name(java.lang.String)
    {
        org.mockito.internal.session.DefaultMockitoSessionBuilder r0;
        java.lang.String r1;

        r0 := @this: org.mockito.internal.session.DefaultMockitoSessionBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: java.lang.String name> = r1;

        return r0;
    }

    public org.mockito.session.MockitoSessionBuilder strictness(org.mockito.quality.Strictness)
    {
        org.mockito.internal.session.DefaultMockitoSessionBuilder r0;
        org.mockito.quality.Strictness r1;

        r0 := @this: org.mockito.internal.session.DefaultMockitoSessionBuilder;

        r1 := @parameter0: org.mockito.quality.Strictness;

        r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: org.mockito.quality.Strictness strictness> = r1;

        return r0;
    }

    public org.mockito.session.MockitoSessionBuilder logger(org.mockito.session.MockitoSessionLogger)
    {
        org.mockito.internal.session.DefaultMockitoSessionBuilder r0;
        org.mockito.session.MockitoSessionLogger r1;

        r0 := @this: org.mockito.internal.session.DefaultMockitoSessionBuilder;

        r1 := @parameter0: org.mockito.session.MockitoSessionLogger;

        r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: org.mockito.session.MockitoSessionLogger logger> = r1;

        return r0;
    }

    public org.mockito.MockitoSession startMocking()
    {
        org.mockito.internal.session.DefaultMockitoSessionBuilder r0;
        java.util.List $r2, $r4, $r5, $r6, r13;
        boolean $z0;
        int $i0, $i1;
        java.lang.String $r7, $r12, $r14, r15, $r17;
        org.mockito.session.MockitoSessionLogger $r8, $r9;
        java.lang.Class $r11;
        java.lang.Object r16;
        org.mockito.quality.Strictness $r18, $r19, r20;
        org.mockito.internal.util.MockitoLogger $r21;
        java.util.ArrayList r22;
        org.mockito.internal.util.ConsoleMockitoLogger r23;
        org.mockito.internal.session.MockitoLoggerAdapter r24;
        org.mockito.internal.framework.DefaultMockitoSession r25;

        r0 := @this: org.mockito.internal.session.DefaultMockitoSessionBuilder;

        $r2 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: java.util.List testClassInstances>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r12 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: java.lang.String name>;

        if $r12 != null goto label01;

        $r14 = "<Unnamed Session>";

        goto label02;

     label01:
        $r14 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: java.lang.String name>;

     label02:
        r15 = $r14;

        goto label06;

     label03:
        r22 = new java.util.ArrayList;

        $r4 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: java.util.List testClassInstances>;

        specialinvoke r22.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r13 = r22;

        $r6 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: java.util.List testClassInstances>;

        $r5 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: java.util.List testClassInstances>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        r16 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i1);

        $r7 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: java.lang.String name>;

        if $r7 != null goto label04;

        $r11 = virtualinvoke r16.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        goto label05;

     label04:
        $r17 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: java.lang.String name>;

     label05:
        r15 = $r17;

     label06:
        $r18 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: org.mockito.quality.Strictness strictness>;

        if $r18 != null goto label07;

        $r19 = <org.mockito.quality.Strictness: org.mockito.quality.Strictness STRICT_STUBS>;

        goto label08;

     label07:
        $r19 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: org.mockito.quality.Strictness strictness>;

     label08:
        r20 = $r19;

        $r8 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: org.mockito.session.MockitoSessionLogger logger>;

        if $r8 != null goto label09;

        r23 = new org.mockito.internal.util.ConsoleMockitoLogger;

        $r21 = r23;

        specialinvoke r23.<org.mockito.internal.util.ConsoleMockitoLogger: void <init>()>();

        goto label10;

     label09:
        r24 = new org.mockito.internal.session.MockitoLoggerAdapter;

        $r21 = r24;

        $r9 = r0.<org.mockito.internal.session.DefaultMockitoSessionBuilder: org.mockito.session.MockitoSessionLogger logger>;

        specialinvoke r24.<org.mockito.internal.session.MockitoLoggerAdapter: void <init>(org.mockito.session.MockitoSessionLogger)>($r9);

     label10:
        r25 = new org.mockito.internal.framework.DefaultMockitoSession;

        specialinvoke r25.<org.mockito.internal.framework.DefaultMockitoSession: void <init>(java.util.List,java.lang.String,org.mockito.quality.Strictness,org.mockito.internal.util.MockitoLogger)>(r13, r15, r20, $r21);

        return r25;
    }
}
