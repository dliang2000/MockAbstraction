public final class org.apache.flink.api.common.typeutils.base.BooleanSerializer extends org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton
{
    private static final long serialVersionUID;
    public static final org.apache.flink.api.common.typeutils.base.BooleanSerializer INSTANCE;
    private static final java.lang.Boolean FALSE;

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton: void <init>()>();

        return;
    }

    public boolean isImmutableType()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        return 1;
    }

    public java.lang.Boolean createInstance()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        java.lang.Boolean $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        $r1 = <org.apache.flink.api.common.typeutils.base.BooleanSerializer: java.lang.Boolean FALSE>;

        return $r1;
    }

    public java.lang.Boolean copy(java.lang.Boolean)
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        java.lang.Boolean r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        r1 := @parameter0: java.lang.Boolean;

        return r1;
    }

    public java.lang.Boolean copy(java.lang.Boolean, java.lang.Boolean)
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        java.lang.Boolean r1, r2;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        r1 := @parameter0: java.lang.Boolean;

        r2 := @parameter1: java.lang.Boolean;

        return r1;
    }

    public int getLength()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        return 1;
    }

    public void serialize(java.lang.Boolean, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        java.lang.Boolean r1;
        org.apache.flink.core.memory.DataOutputView r2;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        r1 := @parameter0: java.lang.Boolean;

        r2 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke r2.<org.apache.flink.core.memory.DataOutputView: void writeBoolean(boolean)>($z0);

        return;
    }

    public java.lang.Boolean deserialize(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        org.apache.flink.core.memory.DataInputView r1;
        boolean $z0;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        $z0 = interfaceinvoke r1.<org.apache.flink.core.memory.DataInputView: boolean readBoolean()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;
    }

    public java.lang.Boolean deserialize(java.lang.Boolean, org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        java.lang.Boolean r1, $r3;
        org.apache.flink.core.memory.DataInputView r2;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        r1 := @parameter0: java.lang.Boolean;

        r2 := @parameter1: org.apache.flink.core.memory.DataInputView;

        $z0 = interfaceinvoke r2.<org.apache.flink.core.memory.DataInputView: boolean readBoolean()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r3;
    }

    public void copy(org.apache.flink.core.memory.DataInputView, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        org.apache.flink.core.memory.DataInputView r1;
        org.apache.flink.core.memory.DataOutputView r2;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        r2 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        $z0 = interfaceinvoke r1.<org.apache.flink.core.memory.DataInputView: boolean readBoolean()>();

        interfaceinvoke r2.<org.apache.flink.core.memory.DataOutputView: void writeBoolean(boolean)>($z0);

        return;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializerSnapshot snapshotConfiguration()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        org.apache.flink.api.common.typeutils.base.BooleanSerializer$BooleanSerializerSnapshot $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        $r1 = new org.apache.flink.api.common.typeutils.base.BooleanSerializer$BooleanSerializerSnapshot;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.BooleanSerializer$BooleanSerializerSnapshot: void <init>()>();

        return $r1;
    }

    public volatile java.lang.Object deserialize(java.lang.Object, org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        java.lang.Object r1;
        org.apache.flink.core.memory.DataInputView r2;
        java.lang.Boolean $r3, $r4;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.core.memory.DataInputView;

        $r3 = (java.lang.Boolean) r1;

        $r4 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.BooleanSerializer: java.lang.Boolean deserialize(java.lang.Boolean,org.apache.flink.core.memory.DataInputView)>($r3, r2);

        return $r4;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        org.apache.flink.core.memory.DataInputView r1;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        $r2 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.BooleanSerializer: java.lang.Boolean deserialize(org.apache.flink.core.memory.DataInputView)>(r1);

        return $r2;
    }

    public volatile void serialize(java.lang.Object, org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        java.lang.Object r1;
        org.apache.flink.core.memory.DataOutputView r2;
        java.lang.Boolean $r3;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        $r3 = (java.lang.Boolean) r1;

        virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.BooleanSerializer: void serialize(java.lang.Boolean,org.apache.flink.core.memory.DataOutputView)>($r3, r2);

        return;
    }

    public volatile java.lang.Object copy(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        java.lang.Object r1, r2;
        java.lang.Boolean $r3, $r4, $r5;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Boolean) r1;

        $r3 = (java.lang.Boolean) r2;

        $r5 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.BooleanSerializer: java.lang.Boolean copy(java.lang.Boolean,java.lang.Boolean)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object copy(java.lang.Object)
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        java.lang.Object r1;
        java.lang.Boolean $r2, $r3;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Boolean) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.BooleanSerializer: java.lang.Boolean copy(java.lang.Boolean)>($r2);

        return $r3;
    }

    public volatile java.lang.Object createInstance()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer r0;
        java.lang.Boolean $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.BooleanSerializer: java.lang.Boolean createInstance()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializer $r0;
        java.lang.Boolean $r1;

        <org.apache.flink.api.common.typeutils.base.BooleanSerializer: long serialVersionUID> = 1L;

        $r0 = new org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        specialinvoke $r0.<org.apache.flink.api.common.typeutils.base.BooleanSerializer: void <init>()>();

        <org.apache.flink.api.common.typeutils.base.BooleanSerializer: org.apache.flink.api.common.typeutils.base.BooleanSerializer INSTANCE> = $r0;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        <org.apache.flink.api.common.typeutils.base.BooleanSerializer: java.lang.Boolean FALSE> = $r1;

        return;
    }
}
