class javassist.bytecode.ClassInfo extends javassist.bytecode.ConstInfo
{
    static final int tag;
    int name;

    public void <init>(int, int)
    {
        javassist.bytecode.ClassInfo r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.ClassInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<javassist.bytecode.ConstInfo: void <init>(int)>(i1);

        r0.<javassist.bytecode.ClassInfo: int name> = i0;

        return;
    }

    public void <init>(java.io.DataInputStream, int) throws java.io.IOException
    {
        javassist.bytecode.ClassInfo r0;
        java.io.DataInputStream r1;
        int i0, $i1;

        r0 := @this: javassist.bytecode.ClassInfo;

        r1 := @parameter0: java.io.DataInputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<javassist.bytecode.ConstInfo: void <init>(int)>(i0);

        $i1 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedShort()>();

        r0.<javassist.bytecode.ClassInfo: int name> = $i1;

        return;
    }

    public int hashCode()
    {
        javassist.bytecode.ClassInfo r0;
        int $i0;

        r0 := @this: javassist.bytecode.ClassInfo;

        $i0 = r0.<javassist.bytecode.ClassInfo: int name>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        javassist.bytecode.ClassInfo r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.ClassInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof javassist.bytecode.ClassInfo;

        if $z0 == 0 goto label1;

        $r2 = (javassist.bytecode.ClassInfo) r1;

        $i1 = $r2.<javassist.bytecode.ClassInfo: int name>;

        $i0 = r0.<javassist.bytecode.ClassInfo: int name>;

        if $i1 != $i0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int getTag()
    {
        javassist.bytecode.ClassInfo r0;

        r0 := @this: javassist.bytecode.ClassInfo;

        return 7;
    }

    public java.lang.String getClassName(javassist.bytecode.ConstPool)
    {
        javassist.bytecode.ClassInfo r0;
        javassist.bytecode.ConstPool r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.ClassInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        $i0 = r0.<javassist.bytecode.ClassInfo: int name>;

        $r2 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i0);

        return $r2;
    }

    public void renameClass(javassist.bytecode.ConstPool, java.lang.String, java.lang.String, java.util.Map)
    {
        javassist.bytecode.ClassInfo r0;
        javassist.bytecode.ConstPool r1;
        java.lang.String r2, r3, r5, r6, r9;
        java.util.Map r4;
        int $i0, $i2, $i3;
        boolean $z0;
        char $c1;

        r0 := @this: javassist.bytecode.ClassInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        $i0 = r0.<javassist.bytecode.ClassInfo: int name>;

        r5 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i0);

        r9 = null;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        r9 = r3;

        goto label2;

     label1:
        $c1 = virtualinvoke r5.<java.lang.String: char charAt(int)>(0);

        if $c1 != 91 goto label2;

        r6 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String rename(java.lang.String,java.lang.String,java.lang.String)>(r5, r2, r3);

        if r5 == r6 goto label2;

        r9 = r6;

     label2:
        if r9 == null goto label4;

        if r4 != null goto label3;

        $i3 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r9);

        r0.<javassist.bytecode.ClassInfo: int name> = $i3;

        goto label4;

     label3:
        interfaceinvoke r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

        $i2 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r9);

        r0.<javassist.bytecode.ClassInfo: int name> = $i2;

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r0);

     label4:
        return;
    }

    public void renameClass(javassist.bytecode.ConstPool, java.util.Map, java.util.Map)
    {
        javassist.bytecode.ClassInfo r0;
        javassist.bytecode.ConstPool r1;
        java.util.Map r2, r3;
        java.lang.String r4, r8, r9, r10;
        int $i0, $i2, $i3;
        char $c1;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: javassist.bytecode.ClassInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

        $i0 = r0.<javassist.bytecode.ClassInfo: int name>;

        r4 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i0);

        r8 = null;

        $c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        if $c1 != 91 goto label2;

        r9 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String rename(java.lang.String,java.util.Map)>(r4, r2);

        if r4 == r9 goto label1;

        r8 = r9;

     label1:
        goto label3;

     label2:
        $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r10 = (java.lang.String) $r5;

        if r10 == null goto label3;

        $z0 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label3;

        r8 = r10;

     label3:
        if r8 == null goto label5;

        if r3 != null goto label4;

        $i3 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r8);

        r0.<javassist.bytecode.ClassInfo: int name> = $i3;

        goto label5;

     label4:
        interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

        $i2 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r8);

        r0.<javassist.bytecode.ClassInfo: int name> = $i2;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r0);

     label5:
        return;
    }

    public int copy(javassist.bytecode.ConstPool, javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.ClassInfo r0;
        javassist.bytecode.ConstPool r1, r2;
        java.util.Map r3;
        java.lang.String r4, r6;
        int $i0, $i1;
        java.lang.Object $r5;

        r0 := @this: javassist.bytecode.ClassInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: javassist.bytecode.ConstPool;

        r3 := @parameter2: java.util.Map;

        $i0 = r0.<javassist.bytecode.ClassInfo: int name>;

        r6 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i0);

        if r3 == null goto label1;

        $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r4 = (java.lang.String) $r5;

        if r4 == null goto label1;

        r6 = r4;

     label1:
        $i1 = virtualinvoke r2.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r6);

        return $i1;
    }

    public void write(java.io.DataOutputStream) throws java.io.IOException
    {
        javassist.bytecode.ClassInfo r0;
        java.io.DataOutputStream r1;
        int $i0;

        r0 := @this: javassist.bytecode.ClassInfo;

        r1 := @parameter0: java.io.DataOutputStream;

        virtualinvoke r1.<java.io.DataOutputStream: void writeByte(int)>(7);

        $i0 = r0.<javassist.bytecode.ClassInfo: int name>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i0);

        return;
    }

    public void print(java.io.PrintWriter)
    {
        javassist.bytecode.ClassInfo r0;
        java.io.PrintWriter r1;
        int $i0;

        r0 := @this: javassist.bytecode.ClassInfo;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Class #");

        $i0 = r0.<javassist.bytecode.ClassInfo: int name>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i0);

        return;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.ClassInfo: int tag> = 7;

        return;
    }
}
