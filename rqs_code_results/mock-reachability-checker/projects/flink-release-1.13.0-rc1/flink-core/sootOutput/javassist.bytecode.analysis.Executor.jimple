public class javassist.bytecode.analysis.Executor extends java.lang.Object implements javassist.bytecode.Opcode
{
    private final javassist.bytecode.ConstPool constPool;
    private final javassist.ClassPool classPool;
    private final javassist.bytecode.analysis.Type STRING_TYPE;
    private final javassist.bytecode.analysis.Type CLASS_TYPE;
    private final javassist.bytecode.analysis.Type THROWABLE_TYPE;
    private int lastPos;

    public void <init>(javassist.ClassPool, javassist.bytecode.ConstPool)
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.ClassPool r1;
        javassist.bytecode.ConstPool r2;
        javassist.bytecode.analysis.Type $r4, $r5, $r6;
        java.lang.Exception $r7;
        java.lang.RuntimeException $r8;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.ClassPool;

        r2 := @parameter1: javassist.bytecode.ConstPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool> = r2;

        r0.<javassist.bytecode.analysis.Executor: javassist.ClassPool classPool> = r1;

     label1:
        $r4 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>("java.lang.String");

        r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type STRING_TYPE> = $r4;

        $r5 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>("java.lang.Class");

        r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type CLASS_TYPE> = $r5;

        $r6 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>("java.lang.Throwable");

        r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type THROWABLE_TYPE> = $r6;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void execute(javassist.bytecode.MethodInfo, int, javassist.bytecode.CodeIterator, javassist.bytecode.analysis.Frame, javassist.bytecode.analysis.Subroutine) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.MethodInfo r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, i72, i73, i74, i75, i76;
        javassist.bytecode.CodeIterator r2;
        javassist.bytecode.analysis.Frame r3;
        javassist.bytecode.analysis.Subroutine r4;
        javassist.bytecode.analysis.Type r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r32, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r159, $r160, $r161, $r162, $r163, $r169, $r170, $r178, $r179, $r185, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r195, $r196, $r197, $r198, $r199, $r200, $r201, $r202, $r203, $r204, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r219, $r220, $r221, $r222, $r223, $r224, r227, r228, r229, r230, r231, r234;
        javassist.bytecode.ConstPool $r16, $r30;
        java.lang.String $r17, $r29, $r31, $r33, $r158, $r168, $r175, $r184;
        boolean $z0;
        javassist.bytecode.BadBytecode $r23, $r154, $r164, $r171, $r180;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r28, $r155, $r156, $r157, $r165, $r166, $r167, $r172, $r173, $r174, $r181, $r182, $r183;
        javassist.ClassPool $r34;
        javassist.NotFoundException $r225;
        java.lang.RuntimeException $r226;
        javassist.CtClass r232;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.MethodInfo;

        i0 := @parameter1: int;

        r2 := @parameter2: javassist.bytecode.CodeIterator;

        r3 := @parameter3: javassist.bytecode.analysis.Frame;

        r4 := @parameter4: javassist.bytecode.analysis.Subroutine;

        r0.<javassist.bytecode.analysis.Executor: int lastPos> = i0;

        i1 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>(i0);

        tableswitch(i1)
        {
            case 0: goto label001;
            case 1: goto label002;
            case 2: goto label003;
            case 3: goto label003;
            case 4: goto label003;
            case 5: goto label003;
            case 6: goto label003;
            case 7: goto label003;
            case 8: goto label003;
            case 9: goto label004;
            case 10: goto label004;
            case 11: goto label005;
            case 12: goto label005;
            case 13: goto label005;
            case 14: goto label006;
            case 15: goto label006;
            case 16: goto label007;
            case 17: goto label007;
            case 18: goto label008;
            case 19: goto label009;
            case 20: goto label009;
            case 21: goto label010;
            case 22: goto label011;
            case 23: goto label012;
            case 24: goto label013;
            case 25: goto label014;
            case 26: goto label015;
            case 27: goto label015;
            case 28: goto label015;
            case 29: goto label015;
            case 30: goto label016;
            case 31: goto label016;
            case 32: goto label016;
            case 33: goto label016;
            case 34: goto label017;
            case 35: goto label017;
            case 36: goto label017;
            case 37: goto label017;
            case 38: goto label018;
            case 39: goto label018;
            case 40: goto label018;
            case 41: goto label018;
            case 42: goto label019;
            case 43: goto label019;
            case 44: goto label019;
            case 45: goto label019;
            case 46: goto label020;
            case 47: goto label021;
            case 48: goto label022;
            case 49: goto label023;
            case 50: goto label024;
            case 51: goto label025;
            case 52: goto label025;
            case 53: goto label025;
            case 54: goto label026;
            case 55: goto label027;
            case 56: goto label028;
            case 57: goto label029;
            case 58: goto label030;
            case 59: goto label031;
            case 60: goto label031;
            case 61: goto label031;
            case 62: goto label031;
            case 63: goto label032;
            case 64: goto label032;
            case 65: goto label032;
            case 66: goto label032;
            case 67: goto label033;
            case 68: goto label033;
            case 69: goto label033;
            case 70: goto label033;
            case 71: goto label034;
            case 72: goto label034;
            case 73: goto label034;
            case 74: goto label034;
            case 75: goto label035;
            case 76: goto label035;
            case 77: goto label035;
            case 78: goto label035;
            case 79: goto label036;
            case 80: goto label037;
            case 81: goto label038;
            case 82: goto label039;
            case 83: goto label040;
            case 84: goto label041;
            case 85: goto label041;
            case 86: goto label041;
            case 87: goto label042;
            case 88: goto label043;
            case 89: goto label044;
            case 90: goto label046;
            case 91: goto label046;
            case 92: goto label050;
            case 93: goto label051;
            case 94: goto label051;
            case 95: goto label054;
            case 96: goto label057;
            case 97: goto label058;
            case 98: goto label059;
            case 99: goto label060;
            case 100: goto label061;
            case 101: goto label062;
            case 102: goto label063;
            case 103: goto label064;
            case 104: goto label065;
            case 105: goto label066;
            case 106: goto label067;
            case 107: goto label068;
            case 108: goto label069;
            case 109: goto label070;
            case 110: goto label071;
            case 111: goto label072;
            case 112: goto label073;
            case 113: goto label074;
            case 114: goto label075;
            case 115: goto label076;
            case 116: goto label077;
            case 117: goto label078;
            case 118: goto label079;
            case 119: goto label080;
            case 120: goto label081;
            case 121: goto label082;
            case 122: goto label083;
            case 123: goto label084;
            case 124: goto label085;
            case 125: goto label086;
            case 126: goto label087;
            case 127: goto label088;
            case 128: goto label089;
            case 129: goto label090;
            case 130: goto label091;
            case 131: goto label092;
            case 132: goto label093;
            case 133: goto label094;
            case 134: goto label095;
            case 135: goto label096;
            case 136: goto label097;
            case 137: goto label098;
            case 138: goto label099;
            case 139: goto label100;
            case 140: goto label101;
            case 141: goto label102;
            case 142: goto label103;
            case 143: goto label104;
            case 144: goto label105;
            case 145: goto label106;
            case 146: goto label106;
            case 147: goto label106;
            case 148: goto label107;
            case 149: goto label108;
            case 150: goto label108;
            case 151: goto label109;
            case 152: goto label109;
            case 153: goto label110;
            case 154: goto label110;
            case 155: goto label110;
            case 156: goto label110;
            case 157: goto label110;
            case 158: goto label110;
            case 159: goto label111;
            case 160: goto label111;
            case 161: goto label111;
            case 162: goto label111;
            case 163: goto label111;
            case 164: goto label111;
            case 165: goto label112;
            case 166: goto label112;
            case 167: goto label113;
            case 168: goto label114;
            case 169: goto label115;
            case 170: goto label116;
            case 171: goto label116;
            case 172: goto label116;
            case 173: goto label117;
            case 174: goto label118;
            case 175: goto label119;
            case 176: goto label120;
            case 177: goto label123;
            case 178: goto label124;
            case 179: goto label125;
            case 180: goto label126;
            case 181: goto label127;
            case 182: goto label128;
            case 183: goto label128;
            case 184: goto label128;
            case 185: goto label129;
            case 186: goto label130;
            case 187: goto label131;
            case 188: goto label132;
            case 189: goto label133;
            case 190: goto label134;
            case 191: goto label136;
            case 192: goto label137;
            case 193: goto label138;
            case 194: goto label139;
            case 195: goto label139;
            case 196: goto label140;
            case 197: goto label141;
            case 198: goto label142;
            case 199: goto label142;
            case 200: goto label143;
            case 201: goto label144;
            default: goto label145;
        };

     label001:
        goto label145;

     label002:
        $r224 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type UNINIT>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r224);

        goto label145;

     label003:
        $r223 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r223);

        goto label145;

     label004:
        $r221 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r221);

        $r222 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type TOP>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r222);

        goto label145;

     label005:
        $r220 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r220);

        goto label145;

     label006:
        $r218 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r218);

        $r219 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type TOP>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r219);

        goto label145;

     label007:
        $r217 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r217);

        goto label145;

     label008:
        $i70 = i0 + 1;

        $i71 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i70);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLDC(int,javassist.bytecode.analysis.Frame)>($i71, r3);

        goto label145;

     label009:
        $i68 = i0 + 1;

        $i69 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i68);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLDC(int,javassist.bytecode.analysis.Frame)>($i69, r3);

        goto label145;

     label010:
        $r216 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $i66 = i0 + 1;

        $i67 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i66);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r216, $i67, r3, r4);

        goto label145;

     label011:
        $r215 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        $i64 = i0 + 1;

        $i65 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i64);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r215, $i65, r3, r4);

        goto label145;

     label012:
        $r214 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        $i62 = i0 + 1;

        $i63 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i62);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r214, $i63, r3, r4);

        goto label145;

     label013:
        $r213 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        $i60 = i0 + 1;

        $i61 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i60);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r213, $i61, r3, r4);

        goto label145;

     label014:
        $r212 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $i58 = i0 + 1;

        $i59 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i58);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r212, $i59, r3, r4);

        goto label145;

     label015:
        $r211 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $i57 = i1 - 26;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r211, $i57, r3, r4);

        goto label145;

     label016:
        $r210 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        $i56 = i1 - 30;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r210, $i56, r3, r4);

        goto label145;

     label017:
        $r209 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        $i55 = i1 - 34;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r209, $i55, r3, r4);

        goto label145;

     label018:
        $r208 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        $i54 = i1 - 38;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r208, $i54, r3, r4);

        goto label145;

     label019:
        $r207 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $i53 = i1 - 42;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r207, $i53, r3, r4);

        goto label145;

     label020:
        $r206 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayLoad(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r206, r3);

        goto label145;

     label021:
        $r205 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayLoad(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r205, r3);

        goto label145;

     label022:
        $r204 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayLoad(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r204, r3);

        goto label145;

     label023:
        $r203 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayLoad(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r203, r3);

        goto label145;

     label024:
        $r202 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayLoad(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r202, r3);

        goto label145;

     label025:
        $r201 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayLoad(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r201, r3);

        goto label145;

     label026:
        $r200 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $i51 = i0 + 1;

        $i52 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i51);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r200, $i52, r3, r4);

        goto label145;

     label027:
        $r199 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        $i49 = i0 + 1;

        $i50 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i49);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r199, $i50, r3, r4);

        goto label145;

     label028:
        $r198 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        $i47 = i0 + 1;

        $i48 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i47);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r198, $i48, r3, r4);

        goto label145;

     label029:
        $r197 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        $i45 = i0 + 1;

        $i46 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i45);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r197, $i46, r3, r4);

        goto label145;

     label030:
        $r196 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $i43 = i0 + 1;

        $i44 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i43);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r196, $i44, r3, r4);

        goto label145;

     label031:
        $r195 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $i42 = i1 - 59;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r195, $i42, r3, r4);

        goto label145;

     label032:
        $r194 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        $i41 = i1 - 63;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r194, $i41, r3, r4);

        goto label145;

     label033:
        $r193 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        $i40 = i1 - 67;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r193, $i40, r3, r4);

        goto label145;

     label034:
        $r192 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        $i39 = i1 - 71;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r192, $i39, r3, r4);

        goto label145;

     label035:
        $r191 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $i38 = i1 - 75;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r191, $i38, r3, r4);

        goto label145;

     label036:
        $r190 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayStore(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r190, r3);

        goto label145;

     label037:
        $r189 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayStore(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r189, r3);

        goto label145;

     label038:
        $r188 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayStore(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r188, r3);

        goto label145;

     label039:
        $r187 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayStore(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r187, r3);

        goto label145;

     label040:
        $r186 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayStore(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r186, r3);

        goto label145;

     label041:
        $r185 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalArrayStore(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r185, r3);

        goto label145;

     label042:
        $r178 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type pop()>();

        $r179 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type TOP>;

        if $r178 != $r179 goto label145;

        $r180 = new javassist.bytecode.BadBytecode;

        $r181 = new java.lang.StringBuilder;

        specialinvoke $r181.<java.lang.StringBuilder: void <init>()>();

        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("POP can not be used with a category 2 value, pos = ");

        $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r180.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r184);

        throw $r180;

     label043:
        virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type pop()>();

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type pop()>();

        goto label145;

     label044:
        r227 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type peek()>();

        $r169 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type TOP>;

        if r227 != $r169 goto label045;

        $r171 = new javassist.bytecode.BadBytecode;

        $r172 = new java.lang.StringBuilder;

        specialinvoke $r172.<java.lang.StringBuilder: void <init>()>();

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DUP can not be used with a category 2 value, pos = ");

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r171.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r175);

        throw $r171;

     label045:
        $r170 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type peek()>();

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r170);

        goto label145;

     label046:
        r228 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type peek()>();

        $r162 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type TOP>;

        if r228 != $r162 goto label047;

        $r164 = new javassist.bytecode.BadBytecode;

        $r165 = new java.lang.StringBuilder;

        specialinvoke $r165.<java.lang.StringBuilder: void <init>()>();

        $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DUP can not be used with a category 2 value, pos = ");

        $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r168 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r164.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r168);

        throw $r164;

     label047:
        i72 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: int getTopIndex()>();

        $i35 = i1 - 90;

        $i36 = i72 - $i35;

        i73 = $i36 - 1;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>(r228);

     label048:
        if i72 <= i73 goto label049;

        $i37 = i72 - 1;

        $r163 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type getStack(int)>($i37);

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void setStack(int,javassist.bytecode.analysis.Type)>(i72, $r163);

        i72 = i72 + -1;

        goto label048;

     label049:
        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void setStack(int,javassist.bytecode.analysis.Type)>(i73, r228);

        goto label145;

     label050:
        $i31 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: int getTopIndex()>();

        $i32 = $i31 - 1;

        $r160 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type getStack(int)>($i32);

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r160);

        $i33 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: int getTopIndex()>();

        $i34 = $i33 - 1;

        $r161 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type getStack(int)>($i34);

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r161);

        goto label145;

     label051:
        i74 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: int getTopIndex()>();

        $i25 = i1 - 93;

        $i26 = i74 - $i25;

        i75 = $i26 - 1;

        $i27 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: int getTopIndex()>();

        $i28 = $i27 - 1;

        r229 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type getStack(int)>($i28);

        r5 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type peek()>();

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>(r229);

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>(r5);

     label052:
        if i74 <= i75 goto label053;

        $i30 = i74 - 2;

        $r159 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type getStack(int)>($i30);

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void setStack(int,javassist.bytecode.analysis.Type)>(i74, $r159);

        i74 = i74 + -1;

        goto label052;

     label053:
        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void setStack(int,javassist.bytecode.analysis.Type)>(i75, r5);

        $i29 = i75 - 1;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void setStack(int,javassist.bytecode.analysis.Type)>($i29, r229);

        goto label145;

     label054:
        r230 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type pop()>();

        r231 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type pop()>();

        $i23 = virtualinvoke r230.<javassist.bytecode.analysis.Type: int getSize()>();

        if $i23 == 2 goto label055;

        $i24 = virtualinvoke r231.<javassist.bytecode.analysis.Type: int getSize()>();

        if $i24 != 2 goto label056;

     label055:
        $r154 = new javassist.bytecode.BadBytecode;

        $r155 = new java.lang.StringBuilder;

        specialinvoke $r155.<java.lang.StringBuilder: void <init>()>();

        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Swap can not be used with category 2 values, pos = ");

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r154.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r158);

        throw $r154;

     label056:
        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>(r230);

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>(r231);

        goto label145;

     label057:
        $r153 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r153, r3);

        goto label145;

     label058:
        $r152 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r152, r3);

        goto label145;

     label059:
        $r151 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r151, r3);

        goto label145;

     label060:
        $r150 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r150, r3);

        goto label145;

     label061:
        $r149 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r149, r3);

        goto label145;

     label062:
        $r148 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r148, r3);

        goto label145;

     label063:
        $r147 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r147, r3);

        goto label145;

     label064:
        $r146 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r146, r3);

        goto label145;

     label065:
        $r145 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r145, r3);

        goto label145;

     label066:
        $r144 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r144, r3);

        goto label145;

     label067:
        $r143 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r143, r3);

        goto label145;

     label068:
        $r142 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r142, r3);

        goto label145;

     label069:
        $r141 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r141, r3);

        goto label145;

     label070:
        $r140 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r140, r3);

        goto label145;

     label071:
        $r139 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r139, r3);

        goto label145;

     label072:
        $r138 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r138, r3);

        goto label145;

     label073:
        $r137 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r137, r3);

        goto label145;

     label074:
        $r136 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r136, r3);

        goto label145;

     label075:
        $r135 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r135, r3);

        goto label145;

     label076:
        $r134 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r134, r3);

        goto label145;

     label077:
        $r132 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r133 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePeek(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r132, $r133);

        goto label145;

     label078:
        $r130 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        $r131 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePeek(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r130, $r131);

        goto label145;

     label079:
        $r128 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        $r129 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePeek(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r128, $r129);

        goto label145;

     label080:
        $r126 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        $r127 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePeek(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r126, $r127);

        goto label145;

     label081:
        $r125 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalShift(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r125, r3);

        goto label145;

     label082:
        $r124 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalShift(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r124, r3);

        goto label145;

     label083:
        $r123 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalShift(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r123, r3);

        goto label145;

     label084:
        $r122 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalShift(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r122, r3);

        goto label145;

     label085:
        $r121 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalShift(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r121, r3);

        goto label145;

     label086:
        $r120 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalShift(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r120, r3);

        goto label145;

     label087:
        $r119 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r119, r3);

        goto label145;

     label088:
        $r118 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r118, r3);

        goto label145;

     label089:
        $r117 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r117, r3);

        goto label145;

     label090:
        $r116 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r116, r3);

        goto label145;

     label091:
        $r115 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r115, r3);

        goto label145;

     label092:
        $r114 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalBinaryMath(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r114, r3);

        goto label145;

     label093:
        $i22 = i0 + 1;

        i76 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i22);

        $r111 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r112 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type getLocal(int)>(i76);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r111, $r112);

        $r113 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void access(int,javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Subroutine)>(i76, $r113, r4);

        goto label145;

     label094:
        $r108 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r109 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r108, $r109);

        $r110 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r110, r3);

        goto label145;

     label095:
        $r105 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r106 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r105, $r106);

        $r107 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r107, r3);

        goto label145;

     label096:
        $r102 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r103 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r102, $r103);

        $r104 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r104, r3);

        goto label145;

     label097:
        $r99 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        $r100 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r99, $r100);

        $r101 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r101, r3);

        goto label145;

     label098:
        $r96 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        $r97 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r96, $r97);

        $r98 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r98, r3);

        goto label145;

     label099:
        $r93 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        $r94 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r93, $r94);

        $r95 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r95, r3);

        goto label145;

     label100:
        $r90 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        $r91 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r90, $r91);

        $r92 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r92, r3);

        goto label145;

     label101:
        $r87 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        $r88 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r87, $r88);

        $r89 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r89, r3);

        goto label145;

     label102:
        $r84 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        $r85 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r84, $r85);

        $r86 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r86, r3);

        goto label145;

     label103:
        $r81 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        $r82 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r81, $r82);

        $r83 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r83, r3);

        goto label145;

     label104:
        $r78 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        $r79 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r78, $r79);

        $r80 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r80, r3);

        goto label145;

     label105:
        $r75 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        $r76 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r75, $r76);

        $r77 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r77, r3);

        goto label145;

     label106:
        $r73 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r74 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type peek()>();

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r73, $r74);

        goto label145;

     label107:
        $r68 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        $r69 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r68, $r69);

        $r70 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        $r71 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r70, $r71);

        $r72 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r72);

        goto label145;

     label108:
        $r63 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        $r64 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r63, $r64);

        $r65 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        $r66 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r65, $r66);

        $r67 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r67);

        goto label145;

     label109:
        $r58 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        $r59 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r58, $r59);

        $r60 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        $r61 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r60, $r61);

        $r62 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r62);

        goto label145;

     label110:
        $r56 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r57 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r56, $r57);

        goto label145;

     label111:
        $r52 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r53 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r52, $r53);

        $r54 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r55 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r54, $r55);

        goto label145;

     label112:
        $r48 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $r49 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r48, $r49);

        $r50 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $r51 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r50, $r51);

        goto label145;

     label113:
        goto label145;

     label114:
        $r47 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type RETURN_ADDRESS>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r47);

        goto label145;

     label115:
        $r45 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type RETURN_ADDRESS>;

        $i20 = i0 + 1;

        $i21 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>($i20);

        $r46 = virtualinvoke r3.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type getLocal(int)>($i21);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r45, $r46);

        goto label145;

     label116:
        $r43 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r44 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r43, $r44);

        goto label145;

     label117:
        $r41 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        $r42 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r41, $r42);

        goto label145;

     label118:
        $r39 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        $r40 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r39, $r40);

        goto label145;

     label119:
        $r37 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        $r38 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r37, $r38);

        goto label145;

     label120:
        $r33 = virtualinvoke r1.<javassist.bytecode.MethodInfo: java.lang.String getDescriptor()>();

        $r34 = r0.<javassist.bytecode.analysis.Executor: javassist.ClassPool classPool>;

        r232 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass getReturnType(java.lang.String,javassist.ClassPool)>($r33, $r34);

        $r35 = staticinvoke <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type get(javassist.CtClass)>(r232);

        $r36 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r35, $r36);

     label121:
        goto label145;

     label122:
        $r225 := @caughtexception;

        $r226 = new java.lang.RuntimeException;

        specialinvoke $r226.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r225);

        throw $r226;

     label123:
        goto label145;

     label124:
        $i18 = i0 + 1;

        $i19 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i18);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalGetField(int,int,javassist.bytecode.analysis.Frame)>(i1, $i19, r3);

        goto label145;

     label125:
        $i16 = i0 + 1;

        $i17 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i16);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalPutField(int,int,javassist.bytecode.analysis.Frame)>(i1, $i17, r3);

        goto label145;

     label126:
        $i14 = i0 + 1;

        $i15 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i14);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalGetField(int,int,javassist.bytecode.analysis.Frame)>(i1, $i15, r3);

        goto label145;

     label127:
        $i12 = i0 + 1;

        $i13 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i12);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalPutField(int,int,javassist.bytecode.analysis.Frame)>(i1, $i13, r3);

        goto label145;

     label128:
        $i10 = i0 + 1;

        $i11 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i10);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalInvokeMethod(int,int,javassist.bytecode.analysis.Frame)>(i1, $i11, r3);

        goto label145;

     label129:
        $i8 = i0 + 1;

        $i9 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i8);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalInvokeIntfMethod(int,int,javassist.bytecode.analysis.Frame)>(i1, $i9, r3);

        goto label145;

     label130:
        $i6 = i0 + 1;

        $i7 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i6);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalInvokeDynamic(int,int,javassist.bytecode.analysis.Frame)>(i1, $i7, r3);

        goto label145;

     label131:
        $r30 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        $i4 = i0 + 1;

        $i5 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i4);

        $r31 = virtualinvoke $r30.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>($i5);

        $r32 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type resolveClassInfo(java.lang.String)>($r31);

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r32);

        goto label145;

     label132:
        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalNewArray(int,javassist.bytecode.CodeIterator,javassist.bytecode.analysis.Frame)>(i0, r2, r3);

        goto label145;

     label133:
        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalNewObjectArray(int,javassist.bytecode.CodeIterator,javassist.bytecode.analysis.Frame)>(i0, r2, r3);

        goto label145;

     label134:
        r234 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        $z0 = virtualinvoke r234.<javassist.bytecode.analysis.Type: boolean isArray()>();

        if $z0 != 0 goto label135;

        $r22 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type UNINIT>;

        if r234 == $r22 goto label135;

        $r23 = new javassist.bytecode.BadBytecode;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Array length passed a non-array [pos = ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r234);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r29);

        throw $r23;

     label135:
        $r21 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r21);

        goto label145;

     label136:
        $r19 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type THROWABLE_TYPE>;

        $r20 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r19, $r20);

        goto label145;

     label137:
        $r14 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $r15 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r14, $r15);

        $r16 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        $i2 = i0 + 1;

        $i3 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i2);

        $r17 = virtualinvoke $r16.<javassist.bytecode.ConstPool: java.lang.String getClassInfoByDescriptor(int)>($i3);

        $r18 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type typeFromDesc(java.lang.String)>($r17);

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r18);

        goto label145;

     label138:
        $r11 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $r12 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r11, $r12);

        $r13 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r13);

        goto label145;

     label139:
        $r9 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $r10 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r9, $r10);

        goto label145;

     label140:
        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalWide(int,javassist.bytecode.CodeIterator,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>(i0, r2, r3, r4);

        goto label145;

     label141:
        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalNewObjectArray(int,javassist.bytecode.CodeIterator,javassist.bytecode.analysis.Frame)>(i0, r2, r3);

        goto label145;

     label142:
        $r7 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        $r8 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r7, $r8);

        goto label145;

     label143:
        goto label145;

     label144:
        $r6 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type RETURN_ADDRESS>;

        virtualinvoke r3.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r6);

     label145:
        return;

        catch javassist.NotFoundException from label120 to label121 with label122;
    }

    private javassist.bytecode.analysis.Type zeroExtend(javassist.bytecode.analysis.Type)
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.analysis.Type r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.analysis.Type;

        $r2 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type SHORT>;

        if r1 == $r2 goto label1;

        $r3 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type BYTE>;

        if r1 == $r3 goto label1;

        $r4 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type CHAR>;

        if r1 == $r4 goto label1;

        $r5 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type BOOLEAN>;

        if r1 != $r5 goto label2;

     label1:
        $r6 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        return $r6;

     label2:
        return r1;
    }

    private void evalArrayLoad(javassist.bytecode.analysis.Type, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.analysis.Type r1, r3, r4, $r5, $r6, $r14, $r15, $r16, r17, r18;
        javassist.bytecode.analysis.Frame r2;
        javassist.bytecode.BadBytecode $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        int $i0;
        java.lang.String $r13;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.analysis.Type;

        r2 := @parameter1: javassist.bytecode.analysis.Frame;

        r3 = virtualinvoke r2.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type pop()>();

        r4 = virtualinvoke r2.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type pop()>();

        $r5 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type UNINIT>;

        if r4 != $r5 goto label3;

        $r14 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r14, r3);

        $r15 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        if r1 != $r15 goto label1;

        $r16 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type UNINIT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r16, r2);

        goto label2;

     label1:
        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>(r1, r2);

     label2:
        return;

     label3:
        r17 = virtualinvoke r4.<javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type getComponent()>();

        if r17 != null goto label4;

        $r7 = new javassist.bytecode.BadBytecode;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an array! [pos = ");

        $i0 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r13);

        throw $r7;

     label4:
        r18 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type zeroExtend(javassist.bytecode.analysis.Type)>(r17);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r1, r18);

        $r6 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r6, r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>(r18, r2);

        return;
    }

    private void evalArrayStore(javassist.bytecode.analysis.Type, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.analysis.Type r1, r3, r4, r5, $r6, $r7, $r8, $r16, r17, r18;
        javassist.bytecode.analysis.Frame r2;
        javassist.bytecode.BadBytecode $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14;
        int $i0;
        java.lang.String $r15;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.analysis.Type;

        r2 := @parameter1: javassist.bytecode.analysis.Frame;

        r3 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r2);

        r4 = virtualinvoke r2.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type pop()>();

        r5 = virtualinvoke r2.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type pop()>();

        $r6 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type UNINIT>;

        if r5 != $r6 goto label1;

        $r16 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r16, r4);

        return;

     label1:
        r17 = virtualinvoke r5.<javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type getComponent()>();

        if r17 != null goto label2;

        $r9 = new javassist.bytecode.BadBytecode;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an array! [pos = ");

        $i0 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r15);

        throw $r9;

     label2:
        r18 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type zeroExtend(javassist.bytecode.analysis.Type)>(r17);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r1, r18);

        $r7 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r7, r4);

        $r8 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        if r1 != $r8 goto label3;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r1, r3);

        goto label4;

     label3:
        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r18, r3);

     label4:
        return;
    }

    private void evalBinaryMath(javassist.bytecode.analysis.Type, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.analysis.Type r1, r3, r4;
        javassist.bytecode.analysis.Frame r2;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.analysis.Type;

        r2 := @parameter1: javassist.bytecode.analysis.Frame;

        r3 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r2);

        r4 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r2);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r1, r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r1, r4);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>(r4, r2);

        return;
    }

    private void evalGetField(int, int, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        int i0, i1;
        javassist.bytecode.analysis.Frame r1;
        java.lang.String r2, $r8;
        javassist.bytecode.analysis.Type r3, r4, $r6, $r9;
        javassist.bytecode.ConstPool $r5, $r7;

        r0 := @this: javassist.bytecode.analysis.Executor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: javassist.bytecode.analysis.Frame;

        $r5 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        r2 = virtualinvoke $r5.<javassist.bytecode.ConstPool: java.lang.String getFieldrefType(int)>(i1);

        $r6 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type typeFromDesc(java.lang.String)>(r2);

        r3 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type zeroExtend(javassist.bytecode.analysis.Type)>($r6);

        if i0 != 180 goto label1;

        $r7 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        $r8 = virtualinvoke $r7.<javassist.bytecode.ConstPool: java.lang.String getFieldrefClassName(int)>(i1);

        r4 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type resolveClassInfo(java.lang.String)>($r8);

        $r9 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r1);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r4, $r9);

     label1:
        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>(r3, r1);

        return;
    }

    private void evalInvokeIntfMethod(int, int, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        int i0, i1, i2;
        javassist.bytecode.analysis.Frame r1;
        java.lang.String r2, r4;
        javassist.bytecode.analysis.Type[] r3;
        javassist.bytecode.analysis.Type r5, r6, $r9, $r10, $r11, $r12, $r13, $r14;
        javassist.bytecode.ConstPool $r7, $r8;

        r0 := @this: javassist.bytecode.analysis.Executor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: javassist.bytecode.analysis.Frame;

        $r7 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        r2 = virtualinvoke $r7.<javassist.bytecode.ConstPool: java.lang.String getInterfaceMethodrefType(int)>(i1);

        r3 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type[] paramTypesFromDesc(java.lang.String)>(r2);

        i2 = lengthof r3;

     label1:
        if i2 <= 0 goto label2;

        i2 = i2 + -1;

        $r12 = r3[i2];

        $r13 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type zeroExtend(javassist.bytecode.analysis.Type)>($r12);

        $r14 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r1);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r13, $r14);

        goto label1;

     label2:
        $r8 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        r4 = virtualinvoke $r8.<javassist.bytecode.ConstPool: java.lang.String getInterfaceMethodrefClassName(int)>(i1);

        r5 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type resolveClassInfo(java.lang.String)>(r4);

        $r9 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r1);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r5, $r9);

        r6 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type returnTypeFromDesc(java.lang.String)>(r2);

        $r10 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type VOID>;

        if r6 == $r10 goto label3;

        $r11 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type zeroExtend(javassist.bytecode.analysis.Type)>(r6);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r11, r1);

     label3:
        return;
    }

    private void evalInvokeMethod(int, int, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        int i0, i1, i2;
        javassist.bytecode.analysis.Frame r1;
        java.lang.String r2, $r8;
        javassist.bytecode.analysis.Type[] r3;
        javassist.bytecode.ConstPool $r4, $r7;
        javassist.bytecode.analysis.Type $r5, $r6, $r9, $r10, $r11, $r12, r13, r14;

        r0 := @this: javassist.bytecode.analysis.Executor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: javassist.bytecode.analysis.Frame;

        $r4 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        r2 = virtualinvoke $r4.<javassist.bytecode.ConstPool: java.lang.String getMethodrefType(int)>(i1);

        r3 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type[] paramTypesFromDesc(java.lang.String)>(r2);

        i2 = lengthof r3;

     label1:
        if i2 <= 0 goto label2;

        i2 = i2 + -1;

        $r10 = r3[i2];

        $r11 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type zeroExtend(javassist.bytecode.analysis.Type)>($r10);

        $r12 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r1);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r11, $r12);

        goto label1;

     label2:
        if i0 == 184 goto label3;

        $r7 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        $r8 = virtualinvoke $r7.<javassist.bytecode.ConstPool: java.lang.String getMethodrefClassName(int)>(i1);

        r13 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type resolveClassInfo(java.lang.String)>($r8);

        $r9 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r1);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r13, $r9);

     label3:
        r14 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type returnTypeFromDesc(java.lang.String)>(r2);

        $r5 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type VOID>;

        if r14 == $r5 goto label4;

        $r6 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type zeroExtend(javassist.bytecode.analysis.Type)>(r14);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r6, r1);

     label4:
        return;
    }

    private void evalInvokeDynamic(int, int, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        int i0, i1, i2;
        javassist.bytecode.analysis.Frame r1;
        java.lang.String r2;
        javassist.bytecode.analysis.Type[] r3;
        javassist.bytecode.analysis.Type r4, $r6, $r7, $r8, $r9, $r10;
        javassist.bytecode.ConstPool $r5;

        r0 := @this: javassist.bytecode.analysis.Executor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: javassist.bytecode.analysis.Frame;

        $r5 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        r2 = virtualinvoke $r5.<javassist.bytecode.ConstPool: java.lang.String getInvokeDynamicType(int)>(i1);

        r3 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type[] paramTypesFromDesc(java.lang.String)>(r2);

        i2 = lengthof r3;

     label1:
        if i2 <= 0 goto label2;

        i2 = i2 + -1;

        $r8 = r3[i2];

        $r9 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type zeroExtend(javassist.bytecode.analysis.Type)>($r8);

        $r10 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r1);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r9, $r10);

        goto label1;

     label2:
        r4 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type returnTypeFromDesc(java.lang.String)>(r2);

        $r6 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type VOID>;

        if r4 == $r6 goto label3;

        $r7 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type zeroExtend(javassist.bytecode.analysis.Type)>(r4);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r7, r1);

     label3:
        return;
    }

    private void evalLDC(int, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        int i0, i1, $i2;
        javassist.bytecode.analysis.Frame r1;
        javassist.bytecode.ConstPool $r2;
        javassist.bytecode.BadBytecode $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        javassist.bytecode.analysis.Type r10;

        r0 := @this: javassist.bytecode.analysis.Executor;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.bytecode.analysis.Frame;

        $r2 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        i1 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int getTag(int)>(i0);

        tableswitch(i1)
        {
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label6;
            case 8: goto label1;
            default: goto label7;
        };

     label1:
        r10 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type STRING_TYPE>;

        goto label8;

     label2:
        r10 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        goto label8;

     label3:
        r10 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        goto label8;

     label4:
        r10 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        goto label8;

     label5:
        r10 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        goto label8;

     label6:
        r10 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type CLASS_TYPE>;

        goto label8;

     label7:
        $r3 = new javassist.bytecode.BadBytecode;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad LDC [pos = ");

        $i2 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r9);

        throw $r3;

     label8:
        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>(r10, r1);

        return;
    }

    private void evalLoad(javassist.bytecode.analysis.Type, int, javassist.bytecode.analysis.Frame, javassist.bytecode.analysis.Subroutine) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.analysis.Type r1, r4;
        int i0;
        javassist.bytecode.analysis.Frame r2;
        javassist.bytecode.analysis.Subroutine r3;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.analysis.Type;

        i0 := @parameter1: int;

        r2 := @parameter2: javassist.bytecode.analysis.Frame;

        r3 := @parameter3: javassist.bytecode.analysis.Subroutine;

        r4 = virtualinvoke r2.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type getLocal(int)>(i0);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r1, r4);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>(r4, r2);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void access(int,javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Subroutine)>(i0, r4, r3);

        return;
    }

    private void evalNewArray(int, javassist.bytecode.CodeIterator, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        int i0, i1, $i2;
        javassist.bytecode.CodeIterator r1;
        javassist.bytecode.analysis.Frame r2;
        javassist.bytecode.analysis.Type $r3, $r4, r12;
        javassist.bytecode.BadBytecode $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: javassist.bytecode.analysis.Executor;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.bytecode.CodeIterator;

        r2 := @parameter2: javassist.bytecode.analysis.Frame;

        $r3 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r4 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r2);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r3, $r4);

        $i2 = i0 + 1;

        i1 = virtualinvoke r1.<javassist.bytecode.CodeIterator: int byteAt(int)>($i2);

        tableswitch(i1)
        {
            case 4: goto label01;
            case 5: goto label02;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label03;
            case 9: goto label04;
            case 10: goto label05;
            case 11: goto label06;
            default: goto label09;
        };

     label01:
        r12 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>("boolean[]");

        goto label10;

     label02:
        r12 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>("char[]");

        goto label10;

     label03:
        r12 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>("byte[]");

        goto label10;

     label04:
        r12 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>("short[]");

        goto label10;

     label05:
        r12 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>("int[]");

        goto label10;

     label06:
        r12 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>("long[]");

        goto label10;

     label07:
        r12 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>("float[]");

        goto label10;

     label08:
        r12 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>("double[]");

        goto label10;

     label09:
        $r5 = new javassist.bytecode.BadBytecode;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid array type [pos = ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r11);

        throw $r5;

     label10:
        virtualinvoke r2.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>(r12);

        return;
    }

    private void evalNewObjectArray(int, javassist.bytecode.CodeIterator, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        int i0, i1, $i2, $i3, $i4, i5, $i6;
        javassist.bytecode.CodeIterator r1;
        javassist.bytecode.analysis.Frame r2;
        javassist.bytecode.analysis.Type r3, $r10, $r11, $r12;
        javassist.bytecode.ConstPool $r4;
        java.lang.String $r5, r13;
        javassist.CtClass $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: javassist.bytecode.analysis.Executor;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.bytecode.CodeIterator;

        r2 := @parameter2: javassist.bytecode.analysis.Frame;

        $r4 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        $i2 = i0 + 1;

        $i3 = virtualinvoke r1.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i2);

        $r5 = virtualinvoke $r4.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>($i3);

        r3 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type resolveClassInfo(java.lang.String)>($r5);

        $r6 = virtualinvoke r3.<javassist.bytecode.analysis.Type: javassist.CtClass getCtClass()>();

        r13 = virtualinvoke $r6.<javassist.CtClass: java.lang.String getName()>();

        i1 = virtualinvoke r1.<javassist.bytecode.CodeIterator: int byteAt(int)>(i0);

        if i1 != 197 goto label1;

        $i4 = i0 + 3;

        i5 = virtualinvoke r1.<javassist.bytecode.CodeIterator: int byteAt(int)>($i4);

        goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");

        r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        i5 = 1;

     label2:
        $i6 = i5;

        i5 = i5 + -1;

        if $i6 <= 0 goto label3;

        $r11 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r12 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r2);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r11, $r12);

        goto label2;

     label3:
        $r10 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type getType(java.lang.String)>(r13);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>($r10, r2);

        return;
    }

    private void evalPutField(int, int, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        int i0, i1;
        javassist.bytecode.analysis.Frame r1;
        java.lang.String r2, $r9;
        javassist.bytecode.analysis.Type r3, r4, $r6, $r7, $r10;
        javassist.bytecode.ConstPool $r5, $r8;

        r0 := @this: javassist.bytecode.analysis.Executor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: javassist.bytecode.analysis.Frame;

        $r5 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        r2 = virtualinvoke $r5.<javassist.bytecode.ConstPool: java.lang.String getFieldrefType(int)>(i1);

        $r6 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type typeFromDesc(java.lang.String)>(r2);

        r3 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type zeroExtend(javassist.bytecode.analysis.Type)>($r6);

        $r7 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r1);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r3, $r7);

        if i0 != 181 goto label1;

        $r8 = r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.ConstPool constPool>;

        $r9 = virtualinvoke $r8.<javassist.bytecode.ConstPool: java.lang.String getFieldrefClassName(int)>(i1);

        r4 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type resolveClassInfo(java.lang.String)>($r9);

        $r10 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r1);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r4, $r10);

     label1:
        return;
    }

    private void evalShift(javassist.bytecode.analysis.Type, javassist.bytecode.analysis.Frame) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.analysis.Type r1, r3, r4, $r5;
        javassist.bytecode.analysis.Frame r2;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.analysis.Type;

        r2 := @parameter1: javassist.bytecode.analysis.Frame;

        r3 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r2);

        r4 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r2);

        $r5 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r5, r3);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r1, r4);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simplePush(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>(r4, r2);

        return;
    }

    private void evalStore(javassist.bytecode.analysis.Type, int, javassist.bytecode.analysis.Frame, javassist.bytecode.analysis.Subroutine) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.analysis.Type r1, r4, $r5, $r6;
        int i0;
        javassist.bytecode.analysis.Frame r2;
        javassist.bytecode.analysis.Subroutine r3;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.analysis.Type;

        i0 := @parameter1: int;

        r2 := @parameter2: javassist.bytecode.analysis.Frame;

        r3 := @parameter3: javassist.bytecode.analysis.Subroutine;

        r4 = specialinvoke r0.<javassist.bytecode.analysis.Executor: javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)>(r2);

        $r5 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        if r1 != $r5 goto label1;

        $r6 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type RETURN_ADDRESS>;

        if r4 == $r6 goto label2;

     label1:
        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>(r1, r4);

     label2:
        specialinvoke r0.<javassist.bytecode.analysis.Executor: void simpleSetLocal(int,javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Frame)>(i0, r4, r2);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void access(int,javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Subroutine)>(i0, r4, r3);

        return;
    }

    private void evalWide(int, javassist.bytecode.CodeIterator, javassist.bytecode.analysis.Frame, javassist.bytecode.analysis.Subroutine) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        int i0, i1, i2, $i3, $i4;
        javassist.bytecode.CodeIterator r1;
        javassist.bytecode.analysis.Frame r2;
        javassist.bytecode.analysis.Subroutine r3;
        javassist.bytecode.analysis.Type $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        javassist.bytecode.BadBytecode $r18;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r23;
        java.lang.String $r24;

        r0 := @this: javassist.bytecode.analysis.Executor;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.bytecode.CodeIterator;

        r2 := @parameter2: javassist.bytecode.analysis.Frame;

        r3 := @parameter3: javassist.bytecode.analysis.Subroutine;

        $i3 = i0 + 1;

        i1 = virtualinvoke r1.<javassist.bytecode.CodeIterator: int byteAt(int)>($i3);

        $i4 = i0 + 2;

        i2 = virtualinvoke r1.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i4);

        lookupswitch(i1)
        {
            case 21: goto label01;
            case 22: goto label02;
            case 23: goto label03;
            case 24: goto label04;
            case 25: goto label05;
            case 54: goto label06;
            case 55: goto label07;
            case 56: goto label08;
            case 57: goto label09;
            case 58: goto label10;
            case 132: goto label11;
            case 169: goto label12;
            default: goto label13;
        };

     label01:
        $r17 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r17, i2, r2, r3);

        goto label14;

     label02:
        $r16 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r16, i2, r2, r3);

        goto label14;

     label03:
        $r15 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r15, i2, r2, r3);

        goto label14;

     label04:
        $r14 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r14, i2, r2, r3);

        goto label14;

     label05:
        $r13 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalLoad(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r13, i2, r2, r3);

        goto label14;

     label06:
        $r12 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r12, i2, r2, r3);

        goto label14;

     label07:
        $r11 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type LONG>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r11, i2, r2, r3);

        goto label14;

     label08:
        $r10 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type FLOAT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r10, i2, r2, r3);

        goto label14;

     label09:
        $r9 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type DOUBLE>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r9, i2, r2, r3);

        goto label14;

     label10:
        $r8 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type OBJECT>;

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void evalStore(javassist.bytecode.analysis.Type,int,javassist.bytecode.analysis.Frame,javassist.bytecode.analysis.Subroutine)>($r8, i2, r2, r3);

        goto label14;

     label11:
        $r6 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type INTEGER>;

        $r7 = virtualinvoke r2.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type getLocal(int)>(i2);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r6, $r7);

        goto label14;

     label12:
        $r4 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type RETURN_ADDRESS>;

        $r5 = virtualinvoke r2.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type getLocal(int)>(i2);

        specialinvoke r0.<javassist.bytecode.analysis.Executor: void verifyAssignable(javassist.bytecode.analysis.Type,javassist.bytecode.analysis.Type)>($r4, $r5);

        goto label14;

     label13:
        $r18 = new javassist.bytecode.BadBytecode;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid WIDE operand [pos = ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r24);

        throw $r18;

     label14:
        return;
    }

    private javassist.bytecode.analysis.Type getType(java.lang.String) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        java.lang.String r1, $r13;
        javassist.ClassPool $r3;
        javassist.CtClass $r4;
        javassist.bytecode.analysis.Type $r5;
        javassist.NotFoundException $r6;
        javassist.bytecode.BadBytecode $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        int $i0;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<javassist.bytecode.analysis.Executor: javassist.ClassPool classPool>;

        $r4 = virtualinvoke $r3.<javassist.ClassPool: javassist.CtClass get(java.lang.String)>(r1);

        $r5 = staticinvoke <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type get(javassist.CtClass)>($r4);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new javassist.bytecode.BadBytecode;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class [pos = ");

        $i0 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r13);

        throw $r7;

        catch javassist.NotFoundException from label1 to label2 with label3;
    }

    private javassist.bytecode.analysis.Type[] paramTypesFromDesc(java.lang.String) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        java.lang.String r1, $r11, $r18, $r20;
        javassist.ClassPool $r2;
        int $i0, $i1, $i2, $i3, i4;
        javassist.CtClass $r3;
        javassist.bytecode.analysis.Type $r4;
        javassist.bytecode.BadBytecode $r5, $r13;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17, $r19;
        javassist.NotFoundException $r12;
        javassist.CtClass[] r21;
        javassist.bytecode.analysis.Type[] r23;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<javassist.bytecode.analysis.Executor: javassist.ClassPool classPool>;

        r21 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass[] getParameterTypes(java.lang.String,javassist.ClassPool)>(r1, $r2);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new javassist.bytecode.BadBytecode;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class in descriptor [pos = ");

        $i3 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r18 = virtualinvoke $r12.<javassist.NotFoundException: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r20);

        throw $r13;

     label4:
        if r21 != null goto label5;

        $r5 = new javassist.bytecode.BadBytecode;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not obtain parameters for descriptor [pos = ");

        $i2 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r11);

        throw $r5;

     label5:
        $i0 = lengthof r21;

        r23 = newarray (javassist.bytecode.analysis.Type)[$i0];

        i4 = 0;

     label6:
        $i1 = lengthof r23;

        if i4 >= $i1 goto label7;

        $r3 = r21[i4];

        $r4 = staticinvoke <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type get(javassist.CtClass)>($r3);

        r23[i4] = $r4;

        i4 = i4 + 1;

        goto label6;

     label7:
        return r23;

        catch javassist.NotFoundException from label1 to label2 with label3;
    }

    private javassist.bytecode.analysis.Type returnTypeFromDesc(java.lang.String) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        java.lang.String r1, $r11, $r18, $r20;
        javassist.ClassPool $r3;
        javassist.bytecode.analysis.Type $r4;
        javassist.bytecode.BadBytecode $r5, $r13;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17, $r19;
        int $i0, $i1;
        javassist.NotFoundException $r12;
        javassist.CtClass r21;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<javassist.bytecode.analysis.Executor: javassist.ClassPool classPool>;

        r21 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass getReturnType(java.lang.String,javassist.ClassPool)>(r1, $r3);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new javassist.bytecode.BadBytecode;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class in descriptor [pos = ");

        $i1 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r18 = virtualinvoke $r12.<javassist.NotFoundException: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r20);

        throw $r13;

     label4:
        if r21 != null goto label5;

        $r5 = new javassist.bytecode.BadBytecode;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not obtain return type for descriptor [pos = ");

        $i0 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r11);

        throw $r5;

     label5:
        $r4 = staticinvoke <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type get(javassist.CtClass)>(r21);

        return $r4;

        catch javassist.NotFoundException from label1 to label2 with label3;
    }

    private javassist.bytecode.analysis.Type simplePeek(javassist.bytecode.analysis.Frame)
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.analysis.Frame r1;
        javassist.bytecode.analysis.Type r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.analysis.Frame;

        r2 = virtualinvoke r1.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type peek()>();

        $r3 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type TOP>;

        if r2 != $r3 goto label1;

        $i0 = virtualinvoke r1.<javassist.bytecode.analysis.Frame: int getTopIndex()>();

        $i1 = $i0 - 1;

        $r4 = virtualinvoke r1.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type getStack(int)>($i1);

        goto label2;

     label1:
        $r4 = r2;

     label2:
        return $r4;
    }

    private javassist.bytecode.analysis.Type simplePop(javassist.bytecode.analysis.Frame)
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.analysis.Frame r1;
        javassist.bytecode.analysis.Type r2, $r3, $r4;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.analysis.Frame;

        r2 = virtualinvoke r1.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type pop()>();

        $r3 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type TOP>;

        if r2 != $r3 goto label1;

        $r4 = virtualinvoke r1.<javassist.bytecode.analysis.Frame: javassist.bytecode.analysis.Type pop()>();

        goto label2;

     label1:
        $r4 = r2;

     label2:
        return $r4;
    }

    private void simplePush(javassist.bytecode.analysis.Type, javassist.bytecode.analysis.Frame)
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.analysis.Type r1, $r3;
        javassist.bytecode.analysis.Frame r2;
        int $i0;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.analysis.Type;

        r2 := @parameter1: javassist.bytecode.analysis.Frame;

        virtualinvoke r2.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>(r1);

        $i0 = virtualinvoke r1.<javassist.bytecode.analysis.Type: int getSize()>();

        if $i0 != 2 goto label1;

        $r3 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type TOP>;

        virtualinvoke r2.<javassist.bytecode.analysis.Frame: void push(javassist.bytecode.analysis.Type)>($r3);

     label1:
        return;
    }

    private void access(int, javassist.bytecode.analysis.Type, javassist.bytecode.analysis.Subroutine)
    {
        javassist.bytecode.analysis.Executor r0;
        int i0, $i1, $i2;
        javassist.bytecode.analysis.Type r1;
        javassist.bytecode.analysis.Subroutine r2;

        r0 := @this: javassist.bytecode.analysis.Executor;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.bytecode.analysis.Type;

        r2 := @parameter2: javassist.bytecode.analysis.Subroutine;

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<javassist.bytecode.analysis.Subroutine: void access(int)>(i0);

        $i1 = virtualinvoke r1.<javassist.bytecode.analysis.Type: int getSize()>();

        if $i1 != 2 goto label2;

        $i2 = i0 + 1;

        virtualinvoke r2.<javassist.bytecode.analysis.Subroutine: void access(int)>($i2);

     label2:
        return;
    }

    private void simpleSetLocal(int, javassist.bytecode.analysis.Type, javassist.bytecode.analysis.Frame)
    {
        javassist.bytecode.analysis.Executor r0;
        int i0, $i1, $i2;
        javassist.bytecode.analysis.Type r1, $r3;
        javassist.bytecode.analysis.Frame r2;

        r0 := @this: javassist.bytecode.analysis.Executor;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.bytecode.analysis.Type;

        r2 := @parameter2: javassist.bytecode.analysis.Frame;

        virtualinvoke r2.<javassist.bytecode.analysis.Frame: void setLocal(int,javassist.bytecode.analysis.Type)>(i0, r1);

        $i1 = virtualinvoke r1.<javassist.bytecode.analysis.Type: int getSize()>();

        if $i1 != 2 goto label1;

        $i2 = i0 + 1;

        $r3 = <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type TOP>;

        virtualinvoke r2.<javassist.bytecode.analysis.Frame: void setLocal(int,javassist.bytecode.analysis.Type)>($i2, $r3);

     label1:
        return;
    }

    private javassist.bytecode.analysis.Type resolveClassInfo(java.lang.String) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        java.lang.String r1, $r11, $r19, $r21;
        char $c0;
        javassist.ClassPool $r3, $r12;
        javassist.bytecode.analysis.Type $r4;
        javassist.bytecode.BadBytecode $r5, $r14;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r15, $r16, $r17, $r18, $r20;
        int $i1, $i2;
        javassist.NotFoundException $r13;
        javassist.CtClass r22;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: java.lang.String;

     label1:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c0 != 91 goto label2;

        $r12 = r0.<javassist.bytecode.analysis.Executor: javassist.ClassPool classPool>;

        r22 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass toCtClass(java.lang.String,javassist.ClassPool)>(r1, $r12);

        goto label3;

     label2:
        $r3 = r0.<javassist.bytecode.analysis.Executor: javassist.ClassPool classPool>;

        r22 = virtualinvoke $r3.<javassist.ClassPool: javassist.CtClass get(java.lang.String)>(r1);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r14 = new javassist.bytecode.BadBytecode;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class in descriptor [pos = ");

        $i2 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r19 = virtualinvoke $r13.<javassist.NotFoundException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r21);

        throw $r14;

     label5:
        if r22 != null goto label6;

        $r5 = new javassist.bytecode.BadBytecode;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not obtain type for descriptor [pos = ");

        $i1 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r11);

        throw $r5;

     label6:
        $r4 = staticinvoke <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type get(javassist.CtClass)>(r22);

        return $r4;

        catch javassist.NotFoundException from label1 to label3 with label4;
    }

    private javassist.bytecode.analysis.Type typeFromDesc(java.lang.String) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        java.lang.String r1, $r11, $r18, $r20;
        javassist.ClassPool $r3;
        javassist.bytecode.analysis.Type $r4;
        javassist.bytecode.BadBytecode $r5, $r13;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17, $r19;
        int $i0, $i1;
        javassist.NotFoundException $r12;
        javassist.CtClass r21;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<javassist.bytecode.analysis.Executor: javassist.ClassPool classPool>;

        r21 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass toCtClass(java.lang.String,javassist.ClassPool)>(r1, $r3);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new javassist.bytecode.BadBytecode;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find class in descriptor [pos = ");

        $i1 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r18 = virtualinvoke $r12.<javassist.NotFoundException: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r20);

        throw $r13;

     label4:
        if r21 != null goto label5;

        $r5 = new javassist.bytecode.BadBytecode;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not obtain type for descriptor [pos = ");

        $i0 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r11);

        throw $r5;

     label5:
        $r4 = staticinvoke <javassist.bytecode.analysis.Type: javassist.bytecode.analysis.Type get(javassist.CtClass)>(r21);

        return $r4;

        catch javassist.NotFoundException from label1 to label2 with label3;
    }

    private void verifyAssignable(javassist.bytecode.analysis.Type, javassist.bytecode.analysis.Type) throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.analysis.Executor r0;
        javassist.bytecode.analysis.Type r1, r2;
        boolean $z0;
        javassist.bytecode.BadBytecode $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0;
        java.lang.String $r12;

        r0 := @this: javassist.bytecode.analysis.Executor;

        r1 := @parameter0: javassist.bytecode.analysis.Type;

        r2 := @parameter1: javassist.bytecode.analysis.Type;

        $z0 = virtualinvoke r1.<javassist.bytecode.analysis.Type: boolean isAssignableFrom(javassist.bytecode.analysis.Type)>(r2);

        if $z0 != 0 goto label1;

        $r3 = new javassist.bytecode.BadBytecode;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected type: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Got: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [pos = ");

        $i0 = r0.<javassist.bytecode.analysis.Executor: int lastPos>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r12);

        throw $r3;

     label1:
        return;
    }
}
