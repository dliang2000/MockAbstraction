public class org.hamcrest.core.AnyOf extends org.hamcrest.core.ShortcutCombination
{

    public void <init>(java.lang.Iterable)
    {
        org.hamcrest.core.AnyOf r0;
        java.lang.Iterable r1;

        r0 := @this: org.hamcrest.core.AnyOf;

        r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<org.hamcrest.core.ShortcutCombination: void <init>(java.lang.Iterable)>(r1);

        return;
    }

    public boolean matches(java.lang.Object)
    {
        org.hamcrest.core.AnyOf r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.hamcrest.core.AnyOf;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.hamcrest.core.AnyOf: boolean matches(java.lang.Object,boolean)>(r1, 1);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.core.AnyOf r0;
        org.hamcrest.Description r1;

        r0 := @this: org.hamcrest.core.AnyOf;

        r1 := @parameter0: org.hamcrest.Description;

        virtualinvoke r0.<org.hamcrest.core.AnyOf: void describeTo(org.hamcrest.Description,java.lang.String)>(r1, "or");

        return;
    }

    public static org.hamcrest.core.AnyOf anyOf(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.hamcrest.core.AnyOf $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = new org.hamcrest.core.AnyOf;

        specialinvoke $r1.<org.hamcrest.core.AnyOf: void <init>(java.lang.Iterable)>(r0);

        return $r1;
    }

    public static transient org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher[])
    {
        org.hamcrest.Matcher[] r0;
        java.util.List $r1;
        org.hamcrest.core.AnyOf $r2;

        r0 := @parameter0: org.hamcrest.Matcher[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(java.lang.Iterable)>($r1);

        return $r2;
    }

    public static org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        java.util.ArrayList $r3;
        org.hamcrest.core.AnyOf $r4;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(java.lang.Iterable)>($r3);

        return $r4;
    }

    public static org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2;
        java.util.ArrayList $r4;
        org.hamcrest.core.AnyOf $r5;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r5 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(java.lang.Iterable)>($r4);

        return $r5;
    }

    public static org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3;
        java.util.ArrayList $r5;
        org.hamcrest.core.AnyOf $r6;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

        $r6 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(java.lang.Iterable)>($r5);

        return $r6;
    }

    public static org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3, r4;
        java.util.ArrayList $r6;
        org.hamcrest.core.AnyOf $r7;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        r4 := @parameter4: org.hamcrest.Matcher;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r2);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r3);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r7 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(java.lang.Iterable)>($r6);

        return $r7;
    }

    public static org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3, r4, r5;
        java.util.ArrayList $r7;
        org.hamcrest.core.AnyOf $r8;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 := @parameter2: org.hamcrest.Matcher;

        r3 := @parameter3: org.hamcrest.Matcher;

        r4 := @parameter4: org.hamcrest.Matcher;

        r5 := @parameter5: org.hamcrest.Matcher;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r3);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r4);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r5);

        $r8 = staticinvoke <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(java.lang.Iterable)>($r7);

        return $r8;
    }

    public volatile void describeTo(org.hamcrest.Description, java.lang.String)
    {
        org.hamcrest.core.AnyOf r0;
        org.hamcrest.Description r1;
        java.lang.String r2;

        r0 := @this: org.hamcrest.core.AnyOf;

        r1 := @parameter0: org.hamcrest.Description;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.hamcrest.core.ShortcutCombination: void describeTo(org.hamcrest.Description,java.lang.String)>(r1, r2);

        return;
    }
}
