public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig extends java.lang.Object implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver, java.io.Serializable
{
    private static final long serialVersionUID;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value EMPTY_INCLUDE;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value EMPTY_FORMAT;
    protected final int _mapperFeatures;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base;

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings r1;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures> = i0;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0, r1;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base> = $r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures> = i0;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base> = r2;

        $i0 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures> = $i0;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base> = $r2;

        $i0 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures> = $i0;

        return;
    }

    public static int collectFeatureDefaults(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Enum[] r1;
        int i0, $i1, i2, i3;
        java.lang.Enum r2;
        java.lang.Object[] $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigFeature $r4, $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        i2 = 0;

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        r1 = (java.lang.Enum[]) $r3;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r2 = r1[i3];

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigFeature) r2;

        $z0 = interfaceinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigFeature: boolean enabledByDefault()>();

        if $z0 == 0 goto label2;

        $r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigFeature) r2;

        $i1 = interfaceinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigFeature: int getMask()>();

        i2 = i2 | $i1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    public abstract transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[]);

    public abstract transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature[]);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature, boolean);

    public final boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures>;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: boolean enabledIn(int)>($i0);

        return $z0;
    }

    public final boolean hasMapperFeatures(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: int _mapperFeatures>;

        $i2 = $i1 & i0;

        if $i2 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isAnnotationProcessingEnabled()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature USE_ANNOTATIONS>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r1);

        return $z0;
    }

    public final boolean canOverrideAccessModifiers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r1);

        return $z0;
    }

    public final boolean shouldSortPropertiesAlphabetically()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature SORT_PROPERTIES_ALPHABETICALLY>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r1);

        return $z0;
    }

    public abstract boolean useRootWrapping();

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString compileString(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>(r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector()>();

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature USE_ANNOTATIONS>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        return $r4;

     label1:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector instance>;

        return $r2;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy()>();

        return $r2;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider getAccessorNaming()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider getAccessorNaming()>();

        return $r2;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();

        return $r2;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getDefaultTyper(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getTypeResolverBuilder()>();

        return $r3;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver();

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r3;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        r5 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()>();

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator instance>;

        if r5 != $r2 goto label1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature BLOCK_UNSAFE_POLYMORPHIC_BASE_TYPES>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r3);

        if $z0 == 0 goto label1;

        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator: void <init>()>();

        r5 = $r4;

     label1:
        return r5;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        return $r2;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

        return $r3;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r2;
        java.lang.reflect.Type $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.type.TypeReference: java.lang.reflect.Type getType()>();

        $r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>($r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, $r4;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean)>(r1, r2, 1);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(r1);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>(r0, r1, r0);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspectDirectClassAnnotations(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(r1);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspectDirectClassAnnotations(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r2);

        return $r3;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription introspectDirectClassAnnotations(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription forDirectClassAnnotations(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>(r0, r1, r0);

        return $r3;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride findConfigOverride(java.lang.Class);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion();

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r2, r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class)>(r1);

        r3 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getInclude()>();

        if r3 == null goto label1;

        return r3;

     label1:
        return r2;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultInclusion(java.lang.Class, java.lang.Class);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultInclusion(java.lang.Class, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        java.lang.Class r1, r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r3, r4, r5, r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value[] $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class)>(r1);

        r4 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getInclude()>();

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class)>(r2);

        r5 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getIncludeAsProperty()>();

        $r9 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)[3];

        $r9[0] = r3;

        $r9[1] = r4;

        $r9[2] = r5;

        r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value mergeAll(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value[])>($r9);

        return r6;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value getDefaultPropertyInclusions(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker();

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedClass);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value getDefaultSetterInfo();

    public abstract java.lang.Boolean getDefaultMergeable();

    public abstract java.lang.Boolean getDefaultMergeable(java.lang.Class);

    public final java.text.DateFormat getDateFormat()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        java.text.DateFormat $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: java.text.DateFormat getDateFormat()>();

        return $r2;
    }

    public final java.util.Locale getLocale()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        java.util.Locale $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: java.util.Locale getLocale()>();

        return $r2;
    }

    public final java.util.TimeZone getTimeZone()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        java.util.TimeZone $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: java.util.TimeZone getTimeZone()>();

        return $r2;
    }

    public boolean hasExplicitTimeZone()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: boolean hasExplicitTimeZone()>();

        return $z0;
    }

    public abstract java.lang.Class getActiveView();

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant getBase64Variant()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings _base>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.BaseSettings: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();

        return $r2;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes();

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName findRootName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder r4, $r6;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        r2 := @parameter1: java.lang.Class;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(r0, r1, r2);

        if r4 == null goto label1;

        return r4;

     label1:
        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean canOverrideAccessModifiers()>();

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r2, $z0);

        $r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) $r5;

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver r4, $r6;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        r2 := @parameter1: java.lang.Class;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(r0, r1, r2);

        if r4 == null goto label1;

        return r4;

     label1:
        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean canOverrideAccessModifiers()>();

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r2, $z0);

        $r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver) $r5;

        return $r6;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value $r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value $r1;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: long serialVersionUID> = 2L;

        $r0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value empty()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value EMPTY_INCLUDE> = $r0;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value empty()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value EMPTY_FORMAT> = $r1;

        return;
    }
}
