public class org.mockito.internal.junit.UnusedStubbings extends java.lang.Object
{
    private final java.util.Collection unused;

    void <init>(java.util.Collection)
    {
        org.mockito.internal.junit.UnusedStubbings r0;
        java.util.Collection r1;

        r0 := @this: org.mockito.internal.junit.UnusedStubbings;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mockito.internal.junit.UnusedStubbings: java.util.Collection unused> = r1;

        return;
    }

    void format(java.lang.String, org.mockito.internal.util.MockitoLogger)
    {
        org.mockito.internal.junit.UnusedStubbings r0;
        java.lang.String r1, $r9;
        org.mockito.internal.util.MockitoLogger r2;
        java.util.Iterator r4;
        org.mockito.stubbing.Stubbing r5;
        java.util.Collection $r6, $r8;
        boolean $z0, $z1, $z2;
        org.mockito.internal.junit.StubbingHint $r7;
        java.lang.Object $r10;
        java.lang.Object[] $r11;
        int $i0, i1;
        java.lang.Integer $r12;
        org.mockito.invocation.Invocation $r13;
        org.mockito.invocation.Location $r14;

        r0 := @this: org.mockito.internal.junit.UnusedStubbings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.mockito.internal.util.MockitoLogger;

        $r6 = r0.<org.mockito.internal.junit.UnusedStubbings: java.util.Collection unused>;

        $z0 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r7 = new org.mockito.internal.junit.StubbingHint;

        specialinvoke $r7.<org.mockito.internal.junit.StubbingHint: void <init>(java.lang.String)>(r1);

        i1 = 1;

        $r8 = r0.<org.mockito.internal.junit.UnusedStubbings: java.util.Collection unused>;

        r4 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.mockito.stubbing.Stubbing) $r10;

        $z2 = interfaceinvoke r5.<org.mockito.stubbing.Stubbing: boolean wasUsed()>();

        if $z2 != 0 goto label3;

        $r11 = newarray (java.lang.Object)[3];

        $i0 = i1;

        i1 = i1 + 1;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r11[0] = $r12;

        $r11[1] = ". Unused ";

        $r13 = interfaceinvoke r5.<org.mockito.stubbing.Stubbing: org.mockito.invocation.Invocation getInvocation()>();

        $r14 = interfaceinvoke $r13.<org.mockito.invocation.Invocation: org.mockito.invocation.Location getLocation()>();

        $r11[2] = $r14;

        virtualinvoke $r7.<org.mockito.internal.junit.StubbingHint: void appendLine(java.lang.Object[])>($r11);

     label3:
        goto label2;

     label4:
        $r9 = virtualinvoke $r7.<org.mockito.internal.junit.StubbingHint: java.lang.String toString()>();

        interfaceinvoke r2.<org.mockito.internal.util.MockitoLogger: void log(java.lang.Object)>($r9);

        return;
    }

    public int size()
    {
        org.mockito.internal.junit.UnusedStubbings r0;
        java.util.Collection $r1;
        int $i0;

        r0 := @this: org.mockito.internal.junit.UnusedStubbings;

        $r1 = r0.<org.mockito.internal.junit.UnusedStubbings: java.util.Collection unused>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.mockito.internal.junit.UnusedStubbings r0;
        java.util.Collection $r1;
        java.lang.String $r2;

        r0 := @this: org.mockito.internal.junit.UnusedStubbings;

        $r1 = r0.<org.mockito.internal.junit.UnusedStubbings: java.util.Collection unused>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    void reportUnused()
    {
        org.mockito.internal.junit.UnusedStubbings r0;
        java.util.Iterator r2;
        org.mockito.stubbing.Stubbing r3;
        java.util.Collection $r4, $r6;
        boolean $z0, $z1, $z2;
        java.util.LinkedList $r5;
        java.lang.Object $r7;
        org.mockito.invocation.Invocation $r8;

        r0 := @this: org.mockito.internal.junit.UnusedStubbings;

        $r4 = r0.<org.mockito.internal.junit.UnusedStubbings: java.util.Collection unused>;

        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        $r6 = r0.<org.mockito.internal.junit.UnusedStubbings: java.util.Collection unused>;

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.mockito.stubbing.Stubbing) $r7;

        $r8 = interfaceinvoke r3.<org.mockito.stubbing.Stubbing: org.mockito.invocation.Invocation getInvocation()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        $z2 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label4;

        return;

     label4:
        staticinvoke <org.mockito.internal.exceptions.Reporter: void unncessaryStubbingException(java.util.List)>($r5);

        return;
    }
}
