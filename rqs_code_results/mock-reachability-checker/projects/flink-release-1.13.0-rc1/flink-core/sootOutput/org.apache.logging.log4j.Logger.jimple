public interface  org.apache.logging.log4j.Logger extends java.lang.Object
{

    public abstract void catching(org.apache.logging.log4j.Level, java.lang.Throwable);

    public abstract void catching(java.lang.Throwable);

    public abstract void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message);

    public abstract void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier);

    public abstract void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.CharSequence);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.Object);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String);

    public abstract transient void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[]);

    public abstract transient void debug(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable);

    public abstract void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier);

    public abstract void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void debug(org.apache.logging.log4j.message.Message);

    public abstract void debug(org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void debug(org.apache.logging.log4j.util.MessageSupplier);

    public abstract void debug(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void debug(java.lang.CharSequence);

    public abstract void debug(java.lang.CharSequence, java.lang.Throwable);

    public abstract void debug(java.lang.Object);

    public abstract void debug(java.lang.Object, java.lang.Throwable);

    public abstract void debug(java.lang.String);

    public abstract transient void debug(java.lang.String, java.lang.Object[]);

    public abstract transient void debug(java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void debug(java.lang.String, java.lang.Throwable);

    public abstract void debug(org.apache.logging.log4j.util.Supplier);

    public abstract void debug(org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(java.lang.String, java.lang.Object);

    public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void entry();

    public abstract transient void entry(java.lang.Object[]);

    public abstract void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message);

    public abstract void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier);

    public abstract void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.CharSequence);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.Object);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String);

    public abstract transient void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[]);

    public abstract transient void error(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable);

    public abstract void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier);

    public abstract void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void error(org.apache.logging.log4j.message.Message);

    public abstract void error(org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void error(org.apache.logging.log4j.util.MessageSupplier);

    public abstract void error(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void error(java.lang.CharSequence);

    public abstract void error(java.lang.CharSequence, java.lang.Throwable);

    public abstract void error(java.lang.Object);

    public abstract void error(java.lang.Object, java.lang.Throwable);

    public abstract void error(java.lang.String);

    public abstract transient void error(java.lang.String, java.lang.Object[]);

    public abstract transient void error(java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void error(java.lang.String, java.lang.Throwable);

    public abstract void error(org.apache.logging.log4j.util.Supplier);

    public abstract void error(org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(java.lang.String, java.lang.Object);

    public abstract void error(java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void exit();

    public abstract java.lang.Object exit(java.lang.Object);

    public abstract void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message);

    public abstract void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier);

    public abstract void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.CharSequence);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.Object);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String);

    public abstract transient void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[]);

    public abstract transient void fatal(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable);

    public abstract void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier);

    public abstract void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void fatal(org.apache.logging.log4j.message.Message);

    public abstract void fatal(org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void fatal(org.apache.logging.log4j.util.MessageSupplier);

    public abstract void fatal(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void fatal(java.lang.CharSequence);

    public abstract void fatal(java.lang.CharSequence, java.lang.Throwable);

    public abstract void fatal(java.lang.Object);

    public abstract void fatal(java.lang.Object, java.lang.Throwable);

    public abstract void fatal(java.lang.String);

    public abstract transient void fatal(java.lang.String, java.lang.Object[]);

    public abstract transient void fatal(java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void fatal(java.lang.String, java.lang.Throwable);

    public abstract void fatal(org.apache.logging.log4j.util.Supplier);

    public abstract void fatal(org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(java.lang.String, java.lang.Object);

    public abstract void fatal(java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract org.apache.logging.log4j.Level getLevel();

    public abstract org.apache.logging.log4j.message.MessageFactory getMessageFactory();

    public abstract java.lang.String getName();

    public abstract void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message);

    public abstract void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier);

    public abstract void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.CharSequence);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.Object);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String);

    public abstract transient void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[]);

    public abstract transient void info(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable);

    public abstract void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier);

    public abstract void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void info(org.apache.logging.log4j.message.Message);

    public abstract void info(org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void info(org.apache.logging.log4j.util.MessageSupplier);

    public abstract void info(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void info(java.lang.CharSequence);

    public abstract void info(java.lang.CharSequence, java.lang.Throwable);

    public abstract void info(java.lang.Object);

    public abstract void info(java.lang.Object, java.lang.Throwable);

    public abstract void info(java.lang.String);

    public abstract transient void info(java.lang.String, java.lang.Object[]);

    public abstract transient void info(java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void info(java.lang.String, java.lang.Throwable);

    public abstract void info(org.apache.logging.log4j.util.Supplier);

    public abstract void info(org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(java.lang.String, java.lang.Object);

    public abstract void info(java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract boolean isDebugEnabled();

    public abstract boolean isDebugEnabled(org.apache.logging.log4j.Marker);

    public abstract boolean isEnabled(org.apache.logging.log4j.Level);

    public abstract boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker);

    public abstract boolean isErrorEnabled();

    public abstract boolean isErrorEnabled(org.apache.logging.log4j.Marker);

    public abstract boolean isFatalEnabled();

    public abstract boolean isFatalEnabled(org.apache.logging.log4j.Marker);

    public abstract boolean isInfoEnabled();

    public abstract boolean isInfoEnabled(org.apache.logging.log4j.Marker);

    public abstract boolean isTraceEnabled();

    public abstract boolean isTraceEnabled(org.apache.logging.log4j.Marker);

    public abstract boolean isWarnEnabled();

    public abstract boolean isWarnEnabled(org.apache.logging.log4j.Marker);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.CharSequence);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String);

    public abstract transient void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[]);

    public abstract transient void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.util.MessageSupplier);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.CharSequence);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.CharSequence, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.Object, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String);

    public abstract transient void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object[]);

    public abstract transient void log(org.apache.logging.log4j.Level, java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.util.Supplier);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract transient void printf(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[]);

    public abstract transient void printf(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object[]);

    public abstract java.lang.Throwable throwing(org.apache.logging.log4j.Level, java.lang.Throwable);

    public abstract java.lang.Throwable throwing(java.lang.Throwable);

    public abstract void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message);

    public abstract void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier);

    public abstract void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.CharSequence);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.Object);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String);

    public abstract transient void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[]);

    public abstract transient void trace(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable);

    public abstract void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier);

    public abstract void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void trace(org.apache.logging.log4j.message.Message);

    public abstract void trace(org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void trace(org.apache.logging.log4j.util.MessageSupplier);

    public abstract void trace(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void trace(java.lang.CharSequence);

    public abstract void trace(java.lang.CharSequence, java.lang.Throwable);

    public abstract void trace(java.lang.Object);

    public abstract void trace(java.lang.Object, java.lang.Throwable);

    public abstract void trace(java.lang.String);

    public abstract transient void trace(java.lang.String, java.lang.Object[]);

    public abstract transient void trace(java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void trace(java.lang.String, java.lang.Throwable);

    public abstract void trace(org.apache.logging.log4j.util.Supplier);

    public abstract void trace(org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(java.lang.String, java.lang.Object);

    public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract org.apache.logging.log4j.message.EntryMessage traceEntry();

    public abstract transient org.apache.logging.log4j.message.EntryMessage traceEntry(java.lang.String, java.lang.Object[]);

    public abstract transient org.apache.logging.log4j.message.EntryMessage traceEntry(org.apache.logging.log4j.util.Supplier[]);

    public abstract transient org.apache.logging.log4j.message.EntryMessage traceEntry(java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract org.apache.logging.log4j.message.EntryMessage traceEntry(org.apache.logging.log4j.message.Message);

    public abstract void traceExit();

    public abstract java.lang.Object traceExit(java.lang.Object);

    public abstract java.lang.Object traceExit(java.lang.String, java.lang.Object);

    public abstract void traceExit(org.apache.logging.log4j.message.EntryMessage);

    public abstract java.lang.Object traceExit(org.apache.logging.log4j.message.EntryMessage, java.lang.Object);

    public abstract java.lang.Object traceExit(org.apache.logging.log4j.message.Message, java.lang.Object);

    public abstract void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message);

    public abstract void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier);

    public abstract void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.CharSequence);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.Object);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String);

    public abstract transient void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[]);

    public abstract transient void warn(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable);

    public abstract void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier);

    public abstract void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void warn(org.apache.logging.log4j.message.Message);

    public abstract void warn(org.apache.logging.log4j.message.Message, java.lang.Throwable);

    public abstract void warn(org.apache.logging.log4j.util.MessageSupplier);

    public abstract void warn(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable);

    public abstract void warn(java.lang.CharSequence);

    public abstract void warn(java.lang.CharSequence, java.lang.Throwable);

    public abstract void warn(java.lang.Object);

    public abstract void warn(java.lang.Object, java.lang.Throwable);

    public abstract void warn(java.lang.String);

    public abstract transient void warn(java.lang.String, java.lang.Object[]);

    public abstract transient void warn(java.lang.String, org.apache.logging.log4j.util.Supplier[]);

    public abstract void warn(java.lang.String, java.lang.Throwable);

    public abstract void warn(org.apache.logging.log4j.util.Supplier);

    public abstract void warn(org.apache.logging.log4j.util.Supplier, java.lang.Throwable);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(java.lang.String, java.lang.Object);

    public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object);

    public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
}
