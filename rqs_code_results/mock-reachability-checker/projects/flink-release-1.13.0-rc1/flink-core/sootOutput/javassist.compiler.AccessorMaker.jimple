public class javassist.compiler.AccessorMaker extends java.lang.Object
{
    private javassist.CtClass clazz;
    private int uniqueNumber;
    private java.util.Map accessors;
    static final java.lang.String lastParamType;

    public void <init>(javassist.CtClass)
    {
        javassist.compiler.AccessorMaker r0;
        javassist.CtClass r1;
        java.util.HashMap $r2;

        r0 := @this: javassist.compiler.AccessorMaker;

        r1 := @parameter0: javassist.CtClass;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz> = r1;

        r0.<javassist.compiler.AccessorMaker: int uniqueNumber> = 1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<javassist.compiler.AccessorMaker: java.util.Map accessors> = $r2;

        return;
    }

    public java.lang.String getConstructor(javassist.CtClass, java.lang.String, javassist.bytecode.MethodInfo) throws javassist.compiler.CompileError
    {
        javassist.compiler.AccessorMaker r0;
        javassist.CtClass r1, $r16, $r17, $r21, $r25;
        java.lang.String r2, r4, r31, r32;
        javassist.bytecode.MethodInfo r3, $r18;
        javassist.bytecode.ClassFile r5;
        javassist.ClassPool r6;
        javassist.bytecode.ExceptionsAttribute r8;
        javassist.CtClass[] r9;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.util.Map $r14, $r23;
        java.lang.Object $r15;
        javassist.bytecode.SyntheticAttribute $r19;
        javassist.bytecode.Bytecode $r20;
        int $i0, $i1, i2, i3, $i4;
        javassist.bytecode.CodeAttribute $r22;
        javassist.bytecode.AttributeInfo $r26;
        javassist.NotFoundException $r27;
        javassist.compiler.CompileError $r28, $r30;
        javassist.CannotCompileException $r29;
        javassist.bytecode.ConstPool r33;

        r0 := @this: javassist.compiler.AccessorMaker;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.bytecode.MethodInfo;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<init>:");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r0.<javassist.compiler.AccessorMaker: java.util.Map accessors>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r31 = (java.lang.String) $r15;

        if r31 == null goto label1;

        return r31;

     label1:
        r32 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String appendParameter(java.lang.String,java.lang.String)>("javassist.runtime.Inner", r2);

        $r16 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        r5 = virtualinvoke $r16.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile()>();

     label2:
        r33 = virtualinvoke r5.<javassist.bytecode.ClassFile: javassist.bytecode.ConstPool getConstPool()>();

        $r17 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        r6 = virtualinvoke $r17.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r18 = new javassist.bytecode.MethodInfo;

        specialinvoke $r18.<javassist.bytecode.MethodInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,java.lang.String)>(r33, "<init>", r32);

        virtualinvoke $r18.<javassist.bytecode.MethodInfo: void setAccessFlags(int)>(0);

        $r19 = new javassist.bytecode.SyntheticAttribute;

        specialinvoke $r19.<javassist.bytecode.SyntheticAttribute: void <init>(javassist.bytecode.ConstPool)>(r33);

        virtualinvoke $r18.<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>($r19);

        r8 = virtualinvoke r3.<javassist.bytecode.MethodInfo: javassist.bytecode.ExceptionsAttribute getExceptionsAttribute()>();

        if r8 == null goto label3;

        $r26 = virtualinvoke r8.<javassist.bytecode.ExceptionsAttribute: javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool,java.util.Map)>(r33, null);

        virtualinvoke $r18.<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>($r26);

     label3:
        r9 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass[] getParameterTypes(java.lang.String,javassist.ClassPool)>(r2, r6);

        $r20 = new javassist.bytecode.Bytecode;

        specialinvoke $r20.<javassist.bytecode.Bytecode: void <init>(javassist.bytecode.ConstPool)>(r33);

        virtualinvoke $r20.<javassist.bytecode.Bytecode: void addAload(int)>(0);

        i2 = 1;

        i3 = 0;

     label4:
        $i4 = lengthof r9;

        if i3 >= $i4 goto label5;

        $r25 = r9[i3];

        $i1 = virtualinvoke $r20.<javassist.bytecode.Bytecode: int addLoad(int,javassist.CtClass)>(i2, $r25);

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label4;

     label5:
        $i0 = i2 + 1;

        virtualinvoke $r20.<javassist.bytecode.Bytecode: void setMaxLocals(int)>($i0);

        $r21 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        virtualinvoke $r20.<javassist.bytecode.Bytecode: void addInvokespecial(javassist.CtClass,java.lang.String,java.lang.String)>($r21, "<init>", r2);

        virtualinvoke $r20.<javassist.bytecode.Bytecode: void addReturn(javassist.CtClass)>(null);

        $r22 = virtualinvoke $r20.<javassist.bytecode.Bytecode: javassist.bytecode.CodeAttribute toCodeAttribute()>();

        virtualinvoke $r18.<javassist.bytecode.MethodInfo: void setCodeAttribute(javassist.bytecode.CodeAttribute)>($r22);

        virtualinvoke r5.<javassist.bytecode.ClassFile: void addMethod(javassist.bytecode.MethodInfo)>($r18);

     label6:
        goto label9;

     label7:
        $r29 := @caughtexception;

        $r30 = new javassist.compiler.CompileError;

        specialinvoke $r30.<javassist.compiler.CompileError: void <init>(javassist.CannotCompileException)>($r29);

        throw $r30;

     label8:
        $r27 := @caughtexception;

        $r28 = new javassist.compiler.CompileError;

        specialinvoke $r28.<javassist.compiler.CompileError: void <init>(javassist.NotFoundException)>($r27);

        throw $r28;

     label9:
        $r23 = r0.<javassist.compiler.AccessorMaker: java.util.Map accessors>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r32);

        return r32;

        catch javassist.CannotCompileException from label2 to label6 with label7;
        catch javassist.NotFoundException from label2 to label6 with label8;
    }

    public java.lang.String getMethodAccessor(java.lang.String, java.lang.String, java.lang.String, javassist.bytecode.MethodInfo) throws javassist.compiler.CompileError
    {
        javassist.compiler.AccessorMaker r0;
        java.lang.String r1, r2, r3, r5, r35, r36;
        javassist.bytecode.MethodInfo r4, $r20;
        javassist.bytecode.ClassFile r6;
        javassist.ClassPool r7;
        javassist.bytecode.ExceptionsAttribute r9;
        javassist.CtClass[] r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;
        java.util.Map $r16, $r26;
        java.lang.Object $r17;
        javassist.CtClass $r18, $r19, $r23, $r24, $r28, $r29;
        javassist.bytecode.SyntheticAttribute $r21;
        javassist.bytecode.Bytecode $r22;
        javassist.bytecode.CodeAttribute $r25;
        int $i0, i1, i2, $i3;
        javassist.bytecode.AttributeInfo $r30;
        javassist.NotFoundException $r31;
        javassist.compiler.CompileError $r32, $r34;
        javassist.CannotCompileException $r33;
        javassist.bytecode.ConstPool r37;

        r0 := @this: javassist.compiler.AccessorMaker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: javassist.bytecode.MethodInfo;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r5 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = r0.<javassist.compiler.AccessorMaker: java.util.Map accessors>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r35 = (java.lang.String) $r17;

        if r35 == null goto label01;

        return r35;

     label01:
        $r18 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        r6 = virtualinvoke $r18.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile()>();

        r36 = specialinvoke r0.<javassist.compiler.AccessorMaker: java.lang.String findAccessorName(javassist.bytecode.ClassFile)>(r6);

     label02:
        r37 = virtualinvoke r6.<javassist.bytecode.ClassFile: javassist.bytecode.ConstPool getConstPool()>();

        $r19 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        r7 = virtualinvoke $r19.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r20 = new javassist.bytecode.MethodInfo;

        specialinvoke $r20.<javassist.bytecode.MethodInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,java.lang.String)>(r37, r36, r3);

        virtualinvoke $r20.<javassist.bytecode.MethodInfo: void setAccessFlags(int)>(8);

        $r21 = new javassist.bytecode.SyntheticAttribute;

        specialinvoke $r21.<javassist.bytecode.SyntheticAttribute: void <init>(javassist.bytecode.ConstPool)>(r37);

        virtualinvoke $r20.<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>($r21);

        r9 = virtualinvoke r4.<javassist.bytecode.MethodInfo: javassist.bytecode.ExceptionsAttribute getExceptionsAttribute()>();

        if r9 == null goto label03;

        $r30 = virtualinvoke r9.<javassist.bytecode.ExceptionsAttribute: javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool,java.util.Map)>(r37, null);

        virtualinvoke $r20.<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>($r30);

     label03:
        r10 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass[] getParameterTypes(java.lang.String,javassist.ClassPool)>(r3, r7);

        i1 = 0;

        $r22 = new javassist.bytecode.Bytecode;

        specialinvoke $r22.<javassist.bytecode.Bytecode: void <init>(javassist.bytecode.ConstPool)>(r37);

        i2 = 0;

     label04:
        $i3 = lengthof r10;

        if i2 >= $i3 goto label05;

        $r29 = r10[i2];

        $i0 = virtualinvoke $r22.<javassist.bytecode.Bytecode: int addLoad(int,javassist.CtClass)>(i1, $r29);

        i1 = i1 + $i0;

        i2 = i2 + 1;

        goto label04;

     label05:
        virtualinvoke $r22.<javassist.bytecode.Bytecode: void setMaxLocals(int)>(i1);

        if r2 != r3 goto label06;

        $r28 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        virtualinvoke $r22.<javassist.bytecode.Bytecode: void addInvokestatic(javassist.CtClass,java.lang.String,java.lang.String)>($r28, r1, r2);

        goto label07;

     label06:
        $r23 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        virtualinvoke $r22.<javassist.bytecode.Bytecode: void addInvokevirtual(javassist.CtClass,java.lang.String,java.lang.String)>($r23, r1, r2);

     label07:
        $r24 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass getReturnType(java.lang.String,javassist.ClassPool)>(r2, r7);

        virtualinvoke $r22.<javassist.bytecode.Bytecode: void addReturn(javassist.CtClass)>($r24);

        $r25 = virtualinvoke $r22.<javassist.bytecode.Bytecode: javassist.bytecode.CodeAttribute toCodeAttribute()>();

        virtualinvoke $r20.<javassist.bytecode.MethodInfo: void setCodeAttribute(javassist.bytecode.CodeAttribute)>($r25);

        virtualinvoke r6.<javassist.bytecode.ClassFile: void addMethod(javassist.bytecode.MethodInfo)>($r20);

     label08:
        goto label11;

     label09:
        $r33 := @caughtexception;

        $r34 = new javassist.compiler.CompileError;

        specialinvoke $r34.<javassist.compiler.CompileError: void <init>(javassist.CannotCompileException)>($r33);

        throw $r34;

     label10:
        $r31 := @caughtexception;

        $r32 = new javassist.compiler.CompileError;

        specialinvoke $r32.<javassist.compiler.CompileError: void <init>(javassist.NotFoundException)>($r31);

        throw $r32;

     label11:
        $r26 = r0.<javassist.compiler.AccessorMaker: java.util.Map accessors>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r36);

        return r36;

        catch javassist.CannotCompileException from label02 to label08 with label09;
        catch javassist.NotFoundException from label02 to label08 with label10;
    }

    public javassist.bytecode.MethodInfo getFieldGetter(javassist.bytecode.FieldInfo, boolean) throws javassist.compiler.CompileError
    {
        javassist.compiler.AccessorMaker r0;
        javassist.bytecode.FieldInfo r1;
        boolean z0;
        java.lang.String r2, r3, r6, r8, $r20, r43;
        java.lang.Object r4;
        javassist.bytecode.ClassFile r5;
        javassist.ClassPool r7;
        java.lang.StringBuilder $r11, $r12, $r13, $r17, $r18, $r21, $r22, $r23, $r34, $r35, $r36;
        java.util.Map $r14, $r30;
        javassist.CtClass $r15, $r16, $r19, $r27, $r28, $r32;
        javassist.bytecode.MethodInfo $r24, $r37;
        javassist.bytecode.SyntheticAttribute $r25;
        javassist.bytecode.Bytecode $r26;
        javassist.bytecode.CodeAttribute $r29;
        javassist.CannotCompileException $r38;
        javassist.compiler.CompileError $r39, $r41;
        javassist.NotFoundException $r40;
        javassist.bytecode.ConstPool r42;

        r0 := @this: javassist.compiler.AccessorMaker;

        r1 := @parameter0: javassist.bytecode.FieldInfo;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<javassist.bytecode.FieldInfo: java.lang.String getName()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":getter");

        r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r0.<javassist.compiler.AccessorMaker: java.util.Map accessors>;

        r4 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        if r4 == null goto label1;

        $r37 = (javassist.bytecode.MethodInfo) r4;

        return $r37;

     label1:
        $r15 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        r5 = virtualinvoke $r15.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile()>();

        r6 = specialinvoke r0.<javassist.compiler.AccessorMaker: java.lang.String findAccessorName(javassist.bytecode.ClassFile)>(r5);

     label2:
        r42 = virtualinvoke r5.<javassist.bytecode.ClassFile: javassist.bytecode.ConstPool getConstPool()>();

        $r16 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        r7 = virtualinvoke $r16.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        r8 = virtualinvoke r1.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        if z0 == 0 goto label3;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("()");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r43 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r19 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        $r20 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String of(javassist.CtClass)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r43 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r24 = new javassist.bytecode.MethodInfo;

        specialinvoke $r24.<javassist.bytecode.MethodInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,java.lang.String)>(r42, r6, r43);

        virtualinvoke $r24.<javassist.bytecode.MethodInfo: void setAccessFlags(int)>(8);

        $r25 = new javassist.bytecode.SyntheticAttribute;

        specialinvoke $r25.<javassist.bytecode.SyntheticAttribute: void <init>(javassist.bytecode.ConstPool)>(r42);

        virtualinvoke $r24.<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>($r25);

        $r26 = new javassist.bytecode.Bytecode;

        specialinvoke $r26.<javassist.bytecode.Bytecode: void <init>(javassist.bytecode.ConstPool)>(r42);

        if z0 == 0 goto label5;

        $r32 = <javassist.bytecode.Bytecode: javassist.CtClass THIS>;

        virtualinvoke $r26.<javassist.bytecode.Bytecode: void addGetstatic(javassist.CtClass,java.lang.String,java.lang.String)>($r32, r2, r8);

        goto label6;

     label5:
        virtualinvoke $r26.<javassist.bytecode.Bytecode: void addAload(int)>(0);

        $r27 = <javassist.bytecode.Bytecode: javassist.CtClass THIS>;

        virtualinvoke $r26.<javassist.bytecode.Bytecode: void addGetfield(javassist.CtClass,java.lang.String,java.lang.String)>($r27, r2, r8);

        virtualinvoke $r26.<javassist.bytecode.Bytecode: void setMaxLocals(int)>(1);

     label6:
        $r28 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass toCtClass(java.lang.String,javassist.ClassPool)>(r8, r7);

        virtualinvoke $r26.<javassist.bytecode.Bytecode: void addReturn(javassist.CtClass)>($r28);

        $r29 = virtualinvoke $r26.<javassist.bytecode.Bytecode: javassist.bytecode.CodeAttribute toCodeAttribute()>();

        virtualinvoke $r24.<javassist.bytecode.MethodInfo: void setCodeAttribute(javassist.bytecode.CodeAttribute)>($r29);

        virtualinvoke r5.<javassist.bytecode.ClassFile: void addMethod(javassist.bytecode.MethodInfo)>($r24);

        $r30 = r0.<javassist.compiler.AccessorMaker: java.util.Map accessors>;

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r24);

     label7:
        return $r24;

     label8:
        $r38 := @caughtexception;

        $r39 = new javassist.compiler.CompileError;

        specialinvoke $r39.<javassist.compiler.CompileError: void <init>(javassist.CannotCompileException)>($r38);

        throw $r39;

     label9:
        $r40 := @caughtexception;

        $r41 = new javassist.compiler.CompileError;

        specialinvoke $r41.<javassist.compiler.CompileError: void <init>(javassist.NotFoundException)>($r40);

        throw $r41;

        catch javassist.CannotCompileException from label2 to label7 with label8;
        catch javassist.NotFoundException from label2 to label7 with label9;
    }

    public javassist.bytecode.MethodInfo getFieldSetter(javassist.bytecode.FieldInfo, boolean) throws javassist.compiler.CompileError
    {
        javassist.compiler.AccessorMaker r0;
        javassist.bytecode.FieldInfo r1;
        boolean z0;
        java.lang.String r2, r3, r6, r8, $r20, r45;
        java.lang.Object r4;
        javassist.bytecode.ClassFile r5;
        javassist.ClassPool r7;
        java.lang.StringBuilder $r11, $r12, $r13, $r17, $r18, $r21, $r22, $r23, $r35, $r36, $r37, $r38;
        java.util.Map $r14, $r30;
        javassist.CtClass $r15, $r16, $r19, $r27, $r28, $r32, $r33;
        javassist.bytecode.MethodInfo $r24, $r39;
        javassist.bytecode.SyntheticAttribute $r25;
        javassist.bytecode.Bytecode $r26;
        int $i0, i1;
        javassist.bytecode.CodeAttribute $r29;
        javassist.NotFoundException $r40;
        javassist.compiler.CompileError $r41, $r43;
        javassist.CannotCompileException $r42;
        javassist.bytecode.ConstPool r44;

        r0 := @this: javassist.compiler.AccessorMaker;

        r1 := @parameter0: javassist.bytecode.FieldInfo;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<javassist.bytecode.FieldInfo: java.lang.String getName()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":setter");

        r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r0.<javassist.compiler.AccessorMaker: java.util.Map accessors>;

        r4 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        if r4 == null goto label1;

        $r39 = (javassist.bytecode.MethodInfo) r4;

        return $r39;

     label1:
        $r15 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        r5 = virtualinvoke $r15.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile()>();

        r6 = specialinvoke r0.<javassist.compiler.AccessorMaker: java.lang.String findAccessorName(javassist.bytecode.ClassFile)>(r5);

     label2:
        r44 = virtualinvoke r5.<javassist.bytecode.ClassFile: javassist.bytecode.ConstPool getConstPool()>();

        $r16 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        r7 = virtualinvoke $r16.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        r8 = virtualinvoke r1.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        if z0 == 0 goto label3;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")V");

        r45 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r19 = r0.<javassist.compiler.AccessorMaker: javassist.CtClass clazz>;

        $r20 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String of(javassist.CtClass)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")V");

        r45 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r24 = new javassist.bytecode.MethodInfo;

        specialinvoke $r24.<javassist.bytecode.MethodInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String,java.lang.String)>(r44, r6, r45);

        virtualinvoke $r24.<javassist.bytecode.MethodInfo: void setAccessFlags(int)>(8);

        $r25 = new javassist.bytecode.SyntheticAttribute;

        specialinvoke $r25.<javassist.bytecode.SyntheticAttribute: void <init>(javassist.bytecode.ConstPool)>(r44);

        virtualinvoke $r24.<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>($r25);

        $r26 = new javassist.bytecode.Bytecode;

        specialinvoke $r26.<javassist.bytecode.Bytecode: void <init>(javassist.bytecode.ConstPool)>(r44);

        if z0 == 0 goto label5;

        $r32 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass toCtClass(java.lang.String,javassist.ClassPool)>(r8, r7);

        i1 = virtualinvoke $r26.<javassist.bytecode.Bytecode: int addLoad(int,javassist.CtClass)>(0, $r32);

        $r33 = <javassist.bytecode.Bytecode: javassist.CtClass THIS>;

        virtualinvoke $r26.<javassist.bytecode.Bytecode: void addPutstatic(javassist.CtClass,java.lang.String,java.lang.String)>($r33, r2, r8);

        goto label6;

     label5:
        virtualinvoke $r26.<javassist.bytecode.Bytecode: void addAload(int)>(0);

        $r27 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass toCtClass(java.lang.String,javassist.ClassPool)>(r8, r7);

        $i0 = virtualinvoke $r26.<javassist.bytecode.Bytecode: int addLoad(int,javassist.CtClass)>(1, $r27);

        i1 = $i0 + 1;

        $r28 = <javassist.bytecode.Bytecode: javassist.CtClass THIS>;

        virtualinvoke $r26.<javassist.bytecode.Bytecode: void addPutfield(javassist.CtClass,java.lang.String,java.lang.String)>($r28, r2, r8);

     label6:
        virtualinvoke $r26.<javassist.bytecode.Bytecode: void addReturn(javassist.CtClass)>(null);

        virtualinvoke $r26.<javassist.bytecode.Bytecode: void setMaxLocals(int)>(i1);

        $r29 = virtualinvoke $r26.<javassist.bytecode.Bytecode: javassist.bytecode.CodeAttribute toCodeAttribute()>();

        virtualinvoke $r24.<javassist.bytecode.MethodInfo: void setCodeAttribute(javassist.bytecode.CodeAttribute)>($r29);

        virtualinvoke r5.<javassist.bytecode.ClassFile: void addMethod(javassist.bytecode.MethodInfo)>($r24);

        $r30 = r0.<javassist.compiler.AccessorMaker: java.util.Map accessors>;

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r24);

     label7:
        return $r24;

     label8:
        $r42 := @caughtexception;

        $r43 = new javassist.compiler.CompileError;

        specialinvoke $r43.<javassist.compiler.CompileError: void <init>(javassist.CannotCompileException)>($r42);

        throw $r43;

     label9:
        $r40 := @caughtexception;

        $r41 = new javassist.compiler.CompileError;

        specialinvoke $r41.<javassist.compiler.CompileError: void <init>(javassist.NotFoundException)>($r40);

        throw $r41;

        catch javassist.CannotCompileException from label2 to label7 with label8;
        catch javassist.NotFoundException from label2 to label7 with label9;
    }

    private java.lang.String findAccessorName(javassist.bytecode.ClassFile)
    {
        javassist.compiler.AccessorMaker r0;
        javassist.bytecode.ClassFile r1;
        java.lang.String r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        int $i0, $i1;
        javassist.bytecode.MethodInfo $r6;

        r0 := @this: javassist.compiler.AccessorMaker;

        r1 := @parameter0: javassist.bytecode.ClassFile;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("access$");

        $i0 = r0.<javassist.compiler.AccessorMaker: int uniqueNumber>;

        $i1 = $i0 + 1;

        r0.<javassist.compiler.AccessorMaker: int uniqueNumber> = $i1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r1.<javassist.bytecode.ClassFile: javassist.bytecode.MethodInfo getMethod(java.lang.String)>(r2);

        if $r6 != null goto label1;

        return r2;
    }

    public static void <clinit>()
    {
        <javassist.compiler.AccessorMaker: java.lang.String lastParamType> = "javassist.runtime.Inner";

        return;
    }
}
