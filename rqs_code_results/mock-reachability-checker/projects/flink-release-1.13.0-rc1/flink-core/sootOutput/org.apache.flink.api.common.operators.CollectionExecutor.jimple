public class org.apache.flink.api.common.operators.CollectionExecutor extends java.lang.Object
{
    private final java.util.Map intermediateResults;
    private final java.util.Map accumulators;
    private final java.util.Map cachedFiles;
    private final java.util.Map previousAggregates;
    private final java.util.Map aggregators;
    private final java.lang.ClassLoader userCodeClassLoader;
    private final org.apache.flink.api.common.ExecutionConfig executionConfig;
    private int iterationSuperstep;

    public void <init>(org.apache.flink.api.common.ExecutionConfig)
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        org.apache.flink.api.common.ExecutionConfig r1;
        java.util.HashMap $r2, $r3, $r4, $r5, $r6;
        java.lang.Thread $r7;
        java.lang.ClassLoader $r8;

        r0 := @this: org.apache.flink.api.common.operators.CollectionExecutor;

        r1 := @parameter0: org.apache.flink.api.common.ExecutionConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map intermediateResults> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map accumulators> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map previousAggregates> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map aggregators> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map cachedFiles> = $r6;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r8 = virtualinvoke $r7.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.lang.ClassLoader userCodeClassLoader> = $r8;

        return;
    }

    public org.apache.flink.api.common.JobExecutionResult execute(org.apache.flink.api.common.Plan) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        org.apache.flink.api.common.Plan r1;
        long l0, $l1, l2;
        org.apache.flink.api.common.JobID r2, $r6, $r12;
        java.util.Collection r3;
        org.apache.flink.api.common.operators.Operator r4;
        java.util.Map r5, $r8;
        java.util.Set $r7;
        org.apache.flink.api.common.JobExecutionResult $r9;
        java.lang.Object $r10;
        java.util.Iterator r13;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.operators.CollectionExecutor;

        r1 := @parameter0: org.apache.flink.api.common.Plan;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = virtualinvoke r1.<org.apache.flink.api.common.Plan: org.apache.flink.api.common.JobID getJobId()>();

        if $r6 != null goto label1;

        $r12 = new org.apache.flink.api.common.JobID;

        specialinvoke $r12.<org.apache.flink.api.common.JobID: void <init>()>();

        goto label2;

     label1:
        $r12 = virtualinvoke r1.<org.apache.flink.api.common.Plan: org.apache.flink.api.common.JobID getJobId()>();

     label2:
        r2 = $r12;

        $r7 = virtualinvoke r1.<org.apache.flink.api.common.Plan: java.util.Set getCachedFiles()>();

        specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: void initCache(java.util.Set)>($r7);

        r3 = virtualinvoke r1.<org.apache.flink.api.common.Plan: java.util.Collection getDataSinks()>();

        r13 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.flink.api.common.operators.Operator) $r10;

        specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,org.apache.flink.api.common.JobID)>(r4, r2);

        goto label3;

     label4:
        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r8 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map accumulators>;

        r5 = staticinvoke <org.apache.flink.api.common.accumulators.AccumulatorHelper: java.util.Map toResultMap(java.util.Map)>($r8);

        $r9 = new org.apache.flink.api.common.JobExecutionResult;

        $l1 = l2 - l0;

        specialinvoke $r9.<org.apache.flink.api.common.JobExecutionResult: void <init>(org.apache.flink.api.common.JobID,long,java.util.Map)>(null, $l1, r5);

        return $r9;
    }

    private void initCache(java.util.Set)
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        java.util.Set r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        boolean $z0;
        java.lang.Object $r5, $r8, $r12;
        org.apache.flink.api.common.operators.CollectionExecutor$CompletedFuture $r6;
        org.apache.flink.core.fs.Path $r7;
        org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry $r9;
        java.lang.String $r10;
        java.util.Map $r11;

        r0 := @this: org.apache.flink.api.common.operators.CollectionExecutor;

        r1 := @parameter0: java.util.Set;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = new org.apache.flink.api.common.operators.CollectionExecutor$CompletedFuture;

        $r7 = new org.apache.flink.core.fs.Path;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry) $r8;

        $r10 = $r9.<org.apache.flink.api.common.cache.DistributedCache$DistributedCacheEntry: java.lang.String filePath>;

        specialinvoke $r7.<org.apache.flink.core.fs.Path: void <init>(java.lang.String)>($r10);

        specialinvoke $r6.<org.apache.flink.api.common.operators.CollectionExecutor$CompletedFuture: void <init>(org.apache.flink.core.fs.Path)>($r7);

        $r11 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map cachedFiles>;

        $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r6);

        goto label1;

     label2:
        return;
    }

    private java.util.List execute(org.apache.flink.api.common.operators.Operator, org.apache.flink.api.common.JobID) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        org.apache.flink.api.common.operators.Operator r1;
        org.apache.flink.api.common.JobID r2;
        java.util.List $r3;

        r0 := @this: org.apache.flink.api.common.operators.CollectionExecutor;

        r1 := @parameter0: org.apache.flink.api.common.operators.Operator;

        r2 := @parameter1: org.apache.flink.api.common.JobID;

        $r3 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,int,org.apache.flink.api.common.JobID)>(r1, 0, r2);

        return $r3;
    }

    private java.util.List execute(org.apache.flink.api.common.operators.Operator, int, org.apache.flink.api.common.JobID) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        org.apache.flink.api.common.operators.Operator r1;
        int i0;
        org.apache.flink.api.common.JobID r2;
        java.util.Map $r3, $r21;
        java.lang.Object $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6, $r7, $r10;
        java.lang.Class $r8;
        java.lang.String $r9, $r11;
        org.apache.flink.api.common.operators.GenericDataSinkBase $r12;
        org.apache.flink.api.common.operators.GenericDataSourceBase $r14;
        org.apache.flink.api.common.operators.DualInputOperator $r15;
        org.apache.flink.api.common.operators.SingleInputOperator $r16;
        org.apache.flink.api.common.operators.base.DeltaIterationBase $r17;
        org.apache.flink.api.common.operators.base.BulkIterationBase $r18;
        java.util.List r19, r20;

        r0 := @this: org.apache.flink.api.common.operators.CollectionExecutor;

        r1 := @parameter0: org.apache.flink.api.common.operators.Operator;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.api.common.JobID;

        $r3 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map intermediateResults>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r19 = (java.util.List) $r4;

        if r19 == null goto label1;

        return r19;

     label1:
        $z0 = r1 instanceof org.apache.flink.api.common.operators.base.BulkIterationBase;

        if $z0 == 0 goto label2;

        $r18 = (org.apache.flink.api.common.operators.base.BulkIterationBase) r1;

        r20 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List executeBulkIteration(org.apache.flink.api.common.operators.base.BulkIterationBase,org.apache.flink.api.common.JobID)>($r18, r2);

        goto label8;

     label2:
        $z1 = r1 instanceof org.apache.flink.api.common.operators.base.DeltaIterationBase;

        if $z1 == 0 goto label3;

        $r17 = (org.apache.flink.api.common.operators.base.DeltaIterationBase) r1;

        r20 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List executeDeltaIteration(org.apache.flink.api.common.operators.base.DeltaIterationBase,org.apache.flink.api.common.JobID)>($r17, r2);

        goto label8;

     label3:
        $z2 = r1 instanceof org.apache.flink.api.common.operators.SingleInputOperator;

        if $z2 == 0 goto label4;

        $r16 = (org.apache.flink.api.common.operators.SingleInputOperator) r1;

        r20 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List executeUnaryOperator(org.apache.flink.api.common.operators.SingleInputOperator,int,org.apache.flink.api.common.JobID)>($r16, i0, r2);

        goto label8;

     label4:
        $z3 = r1 instanceof org.apache.flink.api.common.operators.DualInputOperator;

        if $z3 == 0 goto label5;

        $r15 = (org.apache.flink.api.common.operators.DualInputOperator) r1;

        r20 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List executeBinaryOperator(org.apache.flink.api.common.operators.DualInputOperator,int,org.apache.flink.api.common.JobID)>($r15, i0, r2);

        goto label8;

     label5:
        $z4 = r1 instanceof org.apache.flink.api.common.operators.GenericDataSourceBase;

        if $z4 == 0 goto label6;

        $r14 = (org.apache.flink.api.common.operators.GenericDataSourceBase) r1;

        r20 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List executeDataSource(org.apache.flink.api.common.operators.GenericDataSourceBase,int,org.apache.flink.api.common.JobID)>($r14, i0, r2);

        goto label8;

     label6:
        $z5 = r1 instanceof org.apache.flink.api.common.operators.GenericDataSinkBase;

        if $z5 == 0 goto label7;

        $r12 = (org.apache.flink.api.common.operators.GenericDataSinkBase) r1;

        specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: void executeDataSink(org.apache.flink.api.common.operators.GenericDataSinkBase,int,org.apache.flink.api.common.JobID)>($r12, i0, r2);

        r20 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label8;

     label7:
        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot execute operator ");

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label8:
        $r21 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map intermediateResults>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r20);

        return r20;
    }

    private void executeDataSink(org.apache.flink.api.common.operators.GenericDataSinkBase, int, org.apache.flink.api.common.JobID) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        org.apache.flink.api.common.operators.GenericDataSinkBase r1;
        int i0;
        org.apache.flink.api.common.JobID r2;
        org.apache.flink.api.common.operators.Operator r3;
        java.util.List r4;
        java.lang.String $r9, $r26, $r29;
        java.lang.Class $r11, $r13;
        org.apache.flink.api.common.operators.util.UserCodeWrapper $r12;
        boolean $z0;
        org.apache.flink.api.common.ExecutionConfig $r14, $r17, $r21;
        java.util.Map $r15, $r16, $r19, $r20;
        java.lang.ClassLoader $r18, $r22;
        java.lang.StringBuilder $r25, $r27, $r28, r32;
        org.apache.flink.api.common.functions.util.RuntimeUDFContext $r30, r31, r36;
        org.apache.flink.api.common.InvalidProgramException r33;
        org.apache.flink.api.common.TaskInfo r34;
        org.apache.flink.metrics.groups.UnregisteredMetricsGroup r35;
        org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext r37;

        r0 := @this: org.apache.flink.api.common.operators.CollectionExecutor;

        r1 := @parameter0: org.apache.flink.api.common.operators.GenericDataSinkBase;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.api.common.JobID;

        r3 = virtualinvoke r1.<org.apache.flink.api.common.operators.GenericDataSinkBase: org.apache.flink.api.common.operators.Operator getInput()>();

        if r3 != null goto label1;

        r33 = new org.apache.flink.api.common.InvalidProgramException;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The data sink ");

        $r26 = virtualinvoke r1.<org.apache.flink.api.common.operators.GenericDataSinkBase: java.lang.String getName()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no input.");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r33.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>($r29);

        throw r33;

     label1:
        r4 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,org.apache.flink.api.common.JobID)>(r3, r2);

        r34 = new org.apache.flink.api.common.TaskInfo;

        $r9 = virtualinvoke r1.<org.apache.flink.api.common.operators.GenericDataSinkBase: java.lang.String getName()>();

        specialinvoke r34.<org.apache.flink.api.common.TaskInfo: void <init>(java.lang.String,int,int,int,int)>($r9, 1, 0, 1, 0);

        r35 = new org.apache.flink.metrics.groups.UnregisteredMetricsGroup;

        specialinvoke r35.<org.apache.flink.metrics.groups.UnregisteredMetricsGroup: void <init>()>();

        $r11 = class "Lorg/apache/flink/api/common/io/RichOutputFormat;";

        $r12 = virtualinvoke r1.<org.apache.flink.api.common.operators.GenericDataSinkBase: org.apache.flink.api.common.operators.util.UserCodeWrapper getUserCodeWrapper()>();

        $r13 = interfaceinvoke $r12.<org.apache.flink.api.common.operators.util.UserCodeWrapper: java.lang.Class getUserCodeClass()>();

        $z0 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r13);

        if $z0 == 0 goto label4;

        if i0 != 0 goto label2;

        r36 = new org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        $r30 = r36;

        $r22 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.lang.ClassLoader userCodeClassLoader>;

        $r21 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        $r20 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map cachedFiles>;

        $r19 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map accumulators>;

        specialinvoke r36.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: void <init>(org.apache.flink.api.common.TaskInfo,java.lang.ClassLoader,org.apache.flink.api.common.ExecutionConfig,java.util.Map,java.util.Map,org.apache.flink.metrics.MetricGroup,org.apache.flink.api.common.JobID)>(r34, $r22, $r21, $r20, $r19, r35, r2);

        goto label3;

     label2:
        r37 = new org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext;

        $r30 = r37;

        $r18 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.lang.ClassLoader userCodeClassLoader>;

        $r17 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        $r16 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map cachedFiles>;

        $r15 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map accumulators>;

        specialinvoke r37.<org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext: void <init>(org.apache.flink.api.common.operators.CollectionExecutor,org.apache.flink.api.common.TaskInfo,java.lang.ClassLoader,org.apache.flink.api.common.ExecutionConfig,java.util.Map,java.util.Map,org.apache.flink.metrics.MetricGroup,org.apache.flink.api.common.JobID)>(r0, r34, $r18, $r17, $r16, $r15, r35, r2);

     label3:
        r31 = $r30;

        goto label5;

     label4:
        r31 = null;

     label5:
        $r14 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        virtualinvoke r1.<org.apache.flink.api.common.operators.GenericDataSinkBase: void executeOnCollections(java.util.List,org.apache.flink.api.common.functions.RuntimeContext,org.apache.flink.api.common.ExecutionConfig)>(r4, r31, $r14);

        return;
    }

    private java.util.List executeDataSource(org.apache.flink.api.common.operators.GenericDataSourceBase, int, org.apache.flink.api.common.JobID) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        org.apache.flink.api.common.operators.GenericDataSourceBase r1;
        int i0;
        org.apache.flink.api.common.JobID r2;
        java.lang.String $r7;
        java.lang.Class $r9, $r11;
        org.apache.flink.api.common.operators.util.UserCodeWrapper $r10;
        boolean $z0;
        org.apache.flink.api.common.ExecutionConfig $r12, $r16, $r20;
        java.util.List $r13;
        java.util.Map $r14, $r15, $r18, $r19;
        java.lang.ClassLoader $r17, $r21;
        org.apache.flink.api.common.functions.util.RuntimeUDFContext $r22, r23, r26;
        org.apache.flink.api.common.TaskInfo r24;
        org.apache.flink.metrics.groups.UnregisteredMetricsGroup r25;
        org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext r27;

        r0 := @this: org.apache.flink.api.common.operators.CollectionExecutor;

        r1 := @parameter0: org.apache.flink.api.common.operators.GenericDataSourceBase;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.api.common.JobID;

        r24 = new org.apache.flink.api.common.TaskInfo;

        $r7 = virtualinvoke r1.<org.apache.flink.api.common.operators.GenericDataSourceBase: java.lang.String getName()>();

        specialinvoke r24.<org.apache.flink.api.common.TaskInfo: void <init>(java.lang.String,int,int,int,int)>($r7, 1, 0, 1, 0);

        r25 = new org.apache.flink.metrics.groups.UnregisteredMetricsGroup;

        specialinvoke r25.<org.apache.flink.metrics.groups.UnregisteredMetricsGroup: void <init>()>();

        $r9 = class "Lorg/apache/flink/api/common/io/RichInputFormat;";

        $r10 = virtualinvoke r1.<org.apache.flink.api.common.operators.GenericDataSourceBase: org.apache.flink.api.common.operators.util.UserCodeWrapper getUserCodeWrapper()>();

        $r11 = interfaceinvoke $r10.<org.apache.flink.api.common.operators.util.UserCodeWrapper: java.lang.Class getUserCodeClass()>();

        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r11);

        if $z0 == 0 goto label3;

        if i0 != 0 goto label1;

        r26 = new org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        $r22 = r26;

        $r21 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.lang.ClassLoader userCodeClassLoader>;

        $r20 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        $r19 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map cachedFiles>;

        $r18 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map accumulators>;

        specialinvoke r26.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: void <init>(org.apache.flink.api.common.TaskInfo,java.lang.ClassLoader,org.apache.flink.api.common.ExecutionConfig,java.util.Map,java.util.Map,org.apache.flink.metrics.MetricGroup,org.apache.flink.api.common.JobID)>(r24, $r21, $r20, $r19, $r18, r25, r2);

        goto label2;

     label1:
        r27 = new org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext;

        $r22 = r27;

        $r17 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.lang.ClassLoader userCodeClassLoader>;

        $r16 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        $r15 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map cachedFiles>;

        $r14 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map accumulators>;

        specialinvoke r27.<org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext: void <init>(org.apache.flink.api.common.operators.CollectionExecutor,org.apache.flink.api.common.TaskInfo,java.lang.ClassLoader,org.apache.flink.api.common.ExecutionConfig,java.util.Map,java.util.Map,org.apache.flink.metrics.MetricGroup,org.apache.flink.api.common.JobID)>(r0, r24, $r17, $r16, $r15, $r14, r25, r2);

     label2:
        r23 = $r22;

        goto label4;

     label3:
        r23 = null;

     label4:
        $r12 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        $r13 = virtualinvoke r1.<org.apache.flink.api.common.operators.GenericDataSourceBase: java.util.List executeOnCollections(org.apache.flink.api.common.functions.RuntimeContext,org.apache.flink.api.common.ExecutionConfig)>(r23, $r12);

        return $r13;
    }

    private java.util.List executeUnaryOperator(org.apache.flink.api.common.operators.SingleInputOperator, int, org.apache.flink.api.common.JobID) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        org.apache.flink.api.common.operators.SingleInputOperator r1;
        int i0;
        org.apache.flink.api.common.JobID r2;
        org.apache.flink.api.common.operators.Operator r3, $r27;
        java.util.List r4, r10, $r18;
        java.util.Iterator r8;
        java.util.Map$Entry r9;
        java.lang.String $r12, $r29, $r37, $r40;
        java.lang.Class $r14, $r16;
        org.apache.flink.api.common.operators.util.UserCodeWrapper $r15;
        boolean $z0, $z1;
        org.apache.flink.api.common.ExecutionConfig $r17, $r21, $r32;
        java.util.Map $r19, $r20, $r23, $r30, $r31;
        java.lang.ClassLoader $r22, $r33;
        java.util.Set $r24;
        java.lang.Object $r25, $r26, $r28;
        java.lang.StringBuilder $r36, $r38, $r39, r43;
        org.apache.flink.api.common.functions.util.RuntimeUDFContext $r41, r42, r47;
        org.apache.flink.api.common.InvalidProgramException r44;
        org.apache.flink.api.common.TaskInfo r45;
        org.apache.flink.metrics.groups.UnregisteredMetricsGroup r46;
        org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext r48;

        r0 := @this: org.apache.flink.api.common.operators.CollectionExecutor;

        r1 := @parameter0: org.apache.flink.api.common.operators.SingleInputOperator;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.api.common.JobID;

        r3 = virtualinvoke r1.<org.apache.flink.api.common.operators.SingleInputOperator: org.apache.flink.api.common.operators.Operator getInput()>();

        if r3 != null goto label1;

        r44 = new org.apache.flink.api.common.InvalidProgramException;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The unary operation ");

        $r37 = virtualinvoke r1.<org.apache.flink.api.common.operators.SingleInputOperator: java.lang.String getName()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no input.");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r44.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>($r40);

        throw r44;

     label1:
        r4 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,int,org.apache.flink.api.common.JobID)>(r3, i0, r2);

        r45 = new org.apache.flink.api.common.TaskInfo;

        $r12 = virtualinvoke r1.<org.apache.flink.api.common.operators.SingleInputOperator: java.lang.String getName()>();

        specialinvoke r45.<org.apache.flink.api.common.TaskInfo: void <init>(java.lang.String,int,int,int,int)>($r12, 1, 0, 1, 0);

        r46 = new org.apache.flink.metrics.groups.UnregisteredMetricsGroup;

        specialinvoke r46.<org.apache.flink.metrics.groups.UnregisteredMetricsGroup: void <init>()>();

        $r14 = class "Lorg/apache/flink/api/common/functions/RichFunction;";

        $r15 = virtualinvoke r1.<org.apache.flink.api.common.operators.SingleInputOperator: org.apache.flink.api.common.operators.util.UserCodeWrapper getUserCodeWrapper()>();

        $r16 = interfaceinvoke $r15.<org.apache.flink.api.common.operators.util.UserCodeWrapper: java.lang.Class getUserCodeClass()>();

        $z0 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r16);

        if $z0 == 0 goto label6;

        if i0 != 0 goto label2;

        r47 = new org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        $r41 = r47;

        $r33 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.lang.ClassLoader userCodeClassLoader>;

        $r32 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        $r31 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map cachedFiles>;

        $r30 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map accumulators>;

        specialinvoke r47.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: void <init>(org.apache.flink.api.common.TaskInfo,java.lang.ClassLoader,org.apache.flink.api.common.ExecutionConfig,java.util.Map,java.util.Map,org.apache.flink.metrics.MetricGroup,org.apache.flink.api.common.JobID)>(r45, $r33, $r32, $r31, $r30, r46, r2);

        goto label3;

     label2:
        r48 = new org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext;

        $r41 = r48;

        $r22 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.lang.ClassLoader userCodeClassLoader>;

        $r21 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        $r20 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map cachedFiles>;

        $r19 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map accumulators>;

        specialinvoke r48.<org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext: void <init>(org.apache.flink.api.common.operators.CollectionExecutor,org.apache.flink.api.common.TaskInfo,java.lang.ClassLoader,org.apache.flink.api.common.ExecutionConfig,java.util.Map,java.util.Map,org.apache.flink.metrics.MetricGroup,org.apache.flink.api.common.JobID)>(r0, r45, $r22, $r21, $r20, $r19, r46, r2);

     label3:
        r42 = $r41;

        $r23 = virtualinvoke r1.<org.apache.flink.api.common.operators.SingleInputOperator: java.util.Map getBroadcastInputs()>();

        $r24 = interfaceinvoke $r23.<java.util.Map: java.util.Set entrySet()>();

        r8 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r25 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r25;

        $r26 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r27 = (org.apache.flink.api.common.operators.Operator) $r26;

        r10 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,org.apache.flink.api.common.JobID)>($r27, r2);

        $r28 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r29 = (java.lang.String) $r28;

        virtualinvoke r42.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: void setBroadcastVariable(java.lang.String,java.util.List)>($r29, r10);

        goto label4;

     label5:
        goto label7;

     label6:
        r42 = null;

     label7:
        $r17 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        $r18 = virtualinvoke r1.<org.apache.flink.api.common.operators.SingleInputOperator: java.util.List executeOnCollections(java.util.List,org.apache.flink.api.common.functions.RuntimeContext,org.apache.flink.api.common.ExecutionConfig)>(r4, r42, $r17);

        return $r18;
    }

    private java.util.List executeBinaryOperator(org.apache.flink.api.common.operators.DualInputOperator, int, org.apache.flink.api.common.JobID) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        org.apache.flink.api.common.operators.DualInputOperator r1;
        int i0;
        org.apache.flink.api.common.JobID r2;
        org.apache.flink.api.common.operators.Operator r3, r4, $r29;
        java.util.List r5, r6, r12, $r20;
        java.util.Iterator r10;
        java.util.Map$Entry r11;
        java.lang.String $r14, $r31, $r39, $r42, $r46, $r49;
        java.lang.Class $r16, $r18;
        org.apache.flink.api.common.operators.util.UserCodeWrapper $r17;
        boolean $z0, $z1;
        org.apache.flink.api.common.ExecutionConfig $r19, $r23, $r34;
        java.util.Map $r21, $r22, $r25, $r32, $r33;
        java.lang.ClassLoader $r24, $r35;
        java.util.Set $r26;
        java.lang.Object $r27, $r28, $r30;
        java.lang.StringBuilder $r38, $r40, $r41, $r45, $r47, $r48, r52, r54;
        org.apache.flink.api.common.functions.util.RuntimeUDFContext $r50, r51, r58;
        org.apache.flink.api.common.InvalidProgramException r53, r55;
        org.apache.flink.api.common.TaskInfo r56;
        org.apache.flink.metrics.groups.UnregisteredMetricsGroup r57;
        org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext r59;

        r0 := @this: org.apache.flink.api.common.operators.CollectionExecutor;

        r1 := @parameter0: org.apache.flink.api.common.operators.DualInputOperator;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.api.common.JobID;

        r3 = virtualinvoke r1.<org.apache.flink.api.common.operators.DualInputOperator: org.apache.flink.api.common.operators.Operator getFirstInput()>();

        r4 = virtualinvoke r1.<org.apache.flink.api.common.operators.DualInputOperator: org.apache.flink.api.common.operators.Operator getSecondInput()>();

        if r3 != null goto label1;

        r53 = new org.apache.flink.api.common.InvalidProgramException;

        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The binary operation ");

        $r46 = virtualinvoke r1.<org.apache.flink.api.common.operators.DualInputOperator: java.lang.String getName()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no first input.");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r53.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>($r49);

        throw r53;

     label1:
        if r4 != null goto label2;

        r55 = new org.apache.flink.api.common.InvalidProgramException;

        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The binary operation ");

        $r39 = virtualinvoke r1.<org.apache.flink.api.common.operators.DualInputOperator: java.lang.String getName()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no second input.");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r55.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>($r42);

        throw r55;

     label2:
        r5 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,int,org.apache.flink.api.common.JobID)>(r3, i0, r2);

        r6 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,int,org.apache.flink.api.common.JobID)>(r4, i0, r2);

        r56 = new org.apache.flink.api.common.TaskInfo;

        $r14 = virtualinvoke r1.<org.apache.flink.api.common.operators.DualInputOperator: java.lang.String getName()>();

        specialinvoke r56.<org.apache.flink.api.common.TaskInfo: void <init>(java.lang.String,int,int,int,int)>($r14, 1, 0, 1, 0);

        r57 = new org.apache.flink.metrics.groups.UnregisteredMetricsGroup;

        specialinvoke r57.<org.apache.flink.metrics.groups.UnregisteredMetricsGroup: void <init>()>();

        $r16 = class "Lorg/apache/flink/api/common/functions/RichFunction;";

        $r17 = virtualinvoke r1.<org.apache.flink.api.common.operators.DualInputOperator: org.apache.flink.api.common.operators.util.UserCodeWrapper getUserCodeWrapper()>();

        $r18 = interfaceinvoke $r17.<org.apache.flink.api.common.operators.util.UserCodeWrapper: java.lang.Class getUserCodeClass()>();

        $z0 = virtualinvoke $r16.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r18);

        if $z0 == 0 goto label7;

        if i0 != 0 goto label3;

        r58 = new org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        $r50 = r58;

        $r35 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.lang.ClassLoader userCodeClassLoader>;

        $r34 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        $r33 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map cachedFiles>;

        $r32 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map accumulators>;

        specialinvoke r58.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: void <init>(org.apache.flink.api.common.TaskInfo,java.lang.ClassLoader,org.apache.flink.api.common.ExecutionConfig,java.util.Map,java.util.Map,org.apache.flink.metrics.MetricGroup,org.apache.flink.api.common.JobID)>(r56, $r35, $r34, $r33, $r32, r57, r2);

        goto label4;

     label3:
        r59 = new org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext;

        $r50 = r59;

        $r24 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.lang.ClassLoader userCodeClassLoader>;

        $r23 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        $r22 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map cachedFiles>;

        $r21 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map accumulators>;

        specialinvoke r59.<org.apache.flink.api.common.operators.CollectionExecutor$IterationRuntimeUDFContext: void <init>(org.apache.flink.api.common.operators.CollectionExecutor,org.apache.flink.api.common.TaskInfo,java.lang.ClassLoader,org.apache.flink.api.common.ExecutionConfig,java.util.Map,java.util.Map,org.apache.flink.metrics.MetricGroup,org.apache.flink.api.common.JobID)>(r0, r56, $r24, $r23, $r22, $r21, r57, r2);

     label4:
        r51 = $r50;

        $r25 = virtualinvoke r1.<org.apache.flink.api.common.operators.DualInputOperator: java.util.Map getBroadcastInputs()>();

        $r26 = interfaceinvoke $r25.<java.util.Map: java.util.Set entrySet()>();

        r10 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r27 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r27;

        $r28 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r29 = (org.apache.flink.api.common.operators.Operator) $r28;

        r12 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,org.apache.flink.api.common.JobID)>($r29, r2);

        $r30 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = (java.lang.String) $r30;

        virtualinvoke r51.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: void setBroadcastVariable(java.lang.String,java.util.List)>($r31, r12);

        goto label5;

     label6:
        goto label8;

     label7:
        r51 = null;

     label8:
        $r19 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        $r20 = virtualinvoke r1.<org.apache.flink.api.common.operators.DualInputOperator: java.util.List executeOnCollections(java.util.List,java.util.List,org.apache.flink.api.common.functions.RuntimeContext,org.apache.flink.api.common.ExecutionConfig)>(r5, r6, r51, $r19);

        return $r20;
    }

    private java.util.List executeBulkIteration(org.apache.flink.api.common.operators.base.BulkIterationBase, org.apache.flink.api.common.JobID) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        org.apache.flink.api.common.operators.base.BulkIterationBase r1;
        org.apache.flink.api.common.JobID r2;
        org.apache.flink.api.common.operators.Operator r3, $r7, $r10, $r11, $r19, $r21, $r22, $r40, $r47, r69;
        java.util.List r4, r66;
        int i0, i1;
        java.util.LinkedHashSet $r8;
        org.apache.flink.api.common.operators.CollectionExecutor$DynamicPathCollector $r9;
        org.apache.flink.api.common.aggregators.AggregatorRegistry $r12, $r14, $r15;
        java.util.Collection $r13;
        java.util.Map $r16, $r17, $r18, $r23, $r26, $r35, $r37, $r43;
        java.util.Set $r24;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r25, $r27, $r28, $r32, $r34, $r38, $r42;
        org.apache.flink.api.common.aggregators.Aggregator $r29, $r33, $r39, $r45;
        org.apache.flink.types.Value $r30, r67;
        java.lang.String $r44, $r51, $r54, $r58, $r61, r64;
        org.apache.flink.api.common.InvalidProgramException $r48, $r55;
        java.lang.StringBuilder $r49, $r50, $r52, $r53, $r56, $r57, $r59, $r60;
        java.util.Iterator r62, r68, r70;
        org.apache.flink.api.common.aggregators.AggregatorWithName r63;
        org.apache.flink.api.common.aggregators.ConvergenceCriterion r65;
        java.util.Map$Entry r71;

        r0 := @this: org.apache.flink.api.common.operators.CollectionExecutor;

        r1 := @parameter0: org.apache.flink.api.common.operators.base.BulkIterationBase;

        r2 := @parameter1: org.apache.flink.api.common.JobID;

        r3 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator getInput()>();

        if r3 != null goto label01;

        $r55 = new org.apache.flink.api.common.InvalidProgramException;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The iteration ");

        $r58 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: java.lang.String getName()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no input (initial partial solution).");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>($r61);

        throw $r55;

     label01:
        $r7 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator getNextPartialSolution()>();

        if $r7 != null goto label02;

        $r48 = new org.apache.flink.api.common.InvalidProgramException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The iteration ");

        $r51 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: java.lang.String getName()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no next partial solution defined (is not closed).");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>($r54);

        throw $r48;

     label02:
        r4 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,org.apache.flink.api.common.JobID)>(r3, r2);

        $r8 = new java.util.LinkedHashSet;

        specialinvoke $r8.<java.util.LinkedHashSet: void <init>()>();

        $r9 = new org.apache.flink.api.common.operators.CollectionExecutor$DynamicPathCollector;

        specialinvoke $r9.<org.apache.flink.api.common.operators.CollectionExecutor$DynamicPathCollector: void <init>(java.util.Set)>($r8);

        $r10 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator getNextPartialSolution()>();

        virtualinvoke $r10.<org.apache.flink.api.common.operators.Operator: void accept(org.apache.flink.util.Visitor)>($r9);

        $r11 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator getTerminationCriterion()>();

        if $r11 == null goto label03;

        $r47 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator getTerminationCriterion()>();

        virtualinvoke $r47.<org.apache.flink.api.common.operators.Operator: void accept(org.apache.flink.util.Visitor)>($r9);

     label03:
        $r12 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.aggregators.AggregatorRegistry getAggregators()>();

        $r13 = virtualinvoke $r12.<org.apache.flink.api.common.aggregators.AggregatorRegistry: java.util.Collection getAllRegisteredAggregators()>();

        r62 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r42 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>();

        r63 = (org.apache.flink.api.common.aggregators.AggregatorWithName) $r42;

        $r43 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map aggregators>;

        $r44 = virtualinvoke r63.<org.apache.flink.api.common.aggregators.AggregatorWithName: java.lang.String getName()>();

        $r45 = virtualinvoke r63.<org.apache.flink.api.common.aggregators.AggregatorWithName: org.apache.flink.api.common.aggregators.Aggregator getAggregator()>();

        interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, $r45);

        goto label04;

     label05:
        $r14 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.aggregators.AggregatorRegistry getAggregators()>();

        r64 = virtualinvoke $r14.<org.apache.flink.api.common.aggregators.AggregatorRegistry: java.lang.String getConvergenceCriterionAggregatorName()>();

        $r15 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.aggregators.AggregatorRegistry getAggregators()>();

        r65 = virtualinvoke $r15.<org.apache.flink.api.common.aggregators.AggregatorRegistry: org.apache.flink.api.common.aggregators.ConvergenceCriterion getConvergenceCriterion()>();

        r66 = r4;

        i0 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: int getMaximumNumberOfIterations()>();

        i1 = 1;

     label06:
        if i1 > i0 goto label13;

        $r18 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map intermediateResults>;

        $r19 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator getPartialSolution()>();

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r66);

        r0.<org.apache.flink.api.common.operators.CollectionExecutor: int iterationSuperstep> = i1;

        $r21 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator getNextPartialSolution()>();

        r66 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,int,org.apache.flink.api.common.JobID)>($r21, i1, r2);

        $r22 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator getTerminationCriterion()>();

        if $r22 == null goto label07;

        $r40 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.BulkIterationBase: org.apache.flink.api.common.operators.Operator getTerminationCriterion()>();

        specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,int,org.apache.flink.api.common.JobID)>($r40, i1, r2);

     label07:
        if r65 == null goto label08;

        if r64 == null goto label08;

        $r37 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map aggregators>;

        $r38 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>(r64);

        $r39 = (org.apache.flink.api.common.aggregators.Aggregator) $r38;

        r67 = interfaceinvoke $r39.<org.apache.flink.api.common.aggregators.Aggregator: org.apache.flink.types.Value getAggregate()>();

        $z1 = interfaceinvoke r65.<org.apache.flink.api.common.aggregators.ConvergenceCriterion: boolean isConverged(int,org.apache.flink.types.Value)>(i1, r67);

        if $z1 == 0 goto label08;

        goto label13;

     label08:
        r68 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r34 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>();

        r69 = (org.apache.flink.api.common.operators.Operator) $r34;

        $r35 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map intermediateResults>;

        interfaceinvoke $r35.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r69);

        goto label09;

     label10:
        $r23 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map aggregators>;

        $r24 = interfaceinvoke $r23.<java.util.Map: java.util.Set entrySet()>();

        r70 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke r70.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r25 = interfaceinvoke r70.<java.util.Iterator: java.lang.Object next()>();

        r71 = (java.util.Map$Entry) $r25;

        $r26 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map previousAggregates>;

        $r27 = interfaceinvoke r71.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r28 = interfaceinvoke r71.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r29 = (org.apache.flink.api.common.aggregators.Aggregator) $r28;

        $r30 = interfaceinvoke $r29.<org.apache.flink.api.common.aggregators.Aggregator: org.apache.flink.types.Value getAggregate()>();

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r30);

        $r32 = interfaceinvoke r71.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (org.apache.flink.api.common.aggregators.Aggregator) $r32;

        interfaceinvoke $r33.<org.apache.flink.api.common.aggregators.Aggregator: void reset()>();

        goto label11;

     label12:
        i1 = i1 + 1;

        goto label06;

     label13:
        $r16 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map previousAggregates>;

        interfaceinvoke $r16.<java.util.Map: void clear()>();

        $r17 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map aggregators>;

        interfaceinvoke $r17.<java.util.Map: void clear()>();

        return r66;
    }

    private java.util.List executeDeltaIteration(org.apache.flink.api.common.operators.base.DeltaIterationBase, org.apache.flink.api.common.JobID) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        org.apache.flink.api.common.operators.base.DeltaIterationBase r1;
        org.apache.flink.api.common.JobID r2;
        org.apache.flink.api.common.operators.Operator r3, r4, $r18, $r19, $r22, $r23, $r34, $r37, $r39, $r41, $r43, r110;
        java.util.List r5, r6, r16, r101;
        org.apache.flink.api.common.operators.BinaryOperatorInformation r9;
        org.apache.flink.api.common.typeinfo.TypeInformation r10;
        int[] r11;
        boolean[] r12;
        org.apache.flink.api.common.typeutils.TypeComparator r13;
        int i0, $i1, $i2, $i3, i4, $i5;
        java.util.LinkedHashSet $r20;
        org.apache.flink.api.common.operators.CollectionExecutor$DynamicPathCollector $r21;
        org.apache.flink.api.common.ExecutionConfig $r24;
        org.apache.flink.api.common.typeutils.CompositeType $r25;
        java.util.HashMap $r26;
        boolean $z0, $z1, $z4, $z5, $z6, $z7, $z8;
        org.apache.flink.api.common.aggregators.AggregatorRegistry $r27, $r29, $r30;
        java.util.Collection $r28, $r32, $r117;
        java.util.ArrayList $r31, $r115;
        java.util.Map $r33, $r36, $r40, $r44, $r47, $r56, $r58, $r64, $r113, $r114;
        java.util.Set $r45;
        java.lang.Object $r46, $r48, $r49, $r53, $r55, $r59, $r63, r99, r107;
        org.apache.flink.api.common.aggregators.Aggregator $r50, $r54, $r60, $r66;
        org.apache.flink.types.Value $r51, r108;
        org.apache.flink.api.common.operators.util.TypeComparable $r61, $r68;
        java.lang.String $r65, $r73, $r76, $r80, $r83, $r87, $r90, $r94, $r97, r104;
        org.apache.flink.api.common.InvalidProgramException $r70, $r77, $r84, $r91;
        java.lang.StringBuilder $r71, $r72, $r74, $r75, $r78, $r79, $r81, $r82, $r85, $r86, $r88, $r89, $r92, $r93, $r95, $r96;
        java.util.Iterator r98, r102, r106, r109, r111;
        org.apache.flink.api.common.aggregators.AggregatorWithName r103;
        org.apache.flink.api.common.aggregators.ConvergenceCriterion r105;
        java.util.Map$Entry r112;

        r0 := @this: org.apache.flink.api.common.operators.CollectionExecutor;

        r1 := @parameter0: org.apache.flink.api.common.operators.base.DeltaIterationBase;

        r2 := @parameter1: org.apache.flink.api.common.JobID;

        r3 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.Operator getInitialSolutionSet()>();

        r4 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.Operator getInitialWorkset()>();

        if r3 != null goto label01;

        $r91 = new org.apache.flink.api.common.InvalidProgramException;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The delta iteration ");

        $r94 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: java.lang.String getName()>();

        $r95 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no initial solution set.");

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r91.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>($r97);

        throw $r91;

     label01:
        if r4 != null goto label02;

        $r84 = new org.apache.flink.api.common.InvalidProgramException;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The delta iteration ");

        $r87 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: java.lang.String getName()>();

        $r88 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no initial workset.");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r84.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>($r90);

        throw $r84;

     label02:
        $r18 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.Operator getSolutionSetDelta()>();

        if $r18 != null goto label03;

        $r77 = new org.apache.flink.api.common.InvalidProgramException;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The iteration ");

        $r80 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: java.lang.String getName()>();

        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no solution set delta defined (is not closed).");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r77.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>($r83);

        throw $r77;

     label03:
        $r19 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.Operator getNextWorkset()>();

        if $r19 != null goto label04;

        $r70 = new org.apache.flink.api.common.InvalidProgramException;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The iteration ");

        $r73 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: java.lang.String getName()>();

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no workset defined (is not closed).");

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r70.<org.apache.flink.api.common.InvalidProgramException: void <init>(java.lang.String)>($r76);

        throw $r70;

     label04:
        r5 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,org.apache.flink.api.common.JobID)>(r3, r2);

        r6 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,org.apache.flink.api.common.JobID)>(r4, r2);

        $r20 = new java.util.LinkedHashSet;

        specialinvoke $r20.<java.util.LinkedHashSet: void <init>()>();

        $r21 = new org.apache.flink.api.common.operators.CollectionExecutor$DynamicPathCollector;

        specialinvoke $r21.<org.apache.flink.api.common.operators.CollectionExecutor$DynamicPathCollector: void <init>(java.util.Set)>($r20);

        $r22 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.Operator getSolutionSetDelta()>();

        virtualinvoke $r22.<org.apache.flink.api.common.operators.Operator: void accept(org.apache.flink.util.Visitor)>($r21);

        $r23 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.Operator getNextWorkset()>();

        virtualinvoke $r23.<org.apache.flink.api.common.operators.Operator: void accept(org.apache.flink.util.Visitor)>($r21);

        r9 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.BinaryOperatorInformation getOperatorInfo()>();

        r10 = virtualinvoke r9.<org.apache.flink.api.common.operators.BinaryOperatorInformation: org.apache.flink.api.common.typeinfo.TypeInformation getFirstInputType()>();

        r11 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: int[] getSolutionSetKeyFields()>();

        $i1 = lengthof r11;

        r12 = newarray (boolean)[$i1];

        $r25 = (org.apache.flink.api.common.typeutils.CompositeType) r10;

        $r24 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: org.apache.flink.api.common.ExecutionConfig executionConfig>;

        r13 = virtualinvoke $r25.<org.apache.flink.api.common.typeutils.CompositeType: org.apache.flink.api.common.typeutils.TypeComparator createComparator(int[],boolean[],int,org.apache.flink.api.common.ExecutionConfig)>(r11, r12, 0, $r24);

        $r26 = new java.util.HashMap;

        $i2 = interfaceinvoke r5.<java.util.List: int size()>();

        specialinvoke $r26.<java.util.HashMap: void <init>(int)>($i2);

        r98 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        r99 = interfaceinvoke r98.<java.util.Iterator: java.lang.Object next()>();

        $r68 = new org.apache.flink.api.common.operators.util.TypeComparable;

        specialinvoke $r68.<org.apache.flink.api.common.operators.util.TypeComparable: void <init>(java.lang.Object,org.apache.flink.api.common.typeutils.TypeComparator)>(r99, r13);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r68, r99);

        goto label05;

     label06:
        r101 = r6;

        $r27 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.aggregators.AggregatorRegistry getAggregators()>();

        $r28 = virtualinvoke $r27.<org.apache.flink.api.common.aggregators.AggregatorRegistry: java.util.Collection getAllRegisteredAggregators()>();

        r102 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r102.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r63 = interfaceinvoke r102.<java.util.Iterator: java.lang.Object next()>();

        r103 = (org.apache.flink.api.common.aggregators.AggregatorWithName) $r63;

        $r64 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map aggregators>;

        $r65 = virtualinvoke r103.<org.apache.flink.api.common.aggregators.AggregatorWithName: java.lang.String getName()>();

        $r66 = virtualinvoke r103.<org.apache.flink.api.common.aggregators.AggregatorWithName: org.apache.flink.api.common.aggregators.Aggregator getAggregator()>();

        interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r65, $r66);

        goto label07;

     label08:
        $r29 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.aggregators.AggregatorRegistry getAggregators()>();

        r104 = virtualinvoke $r29.<org.apache.flink.api.common.aggregators.AggregatorRegistry: java.lang.String getConvergenceCriterionAggregatorName()>();

        $r30 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.aggregators.AggregatorRegistry getAggregators()>();

        r105 = virtualinvoke $r30.<org.apache.flink.api.common.aggregators.AggregatorRegistry: org.apache.flink.api.common.aggregators.ConvergenceCriterion getConvergenceCriterion()>();

        i0 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: int getMaximumNumberOfIterations()>();

        i4 = 1;

     label09:
        if i4 > i0 goto label18;

        $r31 = new java.util.ArrayList;

        $i3 = interfaceinvoke $r26.<java.util.Map: int size()>();

        specialinvoke $r31.<java.util.ArrayList: void <init>(int)>($i3);

        $r32 = interfaceinvoke $r26.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r31.<java.util.List: boolean addAll(java.util.Collection)>($r32);

        $r33 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map intermediateResults>;

        $r34 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.Operator getSolutionSet()>();

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r31);

        $r36 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map intermediateResults>;

        $r37 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.Operator getWorkset()>();

        interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, r101);

        r0.<org.apache.flink.api.common.operators.CollectionExecutor: int iterationSuperstep> = i4;

        $r39 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.Operator getSolutionSetDelta()>();

        r16 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,int,org.apache.flink.api.common.JobID)>($r39, i4, r2);

        $r40 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map intermediateResults>;

        $r41 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.Operator getSolutionSetDelta()>();

        interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, r16);

        r106 = interfaceinvoke r16.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z4 = interfaceinvoke r106.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        r107 = interfaceinvoke r106.<java.util.Iterator: java.lang.Object next()>();

        $r61 = new org.apache.flink.api.common.operators.util.TypeComparable;

        specialinvoke $r61.<org.apache.flink.api.common.operators.util.TypeComparable: void <init>(java.lang.Object,org.apache.flink.api.common.typeutils.TypeComparator)>(r107, r13);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r61, r107);

        goto label10;

     label11:
        $r43 = virtualinvoke r1.<org.apache.flink.api.common.operators.base.DeltaIterationBase: org.apache.flink.api.common.operators.Operator getNextWorkset()>();

        r101 = specialinvoke r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.List execute(org.apache.flink.api.common.operators.Operator,int,org.apache.flink.api.common.JobID)>($r43, i4, r2);

        $z5 = interfaceinvoke r101.<java.util.List: boolean isEmpty()>();

        if $z5 == 0 goto label12;

        goto label18;

     label12:
        if r105 == null goto label13;

        if r104 == null goto label13;

        $r58 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map aggregators>;

        $r59 = interfaceinvoke $r58.<java.util.Map: java.lang.Object get(java.lang.Object)>(r104);

        $r60 = (org.apache.flink.api.common.aggregators.Aggregator) $r59;

        r108 = interfaceinvoke $r60.<org.apache.flink.api.common.aggregators.Aggregator: org.apache.flink.types.Value getAggregate()>();

        $z7 = interfaceinvoke r105.<org.apache.flink.api.common.aggregators.ConvergenceCriterion: boolean isConverged(int,org.apache.flink.types.Value)>(i4, r108);

        if $z7 == 0 goto label13;

        goto label18;

     label13:
        r109 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z8 = interfaceinvoke r109.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label15;

        $r55 = interfaceinvoke r109.<java.util.Iterator: java.lang.Object next()>();

        r110 = (org.apache.flink.api.common.operators.Operator) $r55;

        $r56 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map intermediateResults>;

        interfaceinvoke $r56.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r110);

        goto label14;

     label15:
        $r44 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map aggregators>;

        $r45 = interfaceinvoke $r44.<java.util.Map: java.util.Set entrySet()>();

        r111 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z6 = interfaceinvoke r111.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label17;

        $r46 = interfaceinvoke r111.<java.util.Iterator: java.lang.Object next()>();

        r112 = (java.util.Map$Entry) $r46;

        $r47 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map previousAggregates>;

        $r48 = interfaceinvoke r112.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r49 = interfaceinvoke r112.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r50 = (org.apache.flink.api.common.aggregators.Aggregator) $r49;

        $r51 = interfaceinvoke $r50.<org.apache.flink.api.common.aggregators.Aggregator: org.apache.flink.types.Value getAggregate()>();

        interfaceinvoke $r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, $r51);

        $r53 = interfaceinvoke r112.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r54 = (org.apache.flink.api.common.aggregators.Aggregator) $r53;

        interfaceinvoke $r54.<org.apache.flink.api.common.aggregators.Aggregator: void reset()>();

        goto label16;

     label17:
        i4 = i4 + 1;

        goto label09;

     label18:
        $r113 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map previousAggregates>;

        interfaceinvoke $r113.<java.util.Map: void clear()>();

        $r114 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map aggregators>;

        interfaceinvoke $r114.<java.util.Map: void clear()>();

        $r115 = new java.util.ArrayList;

        $i5 = interfaceinvoke $r26.<java.util.Map: int size()>();

        specialinvoke $r115.<java.util.ArrayList: void <init>(int)>($i5);

        $r117 = interfaceinvoke $r26.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r115.<java.util.List: boolean addAll(java.util.Collection)>($r117);

        return $r115;
    }

    static int access$000(org.apache.flink.api.common.operators.CollectionExecutor)
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        int $i0;

        r0 := @parameter0: org.apache.flink.api.common.operators.CollectionExecutor;

        $i0 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: int iterationSuperstep>;

        return $i0;
    }

    static java.util.Map access$100(org.apache.flink.api.common.operators.CollectionExecutor)
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.flink.api.common.operators.CollectionExecutor;

        $r1 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map aggregators>;

        return $r1;
    }

    static java.util.Map access$200(org.apache.flink.api.common.operators.CollectionExecutor)
    {
        org.apache.flink.api.common.operators.CollectionExecutor r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.flink.api.common.operators.CollectionExecutor;

        $r1 = r0.<org.apache.flink.api.common.operators.CollectionExecutor: java.util.Map previousAggregates>;

        return $r1;
    }
}
