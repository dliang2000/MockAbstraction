public class org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void putByteNormalizedKey(byte, org.apache.flink.core.memory.MemorySegment, int, int)
    {
        byte b0, $b3, $b5;
        org.apache.flink.core.memory.MemorySegment r0;
        int i1, i2, $i4, i7, i9, i10;
        short s6, s8;

        b0 := @parameter0: byte;

        r0 := @parameter1: org.apache.flink.core.memory.MemorySegment;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i2 != 1 goto label1;

        s6 = b0 & 255;

        i7 = s6 + 128;

        $b5 = (byte) i7;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(i1, $b5);

        goto label4;

     label1:
        if i2 > 0 goto label2;

        goto label4;

     label2:
        s8 = b0 & 255;

        i9 = s8 + 128;

        $b3 = (byte) i9;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(i1, $b3);

        i10 = 1;

     label3:
        if i10 >= i2 goto label4;

        $i4 = i1 + i10;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i4, 0);

        i10 = i10 + 1;

        goto label3;

     label4:
        return;
    }

    public static void putCharNormalizedKey(char, org.apache.flink.core.memory.MemorySegment, int, int)
    {
        char c0, $c3, $c4, $c6, $c10, $c11, $c13, $c14, $c16;
        org.apache.flink.core.memory.MemorySegment r0;
        int i1, i2, $i8, $i9, $i18, i19;
        byte $b5, $b7, $b12, $b15, $b17;

        c0 := @parameter0: char;

        r0 := @parameter1: org.apache.flink.core.memory.MemorySegment;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i2 != 2 goto label1;

        $c13 = c0 >>> 8;

        $c14 = $c13 & 255;

        $b15 = (byte) $c14;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(i1, $b15);

        $i18 = i1 + 1;

        $c16 = c0 & 255;

        $b17 = (byte) $c16;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i18, $b17);

        goto label5;

     label1:
        if i2 > 0 goto label2;

        goto label5;

     label2:
        if i2 != 1 goto label3;

        $c10 = c0 >>> 8;

        $c11 = $c10 & 255;

        $b12 = (byte) $c11;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(i1, $b12);

        goto label5;

     label3:
        $c3 = c0 >>> 8;

        $c4 = $c3 & 255;

        $b5 = (byte) $c4;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(i1, $b5);

        $i8 = i1 + 1;

        $c6 = c0 & 255;

        $b7 = (byte) $c6;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i8, $b7);

        i19 = 2;

     label4:
        if i19 >= i2 goto label5;

        $i9 = i1 + i19;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i9, 0);

        i19 = i19 + 1;

        goto label4;

     label5:
        return;
    }

    public static void putBooleanNormalizedKey(boolean, org.apache.flink.core.memory.MemorySegment, int, int)
    {
        boolean z0, $z1;
        org.apache.flink.core.memory.MemorySegment r0;
        byte $b0;
        int $i1, i3, i4, i5;

        z0 := @parameter0: boolean;

        r0 := @parameter1: org.apache.flink.core.memory.MemorySegment;

        i3 := @parameter2: int;

        i4 := @parameter3: int;

        if i4 <= 0 goto label4;

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(i3, $b0);

        i5 = i3 + 1;

     label3:
        if i4 <= 1 goto label4;

        $i1 = i5;

        i5 = i5 + 1;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i1, 0);

        i4 = i4 + -1;

        goto label3;

     label4:
        return;
    }

    public static void putShortNormalizedKey(short, org.apache.flink.core.memory.MemorySegment, int, int)
    {
        short s0, $s3, $s5, $s9, $s11, $s13, s16, s18, s20;
        org.apache.flink.core.memory.MemorySegment r0;
        int i1, i2, $i7, $i8, $i15, i17, i19, i21, i22;
        byte $b4, $b6, $b10, $b12, $b14;

        s0 := @parameter0: short;

        r0 := @parameter1: org.apache.flink.core.memory.MemorySegment;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i2 != 2 goto label1;

        $s11 = s0 >>> 8;

        s16 = $s11 & 255;

        i17 = s16 + 128;

        $b12 = (byte) i17;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(i1, $b12);

        $i15 = i1 + 1;

        $s13 = s0 & 255;

        $b14 = (byte) $s13;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i15, $b14);

        goto label5;

     label1:
        if i2 > 0 goto label2;

        goto label5;

     label2:
        if i2 != 1 goto label3;

        $s9 = s0 >>> 8;

        s18 = $s9 & 255;

        i19 = s18 + 128;

        $b10 = (byte) i19;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(i1, $b10);

        goto label5;

     label3:
        $s3 = s0 >>> 8;

        s20 = $s3 & 255;

        i21 = s20 + 128;

        $b4 = (byte) i21;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(i1, $b4);

        $i7 = i1 + 1;

        $s5 = s0 & 255;

        $b6 = (byte) $s5;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i7, $b6);

        i22 = 2;

     label4:
        if i22 >= i2 goto label5;

        $i8 = i1 + i22;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i8, 0);

        i22 = i22 + 1;

        goto label4;

     label5:
        return;
    }

    public static void putIntNormalizedKey(int, org.apache.flink.core.memory.MemorySegment, int, int)
    {
        int i0, i1, i2, $i3;
        org.apache.flink.core.memory.MemorySegment r0;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.flink.core.memory.MemorySegment;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = i0 - -2147483648;

        staticinvoke <org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil: void putUnsignedIntegerNormalizedKey(int,org.apache.flink.core.memory.MemorySegment,int,int)>($i3, r0, i1, i2);

        return;
    }

    public static void putUnsignedIntegerNormalizedKey(int, org.apache.flink.core.memory.MemorySegment, int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i7, i8, i9, i10;
        org.apache.flink.core.memory.MemorySegment r0;
        byte $b6;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.flink.core.memory.MemorySegment;

        i1 := @parameter2: int;

        i8 := @parameter3: int;

        if i8 != 4 goto label1;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putIntBigEndian(int,int)>(i1, i0);

        goto label6;

     label1:
        if i8 <= 0 goto label6;

        if i8 >= 4 goto label4;

        i9 = 0;

     label2:
        if i8 <= 0 goto label3;

        $i7 = i1 + i9;

        $i3 = 3 - i9;

        $i4 = $i3 << 3;

        $i5 = i0 >>> $i4;

        $b6 = (byte) $i5;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i7, $b6);

        i8 = i8 + -1;

        i9 = i9 + 1;

        goto label2;

     label3:
        goto label6;

     label4:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putIntBigEndian(int,int)>(i1, i0);

        i10 = 4;

     label5:
        if i10 >= i8 goto label6;

        $i2 = i1 + i10;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i2, 0);

        i10 = i10 + 1;

        goto label5;

     label6:
        return;
    }

    public static void putLongNormalizedKey(long, org.apache.flink.core.memory.MemorySegment, int, int)
    {
        long l0, $l3;
        org.apache.flink.core.memory.MemorySegment r0;
        int i1, i2;

        l0 := @parameter0: long;

        r0 := @parameter1: org.apache.flink.core.memory.MemorySegment;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $l3 = l0 - -9223372036854775808L;

        staticinvoke <org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil: void putUnsignedLongNormalizedKey(long,org.apache.flink.core.memory.MemorySegment,int,int)>($l3, r0, i1, i2);

        return;
    }

    public static void putUnsignedLongNormalizedKey(long, org.apache.flink.core.memory.MemorySegment, int, int)
    {
        long l0, $l5;
        org.apache.flink.core.memory.MemorySegment r0;
        int i1, $i2, $i3, $i4, $i6, $i8, i9, i10, i11;
        byte $b7;

        l0 := @parameter0: long;

        r0 := @parameter1: org.apache.flink.core.memory.MemorySegment;

        i1 := @parameter2: int;

        i9 := @parameter3: int;

        if i9 != 8 goto label1;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putLongBigEndian(int,long)>(i1, l0);

        goto label6;

     label1:
        if i9 <= 0 goto label6;

        if i9 >= 8 goto label4;

        i10 = 0;

     label2:
        if i9 <= 0 goto label3;

        $i8 = i1 + i10;

        $i3 = 7 - i10;

        $i4 = $i3 << 3;

        $l5 = l0 >>> $i4;

        $i6 = (int) $l5;

        $b7 = (byte) $i6;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i8, $b7);

        i9 = i9 + -1;

        i10 = i10 + 1;

        goto label2;

     label3:
        goto label6;

     label4:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putLongBigEndian(int,long)>(i1, l0);

        i11 = 8;

     label5:
        if i11 >= i9 goto label6;

        $i2 = i1 + i11;

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>($i2, 0);

        i11 = i11 + 1;

        goto label5;

     label6:
        return;
    }
}
