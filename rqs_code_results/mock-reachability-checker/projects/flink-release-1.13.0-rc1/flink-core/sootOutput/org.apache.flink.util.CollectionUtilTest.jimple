public class org.apache.flink.util.CollectionUtilTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.util.CollectionUtilTest r0;

        r0 := @this: org.apache.flink.util.CollectionUtilTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testPartition()
    {
        org.apache.flink.util.CollectionUtilTest r0;
        java.util.List r1, r4;
        java.util.Collection r2;
        java.util.Iterator r3;
        java.lang.Integer[] $r5;
        java.lang.Integer $r6, $r7, $r8, $r9;
        int $i0, $i2;
        long $l1, $l3;
        boolean $z0;
        java.lang.Object $r10;

        r0 := @this: org.apache.flink.util.CollectionUtilTest;

        $r5 = newarray (java.lang.Integer)[4];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r5[1] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r5[2] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r5[3] = $r9;

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        r2 = staticinvoke <org.apache.flink.util.CollectionUtil: java.util.Collection partition(java.util.Collection,int)>(r1, 4);

        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("List partitioned into the an incorrect number of partitions", 4L, $l1);

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.List) $r10;

        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("Unexpected number of elements in partition", 1L, $l3);

        goto label1;

     label2:
        return;
    }
}
