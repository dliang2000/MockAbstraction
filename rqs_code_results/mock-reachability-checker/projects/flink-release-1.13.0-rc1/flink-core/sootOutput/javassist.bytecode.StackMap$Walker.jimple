public class javassist.bytecode.StackMap$Walker extends java.lang.Object
{
    byte[] info;

    public void <init>(javassist.bytecode.StackMap)
    {
        javassist.bytecode.StackMap$Walker r0;
        javassist.bytecode.StackMap r1;
        byte[] $r2;

        r0 := @this: javassist.bytecode.StackMap$Walker;

        r1 := @parameter0: javassist.bytecode.StackMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<javassist.bytecode.StackMap: byte[] get()>();

        r0.<javassist.bytecode.StackMap$Walker: byte[] info> = $r2;

        return;
    }

    public void visit()
    {
        javassist.bytecode.StackMap$Walker r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7, i8, i9;
        byte[] $r1, $r2, $r3, $r4;

        r0 := @this: javassist.bytecode.StackMap$Walker;

        $r1 = r0.<javassist.bytecode.StackMap$Walker: byte[] info>;

        i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, 0);

        i7 = 2;

        i8 = 0;

     label1:
        if i8 >= i0 goto label2;

        $r2 = r0.<javassist.bytecode.StackMap$Walker: byte[] info>;

        i1 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r2, i7);

        $r3 = r0.<javassist.bytecode.StackMap$Walker: byte[] info>;

        $i4 = i7 + 2;

        i2 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r3, $i4);

        $i5 = i7 + 4;

        i9 = virtualinvoke r0.<javassist.bytecode.StackMap$Walker: int locals(int,int,int)>($i5, i1, i2);

        $r4 = r0.<javassist.bytecode.StackMap$Walker: byte[] info>;

        i3 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r4, i9);

        $i6 = i9 + 2;

        i7 = virtualinvoke r0.<javassist.bytecode.StackMap$Walker: int stack(int,int,int)>($i6, i1, i3);

        i8 = i8 + 1;

        goto label1;

     label2:
        return;
    }

    public int locals(int, int, int)
    {
        javassist.bytecode.StackMap$Walker r0;
        int i0, i1, i2, $i3;

        r0 := @this: javassist.bytecode.StackMap$Walker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = virtualinvoke r0.<javassist.bytecode.StackMap$Walker: int typeInfoArray(int,int,int,boolean)>(i0, i1, i2, 1);

        return $i3;
    }

    public int stack(int, int, int)
    {
        javassist.bytecode.StackMap$Walker r0;
        int i0, i1, i2, $i3;

        r0 := @this: javassist.bytecode.StackMap$Walker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = virtualinvoke r0.<javassist.bytecode.StackMap$Walker: int typeInfoArray(int,int,int,boolean)>(i0, i1, i2, 0);

        return $i3;
    }

    public int typeInfoArray(int, int, int, boolean)
    {
        javassist.bytecode.StackMap$Walker r0;
        int i0, i1, i2, i3;
        boolean z0;

        r0 := @this: javassist.bytecode.StackMap$Walker;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        i2 = virtualinvoke r0.<javassist.bytecode.StackMap$Walker: int typeInfoArray2(int,int)>(i3, i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    int typeInfoArray2(int, int)
    {
        javassist.bytecode.StackMap$Walker r0;
        int i0, $i2, $i3, i4, i5, i6, i7;
        byte b1;
        byte[] $r1, $r2, $r3;

        r0 := @this: javassist.bytecode.StackMap$Walker;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.StackMap$Walker: byte[] info>;

        b1 = $r1[i4];

        if b1 != 7 goto label1;

        $r3 = r0.<javassist.bytecode.StackMap$Walker: byte[] info>;

        $i3 = i4 + 1;

        i5 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r3, $i3);

        virtualinvoke r0.<javassist.bytecode.StackMap$Walker: void objectVariable(int,int)>(i4, i5);

        i6 = i4 + 3;

        goto label3;

     label1:
        if b1 != 8 goto label2;

        $r2 = r0.<javassist.bytecode.StackMap$Walker: byte[] info>;

        $i2 = i4 + 1;

        i7 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r2, $i2);

        virtualinvoke r0.<javassist.bytecode.StackMap$Walker: void uninitialized(int,int)>(i4, i7);

        i6 = i4 + 3;

        goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.StackMap$Walker: void typeInfo(int,byte)>(i4, b1);

        i6 = i4 + 1;

     label3:
        return i6;
    }

    public void typeInfo(int, byte)
    {
        javassist.bytecode.StackMap$Walker r0;
        int i0;
        byte b1;

        r0 := @this: javassist.bytecode.StackMap$Walker;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        return;
    }

    public void objectVariable(int, int)
    {
        javassist.bytecode.StackMap$Walker r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.StackMap$Walker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void uninitialized(int, int)
    {
        javassist.bytecode.StackMap$Walker r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.StackMap$Walker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }
}
