class org.mockito.internal.junit.DefaultStubbingLookupListener extends java.lang.Object implements org.mockito.internal.listeners.StubbingLookupListener
{
    private org.mockito.quality.Strictness currentStrictness;
    private boolean mismatchesReported;

    void <init>(org.mockito.quality.Strictness)
    {
        org.mockito.internal.junit.DefaultStubbingLookupListener r0;
        org.mockito.quality.Strictness r1;

        r0 := @this: org.mockito.internal.junit.DefaultStubbingLookupListener;

        r1 := @parameter0: org.mockito.quality.Strictness;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mockito.internal.junit.DefaultStubbingLookupListener: org.mockito.quality.Strictness currentStrictness> = r1;

        return;
    }

    public void onStubbingLookup(org.mockito.internal.listeners.StubbingLookupEvent)
    {
        org.mockito.internal.junit.DefaultStubbingLookupListener r0;
        org.mockito.internal.listeners.StubbingLookupEvent r1;
        org.mockito.quality.Strictness r2, $r6, $r7;
        java.util.List r3;
        org.mockito.stubbing.Stubbing $r4, $r8;
        org.mockito.mock.MockCreationSettings $r5;
        org.mockito.invocation.Invocation $r9, $r10, $r12;
        java.util.Collection $r11;
        boolean $z0;

        r0 := @this: org.mockito.internal.junit.DefaultStubbingLookupListener;

        r1 := @parameter0: org.mockito.internal.listeners.StubbingLookupEvent;

        $r4 = interfaceinvoke r1.<org.mockito.internal.listeners.StubbingLookupEvent: org.mockito.stubbing.Stubbing getStubbingFound()>();

        $r5 = interfaceinvoke r1.<org.mockito.internal.listeners.StubbingLookupEvent: org.mockito.mock.MockCreationSettings getMockSettings()>();

        $r6 = r0.<org.mockito.internal.junit.DefaultStubbingLookupListener: org.mockito.quality.Strictness currentStrictness>;

        r2 = staticinvoke <org.mockito.internal.stubbing.StrictnessSelector: org.mockito.quality.Strictness determineStrictness(org.mockito.stubbing.Stubbing,org.mockito.mock.MockCreationSettings,org.mockito.quality.Strictness)>($r4, $r5, $r6);

        $r7 = <org.mockito.quality.Strictness: org.mockito.quality.Strictness STRICT_STUBS>;

        if r2 == $r7 goto label1;

        return;

     label1:
        $r8 = interfaceinvoke r1.<org.mockito.internal.listeners.StubbingLookupEvent: org.mockito.stubbing.Stubbing getStubbingFound()>();

        if $r8 != null goto label3;

        $r10 = interfaceinvoke r1.<org.mockito.internal.listeners.StubbingLookupEvent: org.mockito.invocation.Invocation getInvocation()>();

        $r11 = interfaceinvoke r1.<org.mockito.internal.listeners.StubbingLookupEvent: java.util.Collection getAllStubbings()>();

        r3 = staticinvoke <org.mockito.internal.junit.DefaultStubbingLookupListener: java.util.List potentialArgMismatches(org.mockito.invocation.Invocation,java.util.Collection)>($r10, $r11);

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        r0.<org.mockito.internal.junit.DefaultStubbingLookupListener: boolean mismatchesReported> = 1;

        $r12 = interfaceinvoke r1.<org.mockito.internal.listeners.StubbingLookupEvent: org.mockito.invocation.Invocation getInvocation()>();

        staticinvoke <org.mockito.internal.exceptions.Reporter: void potentialStubbingProblem(org.mockito.invocation.Invocation,java.util.Collection)>($r12, r3);

     label2:
        goto label4;

     label3:
        $r9 = interfaceinvoke r1.<org.mockito.internal.listeners.StubbingLookupEvent: org.mockito.invocation.Invocation getInvocation()>();

        interfaceinvoke $r9.<org.mockito.invocation.Invocation: void markVerified()>();

     label4:
        return;
    }

    private static java.util.List potentialArgMismatches(org.mockito.invocation.Invocation, java.util.Collection)
    {
        org.mockito.invocation.Invocation r0, $r7, $r12;
        java.util.Collection r1;
        java.util.Iterator r3;
        org.mockito.stubbing.Stubbing r4;
        java.util.LinkedList $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;
        java.lang.reflect.Method $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @parameter0: org.mockito.invocation.Invocation;

        r1 := @parameter1: java.util.Collection;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.mockito.stubbing.Stubbing) $r6;

        $z1 = staticinvoke <org.mockito.internal.stubbing.UnusedStubbingReporting: boolean shouldBeReported(org.mockito.stubbing.Stubbing)>(r4);

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke r4.<org.mockito.stubbing.Stubbing: org.mockito.invocation.Invocation getInvocation()>();

        $r8 = interfaceinvoke $r7.<org.mockito.invocation.Invocation: java.lang.reflect.Method getMethod()>();

        $r9 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.String getName()>();

        $r10 = interfaceinvoke r0.<org.mockito.invocation.Invocation: java.lang.reflect.Method getMethod()>();

        $r11 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.String getName()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label2;

        $r12 = interfaceinvoke r4.<org.mockito.stubbing.Stubbing: org.mockito.invocation.Invocation getInvocation()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r12);

     label2:
        goto label1;

     label3:
        return $r5;
    }

    void setCurrentStrictness(org.mockito.quality.Strictness)
    {
        org.mockito.internal.junit.DefaultStubbingLookupListener r0;
        org.mockito.quality.Strictness r1;

        r0 := @this: org.mockito.internal.junit.DefaultStubbingLookupListener;

        r1 := @parameter0: org.mockito.quality.Strictness;

        r0.<org.mockito.internal.junit.DefaultStubbingLookupListener: org.mockito.quality.Strictness currentStrictness> = r1;

        return;
    }

    boolean isMismatchesReported()
    {
        org.mockito.internal.junit.DefaultStubbingLookupListener r0;
        boolean $z0;

        r0 := @this: org.mockito.internal.junit.DefaultStubbingLookupListener;

        $z0 = r0.<org.mockito.internal.junit.DefaultStubbingLookupListener: boolean mismatchesReported>;

        return $z0;
    }
}
