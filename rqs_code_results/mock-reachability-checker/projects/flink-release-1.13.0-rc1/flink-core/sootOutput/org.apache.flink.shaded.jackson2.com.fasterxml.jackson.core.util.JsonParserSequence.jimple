public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserDelegate
{
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] _parsers;
    protected final boolean _checkForExistingToken;
    protected int _nextParserIndex;
    protected boolean _hasToken;

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[];

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: void <init>(boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[])>(0, r1);

        return;
    }

    protected void <init>(boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence r0;
        boolean z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[];

        $r2 = r1[0];

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserDelegate: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: boolean _checkForExistingToken> = z0;

        if z0 == 0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate>;

        $z1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasCurrentToken()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: boolean _hasToken> = $z2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] _parsers> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex> = 1;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)
    {
        boolean z0, $z1, $z2, $z4, $z6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r0, r1;
        java.util.ArrayList $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence $r4, $r8, $r9, $r10;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] $r5, $r7, $r11;
        java.lang.Object[] $r6;

        z0 := @parameter0: boolean;

        r0 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r1 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        $z1 = r0 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        if $z1 != 0 goto label1;

        $z6 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        if $z6 != 0 goto label1;

        $r10 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        $r11 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)[2];

        $r11[0] = r0;

        $r11[1] = r1;

        specialinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: void <init>(boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[])>(z0, $r11);

        return $r10;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $z2 = r0 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        if $z2 == 0 goto label2;

        $r9 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence) r0;

        virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: void addFlattenedActiveParsers(java.util.List)>($r3);

        goto label3;

     label2:
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label3:
        $z4 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        if $z4 == 0 goto label4;

        $r8 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence) r1;

        virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: void addFlattenedActiveParsers(java.util.List)>($r3);

        goto label5;

     label4:
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label5:
        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r5 = newarray (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)[$i0];

        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[]) $r6;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: void <init>(boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[])>(z0, $r7);

        return $r4;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence $r2;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(0, r0, r1);

        return $r2;
    }

    protected void addFlattenedActiveParsers(java.util.List)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence r0, $r5;
        java.util.List r1;
        int i0, $i1, i2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        r1 := @parameter0: java.util.List;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex>;

        i2 = $i1 - 1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] _parsers>;

        i0 = lengthof $r3;

     label1:
        if i2 >= i0 goto label4;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] _parsers>;

        r2 = $r4[i2];

        $z0 = r2 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence) r2;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: void addFlattenedActiveParsers(java.util.List)>(r1);

        goto label3;

     label2:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate>;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void close()>();

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: boolean switchToNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2, $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate>;

        if $r2 != null goto label1;

        return null;

     label1:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: boolean _hasToken>;

        if $z0 == 0 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: boolean _hasToken> = 0;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        return $r6;

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate>;

        r1 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if r1 != null goto label3;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken switchAndReturnNext()>();

        return $r4;

     label3:
        return r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser skipChildren() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r3, $r4, $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r2, $r5;
        boolean $z0, $z1;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r3 == $r4 goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if $r6 == $r7 goto label1;

        return r0;

     label1:
        i0 = 1;

     label2:
        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if r1 != null goto label3;

        return r0;

     label3:
        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: boolean isStructStart()>();

        if $z0 == 0 goto label4;

        i0 = i0 + 1;

        goto label5;

     label4:
        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: boolean isStructEnd()>();

        if $z1 == 0 goto label5;

        i0 = i0 + -1;

        if i0 != 0 goto label5;

        return r0;

     label5:
        goto label2;
    }

    public int containedParsersCount()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] _parsers>;

        $i0 = lengthof $r1;

        return $i0;
    }

    protected boolean switchToNext()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] $r1, $r2;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] _parsers>;

        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] _parsers>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex> = $i3;

        $r3 = $r2[$i2];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate> = $r3;

        return 1;

     label1:
        return 0;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken switchAndReturnNext() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r1, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] $r2, $r3;
        int $i0, $i1, $i2, $i3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r4, $r5, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] _parsers>;

        $i0 = lengthof $r2;

        if $i1 >= $i0 goto label4;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser[] _parsers>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: int _nextParserIndex> = $i3;

        $r4 = $r3[$i2];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate> = $r4;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: boolean _checkForExistingToken>;

        if $z0 == 0 goto label2;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate>;

        $z1 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasCurrentToken()>();

        if $z1 == 0 goto label2;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken getCurrentToken()>();

        return $r8;

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser delegate>;

        r1 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        if r1 == null goto label3;

        return r1;

     label3:
        goto label1;

     label4:
        return null;
    }
}
