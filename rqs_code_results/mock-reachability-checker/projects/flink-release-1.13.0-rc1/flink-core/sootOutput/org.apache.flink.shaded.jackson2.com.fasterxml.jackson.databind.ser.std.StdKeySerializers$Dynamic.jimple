public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer
{
    protected transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/String;", 0);

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r1;

        return;
    }

    java.lang.Object readResolve()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r1;

        return r0;
    }

    public void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.lang.Class r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;

        r6 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(r4);

        if r6 != null goto label1;

        r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r5, r4, r3);

     label1:
        virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r3);

        return;
    }

    public void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: void visitStringFormat(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2);

        return;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap r1, $r4, $r6, $r8;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        if r2 != class "Ljava/lang/Object;" goto label1;

        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(8, r2);

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r2, $r7);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r8;

        return $r7;

     label1:
        r10 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddKeySerializer(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r2, r3, null);

        $r4 = r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        if r1 == $r4 goto label2;

        $r6 = r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = $r6;

     label2:
        $r5 = r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializer>;

        return $r5;
    }
}
