public class org.mockito.exceptions.verification.junit.ArgumentsAreDifferent extends junit.framework.ComparisonFailure
{
    private static final long serialVersionUID;
    private final java.lang.String message;
    private final java.lang.StackTraceElement[] unfilteredStackTrace;

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.mockito.exceptions.verification.junit.ArgumentsAreDifferent r0;
        java.lang.String r1, r2, r3;
        java.lang.StackTraceElement[] $r5;
        org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter $r6;

        r0 := @this: org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        r0.<org.mockito.exceptions.verification.junit.ArgumentsAreDifferent: java.lang.String message> = r1;

        $r5 = virtualinvoke r0.<org.mockito.exceptions.verification.junit.ArgumentsAreDifferent: java.lang.StackTraceElement[] getStackTrace()>();

        r0.<org.mockito.exceptions.verification.junit.ArgumentsAreDifferent: java.lang.StackTraceElement[] unfilteredStackTrace> = $r5;

        $r6 = new org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;

        specialinvoke $r6.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: void <init>()>();

        virtualinvoke $r6.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: void filter(java.lang.Throwable)>(r0);

        return;
    }

    public java.lang.String getMessage()
    {
        org.mockito.exceptions.verification.junit.ArgumentsAreDifferent r0;
        java.lang.String $r1;

        r0 := @this: org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;

        $r1 = r0.<org.mockito.exceptions.verification.junit.ArgumentsAreDifferent: java.lang.String message>;

        return $r1;
    }

    public java.lang.StackTraceElement[] getUnfilteredStackTrace()
    {
        org.mockito.exceptions.verification.junit.ArgumentsAreDifferent r0;
        java.lang.StackTraceElement[] $r1;

        r0 := @this: org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;

        $r1 = r0.<org.mockito.exceptions.verification.junit.ArgumentsAreDifferent: java.lang.StackTraceElement[] unfilteredStackTrace>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.mockito.exceptions.verification.junit.ArgumentsAreDifferent r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;

        $r1 = specialinvoke r0.<junit.framework.ComparisonFailure: java.lang.String toString()>();

        $r2 = staticinvoke <org.mockito.internal.util.StringUtil: java.lang.String removeFirstLine(java.lang.String)>($r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.mockito.exceptions.verification.junit.ArgumentsAreDifferent: long serialVersionUID> = 1L;

        return;
    }
}
