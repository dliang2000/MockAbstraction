public class org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest r0;
        boolean z0;
        org.apache.flink.api.common.typeutils.base.FloatValueComparator $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.common.typeutils.base.FloatValueComparator;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.FloatValueComparator: void <init>(boolean)>(z0);

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest r0;
        org.apache.flink.api.common.typeutils.base.FloatValueSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.FloatValueSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.FloatValueSerializer: void <init>()>();

        return $r1;
    }

    protected org.apache.flink.types.FloatValue[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest r0;
        java.util.Random $r2;
        byte $b0, $b1, $b2;
        org.apache.flink.types.FloatValue[] $r3;
        org.apache.flink.types.FloatValue $r4, $r5, $r6, $r7, $r8, $r9;
        float $f0, f1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(874597969123412338L);

        f1 = virtualinvoke $r2.<java.util.Random: float nextFloat()>();

        $b0 = f1 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        f1 = neg f1;

     label1:
        $b1 = f1 cmpl 3.4028235E38F;

        if $b1 != 0 goto label2;

        f1 = f1 - 3.0F;

     label2:
        $b2 = f1 cmpg 2.0F;

        if $b2 > 0 goto label3;

        f1 = f1 + 3.0F;

     label3:
        $r3 = newarray (org.apache.flink.types.FloatValue)[6];

        $r4 = new org.apache.flink.types.FloatValue;

        $f0 = neg f1;

        specialinvoke $r4.<org.apache.flink.types.FloatValue: void <init>(float)>($f0);

        $r3[0] = $r4;

        $r5 = new org.apache.flink.types.FloatValue;

        specialinvoke $r5.<org.apache.flink.types.FloatValue: void <init>(float)>(-1.0F);

        $r3[1] = $r5;

        $r6 = new org.apache.flink.types.FloatValue;

        specialinvoke $r6.<org.apache.flink.types.FloatValue: void <init>(float)>(0.0F);

        $r3[2] = $r6;

        $r7 = new org.apache.flink.types.FloatValue;

        specialinvoke $r7.<org.apache.flink.types.FloatValue: void <init>(float)>(2.0F);

        $r3[3] = $r7;

        $r8 = new org.apache.flink.types.FloatValue;

        specialinvoke $r8.<org.apache.flink.types.FloatValue: void <init>(float)>(f1);

        $r3[4] = $r8;

        $r9 = new org.apache.flink.types.FloatValue;

        specialinvoke $r9.<org.apache.flink.types.FloatValue: void <init>(float)>(3.4028235E38F);

        $r3[5] = $r9;

        return $r3;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest r0;
        org.apache.flink.types.FloatValue[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.FloatValueComparatorTest: org.apache.flink.types.FloatValue[] getSortedTestData()>();

        return $r1;
    }
}
