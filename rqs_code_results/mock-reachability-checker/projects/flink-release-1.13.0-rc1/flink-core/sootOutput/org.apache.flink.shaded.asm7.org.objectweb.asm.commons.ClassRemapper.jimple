public class org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper extends org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor
{
    protected final org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper;
    protected java.lang.String className;

    public void <init>(org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor, org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r2;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor;

        r2 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: void <init>(int,org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor,org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper)>(458752, r1, r2);

        return;
    }

    protected void <init>(int, org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor, org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        int i0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper r2;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor;

        r2 := @parameter2: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper;

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: void <init>(int,org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor)>(i0, r1);

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper> = r2;

        return;
    }

    public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        int i0, i1;
        java.lang.String r1, r2, r3, $r6, $r8, $r10;
        java.lang.String[] r4, $r13;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r5, $r7, $r9, $r11;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String[];

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: java.lang.String className> = r1;

        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapSignature(java.lang.String,boolean)>(r2, 0);

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r3);

        if r4 != null goto label1;

        $r13 = null;

        goto label2;

     label1:
        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r13 = virtualinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String[] mapTypes(java.lang.String[])>(r4);

     label2:
        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, i1, $r6, $r8, $r10, $r13);

        return;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleVisitor visitModule(java.lang.String, int, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        java.lang.String r1, r2, $r5;
        int i0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleVisitor r3, $r6;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r4;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapModuleName(java.lang.String)>(r1);

        r3 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleVisitor visitModule(java.lang.String,int,java.lang.String)>($r5, i0, r2);

        if r3 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleVisitor createModuleRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleVisitor)>(r3);

     label2:
        return $r6;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        java.lang.String r1, $r4;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor r2, $r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>(r1);

        r2 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>($r4, z0);

        if r2 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor createAnnotationRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor)>(r2);

     label2:
        return $r5;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        int i0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath r1;
        java.lang.String r2, $r5;
        boolean z0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor r3, $r6;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r4;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>(r2);

        r3 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,org.apache.flink.shaded.asm7.org.objectweb.asm.TypePath,java.lang.String,boolean)>(i0, r1, $r5, z0);

        if r3 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor createAnnotationRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor)>(r3);

     label2:
        return $r6;
    }

    public void visitAttribute(org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ModuleHashesAttribute r2;
        java.util.List r3;
        boolean $z0;
        int $i0, i1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r4;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        $z0 = r1 instanceof org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ModuleHashesAttribute;

        if $z0 == 0 goto label2;

        r2 = (org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ModuleHashesAttribute) r1;

        r3 = r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ModuleHashesAttribute: java.util.List modules>;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapModuleName(java.lang.String)>($r6);

        interfaceinvoke r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: void visitAttribute(org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute)>(r1);

        return;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        int i0;
        java.lang.String r1, r2, r3, $r6, $r8, $r10, $r12;
        java.lang.Object r4, $r15;
        org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor r5, $r16;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r7, $r9, $r11, $r13;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: java.lang.String className>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapFieldName(java.lang.String,java.lang.String,java.lang.String)>($r6, r1, r2);

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapDesc(java.lang.String)>(r2);

        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapSignature(java.lang.String,boolean)>(r3, 1);

        if r4 != null goto label1;

        $r15 = null;

        goto label2;

     label1:
        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r15 = virtualinvoke $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.Object mapValue(java.lang.Object)>(r4);

     label2:
        r5 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(i0, $r8, $r10, $r12, $r15);

        if r5 != null goto label3;

        $r16 = null;

        goto label4;

     label3:
        $r16 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor createFieldRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor)>(r5);

     label4:
        return $r16;
    }

    public org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        int i0;
        java.lang.String r1, r2, r3, r5, $r8, $r10, $r12;
        java.lang.String[] r4, $r16;
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor r6, $r17;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r7, $r9, $r11, $r13;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        $r7 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        r5 = virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapMethodDesc(java.lang.String)>(r2);

        $r9 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r8 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: java.lang.String className>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapMethodName(java.lang.String,java.lang.String,java.lang.String)>($r8, r1, r2);

        $r11 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapSignature(java.lang.String,boolean)>(r3, 0);

        if r4 != null goto label1;

        $r16 = null;

        goto label2;

     label1:
        $r13 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r16 = virtualinvoke $r13.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String[] mapTypes(java.lang.String[])>(r4);

     label2:
        r6 = specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, $r10, r5, $r12, $r16);

        if r6 != null goto label3;

        $r17 = null;

        goto label4;

     label3:
        $r17 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor createMethodRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor)>(r6);

     label4:
        return $r17;
    }

    public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        java.lang.String r1, r2, r3, $r8, $r9, $r10;
        int i0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r4, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r8 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r9 = virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r2);

     label2:
        if r3 != null goto label3;

        $r10 = null;

        goto label4;

     label3:
        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r10 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapInnerClassName(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

     label4:
        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>($r8, $r9, $r10, i0);

        return;
    }

    public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        java.lang.String r1, r2, r3, $r8, $r9, $r10;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r4, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r8 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r5 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r9 = virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapMethodName(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

     label2:
        if r3 != null goto label3;

        $r10 = null;

        goto label4;

     label3:
        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r10 = virtualinvoke $r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapMethodDesc(java.lang.String)>(r3);

     label4:
        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r10);

        return;
    }

    public void visitNestHost(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        java.lang.String r1, $r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r2;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: void visitNestHost(java.lang.String)>($r3);

        return;
    }

    public void visitNestMember(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        java.lang.String r1, $r3;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r2;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper: java.lang.String mapType(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassVisitor: void visitNestMember(java.lang.String)>($r3);

        return;
    }

    protected org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor createFieldRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.FieldRemapper $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor;

        $r2 = new org.apache.flink.shaded.asm7.org.objectweb.asm.commons.FieldRemapper;

        $i0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: int api>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        specialinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.FieldRemapper: void <init>(int,org.apache.flink.shaded.asm7.org.objectweb.asm.FieldVisitor,org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper)>($i0, r1, $r3);

        return $r2;
    }

    protected org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor createMethodRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.MethodRemapper $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor;

        $r2 = new org.apache.flink.shaded.asm7.org.objectweb.asm.commons.MethodRemapper;

        $i0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: int api>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        specialinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.MethodRemapper: void <init>(int,org.apache.flink.shaded.asm7.org.objectweb.asm.MethodVisitor,org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper)>($i0, r1, $r3);

        return $r2;
    }

    protected org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor createAnnotationRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.AnnotationRemapper $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor;

        $r2 = new org.apache.flink.shaded.asm7.org.objectweb.asm.commons.AnnotationRemapper;

        $i0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: int api>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        specialinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.AnnotationRemapper: void <init>(int,org.apache.flink.shaded.asm7.org.objectweb.asm.AnnotationVisitor,org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper)>($i0, r1, $r3);

        return $r2;
    }

    protected org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleVisitor createModuleRemapper(org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleVisitor)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleVisitor r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ModuleRemapper $r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleVisitor;

        $r2 = new org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ModuleRemapper;

        $i0 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: int api>;

        $r3 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ClassRemapper: org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper remapper>;

        specialinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.commons.ModuleRemapper: void <init>(int,org.apache.flink.shaded.asm7.org.objectweb.asm.ModuleVisitor,org.apache.flink.shaded.asm7.org.objectweb.asm.commons.Remapper)>($i0, r1, $r3);

        return $r2;
    }
}
