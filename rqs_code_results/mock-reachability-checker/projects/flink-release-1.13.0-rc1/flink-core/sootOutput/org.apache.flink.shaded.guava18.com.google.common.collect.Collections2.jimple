public final class org.apache.flink.shaded.guava18.com.google.common.collect.Collections2 extends java.lang.Object
{
    static final org.apache.flink.shaded.guava18.com.google.common.base.Joiner STANDARD_JOINER;

    private void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2 r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Collection filter(java.util.Collection, org.apache.flink.shaded.guava18.com.google.common.base.Predicate)
    {
        java.util.Collection r0, $r4;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate r1, $r6;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$FilteredCollection $r2, $r7, $r8;
        java.lang.Object $r3, $r5;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Predicate;

        $z0 = r0 instanceof org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$FilteredCollection;

        if $z0 == 0 goto label1;

        $r7 = (org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$FilteredCollection) r0;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$FilteredCollection: org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$FilteredCollection createCombined(org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r1);

        return $r8;

     label1:
        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$FilteredCollection;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r4 = (java.util.Collection) $r3;

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = (org.apache.flink.shaded.guava18.com.google.common.base.Predicate) $r5;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$FilteredCollection: void <init>(java.util.Collection,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>($r4, $r6);

        return $r2;
    }

    static boolean safeContains(java.util.Collection, java.lang.Object)
    {
        java.util.Collection r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.NullPointerException $r3;
        java.lang.ClassCastException $r4;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

     label1:
        $z0 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        return 0;

     label4:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    static boolean safeRemove(java.util.Collection, java.lang.Object)
    {
        java.util.Collection r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.NullPointerException $r3;
        java.lang.ClassCastException $r4;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

     label1:
        $z0 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        return 0;

     label4:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public static java.util.Collection transform(java.util.Collection, org.apache.flink.shaded.guava18.com.google.common.base.Function)
    {
        java.util.Collection r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Function r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$TransformedCollection $r2;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Function;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$TransformedCollection;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$TransformedCollection: void <init>(java.util.Collection,org.apache.flink.shaded.guava18.com.google.common.base.Function)>(r0, r1);

        return $r2;
    }

    static boolean containsAllImpl(java.util.Collection, java.util.Collection)
    {
        java.util.Collection r0, r1;
        org.apache.flink.shaded.guava18.com.google.common.base.Predicate $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Collection;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Predicates: org.apache.flink.shaded.guava18.com.google.common.base.Predicate in(java.util.Collection)>(r0);

        $z0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterables: boolean all(java.lang.Iterable,org.apache.flink.shaded.guava18.com.google.common.base.Predicate)>(r1, $r2);

        return $z0;
    }

    static java.lang.String toStringImpl(java.util.Collection)
    {
        java.util.Collection r0;
        java.lang.StringBuilder r1, $r2, $r7;
        int $i0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$1 $r3;
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner $r4;
        java.lang.Iterable $r5;
        java.lang.String $r8;

        r0 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: java.lang.StringBuilder newStringBuilderForCollection(int)>($i0);

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r4 = <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: org.apache.flink.shaded.guava18.com.google.common.base.Joiner STANDARD_JOINER>;

        $r3 = new org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$1;

        specialinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$1: void <init>(java.util.Collection)>(r0);

        $r5 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterables: java.lang.Iterable transform(java.lang.Iterable,org.apache.flink.shaded.guava18.com.google.common.base.Function)>(r0, $r3);

        virtualinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable)>(r1, $r5);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static java.lang.StringBuilder newStringBuilderForCollection(int)
    {
        int i0, $i5;
        java.lang.StringBuilder $r0;
        long $l2, $l3, $l4;

        i0 := @parameter0: int;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>(i0, "size");

        $r0 = new java.lang.StringBuilder;

        $l2 = (long) i0;

        $l3 = $l2 * 8L;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>($l3, 1073741824L);

        $i5 = (int) $l4;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i5);

        return $r0;
    }

    static java.util.Collection cast(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.Collection $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = (java.util.Collection) r0;

        return $r1;
    }

    public static java.util.Collection orderedPermutations(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Ordering $r1;
        java.util.Collection $r2;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Ordering: org.apache.flink.shaded.guava18.com.google.common.collect.Ordering natural()>();

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: java.util.Collection orderedPermutations(java.lang.Iterable,java.util.Comparator)>(r0, $r1);

        return $r2;
    }

    public static java.util.Collection orderedPermutations(java.lang.Iterable, java.util.Comparator)
    {
        java.lang.Iterable r0;
        java.util.Comparator r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection $r2;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.util.Comparator;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$OrderedPermutationCollection: void <init>(java.lang.Iterable,java.util.Comparator)>(r0, r1);

        return $r2;
    }

    public static java.util.Collection permutations(java.util.Collection)
    {
        java.util.Collection r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$PermutationCollection $r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r2;

        r0 := @parameter0: java.util.Collection;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$PermutationCollection;

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList copyOf(java.util.Collection)>(r0);

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.collect.Collections2$PermutationCollection: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList)>($r2);

        return $r1;
    }

    private static boolean isPermutation(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.HashMultiset r2, r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.HashMultiset: org.apache.flink.shaded.guava18.com.google.common.collect.HashMultiset create(java.lang.Iterable)>(r0);

        r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.HashMultiset: org.apache.flink.shaded.guava18.com.google.common.collect.HashMultiset create(java.lang.Iterable)>(r1);

        $z0 = interfaceinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Multiset: boolean equals(java.lang.Object)>(r3);

        return $z0;
    }

    private static boolean isPositiveInt(long)
    {
        long l0;
        byte $b1, $b2;
        boolean $z0;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $b2 = l0 cmp 2147483647L;

        if $b2 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static boolean access$000(long)
    {
        long l0;
        boolean $z0;

        l0 := @parameter0: long;

        $z0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: boolean isPositiveInt(long)>(l0);

        return $z0;
    }

    static boolean access$100(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $z0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: boolean isPermutation(java.util.List,java.util.List)>(r0, r1);

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner $r0, $r1;

        $r0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Joiner: org.apache.flink.shaded.guava18.com.google.common.base.Joiner on(java.lang.String)>(", ");

        $r1 = virtualinvoke $r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner: org.apache.flink.shaded.guava18.com.google.common.base.Joiner useForNull(java.lang.String)>("null");

        <org.apache.flink.shaded.guava18.com.google.common.collect.Collections2: org.apache.flink.shaded.guava18.com.google.common.base.Joiner STANDARD_JOINER> = $r1;

        return;
    }
}
