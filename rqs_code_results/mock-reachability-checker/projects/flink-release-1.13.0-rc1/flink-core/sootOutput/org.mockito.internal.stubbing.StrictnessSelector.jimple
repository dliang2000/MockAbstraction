public class org.mockito.internal.stubbing.StrictnessSelector extends java.lang.Object
{

    public void <init>()
    {
        org.mockito.internal.stubbing.StrictnessSelector r0;

        r0 := @this: org.mockito.internal.stubbing.StrictnessSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.mockito.quality.Strictness determineStrictness(org.mockito.stubbing.Stubbing, org.mockito.mock.MockCreationSettings, org.mockito.quality.Strictness)
    {
        org.mockito.stubbing.Stubbing r0;
        org.mockito.mock.MockCreationSettings r1;
        org.mockito.quality.Strictness r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @parameter0: org.mockito.stubbing.Stubbing;

        r1 := @parameter1: org.mockito.mock.MockCreationSettings;

        r2 := @parameter2: org.mockito.quality.Strictness;

        if r0 == null goto label1;

        $r4 = interfaceinvoke r0.<org.mockito.stubbing.Stubbing: org.mockito.quality.Strictness getStrictness()>();

        if $r4 == null goto label1;

        $r5 = interfaceinvoke r0.<org.mockito.stubbing.Stubbing: org.mockito.quality.Strictness getStrictness()>();

        return $r5;

     label1:
        $z0 = interfaceinvoke r1.<org.mockito.mock.MockCreationSettings: boolean isLenient()>();

        if $z0 == 0 goto label2;

        $r3 = <org.mockito.quality.Strictness: org.mockito.quality.Strictness LENIENT>;

        return $r3;

     label2:
        return r2;
    }
}
