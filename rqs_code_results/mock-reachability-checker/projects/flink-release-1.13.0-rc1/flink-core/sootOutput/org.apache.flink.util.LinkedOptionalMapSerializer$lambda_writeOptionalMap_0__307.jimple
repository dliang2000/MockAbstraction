public final class org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307 extends java.lang.Object implements org.apache.flink.util.LinkedOptionalMap$ConsumerWithException
{
    org.apache.flink.core.memory.DataOutputView cap0;
    org.apache.flink.util.function.BiConsumerWithException cap1;
    org.apache.flink.util.function.BiConsumerWithException cap2;

    public static org.apache.flink.util.LinkedOptionalMap$ConsumerWithException bootstrap$(org.apache.flink.core.memory.DataOutputView, org.apache.flink.util.function.BiConsumerWithException, org.apache.flink.util.function.BiConsumerWithException)
    {
        org.apache.flink.core.memory.DataOutputView $r0;
        org.apache.flink.util.function.BiConsumerWithException $r1, $r2;
        org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307 $r3;

        $r0 := @parameter0: org.apache.flink.core.memory.DataOutputView;

        $r1 := @parameter1: org.apache.flink.util.function.BiConsumerWithException;

        $r2 := @parameter2: org.apache.flink.util.function.BiConsumerWithException;

        $r3 = new org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307;

        specialinvoke $r3.<org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307: void <init>(org.apache.flink.core.memory.DataOutputView,org.apache.flink.util.function.BiConsumerWithException,org.apache.flink.util.function.BiConsumerWithException)>($r0, $r1, $r2);

        return $r3;
    }

    public void <init>(org.apache.flink.core.memory.DataOutputView, org.apache.flink.util.function.BiConsumerWithException, org.apache.flink.util.function.BiConsumerWithException)
    {
        org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307 $r0;
        org.apache.flink.core.memory.DataOutputView $r1;
        org.apache.flink.util.function.BiConsumerWithException $r2, $r3;

        $r0 := @this: org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307;

        $r1 := @parameter0: org.apache.flink.core.memory.DataOutputView;

        $r2 := @parameter1: org.apache.flink.util.function.BiConsumerWithException;

        $r3 := @parameter2: org.apache.flink.util.function.BiConsumerWithException;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307: org.apache.flink.core.memory.DataOutputView cap0> = $r1;

        $r0.<org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307: org.apache.flink.util.function.BiConsumerWithException cap1> = $r2;

        $r0.<org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307: org.apache.flink.util.function.BiConsumerWithException cap2> = $r3;

        return;
    }

    public void accept(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307 $r0;
        java.lang.String $r1;
        java.lang.Object $r2, $r3;
        org.apache.flink.core.memory.DataOutputView $r4;
        org.apache.flink.util.function.BiConsumerWithException $r5, $r6;

        $r0 := @this: org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $r4 = $r0.<org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307: org.apache.flink.core.memory.DataOutputView cap0>;

        $r5 = $r0.<org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307: org.apache.flink.util.function.BiConsumerWithException cap1>;

        $r6 = $r0.<org.apache.flink.util.LinkedOptionalMapSerializer$lambda_writeOptionalMap_0__307: org.apache.flink.util.function.BiConsumerWithException cap2>;

        staticinvoke <org.apache.flink.util.LinkedOptionalMapSerializer: void lambda$writeOptionalMap$0(org.apache.flink.core.memory.DataOutputView,org.apache.flink.util.function.BiConsumerWithException,org.apache.flink.util.function.BiConsumerWithException,java.lang.String,java.lang.Object,java.lang.Object)>($r4, $r5, $r6, $r1, $r2, $r3);

        return;
    }
}
