public class org.apache.flink.util.ThrowableCatchingRunnable extends java.lang.Object implements java.lang.Runnable
{
    private final java.util.function.Consumer exceptionHandler;
    private final java.lang.Runnable runnable;

    public void <init>(java.util.function.Consumer, java.lang.Runnable)
    {
        org.apache.flink.util.ThrowableCatchingRunnable r0;
        java.util.function.Consumer r1;
        java.lang.Runnable r2;

        r0 := @this: org.apache.flink.util.ThrowableCatchingRunnable;

        r1 := @parameter0: java.util.function.Consumer;

        r2 := @parameter1: java.lang.Runnable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.util.ThrowableCatchingRunnable: java.util.function.Consumer exceptionHandler> = r1;

        r0.<org.apache.flink.util.ThrowableCatchingRunnable: java.lang.Runnable runnable> = r2;

        return;
    }

    public void run()
    {
        org.apache.flink.util.ThrowableCatchingRunnable r0;
        java.lang.Runnable $r2;
        java.lang.Throwable $r3;
        java.util.function.Consumer $r4;

        r0 := @this: org.apache.flink.util.ThrowableCatchingRunnable;

     label1:
        $r2 = r0.<org.apache.flink.util.ThrowableCatchingRunnable: java.lang.Runnable runnable>;

        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<org.apache.flink.util.ThrowableCatchingRunnable: java.util.function.Consumer exceptionHandler>;

        interfaceinvoke $r4.<java.util.function.Consumer: void accept(java.lang.Object)>($r3);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
