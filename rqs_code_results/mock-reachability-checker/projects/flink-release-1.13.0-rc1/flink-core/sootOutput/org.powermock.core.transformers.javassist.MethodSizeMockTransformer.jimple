public class org.powermock.core.transformers.javassist.MethodSizeMockTransformer extends org.powermock.core.transformers.javassist.MethodMockTransformer
{
    private static final int MAX_METHOD_CODE_LENGTH_LIMIT;

    public void <init>(org.powermock.core.transformers.TransformStrategy)
    {
        org.powermock.core.transformers.javassist.MethodSizeMockTransformer r0;
        org.powermock.core.transformers.TransformStrategy r1;

        r0 := @this: org.powermock.core.transformers.javassist.MethodSizeMockTransformer;

        r1 := @parameter0: org.powermock.core.transformers.TransformStrategy;

        specialinvoke r0.<org.powermock.core.transformers.javassist.MethodMockTransformer: void <init>(org.powermock.core.transformers.TransformStrategy)>(r1);

        return;
    }

    public javassist.CtClass transform(javassist.CtClass) throws javassist.CannotCompileException, javassist.NotFoundException
    {
        org.powermock.core.transformers.javassist.MethodSizeMockTransformer r0;
        javassist.CtClass r1;
        javassist.CtMethod[] r2;
        int i0, i1;
        javassist.CtMethod r3;
        boolean $z0;

        r0 := @this: org.powermock.core.transformers.javassist.MethodSizeMockTransformer;

        r1 := @parameter0: javassist.CtClass;

        r2 = virtualinvoke r1.<javassist.CtClass: javassist.CtMethod[] getDeclaredMethods()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = specialinvoke r0.<org.powermock.core.transformers.javassist.MethodSizeMockTransformer: boolean isMethodSizeExceeded(javassist.CtMethod)>(r3);

        if $z0 == 0 goto label2;

        virtualinvoke r3.<javassist.CtMethod: void setBody(java.lang.String)>("{throw new IllegalAccessException(\"Method was too large and after instrumentation exceeded JVM limit. PowerMock modified the method to allow JVM to load the class. You can use PowerMock API to suppress or mock this method behaviour.\");}");

        virtualinvoke r0.<org.powermock.core.transformers.javassist.MethodSizeMockTransformer: void modifyMethod(javassist.CtMethod)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }

    private boolean isMethodSizeExceeded(javassist.CtMethod)
    {
        org.powermock.core.transformers.javassist.MethodSizeMockTransformer r0;
        javassist.CtMethod r1;
        javassist.bytecode.CodeAttribute r2;
        javassist.bytecode.MethodInfo $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.powermock.core.transformers.javassist.MethodSizeMockTransformer;

        r1 := @parameter0: javassist.CtMethod;

        $r3 = virtualinvoke r1.<javassist.CtMethod: javassist.bytecode.MethodInfo getMethodInfo()>();

        r2 = virtualinvoke $r3.<javassist.bytecode.MethodInfo: javassist.bytecode.CodeAttribute getCodeAttribute()>();

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<javassist.bytecode.CodeAttribute: int getCodeLength()>();

        if $i0 < 65536 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void <clinit>()
    {
        <org.powermock.core.transformers.javassist.MethodSizeMockTransformer: int MAX_METHOD_CODE_LENGTH_LIMIT> = 65536;

        return;
    }
}
