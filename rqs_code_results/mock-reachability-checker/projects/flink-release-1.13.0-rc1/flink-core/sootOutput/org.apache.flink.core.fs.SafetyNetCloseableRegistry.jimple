public class org.apache.flink.core.fs.SafetyNetCloseableRegistry extends org.apache.flink.util.AbstractCloseableRegistry
{
    private static final org.slf4j.Logger LOG;
    private static final java.lang.Object REAPER_THREAD_LOCK;
    private static org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD;
    private static int GLOBAL_SAFETY_NET_REGISTRY_COUNT;
    static final boolean $assertionsDisabled;

    void <init>()
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistry r0;
        java.util.function.Supplier $r1;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistry;

        $r1 = staticinvoke <org.apache.flink.core.fs.SafetyNetCloseableRegistry$lambda_new_0__186: java.util.function.Supplier bootstrap$()>();

        specialinvoke r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistry: void <init>(java.util.function.Supplier)>($r1);

        return;
    }

    void <init>(java.util.function.Supplier)
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistry r0;
        java.util.function.Supplier r1;
        java.util.IdentityHashMap $r5;
        java.lang.Object $r6, $r8;
        int $i0, $i1, $i2;
        org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread $r7, $r9, $r10;
        java.lang.Throwable $r11, $r12;
        boolean $z0;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistry;

        r1 := @parameter0: java.util.function.Supplier;

        $r5 = new java.util.IdentityHashMap;

        specialinvoke $r5.<java.util.IdentityHashMap: void <init>()>();

        specialinvoke r0.<org.apache.flink.util.AbstractCloseableRegistry: void <init>(java.util.Map)>($r5);

        $r6 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: java.lang.Object REAPER_THREAD_LOCK>;

        entermonitor $r6;

     label01:
        $i0 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: int GLOBAL_SAFETY_NET_REGISTRY_COUNT>;

        if 0 != $i0 goto label07;

        $r7 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD>;

        if null != $r7 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        staticinvoke <org.apache.flink.util.Preconditions: void checkState(boolean)>($z0);

     label04:
        $r8 = interfaceinvoke r1.<java.util.function.Supplier: java.lang.Object get()>();

        $r9 = (org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread) $r8;

        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD> = $r9;

        $r10 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD>;

        virtualinvoke $r10.<org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread: void start()>();

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD> = null;

        throw $r12;

     label07:
        $i1 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: int GLOBAL_SAFETY_NET_REGISTRY_COUNT>;

        $i2 = $i1 + 1;

        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: int GLOBAL_SAFETY_NET_REGISTRY_COUNT> = $i2;

        exitmonitor $r6;

     label08:
        goto label11;

     label09:
        $r11 := @caughtexception;

        exitmonitor $r6;

     label10:
        throw $r11;

     label11:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    protected void doRegister(org.apache.flink.core.fs.WrappingProxyCloseable, java.util.Map)
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistry r0;
        org.apache.flink.core.fs.WrappingProxyCloseable r1;
        java.util.Map r2;
        java.io.Closeable r3;
        boolean $z0, $z1;
        java.lang.Object $r5, $r10;
        org.apache.flink.core.fs.SafetyNetCloseableRegistry$PhantomDelegatingCloseableRef $r6;
        org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread $r7;
        java.lang.ref.ReferenceQueue $r8;
        java.lang.AssertionError $r11;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistry;

        r1 := @parameter0: org.apache.flink.core.fs.WrappingProxyCloseable;

        r2 := @parameter1: java.util.Map;

        $z0 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r10 = virtualinvoke r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistry: java.lang.Object getSynchronizationLock()>();

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r10);

        if $z1 != 0 goto label1;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label1:
        $r5 = staticinvoke <org.apache.flink.util.WrappingProxyUtil: java.lang.Object stripProxy(org.apache.flink.util.WrappingProxy)>(r1);

        r3 = (java.io.Closeable) $r5;

        if null != r3 goto label2;

        return;

     label2:
        $r6 = new org.apache.flink.core.fs.SafetyNetCloseableRegistry$PhantomDelegatingCloseableRef;

        $r7 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD>;

        $r8 = staticinvoke <org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread: java.lang.ref.ReferenceQueue access$000(org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread)>($r7);

        specialinvoke $r6.<org.apache.flink.core.fs.SafetyNetCloseableRegistry$PhantomDelegatingCloseableRef: void <init>(org.apache.flink.core.fs.WrappingProxyCloseable,org.apache.flink.core.fs.SafetyNetCloseableRegistry,java.lang.ref.ReferenceQueue)>(r1, r0, $r8);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r6);

        return;
    }

    protected boolean doUnRegister(org.apache.flink.core.fs.WrappingProxyCloseable, java.util.Map)
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistry r0;
        org.apache.flink.core.fs.WrappingProxyCloseable r1;
        java.util.Map r2;
        java.io.Closeable r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4, $r5, $r6;
        java.lang.AssertionError $r7;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistry;

        r1 := @parameter0: org.apache.flink.core.fs.WrappingProxyCloseable;

        r2 := @parameter1: java.util.Map;

        $z0 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistry: java.lang.Object getSynchronizationLock()>();

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r6);

        if $z1 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $r4 = staticinvoke <org.apache.flink.util.WrappingProxyUtil: java.lang.Object stripProxy(org.apache.flink.util.WrappingProxy)>(r1);

        r3 = (java.io.Closeable) $r4;

        if null == r3 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        if $r5 == null goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistry r0;
        java.lang.Object $r6, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread $r7, $r10;
        java.lang.Throwable $r8, $r11, $r12;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistry;

     label01:
        specialinvoke r0.<org.apache.flink.util.AbstractCloseableRegistry: void close()>();

     label02:
        $r6 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: java.lang.Object REAPER_THREAD_LOCK>;

        entermonitor $r6;

     label03:
        $i0 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: int GLOBAL_SAFETY_NET_REGISTRY_COUNT>;

        $i1 = $i0 - 1;

        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: int GLOBAL_SAFETY_NET_REGISTRY_COUNT> = $i1;

        $i2 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: int GLOBAL_SAFETY_NET_REGISTRY_COUNT>;

        if 0 != $i2 goto label04;

        $r7 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD>;

        virtualinvoke $r7.<org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread: void interrupt()>();

        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD> = null;

     label04:
        exitmonitor $r6;

     label05:
        goto label08;

     label06:
        $r11 := @caughtexception;

        exitmonitor $r6;

     label07:
        throw $r11;

     label08:
        goto label16;

     label09:
        $r8 := @caughtexception;

        $r9 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: java.lang.Object REAPER_THREAD_LOCK>;

        entermonitor $r9;

     label10:
        $i3 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: int GLOBAL_SAFETY_NET_REGISTRY_COUNT>;

        $i4 = $i3 - 1;

        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: int GLOBAL_SAFETY_NET_REGISTRY_COUNT> = $i4;

        $i5 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: int GLOBAL_SAFETY_NET_REGISTRY_COUNT>;

        if 0 != $i5 goto label11;

        $r10 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD>;

        virtualinvoke $r10.<org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread: void interrupt()>();

        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD> = null;

     label11:
        exitmonitor $r9;

     label12:
        goto label15;

     label13:
        $r12 := @caughtexception;

        exitmonitor $r9;

     label14:
        throw $r12;

     label15:
        throw $r8;

     label16:
        return;

        catch java.lang.Throwable from label03 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    static boolean isReaperThreadRunning()
    {
        java.lang.Object $r2;
        org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread $r3, $r4;
        boolean $z0, $z1;
        java.lang.Throwable $r5;

        $r2 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: java.lang.Object REAPER_THREAD_LOCK>;

        entermonitor $r2;

     label1:
        $r3 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD>;

        if null == $r3 goto label2;

        $r4 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD>;

        $z0 = virtualinvoke $r4.<org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread: boolean isAlive()>();

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        exitmonitor $r2;

     label4:
        return $z1;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected volatile boolean doUnRegister(java.io.Closeable, java.util.Map)
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistry r0;
        java.io.Closeable r1;
        java.util.Map r2;
        org.apache.flink.core.fs.WrappingProxyCloseable $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistry;

        r1 := @parameter0: java.io.Closeable;

        r2 := @parameter1: java.util.Map;

        $r3 = (org.apache.flink.core.fs.WrappingProxyCloseable) r1;

        $z0 = virtualinvoke r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistry: boolean doUnRegister(org.apache.flink.core.fs.WrappingProxyCloseable,java.util.Map)>($r3, r2);

        return $z0;
    }

    protected volatile void doRegister(java.io.Closeable, java.util.Map)
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistry r0;
        java.io.Closeable r1;
        java.util.Map r2;
        org.apache.flink.core.fs.WrappingProxyCloseable $r3;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistry;

        r1 := @parameter0: java.io.Closeable;

        r2 := @parameter1: java.util.Map;

        $r3 = (org.apache.flink.core.fs.WrappingProxyCloseable) r1;

        virtualinvoke r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistry: void doRegister(org.apache.flink.core.fs.WrappingProxyCloseable,java.util.Map)>($r3, r2);

        return;
    }

    public static org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread lambda$new$0()
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread $r0;

        $r0 = new org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread;

        specialinvoke $r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread: void <init>()>();

        return $r0;
    }

    static boolean access$100(org.apache.flink.core.fs.SafetyNetCloseableRegistry, java.io.Closeable)
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistry r0;
        java.io.Closeable r1;
        boolean $z0;

        r0 := @parameter0: org.apache.flink.core.fs.SafetyNetCloseableRegistry;

        r1 := @parameter1: java.io.Closeable;

        $z0 = virtualinvoke r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistry: boolean removeCloseableInternal(java.io.Closeable)>(r1);

        return $z0;
    }

    static org.slf4j.Logger access$200()
    {
        org.slf4j.Logger $r0;

        $r0 = <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.slf4j.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        org.slf4j.Logger $r1;
        java.lang.Object $r2;

        $r0 = class "Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/flink/core/fs/SafetyNetCloseableRegistry;");

        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.slf4j.Logger LOG> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: java.lang.Object REAPER_THREAD_LOCK> = $r2;

        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: org.apache.flink.core.fs.SafetyNetCloseableRegistry$CloseableReaperThread REAPER_THREAD> = null;

        <org.apache.flink.core.fs.SafetyNetCloseableRegistry: int GLOBAL_SAFETY_NET_REGISTRY_COUNT> = 0;

        return;
    }
}
