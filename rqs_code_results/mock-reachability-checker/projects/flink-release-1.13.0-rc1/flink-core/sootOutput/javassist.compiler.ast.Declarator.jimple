public class javassist.compiler.ast.Declarator extends javassist.compiler.ast.ASTList implements javassist.compiler.TokenId
{
    private static final long serialVersionUID;
    protected int varType;
    protected int arrayDim;
    protected int localVar;
    protected java.lang.String qualifiedClass;

    public void <init>(int, int)
    {
        javassist.compiler.ast.Declarator r0;
        int i0, i1;

        r0 := @this: javassist.compiler.ast.Declarator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree)>(null);

        r0.<javassist.compiler.ast.Declarator: int varType> = i0;

        r0.<javassist.compiler.ast.Declarator: int arrayDim> = i1;

        r0.<javassist.compiler.ast.Declarator: int localVar> = -1;

        r0.<javassist.compiler.ast.Declarator: java.lang.String qualifiedClass> = null;

        return;
    }

    public void <init>(javassist.compiler.ast.ASTList, int)
    {
        javassist.compiler.ast.Declarator r0;
        javassist.compiler.ast.ASTList r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: javassist.compiler.ast.Declarator;

        r1 := @parameter0: javassist.compiler.ast.ASTList;

        i0 := @parameter1: int;

        specialinvoke r0.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree)>(null);

        r0.<javassist.compiler.ast.Declarator: int varType> = 307;

        r0.<javassist.compiler.ast.Declarator: int arrayDim> = i0;

        r0.<javassist.compiler.ast.Declarator: int localVar> = -1;

        $r2 = staticinvoke <javassist.compiler.ast.Declarator: java.lang.String astToClassName(javassist.compiler.ast.ASTList,char)>(r1, 47);

        r0.<javassist.compiler.ast.Declarator: java.lang.String qualifiedClass> = $r2;

        return;
    }

    public void <init>(int, java.lang.String, int, int, javassist.compiler.ast.Symbol)
    {
        javassist.compiler.ast.Declarator r0;
        int i0, i1, i2;
        java.lang.String r1;
        javassist.compiler.ast.Symbol r2;

        r0 := @this: javassist.compiler.ast.Declarator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: javassist.compiler.ast.Symbol;

        specialinvoke r0.<javassist.compiler.ast.ASTList: void <init>(javassist.compiler.ast.ASTree)>(null);

        r0.<javassist.compiler.ast.Declarator: int varType> = i0;

        r0.<javassist.compiler.ast.Declarator: int arrayDim> = i1;

        r0.<javassist.compiler.ast.Declarator: int localVar> = i2;

        r0.<javassist.compiler.ast.Declarator: java.lang.String qualifiedClass> = r1;

        virtualinvoke r0.<javassist.compiler.ast.Declarator: void setLeft(javassist.compiler.ast.ASTree)>(r2);

        staticinvoke <javassist.compiler.ast.Declarator: javassist.compiler.ast.ASTList append(javassist.compiler.ast.ASTList,javassist.compiler.ast.ASTree)>(r0, null);

        return;
    }

    public javassist.compiler.ast.Declarator make(javassist.compiler.ast.Symbol, int, javassist.compiler.ast.ASTree)
    {
        javassist.compiler.ast.Declarator r0, $r4;
        javassist.compiler.ast.Symbol r1;
        int i0, $i1, $i2, $i3;
        javassist.compiler.ast.ASTree r2;
        java.lang.String $r5;

        r0 := @this: javassist.compiler.ast.Declarator;

        r1 := @parameter0: javassist.compiler.ast.Symbol;

        i0 := @parameter1: int;

        r2 := @parameter2: javassist.compiler.ast.ASTree;

        $r4 = new javassist.compiler.ast.Declarator;

        $i3 = r0.<javassist.compiler.ast.Declarator: int varType>;

        $i1 = r0.<javassist.compiler.ast.Declarator: int arrayDim>;

        $i2 = $i1 + i0;

        specialinvoke $r4.<javassist.compiler.ast.Declarator: void <init>(int,int)>($i3, $i2);

        $r5 = r0.<javassist.compiler.ast.Declarator: java.lang.String qualifiedClass>;

        $r4.<javassist.compiler.ast.Declarator: java.lang.String qualifiedClass> = $r5;

        virtualinvoke $r4.<javassist.compiler.ast.Declarator: void setLeft(javassist.compiler.ast.ASTree)>(r1);

        staticinvoke <javassist.compiler.ast.Declarator: javassist.compiler.ast.ASTList append(javassist.compiler.ast.ASTList,javassist.compiler.ast.ASTree)>($r4, r2);

        return $r4;
    }

    public int getType()
    {
        javassist.compiler.ast.Declarator r0;
        int $i0;

        r0 := @this: javassist.compiler.ast.Declarator;

        $i0 = r0.<javassist.compiler.ast.Declarator: int varType>;

        return $i0;
    }

    public int getArrayDim()
    {
        javassist.compiler.ast.Declarator r0;
        int $i0;

        r0 := @this: javassist.compiler.ast.Declarator;

        $i0 = r0.<javassist.compiler.ast.Declarator: int arrayDim>;

        return $i0;
    }

    public void addArrayDim(int)
    {
        javassist.compiler.ast.Declarator r0;
        int i0, $i1, $i2;

        r0 := @this: javassist.compiler.ast.Declarator;

        i0 := @parameter0: int;

        $i1 = r0.<javassist.compiler.ast.Declarator: int arrayDim>;

        $i2 = $i1 + i0;

        r0.<javassist.compiler.ast.Declarator: int arrayDim> = $i2;

        return;
    }

    public java.lang.String getClassName()
    {
        javassist.compiler.ast.Declarator r0;
        java.lang.String $r1;

        r0 := @this: javassist.compiler.ast.Declarator;

        $r1 = r0.<javassist.compiler.ast.Declarator: java.lang.String qualifiedClass>;

        return $r1;
    }

    public void setClassName(java.lang.String)
    {
        javassist.compiler.ast.Declarator r0;
        java.lang.String r1;

        r0 := @this: javassist.compiler.ast.Declarator;

        r1 := @parameter0: java.lang.String;

        r0.<javassist.compiler.ast.Declarator: java.lang.String qualifiedClass> = r1;

        return;
    }

    public javassist.compiler.ast.Symbol getVariable()
    {
        javassist.compiler.ast.Declarator r0;
        javassist.compiler.ast.ASTree $r1;
        javassist.compiler.ast.Symbol $r2;

        r0 := @this: javassist.compiler.ast.Declarator;

        $r1 = virtualinvoke r0.<javassist.compiler.ast.Declarator: javassist.compiler.ast.ASTree getLeft()>();

        $r2 = (javassist.compiler.ast.Symbol) $r1;

        return $r2;
    }

    public void setVariable(javassist.compiler.ast.Symbol)
    {
        javassist.compiler.ast.Declarator r0;
        javassist.compiler.ast.Symbol r1;

        r0 := @this: javassist.compiler.ast.Declarator;

        r1 := @parameter0: javassist.compiler.ast.Symbol;

        virtualinvoke r0.<javassist.compiler.ast.Declarator: void setLeft(javassist.compiler.ast.ASTree)>(r1);

        return;
    }

    public javassist.compiler.ast.ASTree getInitializer()
    {
        javassist.compiler.ast.Declarator r0;
        javassist.compiler.ast.ASTList r1;
        javassist.compiler.ast.ASTree $r2;

        r0 := @this: javassist.compiler.ast.Declarator;

        r1 = virtualinvoke r0.<javassist.compiler.ast.Declarator: javassist.compiler.ast.ASTList tail()>();

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        return $r2;

     label1:
        return null;
    }

    public void setLocalVar(int)
    {
        javassist.compiler.ast.Declarator r0;
        int i0;

        r0 := @this: javassist.compiler.ast.Declarator;

        i0 := @parameter0: int;

        r0.<javassist.compiler.ast.Declarator: int localVar> = i0;

        return;
    }

    public int getLocalVar()
    {
        javassist.compiler.ast.Declarator r0;
        int $i0;

        r0 := @this: javassist.compiler.ast.Declarator;

        $i0 = r0.<javassist.compiler.ast.Declarator: int localVar>;

        return $i0;
    }

    public java.lang.String getTag()
    {
        javassist.compiler.ast.Declarator r0;

        r0 := @this: javassist.compiler.ast.Declarator;

        return "decl";
    }

    public void accept(javassist.compiler.ast.Visitor) throws javassist.compiler.CompileError
    {
        javassist.compiler.ast.Declarator r0;
        javassist.compiler.ast.Visitor r1;

        r0 := @this: javassist.compiler.ast.Declarator;

        r1 := @parameter0: javassist.compiler.ast.Visitor;

        virtualinvoke r1.<javassist.compiler.ast.Visitor: void atDeclarator(javassist.compiler.ast.Declarator)>(r0);

        return;
    }

    public static java.lang.String astToClassName(javassist.compiler.ast.ASTList, char)
    {
        javassist.compiler.ast.ASTList r0;
        char c0;
        java.lang.StringBuffer $r2;
        java.lang.String $r3;

        r0 := @parameter0: javassist.compiler.ast.ASTList;

        c0 := @parameter1: char;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        staticinvoke <javassist.compiler.ast.Declarator: void astToClassName(java.lang.StringBuffer,javassist.compiler.ast.ASTList,char)>($r2, r0, c0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private static void astToClassName(java.lang.StringBuffer, javassist.compiler.ast.ASTList, char)
    {
        java.lang.StringBuffer r0;
        char c0;
        javassist.compiler.ast.ASTree r1;
        boolean $z0, $z1;
        javassist.compiler.ast.ASTList $r3, r7;
        javassist.compiler.ast.Symbol $r4;
        java.lang.String $r5;

        r0 := @parameter0: java.lang.StringBuffer;

        r7 := @parameter1: javassist.compiler.ast.ASTList;

        c0 := @parameter2: char;

     label1:
        r1 = virtualinvoke r7.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTree head()>();

        $z0 = r1 instanceof javassist.compiler.ast.Symbol;

        if $z0 == 0 goto label2;

        $r4 = (javassist.compiler.ast.Symbol) r1;

        $r5 = virtualinvoke $r4.<javassist.compiler.ast.Symbol: java.lang.String get()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        goto label3;

     label2:
        $z1 = r1 instanceof javassist.compiler.ast.ASTList;

        if $z1 == 0 goto label3;

        $r3 = (javassist.compiler.ast.ASTList) r1;

        staticinvoke <javassist.compiler.ast.Declarator: void astToClassName(java.lang.StringBuffer,javassist.compiler.ast.ASTList,char)>(r0, $r3, c0);

     label3:
        r7 = virtualinvoke r7.<javassist.compiler.ast.ASTList: javassist.compiler.ast.ASTList tail()>();

        if r7 != null goto label4;

        goto label5;

     label4:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        goto label1;

     label5:
        return;
    }

    public static void <clinit>()
    {
        <javassist.compiler.ast.Declarator: long serialVersionUID> = 1L;

        return;
    }
}
