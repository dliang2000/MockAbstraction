public class org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest extends org.apache.flink.api.common.typeutils.SerializerTestBase
{
    private org.apache.flink.api.common.typeinfo.TypeInformation type;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest r0;
        org.apache.flink.api.common.typeinfo.TypeInformation $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.SerializerTestBase: void <init>()>();

        $r1 = staticinvoke <org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation getForClass(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/SubclassFromInterfaceSerializerTest$TestUserInterface;");

        r0.<org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest: org.apache.flink.api.common.typeinfo.TypeInformation type> = $r1;

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r2;
        org.apache.flink.api.common.ExecutionConfig $r3;
        org.apache.flink.api.common.typeinfo.TypeInformation $r4;
        boolean $z0, $z1;
        java.lang.AssertionError $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest;

        $r3 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r3.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        virtualinvoke $r3.<org.apache.flink.api.common.ExecutionConfig: void registerPojoType(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/SubclassFromInterfaceSerializerTest$TestUserClass2;");

        $r4 = r0.<org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest: org.apache.flink.api.common.typeinfo.TypeInformation type>;

        r2 = virtualinvoke $r4.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>($r3);

        $z0 = <org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r2 instanceof org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer;

        if $z1 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        return r2;
    }

    protected int getLength()
    {
        org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest;

        return -1;
    }

    protected java.lang.Class getTypeClass()
    {
        org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest;

        return class "Lorg/apache/flink/api/java/typeutils/runtime/SubclassFromInterfaceSerializerTest$TestUserInterface;";
    }

    protected org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest$TestUserInterface[] getTestData()
    {
        org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest r0;
        java.util.Random $r2;
        org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest$TestUserInterface[] $r3;
        org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest$TestUserClass1 $r4;
        int $i0, $i2;
        long $l1;
        org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest$TestUserClass2 $r5;
        float $f0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(874597969123412341L);

        $r3 = newarray (org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest$TestUserInterface)[2];

        $r4 = new org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest$TestUserClass1;

        $i0 = virtualinvoke $r2.<java.util.Random: int nextInt()>();

        $l1 = virtualinvoke $r2.<java.util.Random: long nextLong()>();

        specialinvoke $r4.<org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest$TestUserClass1: void <init>(int,java.lang.String,long)>($i0, "foo", $l1);

        $r3[0] = $r4;

        $r5 = new org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest$TestUserClass2;

        $i2 = virtualinvoke $r2.<java.util.Random: int nextInt()>();

        $f0 = virtualinvoke $r2.<java.util.Random: float nextFloat()>();

        specialinvoke $r5.<org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest$TestUserClass2: void <init>(int,java.lang.String,float)>($i2, "bar", $f0);

        $r3[1] = $r5;

        return $r3;
    }

    public void testInstantiate()
    {
        org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest;

        return;
    }

    protected volatile java.lang.Object[] getTestData()
    {
        org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest r0;
        org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest$TestUserInterface[] $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest: org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest$TestUserInterface[] getTestData()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/flink/api/java/typeutils/runtime/SubclassFromInterfaceSerializerTest;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.flink.api.java.typeutils.runtime.SubclassFromInterfaceSerializerTest: boolean $assertionsDisabled> = $z1;

        return;
    }
}
