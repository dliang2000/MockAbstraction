public class org.hamcrest.StringDescription extends org.hamcrest.BaseDescription
{
    private final java.lang.Appendable out;

    public void <init>()
    {
        org.hamcrest.StringDescription r0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.hamcrest.StringDescription;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        specialinvoke r0.<org.hamcrest.StringDescription: void <init>(java.lang.Appendable)>($r1);

        return;
    }

    public void <init>(java.lang.Appendable)
    {
        org.hamcrest.StringDescription r0;
        java.lang.Appendable r1;

        r0 := @this: org.hamcrest.StringDescription;

        r1 := @parameter0: java.lang.Appendable;

        specialinvoke r0.<org.hamcrest.BaseDescription: void <init>()>();

        r0.<org.hamcrest.StringDescription: java.lang.Appendable out> = r1;

        return;
    }

    public static java.lang.String toString(org.hamcrest.SelfDescribing)
    {
        org.hamcrest.SelfDescribing r0;
        org.hamcrest.StringDescription $r1;
        org.hamcrest.Description $r2;
        java.lang.String $r3;

        r0 := @parameter0: org.hamcrest.SelfDescribing;

        $r1 = new org.hamcrest.StringDescription;

        specialinvoke $r1.<org.hamcrest.StringDescription: void <init>()>();

        $r2 = virtualinvoke $r1.<org.hamcrest.StringDescription: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String asString(org.hamcrest.SelfDescribing)
    {
        org.hamcrest.SelfDescribing r0;
        java.lang.String $r1;

        r0 := @parameter0: org.hamcrest.SelfDescribing;

        $r1 = staticinvoke <org.hamcrest.StringDescription: java.lang.String toString(org.hamcrest.SelfDescribing)>(r0);

        return $r1;
    }

    protected void append(java.lang.String)
    {
        org.hamcrest.StringDescription r0;
        java.lang.String r1;
        java.lang.Appendable $r3;
        java.io.IOException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: org.hamcrest.StringDescription;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<org.hamcrest.StringDescription: java.lang.Appendable out>;

        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not write description", $r5);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void append(char)
    {
        org.hamcrest.StringDescription r0;
        char c0;
        java.lang.Appendable $r2;
        java.io.IOException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: org.hamcrest.StringDescription;

        c0 := @parameter0: char;

     label1:
        $r2 = r0.<org.hamcrest.StringDescription: java.lang.Appendable out>;

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(char)>(c0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not write description", $r4);

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        org.hamcrest.StringDescription r0;
        java.lang.Appendable $r1;
        java.lang.String $r2;

        r0 := @this: org.hamcrest.StringDescription;

        $r1 = r0.<org.hamcrest.StringDescription: java.lang.Appendable out>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
