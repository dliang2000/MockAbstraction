public abstract class jdk.internal.org.objectweb.asm.FieldVisitor extends java.lang.Object
{
    protected final int api;
    protected jdk.internal.org.objectweb.asm.FieldVisitor fv;

    public void <init>(int)
    {
        jdk.internal.org.objectweb.asm.FieldVisitor r0;
        int i0;

        r0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        i0 := @parameter0: int;

        specialinvoke r0.<jdk.internal.org.objectweb.asm.FieldVisitor: void <init>(int,jdk.internal.org.objectweb.asm.FieldVisitor)>(i0, null);

        return;
    }

    public void <init>(int, jdk.internal.org.objectweb.asm.FieldVisitor)
    {
        jdk.internal.org.objectweb.asm.FieldVisitor r0, r1;
        int i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: jdk.internal.org.objectweb.asm.FieldVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 == 262144 goto label1;

        if i0 == 327680 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<jdk.internal.org.objectweb.asm.FieldVisitor: int api> = i0;

        r0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv> = r1;

        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.FieldVisitor r0, $r2, $r3;
        java.lang.String r1;
        boolean z0;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $r4;

        r0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        if $r2 == null goto label1;

        $r3 = r0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        $r4 = virtualinvoke $r3.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>(r1, z0);

        return $r4;

     label1:
        return null;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.FieldVisitor r0, $r3, $r4;
        int i0, $i1;
        jdk.internal.org.objectweb.asm.TypePath r1;
        java.lang.String r2;
        boolean z0;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $i1 = r0.<jdk.internal.org.objectweb.asm.FieldVisitor: int api>;

        if $i1 >= 327680 goto label1;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>()>();

        throw $r6;

     label1:
        $r3 = r0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        if $r3 == null goto label2;

        $r4 = r0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        $r5 = virtualinvoke $r4.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>(i0, r1, r2, z0);

        return $r5;

     label2:
        return null;
    }

    public void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)
    {
        jdk.internal.org.objectweb.asm.FieldVisitor r0, $r2, $r3;
        jdk.internal.org.objectweb.asm.Attribute r1;

        r0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        r1 := @parameter0: jdk.internal.org.objectweb.asm.Attribute;

        $r2 = r0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        if $r2 == null goto label1;

        $r3 = r0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        virtualinvoke $r3.<jdk.internal.org.objectweb.asm.FieldVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(r1);

     label1:
        return;
    }

    public void visitEnd()
    {
        jdk.internal.org.objectweb.asm.FieldVisitor r0, $r1, $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.FieldVisitor;

        $r1 = r0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        if $r1 == null goto label1;

        $r2 = r0.<jdk.internal.org.objectweb.asm.FieldVisitor: jdk.internal.org.objectweb.asm.FieldVisitor fv>;

        virtualinvoke $r2.<jdk.internal.org.objectweb.asm.FieldVisitor: void visitEnd()>();

     label1:
        return;
    }
}
