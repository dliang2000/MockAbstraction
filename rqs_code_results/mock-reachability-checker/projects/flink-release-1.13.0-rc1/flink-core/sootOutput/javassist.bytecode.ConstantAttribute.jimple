public class javassist.bytecode.ConstantAttribute extends javassist.bytecode.AttributeInfo
{
    public static final java.lang.String tag;

    void <init>(javassist.bytecode.ConstPool, int, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.ConstantAttribute r0;
        javassist.bytecode.ConstPool r1;
        int i0;
        java.io.DataInputStream r2;

        r0 := @this: javassist.bytecode.ConstantAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.DataInputStream;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r1, i0, r2);

        return;
    }

    public void <init>(javassist.bytecode.ConstPool, int)
    {
        javassist.bytecode.ConstantAttribute r0;
        javassist.bytecode.ConstPool r1;
        int i0, $i1;
        byte[] r2;
        byte $b2, $b3;

        r0 := @this: javassist.bytecode.ConstantAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String)>(r1, "ConstantValue");

        r2 = newarray (byte)[2];

        $i1 = i0 >>> 8;

        $b2 = (byte) $i1;

        r2[0] = $b2;

        $b3 = (byte) i0;

        r2[1] = $b3;

        virtualinvoke r0.<javassist.bytecode.ConstantAttribute: void set(byte[])>(r2);

        return;
    }

    public int getConstantValue()
    {
        javassist.bytecode.ConstantAttribute r0;
        byte[] $r1;
        int $i0;

        r0 := @this: javassist.bytecode.ConstantAttribute;

        $r1 = virtualinvoke r0.<javassist.bytecode.ConstantAttribute: byte[] get()>();

        $i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r1, 0);

        return $i0;
    }

    public javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.ConstantAttribute r0, $r4;
        javassist.bytecode.ConstPool r1, $r3;
        java.util.Map r2;
        int i0, $i1;

        r0 := @this: javassist.bytecode.ConstantAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstantAttribute: javassist.bytecode.ConstPool getConstPool()>();

        $i1 = virtualinvoke r0.<javassist.bytecode.ConstantAttribute: int getConstantValue()>();

        i0 = virtualinvoke $r3.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>($i1, r1, r2);

        $r4 = new javassist.bytecode.ConstantAttribute;

        specialinvoke $r4.<javassist.bytecode.ConstantAttribute: void <init>(javassist.bytecode.ConstPool,int)>(r1, i0);

        return $r4;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.ConstantAttribute: java.lang.String tag> = "ConstantValue";

        return;
    }
}
