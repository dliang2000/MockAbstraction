class javassist.util.proxy.SecurityActions$3 extends java.lang.Object implements java.security.PrivilegedExceptionAction
{
    final java.lang.Class val$clazz;
    final java.lang.String val$name;
    final java.lang.Class[] val$params;

    void <init>(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        javassist.util.proxy.SecurityActions$3 r0;
        java.lang.Class r1;
        java.lang.String r2;
        java.lang.Class[] r3;

        r0 := @this: javassist.util.proxy.SecurityActions$3;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class[];

        r0.<javassist.util.proxy.SecurityActions$3: java.lang.Class val$clazz> = r1;

        r0.<javassist.util.proxy.SecurityActions$3: java.lang.String val$name> = r2;

        r0.<javassist.util.proxy.SecurityActions$3: java.lang.Class[] val$params> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.invoke.MethodHandle run() throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.SecurityException
    {
        javassist.util.proxy.SecurityActions$3 r0;
        java.lang.reflect.Method r1;
        java.lang.invoke.MethodHandle r2;
        java.lang.Class[] $r3;
        java.lang.String $r4;
        java.lang.Class $r5;
        java.lang.invoke.MethodHandles$Lookup $r6;

        r0 := @this: javassist.util.proxy.SecurityActions$3;

        $r5 = r0.<javassist.util.proxy.SecurityActions$3: java.lang.Class val$clazz>;

        $r4 = r0.<javassist.util.proxy.SecurityActions$3: java.lang.String val$name>;

        $r3 = r0.<javassist.util.proxy.SecurityActions$3: java.lang.Class[] val$params>;

        r1 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r4, $r3);

        virtualinvoke r1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r6 = staticinvoke <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup lookup()>();

        r2 = virtualinvoke $r6.<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle unreflect(java.lang.reflect.Method)>(r1);

        virtualinvoke r1.<java.lang.reflect.Method: void setAccessible(boolean)>(0);

        return r2;
    }

    public volatile java.lang.Object run() throws java.lang.Exception
    {
        javassist.util.proxy.SecurityActions$3 r0;
        java.lang.invoke.MethodHandle $r1;

        r0 := @this: javassist.util.proxy.SecurityActions$3;

        $r1 = virtualinvoke r0.<javassist.util.proxy.SecurityActions$3: java.lang.invoke.MethodHandle run()>();

        return $r1;
    }
}
