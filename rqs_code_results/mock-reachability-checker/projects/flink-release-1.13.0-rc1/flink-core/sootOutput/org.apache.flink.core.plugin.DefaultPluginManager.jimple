public class org.apache.flink.core.plugin.DefaultPluginManager extends java.lang.Object implements org.apache.flink.core.plugin.PluginManager
{
    private final java.lang.ClassLoader parentClassLoader;
    private final java.util.Collection pluginDescriptors;
    private final java.lang.String[] alwaysParentFirstPatterns;

    void <init>()
    {
        org.apache.flink.core.plugin.DefaultPluginManager r0;

        r0 := @this: org.apache.flink.core.plugin.DefaultPluginManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.lang.ClassLoader parentClassLoader> = null;

        r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.util.Collection pluginDescriptors> = null;

        r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.lang.String[] alwaysParentFirstPatterns> = null;

        return;
    }

    public void <init>(java.util.Collection, java.lang.String[])
    {
        org.apache.flink.core.plugin.DefaultPluginManager r0;
        java.util.Collection r1;
        java.lang.String[] r2;
        java.lang.Class $r3;
        java.lang.ClassLoader $r4;

        r0 := @this: org.apache.flink.core.plugin.DefaultPluginManager;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.lang.String[];

        $r3 = class "Lorg/apache/flink/core/plugin/DefaultPluginManager;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke r0.<org.apache.flink.core.plugin.DefaultPluginManager: void <init>(java.util.Collection,java.lang.ClassLoader,java.lang.String[])>(r1, $r4, r2);

        return;
    }

    public void <init>(java.util.Collection, java.lang.ClassLoader, java.lang.String[])
    {
        org.apache.flink.core.plugin.DefaultPluginManager r0;
        java.util.Collection r1;
        java.lang.ClassLoader r2;
        java.lang.String[] r3;

        r0 := @this: org.apache.flink.core.plugin.DefaultPluginManager;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.lang.ClassLoader;

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.util.Collection pluginDescriptors> = r1;

        r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.lang.ClassLoader parentClassLoader> = r2;

        r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.lang.String[] alwaysParentFirstPatterns> = r3;

        return;
    }

    public java.util.Iterator load(java.lang.Class)
    {
        org.apache.flink.core.plugin.DefaultPluginManager r0;
        java.lang.Class r1;
        java.util.Iterator r3, $r9, $r10, $r14;
        org.apache.flink.core.plugin.PluginDescriptor r4;
        org.apache.flink.core.plugin.PluginLoader r5;
        java.util.ArrayList $r6;
        java.util.Collection $r7, $r8;
        int $i0;
        boolean $z0;
        java.lang.Object $r11;
        java.lang.String[] $r12;
        java.lang.ClassLoader $r13;

        r0 := @this: org.apache.flink.core.plugin.DefaultPluginManager;

        r1 := @parameter0: java.lang.Class;

        $r6 = new java.util.ArrayList;

        $r7 = r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.util.Collection pluginDescriptors>;

        $i0 = interfaceinvoke $r7.<java.util.Collection: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i0);

        $r8 = r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.util.Collection pluginDescriptors>;

        r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.flink.core.plugin.PluginDescriptor) $r11;

        $r13 = r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.lang.ClassLoader parentClassLoader>;

        $r12 = r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.lang.String[] alwaysParentFirstPatterns>;

        r5 = staticinvoke <org.apache.flink.core.plugin.PluginLoader: org.apache.flink.core.plugin.PluginLoader create(org.apache.flink.core.plugin.PluginDescriptor,java.lang.ClassLoader,java.lang.String[])>(r4, $r13, $r12);

        $r14 = virtualinvoke r5.<org.apache.flink.core.plugin.PluginLoader: java.util.Iterator load(java.lang.Class)>(r1);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        goto label1;

     label2:
        $r9 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

        $r10 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Iterators: java.util.Iterator concat(java.util.Iterator)>($r9);

        return $r10;
    }

    public java.lang.String toString()
    {
        org.apache.flink.core.plugin.DefaultPluginManager r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r11, $r12;
        java.lang.ClassLoader $r3;
        java.util.Collection $r6;
        java.lang.String[] $r9;
        java.lang.String $r10, $r13;

        r0 := @this: org.apache.flink.core.plugin.DefaultPluginManager;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PluginManager{parentClassLoader=");

        $r3 = r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.lang.ClassLoader parentClassLoader>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pluginDescriptors=");

        $r6 = r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.util.Collection pluginDescriptors>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", alwaysParentFirstPatterns=");

        $r9 = r0.<org.apache.flink.core.plugin.DefaultPluginManager: java.lang.String[] alwaysParentFirstPatterns>;

        $r10 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }
}
