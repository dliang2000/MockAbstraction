public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected java.util.Map _overrides;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value _defaultInclusion;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value _defaultSetterInfo;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker;
    protected java.lang.Boolean _defaultMergeable;
    protected java.lang.Boolean _defaultLeniency;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value empty()>();

        $r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value empty()>();

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std defaultInstance()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void <init>(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker,java.lang.Boolean,java.lang.Boolean)>(null, $r1, $r2, $r3, null, null);

        return;
    }

    protected void <init>(java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker, java.lang.Boolean, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker r4;
        java.lang.Boolean r5, r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker;

        r5 := @parameter4: java.lang.Boolean;

        r6 := @parameter5: java.lang.Boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _overrides> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value _defaultInclusion> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value _defaultSetterInfo> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker> = r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.lang.Boolean _defaultMergeable> = r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.lang.Boolean _defaultLeniency> = r6;

        return;
    }

    protected void <init>(java.util.Map, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        java.util.Map r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker r4;
        java.lang.Boolean r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker;

        r5 := @parameter4: java.lang.Boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void <init>(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker,java.lang.Boolean,java.lang.Boolean)>(r1, r2, r3, r4, r5, null);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides copy()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0, $r6;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        java.util.Map $r3, $r4, r18;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Boolean $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value $r11;
        java.lang.Object $r12, $r13, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride $r15, $r16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _overrides>;

        if $r3 != null goto label1;

        r18 = null;

        goto label3;

     label1:
        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _newMap()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _overrides>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r12;

        $r13 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride) $r14;

        $r16 = virtualinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride copy()>();

        interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r16);

        goto label2;

     label3:
        $r6 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value _defaultInclusion>;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value _defaultSetterInfo>;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker>;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.lang.Boolean _defaultMergeable>;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.lang.Boolean _defaultLeniency>;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: void <init>(java.util.Map,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker,java.lang.Boolean,java.lang.Boolean)>(r18, $r11, $r10, $r9, $r8, $r7);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride findOverride(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        java.lang.Class r1;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _overrides>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _overrides>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride) $r4;

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride findOrCreateOverride(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        java.lang.Class r1;
        java.util.Map $r2, $r3, $r6, $r8;
        java.lang.Object $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride $r5, r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _overrides>;

        if $r2 != null goto label1;

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _newMap()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _overrides> = $r8;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _overrides>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride) $r4;

        if r9 != null goto label2;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MutableConfigOverride: void <init>()>();

        r9 = $r5;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _overrides>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label2:
        return r9;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatDefaults(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value r3, $r6, $r7, $r11;
        java.util.Map $r4, $r8;
        java.lang.Boolean $r5, $r10, $r12;
        boolean $z0, $z1;
        java.lang.Object $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        r1 := @parameter0: java.lang.Class;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _overrides>;

        if $r4 == null goto label2;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.util.Map _overrides>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride) $r9;

        if r2 == null goto label2;

        r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverride: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value getFormat()>();

        if r3 == null goto label2;

        $z1 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: boolean hasLenient()>();

        if $z1 != 0 goto label1;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.lang.Boolean _defaultLeniency>;

        $r11 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value withLenient(java.lang.Boolean)>($r10);

        return $r11;

     label1:
        return r3;

     label2:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.lang.Boolean _defaultLeniency>;

        if $r12 != null goto label3;

        $r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value empty()>();

        return $r7;

     label3:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.lang.Boolean _defaultLeniency>;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value forLeniency(boolean)>($z0);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultInclusion()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value _defaultInclusion>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value getDefaultSetterInfo()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value _defaultSetterInfo>;

        return $r1;
    }

    public java.lang.Boolean getDefaultMergeable()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        java.lang.Boolean $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.lang.Boolean _defaultMergeable>;

        return $r1;
    }

    public java.lang.Boolean getDefaultLeniency()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        java.lang.Boolean $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.lang.Boolean _defaultLeniency>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibility()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker>;

        return $r1;
    }

    public void setDefaultInclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value _defaultInclusion> = r1;

        return;
    }

    public void setDefaultSetterInfo(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonSetter$Value _defaultSetterInfo> = r1;

        return;
    }

    public void setDefaultMergeable(java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        java.lang.Boolean r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        r1 := @parameter0: java.lang.Boolean;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.lang.Boolean _defaultMergeable> = r1;

        return;
    }

    public void setDefaultLeniency(java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        java.lang.Boolean r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        r1 := @parameter0: java.lang.Boolean;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: java.lang.Boolean _defaultLeniency> = r1;

        return;
    }

    public void setDefaultVisibility(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker> = r1;

        return;
    }

    protected java.util.Map _newMap()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ConfigOverrides: long serialVersionUID> = 1L;

        return;
    }
}
