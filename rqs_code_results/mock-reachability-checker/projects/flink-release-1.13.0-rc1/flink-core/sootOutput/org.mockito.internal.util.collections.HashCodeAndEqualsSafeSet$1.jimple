class org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1 extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator iterator;
    final org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet this$0;

    void <init>(org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet)
    {
        org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1 r0;
        org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet r1, $r2;
        java.util.HashSet $r3;
        java.util.Iterator $r4;

        r0 := @this: org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1;

        r1 := @parameter0: org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet;

        r0.<org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1: org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1: org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet this$0>;

        $r3 = staticinvoke <org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet: java.util.HashSet access$000(org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet)>($r2);

        $r4 = virtualinvoke $r3.<java.util.HashSet: java.util.Iterator iterator()>();

        r0.<org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1: java.util.Iterator iterator> = $r4;

        return;
    }

    public boolean hasNext()
    {
        org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1;

        $r1 = r0.<org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1 r0;
        java.util.Iterator $r1;
        java.lang.Object $r2, $r4;
        org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper $r3;

        r0 := @this: org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1;

        $r1 = r0.<org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1: java.util.Iterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper) $r2;

        $r4 = virtualinvoke $r3.<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper: java.lang.Object get()>();

        return $r4;
    }

    public void remove()
    {
        org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1 r0;
        java.util.Iterator $r1;

        r0 := @this: org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1;

        $r1 = r0.<org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1: java.util.Iterator iterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }
}
