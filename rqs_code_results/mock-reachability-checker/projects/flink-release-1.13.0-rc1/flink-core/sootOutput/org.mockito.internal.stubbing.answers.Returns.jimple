public class org.mockito.internal.stubbing.answers.Returns extends java.lang.Object implements org.mockito.stubbing.Answer, org.mockito.stubbing.ValidableAnswer, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.Object value;

    public void <init>(java.lang.Object)
    {
        org.mockito.internal.stubbing.answers.Returns r0;
        java.lang.Object r1;

        r0 := @this: org.mockito.internal.stubbing.answers.Returns;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mockito.internal.stubbing.answers.Returns: java.lang.Object value> = r1;

        return;
    }

    public java.lang.Object answer(org.mockito.invocation.InvocationOnMock) throws java.lang.Throwable
    {
        org.mockito.internal.stubbing.answers.Returns r0;
        org.mockito.invocation.InvocationOnMock r1;
        java.lang.Object $r2;

        r0 := @this: org.mockito.internal.stubbing.answers.Returns;

        r1 := @parameter0: org.mockito.invocation.InvocationOnMock;

        $r2 = r0.<org.mockito.internal.stubbing.answers.Returns: java.lang.Object value>;

        return $r2;
    }

    public void validateFor(org.mockito.invocation.InvocationOnMock)
    {
        org.mockito.internal.stubbing.answers.Returns r0;
        org.mockito.invocation.InvocationOnMock r1;
        org.mockito.internal.stubbing.answers.InvocationInfo $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Class $r4;
        java.lang.String $r5, $r6, $r7, $r9, $r10, $r12;
        org.mockito.exceptions.base.MockitoException $r8, $r11, $r13;

        r0 := @this: org.mockito.internal.stubbing.answers.Returns;

        r1 := @parameter0: org.mockito.invocation.InvocationOnMock;

        $r3 = new org.mockito.internal.stubbing.answers.InvocationInfo;

        specialinvoke $r3.<org.mockito.internal.stubbing.answers.InvocationInfo: void <init>(org.mockito.invocation.InvocationOnMock)>(r1);

        $z0 = virtualinvoke $r3.<org.mockito.internal.stubbing.answers.InvocationInfo: boolean isVoid()>();

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke $r3.<org.mockito.internal.stubbing.answers.InvocationInfo: java.lang.String getMethodName()>();

        $r13 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException cannotStubVoidMethodWithAReturnValue(java.lang.String)>($r12);

        throw $r13;

     label1:
        $z1 = specialinvoke r0.<org.mockito.internal.stubbing.answers.Returns: boolean returnsNull()>();

        if $z1 == 0 goto label2;

        $z4 = virtualinvoke $r3.<org.mockito.internal.stubbing.answers.InvocationInfo: boolean returnsPrimitive()>();

        if $z4 == 0 goto label2;

        $r9 = virtualinvoke $r3.<org.mockito.internal.stubbing.answers.InvocationInfo: java.lang.String printMethodReturnType()>();

        $r10 = virtualinvoke $r3.<org.mockito.internal.stubbing.answers.InvocationInfo: java.lang.String getMethodName()>();

        $r11 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException wrongTypeOfReturnValue(java.lang.String,java.lang.String,java.lang.String)>($r9, "null", $r10);

        throw $r11;

     label2:
        $z2 = specialinvoke r0.<org.mockito.internal.stubbing.answers.Returns: boolean returnsNull()>();

        if $z2 != 0 goto label3;

        $r4 = specialinvoke r0.<org.mockito.internal.stubbing.answers.Returns: java.lang.Class returnType()>();

        $z3 = virtualinvoke $r3.<org.mockito.internal.stubbing.answers.InvocationInfo: boolean isValidReturnType(java.lang.Class)>($r4);

        if $z3 != 0 goto label3;

        $r5 = virtualinvoke $r3.<org.mockito.internal.stubbing.answers.InvocationInfo: java.lang.String printMethodReturnType()>();

        $r6 = specialinvoke r0.<org.mockito.internal.stubbing.answers.Returns: java.lang.String printReturnType()>();

        $r7 = virtualinvoke $r3.<org.mockito.internal.stubbing.answers.InvocationInfo: java.lang.String getMethodName()>();

        $r8 = staticinvoke <org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException wrongTypeOfReturnValue(java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r7);

        throw $r8;

     label3:
        return;
    }

    private java.lang.String printReturnType()
    {
        org.mockito.internal.stubbing.answers.Returns r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: org.mockito.internal.stubbing.answers.Returns;

        $r1 = r0.<org.mockito.internal.stubbing.answers.Returns: java.lang.Object value>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r3;
    }

    private java.lang.Class returnType()
    {
        org.mockito.internal.stubbing.answers.Returns r0;
        java.lang.Object $r1;
        java.lang.Class $r2;

        r0 := @this: org.mockito.internal.stubbing.answers.Returns;

        $r1 = r0.<org.mockito.internal.stubbing.answers.Returns: java.lang.Object value>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        return $r2;
    }

    private boolean returnsNull()
    {
        org.mockito.internal.stubbing.answers.Returns r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.mockito.internal.stubbing.answers.Returns;

        $r1 = r0.<org.mockito.internal.stubbing.answers.Returns: java.lang.Object value>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        org.mockito.internal.stubbing.answers.Returns r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Object $r3;
        java.lang.String $r5;

        r0 := @this: org.mockito.internal.stubbing.answers.Returns;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returns: ");

        $r3 = r0.<org.mockito.internal.stubbing.answers.Returns: java.lang.Object value>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <org.mockito.internal.stubbing.answers.Returns: long serialVersionUID> = -6245608253574215396L;

        return;
    }
}
