public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase implements java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver, java.lang.String, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver r2;
        java.lang.String r3;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2, r3, z0, r4);

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1, r2);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer r0, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1, $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty _property>;

        if r1 != $r2 goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r0, r1);

     label2:
        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As WRAPPER_OBJECT>;

        return $r1;
    }

    public java.lang.Object deserializeTypedFromObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public java.lang.Object deserializeTypedFromArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public java.lang.Object deserializeTypedFromScalar(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public java.lang.Object deserializeTypedFromAny(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    protected java.lang.Object _deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        java.lang.String r2, $r12, $r19, $r21, $r29, $r32;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r3;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r4, $r5, $r9, $r10, $r17, $r23, $r24, $r27, r37, $r40, $r41;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r7, $r15, $r25;
        java.lang.Object[] $r8, $r22, $r33;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser $r13, r35;
        java.lang.StringBuilder $r16, $r18, $r20, $r26, $r28, $r30, $r31;
        java.lang.Object $r34, r36, r39;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        r35 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $z0 = virtualinvoke r35.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean canReadTypeId()>();

        if $z0 == 0 goto label1;

        r36 = virtualinvoke r35.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Object getTypeId()>();

        if r36 == null goto label1;

        $r34 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserializeWithNativeTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(r35, r1, r36);

        return $r34;

     label1:
        r37 = virtualinvoke r35.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if r37 != $r4 goto label2;

        $r23 = virtualinvoke r35.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r24 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if $r23 == $r24 goto label3;

        $r25 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType baseType()>();

        $r27 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("need JSON String that contains type id (for subtype of ");

        $r29 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.String baseTypeName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = newarray (java.lang.Object)[0];

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>($r25, $r27, $r32, $r33);

        goto label3;

     label2:
        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken FIELD_NAME>;

        if r37 == $r5 goto label3;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType baseType()>();

        $r17 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("need JSON Object to contain As.WRAPPER_OBJECT type information for class ");

        $r19 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.String baseTypeName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = newarray (java.lang.Object)[0];

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>($r15, $r17, $r21, $r22);

     label3:
        r2 = virtualinvoke r35.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(r1, r2);

        virtualinvoke r35.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: boolean _typeIdVisible>;

        if $z2 == 0 goto label4;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        $z1 = virtualinvoke r35.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean hasToken(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken)>($r10);

        if $z1 == 0 goto label4;

        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer;

        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,boolean)>(null, 0);

        virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeStartObject()>();

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: java.lang.String _typePropertyName>;

        virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeFieldName(java.lang.String)>($r12);

        virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: void writeString(java.lang.String)>(r2);

        virtualinvoke r35.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();

        $r13 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.TokenBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser asParser(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(r35);

        r35 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>(0, $r13, r35);

        virtualinvoke r35.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

     label4:
        r39 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r35, r1);

        $r40 = virtualinvoke r35.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r41 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        if $r40 == $r41 goto label5;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType baseType()>();

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: void reportWrongTokenException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[])>($r7, $r9, "expected closing END_OBJECT after type information and deserialized value", $r8);

     label5:
        return r39;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: long serialVersionUID> = 1L;

        return;
    }
}
