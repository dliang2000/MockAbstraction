public class org.apache.flink.api.common.accumulators.SerializedListAccumulator extends java.lang.Object implements org.apache.flink.api.common.accumulators.Accumulator
{
    private static final long serialVersionUID;
    private java.util.ArrayList localValue;

    public void <init>()
    {
        org.apache.flink.api.common.accumulators.SerializedListAccumulator r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: java.util.ArrayList localValue> = $r1;

        return;
    }

    public void add(java.lang.Object)
    {
        org.apache.flink.api.common.accumulators.SerializedListAccumulator r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void add(java.lang.Object, org.apache.flink.api.common.typeutils.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.api.common.accumulators.SerializedListAccumulator r0;
        java.lang.Object r1;
        org.apache.flink.api.common.typeutils.TypeSerializer r2;
        java.io.ByteArrayOutputStream $r4;
        org.apache.flink.core.memory.DataOutputViewStreamWrapper $r5;
        java.util.ArrayList $r6;
        byte[] $r7;
        java.io.IOException $r8, $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        java.lang.String $r14;

        r0 := @this: org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.api.common.typeutils.TypeSerializer;

     label1:
        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        $r5 = new org.apache.flink.core.memory.DataOutputViewStreamWrapper;

        specialinvoke $r5.<org.apache.flink.core.memory.DataOutputViewStreamWrapper: void <init>(java.io.OutputStream)>($r4);

        virtualinvoke r2.<org.apache.flink.api.common.typeutils.TypeSerializer: void serialize(java.lang.Object,org.apache.flink.core.memory.DataOutputView)>(r1, $r5);

        $r6 = r0.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: java.util.ArrayList localValue>;

        $r7 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to serialize value \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r8);

        throw $r9;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.util.ArrayList getLocalValue()
    {
        org.apache.flink.api.common.accumulators.SerializedListAccumulator r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        $r1 = r0.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: java.util.ArrayList localValue>;

        return $r1;
    }

    public void resetLocal()
    {
        org.apache.flink.api.common.accumulators.SerializedListAccumulator r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        $r1 = r0.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: java.util.ArrayList localValue>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    public void merge(org.apache.flink.api.common.accumulators.Accumulator)
    {
        org.apache.flink.api.common.accumulators.SerializedListAccumulator r0;
        org.apache.flink.api.common.accumulators.Accumulator r1;
        java.util.ArrayList $r2;
        java.io.Serializable $r3;
        java.util.Collection $r4;

        r0 := @this: org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        r1 := @parameter0: org.apache.flink.api.common.accumulators.Accumulator;

        $r2 = r0.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: java.util.ArrayList localValue>;

        $r3 = interfaceinvoke r1.<org.apache.flink.api.common.accumulators.Accumulator: java.io.Serializable getLocalValue()>();

        $r4 = (java.util.Collection) $r3;

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r4);

        return;
    }

    public org.apache.flink.api.common.accumulators.SerializedListAccumulator clone()
    {
        org.apache.flink.api.common.accumulators.SerializedListAccumulator r0, $r2;
        java.util.ArrayList $r3, $r4;

        r0 := @this: org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        $r2 = new org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        specialinvoke $r2.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: void <init>()>();

        $r3 = new java.util.ArrayList;

        $r4 = r0.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: java.util.ArrayList localValue>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r2.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: java.util.ArrayList localValue> = $r3;

        return $r2;
    }

    public static java.util.List deserializeList(java.util.ArrayList, org.apache.flink.api.common.typeutils.TypeSerializer) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.ArrayList r0, $r8;
        org.apache.flink.api.common.typeutils.TypeSerializer r1;
        java.util.Iterator r3;
        byte[] r4;
        java.lang.Object r7, $r9;
        int $i0;
        boolean $z0;
        java.io.ByteArrayInputStream $r10;
        org.apache.flink.core.memory.DataInputViewStreamWrapper $r11;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: org.apache.flink.api.common.typeutils.TypeSerializer;

        $r8 = new java.util.ArrayList;

        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r3 = virtualinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (byte[]) $r9;

        $r10 = new java.io.ByteArrayInputStream;

        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>(r4);

        $r11 = new org.apache.flink.core.memory.DataInputViewStreamWrapper;

        specialinvoke $r11.<org.apache.flink.core.memory.DataInputViewStreamWrapper: void <init>(java.io.InputStream)>($r10);

        r7 = virtualinvoke r1.<org.apache.flink.api.common.typeutils.TypeSerializer: java.lang.Object deserialize(org.apache.flink.core.memory.DataInputView)>($r11);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r7);

        goto label1;

     label2:
        return $r8;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.common.accumulators.SerializedListAccumulator r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.util.ArrayList $r3;
        int $i0;
        java.lang.String $r6;

        r0 := @this: org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SerializedListAccumulator: ");

        $r3 = r0.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: java.util.ArrayList localValue>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elements");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.flink.api.common.accumulators.SerializedListAccumulator r0, $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: org.apache.flink.api.common.accumulators.SerializedListAccumulator clone()>();

        return $r1;
    }

    public volatile org.apache.flink.api.common.accumulators.Accumulator clone()
    {
        org.apache.flink.api.common.accumulators.SerializedListAccumulator r0, $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: org.apache.flink.api.common.accumulators.SerializedListAccumulator clone()>();

        return $r1;
    }

    public volatile java.io.Serializable getLocalValue()
    {
        org.apache.flink.api.common.accumulators.SerializedListAccumulator r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.flink.api.common.accumulators.SerializedListAccumulator;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.accumulators.SerializedListAccumulator: java.util.ArrayList getLocalValue()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.accumulators.SerializedListAccumulator: long serialVersionUID> = 1L;

        return;
    }
}
