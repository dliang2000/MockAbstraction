final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers
{
    private static final long serialVersionUID;
    public static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser instance;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(java.lang.Class)>(class "[I");

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider r2;
        java.lang.Boolean r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider;

        r3 := @parameter2: java.lang.Boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(r1, r2, r3);

        return;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser r0, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider r1;
        java.lang.Boolean r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider;

        r2 := @parameter1: java.lang.Boolean;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(r0, r1, r2);

        return $r3;
    }

    protected int[] _constructEmpty()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser r0;
        int[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        $r1 = newarray (int)[0];

        return $r1;
    }

    public int[] deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder r3;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders $r4;
        java.lang.Object $r5, $r6, $r10, $r14;
        int[] $r7, $r15, r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r8, $r9, $r19, $r21;
        int $i0, $i1, $i2, i3, i4, $i5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider $r11, $r12;
        java.lang.Exception $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 != 0 goto label01;

        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: java.lang.Object handleNonArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r15 = (int[]) $r14;

        return $r15;

     label01:
        $r4 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders()>();

        r3 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder getIntBuilder()>();

        $r5 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder: java.lang.Object resetAndStart()>();

        r18 = (int[]) $r5;

        i3 = 0;

     label02:
        $r19 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r21 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if $r19 == $r21 goto label08;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if $r19 != $r8 goto label03;

        i4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int getIntValue()>();

        goto label06;

     label03:
        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if $r19 != $r9 goto label05;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;

        if $r11 == null goto label04;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;

        interfaceinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        goto label02;

     label04:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        i4 = 0;

        goto label06;

     label05:
        i4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: int _parseIntPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

     label06:
        $i5 = lengthof r18;

        if i3 < $i5 goto label07;

        $r10 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder: java.lang.Object appendCompletedChunk(java.lang.Object,int)>(r18, i3);

        r18 = (int[]) $r10;

        i3 = 0;

     label07:
        $i0 = i3;

        i3 = i3 + 1;

        r18[$i0] = i4;

        goto label02;

     label08:
        goto label10;

     label09:
        $r16 := @caughtexception;

        $i1 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder: int bufferedSize()>();

        $i2 = $i1 + i3;

        $r17 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)>($r16, r18, $i2);

        throw $r17;

     label10:
        $r6 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder: java.lang.Object completeAndClearBuffer(java.lang.Object,int)>(r18, i3);

        $r7 = (int[]) $r6;

        return $r7;

        catch java.lang.Exception from label02 to label08 with label09;
    }

    protected int[] handleSingleElementUnwrapped(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int[] $r3;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = newarray (int)[1];

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: int _parseIntPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r3[0] = $i0;

        return $r3;
    }

    protected int[] _concat(int[], int[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser r0;
        int[] r1, r2, r3;
        int i0, i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        i0 = lengthof r1;

        i1 = lengthof r2;

        $i2 = i0 + i1;

        r3 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r1, $i2);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, i0, i1);

        return r3;
    }

    protected volatile java.lang.Object _constructEmpty()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser r0;
        int[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: int[] _constructEmpty()>();

        return $r1;
    }

    protected volatile java.lang.Object handleSingleElementUnwrapped(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int[] $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: int[] handleSingleElementUnwrapped(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    protected volatile java.lang.Object _concat(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser r0;
        java.lang.Object r1, r2;
        int[] $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (int[]) r1;

        $r3 = (int[]) r2;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: int[] _concat(int[],int[])>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        int[] $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: int[] deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: long serialVersionUID> = 1L;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser instance> = $r0;

        return;
    }
}
