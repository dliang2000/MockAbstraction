public class org.apache.flink.api.common.typeinfo.NothingTypeInfo extends org.apache.flink.api.common.typeinfo.TypeInformation
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        specialinvoke r0.<org.apache.flink.api.common.typeinfo.TypeInformation: void <init>()>();

        return;
    }

    public boolean isBasicType()
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        return 0;
    }

    public boolean isTupleType()
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        return 0;
    }

    public int getArity()
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        return 0;
    }

    public int getTotalFields()
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        return 1;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        return class "Lorg/apache/flink/types/Nothing;";
    }

    public boolean isKeyType()
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        return 0;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0;
        org.apache.flink.api.common.ExecutionConfig r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        r1 := @parameter0: org.apache.flink.api.common.ExecutionConfig;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("The Nothing type cannot have a serializer.");

        throw $r2;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        if $z0 == 0 goto label1;

        r2 = (org.apache.flink.api.common.typeinfo.NothingTypeInfo) r1;

        $z1 = virtualinvoke r2.<org.apache.flink.api.common.typeinfo.NothingTypeInfo: boolean canEqual(java.lang.Object)>(r0);

        return $z1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0;
        java.lang.Class $r1;
        int $i0;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        $r1 = class "Lorg/apache/flink/api/common/typeinfo/NothingTypeInfo;";

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean canEqual(java.lang.Object)
    {
        org.apache.flink.api.common.typeinfo.NothingTypeInfo r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.api.common.typeinfo.NothingTypeInfo;

        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.typeinfo.NothingTypeInfo: long serialVersionUID> = 1L;

        return;
    }
}
