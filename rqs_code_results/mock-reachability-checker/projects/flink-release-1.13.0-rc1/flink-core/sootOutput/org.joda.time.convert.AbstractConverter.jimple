public abstract class org.joda.time.convert.AbstractConverter extends java.lang.Object implements org.joda.time.convert.Converter
{

    protected void <init>()
    {
        org.joda.time.convert.AbstractConverter r0;

        r0 := @this: org.joda.time.convert.AbstractConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public long getInstantMillis(java.lang.Object, org.joda.time.Chronology)
    {
        org.joda.time.convert.AbstractConverter r0;
        java.lang.Object r1;
        org.joda.time.Chronology r2;
        long $l0;

        r0 := @this: org.joda.time.convert.AbstractConverter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.joda.time.Chronology;

        $l0 = staticinvoke <org.joda.time.DateTimeUtils: long currentTimeMillis()>();

        return $l0;
    }

    public org.joda.time.Chronology getChronology(java.lang.Object, org.joda.time.DateTimeZone)
    {
        org.joda.time.convert.AbstractConverter r0;
        java.lang.Object r1;
        org.joda.time.DateTimeZone r2;
        org.joda.time.chrono.ISOChronology $r3;

        r0 := @this: org.joda.time.convert.AbstractConverter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.joda.time.DateTimeZone;

        $r3 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance(org.joda.time.DateTimeZone)>(r2);

        return $r3;
    }

    public org.joda.time.Chronology getChronology(java.lang.Object, org.joda.time.Chronology)
    {
        org.joda.time.convert.AbstractConverter r0;
        java.lang.Object r1;
        org.joda.time.Chronology r2, $r3;

        r0 := @this: org.joda.time.convert.AbstractConverter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.joda.time.Chronology;

        $r3 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getChronology(org.joda.time.Chronology)>(r2);

        return $r3;
    }

    public int[] getPartialValues(org.joda.time.ReadablePartial, java.lang.Object, org.joda.time.Chronology)
    {
        org.joda.time.convert.AbstractConverter r0;
        org.joda.time.ReadablePartial r1;
        java.lang.Object r2;
        org.joda.time.Chronology r3;
        long l0;
        int[] $r4;

        r0 := @this: org.joda.time.convert.AbstractConverter;

        r1 := @parameter0: org.joda.time.ReadablePartial;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.joda.time.Chronology;

        l0 = virtualinvoke r0.<org.joda.time.convert.AbstractConverter: long getInstantMillis(java.lang.Object,org.joda.time.Chronology)>(r2, r3);

        $r4 = virtualinvoke r3.<org.joda.time.Chronology: int[] get(org.joda.time.ReadablePartial,long)>(r1, l0);

        return $r4;
    }

    public int[] getPartialValues(org.joda.time.ReadablePartial, java.lang.Object, org.joda.time.Chronology, org.joda.time.format.DateTimeFormatter)
    {
        org.joda.time.convert.AbstractConverter r0;
        org.joda.time.ReadablePartial r1;
        java.lang.Object r2;
        org.joda.time.Chronology r3;
        org.joda.time.format.DateTimeFormatter r4;
        int[] $r5;

        r0 := @this: org.joda.time.convert.AbstractConverter;

        r1 := @parameter0: org.joda.time.ReadablePartial;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.joda.time.Chronology;

        r4 := @parameter3: org.joda.time.format.DateTimeFormatter;

        $r5 = virtualinvoke r0.<org.joda.time.convert.AbstractConverter: int[] getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology)>(r1, r2, r3);

        return $r5;
    }

    public org.joda.time.PeriodType getPeriodType(java.lang.Object)
    {
        org.joda.time.convert.AbstractConverter r0;
        java.lang.Object r1;
        org.joda.time.PeriodType $r2;

        r0 := @this: org.joda.time.convert.AbstractConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        return $r2;
    }

    public boolean isReadableInterval(java.lang.Object, org.joda.time.Chronology)
    {
        org.joda.time.convert.AbstractConverter r0;
        java.lang.Object r1;
        org.joda.time.Chronology r2;

        r0 := @this: org.joda.time.convert.AbstractConverter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.joda.time.Chronology;

        return 0;
    }

    public java.lang.String toString()
    {
        org.joda.time.convert.AbstractConverter r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.Class $r3, $r4;
        java.lang.String $r7, $r8;

        r0 := @this: org.joda.time.convert.AbstractConverter;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converter[");

        $r3 = virtualinvoke r0.<org.joda.time.convert.AbstractConverter: java.lang.Class getSupportedType()>();

        if $r3 != null goto label1;

        $r8 = "null";

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.joda.time.convert.AbstractConverter: java.lang.Class getSupportedType()>();

        $r8 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

     label2:
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
