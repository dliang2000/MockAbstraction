class org.joda.time.format.PeriodFormatterBuilder$Separator extends java.lang.Object implements org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser
{
    private final java.lang.String iText;
    private final java.lang.String iFinalText;
    private final java.lang.String[] iParsedForms;
    private final boolean iUseBefore;
    private final boolean iUseAfter;
    private final org.joda.time.format.PeriodPrinter iBeforePrinter;
    private volatile org.joda.time.format.PeriodPrinter iAfterPrinter;
    private final org.joda.time.format.PeriodParser iBeforeParser;
    private volatile org.joda.time.format.PeriodParser iAfterParser;

    void <init>(java.lang.String, java.lang.String, java.lang.String[], org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser, boolean, boolean)
    {
        org.joda.time.format.PeriodFormatterBuilder$Separator r0;
        java.lang.String r1, r2, $r14;
        java.lang.String[] r3, $r7, $r11, $r13;
        org.joda.time.format.PeriodPrinter r4;
        org.joda.time.format.PeriodParser r5;
        boolean z0, z1, $z5;
        int $i0, $i1, i2;
        java.util.TreeSet $r8;
        java.util.Comparator $r9;
        java.util.ArrayList $r10;
        java.lang.Object[] $r12;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Separator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: org.joda.time.format.PeriodPrinter;

        r5 := @parameter4: org.joda.time.format.PeriodParser;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iText> = r1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iFinalText> = r2;

        if r2 == null goto label1;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label3;

     label1:
        if r3 == null goto label2;

        $i0 = lengthof r3;

        if $i0 != 0 goto label3;

     label2:
        $r7 = newarray (java.lang.String)[1];

        $r7[0] = r1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String[] iParsedForms> = $r7;

        goto label6;

     label3:
        $r8 = new java.util.TreeSet;

        $r9 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r8.<java.util.TreeSet: void <init>(java.util.Comparator)>($r9);

        virtualinvoke $r8.<java.util.TreeSet: boolean add(java.lang.Object)>(r1);

        virtualinvoke $r8.<java.util.TreeSet: boolean add(java.lang.Object)>(r2);

        if r3 == null goto label5;

        i2 = lengthof r3;

     label4:
        i2 = i2 + -1;

        if i2 < 0 goto label5;

        $r14 = r3[i2];

        virtualinvoke $r8.<java.util.TreeSet: boolean add(java.lang.Object)>($r14);

        goto label4;

     label5:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r10);

        $i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        $r11 = newarray (java.lang.String)[$i1];

        $r12 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        $r13 = (java.lang.String[]) $r12;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String[] iParsedForms> = $r13;

     label6:
        r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iBeforePrinter> = r4;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser iBeforeParser> = r5;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseBefore> = z0;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseAfter> = z1;

        return;
    }

    public int countFieldsToPrint(org.joda.time.ReadablePeriod, int, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$Separator r0;
        org.joda.time.ReadablePeriod r1;
        int i0, $i1, i2;
        java.util.Locale r2;
        org.joda.time.format.PeriodPrinter $r3, $r4;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Separator;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.Locale;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iBeforePrinter>;

        i2 = interfaceinvoke $r3.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r1, i0, r2);

        if i2 >= i0 goto label1;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter>;

        $i1 = interfaceinvoke $r4.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r1, i0, r2);

        i2 = i2 + $i1;

     label1:
        return i2;
    }

    public int calculatePrintedLength(org.joda.time.ReadablePeriod, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$Separator r0;
        org.joda.time.ReadablePeriod r1;
        java.util.Locale r2;
        org.joda.time.format.PeriodPrinter r3, r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean $z0, $z1, $z2;
        java.lang.String $r5, $r6, $r7;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Separator;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        r2 := @parameter1: java.util.Locale;

        r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iBeforePrinter>;

        r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter>;

        $i1 = interfaceinvoke r3.<org.joda.time.format.PeriodPrinter: int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2);

        $i2 = interfaceinvoke r4.<org.joda.time.format.PeriodPrinter: int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2);

        i9 = $i1 + $i2;

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseBefore>;

        if $z0 == 0 goto label5;

        $i5 = interfaceinvoke r3.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r1, 1, r2);

        if $i5 <= 0 goto label6;

        $z2 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseAfter>;

        if $z2 == 0 goto label4;

        i0 = interfaceinvoke r4.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r1, 2, r2);

        if i0 <= 0 goto label3;

        $i8 = i9;

        if i0 <= 1 goto label1;

        $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iText>;

        goto label2;

     label1:
        $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iFinalText>;

     label2:
        $i7 = virtualinvoke $r7.<java.lang.String: int length()>();

        i9 = $i8 + $i7;

     label3:
        goto label6;

     label4:
        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iText>;

        $i6 = virtualinvoke $r6.<java.lang.String: int length()>();

        i9 = i9 + $i6;

        goto label6;

     label5:
        $z1 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseAfter>;

        if $z1 == 0 goto label6;

        $i3 = interfaceinvoke r4.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r1, 1, r2);

        if $i3 <= 0 goto label6;

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iText>;

        $i4 = virtualinvoke $r5.<java.lang.String: int length()>();

        i9 = i9 + $i4;

     label6:
        return i9;
    }

    public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePeriod, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$Separator r0;
        java.lang.StringBuffer r1;
        org.joda.time.ReadablePeriod r2;
        java.util.Locale r3;
        org.joda.time.format.PeriodPrinter r4, r5;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.lang.String $r6, $r8, $r12;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Separator;

        r1 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: org.joda.time.ReadablePeriod;

        r3 := @parameter2: java.util.Locale;

        r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iBeforePrinter>;

        r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter>;

        interfaceinvoke r4.<org.joda.time.format.PeriodPrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2, r3);

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseBefore>;

        if $z0 == 0 goto label5;

        $i2 = interfaceinvoke r4.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r2, 1, r3);

        if $i2 <= 0 goto label6;

        $z2 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseAfter>;

        if $z2 == 0 goto label4;

        i0 = interfaceinvoke r5.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r2, 2, r3);

        if i0 <= 0 goto label3;

        if i0 <= 1 goto label1;

        $r12 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iText>;

        goto label2;

     label1:
        $r12 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iFinalText>;

     label2:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

     label3:
        goto label6;

     label4:
        $r8 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iText>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label6;

     label5:
        $z1 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseAfter>;

        if $z1 == 0 goto label6;

        $i1 = interfaceinvoke r5.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r2, 1, r3);

        if $i1 <= 0 goto label6;

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iText>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label6:
        interfaceinvoke r5.<org.joda.time.format.PeriodPrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2, r3);

        return;
    }

    public void printTo(java.io.Writer, org.joda.time.ReadablePeriod, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.format.PeriodFormatterBuilder$Separator r0;
        java.io.Writer r1;
        org.joda.time.ReadablePeriod r2;
        java.util.Locale r3;
        org.joda.time.format.PeriodPrinter r4, r5;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.lang.String $r6, $r7, $r9;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Separator;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: org.joda.time.ReadablePeriod;

        r3 := @parameter2: java.util.Locale;

        r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iBeforePrinter>;

        r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter>;

        interfaceinvoke r4.<org.joda.time.format.PeriodPrinter: void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2, r3);

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseBefore>;

        if $z0 == 0 goto label5;

        $i2 = interfaceinvoke r4.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r2, 1, r3);

        if $i2 <= 0 goto label6;

        $z2 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseAfter>;

        if $z2 == 0 goto label4;

        i0 = interfaceinvoke r5.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r2, 2, r3);

        if i0 <= 0 goto label3;

        if i0 <= 1 goto label1;

        $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iText>;

        goto label2;

     label1:
        $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iFinalText>;

     label2:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r9);

     label3:
        goto label6;

     label4:
        $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iText>;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r7);

        goto label6;

     label5:
        $z1 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseAfter>;

        if $z1 == 0 goto label6;

        $i1 = interfaceinvoke r5.<org.joda.time.format.PeriodPrinter: int countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)>(r2, 1, r3);

        if $i1 <= 0 goto label6;

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String iText>;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r6);

     label6:
        interfaceinvoke r5.<org.joda.time.format.PeriodPrinter: void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2, r3);

        return;
    }

    public int parseInto(org.joda.time.ReadWritablePeriod, java.lang.String, int, java.util.Locale)
    {
        org.joda.time.format.PeriodFormatterBuilder$Separator r0;
        org.joda.time.ReadWritablePeriod r1;
        java.lang.String r2, r5;
        java.util.Locale r3;
        java.lang.String[] r4;
        int i0, $i1, $i2, $i3, $i4, i5, i7, i8, i9, $i10, i11, i12;
        org.joda.time.format.PeriodParser $r6, $r7;
        boolean $z0, $z1, z2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Separator;

        r1 := @parameter0: org.joda.time.ReadWritablePeriod;

        r2 := @parameter1: java.lang.String;

        i5 := @parameter2: int;

        r3 := @parameter3: java.util.Locale;

        $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser iBeforeParser>;

        i7 = interfaceinvoke $r6.<org.joda.time.format.PeriodParser: int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)>(r1, r2, i5, r3);

        if i7 >= 0 goto label01;

        return i7;

     label01:
        z2 = 0;

        i8 = -1;

        if i7 <= i5 goto label07;

        r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: java.lang.String[] iParsedForms>;

        i0 = lengthof r4;

        i9 = 0;

     label02:
        if i9 >= i0 goto label07;

        r5 = r4[i9];

        if r5 == null goto label03;

        $i3 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i3 == 0 goto label03;

        $i4 = virtualinvoke r5.<java.lang.String: int length()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i7, r5, 0, $i4);

        if $z1 == 0 goto label06;

     label03:
        if r5 != null goto label04;

        $i10 = 0;

        goto label05;

     label04:
        $i10 = virtualinvoke r5.<java.lang.String: int length()>();

     label05:
        i8 = $i10;

        i7 = i7 + $i10;

        z2 = 1;

        goto label07;

     label06:
        i9 = i9 + 1;

        goto label02;

     label07:
        i11 = i7;

        $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser iAfterParser>;

        i12 = interfaceinvoke $r7.<org.joda.time.format.PeriodParser: int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)>(r1, r2, i7, r3);

        if i12 >= 0 goto label08;

        return i12;

     label08:
        if z2 == 0 goto label09;

        if i12 != i7 goto label09;

        if i8 <= 0 goto label09;

        $i2 = i7 ^ -1;

        return $i2;

     label09:
        if i12 <= i11 goto label10;

        if z2 != 0 goto label10;

        $z0 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: boolean iUseBefore>;

        if $z0 != 0 goto label10;

        $i1 = i11 ^ -1;

        return $i1;

     label10:
        return i12;
    }

    org.joda.time.format.PeriodFormatterBuilder$Separator finish(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser)
    {
        org.joda.time.format.PeriodFormatterBuilder$Separator r0;
        org.joda.time.format.PeriodPrinter r1;
        org.joda.time.format.PeriodParser r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$Separator;

        r1 := @parameter0: org.joda.time.format.PeriodPrinter;

        r2 := @parameter1: org.joda.time.format.PeriodParser;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter> = r1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser iAfterParser> = r2;

        return r0;
    }

    static org.joda.time.format.PeriodParser access$000(org.joda.time.format.PeriodFormatterBuilder$Separator)
    {
        org.joda.time.format.PeriodFormatterBuilder$Separator r0;
        org.joda.time.format.PeriodParser $r1;

        r0 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$Separator;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodParser iAfterParser>;

        return $r1;
    }

    static org.joda.time.format.PeriodPrinter access$100(org.joda.time.format.PeriodFormatterBuilder$Separator)
    {
        org.joda.time.format.PeriodFormatterBuilder$Separator r0;
        org.joda.time.format.PeriodPrinter $r1;

        r0 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$Separator;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$Separator: org.joda.time.format.PeriodPrinter iAfterPrinter>;

        return $r1;
    }
}
