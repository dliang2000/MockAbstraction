final class org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding extends org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding
{
    private final org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet;
    private final java.lang.Character paddingChar;
    private transient org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding upperCase;
    private transient org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding lowerCase;

    void <init>(java.lang.String, java.lang.String, java.lang.Character)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0;
        java.lang.String r1, r2;
        java.lang.Character r3;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet $r4;
        char[] $r5;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Character;

        $r4 = new org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet;

        $r5 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet: void <init>(java.lang.String,char[])>(r1, $r5);

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>($r4, r3);

        return;
    }

    void <init>(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet, java.lang.Character)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet r1, $r4;
        java.lang.Character r2;
        java.lang.Object $r3;
        java.lang.Object[] $r5;
        char $c0;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet;

        r2 := @parameter1: java.lang.Character;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet) $r3;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet> = $r4;

        if r2 == null goto label1;

        $c0 = virtualinvoke r2.<java.lang.Character: char charValue()>();

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet: boolean matches(char)>($c0);

        if $z0 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r2;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z1, "Padding character %s was already in alphabet", $r5);

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar> = r2;

        return;
    }

    org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher padding()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0;
        java.lang.Character $r1, $r2;
        char $c0;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar>;

        if $r1 != null goto label1;

        $r3 = <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher NONE>;

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar>;

        $c0 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher is(char)>($c0);

     label2:
        return $r3;
    }

    int maxEncodedSize(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet $r1, $r2;
        java.math.RoundingMode $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        $i2 = $r1.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet: int charsPerChunk>;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        $i1 = $r2.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet: int bytesPerChunk>;

        $r3 = <java.math.RoundingMode: java.math.RoundingMode CEILING>;

        $i3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.math.IntMath: int divide(int,int,java.math.RoundingMode)>(i0, $i1, $r3);

        $i4 = $i2 * $i3;

        return $i4;
    }

    org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$ByteOutput encodingStream(org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharOutput)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0;
        org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharOutput r1;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding$1 $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharOutput;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = new org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding$1;

        specialinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding$1: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding,org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharOutput)>(r0, r1);

        return $r3;
    }

    int maxDecodedSize(int)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0;
        int i0, $i1, $i7;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet $r1;
        long $l2, $l3, $l4, $l5, $l6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        $i1 = $r1.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet: int bitsPerChar>;

        $l3 = (long) $i1;

        $l2 = (long) i0;

        $l4 = $l3 * $l2;

        $l5 = $l4 + 7L;

        $l6 = $l5 / 8L;

        $i7 = (int) $l6;

        return $i7;
    }

    org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$ByteInput decodingStream(org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharInput)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0;
        org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharInput r1;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding$2 $r3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharInput;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = new org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding$2;

        specialinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding$2: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding,org.apache.flink.shaded.guava18.com.google.common.io.GwtWorkarounds$CharInput)>(r0, r1);

        return $r3;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding omitPadding()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0, $r3;
        java.lang.Character $r1;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar>;

        if $r1 != null goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r3 = new org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        specialinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>($r2, null);

     label2:
        return $r3;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding withPadChar(char)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0, $r3;
        char c0, $c3;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet $r1, $r4;
        int $i1, $i2;
        java.lang.Character $r2, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        $i1 = $r1.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet: int bitsPerChar>;

        $i2 = 8 % $i1;

        if $i2 == 0 goto label1;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar>;

        if $r2 == null goto label2;

        $r6 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar>;

        $c3 = virtualinvoke $r6.<java.lang.Character: char charValue()>();

        if $c3 != c0 goto label2;

     label1:
        return r0;

     label2:
        $r3 = new org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        specialinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>($r4, $r5);

        return $r3;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding withSeparator(java.lang.String, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0;
        java.lang.String r1;
        int i0;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r3, $r5;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet $r4;
        boolean $z0;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding $r6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher padding()>();

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        $r5 = virtualinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher or(org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher)>($r4);

        $z0 = virtualinvoke $r5.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matchesNoneOf(java.lang.CharSequence)>(r1);

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Separator cannot contain alphabet or padding characters");

        $r6 = new org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding;

        specialinvoke $r6.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$SeparatedBaseEncoding: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding,java.lang.String,int)>(r0, r1, i0);

        return $r6;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding upperCase()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0, $r7;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet r1, $r2, $r3;
        java.lang.Character $r4;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding r6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        r6 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding upperCase>;

        if r6 != null goto label3;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        r1 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet upperCase()>();

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        if r1 != $r3 goto label1;

        $r7 = r0;

        goto label2;

     label1:
        $r7 = new org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar>;

        specialinvoke $r7.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>(r1, $r4);

     label2:
        r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding upperCase> = $r7;

        r6 = $r7;

     label3:
        return r6;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding lowerCase()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0, $r7;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet r1, $r2, $r3;
        java.lang.Character $r4;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding r6;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        r6 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding lowerCase>;

        if r6 != null goto label3;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        r1 = virtualinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet lowerCase()>();

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        if r1 != $r3 goto label1;

        $r7 = r0;

        goto label2;

     label1:
        $r7 = new org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar>;

        specialinvoke $r7.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>(r1, $r4);

     label2:
        r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding lowerCase> = $r7;

        r6 = $r7;

     label3:
        return r6;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0;
        java.lang.StringBuilder $r2, $r8, $r10;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet $r3, $r6;
        java.lang.String $r4, $r13;
        int $i0, $i1;
        java.lang.Character $r7, $r9;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("BaseEncoding.");

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        $i0 = $r6.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet: int bitsPerChar>;

        $i1 = 8 % $i0;

        if $i1 == 0 goto label2;

        $r7 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar>;

        if $r7 != null goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".omitPadding()");

        goto label2;

     label1:
        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".withPadChar(");

        $r9 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label2:
        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    static org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet access$000(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0;
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet $r1;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$Alphabet alphabet>;

        return $r1;
    }

    static java.lang.Character access$100(org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding r0;
        java.lang.Character $r1;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.Character paddingChar>;

        return $r1;
    }
}
