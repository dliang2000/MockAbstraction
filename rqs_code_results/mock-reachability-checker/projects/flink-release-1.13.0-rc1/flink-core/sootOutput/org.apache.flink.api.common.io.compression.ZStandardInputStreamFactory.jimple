public class org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory extends java.lang.Object implements org.apache.flink.api.common.io.compression.InflaterInputStreamFactory
{
    private static final org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory INSTANCE;

    public void <init>()
    {
        org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory r0;

        r0 := @this: org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory getInstance()
    {
        org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory $r0;

        $r0 = <org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory: org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory INSTANCE>;

        return $r0;
    }

    public org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream create(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory r0;
        java.io.InputStream r1;
        org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream $r2;

        r0 := @this: org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory;

        r1 := @parameter0: java.io.InputStream;

        $r2 = new org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream;

        specialinvoke $r2.<org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream: void <init>(java.io.InputStream)>(r1);

        return $r2;
    }

    public java.util.Collection getCommonFileExtensions()
    {
        org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory r0;
        java.util.Set $r1;

        r0 := @this: org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("zst");

        return $r1;
    }

    public volatile java.io.InputStream create(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory r0;
        java.io.InputStream r1;
        org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream $r2;

        r0 := @this: org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory: org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream create(java.io.InputStream)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory $r0;

        $r0 = new org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory;

        specialinvoke $r0.<org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory: void <init>()>();

        <org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory: org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory INSTANCE> = $r0;

        return;
    }
}
