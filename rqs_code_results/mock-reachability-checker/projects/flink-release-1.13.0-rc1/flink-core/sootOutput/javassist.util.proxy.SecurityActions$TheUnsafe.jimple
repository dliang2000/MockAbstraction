class javassist.util.proxy.SecurityActions$TheUnsafe extends java.lang.Object
{
    final java.lang.Class unsafe;
    final java.lang.Object theUnsafe;
    final java.util.Map methods;
    final javassist.util.proxy.SecurityActions this$0;

    void <init>(javassist.util.proxy.SecurityActions, java.lang.Class, java.lang.Object)
    {
        javassist.util.proxy.SecurityActions$TheUnsafe r0;
        javassist.util.proxy.SecurityActions r1;
        java.lang.Class r2, $r7;
        java.lang.Object r3, $r12, $r16, $r23;
        java.lang.reflect.Method[] r4;
        int i0, $i1, i2;
        java.lang.reflect.Method r5;
        java.util.HashMap $r6;
        java.util.Map $r8, $r10, $r14, $r18, $r21, $r26;
        java.lang.String $r9, $r11, $r15, $r19, $r22, $r27;
        boolean $z0;
        java.util.List $r13, $r17, $r28;
        java.util.ArrayList $r20;
        java.util.Collection $r24;

        r0 := @this: javassist.util.proxy.SecurityActions$TheUnsafe;

        r1 := @parameter0: javassist.util.proxy.SecurityActions;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.Object;

        r0.<javassist.util.proxy.SecurityActions$TheUnsafe: javassist.util.proxy.SecurityActions this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.util.Map methods> = $r6;

        r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.lang.Class unsafe> = r2;

        r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.lang.Object theUnsafe> = r3;

        $r7 = r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.lang.Class unsafe>;

        r4 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i0 = lengthof r4;

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        r5 = r4[i2];

        $r8 = r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.util.Map methods>;

        $r9 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>($r9);

        if $z0 != 0 goto label2;

        $r26 = r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.util.Map methods>;

        $r27 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.String getName()>();

        $r28 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r5);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r28);

        goto label4;

     label2:
        $r10 = r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.util.Map methods>;

        $r11 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.String getName()>();

        $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = (java.util.List) $r12;

        $i1 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i1 != 1 goto label3;

        $r18 = r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.util.Map methods>;

        $r19 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.String getName()>();

        $r20 = new java.util.ArrayList;

        $r21 = r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.util.Map methods>;

        $r22 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.String getName()>();

        $r23 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>($r22);

        $r24 = (java.util.Collection) $r23;

        specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>($r24);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20);

     label3:
        $r14 = r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.util.Map methods>;

        $r15 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.String getName()>();

        $r16 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);

        $r17 = (java.util.List) $r16;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>(r5);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }

    private java.lang.reflect.Method getM(java.lang.String, java.lang.Object[])
    {
        javassist.util.proxy.SecurityActions$TheUnsafe r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.util.Map $r3;
        java.lang.Object $r4, $r6;
        java.util.List $r5;
        java.lang.reflect.Method $r7;

        r0 := @this: javassist.util.proxy.SecurityActions$TheUnsafe;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.util.Map methods>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.util.List) $r4;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.lang.reflect.Method) $r6;

        return $r7;
    }

    public transient java.lang.Object call(java.lang.String, java.lang.Object[])
    {
        javassist.util.proxy.SecurityActions$TheUnsafe r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.lang.reflect.Method $r4;
        java.lang.Object $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: javassist.util.proxy.SecurityActions$TheUnsafe;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

     label1:
        $r4 = specialinvoke r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.lang.reflect.Method getM(java.lang.String,java.lang.Object[])>(r1, r2);

        $r5 = r0.<javassist.util.proxy.SecurityActions$TheUnsafe: java.lang.Object theUnsafe>;

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, r2);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Throwable: void printStackTrace()>();

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
