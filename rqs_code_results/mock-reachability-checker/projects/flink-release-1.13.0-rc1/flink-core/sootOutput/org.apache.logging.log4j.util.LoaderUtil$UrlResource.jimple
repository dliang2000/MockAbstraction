class org.apache.logging.log4j.util.LoaderUtil$UrlResource extends java.lang.Object
{
    private final java.lang.ClassLoader classLoader;
    private final java.net.URL url;

    void <init>(java.lang.ClassLoader, java.net.URL)
    {
        org.apache.logging.log4j.util.LoaderUtil$UrlResource r0;
        java.lang.ClassLoader r1;
        java.net.URL r2;

        r0 := @this: org.apache.logging.log4j.util.LoaderUtil$UrlResource;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.net.URL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.lang.ClassLoader classLoader> = r1;

        r0.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.net.URL url> = r2;

        return;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        org.apache.logging.log4j.util.LoaderUtil$UrlResource r0;
        java.lang.ClassLoader $r1;

        r0 := @this: org.apache.logging.log4j.util.LoaderUtil$UrlResource;

        $r1 = r0.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.lang.ClassLoader classLoader>;

        return $r1;
    }

    public java.net.URL getUrl()
    {
        org.apache.logging.log4j.util.LoaderUtil$UrlResource r0;
        java.net.URL $r1;

        r0 := @this: org.apache.logging.log4j.util.LoaderUtil$UrlResource;

        $r1 = r0.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.net.URL url>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.logging.log4j.util.LoaderUtil$UrlResource r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.ClassLoader $r5, $r6, $r11, $r12;
        java.net.URL $r7, $r8, $r9, $r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.logging.log4j.util.LoaderUtil$UrlResource;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (org.apache.logging.log4j.util.LoaderUtil$UrlResource) r1;

        $r5 = r0.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.lang.ClassLoader classLoader>;

        if $r5 == null goto label4;

        $r12 = r0.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.lang.ClassLoader classLoader>;

        $r11 = r2.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.lang.ClassLoader classLoader>;

        $z1 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label6;

        goto label5;

     label4:
        $r6 = r2.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.lang.ClassLoader classLoader>;

        if $r6 == null goto label6;

     label5:
        return 0;

     label6:
        $r7 = r0.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.net.URL url>;

        if $r7 == null goto label7;

        $r10 = r0.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.net.URL url>;

        $r9 = r2.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.net.URL url>;

        $z0 = virtualinvoke $r10.<java.net.URL: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label9;

        goto label8;

     label7:
        $r8 = r2.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.net.URL url>;

        if $r8 == null goto label9;

     label8:
        return 0;

     label9:
        return 1;
    }

    public int hashCode()
    {
        org.apache.logging.log4j.util.LoaderUtil$UrlResource r0;
        java.lang.ClassLoader $r1;
        int $i0, $i1, $i2;
        java.net.URL $r2;

        r0 := @this: org.apache.logging.log4j.util.LoaderUtil$UrlResource;

        $r1 = r0.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.lang.ClassLoader classLoader>;

        $i0 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.logging.log4j.util.LoaderUtil$UrlResource: java.net.URL url>;

        $i1 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r2);

        $i2 = $i0 + $i1;

        return $i2;
    }
}
