class javassist.bytecode.ByteVector extends java.lang.Object implements java.lang.Cloneable
{
    private byte[] buffer;
    private int size;

    public void <init>()
    {
        javassist.bytecode.ByteVector r0;
        byte[] $r1;

        r0 := @this: javassist.bytecode.ByteVector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[64];

        r0.<javassist.bytecode.ByteVector: byte[] buffer> = $r1;

        r0.<javassist.bytecode.ByteVector: int size> = 0;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        javassist.bytecode.ByteVector r0, r1;
        java.lang.Object $r2, $r4;
        byte[] $r3, $r5;

        r0 := @this: javassist.bytecode.ByteVector;

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (javassist.bytecode.ByteVector) $r2;

        $r3 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (byte[]) $r4;

        r1.<javassist.bytecode.ByteVector: byte[] buffer> = $r5;

        return r1;
    }

    public final int getSize()
    {
        javassist.bytecode.ByteVector r0;
        int $i0;

        r0 := @this: javassist.bytecode.ByteVector;

        $i0 = r0.<javassist.bytecode.ByteVector: int size>;

        return $i0;
    }

    public final byte[] copy()
    {
        javassist.bytecode.ByteVector r0;
        byte[] r1, $r2;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.ByteVector;

        $i0 = r0.<javassist.bytecode.ByteVector: int size>;

        r1 = newarray (byte)[$i0];

        $r2 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $i1 = r0.<javassist.bytecode.ByteVector: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        return r1;
    }

    public int read(int)
    {
        javassist.bytecode.ByteVector r0;
        int i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        byte[] $r2;
        byte $b2;

        r0 := @this: javassist.bytecode.ByteVector;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<javassist.bytecode.ByteVector: int size>;

        if $i1 > i0 goto label2;

     label1:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r1;

     label2:
        $r2 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $b2 = $r2[i0];

        return $b2;
    }

    public void write(int, int)
    {
        javassist.bytecode.ByteVector r0;
        int i0, i1, $i2;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        byte $b3;
        byte[] $r2;

        r0 := @this: javassist.bytecode.ByteVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        $i2 = r0.<javassist.bytecode.ByteVector: int size>;

        if $i2 > i0 goto label2;

     label1:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r1;

     label2:
        $r2 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $b3 = (byte) i1;

        $r2[i0] = $b3;

        return;
    }

    public void add(int)
    {
        javassist.bytecode.ByteVector r0;
        int i0, $i1, $i3;
        byte $b2;
        byte[] $r1;

        r0 := @this: javassist.bytecode.ByteVector;

        i0 := @parameter0: int;

        virtualinvoke r0.<javassist.bytecode.ByteVector: void addGap(int)>(1);

        $r1 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $i1 = r0.<javassist.bytecode.ByteVector: int size>;

        $i3 = $i1 - 1;

        $b2 = (byte) i0;

        $r1[$i3] = $b2;

        return;
    }

    public void add(int, int)
    {
        javassist.bytecode.ByteVector r0;
        int i0, i1, $i2, $i4, $i5, $i7;
        byte $b3, $b6;
        byte[] $r1, $r2;

        r0 := @this: javassist.bytecode.ByteVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<javassist.bytecode.ByteVector: void addGap(int)>(2);

        $r1 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $i2 = r0.<javassist.bytecode.ByteVector: int size>;

        $i4 = $i2 - 2;

        $b3 = (byte) i0;

        $r1[$i4] = $b3;

        $r2 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $i5 = r0.<javassist.bytecode.ByteVector: int size>;

        $i7 = $i5 - 1;

        $b6 = (byte) i1;

        $r2[$i7] = $b6;

        return;
    }

    public void add(int, int, int, int)
    {
        javassist.bytecode.ByteVector r0;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i15;
        byte $b5, $b8, $b11, $b14;
        byte[] $r1, $r2, $r3, $r4;

        r0 := @this: javassist.bytecode.ByteVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        virtualinvoke r0.<javassist.bytecode.ByteVector: void addGap(int)>(4);

        $r1 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $i4 = r0.<javassist.bytecode.ByteVector: int size>;

        $i6 = $i4 - 4;

        $b5 = (byte) i0;

        $r1[$i6] = $b5;

        $r2 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $i7 = r0.<javassist.bytecode.ByteVector: int size>;

        $i9 = $i7 - 3;

        $b8 = (byte) i1;

        $r2[$i9] = $b8;

        $r3 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $i10 = r0.<javassist.bytecode.ByteVector: int size>;

        $i12 = $i10 - 2;

        $b11 = (byte) i2;

        $r3[$i12] = $b11;

        $r4 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $i13 = r0.<javassist.bytecode.ByteVector: int size>;

        $i15 = $i13 - 1;

        $b14 = (byte) i3;

        $r4[$i15] = $b14;

        return;
    }

    public void addGap(int)
    {
        javassist.bytecode.ByteVector r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11;
        byte[] r1, $r2, $r3;

        r0 := @this: javassist.bytecode.ByteVector;

        i0 := @parameter0: int;

        $i1 = r0.<javassist.bytecode.ByteVector: int size>;

        $i3 = $i1 + i0;

        $r2 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $i2 = lengthof $r2;

        if $i3 <= $i2 goto label2;

        $i4 = r0.<javassist.bytecode.ByteVector: int size>;

        i9 = $i4 << 1;

        $i5 = r0.<javassist.bytecode.ByteVector: int size>;

        $i6 = $i5 + i0;

        if i9 >= $i6 goto label1;

        $i8 = r0.<javassist.bytecode.ByteVector: int size>;

        i9 = $i8 + i0;

     label1:
        r1 = newarray (byte)[i9];

        $r3 = r0.<javassist.bytecode.ByteVector: byte[] buffer>;

        $i7 = r0.<javassist.bytecode.ByteVector: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i7);

        r0.<javassist.bytecode.ByteVector: byte[] buffer> = r1;

     label2:
        $i10 = r0.<javassist.bytecode.ByteVector: int size>;

        $i11 = $i10 + i0;

        r0.<javassist.bytecode.ByteVector: int size> = $i11;

        return;
    }
}
