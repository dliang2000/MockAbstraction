class javassist.CtNewClass extends javassist.CtClassType
{
    protected boolean hasConstructor;

    void <init>(java.lang.String, javassist.ClassPool, boolean, javassist.CtClass)
    {
        javassist.CtNewClass r0;
        java.lang.String r1, $r7, r8;
        javassist.ClassPool r2;
        boolean z0;
        javassist.CtClass r3;
        javassist.bytecode.ClassFile $r4, $r6;
        java.lang.String[] $r5;
        int $i0, $i1;

        r0 := @this: javassist.CtNewClass;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javassist.ClassPool;

        z0 := @parameter2: boolean;

        r3 := @parameter3: javassist.CtClass;

        specialinvoke r0.<javassist.CtClassType: void <init>(java.lang.String,javassist.ClassPool)>(r1, r2);

        r0.<javassist.CtNewClass: boolean wasChanged> = 1;

        if z0 != 0 goto label1;

        if r3 != null goto label2;

     label1:
        r8 = null;

        goto label3;

     label2:
        r8 = virtualinvoke r3.<javassist.CtClass: java.lang.String getName()>();

     label3:
        $r4 = new javassist.bytecode.ClassFile;

        specialinvoke $r4.<javassist.bytecode.ClassFile: void <init>(boolean,java.lang.String,java.lang.String)>(z0, r1, r8);

        r0.<javassist.CtNewClass: javassist.bytecode.ClassFile classfile> = $r4;

        if z0 == 0 goto label4;

        if r3 == null goto label4;

        $r6 = r0.<javassist.CtNewClass: javassist.bytecode.ClassFile classfile>;

        $r5 = newarray (java.lang.String)[1];

        $r7 = virtualinvoke r3.<javassist.CtClass: java.lang.String getName()>();

        $r5[0] = $r7;

        virtualinvoke $r6.<javassist.bytecode.ClassFile: void setInterfaces(java.lang.String[])>($r5);

     label4:
        $i0 = virtualinvoke r0.<javassist.CtNewClass: int getModifiers()>();

        $i1 = staticinvoke <javassist.Modifier: int setPublic(int)>($i0);

        virtualinvoke r0.<javassist.CtNewClass: void setModifiers(int)>($i1);

        r0.<javassist.CtNewClass: boolean hasConstructor> = z0;

        return;
    }

    protected void extendToString(java.lang.StringBuffer)
    {
        javassist.CtNewClass r0;
        java.lang.StringBuffer r1;
        boolean $z0;

        r0 := @this: javassist.CtNewClass;

        r1 := @parameter0: java.lang.StringBuffer;

        $z0 = r0.<javassist.CtNewClass: boolean hasConstructor>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("hasConstructor ");

     label1:
        specialinvoke r0.<javassist.CtClassType: void extendToString(java.lang.StringBuffer)>(r1);

        return;
    }

    public void addConstructor(javassist.CtConstructor) throws javassist.CannotCompileException
    {
        javassist.CtNewClass r0;
        javassist.CtConstructor r1;

        r0 := @this: javassist.CtNewClass;

        r1 := @parameter0: javassist.CtConstructor;

        r0.<javassist.CtNewClass: boolean hasConstructor> = 1;

        specialinvoke r0.<javassist.CtClassType: void addConstructor(javassist.CtConstructor)>(r1);

        return;
    }

    public void toBytecode(java.io.DataOutputStream) throws javassist.CannotCompileException, java.io.IOException
    {
        javassist.CtNewClass r0;
        java.io.DataOutputStream r1;
        boolean $z0;
        javassist.NotFoundException $r3;
        javassist.CannotCompileException $r4;

        r0 := @this: javassist.CtNewClass;

        r1 := @parameter0: java.io.DataOutputStream;

        $z0 = r0.<javassist.CtNewClass: boolean hasConstructor>;

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke r0.<javassist.CtNewClass: void inheritAllConstructors()>();

        r0.<javassist.CtNewClass: boolean hasConstructor> = 1;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new javassist.CannotCompileException;

        specialinvoke $r4.<javassist.CannotCompileException: void <init>(javassist.NotFoundException)>($r3);

        throw $r4;

     label4:
        specialinvoke r0.<javassist.CtClassType: void toBytecode(java.io.DataOutputStream)>(r1);

        return;

        catch javassist.NotFoundException from label1 to label2 with label3;
    }

    public void inheritAllConstructors() throws javassist.CannotCompileException, javassist.NotFoundException
    {
        javassist.CtNewClass r0;
        javassist.CtClass r1;
        javassist.CtConstructor[] r2;
        javassist.CtConstructor r3, r4;
        int i0, $i1, $i2, i3, i4;
        javassist.CannotCompileException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;
        boolean $z0;
        javassist.CtClass[] $r11, $r12;

        r0 := @this: javassist.CtNewClass;

        r1 = virtualinvoke r0.<javassist.CtNewClass: javassist.CtClass getSuperclass()>();

        r2 = virtualinvoke r1.<javassist.CtClass: javassist.CtConstructor[] getDeclaredConstructors()>();

        i3 = 0;

        i4 = 0;

     label1:
        $i1 = lengthof r2;

        if i4 >= $i1 goto label3;

        r3 = r2[i4];

        i0 = virtualinvoke r3.<javassist.CtConstructor: int getModifiers()>();

        $z0 = specialinvoke r0.<javassist.CtNewClass: boolean isInheritable(int,javassist.CtClass)>(i0, r1);

        if $z0 == 0 goto label2;

        $r11 = virtualinvoke r3.<javassist.CtConstructor: javassist.CtClass[] getParameterTypes()>();

        $r12 = virtualinvoke r3.<javassist.CtConstructor: javassist.CtClass[] getExceptionTypes()>();

        r4 = staticinvoke <javassist.CtNewConstructor: javassist.CtConstructor make(javassist.CtClass[],javassist.CtClass[],javassist.CtClass)>($r11, $r12, r0);

        $i2 = i0 & 7;

        virtualinvoke r4.<javassist.CtConstructor: void setModifiers(int)>($i2);

        virtualinvoke r0.<javassist.CtNewClass: void addConstructor(javassist.CtConstructor)>(r4);

        i3 = i3 + 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        if i3 >= 1 goto label4;

        $r5 = new javassist.CannotCompileException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no inheritable constructor in ");

        $r8 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<javassist.CannotCompileException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label4:
        return;
    }

    private boolean isInheritable(int, javassist.CtClass)
    {
        javassist.CtNewClass r0;
        int i0;
        javassist.CtClass r1;
        java.lang.String r2, r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: javassist.CtNewClass;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.CtClass;

        $z0 = staticinvoke <javassist.Modifier: boolean isPrivate(int)>(i0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = staticinvoke <javassist.Modifier: boolean isPackage(int)>(i0);

        if $z1 == 0 goto label5;

        r2 = virtualinvoke r0.<javassist.CtNewClass: java.lang.String getPackageName()>();

        r3 = virtualinvoke r1.<javassist.CtClass: java.lang.String getPackageName()>();

        if r2 != null goto label4;

        if r3 != null goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        return $z2;

     label5:
        return 1;
    }
}
