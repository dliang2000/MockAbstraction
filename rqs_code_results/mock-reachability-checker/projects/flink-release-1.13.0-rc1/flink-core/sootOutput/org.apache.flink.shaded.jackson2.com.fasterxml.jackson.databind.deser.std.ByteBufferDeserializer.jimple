public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{
    private static final long serialVersionUID;

    protected void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/nio/ByteBuffer;");

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Binary>;

        return $r1;
    }

    public java.nio.ByteBuffer deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        byte[] r3;
        java.nio.ByteBuffer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: byte[] getBinaryValue()>();

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r3);

        return $r4;
    }

    public java.nio.ByteBuffer deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.nio.ByteBuffer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.nio.ByteBuffer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.nio.ByteBuffer;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream: void <init>(java.nio.ByteBuffer)>(r3);

        $r6 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: int readBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)>($r6, $r5);

        virtualinvoke $r5.<java.io.OutputStream: void close()>();

        return r3;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.lang.Object r3;
        java.nio.ByteBuffer $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 := @parameter2: java.lang.Object;

        $r4 = (java.nio.ByteBuffer) r3;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer: java.nio.ByteBuffer deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.nio.ByteBuffer)>(r1, r2, $r4);

        return $r5;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        java.nio.ByteBuffer $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer: java.nio.ByteBuffer deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer: long serialVersionUID> = 1L;

        return;
    }
}
