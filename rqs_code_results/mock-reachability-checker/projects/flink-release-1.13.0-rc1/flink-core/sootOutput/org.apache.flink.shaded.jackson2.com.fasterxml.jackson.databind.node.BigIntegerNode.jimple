public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode
{
    private static final java.math.BigInteger MIN_INTEGER;
    private static final java.math.BigInteger MAX_INTEGER;
    private static final java.math.BigInteger MIN_LONG;
    private static final java.math.BigInteger MAX_LONG;
    protected final java.math.BigInteger _value;

    public void <init>(java.math.BigInteger)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        r1 := @parameter0: java.math.BigInteger;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value> = r1;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode valueOf(java.math.BigInteger)
    {
        java.math.BigInteger r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode $r1;

        r0 := @parameter0: java.math.BigInteger;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: void <init>(java.math.BigInteger)>(r0);

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken asToken()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType numberType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER>;

        return $r1;
    }

    public boolean isIntegralNumber()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        return 1;
    }

    public boolean isBigInteger()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        return 1;
    }

    public boolean canConvertToInt()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger $r1, $r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MIN_INTEGER>;

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r1);

        if $i0 < 0 goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MAX_INTEGER>;

        $i1 = virtualinvoke $r4.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r3);

        if $i1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canConvertToLong()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger $r1, $r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MIN_LONG>;

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r1);

        if $i0 < 0 goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MAX_LONG>;

        $i1 = virtualinvoke $r4.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r3);

        if $i1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Number numberValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        return $r1;
    }

    public short shortValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger $r1;
        short $s0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $s0 = virtualinvoke $r1.<java.math.BigInteger: short shortValue()>();

        return $s0;
    }

    public int intValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int intValue()>();

        return $i0;
    }

    public long longValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger $r1;
        long $l0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $l0 = virtualinvoke $r1.<java.math.BigInteger: long longValue()>();

        return $l0;
    }

    public java.math.BigInteger bigIntegerValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        return $r1;
    }

    public float floatValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger $r1;
        float $f0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $f0 = virtualinvoke $r1.<java.math.BigInteger: float floatValue()>();

        return $f0;
    }

    public double doubleValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger $r1;
        double $d0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $d0 = virtualinvoke $r1.<java.math.BigInteger: double doubleValue()>();

        return $d0;
    }

    public java.math.BigDecimal decimalValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigDecimal $r1;
        java.math.BigInteger $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = new java.math.BigDecimal;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r2);

        return $r1;
    }

    public java.lang.String asText()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.lang.String toString()>();

        return $r2;
    }

    public boolean asBoolean(boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        boolean z0, $z1, $z2;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        z0 := @parameter0: boolean;

        $r2 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $z1 = virtualinvoke $r2.<java.math.BigInteger: boolean equals(java.lang.Object)>($r1);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public final void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r2;
        java.math.BigInteger $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigInteger)>($r3);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.math.BigInteger $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode) r1;

        $r4 = $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $z1 = virtualinvoke $r4.<java.math.BigInteger: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int hashCode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode r0;
        java.math.BigInteger $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger _value>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        return $i0;
    }

    static void <clinit>()
    {
        java.math.BigInteger $r0, $r1, $r2, $r3;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-2147483648L);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MIN_INTEGER> = $r0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483647L);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MAX_INTEGER> = $r1;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-9223372036854775808L);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MIN_LONG> = $r2;

        $r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(9223372036854775807L);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BigIntegerNode: java.math.BigInteger MAX_LONG> = $r3;

        return;
    }
}
