public class org.apache.flink.core.memory.MemorySegmentUndersizedTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.core.memory.MemorySegmentUndersizedTest r0;

        r0 := @this: org.apache.flink.core.memory.MemorySegmentUndersizedTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testZeroSizeHeapSegment()
    {
        org.apache.flink.core.memory.MemorySegmentUndersizedTest r0;
        org.apache.flink.core.memory.MemorySegment r1;

        r0 := @this: org.apache.flink.core.memory.MemorySegmentUndersizedTest;

        r1 = staticinvoke <org.apache.flink.core.memory.MemorySegmentFactory: org.apache.flink.core.memory.MemorySegment allocateUnpooledSegment(int)>(0);

        staticinvoke <org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testZeroSizeBuffer(org.apache.flink.core.memory.MemorySegment)>(r1);

        staticinvoke <org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testSegmentWithSizeLargerZero(org.apache.flink.core.memory.MemorySegment)>(r1);

        return;
    }

    public void testZeroSizeOffHeapSegment()
    {
        org.apache.flink.core.memory.MemorySegmentUndersizedTest r0;
        org.apache.flink.core.memory.MemorySegment r1;

        r0 := @this: org.apache.flink.core.memory.MemorySegmentUndersizedTest;

        r1 = staticinvoke <org.apache.flink.core.memory.MemorySegmentFactory: org.apache.flink.core.memory.MemorySegment allocateUnpooledOffHeapMemory(int)>(0);

        staticinvoke <org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testZeroSizeBuffer(org.apache.flink.core.memory.MemorySegment)>(r1);

        staticinvoke <org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testSegmentWithSizeLargerZero(org.apache.flink.core.memory.MemorySegment)>(r1);

        return;
    }

    public void testZeroSizeOffHeapUnsafeSegment()
    {
        org.apache.flink.core.memory.MemorySegmentUndersizedTest r0;
        org.apache.flink.core.memory.MemorySegment r1;

        r0 := @this: org.apache.flink.core.memory.MemorySegmentUndersizedTest;

        r1 = staticinvoke <org.apache.flink.core.memory.MemorySegmentFactory: org.apache.flink.core.memory.MemorySegment allocateOffHeapUnsafeMemory(int)>(0);

        staticinvoke <org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testZeroSizeBuffer(org.apache.flink.core.memory.MemorySegment)>(r1);

        staticinvoke <org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testSegmentWithSizeLargerZero(org.apache.flink.core.memory.MemorySegment)>(r1);

        return;
    }

    public void testSizeOneHeapSegment()
    {
        org.apache.flink.core.memory.MemorySegmentUndersizedTest r0;
        org.apache.flink.core.memory.MemorySegment $r1;

        r0 := @this: org.apache.flink.core.memory.MemorySegmentUndersizedTest;

        $r1 = staticinvoke <org.apache.flink.core.memory.MemorySegmentFactory: org.apache.flink.core.memory.MemorySegment allocateUnpooledSegment(int)>(1);

        staticinvoke <org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testSegmentWithSizeLargerZero(org.apache.flink.core.memory.MemorySegment)>($r1);

        return;
    }

    public void testSizeOneOffHeapSegment()
    {
        org.apache.flink.core.memory.MemorySegmentUndersizedTest r0;
        org.apache.flink.core.memory.MemorySegment $r1;

        r0 := @this: org.apache.flink.core.memory.MemorySegmentUndersizedTest;

        $r1 = staticinvoke <org.apache.flink.core.memory.MemorySegmentFactory: org.apache.flink.core.memory.MemorySegment allocateUnpooledOffHeapMemory(int)>(1);

        staticinvoke <org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testSegmentWithSizeLargerZero(org.apache.flink.core.memory.MemorySegment)>($r1);

        return;
    }

    public void testSizeOneOffHeapUnsafeSegment()
    {
        org.apache.flink.core.memory.MemorySegmentUndersizedTest r0;
        org.apache.flink.core.memory.MemorySegment $r1;

        r0 := @this: org.apache.flink.core.memory.MemorySegmentUndersizedTest;

        $r1 = staticinvoke <org.apache.flink.core.memory.MemorySegmentFactory: org.apache.flink.core.memory.MemorySegment allocateOffHeapUnsafeMemory(int)>(1);

        staticinvoke <org.apache.flink.core.memory.MemorySegmentUndersizedTest: void testSegmentWithSizeLargerZero(org.apache.flink.core.memory.MemorySegment)>($r1);

        return;
    }

    private static void testZeroSizeBuffer(org.apache.flink.core.memory.MemorySegment)
    {
        org.apache.flink.core.memory.MemorySegment r0;
        java.lang.Exception $r1, $r2, $r3, $r4;
        boolean $z1, $z2, $z3, $z4;

        r0 := @parameter0: org.apache.flink.core.memory.MemorySegment;

     label01:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(0, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label02:
        goto label04;

     label03:
        $r2 := @caughtexception;

        $z2 = $r2 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

     label04:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: byte get(int)>(0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label05:
        goto label07;

     label06:
        $r4 := @caughtexception;

        $z4 = $r4 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

     label07:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putBoolean(int,boolean)>(0, 1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label08:
        goto label10;

     label09:
        $r3 := @caughtexception;

        $z3 = $r3 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

     label10:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: boolean getBoolean(int)>(0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label11:
        goto label13;

     label12:
        $r1 := @caughtexception;

        $z1 = $r1 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

     label13:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    private static void testSegmentWithSizeLargerZero(org.apache.flink.core.memory.MemorySegment)
    {
        org.apache.flink.core.memory.MemorySegment r0;
        byte[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18;
        java.io.DataInputStream $r16;
        java.io.ByteArrayInputStream $r17;
        java.io.DataOutputStream $r19;
        java.io.ByteArrayOutputStream $r20;
        java.lang.Exception $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r169;
        boolean $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60, $z61, $z62, $z63, $z64, $z65, $z66, $z67, $z68, $z69, $z70, $z71, $z72, $z73, $z74, $z75, $z76, $z77, $z78, $z79, $z80, $z81, $z82, $z83, $z84, $z85, $z86, $z87, $z88, $z89, $z90, $z91, $z92, $z93, $z94, $z95, $z96, $z97, $z98, $z99, $z100, $z101, $z102, $z103, $z104, $z105, $z106, $z107, $z108, $z109, $z110, $z111, $z112, $z113, $z114, $z115, $z116, $z117, $z118, $z119, $z120, $z121, $z122, $z123, $z124, $z125, $z126, $z127, $z128, $z129, $z130, $z131, $z132, $z133, $z134, $z135, $z136, $z137, $z138, $z139, $z140, $z141, $z142, $z143, $z144, $z145, $z146, $z147, $z148, $z149, $z150, $z151, $z152, $z153, $z154;
        java.nio.ByteBuffer r291;

        r0 := @parameter0: org.apache.flink.core.memory.MemorySegment;

     label001:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(1, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label002:
        goto label004;

     label003:
        $r127 := @caughtexception;

        $z112 = $r127 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z112);

     label004:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(-1, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label005:
        goto label007;

     label006:
        $r80 := @caughtexception;

        $z65 = $r80 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z65);

     label007:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(8, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label008:
        goto label010;

     label009:
        $r125 := @caughtexception;

        $z110 = $r125 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z110);

     label010:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(-8, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label011:
        goto label013;

     label012:
        $r48 := @caughtexception;

        $z33 = $r48 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z33);

     label013:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(2147483647, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label014:
        goto label016;

     label015:
        $r146 := @caughtexception;

        $z131 = $r146 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z131);

     label016:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte)>(-2147483648, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label017:
        goto label019;

     label018:
        $r104 := @caughtexception;

        $z89 = $r104 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z89);

     label019:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: byte get(int)>(1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label020:
        goto label022;

     label021:
        $r31 := @caughtexception;

        $z16 = $r31 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z16);

     label022:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: byte get(int)>(-1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label023:
        goto label025;

     label024:
        $r119 := @caughtexception;

        $z104 = $r119 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z104);

     label025:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: byte get(int)>(8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label026:
        goto label028;

     label027:
        $r121 := @caughtexception;

        $z106 = $r121 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z106);

     label028:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: byte get(int)>(-8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label029:
        goto label031;

     label030:
        $r124 := @caughtexception;

        $z109 = $r124 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z109);

     label031:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: byte get(int)>(2147483647);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label032:
        goto label034;

     label033:
        $r134 := @caughtexception;

        $z119 = $r134 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z119);

     label034:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: byte get(int)>(-2147483648);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label035:
        goto label037;

     label036:
        $r131 := @caughtexception;

        $z116 = $r131 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z116);

     label037:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putBoolean(int,boolean)>(1, 1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label038:
        goto label040;

     label039:
        $r86 := @caughtexception;

        $z71 = $r86 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z71);

     label040:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putBoolean(int,boolean)>(-1, 1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label041:
        goto label043;

     label042:
        $r106 := @caughtexception;

        $z91 = $r106 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z91);

     label043:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putBoolean(int,boolean)>(8, 1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label044:
        goto label046;

     label045:
        $r64 := @caughtexception;

        $z49 = $r64 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z49);

     label046:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putBoolean(int,boolean)>(-8, 1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label047:
        goto label049;

     label048:
        $r41 := @caughtexception;

        $z26 = $r41 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z26);

     label049:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putBoolean(int,boolean)>(2147483647, 1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label050:
        goto label052;

     label051:
        $r100 := @caughtexception;

        $z85 = $r100 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z85);

     label052:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putBoolean(int,boolean)>(-2147483648, 1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label053:
        goto label055;

     label054:
        $r74 := @caughtexception;

        $z59 = $r74 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z59);

     label055:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: boolean getBoolean(int)>(1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label056:
        goto label058;

     label057:
        $r38 := @caughtexception;

        $z23 = $r38 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z23);

     label058:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: boolean getBoolean(int)>(-1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label059:
        goto label061;

     label060:
        $r101 := @caughtexception;

        $z86 = $r101 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z86);

     label061:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: boolean getBoolean(int)>(8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label062:
        goto label064;

     label063:
        $r158 := @caughtexception;

        $z143 = $r158 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z143);

     label064:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: boolean getBoolean(int)>(-8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label065:
        goto label067;

     label066:
        $r153 := @caughtexception;

        $z138 = $r153 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z138);

     label067:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: boolean getBoolean(int)>(2147483647);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label068:
        goto label070;

     label069:
        $r82 := @caughtexception;

        $z67 = $r82 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z67);

     label070:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: boolean getBoolean(int)>(-2147483648);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label071:
        goto label073;

     label072:
        $r116 := @caughtexception;

        $z101 = $r116 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z101);

     label073:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putChar(int,char)>(0, 97);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label074:
        goto label076;

     label075:
        $r94 := @caughtexception;

        $z79 = $r94 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z79);

     label076:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putChar(int,char)>(1, 97);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label077:
        goto label079;

     label078:
        $r152 := @caughtexception;

        $z137 = $r152 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z137);

     label079:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putChar(int,char)>(-1, 97);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label080:
        goto label082;

     label081:
        $r44 := @caughtexception;

        $z29 = $r44 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z29);

     label082:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putChar(int,char)>(8, 97);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label083:
        goto label085;

     label084:
        $r84 := @caughtexception;

        $z69 = $r84 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z69);

     label085:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putChar(int,char)>(-8, 97);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label086:
        goto label088;

     label087:
        $r75 := @caughtexception;

        $z60 = $r75 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z60);

     label088:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putChar(int,char)>(2147483647, 97);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label089:
        goto label091;

     label090:
        $r27 := @caughtexception;

        $z12 = $r27 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12);

     label091:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putChar(int,char)>(-2147483648, 97);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label092:
        goto label094;

     label093:
        $r58 := @caughtexception;

        $z43 = $r58 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z43);

     label094:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: char getChar(int)>(0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label095:
        goto label097;

     label096:
        $r29 := @caughtexception;

        $z14 = $r29 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z14);

     label097:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: char getChar(int)>(1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label098:
        goto label100;

     label099:
        $r135 := @caughtexception;

        $z120 = $r135 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z120);

     label100:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: char getChar(int)>(-1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label101:
        goto label103;

     label102:
        $r149 := @caughtexception;

        $z134 = $r149 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z134);

     label103:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: char getChar(int)>(8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label104:
        goto label106;

     label105:
        $r133 := @caughtexception;

        $z118 = $r133 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z118);

     label106:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: char getChar(int)>(-8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label107:
        goto label109;

     label108:
        $r103 := @caughtexception;

        $z88 = $r103 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z88);

     label109:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: char getChar(int)>(2147483647);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label110:
        goto label112;

     label111:
        $r51 := @caughtexception;

        $z36 = $r51 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z36);

     label112:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: char getChar(int)>(-2147483648);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label113:
        goto label115;

     label114:
        $r56 := @caughtexception;

        $z41 = $r56 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z41);

     label115:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putShort(int,short)>(0, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label116:
        goto label118;

     label117:
        $r88 := @caughtexception;

        $z73 = $r88 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z73);

     label118:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putShort(int,short)>(1, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label119:
        goto label121;

     label120:
        $r112 := @caughtexception;

        $z97 = $r112 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z97);

     label121:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putShort(int,short)>(-1, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label122:
        goto label124;

     label123:
        $r118 := @caughtexception;

        $z103 = $r118 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z103);

     label124:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putShort(int,short)>(8, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label125:
        goto label127;

     label126:
        $r143 := @caughtexception;

        $z128 = $r143 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z128);

     label127:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putShort(int,short)>(-8, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label128:
        goto label130;

     label129:
        $r156 := @caughtexception;

        $z141 = $r156 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z141);

     label130:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putShort(int,short)>(2147483647, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label131:
        goto label133;

     label132:
        $r71 := @caughtexception;

        $z56 = $r71 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z56);

     label133:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putShort(int,short)>(-2147483648, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label134:
        goto label136;

     label135:
        $r57 := @caughtexception;

        $z42 = $r57 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z42);

     label136:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: short getShort(int)>(0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label137:
        goto label139;

     label138:
        $r165 := @caughtexception;

        $z150 = $r165 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z150);

     label139:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: short getShort(int)>(1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label140:
        goto label142;

     label141:
        $r70 := @caughtexception;

        $z55 = $r70 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z55);

     label142:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: short getShort(int)>(-1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label143:
        goto label145;

     label144:
        $r24 := @caughtexception;

        $z9 = $r24 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9);

     label145:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: short getShort(int)>(8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label146:
        goto label148;

     label147:
        $r46 := @caughtexception;

        $z31 = $r46 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z31);

     label148:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: short getShort(int)>(-8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label149:
        goto label151;

     label150:
        $r43 := @caughtexception;

        $z28 = $r43 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z28);

     label151:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: short getShort(int)>(2147483647);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label152:
        goto label154;

     label153:
        $r26 := @caughtexception;

        $z11 = $r26 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z11);

     label154:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: short getShort(int)>(-2147483648);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label155:
        goto label157;

     label156:
        $r137 := @caughtexception;

        $z122 = $r137 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z122);

     label157:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putInt(int,int)>(0, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label158:
        goto label160;

     label159:
        $r95 := @caughtexception;

        $z80 = $r95 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z80);

     label160:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putInt(int,int)>(1, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label161:
        goto label163;

     label162:
        $r68 := @caughtexception;

        $z53 = $r68 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z53);

     label163:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putInt(int,int)>(-1, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label164:
        goto label166;

     label165:
        $r73 := @caughtexception;

        $z58 = $r73 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z58);

     label166:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putInt(int,int)>(8, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label167:
        goto label169;

     label168:
        $r60 := @caughtexception;

        $z45 = $r60 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z45);

     label169:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putInt(int,int)>(-8, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label170:
        goto label172;

     label171:
        $r63 := @caughtexception;

        $z48 = $r63 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z48);

     label172:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putInt(int,int)>(2147483647, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label173:
        goto label175;

     label174:
        $r53 := @caughtexception;

        $z38 = $r53 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z38);

     label175:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putInt(int,int)>(-2147483648, 0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label176:
        goto label178;

     label177:
        $r111 := @caughtexception;

        $z96 = $r111 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z96);

     label178:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: int getInt(int)>(0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label179:
        goto label181;

     label180:
        $r55 := @caughtexception;

        $z40 = $r55 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z40);

     label181:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: int getInt(int)>(1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label182:
        goto label184;

     label183:
        $r78 := @caughtexception;

        $z63 = $r78 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z63);

     label184:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: int getInt(int)>(-1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label185:
        goto label187;

     label186:
        $r67 := @caughtexception;

        $z52 = $r67 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z52);

     label187:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: int getInt(int)>(8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label188:
        goto label190;

     label189:
        $r93 := @caughtexception;

        $z78 = $r93 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z78);

     label190:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: int getInt(int)>(-8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label191:
        goto label193;

     label192:
        $r102 := @caughtexception;

        $z87 = $r102 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z87);

     label193:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: int getInt(int)>(2147483647);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label194:
        goto label196;

     label195:
        $r155 := @caughtexception;

        $z140 = $r155 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z140);

     label196:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: int getInt(int)>(-2147483648);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label197:
        goto label199;

     label198:
        $r154 := @caughtexception;

        $z139 = $r154 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z139);

     label199:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putLong(int,long)>(0, 0L);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label200:
        goto label202;

     label201:
        $r132 := @caughtexception;

        $z117 = $r132 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z117);

     label202:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putLong(int,long)>(1, 0L);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label203:
        goto label205;

     label204:
        $r145 := @caughtexception;

        $z130 = $r145 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z130);

     label205:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putLong(int,long)>(-1, 0L);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label206:
        goto label208;

     label207:
        $r151 := @caughtexception;

        $z136 = $r151 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z136);

     label208:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putLong(int,long)>(8, 0L);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label209:
        goto label211;

     label210:
        $r85 := @caughtexception;

        $z70 = $r85 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z70);

     label211:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putLong(int,long)>(-8, 0L);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label212:
        goto label214;

     label213:
        $r123 := @caughtexception;

        $z108 = $r123 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z108);

     label214:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putLong(int,long)>(2147483647, 0L);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label215:
        goto label217;

     label216:
        $r21 := @caughtexception;

        $z6 = $r21 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6);

     label217:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putLong(int,long)>(-2147483648, 0L);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label218:
        goto label220;

     label219:
        $r72 := @caughtexception;

        $z57 = $r72 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z57);

     label220:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: long getLong(int)>(0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label221:
        goto label223;

     label222:
        $r108 := @caughtexception;

        $z93 = $r108 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z93);

     label223:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: long getLong(int)>(1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label224:
        goto label226;

     label225:
        $r117 := @caughtexception;

        $z102 = $r117 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z102);

     label226:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: long getLong(int)>(-1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label227:
        goto label229;

     label228:
        $r40 := @caughtexception;

        $z25 = $r40 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z25);

     label229:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: long getLong(int)>(8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label230:
        goto label232;

     label231:
        $r96 := @caughtexception;

        $z81 = $r96 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z81);

     label232:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: long getLong(int)>(-8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label233:
        goto label235;

     label234:
        $r166 := @caughtexception;

        $z151 = $r166 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z151);

     label235:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: long getLong(int)>(2147483647);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label236:
        goto label238;

     label237:
        $r25 := @caughtexception;

        $z10 = $r25 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z10);

     label238:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: long getLong(int)>(-2147483648);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label239:
        goto label241;

     label240:
        $r90 := @caughtexception;

        $z75 = $r90 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z75);

     label241:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putFloat(int,float)>(0, 0.0F);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label242:
        goto label244;

     label243:
        $r159 := @caughtexception;

        $z144 = $r159 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z144);

     label244:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putFloat(int,float)>(1, 0.0F);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label245:
        goto label247;

     label246:
        $r109 := @caughtexception;

        $z94 = $r109 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z94);

     label247:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putFloat(int,float)>(-1, 0.0F);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label248:
        goto label250;

     label249:
        $r39 := @caughtexception;

        $z24 = $r39 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z24);

     label250:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putFloat(int,float)>(8, 0.0F);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label251:
        goto label253;

     label252:
        $r37 := @caughtexception;

        $z22 = $r37 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z22);

     label253:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putFloat(int,float)>(-8, 0.0F);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label254:
        goto label256;

     label255:
        $r98 := @caughtexception;

        $z83 = $r98 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z83);

     label256:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putFloat(int,float)>(2147483647, 0.0F);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label257:
        goto label259;

     label258:
        $r34 := @caughtexception;

        $z19 = $r34 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z19);

     label259:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putFloat(int,float)>(-2147483648, 0.0F);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label260:
        goto label262;

     label261:
        $r115 := @caughtexception;

        $z100 = $r115 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z100);

     label262:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: float getFloat(int)>(0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label263:
        goto label265;

     label264:
        $r89 := @caughtexception;

        $z74 = $r89 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z74);

     label265:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: float getFloat(int)>(1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label266:
        goto label268;

     label267:
        $r113 := @caughtexception;

        $z98 = $r113 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z98);

     label268:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: float getFloat(int)>(-1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label269:
        goto label271;

     label270:
        $r147 := @caughtexception;

        $z132 = $r147 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z132);

     label271:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: float getFloat(int)>(8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label272:
        goto label274;

     label273:
        $r148 := @caughtexception;

        $z133 = $r148 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z133);

     label274:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: float getFloat(int)>(-8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label275:
        goto label277;

     label276:
        $r157 := @caughtexception;

        $z142 = $r157 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z142);

     label277:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: float getFloat(int)>(2147483647);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label278:
        goto label280;

     label279:
        $r142 := @caughtexception;

        $z127 = $r142 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z127);

     label280:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: float getFloat(int)>(-2147483648);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label281:
        goto label283;

     label282:
        $r163 := @caughtexception;

        $z148 = $r163 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z148);

     label283:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putDouble(int,double)>(0, 0.0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label284:
        goto label286;

     label285:
        $r136 := @caughtexception;

        $z121 = $r136 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z121);

     label286:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putDouble(int,double)>(1, 0.0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label287:
        goto label289;

     label288:
        $r144 := @caughtexception;

        $z129 = $r144 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z129);

     label289:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putDouble(int,double)>(-1, 0.0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label290:
        goto label292;

     label291:
        $r28 := @caughtexception;

        $z13 = $r28 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z13);

     label292:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putDouble(int,double)>(8, 0.0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label293:
        goto label295;

     label294:
        $r114 := @caughtexception;

        $z99 = $r114 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z99);

     label295:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putDouble(int,double)>(2147483647, 0.0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label296:
        goto label298;

     label297:
        $r69 := @caughtexception;

        $z54 = $r69 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z54);

     label298:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void putDouble(int,double)>(-2147483648, 0.0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label299:
        goto label301;

     label300:
        $r120 := @caughtexception;

        $z105 = $r120 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z105);

     label301:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: double getDouble(int)>(0);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label302:
        goto label304;

     label303:
        $r141 := @caughtexception;

        $z126 = $r141 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z126);

     label304:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: double getDouble(int)>(1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label305:
        goto label307;

     label306:
        $r161 := @caughtexception;

        $z146 = $r161 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z146);

     label307:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: double getDouble(int)>(-1);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label308:
        goto label310;

     label309:
        $r83 := @caughtexception;

        $z68 = $r83 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z68);

     label310:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: double getDouble(int)>(8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label311:
        goto label313;

     label312:
        $r49 := @caughtexception;

        $z34 = $r49 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z34);

     label313:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: double getDouble(int)>(-8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label314:
        goto label316;

     label315:
        $r164 := @caughtexception;

        $z149 = $r164 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z149);

     label316:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: double getDouble(int)>(2147483647);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label317:
        goto label319;

     label318:
        $r97 := @caughtexception;

        $z82 = $r97 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z82);

     label319:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: double getDouble(int)>(-2147483648);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label320:
        goto label322;

     label321:
        $r162 := @caughtexception;

        $z147 = $r162 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z147);

     label322:
        $r2 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte[])>(0, $r2);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label323:
        goto label325;

     label324:
        $r33 := @caughtexception;

        $z18 = $r33 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z18);

     label325:
        $r3 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte[])>(1, $r3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label326:
        goto label328;

     label327:
        $r140 := @caughtexception;

        $z125 = $r140 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z125);

     label328:
        $r4 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte[])>(-1, $r4);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label329:
        goto label331;

     label330:
        $r45 := @caughtexception;

        $z30 = $r45 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z30);

     label331:
        $r5 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte[])>(8, $r5);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label332:
        goto label334;

     label333:
        $r122 := @caughtexception;

        $z107 = $r122 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z107);

     label334:
        $r6 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte[])>(-8, $r6);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label335:
        goto label337;

     label336:
        $r169 := @caughtexception;

        $z154 = $r169 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z154);

     label337:
        $r7 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte[])>(2147483647, $r7);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label338:
        goto label340;

     label339:
        $r22 := @caughtexception;

        $z7 = $r22 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7);

     label340:
        $r8 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,byte[])>(-2147483648, $r8);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label341:
        goto label343;

     label342:
        $r150 := @caughtexception;

        $z135 = $r150 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z135);

     label343:
        $r9 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,byte[])>(0, $r9);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label344:
        goto label346;

     label345:
        $r65 := @caughtexception;

        $z50 = $r65 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z50);

     label346:
        $r10 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,byte[])>(1, $r10);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label347:
        goto label349;

     label348:
        $r105 := @caughtexception;

        $z90 = $r105 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z90);

     label349:
        $r11 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,byte[])>(-1, $r11);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label350:
        goto label352;

     label351:
        $r107 := @caughtexception;

        $z92 = $r107 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z92);

     label352:
        $r12 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,byte[])>(8, $r12);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label353:
        goto label355;

     label354:
        $r87 := @caughtexception;

        $z72 = $r87 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z72);

     label355:
        $r13 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,byte[])>(-8, $r13);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label356:
        goto label358;

     label357:
        $r32 := @caughtexception;

        $z17 = $r32 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z17);

     label358:
        $r14 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,byte[])>(2147483647, $r14);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label359:
        goto label361;

     label360:
        $r42 := @caughtexception;

        $z27 = $r42 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z27);

     label361:
        $r15 = newarray (byte)[7];

        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,byte[])>(-2147483648, $r15);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label362:
        goto label364;

     label363:
        $r62 := @caughtexception;

        $z47 = $r62 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z47);

     label364:
        r291 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(7);

     label365:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,java.nio.ByteBuffer,int)>(0, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label366:
        goto label368;

     label367:
        $r59 := @caughtexception;

        $z44 = $r59 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z44);

     label368:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,java.nio.ByteBuffer,int)>(1, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label369:
        goto label371;

     label370:
        $r126 := @caughtexception;

        $z111 = $r126 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z111);

     label371:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,java.nio.ByteBuffer,int)>(-1, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label372:
        goto label374;

     label373:
        $r36 := @caughtexception;

        $z21 = $r36 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21);

     label374:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,java.nio.ByteBuffer,int)>(8, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label375:
        goto label377;

     label376:
        $r130 := @caughtexception;

        $z115 = $r130 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z115);

     label377:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,java.nio.ByteBuffer,int)>(-8, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label378:
        goto label380;

     label379:
        $r79 := @caughtexception;

        $z64 = $r79 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z64);

     label380:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,java.nio.ByteBuffer,int)>(2147483647, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label381:
        goto label383;

     label382:
        $r160 := @caughtexception;

        $z145 = $r160 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z145);

     label383:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(int,java.nio.ByteBuffer,int)>(-2147483648, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label384:
        goto label386;

     label385:
        $r61 := @caughtexception;

        $z46 = $r61 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z46);

     label386:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,java.nio.ByteBuffer,int)>(0, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label387:
        goto label389;

     label388:
        $r23 := @caughtexception;

        $z8 = $r23 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8);

     label389:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,java.nio.ByteBuffer,int)>(1, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label390:
        goto label392;

     label391:
        $r110 := @caughtexception;

        $z95 = $r110 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z95);

     label392:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,java.nio.ByteBuffer,int)>(-1, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label393:
        goto label395;

     label394:
        $r77 := @caughtexception;

        $z62 = $r77 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z62);

     label395:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,java.nio.ByteBuffer,int)>(8, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label396:
        goto label398;

     label397:
        $r99 := @caughtexception;

        $z84 = $r99 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z84);

     label398:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,java.nio.ByteBuffer,int)>(-8, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label399:
        goto label401;

     label400:
        $r66 := @caughtexception;

        $z51 = $r66 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z51);

     label401:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,java.nio.ByteBuffer,int)>(2147483647, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label402:
        goto label404;

     label403:
        $r139 := @caughtexception;

        $z124 = $r139 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z124);

     label404:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(int,java.nio.ByteBuffer,int)>(-2147483648, r291, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label405:
        goto label407;

     label406:
        $r168 := @caughtexception;

        $z153 = $r168 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z153);

     label407:
        $r16 = new java.io.DataInputStream;

        $r17 = new java.io.ByteArrayInputStream;

        $r18 = newarray (byte)[20];

        specialinvoke $r17.<java.io.ByteArrayInputStream: void <init>(byte[])>($r18);

        specialinvoke $r16.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r17);

        $r19 = new java.io.DataOutputStream;

        $r20 = new java.io.ByteArrayOutputStream;

        specialinvoke $r20.<java.io.ByteArrayOutputStream: void <init>()>();

        specialinvoke $r19.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r20);

     label408:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(java.io.DataInput,int,int)>($r16, 0, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label409:
        goto label411;

     label410:
        $r91 := @caughtexception;

        $z76 = $r91 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z76);

     label411:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(java.io.DataInput,int,int)>($r16, 1, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label412:
        goto label414;

     label413:
        $r52 := @caughtexception;

        $z37 = $r52 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z37);

     label414:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(java.io.DataInput,int,int)>($r16, -1, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label415:
        goto label417;

     label416:
        $r35 := @caughtexception;

        $z20 = $r35 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z20);

     label417:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(java.io.DataInput,int,int)>($r16, 8, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label418:
        goto label420;

     label419:
        $r54 := @caughtexception;

        $z39 = $r54 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z39);

     label420:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(java.io.DataInput,int,int)>($r16, -8, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label421:
        goto label423;

     label422:
        $r30 := @caughtexception;

        $z15 = $r30 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z15);

     label423:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(java.io.DataInput,int,int)>($r16, 2147483647, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label424:
        goto label426;

     label425:
        $r129 := @caughtexception;

        $z114 = $r129 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z114);

     label426:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void put(java.io.DataInput,int,int)>($r16, -2147483648, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label427:
        goto label429;

     label428:
        $r81 := @caughtexception;

        $z66 = $r81 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z66);

     label429:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(java.io.DataOutput,int,int)>($r19, 0, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label430:
        goto label432;

     label431:
        $r92 := @caughtexception;

        $z77 = $r92 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z77);

     label432:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(java.io.DataOutput,int,int)>($r19, 1, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label433:
        goto label435;

     label434:
        $r138 := @caughtexception;

        $z123 = $r138 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z123);

     label435:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(java.io.DataOutput,int,int)>($r19, -1, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label436:
        goto label438;

     label437:
        $r167 := @caughtexception;

        $z152 = $r167 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z152);

     label438:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(java.io.DataOutput,int,int)>($r19, 8, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label439:
        goto label441;

     label440:
        $r76 := @caughtexception;

        $z61 = $r76 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z61);

     label441:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(java.io.DataOutput,int,int)>($r19, -8, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label442:
        goto label444;

     label443:
        $r47 := @caughtexception;

        $z32 = $r47 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z32);

     label444:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(java.io.DataOutput,int,int)>($r19, 2147483647, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label445:
        goto label447;

     label446:
        $r128 := @caughtexception;

        $z113 = $r128 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z113);

     label447:
        virtualinvoke r0.<org.apache.flink.core.memory.MemorySegment: void get(java.io.DataOutput,int,int)>($r19, -2147483648, 3);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("IndexOutOfBoundsException expected");

     label448:
        goto label450;

     label449:
        $r50 := @caughtexception;

        $z35 = $r50 instanceof java.lang.IndexOutOfBoundsException;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z35);

     label450:
        return;

        catch java.lang.Exception from label001 to label002 with label003;
        catch java.lang.Exception from label004 to label005 with label006;
        catch java.lang.Exception from label007 to label008 with label009;
        catch java.lang.Exception from label010 to label011 with label012;
        catch java.lang.Exception from label013 to label014 with label015;
        catch java.lang.Exception from label016 to label017 with label018;
        catch java.lang.Exception from label019 to label020 with label021;
        catch java.lang.Exception from label022 to label023 with label024;
        catch java.lang.Exception from label025 to label026 with label027;
        catch java.lang.Exception from label028 to label029 with label030;
        catch java.lang.Exception from label031 to label032 with label033;
        catch java.lang.Exception from label034 to label035 with label036;
        catch java.lang.Exception from label037 to label038 with label039;
        catch java.lang.Exception from label040 to label041 with label042;
        catch java.lang.Exception from label043 to label044 with label045;
        catch java.lang.Exception from label046 to label047 with label048;
        catch java.lang.Exception from label049 to label050 with label051;
        catch java.lang.Exception from label052 to label053 with label054;
        catch java.lang.Exception from label055 to label056 with label057;
        catch java.lang.Exception from label058 to label059 with label060;
        catch java.lang.Exception from label061 to label062 with label063;
        catch java.lang.Exception from label064 to label065 with label066;
        catch java.lang.Exception from label067 to label068 with label069;
        catch java.lang.Exception from label070 to label071 with label072;
        catch java.lang.Exception from label073 to label074 with label075;
        catch java.lang.Exception from label076 to label077 with label078;
        catch java.lang.Exception from label079 to label080 with label081;
        catch java.lang.Exception from label082 to label083 with label084;
        catch java.lang.Exception from label085 to label086 with label087;
        catch java.lang.Exception from label088 to label089 with label090;
        catch java.lang.Exception from label091 to label092 with label093;
        catch java.lang.Exception from label094 to label095 with label096;
        catch java.lang.Exception from label097 to label098 with label099;
        catch java.lang.Exception from label100 to label101 with label102;
        catch java.lang.Exception from label103 to label104 with label105;
        catch java.lang.Exception from label106 to label107 with label108;
        catch java.lang.Exception from label109 to label110 with label111;
        catch java.lang.Exception from label112 to label113 with label114;
        catch java.lang.Exception from label115 to label116 with label117;
        catch java.lang.Exception from label118 to label119 with label120;
        catch java.lang.Exception from label121 to label122 with label123;
        catch java.lang.Exception from label124 to label125 with label126;
        catch java.lang.Exception from label127 to label128 with label129;
        catch java.lang.Exception from label130 to label131 with label132;
        catch java.lang.Exception from label133 to label134 with label135;
        catch java.lang.Exception from label136 to label137 with label138;
        catch java.lang.Exception from label139 to label140 with label141;
        catch java.lang.Exception from label142 to label143 with label144;
        catch java.lang.Exception from label145 to label146 with label147;
        catch java.lang.Exception from label148 to label149 with label150;
        catch java.lang.Exception from label151 to label152 with label153;
        catch java.lang.Exception from label154 to label155 with label156;
        catch java.lang.Exception from label157 to label158 with label159;
        catch java.lang.Exception from label160 to label161 with label162;
        catch java.lang.Exception from label163 to label164 with label165;
        catch java.lang.Exception from label166 to label167 with label168;
        catch java.lang.Exception from label169 to label170 with label171;
        catch java.lang.Exception from label172 to label173 with label174;
        catch java.lang.Exception from label175 to label176 with label177;
        catch java.lang.Exception from label178 to label179 with label180;
        catch java.lang.Exception from label181 to label182 with label183;
        catch java.lang.Exception from label184 to label185 with label186;
        catch java.lang.Exception from label187 to label188 with label189;
        catch java.lang.Exception from label190 to label191 with label192;
        catch java.lang.Exception from label193 to label194 with label195;
        catch java.lang.Exception from label196 to label197 with label198;
        catch java.lang.Exception from label199 to label200 with label201;
        catch java.lang.Exception from label202 to label203 with label204;
        catch java.lang.Exception from label205 to label206 with label207;
        catch java.lang.Exception from label208 to label209 with label210;
        catch java.lang.Exception from label211 to label212 with label213;
        catch java.lang.Exception from label214 to label215 with label216;
        catch java.lang.Exception from label217 to label218 with label219;
        catch java.lang.Exception from label220 to label221 with label222;
        catch java.lang.Exception from label223 to label224 with label225;
        catch java.lang.Exception from label226 to label227 with label228;
        catch java.lang.Exception from label229 to label230 with label231;
        catch java.lang.Exception from label232 to label233 with label234;
        catch java.lang.Exception from label235 to label236 with label237;
        catch java.lang.Exception from label238 to label239 with label240;
        catch java.lang.Exception from label241 to label242 with label243;
        catch java.lang.Exception from label244 to label245 with label246;
        catch java.lang.Exception from label247 to label248 with label249;
        catch java.lang.Exception from label250 to label251 with label252;
        catch java.lang.Exception from label253 to label254 with label255;
        catch java.lang.Exception from label256 to label257 with label258;
        catch java.lang.Exception from label259 to label260 with label261;
        catch java.lang.Exception from label262 to label263 with label264;
        catch java.lang.Exception from label265 to label266 with label267;
        catch java.lang.Exception from label268 to label269 with label270;
        catch java.lang.Exception from label271 to label272 with label273;
        catch java.lang.Exception from label274 to label275 with label276;
        catch java.lang.Exception from label277 to label278 with label279;
        catch java.lang.Exception from label280 to label281 with label282;
        catch java.lang.Exception from label283 to label284 with label285;
        catch java.lang.Exception from label286 to label287 with label288;
        catch java.lang.Exception from label289 to label290 with label291;
        catch java.lang.Exception from label292 to label293 with label294;
        catch java.lang.Exception from label295 to label296 with label297;
        catch java.lang.Exception from label298 to label299 with label300;
        catch java.lang.Exception from label301 to label302 with label303;
        catch java.lang.Exception from label304 to label305 with label306;
        catch java.lang.Exception from label307 to label308 with label309;
        catch java.lang.Exception from label310 to label311 with label312;
        catch java.lang.Exception from label313 to label314 with label315;
        catch java.lang.Exception from label316 to label317 with label318;
        catch java.lang.Exception from label319 to label320 with label321;
        catch java.lang.Exception from label322 to label323 with label324;
        catch java.lang.Exception from label325 to label326 with label327;
        catch java.lang.Exception from label328 to label329 with label330;
        catch java.lang.Exception from label331 to label332 with label333;
        catch java.lang.Exception from label334 to label335 with label336;
        catch java.lang.Exception from label337 to label338 with label339;
        catch java.lang.Exception from label340 to label341 with label342;
        catch java.lang.Exception from label343 to label344 with label345;
        catch java.lang.Exception from label346 to label347 with label348;
        catch java.lang.Exception from label349 to label350 with label351;
        catch java.lang.Exception from label352 to label353 with label354;
        catch java.lang.Exception from label355 to label356 with label357;
        catch java.lang.Exception from label358 to label359 with label360;
        catch java.lang.Exception from label361 to label362 with label363;
        catch java.lang.Exception from label365 to label366 with label367;
        catch java.lang.Exception from label368 to label369 with label370;
        catch java.lang.Exception from label371 to label372 with label373;
        catch java.lang.Exception from label374 to label375 with label376;
        catch java.lang.Exception from label377 to label378 with label379;
        catch java.lang.Exception from label380 to label381 with label382;
        catch java.lang.Exception from label383 to label384 with label385;
        catch java.lang.Exception from label386 to label387 with label388;
        catch java.lang.Exception from label389 to label390 with label391;
        catch java.lang.Exception from label392 to label393 with label394;
        catch java.lang.Exception from label395 to label396 with label397;
        catch java.lang.Exception from label398 to label399 with label400;
        catch java.lang.Exception from label401 to label402 with label403;
        catch java.lang.Exception from label404 to label405 with label406;
        catch java.lang.Exception from label408 to label409 with label410;
        catch java.lang.Exception from label411 to label412 with label413;
        catch java.lang.Exception from label414 to label415 with label416;
        catch java.lang.Exception from label417 to label418 with label419;
        catch java.lang.Exception from label420 to label421 with label422;
        catch java.lang.Exception from label423 to label424 with label425;
        catch java.lang.Exception from label426 to label427 with label428;
        catch java.lang.Exception from label429 to label430 with label431;
        catch java.lang.Exception from label432 to label433 with label434;
        catch java.lang.Exception from label435 to label436 with label437;
        catch java.lang.Exception from label438 to label439 with label440;
        catch java.lang.Exception from label441 to label442 with label443;
        catch java.lang.Exception from label444 to label445 with label446;
        catch java.lang.Exception from label447 to label448 with label449;
    }
}
