public class org.hamcrest.text.StringContainsInOrder extends org.hamcrest.TypeSafeMatcher
{
    private final java.lang.Iterable substrings;

    public void <init>(java.lang.Iterable)
    {
        org.hamcrest.text.StringContainsInOrder r0;
        java.lang.Iterable r1;

        r0 := @this: org.hamcrest.text.StringContainsInOrder;

        r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        r0.<org.hamcrest.text.StringContainsInOrder: java.lang.Iterable substrings> = r1;

        return;
    }

    public boolean matchesSafely(java.lang.String)
    {
        org.hamcrest.text.StringContainsInOrder r0;
        java.lang.String r1, r3;
        java.util.Iterator r2;
        java.lang.Iterable $r4;
        boolean $z0;
        java.lang.Object $r5;
        int i0;

        r0 := @this: org.hamcrest.text.StringContainsInOrder;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

        $r4 = r0.<org.hamcrest.text.StringContainsInOrder: java.lang.Iterable substrings>;

        r2 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r5;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>(r3, i0);

        if i0 != -1 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public void describeMismatchSafely(java.lang.String, org.hamcrest.Description)
    {
        org.hamcrest.text.StringContainsInOrder r0;
        java.lang.String r1;
        org.hamcrest.Description r2, $r3, $r4;

        r0 := @this: org.hamcrest.text.StringContainsInOrder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.hamcrest.Description;

        $r3 = interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("was \"");

        $r4 = interfaceinvoke $r3.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(r1);

        interfaceinvoke $r4.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("\"");

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.text.StringContainsInOrder r0;
        org.hamcrest.Description r1, $r2, $r4;
        java.lang.Iterable $r3;

        r0 := @this: org.hamcrest.text.StringContainsInOrder;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("a string containing ");

        $r3 = r0.<org.hamcrest.text.StringContainsInOrder: java.lang.Iterable substrings>;

        $r4 = interfaceinvoke $r2.<org.hamcrest.Description: org.hamcrest.Description appendValueList(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable)>("", ", ", "", $r3);

        interfaceinvoke $r4.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" in order");

        return;
    }

    public static org.hamcrest.Matcher stringContainsInOrder(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.hamcrest.text.StringContainsInOrder $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = new org.hamcrest.text.StringContainsInOrder;

        specialinvoke $r1.<org.hamcrest.text.StringContainsInOrder: void <init>(java.lang.Iterable)>(r0);

        return $r1;
    }

    public volatile void describeMismatchSafely(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.text.StringContainsInOrder r0;
        java.lang.Object r1;
        org.hamcrest.Description r2;
        java.lang.String $r3;

        r0 := @this: org.hamcrest.text.StringContainsInOrder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        $r3 = (java.lang.String) r1;

        virtualinvoke r0.<org.hamcrest.text.StringContainsInOrder: void describeMismatchSafely(java.lang.String,org.hamcrest.Description)>($r3, r2);

        return;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        org.hamcrest.text.StringContainsInOrder r0;
        java.lang.Object r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.hamcrest.text.StringContainsInOrder;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $z0 = virtualinvoke r0.<org.hamcrest.text.StringContainsInOrder: boolean matchesSafely(java.lang.String)>($r2);

        return $z0;
    }
}
