public abstract class org.apache.flink.core.io.PostVersionedIOReadableWritable extends org.apache.flink.core.io.VersionedIOReadableWritable
{
    private static final byte[] VERSIONED_IDENTIFIER;

    public void <init>()
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritable r0;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritable;

        specialinvoke r0.<org.apache.flink.core.io.VersionedIOReadableWritable: void <init>()>();

        return;
    }

    protected abstract void read(org.apache.flink.core.memory.DataInputView, boolean) throws java.io.IOException;

    public void write(org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritable r0;
        org.apache.flink.core.memory.DataOutputView r1;
        byte[] $r2;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritable;

        r1 := @parameter0: org.apache.flink.core.memory.DataOutputView;

        $r2 = <org.apache.flink.core.io.PostVersionedIOReadableWritable: byte[] VERSIONED_IDENTIFIER>;

        interfaceinvoke r1.<org.apache.flink.core.memory.DataOutputView: void write(byte[])>($r2);

        specialinvoke r0.<org.apache.flink.core.io.VersionedIOReadableWritable: void write(org.apache.flink.core.memory.DataOutputView)>(r1);

        return;
    }

    public final void read(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritable r0;
        java.io.InputStream r1, r10;
        byte[] r2, $r4, $r5;
        int i0, $i1;
        boolean $z0;
        org.apache.flink.core.memory.DataInputViewStreamWrapper $r6, $r8;
        java.io.PushbackInputStream $r7;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritable;

        r1 := @parameter0: java.io.InputStream;

        $r4 = <org.apache.flink.core.io.PostVersionedIOReadableWritable: byte[] VERSIONED_IDENTIFIER>;

        $i1 = lengthof $r4;

        r2 = newarray (byte)[$i1];

        i0 = staticinvoke <org.apache.flink.util.IOUtils: int tryReadFully(java.io.InputStream,byte[])>(r1, r2);

        $r5 = <org.apache.flink.core.io.PostVersionedIOReadableWritable: byte[] VERSIONED_IDENTIFIER>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r2, $r5);

        if $z0 == 0 goto label1;

        $r8 = new org.apache.flink.core.memory.DataInputViewStreamWrapper;

        specialinvoke $r8.<org.apache.flink.core.memory.DataInputViewStreamWrapper: void <init>(java.io.InputStream)>(r1);

        specialinvoke r0.<org.apache.flink.core.io.VersionedIOReadableWritable: void read(org.apache.flink.core.memory.DataInputView)>($r8);

        virtualinvoke r0.<org.apache.flink.core.io.PostVersionedIOReadableWritable: void read(org.apache.flink.core.memory.DataInputView,boolean)>($r8, 1);

        goto label3;

     label1:
        r10 = r1;

        if i0 <= 0 goto label2;

        $r7 = new java.io.PushbackInputStream;

        specialinvoke $r7.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>(r1, i0);

        virtualinvoke $r7.<java.io.PushbackInputStream: void unread(byte[],int,int)>(r2, 0, i0);

        r10 = $r7;

     label2:
        $r6 = new org.apache.flink.core.memory.DataInputViewStreamWrapper;

        specialinvoke $r6.<org.apache.flink.core.memory.DataInputViewStreamWrapper: void <init>(java.io.InputStream)>(r10);

        virtualinvoke r0.<org.apache.flink.core.io.PostVersionedIOReadableWritable: void read(org.apache.flink.core.memory.DataInputView,boolean)>($r6, 0);

     label3:
        return;
    }

    public final void read(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritable r0;
        org.apache.flink.core.memory.DataInputView r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritable;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("PostVersionedIOReadableWritable cannot read from a DataInputView.");

        throw $r2;
    }

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = -15;

        $r0[1] = -51;

        $r0[2] = -123;

        $r0[3] = -97;

        <org.apache.flink.core.io.PostVersionedIOReadableWritable: byte[] VERSIONED_IDENTIFIER> = $r0;

        return;
    }
}
