public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator extends java.lang.Object implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator
{
    private final boolean _allowLowerCaseFirstChar;
    private final boolean _allowNonLetterFirstChar;

    protected void <init>(boolean, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator r0;
        boolean z0, z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator: boolean _allowLowerCaseFirstChar> = z0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator: boolean _allowNonLetterFirstChar> = z1;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator forFirstNameRule(boolean, boolean)
    {
        boolean z0, z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator $r0;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 != 0 goto label1;

        if z1 != 0 goto label1;

        return null;

     label1:
        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator: void <init>(boolean,boolean)>(z0, z1);

        return $r0;
    }

    public boolean accept(char, java.lang.String, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator r0;
        char c0;
        java.lang.String r1;
        int i1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator;

        c0 := @parameter0: char;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c0);

        if $z0 == 0 goto label4;

        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator: boolean _allowLowerCaseFirstChar>;

        if $z2 != 0 goto label1;

        $z3 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>(c0);

        if $z3 != 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator: boolean _allowNonLetterFirstChar>;

        return $z1;
    }
}
