public class org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher extends org.hamcrest.DiagnosingMatcher
{
    private final java.lang.reflect.Method readMethod;
    private final org.hamcrest.Matcher matcher;
    private final java.lang.String propertyName;

    public void <init>(java.beans.PropertyDescriptor, java.lang.Object)
    {
        org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher r0;
        java.beans.PropertyDescriptor r1;
        java.lang.Object r2, $r6;
        java.lang.String $r3;
        java.lang.reflect.Method $r4, $r5;
        org.hamcrest.Matcher $r7;

        r0 := @this: org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher;

        r1 := @parameter0: java.beans.PropertyDescriptor;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.hamcrest.DiagnosingMatcher: void <init>()>();

        $r3 = virtualinvoke r1.<java.beans.PropertyDescriptor: java.lang.String getDisplayName()>();

        r0.<org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher: java.lang.String propertyName> = $r3;

        $r4 = virtualinvoke r1.<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>();

        r0.<org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher: java.lang.reflect.Method readMethod> = $r4;

        $r5 = r0.<org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher: java.lang.reflect.Method readMethod>;

        $r6 = staticinvoke <org.hamcrest.beans.SamePropertyValuesAs: java.lang.Object access$000(java.lang.reflect.Method,java.lang.Object)>($r5, r2);

        $r7 = staticinvoke <org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>($r6);

        r0.<org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher: org.hamcrest.Matcher matcher> = $r7;

        return;
    }

    public boolean matches(java.lang.Object, org.hamcrest.Description)
    {
        org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher r0;
        java.lang.Object r1, r3;
        org.hamcrest.Description r2;
        java.lang.reflect.Method $r4;
        org.hamcrest.Matcher $r5, $r12;
        boolean $z0;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String $r7, $r10;

        r0 := @this: org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Description;

        $r4 = r0.<org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher: java.lang.reflect.Method readMethod>;

        r3 = staticinvoke <org.hamcrest.beans.SamePropertyValuesAs: java.lang.Object access$000(java.lang.reflect.Method,java.lang.Object)>($r4, r1);

        $r5 = r0.<org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher: org.hamcrest.Matcher matcher>;

        $z0 = interfaceinvoke $r5.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r3);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher: java.lang.String propertyName>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r10);

        $r12 = r0.<org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher: org.hamcrest.Matcher matcher>;

        interfaceinvoke $r12.<org.hamcrest.Matcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>(r3, r2);

        return 0;

     label1:
        return 1;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher r0;
        org.hamcrest.Description r1, $r7;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r3, $r6;
        org.hamcrest.Matcher $r8;

        r0 := @this: org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher: java.lang.String propertyName>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r6);

        $r8 = r0.<org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher: org.hamcrest.Matcher matcher>;

        interfaceinvoke $r7.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r8);

        return;
    }
}
