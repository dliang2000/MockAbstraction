public class org.mockito.internal.util.ObjectMethodsGuru extends java.lang.Object
{

    private void <init>()
    {
        org.mockito.internal.util.ObjectMethodsGuru r0;

        r0 := @this: org.mockito.internal.util.ObjectMethodsGuru;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isToStringMethod(java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0;
        org.mockito.internal.creation.DelegatingMethod $r2;
        java.lang.Class $r3;
        java.lang.Class[] $r4;
        int $i0;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.reflect.Method;

        $r2 = new org.mockito.internal.creation.DelegatingMethod;

        specialinvoke $r2.<org.mockito.internal.creation.DelegatingMethod: void <init>(java.lang.reflect.Method)>(r0);

        $r3 = interfaceinvoke $r2.<org.mockito.internal.invocation.MockitoMethod: java.lang.Class getReturnType()>();

        if $r3 != class "Ljava/lang/String;" goto label1;

        $r4 = interfaceinvoke $r2.<org.mockito.internal.invocation.MockitoMethod: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r4;

        if $i0 != 0 goto label1;

        $r5 = "toString";

        $r6 = interfaceinvoke $r2.<org.mockito.internal.invocation.MockitoMethod: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean isCompareToMethod(java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0;
        java.lang.Class $r1, $r2, $r7, $r8;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r4;
        java.lang.Class[] $r5, $r6;
        int $i0;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = class "Ljava/lang/Comparable;";

        $r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 == 0 goto label1;

        $r3 = "compareTo";

        $r4 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $r5 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r5;

        if $i0 != 1 goto label1;

        $r6 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r7 = $r6[0];

        $r8 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        if $r7 != $r8 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }
}
