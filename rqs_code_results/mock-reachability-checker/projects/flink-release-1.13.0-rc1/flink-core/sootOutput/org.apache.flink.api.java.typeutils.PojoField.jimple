public class org.apache.flink.api.java.typeutils.PojoField extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private transient java.lang.reflect.Field field;
    private final org.apache.flink.api.common.typeinfo.TypeInformation type;

    public void <init>(java.lang.reflect.Field, org.apache.flink.api.common.typeinfo.TypeInformation)
    {
        org.apache.flink.api.java.typeutils.PojoField r0;
        java.lang.reflect.Field r1, $r4;
        org.apache.flink.api.common.typeinfo.TypeInformation r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoField;

        r1 := @parameter0: java.lang.reflect.Field;

        r2 := @parameter1: org.apache.flink.api.common.typeinfo.TypeInformation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (java.lang.reflect.Field) $r3;

        r0.<org.apache.flink.api.java.typeutils.PojoField: java.lang.reflect.Field field> = $r4;

        $r5 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (org.apache.flink.api.common.typeinfo.TypeInformation) $r5;

        r0.<org.apache.flink.api.java.typeutils.PojoField: org.apache.flink.api.common.typeinfo.TypeInformation type> = $r6;

        return;
    }

    public java.lang.reflect.Field getField()
    {
        org.apache.flink.api.java.typeutils.PojoField r0;
        java.lang.reflect.Field $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoField;

        $r1 = r0.<org.apache.flink.api.java.typeutils.PojoField: java.lang.reflect.Field field>;

        return $r1;
    }

    public org.apache.flink.api.common.typeinfo.TypeInformation getTypeInformation()
    {
        org.apache.flink.api.java.typeutils.PojoField r0;
        org.apache.flink.api.common.typeinfo.TypeInformation $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoField;

        $r1 = r0.<org.apache.flink.api.java.typeutils.PojoField: org.apache.flink.api.common.typeinfo.TypeInformation type>;

        return $r1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.flink.api.java.typeutils.PojoField r0;
        java.io.ObjectOutputStream r1;
        java.lang.reflect.Field $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoField;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r0.<org.apache.flink.api.java.typeutils.PojoField: java.lang.reflect.Field field>;

        staticinvoke <org.apache.flink.api.java.typeutils.runtime.FieldSerializer: void serializeField(java.lang.reflect.Field,java.io.ObjectOutputStream)>($r2, r1);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.flink.api.java.typeutils.PojoField r0;
        java.io.ObjectInputStream r1;
        java.lang.reflect.Field $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoField;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = staticinvoke <org.apache.flink.api.java.typeutils.runtime.FieldSerializer: java.lang.reflect.Field deserializeField(java.io.ObjectInputStream)>(r1);

        r0.<org.apache.flink.api.java.typeutils.PojoField: java.lang.reflect.Field field> = $r2;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.java.typeutils.PojoField r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r9, $r10, $r12, $r13;
        java.lang.reflect.Field $r3, $r7;
        java.lang.Class $r4;
        java.lang.String $r8, $r14;
        org.apache.flink.api.common.typeinfo.TypeInformation $r11;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoField;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PojoField ");

        $r3 = r0.<org.apache.flink.api.java.typeutils.PojoField: java.lang.reflect.Field field>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = r0.<org.apache.flink.api.java.typeutils.PojoField: java.lang.reflect.Field field>;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Field: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r11 = r0.<org.apache.flink.api.java.typeutils.PojoField: org.apache.flink.api.common.typeinfo.TypeInformation type>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.PojoField r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.api.common.typeinfo.TypeInformation $r3, $r4;
        java.lang.reflect.Field $r5, $r6;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoField;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.api.java.typeutils.PojoField;

        if $z0 == 0 goto label3;

        r2 = (org.apache.flink.api.java.typeutils.PojoField) r1;

        $r4 = r0.<org.apache.flink.api.java.typeutils.PojoField: org.apache.flink.api.common.typeinfo.TypeInformation type>;

        $r3 = r2.<org.apache.flink.api.java.typeutils.PojoField: org.apache.flink.api.common.typeinfo.TypeInformation type>;

        $z1 = virtualinvoke $r4.<org.apache.flink.api.common.typeinfo.TypeInformation: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $r6 = r0.<org.apache.flink.api.java.typeutils.PojoField: java.lang.reflect.Field field>;

        $r5 = r2.<org.apache.flink.api.java.typeutils.PojoField: java.lang.reflect.Field field>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.api.java.typeutils.PojoField r0;
        java.lang.Object[] $r1;
        java.lang.reflect.Field $r2;
        org.apache.flink.api.common.typeinfo.TypeInformation $r3;
        int $i0;

        r0 := @this: org.apache.flink.api.java.typeutils.PojoField;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<org.apache.flink.api.java.typeutils.PojoField: java.lang.reflect.Field field>;

        $r1[0] = $r2;

        $r3 = r0.<org.apache.flink.api.java.typeutils.PojoField: org.apache.flink.api.common.typeinfo.TypeInformation type>;

        $r1[1] = $r3;

        $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.PojoField: long serialVersionUID> = 1975295846436559363L;

        return;
    }
}
