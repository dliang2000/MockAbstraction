class javassist.bytecode.AnnotationsAttribute$Copier extends javassist.bytecode.AnnotationsAttribute$Walker
{
    java.io.ByteArrayOutputStream output;
    javassist.bytecode.'annotation'.AnnotationsWriter writer;
    javassist.bytecode.ConstPool srcPool;
    javassist.bytecode.ConstPool destPool;
    java.util.Map classnames;

    void <init>(byte[], javassist.bytecode.ConstPool, javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        byte[] r1;
        javassist.bytecode.ConstPool r2, r3;
        java.util.Map r4;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        r1 := @parameter0: byte[];

        r2 := @parameter1: javassist.bytecode.ConstPool;

        r3 := @parameter2: javassist.bytecode.ConstPool;

        r4 := @parameter3: java.util.Map;

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Copier: void <init>(byte[],javassist.bytecode.ConstPool,javassist.bytecode.ConstPool,java.util.Map,boolean)>(r1, r2, r3, r4, 1);

        return;
    }

    void <init>(byte[], javassist.bytecode.ConstPool, javassist.bytecode.ConstPool, java.util.Map, boolean)
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        byte[] r1;
        javassist.bytecode.ConstPool r2, r3;
        java.util.Map r4;
        boolean z0;
        java.io.ByteArrayOutputStream $r5, $r7;
        javassist.bytecode.'annotation'.AnnotationsWriter $r6;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        r1 := @parameter0: byte[];

        r2 := @parameter1: javassist.bytecode.ConstPool;

        r3 := @parameter2: javassist.bytecode.ConstPool;

        r4 := @parameter3: java.util.Map;

        z0 := @parameter4: boolean;

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: void <init>(byte[])>(r1);

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<javassist.bytecode.AnnotationsAttribute$Copier: java.io.ByteArrayOutputStream output> = $r5;

        if z0 == 0 goto label1;

        $r6 = new javassist.bytecode.'annotation'.AnnotationsWriter;

        $r7 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: java.io.ByteArrayOutputStream output>;

        specialinvoke $r6.<javassist.bytecode.'annotation'.AnnotationsWriter: void <init>(java.io.OutputStream,javassist.bytecode.ConstPool)>($r7, r3);

        r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.'annotation'.AnnotationsWriter writer> = $r6;

     label1:
        r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.ConstPool srcPool> = r2;

        r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.ConstPool destPool> = r3;

        r0.<javassist.bytecode.AnnotationsAttribute$Copier: java.util.Map classnames> = r4;

        return;
    }

    byte[] close() throws java.io.IOException
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        javassist.bytecode.'annotation'.AnnotationsWriter $r1;
        java.io.ByteArrayOutputStream $r2;
        byte[] $r3;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        $r1 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.'annotation'.AnnotationsWriter writer>;

        virtualinvoke $r1.<javassist.bytecode.'annotation'.AnnotationsWriter: void close()>();

        $r2 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: java.io.ByteArrayOutputStream output>;

        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }

    void parameters(int, int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        int i0, i1;
        javassist.bytecode.'annotation'.AnnotationsWriter $r1;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.'annotation'.AnnotationsWriter writer>;

        virtualinvoke $r1.<javassist.bytecode.'annotation'.AnnotationsWriter: void numParameters(int)>(i0);

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: void parameters(int,int)>(i0, i1);

        return;
    }

    int annotationArray(int, int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        int i0, i1, $i2;
        javassist.bytecode.'annotation'.AnnotationsWriter $r1;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.'annotation'.AnnotationsWriter writer>;

        virtualinvoke $r1.<javassist.bytecode.'annotation'.AnnotationsWriter: void numAnnotations(int)>(i1);

        $i2 = specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: int annotationArray(int,int)>(i0, i1);

        return $i2;
    }

    int 'annotation'(int, int, int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        int i0, i1, i2, $i3, $i4;
        javassist.bytecode.'annotation'.AnnotationsWriter $r1;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.'annotation'.AnnotationsWriter writer>;

        $i3 = virtualinvoke r0.<javassist.bytecode.AnnotationsAttribute$Copier: int copyType(int)>(i1);

        virtualinvoke $r1.<javassist.bytecode.'annotation'.AnnotationsWriter: void 'annotation'(int,int)>($i3, i2);

        $i4 = specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: int 'annotation'(int,int,int)>(i0, i1, i2);

        return $i4;
    }

    int memberValuePair(int, int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        int i0, i1, $i2, $i3;
        javassist.bytecode.'annotation'.AnnotationsWriter $r1;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.'annotation'.AnnotationsWriter writer>;

        $i2 = virtualinvoke r0.<javassist.bytecode.AnnotationsAttribute$Copier: int copy(int)>(i1);

        virtualinvoke $r1.<javassist.bytecode.'annotation'.AnnotationsWriter: void memberValuePair(int)>($i2);

        $i3 = specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: int memberValuePair(int,int)>(i0, i1);

        return $i3;
    }

    void constValueMember(int, int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        int i0, i1, $i2;
        javassist.bytecode.'annotation'.AnnotationsWriter $r1;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.'annotation'.AnnotationsWriter writer>;

        $i2 = virtualinvoke r0.<javassist.bytecode.AnnotationsAttribute$Copier: int copy(int)>(i1);

        virtualinvoke $r1.<javassist.bytecode.'annotation'.AnnotationsWriter: void constValueIndex(int,int)>(i0, $i2);

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: void constValueMember(int,int)>(i0, i1);

        return;
    }

    void enumMemberValue(int, int, int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        int i0, i1, i2, $i3, $i4;
        javassist.bytecode.'annotation'.AnnotationsWriter $r1;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.'annotation'.AnnotationsWriter writer>;

        $i3 = virtualinvoke r0.<javassist.bytecode.AnnotationsAttribute$Copier: int copyType(int)>(i1);

        $i4 = virtualinvoke r0.<javassist.bytecode.AnnotationsAttribute$Copier: int copy(int)>(i2);

        virtualinvoke $r1.<javassist.bytecode.'annotation'.AnnotationsWriter: void enumConstValue(int,int)>($i3, $i4);

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: void enumMemberValue(int,int,int)>(i0, i1, i2);

        return;
    }

    void classMemberValue(int, int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        int i0, i1, $i2;
        javassist.bytecode.'annotation'.AnnotationsWriter $r1;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.'annotation'.AnnotationsWriter writer>;

        $i2 = virtualinvoke r0.<javassist.bytecode.AnnotationsAttribute$Copier: int copyType(int)>(i1);

        virtualinvoke $r1.<javassist.bytecode.'annotation'.AnnotationsWriter: void classInfoIndex(int)>($i2);

        specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: void classMemberValue(int,int)>(i0, i1);

        return;
    }

    int annotationMemberValue(int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        int i0, $i1;
        javassist.bytecode.'annotation'.AnnotationsWriter $r1;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.'annotation'.AnnotationsWriter writer>;

        virtualinvoke $r1.<javassist.bytecode.'annotation'.AnnotationsWriter: void annotationValue()>();

        $i1 = specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: int annotationMemberValue(int)>(i0);

        return $i1;
    }

    int arrayMemberValue(int, int) throws java.lang.Exception
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        int i0, i1, $i2;
        javassist.bytecode.'annotation'.AnnotationsWriter $r1;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.'annotation'.AnnotationsWriter writer>;

        virtualinvoke $r1.<javassist.bytecode.'annotation'.AnnotationsWriter: void arrayValue(int)>(i1);

        $i2 = specialinvoke r0.<javassist.bytecode.AnnotationsAttribute$Walker: int arrayMemberValue(int,int)>(i0, i1);

        return $i2;
    }

    int copy(int)
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        int i0, $i1;
        java.util.Map $r1;
        javassist.bytecode.ConstPool $r2, $r3;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        i0 := @parameter0: int;

        $r3 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.ConstPool srcPool>;

        $r2 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.ConstPool destPool>;

        $r1 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: java.util.Map classnames>;

        $i1 = virtualinvoke $r3.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>(i0, $r2, $r1);

        return $i1;
    }

    int copyType(int)
    {
        javassist.bytecode.AnnotationsAttribute$Copier r0;
        int i0, $i1;
        java.lang.String r1, r2;
        javassist.bytecode.ConstPool $r3, $r5;
        java.util.Map $r4;

        r0 := @this: javassist.bytecode.AnnotationsAttribute$Copier;

        i0 := @parameter0: int;

        $r3 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.ConstPool srcPool>;

        r1 = virtualinvoke $r3.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>(i0);

        $r4 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: java.util.Map classnames>;

        r2 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String rename(java.lang.String,java.util.Map)>(r1, $r4);

        $r5 = r0.<javassist.bytecode.AnnotationsAttribute$Copier: javassist.bytecode.ConstPool destPool>;

        $i1 = virtualinvoke $r5.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r2);

        return $i1;
    }
}
