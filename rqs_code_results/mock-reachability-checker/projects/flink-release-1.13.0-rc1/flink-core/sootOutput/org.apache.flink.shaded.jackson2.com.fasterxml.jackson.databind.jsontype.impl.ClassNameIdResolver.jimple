public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
{
    private static final java.lang.String JAVA_UTIL_PKG;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subTypeValidator;

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator instance>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r1, r2, $r3);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>(r1, r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subTypeValidator> = r3;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r4;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r0, $r4, r2);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id getMechanism()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id CLASS>;

        return $r1;
    }

    public void registerSubtype(java.lang.Class, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public java.lang.String idFromValue(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver r0;
        java.lang.Object r1;
        java.lang.Class $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: java.lang.String _idFrom(java.lang.Object,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>(r1, $r2, $r3);

        return $r4;
    }

    public java.lang.String idFromValueAndType(java.lang.Object, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver r0;
        java.lang.Object r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: java.lang.String _idFrom(java.lang.Object,java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)>(r1, r2, $r3);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType typeFromId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext)>(r2, r1);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3, $r5, $r6, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator $r4;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _baseType>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subTypeValidator>;

        r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType resolveAndValidateSubType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>($r5, r1, $r4);

        if r3 != null goto label1;

        $z0 = r2 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        if $z0 == 0 goto label1;

        $r7 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) r2;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _baseType>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)>($r6, r1, r0, "no such class found");

        return $r8;

     label1:
        return r3;
    }

    protected java.lang.String _idFrom(java.lang.Object, java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3, $r5;
        java.lang.Class $r4, r10, r12, r13, r15, r16, r17;
        java.util.EnumMap $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType $r7;
        java.util.EnumSet $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType $r9;
        java.lang.String r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;

        r1 := @parameter0: java.lang.Object;

        r10 := @parameter1: java.lang.Class;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory;

        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isEnumType(java.lang.Class)>(r10);

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r10.<java.lang.Class: boolean isEnum()>();

        if $z3 != 0 goto label1;

        r10 = virtualinvoke r10.<java.lang.Class: java.lang.Class getSuperclass()>();

     label1:
        r11 = virtualinvoke r10.<java.lang.Class: java.lang.String getName()>();

        $z4 = virtualinvoke r11.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.");

        if $z4 == 0 goto label3;

        $z1 = r1 instanceof java.util.EnumSet;

        if $z1 == 0 goto label2;

        $r8 = (java.util.EnumSet) r1;

        r12 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class findEnumType(java.util.EnumSet)>($r8);

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class)>(class "Ljava/util/EnumSet;", r12);

        r11 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.CollectionType: java.lang.String toCanonical()>();

        goto label4;

     label2:
        $z2 = r1 instanceof java.util.EnumMap;

        if $z2 == 0 goto label4;

        $r6 = (java.util.EnumMap) r1;

        r13 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class findEnumType(java.util.EnumMap)>($r6);

        $r7 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class)>(class "Ljava/util/EnumMap;", r13, class "Ljava/lang/Object;");

        r11 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.MapType: java.lang.String toCanonical()>();

        goto label4;

     label3:
        $i0 = virtualinvoke r11.<java.lang.String: int indexOf(int)>(36);

        if $i0 < 0 goto label4;

        r15 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class getOuterClass(java.lang.Class)>(r10);

        if r15 == null goto label4;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _baseType>;

        r16 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class getOuterClass(java.lang.Class)>(r16);

        if $r4 != null goto label4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _baseType>;

        r17 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r11 = virtualinvoke r17.<java.lang.Class: java.lang.String getName()>();

     label4:
        return r11;
    }

    public java.lang.String getDescForKnownTypeIds()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;

        return "class name used as type id";
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: java.lang.String JAVA_UTIL_PKG> = "java.util.";

        return;
    }
}
