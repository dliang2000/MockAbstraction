class org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1 extends java.lang.Object implements org.mockito.internal.util.collections.ListUtil$Filter
{
    final org.mockito.internal.configuration.injection.PropertyAndSetterInjection this$0;

    void <init>(org.mockito.internal.configuration.injection.PropertyAndSetterInjection)
    {
        org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1 r0;
        org.mockito.internal.configuration.injection.PropertyAndSetterInjection r1;

        r0 := @this: org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1;

        r1 := @parameter0: org.mockito.internal.configuration.injection.PropertyAndSetterInjection;

        r0.<org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1: org.mockito.internal.configuration.injection.PropertyAndSetterInjection this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isOut(java.lang.reflect.Field)
    {
        org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1 r0;
        java.lang.reflect.Field r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1;

        r1 := @parameter0: java.lang.reflect.Field;

        $i0 = virtualinvoke r1.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i0);

        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r1.<java.lang.reflect.Field: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public volatile boolean isOut(java.lang.Object)
    {
        org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1 r0;
        java.lang.Object r1;
        java.lang.reflect.Field $r2;
        boolean $z0;

        r0 := @this: org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.reflect.Field) r1;

        $z0 = virtualinvoke r0.<org.mockito.internal.configuration.injection.PropertyAndSetterInjection$1: boolean isOut(java.lang.reflect.Field)>($r2);

        return $z0;
    }
}
