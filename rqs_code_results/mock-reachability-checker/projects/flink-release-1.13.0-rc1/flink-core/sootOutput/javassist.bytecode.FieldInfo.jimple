public final class javassist.bytecode.FieldInfo extends java.lang.Object
{
    javassist.bytecode.ConstPool constPool;
    int accessFlags;
    int name;
    java.lang.String cachedName;
    java.lang.String cachedType;
    int descriptor;
    java.util.List attribute;

    private void <init>(javassist.bytecode.ConstPool)
    {
        javassist.bytecode.FieldInfo r0;
        javassist.bytecode.ConstPool r1;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool constPool> = r1;

        r0.<javassist.bytecode.FieldInfo: int accessFlags> = 0;

        r0.<javassist.bytecode.FieldInfo: java.util.List attribute> = null;

        return;
    }

    public void <init>(javassist.bytecode.ConstPool, java.lang.String, java.lang.String)
    {
        javassist.bytecode.FieldInfo r0;
        javassist.bytecode.ConstPool r1;
        java.lang.String r2, r3;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<javassist.bytecode.FieldInfo: void <init>(javassist.bytecode.ConstPool)>(r1);

        $i0 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r2);

        r0.<javassist.bytecode.FieldInfo: int name> = $i0;

        r0.<javassist.bytecode.FieldInfo: java.lang.String cachedName> = r2;

        $i1 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r3);

        r0.<javassist.bytecode.FieldInfo: int descriptor> = $i1;

        return;
    }

    void <init>(javassist.bytecode.ConstPool, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.FieldInfo r0;
        javassist.bytecode.ConstPool r1;
        java.io.DataInputStream r2;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.io.DataInputStream;

        specialinvoke r0.<javassist.bytecode.FieldInfo: void <init>(javassist.bytecode.ConstPool)>(r1);

        specialinvoke r0.<javassist.bytecode.FieldInfo: void read(java.io.DataInputStream)>(r2);

        return;
    }

    public java.lang.String toString()
    {
        javassist.bytecode.FieldInfo r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r0 := @this: javassist.bytecode.FieldInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<javassist.bytecode.FieldInfo: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke r0.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    void compact(javassist.bytecode.ConstPool)
    {
        javassist.bytecode.FieldInfo r0;
        javassist.bytecode.ConstPool r1;
        java.lang.String $r2, $r3;
        int $i0, $i1;
        java.util.List $r4, $r5;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        $r2 = virtualinvoke r0.<javassist.bytecode.FieldInfo: java.lang.String getName()>();

        $i0 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>($r2);

        r0.<javassist.bytecode.FieldInfo: int name> = $i0;

        $r3 = virtualinvoke r0.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        $i1 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>($r3);

        r0.<javassist.bytecode.FieldInfo: int descriptor> = $i1;

        $r4 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        $r5 = staticinvoke <javassist.bytecode.AttributeInfo: java.util.List copyAll(java.util.List,javassist.bytecode.ConstPool)>($r4, r1);

        r0.<javassist.bytecode.FieldInfo: java.util.List attribute> = $r5;

        r0.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool constPool> = r1;

        return;
    }

    void prune(javassist.bytecode.ConstPool)
    {
        javassist.bytecode.FieldInfo r0;
        javassist.bytecode.ConstPool r1, $r6;
        java.util.ArrayList $r3;
        java.lang.String $r4, $r5;
        int $i0, $i1, i2, i3;
        javassist.bytecode.ConstantAttribute $r7;
        javassist.bytecode.AttributeInfo r8, r9, r10, r11, r12, r13;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r8 = virtualinvoke r0.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("RuntimeInvisibleAnnotations");

        if r8 == null goto label1;

        r9 = virtualinvoke r8.<javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool,java.util.Map)>(r1, null);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r9);

     label1:
        r10 = virtualinvoke r0.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("RuntimeVisibleAnnotations");

        if r10 == null goto label2;

        r11 = virtualinvoke r10.<javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool,java.util.Map)>(r1, null);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r11);

     label2:
        r12 = virtualinvoke r0.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("Signature");

        if r12 == null goto label3;

        r13 = virtualinvoke r12.<javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool,java.util.Map)>(r1, null);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r13);

     label3:
        i2 = virtualinvoke r0.<javassist.bytecode.FieldInfo: int getConstantValue()>();

        if i2 == 0 goto label4;

        $r6 = r0.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool constPool>;

        i3 = virtualinvoke $r6.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>(i2, r1, null);

        $r7 = new javassist.bytecode.ConstantAttribute;

        specialinvoke $r7.<javassist.bytecode.ConstantAttribute: void <init>(javassist.bytecode.ConstPool,int)>(r1, i3);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

     label4:
        r0.<javassist.bytecode.FieldInfo: java.util.List attribute> = $r3;

        $r4 = virtualinvoke r0.<javassist.bytecode.FieldInfo: java.lang.String getName()>();

        $i0 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>($r4);

        r0.<javassist.bytecode.FieldInfo: int name> = $i0;

        $r5 = virtualinvoke r0.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        $i1 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>($r5);

        r0.<javassist.bytecode.FieldInfo: int descriptor> = $i1;

        r0.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool constPool> = r1;

        return;
    }

    public javassist.bytecode.ConstPool getConstPool()
    {
        javassist.bytecode.FieldInfo r0;
        javassist.bytecode.ConstPool $r1;

        r0 := @this: javassist.bytecode.FieldInfo;

        $r1 = r0.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool constPool>;

        return $r1;
    }

    public java.lang.String getName()
    {
        javassist.bytecode.FieldInfo r0;
        java.lang.String $r1, $r2, $r4;
        int $i0;
        javassist.bytecode.ConstPool $r3;

        r0 := @this: javassist.bytecode.FieldInfo;

        $r1 = r0.<javassist.bytecode.FieldInfo: java.lang.String cachedName>;

        if $r1 != null goto label1;

        $r3 = r0.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool constPool>;

        $i0 = r0.<javassist.bytecode.FieldInfo: int name>;

        $r4 = virtualinvoke $r3.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i0);

        r0.<javassist.bytecode.FieldInfo: java.lang.String cachedName> = $r4;

     label1:
        $r2 = r0.<javassist.bytecode.FieldInfo: java.lang.String cachedName>;

        return $r2;
    }

    public void setName(java.lang.String)
    {
        javassist.bytecode.FieldInfo r0;
        java.lang.String r1;
        javassist.bytecode.ConstPool $r2;
        int $i0;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r1);

        r0.<javassist.bytecode.FieldInfo: int name> = $i0;

        r0.<javassist.bytecode.FieldInfo: java.lang.String cachedName> = r1;

        return;
    }

    public int getAccessFlags()
    {
        javassist.bytecode.FieldInfo r0;
        int $i0;

        r0 := @this: javassist.bytecode.FieldInfo;

        $i0 = r0.<javassist.bytecode.FieldInfo: int accessFlags>;

        return $i0;
    }

    public void setAccessFlags(int)
    {
        javassist.bytecode.FieldInfo r0;
        int i0;

        r0 := @this: javassist.bytecode.FieldInfo;

        i0 := @parameter0: int;

        r0.<javassist.bytecode.FieldInfo: int accessFlags> = i0;

        return;
    }

    public java.lang.String getDescriptor()
    {
        javassist.bytecode.FieldInfo r0;
        int $i0;
        javassist.bytecode.ConstPool $r1;
        java.lang.String $r2;

        r0 := @this: javassist.bytecode.FieldInfo;

        $r1 = r0.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool constPool>;

        $i0 = r0.<javassist.bytecode.FieldInfo: int descriptor>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i0);

        return $r2;
    }

    public void setDescriptor(java.lang.String)
    {
        javassist.bytecode.FieldInfo r0;
        java.lang.String r1, $r2;
        boolean $z0;
        javassist.bytecode.ConstPool $r3;
        int $i0;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<javassist.bytecode.FieldInfo: java.lang.String getDescriptor()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r3 = r0.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool constPool>;

        $i0 = virtualinvoke $r3.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r1);

        r0.<javassist.bytecode.FieldInfo: int descriptor> = $i0;

     label1:
        return;
    }

    public int getConstantValue()
    {
        javassist.bytecode.FieldInfo r0;
        javassist.bytecode.ConstantAttribute r1;
        int $i0, $i1, $i2;
        javassist.bytecode.AttributeInfo $r2;

        r0 := @this: javassist.bytecode.FieldInfo;

        $i0 = r0.<javassist.bytecode.FieldInfo: int accessFlags>;

        $i1 = $i0 & 8;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>("ConstantValue");

        r1 = (javassist.bytecode.ConstantAttribute) $r2;

        if r1 != null goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r1.<javassist.bytecode.ConstantAttribute: int getConstantValue()>();

        return $i2;
    }

    public java.util.List getAttributes()
    {
        javassist.bytecode.FieldInfo r0;
        java.util.List $r1, $r2;
        java.util.ArrayList $r3;

        r0 := @this: javassist.bytecode.FieldInfo;

        $r1 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        if $r1 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<javassist.bytecode.FieldInfo: java.util.List attribute> = $r3;

     label1:
        $r2 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        return $r2;
    }

    public javassist.bytecode.AttributeInfo getAttribute(java.lang.String)
    {
        javassist.bytecode.FieldInfo r0;
        java.lang.String r1;
        java.util.List $r2;
        javassist.bytecode.AttributeInfo $r3;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        $r3 = staticinvoke <javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo lookup(java.util.List,java.lang.String)>($r2, r1);

        return $r3;
    }

    public javassist.bytecode.AttributeInfo removeAttribute(java.lang.String)
    {
        javassist.bytecode.FieldInfo r0;
        java.lang.String r1;
        java.util.List $r2;
        javassist.bytecode.AttributeInfo $r3;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        $r3 = staticinvoke <javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo remove(java.util.List,java.lang.String)>($r2, r1);

        return $r3;
    }

    public void addAttribute(javassist.bytecode.AttributeInfo)
    {
        javassist.bytecode.FieldInfo r0;
        javassist.bytecode.AttributeInfo r1;
        java.util.List $r2, $r3, $r6;
        java.lang.String $r4;
        java.util.ArrayList $r7;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: javassist.bytecode.AttributeInfo;

        $r2 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        if $r2 != null goto label1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<javassist.bytecode.FieldInfo: java.util.List attribute> = $r7;

     label1:
        $r3 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        $r4 = virtualinvoke r1.<javassist.bytecode.AttributeInfo: java.lang.String getName()>();

        staticinvoke <javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo remove(java.util.List,java.lang.String)>($r3, $r4);

        $r6 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    private void read(java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.FieldInfo r0;
        java.io.DataInputStream r1;
        int i0, $i1, $i2, $i3, i4;
        java.util.ArrayList $r2;
        javassist.bytecode.ConstPool $r3;
        java.util.List $r4;
        javassist.bytecode.AttributeInfo $r5;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: java.io.DataInputStream;

        $i1 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedShort()>();

        r0.<javassist.bytecode.FieldInfo: int accessFlags> = $i1;

        $i2 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedShort()>();

        r0.<javassist.bytecode.FieldInfo: int name> = $i2;

        $i3 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedShort()>();

        r0.<javassist.bytecode.FieldInfo: int descriptor> = $i3;

        i0 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedShort()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<javassist.bytecode.FieldInfo: java.util.List attribute> = $r2;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r4 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        $r3 = r0.<javassist.bytecode.FieldInfo: javassist.bytecode.ConstPool constPool>;

        $r5 = staticinvoke <javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo read(javassist.bytecode.ConstPool,java.io.DataInputStream)>($r3, r1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    void write(java.io.DataOutputStream) throws java.io.IOException
    {
        javassist.bytecode.FieldInfo r0;
        java.io.DataOutputStream r1;
        int $i0, $i1, $i2, $i3;
        java.util.List $r2, $r3, $r4;

        r0 := @this: javassist.bytecode.FieldInfo;

        r1 := @parameter0: java.io.DataOutputStream;

        $i0 = r0.<javassist.bytecode.FieldInfo: int accessFlags>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i0);

        $i1 = r0.<javassist.bytecode.FieldInfo: int name>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i1);

        $i2 = r0.<javassist.bytecode.FieldInfo: int descriptor>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i2);

        $r2 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        if $r2 != null goto label1;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>(0);

        goto label2;

     label1:
        $r3 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        $i3 = interfaceinvoke $r3.<java.util.List: int size()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i3);

        $r4 = r0.<javassist.bytecode.FieldInfo: java.util.List attribute>;

        staticinvoke <javassist.bytecode.AttributeInfo: void writeAll(java.util.List,java.io.DataOutputStream)>($r4, r1);

     label2:
        return;
    }
}
