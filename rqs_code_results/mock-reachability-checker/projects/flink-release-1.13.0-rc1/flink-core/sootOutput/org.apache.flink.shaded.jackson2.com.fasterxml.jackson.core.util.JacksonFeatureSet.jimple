public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet extends java.lang.Object
{
    protected int _enabled;

    protected void <init>(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet r0;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled> = i0;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet fromDefaults(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature[] r0;
        int i0, $i1, $i2, $i3, i4, i5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature r2, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet $r3;
        boolean $z0;
        java.lang.Class $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        java.lang.String $r9, r10;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature[];

        $i1 = lengthof r0;

        if $i1 <= 31 goto label1;

        $r4 = r0[0];

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        r10 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r10;

        $i3 = lengthof r0;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r7[1] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not use type `%s` with JacksonFeatureSet: too many entries (%d > 31)", $r7);

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label1:
        i4 = 0;

        i0 = lengthof r0;

        i5 = 0;

     label2:
        if i5 >= i0 goto label4;

        r2 = r0[i5];

        $z0 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature: boolean enabledByDefault()>();

        if $z0 == 0 goto label3;

        $i2 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature: int getMask()>();

        i4 = i4 | $i2;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet: void <init>(int)>(i4);

        return $r3;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet fromBitmask(int)
    {
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet $r0;

        i0 := @parameter0: int;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet: void <init>(int)>(i0);

        return $r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet 'with'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature r1;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;

        $i2 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature: int getMask()>();

        i0 = $i1 | $i2;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;

        if i0 != $i3 goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet: void <init>(int)>(i0);

     label2:
        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet without(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature r1;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;

        $i2 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature: int getMask()>();

        $i3 = $i2 ^ -1;

        i0 = $i1 & $i3;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;

        if i0 != $i4 goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet: void <init>(int)>(i0);

     label2:
        return $r2;
    }

    public boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature;

        $i0 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeature: int getMask()>();

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;

        $i2 = $i0 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int asBitmask()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;

        return $i0;
    }
}
