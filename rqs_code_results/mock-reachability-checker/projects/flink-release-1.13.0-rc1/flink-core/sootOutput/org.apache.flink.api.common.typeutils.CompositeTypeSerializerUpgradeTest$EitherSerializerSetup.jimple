public final class org.apache.flink.api.common.typeutils.CompositeTypeSerializerUpgradeTest$EitherSerializerSetup extends java.lang.Object implements org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$PreUpgradeSetup
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.CompositeTypeSerializerUpgradeTest$EitherSerializerSetup r0;

        r0 := @this: org.apache.flink.api.common.typeutils.CompositeTypeSerializerUpgradeTest$EitherSerializerSetup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer createPriorSerializer()
    {
        org.apache.flink.api.common.typeutils.CompositeTypeSerializerUpgradeTest$EitherSerializerSetup r0;
        org.apache.flink.api.java.typeutils.runtime.EitherSerializer $r1;
        org.apache.flink.api.common.typeutils.base.IntSerializer $r2;
        org.apache.flink.api.common.typeutils.base.StringSerializer $r3;

        r0 := @this: org.apache.flink.api.common.typeutils.CompositeTypeSerializerUpgradeTest$EitherSerializerSetup;

        $r1 = new org.apache.flink.api.java.typeutils.runtime.EitherSerializer;

        $r3 = <org.apache.flink.api.common.typeutils.base.StringSerializer: org.apache.flink.api.common.typeutils.base.StringSerializer INSTANCE>;

        $r2 = <org.apache.flink.api.common.typeutils.base.IntSerializer: org.apache.flink.api.common.typeutils.base.IntSerializer INSTANCE>;

        specialinvoke $r1.<org.apache.flink.api.java.typeutils.runtime.EitherSerializer: void <init>(org.apache.flink.api.common.typeutils.TypeSerializer,org.apache.flink.api.common.typeutils.TypeSerializer)>($r3, $r2);

        return $r1;
    }

    public org.apache.flink.types.Either createTestData()
    {
        org.apache.flink.api.common.typeutils.CompositeTypeSerializerUpgradeTest$EitherSerializerSetup r0;
        org.apache.flink.types.Either$Left $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.CompositeTypeSerializerUpgradeTest$EitherSerializerSetup;

        $r1 = new org.apache.flink.types.Either$Left;

        specialinvoke $r1.<org.apache.flink.types.Either$Left: void <init>(java.lang.Object)>("ApacheFlink");

        return $r1;
    }

    public volatile java.lang.Object createTestData()
    {
        org.apache.flink.api.common.typeutils.CompositeTypeSerializerUpgradeTest$EitherSerializerSetup r0;
        org.apache.flink.types.Either $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.CompositeTypeSerializerUpgradeTest$EitherSerializerSetup;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.CompositeTypeSerializerUpgradeTest$EitherSerializerSetup: org.apache.flink.types.Either createTestData()>();

        return $r1;
    }
}
