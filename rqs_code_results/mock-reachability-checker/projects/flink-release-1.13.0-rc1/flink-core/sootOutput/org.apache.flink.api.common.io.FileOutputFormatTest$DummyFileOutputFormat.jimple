public class org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat extends org.apache.flink.api.common.io.FileOutputFormat
{
    private static final long serialVersionUID;
    public boolean testFileName;

    public void <init>()
    {
        org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat r0;

        r0 := @this: org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat;

        specialinvoke r0.<org.apache.flink.api.common.io.FileOutputFormat: void <init>()>();

        r0.<org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat: boolean testFileName> = 0;

        return;
    }

    public void writeRecord(org.apache.flink.types.IntValue) throws java.io.IOException
    {
        org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat r0;
        org.apache.flink.types.IntValue r1;

        r0 := @this: org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat;

        r1 := @parameter0: org.apache.flink.types.IntValue;

        return;
    }

    protected java.lang.String getDirectoryFileName(int)
    {
        org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat r0;
        int i0, $i1;
        boolean $z0;
        java.lang.String $r1, $r8;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat: boolean testFileName>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fancy-");

        $i1 = i0 + 1;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".avro");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label1:
        $r1 = specialinvoke r0.<org.apache.flink.api.common.io.FileOutputFormat: java.lang.String getDirectoryFileName(int)>(i0);

        return $r1;
    }

    public volatile void writeRecord(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat r0;
        java.lang.Object r1;
        org.apache.flink.types.IntValue $r2;

        r0 := @this: org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.flink.types.IntValue) r1;

        virtualinvoke r0.<org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat: void writeRecord(org.apache.flink.types.IntValue)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.io.FileOutputFormatTest$DummyFileOutputFormat: long serialVersionUID> = 1L;

        return;
    }
}
