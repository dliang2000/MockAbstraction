public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase
{

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase: void <init>()>();

        return;
    }

    public java.lang.String translate(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy r0;
        java.lang.String r1, $r6;
        int i0, $i1, $i2, i4, i5;
        java.lang.StringBuilder $r3;
        boolean $z0, z1;
        char $c3, c6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        return r1;

     label01:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = new java.lang.StringBuilder;

        $i1 = i0 * 2;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);

        i4 = 0;

        z1 = 0;

        i5 = 0;

     label02:
        if i5 >= i0 goto label08;

        c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        if i5 > 0 goto label03;

        if c6 == 95 goto label07;

     label03:
        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c6);

        if $z0 == 0 goto label05;

        if z1 != 0 goto label04;

        if i4 <= 0 goto label04;

        $i2 = i4 - 1;

        $c3 = virtualinvoke $r3.<java.lang.StringBuilder: char charAt(int)>($i2);

        if $c3 == 95 goto label04;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        i4 = i4 + 1;

     label04:
        c6 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c6);

        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6);

        i4 = i4 + 1;

     label07:
        i5 = i5 + 1;

        goto label02;

     label08:
        if i4 <= 0 goto label09;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label09:
        $r6 = r1;

     label10:
        return $r6;
    }
}
