class javassist.util.proxy.DefinePackageHelper$Java7 extends javassist.util.proxy.DefinePackageHelper$Helper
{
    private final javassist.util.proxy.SecurityActions stack;
    private final java.lang.invoke.MethodHandle definePackage;

    private void <init>()
    {
        javassist.util.proxy.DefinePackageHelper$Java7 r0;
        javassist.util.proxy.SecurityActions $r1;
        java.lang.invoke.MethodHandle $r2;

        r0 := @this: javassist.util.proxy.DefinePackageHelper$Java7;

        specialinvoke r0.<javassist.util.proxy.DefinePackageHelper$Helper: void <init>(javassist.util.proxy.DefinePackageHelper$1)>(null);

        $r1 = <javassist.util.proxy.SecurityActions: javassist.util.proxy.SecurityActions stack>;

        r0.<javassist.util.proxy.DefinePackageHelper$Java7: javassist.util.proxy.SecurityActions stack> = $r1;

        $r2 = specialinvoke r0.<javassist.util.proxy.DefinePackageHelper$Java7: java.lang.invoke.MethodHandle getDefinePackageMethodHandle()>();

        r0.<javassist.util.proxy.DefinePackageHelper$Java7: java.lang.invoke.MethodHandle definePackage> = $r2;

        return;
    }

    private java.lang.invoke.MethodHandle getDefinePackageMethodHandle()
    {
        javassist.util.proxy.DefinePackageHelper$Java7 r0;
        javassist.util.proxy.SecurityActions $r2;
        java.lang.Class $r3, $r4;
        java.lang.Class[] $r5;
        java.lang.invoke.MethodHandle $r6;
        java.lang.IllegalAccessError $r7;
        java.lang.NoSuchMethodException $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: javassist.util.proxy.DefinePackageHelper$Java7;

        $r2 = r0.<javassist.util.proxy.DefinePackageHelper$Java7: javassist.util.proxy.SecurityActions stack>;

        $r3 = virtualinvoke $r2.<javassist.util.proxy.SecurityActions: java.lang.Class getCallerClass()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label1;

        $r7 = new java.lang.IllegalAccessError;

        specialinvoke $r7.<java.lang.IllegalAccessError: void <init>(java.lang.String)>("Access denied for caller.");

        throw $r7;

     label1:
        $r5 = newarray (java.lang.Class)[8];

        $r5[0] = class "Ljava/lang/String;";

        $r5[1] = class "Ljava/lang/String;";

        $r5[2] = class "Ljava/lang/String;";

        $r5[3] = class "Ljava/lang/String;";

        $r5[4] = class "Ljava/lang/String;";

        $r5[5] = class "Ljava/lang/String;";

        $r5[6] = class "Ljava/lang/String;";

        $r5[7] = class "Ljava/net/URL;";

        $r6 = staticinvoke <javassist.util.proxy.SecurityActions: java.lang.invoke.MethodHandle getMethodHandle(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Ljava/lang/ClassLoader;", "definePackage", $r5);

     label2:
        return $r6;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("cannot initialize", $r8);

        throw $r9;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    java.lang.Package definePackage(java.lang.ClassLoader, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL) throws java.lang.IllegalArgumentException
    {
        javassist.util.proxy.DefinePackageHelper$Java7 r0;
        java.lang.ClassLoader r1;
        java.lang.String r2, r3, r4, r5, r6, r7, r8;
        java.net.URL r9;
        javassist.util.proxy.SecurityActions $r11;
        java.lang.Class $r12;
        java.lang.Object[] $r13;
        java.lang.invoke.MethodHandle $r14;
        java.lang.Object $r15;
        java.lang.Package $r16;
        java.lang.IllegalAccessError $r17;
        java.lang.Throwable $r18;
        boolean $z0, $z1;
        java.lang.RuntimeException $r19;
        java.lang.IllegalArgumentException $r20;

        r0 := @this: javassist.util.proxy.DefinePackageHelper$Java7;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.lang.String;

        r9 := @parameter8: java.net.URL;

        $r11 = r0.<javassist.util.proxy.DefinePackageHelper$Java7: javassist.util.proxy.SecurityActions stack>;

        $r12 = virtualinvoke $r11.<javassist.util.proxy.SecurityActions: java.lang.Class getCallerClass()>();

        if $r12 == class "Ljavassist/util/proxy/DefinePackageHelper;" goto label1;

        $r17 = new java.lang.IllegalAccessError;

        specialinvoke $r17.<java.lang.IllegalAccessError: void <init>(java.lang.String)>("Access denied for caller.");

        throw $r17;

     label1:
        $r14 = r0.<javassist.util.proxy.DefinePackageHelper$Java7: java.lang.invoke.MethodHandle definePackage>;

        $r13 = newarray (java.lang.Object)[9];

        $r13[0] = r1;

        $r13[1] = r2;

        $r13[2] = r3;

        $r13[3] = r4;

        $r13[4] = r5;

        $r13[5] = r6;

        $r13[6] = r7;

        $r13[7] = r8;

        $r13[8] = r9;

        $r15 = virtualinvoke $r14.<java.lang.invoke.MethodHandle: java.lang.Object invokeWithArguments(java.lang.Object[])>($r13);

        $r16 = (java.lang.Package) $r15;

     label2:
        return $r16;

     label3:
        $r18 := @caughtexception;

        $z0 = $r18 instanceof java.lang.IllegalArgumentException;

        if $z0 == 0 goto label4;

        $r20 = (java.lang.IllegalArgumentException) $r18;

        throw $r20;

     label4:
        $z1 = $r18 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label5;

        $r19 = (java.lang.RuntimeException) $r18;

        throw $r19;

     label5:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void <init>(javassist.util.proxy.DefinePackageHelper$1)
    {
        javassist.util.proxy.DefinePackageHelper$Java7 r0;
        javassist.util.proxy.DefinePackageHelper$1 r1;

        r0 := @this: javassist.util.proxy.DefinePackageHelper$Java7;

        r1 := @parameter0: javassist.util.proxy.DefinePackageHelper$1;

        specialinvoke r0.<javassist.util.proxy.DefinePackageHelper$Java7: void <init>()>();

        return;
    }
}
