public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode
{
    private static final long serialVersionUID;
    static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE;
    protected final byte[] _data;

    public void <init>(byte[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode r0;
        byte[] r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data> = r1;

        return;
    }

    public void <init>(byte[], int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode r0;
        byte[] r1, $r2, $r3;
        int i0, i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ValueNode: void <init>()>();

        if i0 != 0 goto label1;

        $i2 = lengthof r1;

        if i1 != $i2 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data> = r1;

        goto label2;

     label1:
        $r2 = newarray (byte)[i1];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data> = $r2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r3, 0, i1);

     label2:
        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[])
    {
        byte[] r0;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode $r1, $r2;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE>;

        return $r2;

     label2:
        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: void <init>(byte[])>(r0);

        return $r1;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode $r1, $r2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        return null;

     label1:
        if i1 != 0 goto label2;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE>;

        return $r2;

     label2:
        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: void <init>(byte[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType getNodeType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.JsonNodeType BINARY>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken asToken()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        return $r1;
    }

    public byte[] binaryValue()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode r0;
        byte[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;

        return $r1;
    }

    public java.lang.String asText()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant $r1;
        byte[] $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variants: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant getDefaultVariant()>();

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;

        $r3 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: java.lang.String encode(byte[],boolean)>($r2, 0);

        return $r3;
    }

    public final void serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant $r4;
        byte[] $r5, $r6;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;

        $i0 = lengthof $r5;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,byte[],int,int)>($r4, $r6, 0, $i0);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        byte[] $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode) r1;

        $r4 = $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r3);

        return $z1;
    }

    public int hashCode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode r0;
        byte[] $r1, $r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;

        if $r1 != null goto label1;

        $i0 = -1;

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;

        $i0 = lengthof $r2;

     label2:
        return $i0;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode $r0;
        byte[] $r1;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: long serialVersionUID> = 2L;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode;

        $r1 = newarray (byte)[0];

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: void <init>(byte[])>($r1);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE> = $r0;

        return;
    }
}
