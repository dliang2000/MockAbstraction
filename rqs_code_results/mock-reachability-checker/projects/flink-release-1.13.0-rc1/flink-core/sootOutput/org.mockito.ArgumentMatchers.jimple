public class org.mockito.ArgumentMatchers extends java.lang.Object
{

    public void <init>()
    {
        org.mockito.ArgumentMatchers r0;

        r0 := @this: org.mockito.ArgumentMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object any()
    {
        java.lang.Object $r0;

        $r0 = staticinvoke <org.mockito.ArgumentMatchers: java.lang.Object anyObject()>();

        return $r0;
    }

    public static java.lang.Object anyObject()
    {
        org.mockito.internal.matchers.Any $r0;

        $r0 = <org.mockito.internal.matchers.Any: org.mockito.internal.matchers.Any ANY>;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return null;
    }

    public static java.lang.Object any(java.lang.Class)
    {
        java.lang.Class r0;
        org.mockito.internal.matchers.InstanceOf$VarArgAware $r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        java.lang.Object $r8;

        r0 := @parameter0: java.lang.Class;

        $r1 = new org.mockito.internal.matchers.InstanceOf$VarArgAware;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<any ");

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.mockito.internal.matchers.InstanceOf$VarArgAware: void <init>(java.lang.Class,java.lang.String)>(r0, $r7);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r1);

        $r8 = staticinvoke <org.mockito.internal.util.Primitives: java.lang.Object defaultValue(java.lang.Class)>(r0);

        return $r8;
    }

    public static java.lang.Object isA(java.lang.Class)
    {
        java.lang.Class r0;
        org.mockito.internal.matchers.InstanceOf $r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r1.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class)>(r0);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r1);

        $r2 = staticinvoke <org.mockito.internal.util.Primitives: java.lang.Object defaultValue(java.lang.Class)>(r0);

        return $r2;
    }

    public static java.lang.Object anyVararg()
    {
        staticinvoke <org.mockito.ArgumentMatchers: java.lang.Object any()>();

        return null;
    }

    public static boolean anyBoolean()
    {
        org.mockito.internal.matchers.InstanceOf $r0;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Boolean;", "<any boolean>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0;
    }

    public static byte anyByte()
    {
        org.mockito.internal.matchers.InstanceOf $r0;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Byte;", "<any byte>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0;
    }

    public static char anyChar()
    {
        org.mockito.internal.matchers.InstanceOf $r0;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Character;", "<any char>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0;
    }

    public static int anyInt()
    {
        org.mockito.internal.matchers.InstanceOf $r0;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Integer;", "<any integer>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0;
    }

    public static long anyLong()
    {
        org.mockito.internal.matchers.InstanceOf $r0;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Long;", "<any long>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0L;
    }

    public static float anyFloat()
    {
        org.mockito.internal.matchers.InstanceOf $r0;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Float;", "<any float>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0.0F;
    }

    public static double anyDouble()
    {
        org.mockito.internal.matchers.InstanceOf $r0;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Double;", "<any double>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0.0;
    }

    public static short anyShort()
    {
        org.mockito.internal.matchers.InstanceOf $r0;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Short;", "<any short>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0;
    }

    public static java.lang.String anyString()
    {
        org.mockito.internal.matchers.InstanceOf $r0;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/String;", "<any string>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return "";
    }

    public static java.util.List anyList()
    {
        org.mockito.internal.matchers.InstanceOf $r0;
        java.util.ArrayList $r1;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/util/List;", "<any List>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(0);

        return $r1;
    }

    public static java.util.List anyListOf(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.List $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.mockito.ArgumentMatchers: java.util.List anyList()>();

        return $r1;
    }

    public static java.util.Set anySet()
    {
        org.mockito.internal.matchers.InstanceOf $r0;
        java.util.HashSet $r1;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/util/Set;", "<any set>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>(int)>(0);

        return $r1;
    }

    public static java.util.Set anySetOf(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.Set $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.mockito.ArgumentMatchers: java.util.Set anySet()>();

        return $r1;
    }

    public static java.util.Map anyMap()
    {
        org.mockito.internal.matchers.InstanceOf $r0;
        java.util.HashMap $r1;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/util/Map;", "<any map>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(0);

        return $r1;
    }

    public static java.util.Map anyMapOf(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, r1;
        java.util.Map $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <org.mockito.ArgumentMatchers: java.util.Map anyMap()>();

        return $r2;
    }

    public static java.util.Collection anyCollection()
    {
        org.mockito.internal.matchers.InstanceOf $r0;
        java.util.ArrayList $r1;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/util/Collection;", "<any collection>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(0);

        return $r1;
    }

    public static java.util.Collection anyCollectionOf(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.Collection $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.mockito.ArgumentMatchers: java.util.Collection anyCollection()>();

        return $r1;
    }

    public static java.lang.Iterable anyIterable()
    {
        org.mockito.internal.matchers.InstanceOf $r0;
        java.util.ArrayList $r1;

        $r0 = new org.mockito.internal.matchers.InstanceOf;

        specialinvoke $r0.<org.mockito.internal.matchers.InstanceOf: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Iterable;", "<any iterable>");

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(0);

        return $r1;
    }

    public static java.lang.Iterable anyIterableOf(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Iterable $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.mockito.ArgumentMatchers: java.lang.Iterable anyIterable()>();

        return $r1;
    }

    public static boolean eq(boolean)
    {
        boolean z0;
        org.mockito.internal.matchers.Equals $r0;
        java.lang.Boolean $r1;

        z0 := @parameter0: boolean;

        $r0 = new org.mockito.internal.matchers.Equals;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        specialinvoke $r0.<org.mockito.internal.matchers.Equals: void <init>(java.lang.Object)>($r1);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0;
    }

    public static byte eq(byte)
    {
        byte b0;
        org.mockito.internal.matchers.Equals $r0;
        java.lang.Byte $r1;

        b0 := @parameter0: byte;

        $r0 = new org.mockito.internal.matchers.Equals;

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        specialinvoke $r0.<org.mockito.internal.matchers.Equals: void <init>(java.lang.Object)>($r1);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0;
    }

    public static char eq(char)
    {
        char c0;
        org.mockito.internal.matchers.Equals $r0;
        java.lang.Character $r1;

        c0 := @parameter0: char;

        $r0 = new org.mockito.internal.matchers.Equals;

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        specialinvoke $r0.<org.mockito.internal.matchers.Equals: void <init>(java.lang.Object)>($r1);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0;
    }

    public static double eq(double)
    {
        double d0;
        org.mockito.internal.matchers.Equals $r0;
        java.lang.Double $r1;

        d0 := @parameter0: double;

        $r0 = new org.mockito.internal.matchers.Equals;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        specialinvoke $r0.<org.mockito.internal.matchers.Equals: void <init>(java.lang.Object)>($r1);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0.0;
    }

    public static float eq(float)
    {
        float f0;
        org.mockito.internal.matchers.Equals $r0;
        java.lang.Float $r1;

        f0 := @parameter0: float;

        $r0 = new org.mockito.internal.matchers.Equals;

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        specialinvoke $r0.<org.mockito.internal.matchers.Equals: void <init>(java.lang.Object)>($r1);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0.0F;
    }

    public static int eq(int)
    {
        int i0;
        org.mockito.internal.matchers.Equals $r0;
        java.lang.Integer $r1;

        i0 := @parameter0: int;

        $r0 = new org.mockito.internal.matchers.Equals;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r0.<org.mockito.internal.matchers.Equals: void <init>(java.lang.Object)>($r1);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0;
    }

    public static long eq(long)
    {
        long l0;
        org.mockito.internal.matchers.Equals $r0;
        java.lang.Long $r1;

        l0 := @parameter0: long;

        $r0 = new org.mockito.internal.matchers.Equals;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        specialinvoke $r0.<org.mockito.internal.matchers.Equals: void <init>(java.lang.Object)>($r1);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0L;
    }

    public static short eq(short)
    {
        short s0;
        org.mockito.internal.matchers.Equals $r0;
        java.lang.Short $r1;

        s0 := @parameter0: short;

        $r0 = new org.mockito.internal.matchers.Equals;

        $r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        specialinvoke $r0.<org.mockito.internal.matchers.Equals: void <init>(java.lang.Object)>($r1);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return 0;
    }

    public static java.lang.Object eq(java.lang.Object)
    {
        java.lang.Object r0, $r3;
        org.mockito.internal.matchers.Equals $r1;
        java.lang.Class $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.mockito.internal.matchers.Equals;

        specialinvoke $r1.<org.mockito.internal.matchers.Equals: void <init>(java.lang.Object)>(r0);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r1);

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.mockito.internal.util.Primitives: java.lang.Object defaultValue(java.lang.Class)>($r2);

        return $r3;
    }

    public static transient java.lang.Object refEq(java.lang.Object, java.lang.String[])
    {
        java.lang.Object r0;
        java.lang.String[] r1;
        org.mockito.internal.matchers.apachecommons.ReflectionEquals $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String[];

        $r2 = new org.mockito.internal.matchers.apachecommons.ReflectionEquals;

        specialinvoke $r2.<org.mockito.internal.matchers.apachecommons.ReflectionEquals: void <init>(java.lang.Object,java.lang.String[])>(r0, r1);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r2);

        return null;
    }

    public static java.lang.Object same(java.lang.Object)
    {
        java.lang.Object r0, $r3;
        org.mockito.internal.matchers.Same $r1;
        java.lang.Class $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.mockito.internal.matchers.Same;

        specialinvoke $r1.<org.mockito.internal.matchers.Same: void <init>(java.lang.Object)>(r0);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r1);

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.mockito.internal.util.Primitives: java.lang.Object defaultValue(java.lang.Class)>($r2);

        return $r3;
    }

    public static java.lang.Object isNull()
    {
        org.mockito.internal.matchers.Null $r0;

        $r0 = <org.mockito.internal.matchers.Null: org.mockito.internal.matchers.Null NULL>;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return null;
    }

    public static java.lang.Object isNull(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Object $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.mockito.ArgumentMatchers: java.lang.Object isNull()>();

        return $r1;
    }

    public static java.lang.Object notNull()
    {
        org.mockito.internal.matchers.NotNull $r0;

        $r0 = <org.mockito.internal.matchers.NotNull: org.mockito.internal.matchers.NotNull NOT_NULL>;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r0);

        return null;
    }

    public static java.lang.Object notNull(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Object $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.mockito.ArgumentMatchers: java.lang.Object notNull()>();

        return $r1;
    }

    public static java.lang.Object isNotNull()
    {
        java.lang.Object $r0;

        $r0 = staticinvoke <org.mockito.ArgumentMatchers: java.lang.Object notNull()>();

        return $r0;
    }

    public static java.lang.Object isNotNull(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Object $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.mockito.ArgumentMatchers: java.lang.Object notNull(java.lang.Class)>(r0);

        return $r1;
    }

    public static java.lang.Object nullable(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Object $r1, $r2, $r4;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.mockito.ArgumentMatchers: java.lang.Object isNull()>();

        $r2 = staticinvoke <org.mockito.ArgumentMatchers: java.lang.Object isA(java.lang.Class)>(r0);

        staticinvoke <org.mockito.AdditionalMatchers: java.lang.Object or(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r4 = staticinvoke <org.mockito.internal.util.Primitives: java.lang.Object defaultValue(java.lang.Class)>(r0);

        return $r4;
    }

    public static java.lang.String contains(java.lang.String)
    {
        java.lang.String r0;
        org.mockito.internal.matchers.Contains $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.mockito.internal.matchers.Contains;

        specialinvoke $r1.<org.mockito.internal.matchers.Contains: void <init>(java.lang.String)>(r0);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r1);

        return "";
    }

    public static java.lang.String matches(java.lang.String)
    {
        java.lang.String r0;
        org.mockito.internal.matchers.Matches $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.mockito.internal.matchers.Matches;

        specialinvoke $r1.<org.mockito.internal.matchers.Matches: void <init>(java.lang.String)>(r0);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r1);

        return "";
    }

    public static java.lang.String matches(java.util.regex.Pattern)
    {
        java.util.regex.Pattern r0;
        org.mockito.internal.matchers.Matches $r1;

        r0 := @parameter0: java.util.regex.Pattern;

        $r1 = new org.mockito.internal.matchers.Matches;

        specialinvoke $r1.<org.mockito.internal.matchers.Matches: void <init>(java.util.regex.Pattern)>(r0);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r1);

        return "";
    }

    public static java.lang.String endsWith(java.lang.String)
    {
        java.lang.String r0;
        org.mockito.internal.matchers.EndsWith $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.mockito.internal.matchers.EndsWith;

        specialinvoke $r1.<org.mockito.internal.matchers.EndsWith: void <init>(java.lang.String)>(r0);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r1);

        return "";
    }

    public static java.lang.String startsWith(java.lang.String)
    {
        java.lang.String r0;
        org.mockito.internal.matchers.StartsWith $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.mockito.internal.matchers.StartsWith;

        specialinvoke $r1.<org.mockito.internal.matchers.StartsWith: void <init>(java.lang.String)>(r0);

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>($r1);

        return "";
    }

    public static java.lang.Object argThat(org.mockito.ArgumentMatcher)
    {
        org.mockito.ArgumentMatcher r0;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>(r0);

        return null;
    }

    public static char charThat(org.mockito.ArgumentMatcher)
    {
        org.mockito.ArgumentMatcher r0;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>(r0);

        return 0;
    }

    public static boolean booleanThat(org.mockito.ArgumentMatcher)
    {
        org.mockito.ArgumentMatcher r0;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>(r0);

        return 0;
    }

    public static byte byteThat(org.mockito.ArgumentMatcher)
    {
        org.mockito.ArgumentMatcher r0;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>(r0);

        return 0;
    }

    public static short shortThat(org.mockito.ArgumentMatcher)
    {
        org.mockito.ArgumentMatcher r0;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>(r0);

        return 0;
    }

    public static int intThat(org.mockito.ArgumentMatcher)
    {
        org.mockito.ArgumentMatcher r0;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>(r0);

        return 0;
    }

    public static long longThat(org.mockito.ArgumentMatcher)
    {
        org.mockito.ArgumentMatcher r0;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>(r0);

        return 0L;
    }

    public static float floatThat(org.mockito.ArgumentMatcher)
    {
        org.mockito.ArgumentMatcher r0;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>(r0);

        return 0.0F;
    }

    public static double doubleThat(org.mockito.ArgumentMatcher)
    {
        org.mockito.ArgumentMatcher r0;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        staticinvoke <org.mockito.ArgumentMatchers: void reportMatcher(org.mockito.ArgumentMatcher)>(r0);

        return 0.0;
    }

    private static void reportMatcher(org.mockito.ArgumentMatcher)
    {
        org.mockito.ArgumentMatcher r0;
        org.mockito.internal.progress.MockingProgress $r1;
        org.mockito.internal.progress.ArgumentMatcherStorage $r2;

        r0 := @parameter0: org.mockito.ArgumentMatcher;

        $r1 = staticinvoke <org.mockito.internal.progress.ThreadSafeMockingProgress: org.mockito.internal.progress.MockingProgress mockingProgress()>();

        $r2 = interfaceinvoke $r1.<org.mockito.internal.progress.MockingProgress: org.mockito.internal.progress.ArgumentMatcherStorage getArgumentMatcherStorage()>();

        interfaceinvoke $r2.<org.mockito.internal.progress.ArgumentMatcherStorage: void reportMatcher(org.mockito.ArgumentMatcher)>(r0);

        return;
    }
}
