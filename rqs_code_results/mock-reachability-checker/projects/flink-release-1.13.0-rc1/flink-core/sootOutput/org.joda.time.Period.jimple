public final class org.joda.time.Period extends org.joda.time.base.BasePeriod implements org.joda.time.ReadablePeriod, java.io.Serializable
{
    public static final org.joda.time.Period ZERO;
    private static final long serialVersionUID;

    public static org.joda.time.Period parse(java.lang.String)
    {
        java.lang.String r0;
        org.joda.time.format.PeriodFormatter $r1;
        org.joda.time.Period $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter standard()>();

        $r2 = staticinvoke <org.joda.time.Period: org.joda.time.Period parse(java.lang.String,org.joda.time.format.PeriodFormatter)>(r0, $r1);

        return $r2;
    }

    public static org.joda.time.Period parse(java.lang.String, org.joda.time.format.PeriodFormatter)
    {
        java.lang.String r0;
        org.joda.time.format.PeriodFormatter r1;
        org.joda.time.Period $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.joda.time.format.PeriodFormatter;

        $r2 = virtualinvoke r1.<org.joda.time.format.PeriodFormatter: org.joda.time.Period parsePeriod(java.lang.String)>(r0);

        return $r2;
    }

    public static org.joda.time.Period years(int)
    {
        int i0;
        org.joda.time.Period $r0;
        int[] $r1;
        org.joda.time.PeriodType $r2;

        i0 := @parameter0: int;

        $r0 = new org.joda.time.Period;

        $r1 = newarray (int)[9];

        $r1[0] = i0;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = 0;

        $r1[7] = 0;

        $r1[8] = 0;

        $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2);

        return $r0;
    }

    public static org.joda.time.Period months(int)
    {
        int i0;
        org.joda.time.Period $r0;
        int[] $r1;
        org.joda.time.PeriodType $r2;

        i0 := @parameter0: int;

        $r0 = new org.joda.time.Period;

        $r1 = newarray (int)[8];

        $r1[0] = 0;

        $r1[1] = i0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = 0;

        $r1[7] = 0;

        $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2);

        return $r0;
    }

    public static org.joda.time.Period weeks(int)
    {
        int i0;
        org.joda.time.Period $r0;
        int[] $r1;
        org.joda.time.PeriodType $r2;

        i0 := @parameter0: int;

        $r0 = new org.joda.time.Period;

        $r1 = newarray (int)[8];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = i0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = 0;

        $r1[7] = 0;

        $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2);

        return $r0;
    }

    public static org.joda.time.Period days(int)
    {
        int i0;
        org.joda.time.Period $r0;
        int[] $r1;
        org.joda.time.PeriodType $r2;

        i0 := @parameter0: int;

        $r0 = new org.joda.time.Period;

        $r1 = newarray (int)[8];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = i0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = 0;

        $r1[7] = 0;

        $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2);

        return $r0;
    }

    public static org.joda.time.Period hours(int)
    {
        int i0;
        org.joda.time.Period $r0;
        int[] $r1;
        org.joda.time.PeriodType $r2;

        i0 := @parameter0: int;

        $r0 = new org.joda.time.Period;

        $r1 = newarray (int)[8];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = i0;

        $r1[5] = 0;

        $r1[6] = 0;

        $r1[7] = 0;

        $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2);

        return $r0;
    }

    public static org.joda.time.Period minutes(int)
    {
        int i0;
        org.joda.time.Period $r0;
        int[] $r1;
        org.joda.time.PeriodType $r2;

        i0 := @parameter0: int;

        $r0 = new org.joda.time.Period;

        $r1 = newarray (int)[8];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = i0;

        $r1[6] = 0;

        $r1[7] = 0;

        $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2);

        return $r0;
    }

    public static org.joda.time.Period seconds(int)
    {
        int i0;
        org.joda.time.Period $r0;
        int[] $r1;
        org.joda.time.PeriodType $r2;

        i0 := @parameter0: int;

        $r0 = new org.joda.time.Period;

        $r1 = newarray (int)[8];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = i0;

        $r1[7] = 0;

        $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2);

        return $r0;
    }

    public static org.joda.time.Period millis(int)
    {
        int i0;
        org.joda.time.Period $r0;
        int[] $r1;
        org.joda.time.PeriodType $r2;

        i0 := @parameter0: int;

        $r0 = new org.joda.time.Period;

        $r1 = newarray (int)[8];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = 0;

        $r1[7] = i0;

        $r2 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        specialinvoke $r0.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>($r1, $r2);

        return $r0;
    }

    public static org.joda.time.Period fieldDifference(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial)
    {
        org.joda.time.ReadablePartial r0, r1;
        org.joda.time.DurationFieldType[] r2;
        int[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.IllegalArgumentException $r4, $r13, $r14, $r15;
        org.joda.time.Period $r5;
        org.joda.time.PeriodType $r6;
        org.joda.time.DateTimeFieldType $r7, $r8, $r9;
        org.joda.time.DurationFieldType $r10, $r11, $r12;

        r0 := @parameter0: org.joda.time.ReadablePartial;

        r1 := @parameter1: org.joda.time.ReadablePartial;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ReadablePartial objects must not be null");

        throw $r4;

     label2:
        $i1 = interfaceinvoke r0.<org.joda.time.ReadablePartial: int size()>();

        $i2 = interfaceinvoke r1.<org.joda.time.ReadablePartial: int size()>();

        if $i1 == $i2 goto label3;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ReadablePartial objects must have the same set of fields");

        throw $r15;

     label3:
        $i3 = interfaceinvoke r0.<org.joda.time.ReadablePartial: int size()>();

        r2 = newarray (org.joda.time.DurationFieldType)[$i3];

        $i4 = interfaceinvoke r0.<org.joda.time.ReadablePartial: int size()>();

        r3 = newarray (int)[$i4];

        i9 = 0;

        i0 = interfaceinvoke r0.<org.joda.time.ReadablePartial: int size()>();

     label4:
        if i9 >= i0 goto label7;

        $r7 = interfaceinvoke r0.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>(i9);

        $r8 = interfaceinvoke r1.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>(i9);

        if $r7 == $r8 goto label5;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ReadablePartial objects must have the same set of fields");

        throw $r14;

     label5:
        $r9 = interfaceinvoke r0.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>(i9);

        $r10 = virtualinvoke $r9.<org.joda.time.DateTimeFieldType: org.joda.time.DurationFieldType getDurationType()>();

        r2[i9] = $r10;

        if i9 <= 0 goto label6;

        $i8 = i9 - 1;

        $r12 = r2[$i8];

        $r11 = r2[i9];

        if $r12 != $r11 goto label6;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ReadablePartial objects must not have overlapping fields");

        throw $r13;

     label6:
        $i5 = interfaceinvoke r1.<org.joda.time.ReadablePartial: int getValue(int)>(i9);

        $i6 = interfaceinvoke r0.<org.joda.time.ReadablePartial: int getValue(int)>(i9);

        $i7 = $i5 - $i6;

        r3[i9] = $i7;

        i9 = i9 + 1;

        goto label4;

     label7:
        $r5 = new org.joda.time.Period;

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType forFields(org.joda.time.DurationFieldType[])>(r2);

        specialinvoke $r5.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r3, $r6);

        return $r5;
    }

    public void <init>()
    {
        org.joda.time.Period r0;

        r0 := @this: org.joda.time.Period;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(long,org.joda.time.PeriodType,org.joda.time.Chronology)>(0L, null, null);

        return;
    }

    public void <init>(int, int, int, int)
    {
        org.joda.time.Period r0;
        int i0, i1, i2, i3;
        org.joda.time.PeriodType $r1;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)>(0, 0, 0, 0, i0, i1, i2, i3, $r1);

        return;
    }

    public void <init>(int, int, int, int, int, int, int, int)
    {
        org.joda.time.Period r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        org.joda.time.PeriodType $r1;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        $r1 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)>(i0, i1, i2, i3, i4, i5, i6, i7, $r1);

        return;
    }

    public void <init>(int, int, int, int, int, int, int, int, org.joda.time.PeriodType)
    {
        org.joda.time.Period r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        org.joda.time.PeriodType r1;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: org.joda.time.PeriodType;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)>(i0, i1, i2, i3, i4, i5, i6, i7, r1);

        return;
    }

    public void <init>(long)
    {
        org.joda.time.Period r0;
        long l0;

        r0 := @this: org.joda.time.Period;

        l0 := @parameter0: long;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(long)>(l0);

        return;
    }

    public void <init>(long, org.joda.time.PeriodType)
    {
        org.joda.time.Period r0;
        long l0;
        org.joda.time.PeriodType r1;

        r0 := @this: org.joda.time.Period;

        l0 := @parameter0: long;

        r1 := @parameter1: org.joda.time.PeriodType;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(long,org.joda.time.PeriodType,org.joda.time.Chronology)>(l0, r1, null);

        return;
    }

    public void <init>(long, org.joda.time.Chronology)
    {
        org.joda.time.Period r0;
        long l0;
        org.joda.time.Chronology r1;

        r0 := @this: org.joda.time.Period;

        l0 := @parameter0: long;

        r1 := @parameter1: org.joda.time.Chronology;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(long,org.joda.time.PeriodType,org.joda.time.Chronology)>(l0, null, r1);

        return;
    }

    public void <init>(long, org.joda.time.PeriodType, org.joda.time.Chronology)
    {
        org.joda.time.Period r0;
        long l0;
        org.joda.time.PeriodType r1;
        org.joda.time.Chronology r2;

        r0 := @this: org.joda.time.Period;

        l0 := @parameter0: long;

        r1 := @parameter1: org.joda.time.PeriodType;

        r2 := @parameter2: org.joda.time.Chronology;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(long,org.joda.time.PeriodType,org.joda.time.Chronology)>(l0, r1, r2);

        return;
    }

    public void <init>(long, long)
    {
        org.joda.time.Period r0;
        long l0, l1;

        r0 := @this: org.joda.time.Period;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)>(l0, l1, null, null);

        return;
    }

    public void <init>(long, long, org.joda.time.PeriodType)
    {
        org.joda.time.Period r0;
        long l0, l1;
        org.joda.time.PeriodType r1;

        r0 := @this: org.joda.time.Period;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: org.joda.time.PeriodType;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)>(l0, l1, r1, null);

        return;
    }

    public void <init>(long, long, org.joda.time.Chronology)
    {
        org.joda.time.Period r0;
        long l0, l1;
        org.joda.time.Chronology r1;

        r0 := @this: org.joda.time.Period;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: org.joda.time.Chronology;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)>(l0, l1, null, r1);

        return;
    }

    public void <init>(long, long, org.joda.time.PeriodType, org.joda.time.Chronology)
    {
        org.joda.time.Period r0;
        long l0, l1;
        org.joda.time.PeriodType r1;
        org.joda.time.Chronology r2;

        r0 := @this: org.joda.time.Period;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: org.joda.time.PeriodType;

        r2 := @parameter3: org.joda.time.Chronology;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)>(l0, l1, r1, r2);

        return;
    }

    public void <init>(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant)
    {
        org.joda.time.Period r0;
        org.joda.time.ReadableInstant r1, r2;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        r2 := @parameter1: org.joda.time.ReadableInstant;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)>(r1, r2, null);

        return;
    }

    public void <init>(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant, org.joda.time.PeriodType)
    {
        org.joda.time.Period r0;
        org.joda.time.ReadableInstant r1, r2;
        org.joda.time.PeriodType r3;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        r2 := @parameter1: org.joda.time.ReadableInstant;

        r3 := @parameter2: org.joda.time.PeriodType;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)>(r1, r2, r3);

        return;
    }

    public void <init>(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial)
    {
        org.joda.time.Period r0;
        org.joda.time.ReadablePartial r1, r2;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.ReadablePartial;

        r2 := @parameter1: org.joda.time.ReadablePartial;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)>(r1, r2, null);

        return;
    }

    public void <init>(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial, org.joda.time.PeriodType)
    {
        org.joda.time.Period r0;
        org.joda.time.ReadablePartial r1, r2;
        org.joda.time.PeriodType r3;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.ReadablePartial;

        r2 := @parameter1: org.joda.time.ReadablePartial;

        r3 := @parameter2: org.joda.time.PeriodType;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)>(r1, r2, r3);

        return;
    }

    public void <init>(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration)
    {
        org.joda.time.Period r0;
        org.joda.time.ReadableInstant r1;
        org.joda.time.ReadableDuration r2;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        r2 := @parameter1: org.joda.time.ReadableDuration;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)>(r1, r2, null);

        return;
    }

    public void <init>(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration, org.joda.time.PeriodType)
    {
        org.joda.time.Period r0;
        org.joda.time.ReadableInstant r1;
        org.joda.time.ReadableDuration r2;
        org.joda.time.PeriodType r3;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.ReadableInstant;

        r2 := @parameter1: org.joda.time.ReadableDuration;

        r3 := @parameter2: org.joda.time.PeriodType;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)>(r1, r2, r3);

        return;
    }

    public void <init>(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant)
    {
        org.joda.time.Period r0;
        org.joda.time.ReadableDuration r1;
        org.joda.time.ReadableInstant r2;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.ReadableDuration;

        r2 := @parameter1: org.joda.time.ReadableInstant;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)>(r1, r2, null);

        return;
    }

    public void <init>(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant, org.joda.time.PeriodType)
    {
        org.joda.time.Period r0;
        org.joda.time.ReadableDuration r1;
        org.joda.time.ReadableInstant r2;
        org.joda.time.PeriodType r3;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.ReadableDuration;

        r2 := @parameter1: org.joda.time.ReadableInstant;

        r3 := @parameter2: org.joda.time.PeriodType;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)>(r1, r2, r3);

        return;
    }

    public void <init>(java.lang.Object)
    {
        org.joda.time.Period r0;
        java.lang.Object r1;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)>(r1, null, null);

        return;
    }

    public void <init>(java.lang.Object, org.joda.time.PeriodType)
    {
        org.joda.time.Period r0;
        java.lang.Object r1;
        org.joda.time.PeriodType r2;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.joda.time.PeriodType;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)>(r1, r2, null);

        return;
    }

    public void <init>(java.lang.Object, org.joda.time.Chronology)
    {
        org.joda.time.Period r0;
        java.lang.Object r1;
        org.joda.time.Chronology r2;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.joda.time.Chronology;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)>(r1, null, r2);

        return;
    }

    public void <init>(java.lang.Object, org.joda.time.PeriodType, org.joda.time.Chronology)
    {
        org.joda.time.Period r0;
        java.lang.Object r1;
        org.joda.time.PeriodType r2;
        org.joda.time.Chronology r3;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.joda.time.PeriodType;

        r3 := @parameter2: org.joda.time.Chronology;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)>(r1, r2, r3);

        return;
    }

    private void <init>(int[], org.joda.time.PeriodType)
    {
        org.joda.time.Period r0;
        int[] r1;
        org.joda.time.PeriodType r2;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: int[];

        r2 := @parameter1: org.joda.time.PeriodType;

        specialinvoke r0.<org.joda.time.base.BasePeriod: void <init>(int[],org.joda.time.PeriodType)>(r1, r2);

        return;
    }

    public org.joda.time.Period toPeriod()
    {
        org.joda.time.Period r0;

        r0 := @this: org.joda.time.Period;

        return r0;
    }

    public int getYears()
    {
        org.joda.time.Period r0;
        org.joda.time.PeriodType $r1;
        int $i0, $i1;

        r0 := @this: org.joda.time.Period;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i0 = <org.joda.time.PeriodType: int YEAR_INDEX>;

        $i1 = virtualinvoke $r1.<org.joda.time.PeriodType: int getIndexedField(org.joda.time.ReadablePeriod,int)>(r0, $i0);

        return $i1;
    }

    public int getMonths()
    {
        org.joda.time.Period r0;
        org.joda.time.PeriodType $r1;
        int $i0, $i1;

        r0 := @this: org.joda.time.Period;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i0 = <org.joda.time.PeriodType: int MONTH_INDEX>;

        $i1 = virtualinvoke $r1.<org.joda.time.PeriodType: int getIndexedField(org.joda.time.ReadablePeriod,int)>(r0, $i0);

        return $i1;
    }

    public int getWeeks()
    {
        org.joda.time.Period r0;
        org.joda.time.PeriodType $r1;
        int $i0, $i1;

        r0 := @this: org.joda.time.Period;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i0 = <org.joda.time.PeriodType: int WEEK_INDEX>;

        $i1 = virtualinvoke $r1.<org.joda.time.PeriodType: int getIndexedField(org.joda.time.ReadablePeriod,int)>(r0, $i0);

        return $i1;
    }

    public int getDays()
    {
        org.joda.time.Period r0;
        org.joda.time.PeriodType $r1;
        int $i0, $i1;

        r0 := @this: org.joda.time.Period;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i0 = <org.joda.time.PeriodType: int DAY_INDEX>;

        $i1 = virtualinvoke $r1.<org.joda.time.PeriodType: int getIndexedField(org.joda.time.ReadablePeriod,int)>(r0, $i0);

        return $i1;
    }

    public int getHours()
    {
        org.joda.time.Period r0;
        org.joda.time.PeriodType $r1;
        int $i0, $i1;

        r0 := @this: org.joda.time.Period;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i0 = <org.joda.time.PeriodType: int HOUR_INDEX>;

        $i1 = virtualinvoke $r1.<org.joda.time.PeriodType: int getIndexedField(org.joda.time.ReadablePeriod,int)>(r0, $i0);

        return $i1;
    }

    public int getMinutes()
    {
        org.joda.time.Period r0;
        org.joda.time.PeriodType $r1;
        int $i0, $i1;

        r0 := @this: org.joda.time.Period;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i0 = <org.joda.time.PeriodType: int MINUTE_INDEX>;

        $i1 = virtualinvoke $r1.<org.joda.time.PeriodType: int getIndexedField(org.joda.time.ReadablePeriod,int)>(r0, $i0);

        return $i1;
    }

    public int getSeconds()
    {
        org.joda.time.Period r0;
        org.joda.time.PeriodType $r1;
        int $i0, $i1;

        r0 := @this: org.joda.time.Period;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i0 = <org.joda.time.PeriodType: int SECOND_INDEX>;

        $i1 = virtualinvoke $r1.<org.joda.time.PeriodType: int getIndexedField(org.joda.time.ReadablePeriod,int)>(r0, $i0);

        return $i1;
    }

    public int getMillis()
    {
        org.joda.time.Period r0;
        org.joda.time.PeriodType $r1;
        int $i0, $i1;

        r0 := @this: org.joda.time.Period;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i0 = <org.joda.time.PeriodType: int MILLI_INDEX>;

        $i1 = virtualinvoke $r1.<org.joda.time.PeriodType: int getIndexedField(org.joda.time.ReadablePeriod,int)>(r0, $i0);

        return $i1;
    }

    public org.joda.time.Period withPeriodType(org.joda.time.PeriodType)
    {
        org.joda.time.Period r0, $r2;
        org.joda.time.PeriodType $r1, r3, r4;
        boolean $z0;

        r0 := @this: org.joda.time.Period;

        r3 := @parameter0: org.joda.time.PeriodType;

        r4 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.PeriodType getPeriodType(org.joda.time.PeriodType)>(r3);

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $z0 = virtualinvoke r4.<org.joda.time.PeriodType: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = new org.joda.time.Period;

        specialinvoke $r2.<org.joda.time.Period: void <init>(java.lang.Object,org.joda.time.PeriodType)>(r0, r4);

        return $r2;
    }

    public org.joda.time.Period withFields(org.joda.time.ReadablePeriod)
    {
        org.joda.time.Period r0, $r2;
        org.joda.time.ReadablePeriod r1;
        org.joda.time.PeriodType $r3;
        int[] r4, r5;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        if r1 != null goto label1;

        return r0;

     label1:
        r4 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        r5 = specialinvoke r0.<org.joda.time.base.BasePeriod: int[] mergePeriodInto(int[],org.joda.time.ReadablePeriod)>(r4, r1);

        $r2 = new org.joda.time.Period;

        $r3 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r2.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r5, $r3);

        return $r2;
    }

    public org.joda.time.Period withField(org.joda.time.DurationFieldType, int)
    {
        org.joda.time.Period r0, $r3;
        org.joda.time.DurationFieldType r1;
        int i0;
        int[] r2;
        org.joda.time.PeriodType $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.DurationFieldType;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field must not be null");

        throw $r5;

     label1:
        r2 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        specialinvoke r0.<org.joda.time.base.BasePeriod: void setFieldInto(int[],org.joda.time.DurationFieldType,int)>(r2, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r2, $r4);

        return $r3;
    }

    public org.joda.time.Period withFieldAdded(org.joda.time.DurationFieldType, int)
    {
        org.joda.time.Period r0, $r3;
        org.joda.time.DurationFieldType r1;
        int i0;
        int[] r2;
        org.joda.time.PeriodType $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.DurationFieldType;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field must not be null");

        throw $r5;

     label1:
        if i0 != 0 goto label2;

        return r0;

     label2:
        r2 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        specialinvoke r0.<org.joda.time.base.BasePeriod: void addFieldInto(int[],org.joda.time.DurationFieldType,int)>(r2, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r2, $r4);

        return $r3;
    }

    public org.joda.time.Period withYears(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int YEAR_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean setIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period withMonths(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int MONTH_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean setIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period withWeeks(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int WEEK_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean setIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period withDays(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int DAY_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean setIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period withHours(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int HOUR_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean setIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period withMinutes(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int MINUTE_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean setIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period withSeconds(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int SECOND_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean setIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period withMillis(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int MILLI_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean setIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period plus(org.joda.time.ReadablePeriod)
    {
        org.joda.time.Period r0, $r19;
        org.joda.time.ReadablePeriod r1;
        int[] r2;
        org.joda.time.PeriodType $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r20;
        org.joda.time.DurationFieldType $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        if r1 != null goto label1;

        return r0;

     label1:
        r2 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r3 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i0 = <org.joda.time.PeriodType: int YEAR_INDEX>;

        $r4 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType YEARS_TYPE>;

        $i1 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r4);

        virtualinvoke $r3.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i0, r2, $i1);

        $r5 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i2 = <org.joda.time.PeriodType: int MONTH_INDEX>;

        $r6 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MONTHS_TYPE>;

        $i3 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r6);

        virtualinvoke $r5.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i2, r2, $i3);

        $r7 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i4 = <org.joda.time.PeriodType: int WEEK_INDEX>;

        $r8 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType WEEKS_TYPE>;

        $i5 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r8);

        virtualinvoke $r7.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i4, r2, $i5);

        $r9 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i6 = <org.joda.time.PeriodType: int DAY_INDEX>;

        $r10 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType DAYS_TYPE>;

        $i7 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r10);

        virtualinvoke $r9.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i6, r2, $i7);

        $r11 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i8 = <org.joda.time.PeriodType: int HOUR_INDEX>;

        $r12 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType HOURS_TYPE>;

        $i9 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r12);

        virtualinvoke $r11.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i8, r2, $i9);

        $r13 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i10 = <org.joda.time.PeriodType: int MINUTE_INDEX>;

        $r14 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MINUTES_TYPE>;

        $i11 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r14);

        virtualinvoke $r13.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i10, r2, $i11);

        $r15 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i12 = <org.joda.time.PeriodType: int SECOND_INDEX>;

        $r16 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE>;

        $i13 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r16);

        virtualinvoke $r15.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i12, r2, $i13);

        $r17 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i14 = <org.joda.time.PeriodType: int MILLI_INDEX>;

        $r18 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MILLIS_TYPE>;

        $i15 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r18);

        virtualinvoke $r17.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i14, r2, $i15);

        $r19 = new org.joda.time.Period;

        $r20 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r19.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r2, $r20);

        return $r19;
    }

    public org.joda.time.Period plusYears(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return r0;

     label1:
        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int YEAR_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period plusMonths(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return r0;

     label1:
        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int MONTH_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period plusWeeks(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return r0;

     label1:
        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int WEEK_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period plusDays(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return r0;

     label1:
        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int DAY_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period plusHours(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return r0;

     label1:
        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int HOUR_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period plusMinutes(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return r0;

     label1:
        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int MINUTE_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period plusSeconds(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return r0;

     label1:
        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int SECOND_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period plusMillis(int)
    {
        org.joda.time.Period r0, $r3;
        int i0, $i1;
        int[] r1;
        org.joda.time.PeriodType $r2, $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return r0;

     label1:
        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i1 = <org.joda.time.PeriodType: int MILLI_INDEX>;

        virtualinvoke $r2.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i1, r1, i0);

        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period minus(org.joda.time.ReadablePeriod)
    {
        org.joda.time.Period r0, $r19;
        org.joda.time.ReadablePeriod r1;
        int[] r2;
        org.joda.time.PeriodType $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r20;
        org.joda.time.DurationFieldType $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        if r1 != null goto label1;

        return r0;

     label1:
        r2 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        $r3 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i0 = <org.joda.time.PeriodType: int YEAR_INDEX>;

        $r4 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType YEARS_TYPE>;

        $i1 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r4);

        $i2 = neg $i1;

        virtualinvoke $r3.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i0, r2, $i2);

        $r5 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i3 = <org.joda.time.PeriodType: int MONTH_INDEX>;

        $r6 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MONTHS_TYPE>;

        $i4 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r6);

        $i5 = neg $i4;

        virtualinvoke $r5.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i3, r2, $i5);

        $r7 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i6 = <org.joda.time.PeriodType: int WEEK_INDEX>;

        $r8 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType WEEKS_TYPE>;

        $i7 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r8);

        $i8 = neg $i7;

        virtualinvoke $r7.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i6, r2, $i8);

        $r9 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i9 = <org.joda.time.PeriodType: int DAY_INDEX>;

        $r10 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType DAYS_TYPE>;

        $i10 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r10);

        $i11 = neg $i10;

        virtualinvoke $r9.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i9, r2, $i11);

        $r11 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i12 = <org.joda.time.PeriodType: int HOUR_INDEX>;

        $r12 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType HOURS_TYPE>;

        $i13 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r12);

        $i14 = neg $i13;

        virtualinvoke $r11.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i12, r2, $i14);

        $r13 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i15 = <org.joda.time.PeriodType: int MINUTE_INDEX>;

        $r14 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MINUTES_TYPE>;

        $i16 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r14);

        $i17 = neg $i16;

        virtualinvoke $r13.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i15, r2, $i17);

        $r15 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i18 = <org.joda.time.PeriodType: int SECOND_INDEX>;

        $r16 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE>;

        $i19 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r16);

        $i20 = neg $i19;

        virtualinvoke $r15.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i18, r2, $i20);

        $r17 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        $i21 = <org.joda.time.PeriodType: int MILLI_INDEX>;

        $r18 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MILLIS_TYPE>;

        $i22 = interfaceinvoke r1.<org.joda.time.ReadablePeriod: int get(org.joda.time.DurationFieldType)>($r18);

        $i23 = neg $i22;

        virtualinvoke $r17.<org.joda.time.PeriodType: boolean addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)>(r0, $i21, r2, $i23);

        $r19 = new org.joda.time.Period;

        $r20 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r19.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r2, $r20);

        return $r19;
    }

    public org.joda.time.Period minusYears(int)
    {
        org.joda.time.Period r0, $r1;
        int i0, $i1;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        $i1 = neg i0;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.Period plusYears(int)>($i1);

        return $r1;
    }

    public org.joda.time.Period minusMonths(int)
    {
        org.joda.time.Period r0, $r1;
        int i0, $i1;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        $i1 = neg i0;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.Period plusMonths(int)>($i1);

        return $r1;
    }

    public org.joda.time.Period minusWeeks(int)
    {
        org.joda.time.Period r0, $r1;
        int i0, $i1;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        $i1 = neg i0;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.Period plusWeeks(int)>($i1);

        return $r1;
    }

    public org.joda.time.Period minusDays(int)
    {
        org.joda.time.Period r0, $r1;
        int i0, $i1;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        $i1 = neg i0;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.Period plusDays(int)>($i1);

        return $r1;
    }

    public org.joda.time.Period minusHours(int)
    {
        org.joda.time.Period r0, $r1;
        int i0, $i1;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        $i1 = neg i0;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.Period plusHours(int)>($i1);

        return $r1;
    }

    public org.joda.time.Period minusMinutes(int)
    {
        org.joda.time.Period r0, $r1;
        int i0, $i1;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        $i1 = neg i0;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.Period plusMinutes(int)>($i1);

        return $r1;
    }

    public org.joda.time.Period minusSeconds(int)
    {
        org.joda.time.Period r0, $r1;
        int i0, $i1;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        $i1 = neg i0;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.Period plusSeconds(int)>($i1);

        return $r1;
    }

    public org.joda.time.Period minusMillis(int)
    {
        org.joda.time.Period r0, $r1;
        int i0, $i1;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        $i1 = neg i0;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.Period plusMillis(int)>($i1);

        return $r1;
    }

    public org.joda.time.Period multipliedBy(int)
    {
        org.joda.time.Period r0, $r2, $r3;
        int i0, $i1, $i2, $i3, i4;
        int[] r1;
        org.joda.time.PeriodType $r4;

        r0 := @this: org.joda.time.Period;

        i0 := @parameter0: int;

        $r2 = <org.joda.time.Period: org.joda.time.Period ZERO>;

        if r0 == $r2 goto label1;

        if i0 != 1 goto label2;

     label1:
        return r0;

     label2:
        r1 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>();

        i4 = 0;

     label3:
        $i1 = lengthof r1;

        if i4 >= $i1 goto label4;

        $i2 = r1[i4];

        $i3 = staticinvoke <org.joda.time.field.FieldUtils: int safeMultiply(int,int)>($i2, i0);

        r1[i4] = $i3;

        i4 = i4 + 1;

        goto label3;

     label4:
        $r3 = new org.joda.time.Period;

        $r4 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>();

        specialinvoke $r3.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r1, $r4);

        return $r3;
    }

    public org.joda.time.Period negated()
    {
        org.joda.time.Period r0, $r1;

        r0 := @this: org.joda.time.Period;

        $r1 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.Period multipliedBy(int)>(-1);

        return $r1;
    }

    public org.joda.time.Weeks toStandardWeeks()
    {
        org.joda.time.Period r0;
        long l0, $l3, $l4, $l6, $l7, $l9, $l10, $l12, $l13, $l15, $l16, l18, l19, l20, l21, l22;
        int $i1, $i2, $i5, $i8, $i11, $i14, $i17;
        org.joda.time.Weeks $r1;

        r0 := @this: org.joda.time.Period;

        specialinvoke r0.<org.joda.time.Period: void checkYearsAndMonths(java.lang.String)>("Weeks");

        $i1 = virtualinvoke r0.<org.joda.time.Period: int getMillis()>();

        l18 = (long) $i1;

        $i2 = virtualinvoke r0.<org.joda.time.Period: int getSeconds()>();

        $l3 = (long) $i2;

        $l4 = $l3 * 1000L;

        l19 = l18 + $l4;

        $i5 = virtualinvoke r0.<org.joda.time.Period: int getMinutes()>();

        $l6 = (long) $i5;

        $l7 = $l6 * 60000L;

        l20 = l19 + $l7;

        $i8 = virtualinvoke r0.<org.joda.time.Period: int getHours()>();

        $l9 = (long) $i8;

        $l10 = $l9 * 3600000L;

        l21 = l20 + $l10;

        $i11 = virtualinvoke r0.<org.joda.time.Period: int getDays()>();

        $l12 = (long) $i11;

        $l13 = $l12 * 86400000L;

        l22 = l21 + $l13;

        $i14 = virtualinvoke r0.<org.joda.time.Period: int getWeeks()>();

        $l16 = (long) $i14;

        $l15 = l22 / 604800000L;

        l0 = $l16 + $l15;

        $i17 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>(l0);

        $r1 = staticinvoke <org.joda.time.Weeks: org.joda.time.Weeks weeks(int)>($i17);

        return $r1;
    }

    public org.joda.time.Days toStandardDays()
    {
        org.joda.time.Period r0;
        int $i0, $i1, $i4, $i7, $i10, $i12, $i15;
        long $l2, $l3, $l5, $l6, $l8, $l9, $l11, $l13, $l14, l16, l17, l18, l19, l20, l21, l22;
        org.joda.time.Days $r1;

        r0 := @this: org.joda.time.Period;

        specialinvoke r0.<org.joda.time.Period: void checkYearsAndMonths(java.lang.String)>("Days");

        $i0 = virtualinvoke r0.<org.joda.time.Period: int getMillis()>();

        l16 = (long) $i0;

        $i1 = virtualinvoke r0.<org.joda.time.Period: int getSeconds()>();

        $l2 = (long) $i1;

        $l3 = $l2 * 1000L;

        l17 = l16 + $l3;

        $i4 = virtualinvoke r0.<org.joda.time.Period: int getMinutes()>();

        $l5 = (long) $i4;

        $l6 = $l5 * 60000L;

        l18 = l17 + $l6;

        $i7 = virtualinvoke r0.<org.joda.time.Period: int getHours()>();

        $l8 = (long) $i7;

        $l9 = $l8 * 3600000L;

        l19 = l18 + $l9;

        l20 = l19 / 86400000L;

        $i10 = virtualinvoke r0.<org.joda.time.Period: int getDays()>();

        $l11 = (long) $i10;

        l21 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l20, $l11);

        $i12 = virtualinvoke r0.<org.joda.time.Period: int getWeeks()>();

        $l13 = (long) $i12;

        $l14 = $l13 * 7L;

        l22 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l21, $l14);

        $i15 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>(l22);

        $r1 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>($i15);

        return $r1;
    }

    public org.joda.time.Hours toStandardHours()
    {
        org.joda.time.Period r0;
        int $i0, $i1, $i4, $i7, $i9, $i12, $i15;
        long $l2, $l3, $l5, $l6, $l8, $l10, $l11, $l13, $l14, l16, l17, l18, l19, l20, l21, l22;
        org.joda.time.Hours $r1;

        r0 := @this: org.joda.time.Period;

        specialinvoke r0.<org.joda.time.Period: void checkYearsAndMonths(java.lang.String)>("Hours");

        $i0 = virtualinvoke r0.<org.joda.time.Period: int getMillis()>();

        l16 = (long) $i0;

        $i1 = virtualinvoke r0.<org.joda.time.Period: int getSeconds()>();

        $l2 = (long) $i1;

        $l3 = $l2 * 1000L;

        l17 = l16 + $l3;

        $i4 = virtualinvoke r0.<org.joda.time.Period: int getMinutes()>();

        $l5 = (long) $i4;

        $l6 = $l5 * 60000L;

        l18 = l17 + $l6;

        l19 = l18 / 3600000L;

        $i7 = virtualinvoke r0.<org.joda.time.Period: int getHours()>();

        $l8 = (long) $i7;

        l20 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l19, $l8);

        $i9 = virtualinvoke r0.<org.joda.time.Period: int getDays()>();

        $l10 = (long) $i9;

        $l11 = $l10 * 24L;

        l21 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l20, $l11);

        $i12 = virtualinvoke r0.<org.joda.time.Period: int getWeeks()>();

        $l13 = (long) $i12;

        $l14 = $l13 * 168L;

        l22 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l21, $l14);

        $i15 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>(l22);

        $r1 = staticinvoke <org.joda.time.Hours: org.joda.time.Hours hours(int)>($i15);

        return $r1;
    }

    public org.joda.time.Minutes toStandardMinutes()
    {
        org.joda.time.Period r0;
        int $i0, $i1, $i4, $i6, $i9, $i12, $i15;
        long $l2, $l3, $l5, $l7, $l8, $l10, $l11, $l13, $l14, l16, l17, l18, l19, l20, l21, l22;
        org.joda.time.Minutes $r1;

        r0 := @this: org.joda.time.Period;

        specialinvoke r0.<org.joda.time.Period: void checkYearsAndMonths(java.lang.String)>("Minutes");

        $i0 = virtualinvoke r0.<org.joda.time.Period: int getMillis()>();

        l16 = (long) $i0;

        $i1 = virtualinvoke r0.<org.joda.time.Period: int getSeconds()>();

        $l2 = (long) $i1;

        $l3 = $l2 * 1000L;

        l17 = l16 + $l3;

        l18 = l17 / 60000L;

        $i4 = virtualinvoke r0.<org.joda.time.Period: int getMinutes()>();

        $l5 = (long) $i4;

        l19 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l18, $l5);

        $i6 = virtualinvoke r0.<org.joda.time.Period: int getHours()>();

        $l7 = (long) $i6;

        $l8 = $l7 * 60L;

        l20 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l19, $l8);

        $i9 = virtualinvoke r0.<org.joda.time.Period: int getDays()>();

        $l10 = (long) $i9;

        $l11 = $l10 * 1440L;

        l21 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l20, $l11);

        $i12 = virtualinvoke r0.<org.joda.time.Period: int getWeeks()>();

        $l13 = (long) $i12;

        $l14 = $l13 * 10080L;

        l22 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l21, $l14);

        $i15 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>(l22);

        $r1 = staticinvoke <org.joda.time.Minutes: org.joda.time.Minutes minutes(int)>($i15);

        return $r1;
    }

    public org.joda.time.Seconds toStandardSeconds()
    {
        org.joda.time.Period r0;
        int $i0, $i1, $i2, $i4, $i7, $i10, $i13, $i16;
        long $l3, $l5, $l6, $l8, $l9, $l11, $l12, $l14, $l15, l17, l18, l19, l20, l21, l22;
        org.joda.time.Seconds $r1;

        r0 := @this: org.joda.time.Period;

        specialinvoke r0.<org.joda.time.Period: void checkYearsAndMonths(java.lang.String)>("Seconds");

        $i0 = virtualinvoke r0.<org.joda.time.Period: int getMillis()>();

        $i1 = $i0 / 1000;

        l17 = (long) $i1;

        $i2 = virtualinvoke r0.<org.joda.time.Period: int getSeconds()>();

        $l3 = (long) $i2;

        l18 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l17, $l3);

        $i4 = virtualinvoke r0.<org.joda.time.Period: int getMinutes()>();

        $l5 = (long) $i4;

        $l6 = $l5 * 60L;

        l19 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l18, $l6);

        $i7 = virtualinvoke r0.<org.joda.time.Period: int getHours()>();

        $l8 = (long) $i7;

        $l9 = $l8 * 3600L;

        l20 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l19, $l9);

        $i10 = virtualinvoke r0.<org.joda.time.Period: int getDays()>();

        $l11 = (long) $i10;

        $l12 = $l11 * 86400L;

        l21 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l20, $l12);

        $i13 = virtualinvoke r0.<org.joda.time.Period: int getWeeks()>();

        $l14 = (long) $i13;

        $l15 = $l14 * 604800L;

        l22 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l21, $l15);

        $i16 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>(l22);

        $r1 = staticinvoke <org.joda.time.Seconds: org.joda.time.Seconds seconds(int)>($i16);

        return $r1;
    }

    public org.joda.time.Duration toStandardDuration()
    {
        org.joda.time.Period r0;
        int $i0, $i1, $i4, $i7, $i10, $i13;
        long $l2, $l3, $l5, $l6, $l8, $l9, $l11, $l12, $l14, $l15, l16, l17, l18, l19, l20, l21;
        org.joda.time.Duration $r1;

        r0 := @this: org.joda.time.Period;

        specialinvoke r0.<org.joda.time.Period: void checkYearsAndMonths(java.lang.String)>("Duration");

        $i0 = virtualinvoke r0.<org.joda.time.Period: int getMillis()>();

        l16 = (long) $i0;

        $i1 = virtualinvoke r0.<org.joda.time.Period: int getSeconds()>();

        $l2 = (long) $i1;

        $l3 = $l2 * 1000L;

        l17 = l16 + $l3;

        $i4 = virtualinvoke r0.<org.joda.time.Period: int getMinutes()>();

        $l5 = (long) $i4;

        $l6 = $l5 * 60000L;

        l18 = l17 + $l6;

        $i7 = virtualinvoke r0.<org.joda.time.Period: int getHours()>();

        $l8 = (long) $i7;

        $l9 = $l8 * 3600000L;

        l19 = l18 + $l9;

        $i10 = virtualinvoke r0.<org.joda.time.Period: int getDays()>();

        $l11 = (long) $i10;

        $l12 = $l11 * 86400000L;

        l20 = l19 + $l12;

        $i13 = virtualinvoke r0.<org.joda.time.Period: int getWeeks()>();

        $l14 = (long) $i13;

        $l15 = $l14 * 604800000L;

        l21 = l20 + $l15;

        $r1 = new org.joda.time.Duration;

        specialinvoke $r1.<org.joda.time.Duration: void <init>(long)>(l21);

        return $r1;
    }

    private void checkYearsAndMonths(java.lang.String)
    {
        org.joda.time.Period r0;
        java.lang.String r1, $r7, $r13;
        int $i0, $i1;
        java.lang.UnsupportedOperationException $r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12;

        r0 := @this: org.joda.time.Period;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<org.joda.time.Period: int getMonths()>();

        if $i0 == 0 goto label1;

        $r8 = new java.lang.UnsupportedOperationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot convert to ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as this period contains months and months vary in length");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label1:
        $i1 = virtualinvoke r0.<org.joda.time.Period: int getYears()>();

        if $i1 == 0 goto label2;

        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot convert to ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as this period contains years and years vary in length");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        return;
    }

    public org.joda.time.Period normalizedStandard()
    {
        org.joda.time.Period r0, $r2;
        org.joda.time.PeriodType $r1;

        r0 := @this: org.joda.time.Period;

        $r1 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        $r2 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.Period normalizedStandard(org.joda.time.PeriodType)>($r1);

        return $r2;
    }

    public org.joda.time.Period normalizedStandard(org.joda.time.PeriodType)
    {
        org.joda.time.Period r0, $r1, r13;
        int i0, i1, $i2, $i3, $i6, $i9, $i12, $i15, $i24, i33, i34;
        long $l4, $l5, $l7, $l8, $l10, $l11, $l13, $l14, $l16, $l17, $l18, $l19, $l20, $l22, $l23, $l25, l26, l27, l28, l29, l30, l31, l32;
        org.joda.time.chrono.ISOChronology $r2;
        org.joda.time.DurationFieldType $r3, $r4;
        boolean $z0, $z1;
        byte $b21;
        java.lang.UnsupportedOperationException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;
        org.joda.time.PeriodType r11, r12;

        r0 := @this: org.joda.time.Period;

        r11 := @parameter0: org.joda.time.PeriodType;

        r12 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.PeriodType getPeriodType(org.joda.time.PeriodType)>(r11);

        $i2 = virtualinvoke r0.<org.joda.time.Period: int getMillis()>();

        l26 = (long) $i2;

        $i3 = virtualinvoke r0.<org.joda.time.Period: int getSeconds()>();

        $l4 = (long) $i3;

        $l5 = $l4 * 1000L;

        l27 = l26 + $l5;

        $i6 = virtualinvoke r0.<org.joda.time.Period: int getMinutes()>();

        $l7 = (long) $i6;

        $l8 = $l7 * 60000L;

        l28 = l27 + $l8;

        $i9 = virtualinvoke r0.<org.joda.time.Period: int getHours()>();

        $l10 = (long) $i9;

        $l11 = $l10 * 3600000L;

        l29 = l28 + $l11;

        $i12 = virtualinvoke r0.<org.joda.time.Period: int getDays()>();

        $l13 = (long) $i12;

        $l14 = $l13 * 86400000L;

        l30 = l29 + $l14;

        $i15 = virtualinvoke r0.<org.joda.time.Period: int getWeeks()>();

        $l16 = (long) $i15;

        $l17 = $l16 * 604800000L;

        l31 = l30 + $l17;

        $r1 = new org.joda.time.Period;

        $r2 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>();

        specialinvoke $r1.<org.joda.time.Period: void <init>(long,org.joda.time.PeriodType,org.joda.time.Chronology)>(l31, r12, $r2);

        r13 = $r1;

        i0 = virtualinvoke r0.<org.joda.time.Period: int getYears()>();

        i1 = virtualinvoke r0.<org.joda.time.Period: int getMonths()>();

        if i0 != 0 goto label1;

        if i1 == 0 goto label4;

     label1:
        $l18 = (long) i0;

        $l20 = $l18 * 12L;

        $l19 = (long) i1;

        l32 = $l20 + $l19;

        $r3 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType YEARS_TYPE>;

        $z0 = virtualinvoke r12.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r3);

        if $z0 == 0 goto label2;

        $l23 = l32 / 12L;

        i33 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>($l23);

        r13 = virtualinvoke $r1.<org.joda.time.Period: org.joda.time.Period withYears(int)>(i33);

        $i24 = i33 * 12;

        $l25 = (long) $i24;

        l32 = l32 - $l25;

     label2:
        $r4 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType MONTHS_TYPE>;

        $z1 = virtualinvoke r12.<org.joda.time.PeriodType: boolean isSupported(org.joda.time.DurationFieldType)>($r4);

        if $z1 == 0 goto label3;

        i34 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>(l32);

        r13 = virtualinvoke r13.<org.joda.time.Period: org.joda.time.Period withMonths(int)>(i34);

        $l22 = (long) i34;

        l32 = l32 - $l22;

     label3:
        $b21 = l32 cmp 0L;

        if $b21 == 0 goto label4;

        $r5 = new java.lang.UnsupportedOperationException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: ");

        $r8 = virtualinvoke r0.<org.joda.time.Period: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label4:
        return r13;
    }

    static void <clinit>()
    {
        org.joda.time.Period $r0;

        <org.joda.time.Period: long serialVersionUID> = 741052353876488155L;

        $r0 = new org.joda.time.Period;

        specialinvoke $r0.<org.joda.time.Period: void <init>()>();

        <org.joda.time.Period: org.joda.time.Period ZERO> = $r0;

        return;
    }
}
