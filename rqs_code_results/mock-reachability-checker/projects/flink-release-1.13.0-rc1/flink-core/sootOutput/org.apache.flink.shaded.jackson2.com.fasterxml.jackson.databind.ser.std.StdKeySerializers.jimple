public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers extends java.lang.Object
{
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, java.lang.Class, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default $r2, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.Class $r3, $r4, $r5, r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r14;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r15 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        if r15 == null goto label01;

        if r15 != class "Ljava/lang/Object;" goto label02;

     label01:
        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: void <init>()>();

        return $r1;

     label02:
        if r15 != class "Ljava/lang/String;" goto label03;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER>;

        return $r14;

     label03:
        $z1 = virtualinvoke r15.<java.lang.Class: boolean isPrimitive()>();

        if $z1 == 0 goto label04;

        r15 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class wrapperType(java.lang.Class)>(r15);

     label04:
        if r15 != class "Ljava/lang/Integer;" goto label05;

        $r13 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;

        specialinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(5, r15);

        return $r13;

     label05:
        if r15 != class "Ljava/lang/Long;" goto label06;

        $r12 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;

        specialinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(6, r15);

        return $r12;

     label06:
        $z2 = virtualinvoke r15.<java.lang.Class: boolean isPrimitive()>();

        if $z2 != 0 goto label07;

        $r3 = class "Ljava/lang/Number;";

        $z3 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r15);

        if $z3 == 0 goto label08;

     label07:
        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(8, r15);

        return $r2;

     label08:
        if r15 != class "Ljava/lang/Class;" goto label09;

        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;

        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(3, r15);

        return $r11;

     label09:
        $r4 = class "Ljava/util/Date;";

        $z4 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r15);

        if $z4 == 0 goto label10;

        $r10 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;

        specialinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(1, r15);

        return $r10;

     label10:
        $r5 = class "Ljava/util/Calendar;";

        $z5 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r15);

        if $z5 == 0 goto label11;

        $r9 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;

        specialinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(2, r15);

        return $r9;

     label11:
        if r15 != class "Ljava/util/UUID;" goto label12;

        $r8 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;

        specialinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(8, r15);

        return $r8;

     label12:
        if r15 != class "[B" goto label13;

        $r7 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;

        specialinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(7, r15);

        return $r7;

     label13:
        if z0 == 0 goto label14;

        $r6 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;

        specialinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(8, r15);

        return $r6;

     label14:
        return null;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default $r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic $r5;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r1 := @parameter1: java.lang.Class;

        if r1 == null goto label2;

        if r1 != class "Ljava/lang/Enum;" goto label1;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic: void <init>()>();

        return $r5;

     label1:
        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isEnumType(java.lang.Class)>(r1);

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues constructFromName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(r0, r1);

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer construct(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues)>(r1, $r3);

        return $r4;

     label2:
        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void <init>(int,java.lang.Class)>(8, r1);

        return $r2;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getDefault()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializer $r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer $r1;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializer;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializer: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER> = $r0;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER> = $r1;

        return;
    }
}
