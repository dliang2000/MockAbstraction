class org.powermock.api.mockito.internal.PowerMockitoCore$5 extends java.lang.Object implements java.util.concurrent.Callable
{
    final java.lang.Object val$toBeReturned;
    final org.powermock.api.mockito.internal.PowerMockitoCore this$0;

    void <init>(org.powermock.api.mockito.internal.PowerMockitoCore, java.lang.Object)
    {
        org.powermock.api.mockito.internal.PowerMockitoCore$5 r0;
        org.powermock.api.mockito.internal.PowerMockitoCore r1;
        java.lang.Object r2;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore$5;

        r1 := @parameter0: org.powermock.api.mockito.internal.PowerMockitoCore;

        r2 := @parameter1: java.lang.Object;

        r0.<org.powermock.api.mockito.internal.PowerMockitoCore$5: org.powermock.api.mockito.internal.PowerMockitoCore this$0> = r1;

        r0.<org.powermock.api.mockito.internal.PowerMockitoCore$5: java.lang.Object val$toBeReturned> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.mockito.stubbing.Stubber call() throws java.lang.Exception
    {
        org.powermock.api.mockito.internal.PowerMockitoCore$5 r0;
        java.lang.Object $r1;
        org.mockito.stubbing.Stubber $r2;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore$5;

        $r1 = r0.<org.powermock.api.mockito.internal.PowerMockitoCore$5: java.lang.Object val$toBeReturned>;

        $r2 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.Stubber doReturn(java.lang.Object)>($r1);

        return $r2;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        org.powermock.api.mockito.internal.PowerMockitoCore$5 r0;
        org.mockito.stubbing.Stubber $r1;

        r0 := @this: org.powermock.api.mockito.internal.PowerMockitoCore$5;

        $r1 = virtualinvoke r0.<org.powermock.api.mockito.internal.PowerMockitoCore$5: org.mockito.stubbing.Stubber call()>();

        return $r1;
    }
}
