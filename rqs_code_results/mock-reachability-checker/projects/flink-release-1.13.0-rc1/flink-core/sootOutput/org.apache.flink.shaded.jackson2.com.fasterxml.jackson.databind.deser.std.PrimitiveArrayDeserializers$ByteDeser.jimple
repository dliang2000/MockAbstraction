final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(java.lang.Class)>(class "[B");

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider r2;
        java.lang.Boolean r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider;

        r3 := @parameter2: java.lang.Boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(r1, r2, r3);

        return;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider r1;
        java.lang.Boolean r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider;

        r2 := @parameter1: java.lang.Boolean;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(r0, r1, r2);

        return $r3;
    }

    protected byte[] _constructEmpty()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0;
        byte[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        $r1 = newarray (byte)[0];

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType logicalType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.LogicalType Binary>;

        return $r1;
    }

    public byte[] deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r3, $r4, $r9, $r10, r29, $r35, $r37;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders $r5;
        java.lang.Object $r6, $r7, $r11, $r15, $r26, r32;
        byte[] $r8, $r16, $r17, $r18, $r20, $r27, $r28, r34;
        int $i0, $i1, $i2, i3, $i5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider $r12, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant $r19;
        java.lang.Exception $r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException $r23;
        java.lang.String $r24, r31;
        java.lang.Object[] $r25;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder r33;
        byte b4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r29 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_STRING>;

        if r29 != $r3 goto label04;

     label01:
        $r19 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();

        $r20 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: byte[] getBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>($r19);

     label02:
        return $r20;

     label03:
        $r23 := @caughtexception;

        r31 = virtualinvoke $r23.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException: java.lang.String getOriginalMessage()>();

        $z2 = virtualinvoke r31.<java.lang.String: boolean contains(java.lang.CharSequence)>("base64");

        if $z2 == 0 goto label04;

        $r24 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();

        $r25 = newarray (java.lang.Object)[0];

        $r26 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(class "[B", $r24, r31, $r25);

        $r27 = (byte[]) $r26;

        $r28 = (byte[]) $r27;

        return $r28;

     label04:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;

        if r29 != $r4 goto label06;

        r32 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();

        if r32 != null goto label05;

        return null;

     label05:
        $z1 = r32 instanceof byte[];

        if $z1 == 0 goto label06;

        $r17 = (byte[]) r32;

        $r18 = (byte[]) $r17;

        return $r18;

     label06:
        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 != 0 goto label07;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: java.lang.Object handleNonArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        $r16 = (byte[]) $r15;

        return $r16;

     label07:
        $r5 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders()>();

        r33 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder getByteBuilder()>();

        $r6 = virtualinvoke r33.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder: java.lang.Object resetAndStart()>();

        r34 = (byte[]) $r6;

        i3 = 0;

     label08:
        $r35 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        $r37 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        if $r35 == $r37 goto label14;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if $r35 != $r9 goto label09;

        b4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: byte getByteValue()>();

        goto label12;

     label09:
        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if $r35 != $r10 goto label11;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;

        if $r12 == null goto label10;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;

        interfaceinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        goto label08;

     label10:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        b4 = 0;

        goto label12;

     label11:
        b4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: byte _parseBytePrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

     label12:
        $i5 = lengthof r34;

        if i3 < $i5 goto label13;

        $r11 = virtualinvoke r33.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder: java.lang.Object appendCompletedChunk(java.lang.Object,int)>(r34, i3);

        r34 = (byte[]) $r11;

        i3 = 0;

     label13:
        $i0 = i3;

        i3 = i3 + 1;

        r34[$i0] = b4;

        goto label08;

     label14:
        goto label16;

     label15:
        $r21 := @caughtexception;

        $i1 = virtualinvoke r33.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder: int bufferedSize()>();

        $i2 = $i1 + i3;

        $r22 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)>($r21, r34, $i2);

        throw $r22;

     label16:
        $r7 = virtualinvoke r33.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder: java.lang.Object completeAndClearBuffer(java.lang.Object,int)>(r34, i3);

        $r8 = (byte[]) $r7;

        return $r8;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException from label01 to label02 with label03;
        catch java.lang.Exception from label08 to label14 with label15;
    }

    protected byte[] handleSingleElementUnwrapped(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken r3, $r5, $r6;
        java.lang.Number r4;
        java.lang.Class $r7, $r8;
        java.lang.Object $r9, $r14;
        byte[] $r10, $r15, $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider $r11, $r12;
        byte b0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken currentToken()>();

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;

        if r3 != $r5 goto label1;

        b0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser: byte getByteValue()>();

        goto label4;

     label1:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken VALUE_NULL>;

        if r3 != $r6 goto label3;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;

        if $r11 == null goto label2;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;

        interfaceinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        $r15 = (byte[]) $r14;

        $r16 = (byte[]) $r15;

        return $r16;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: void _verifyNullForPrimitive(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r2);

        return null;

     label3:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: java.lang.Class _valueClass>;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Class getComponentType()>();

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser)>($r8, r1);

        r4 = (java.lang.Number) $r9;

        b0 = virtualinvoke r4.<java.lang.Number: byte byteValue()>();

     label4:
        $r10 = newarray (byte)[1];

        $r10[0] = b0;

        return $r10;
    }

    protected byte[] _concat(byte[], byte[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0;
        byte[] r1, r2, r3;
        int i0, i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        i0 = lengthof r1;

        i1 = lengthof r2;

        $i2 = i0 + i1;

        r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, $i2);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, i0, i1);

        return r3;
    }

    protected volatile java.lang.Object _constructEmpty()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0;
        byte[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: byte[] _constructEmpty()>();

        return $r1;
    }

    protected volatile java.lang.Object handleSingleElementUnwrapped(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        byte[] $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: byte[] handleSingleElementUnwrapped(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    protected volatile java.lang.Object _concat(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0;
        java.lang.Object r1, r2;
        byte[] $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (byte[]) r1;

        $r3 = (byte[]) r2;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: byte[] _concat(byte[],byte[])>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonProcessingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r2;
        byte[] $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: byte[] deserialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: long serialVersionUID> = 1L;

        return;
    }
}
