final class org.joda.time.format.ISODateTimeFormat$Constants extends java.lang.Object
{
    private static final org.joda.time.format.DateTimeFormatter ye;
    private static final org.joda.time.format.DateTimeFormatter mye;
    private static final org.joda.time.format.DateTimeFormatter dme;
    private static final org.joda.time.format.DateTimeFormatter we;
    private static final org.joda.time.format.DateTimeFormatter wwe;
    private static final org.joda.time.format.DateTimeFormatter dwe;
    private static final org.joda.time.format.DateTimeFormatter dye;
    private static final org.joda.time.format.DateTimeFormatter hde;
    private static final org.joda.time.format.DateTimeFormatter mhe;
    private static final org.joda.time.format.DateTimeFormatter sme;
    private static final org.joda.time.format.DateTimeFormatter fse;
    private static final org.joda.time.format.DateTimeFormatter ze;
    private static final org.joda.time.format.DateTimeFormatter lte;
    private static final org.joda.time.format.DateTimeFormatter ym;
    private static final org.joda.time.format.DateTimeFormatter ymd;
    private static final org.joda.time.format.DateTimeFormatter ww;
    private static final org.joda.time.format.DateTimeFormatter wwd;
    private static final org.joda.time.format.DateTimeFormatter hm;
    private static final org.joda.time.format.DateTimeFormatter hms;
    private static final org.joda.time.format.DateTimeFormatter hmsl;
    private static final org.joda.time.format.DateTimeFormatter hmsf;
    private static final org.joda.time.format.DateTimeFormatter dh;
    private static final org.joda.time.format.DateTimeFormatter dhm;
    private static final org.joda.time.format.DateTimeFormatter dhms;
    private static final org.joda.time.format.DateTimeFormatter dhmsl;
    private static final org.joda.time.format.DateTimeFormatter dhmsf;
    private static final org.joda.time.format.DateTimeFormatter t;
    private static final org.joda.time.format.DateTimeFormatter tx;
    private static final org.joda.time.format.DateTimeFormatter tt;
    private static final org.joda.time.format.DateTimeFormatter ttx;
    private static final org.joda.time.format.DateTimeFormatter dt;
    private static final org.joda.time.format.DateTimeFormatter dtx;
    private static final org.joda.time.format.DateTimeFormatter wdt;
    private static final org.joda.time.format.DateTimeFormatter wdtx;
    private static final org.joda.time.format.DateTimeFormatter od;
    private static final org.joda.time.format.DateTimeFormatter odt;
    private static final org.joda.time.format.DateTimeFormatter odtx;
    private static final org.joda.time.format.DateTimeFormatter bd;
    private static final org.joda.time.format.DateTimeFormatter bt;
    private static final org.joda.time.format.DateTimeFormatter btx;
    private static final org.joda.time.format.DateTimeFormatter btt;
    private static final org.joda.time.format.DateTimeFormatter bttx;
    private static final org.joda.time.format.DateTimeFormatter bdt;
    private static final org.joda.time.format.DateTimeFormatter bdtx;
    private static final org.joda.time.format.DateTimeFormatter bod;
    private static final org.joda.time.format.DateTimeFormatter bodt;
    private static final org.joda.time.format.DateTimeFormatter bodtx;
    private static final org.joda.time.format.DateTimeFormatter bwd;
    private static final org.joda.time.format.DateTimeFormatter bwdt;
    private static final org.joda.time.format.DateTimeFormatter bwdtx;
    private static final org.joda.time.format.DateTimeFormatter dpe;
    private static final org.joda.time.format.DateTimeFormatter tpe;
    private static final org.joda.time.format.DateTimeFormatter dp;
    private static final org.joda.time.format.DateTimeFormatter ldp;
    private static final org.joda.time.format.DateTimeFormatter tp;
    private static final org.joda.time.format.DateTimeFormatter ltp;
    private static final org.joda.time.format.DateTimeFormatter dtp;
    private static final org.joda.time.format.DateTimeFormatter dotp;
    private static final org.joda.time.format.DateTimeFormatter ldotp;

    void <init>()
    {
        org.joda.time.format.ISODateTimeFormat$Constants r0;

        r0 := @this: org.joda.time.format.ISODateTimeFormat$Constants;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static org.joda.time.format.DateTimeFormatter dateParser()
    {
        org.joda.time.format.DateTimeParser r0;
        org.joda.time.format.DateTimeFormatter $r1, $r2, $r5, $r8, $r11;
        org.joda.time.format.DateTimeFormatterBuilder $r3, $r4, $r6, $r7, $r9, $r10;

        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dp>;

        if $r1 != null goto label1;

        $r3 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        r0 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r7 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r8 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateElementParser()>();

        $r9 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r8);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>(r0);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r11;

     label1:
        $r2 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dp>;

        return $r2;
    }

    private static org.joda.time.format.DateTimeFormatter localDateParser()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r2, $r3;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ldp>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateElementParser()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZoneUTC()>();

        return $r3;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ldp>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dateElementParser()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5, $r8, $r10, $r17, $r19, $r21, $r26, $r28, $r32;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r7, $r9, $r12, $r14, $r16, $r18, $r20, $r23, $r25, $r27, $r29, $r31;
        org.joda.time.format.DateTimeParser[] $r3;
        org.joda.time.format.DateTimeParser $r11, $r13, $r15, $r22, $r24, $r30;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dpe>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = newarray (org.joda.time.format.DateTimeParser)[3];

        $r4 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter yearElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r8 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter monthElement()>();

        $r9 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r8);

        $r10 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dayOfMonthElement()>();

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r12 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r11);

        $r13 = virtualinvoke $r12.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r14 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r13);

        $r15 = virtualinvoke $r14.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r3[0] = $r15;

        $r16 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r16.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r17 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekyearElement()>();

        $r18 = virtualinvoke $r16.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r17);

        $r19 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekElement()>();

        $r20 = virtualinvoke $r18.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r19);

        $r21 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dayOfWeekElement()>();

        $r22 = virtualinvoke $r21.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r23 = virtualinvoke $r20.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r22);

        $r24 = virtualinvoke $r23.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r3[1] = $r24;

        $r25 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r25.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r26 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter yearElement()>();

        $r27 = virtualinvoke $r25.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r26);

        $r28 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dayOfYearElement()>();

        $r29 = virtualinvoke $r27.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r28);

        $r30 = virtualinvoke $r29.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r3[2] = $r30;

        $r31 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])>(null, $r3);

        $r32 = virtualinvoke $r31.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r32;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dpe>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter timeParser()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r6, $r8, $r11;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r5, $r7, $r10;
        org.joda.time.format.DateTimeParser $r4, $r9;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tp>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r5 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r4);

        $r6 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter timeElementParser()>();

        $r7 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r6);

        $r8 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r10 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r9);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r11;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tp>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter localTimeParser()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r6, $r8, $r9;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r5, $r7;
        org.joda.time.format.DateTimeParser $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ltp>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r5 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r4);

        $r6 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter timeElementParser()>();

        $r7 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r6);

        $r8 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZoneUTC()>();

        return $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ltp>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter timeElementParser()
    {
        org.joda.time.format.DateTimeParser r0, $r7, $r10, $r26, $r28, $r32, $r34, $r38;
        org.joda.time.format.DateTimeFormatter $r1, $r2, $r13, $r17, $r21, $r40;
        org.joda.time.format.DateTimeFormatterBuilder $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r16, $r18, $r20, $r22, $r23, $r24, $r25, $r27, $r29, $r30, $r31, $r33, $r35, $r36, $r37, $r39;
        org.joda.time.format.DateTimeParser[] $r4, $r15, $r19;

        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tpe>;

        if $r1 != null goto label1;

        $r3 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r4 = newarray (org.joda.time.format.DateTimeParser)[2];

        $r5 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(46);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r4[0] = $r7;

        $r8 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(44);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r4[1] = $r10;

        $r11 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])>(null, $r4);

        r0 = virtualinvoke $r11.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r12 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r12.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r13 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourElement()>();

        $r14 = virtualinvoke $r12.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r13);

        $r15 = newarray (org.joda.time.format.DateTimeParser)[3];

        $r16 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r16.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r17 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter minuteElement()>();

        $r18 = virtualinvoke $r16.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r17);

        $r19 = newarray (org.joda.time.format.DateTimeParser)[3];

        $r20 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r20.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r21 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter secondElement()>();

        $r22 = virtualinvoke $r20.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r21);

        $r23 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r23.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeParser)>(r0);

        $r25 = virtualinvoke $r24.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfSecond(int,int)>(1, 9);

        $r26 = virtualinvoke $r25.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r27 = virtualinvoke $r22.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r26);

        $r28 = virtualinvoke $r27.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r19[0] = $r28;

        $r29 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r29.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeParser)>(r0);

        $r31 = virtualinvoke $r30.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfMinute(int,int)>(1, 9);

        $r32 = virtualinvoke $r31.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r19[1] = $r32;

        $r19[2] = null;

        $r33 = virtualinvoke $r18.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])>(null, $r19);

        $r34 = virtualinvoke $r33.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r15[0] = $r34;

        $r35 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r35.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeParser)>(r0);

        $r37 = virtualinvoke $r36.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfHour(int,int)>(1, 9);

        $r38 = virtualinvoke $r37.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r15[1] = $r38;

        $r15[2] = null;

        $r39 = virtualinvoke $r14.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])>(null, $r15);

        $r40 = virtualinvoke $r39.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r40;

     label1:
        $r2 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tpe>;

        return $r2;
    }

    private static org.joda.time.format.DateTimeFormatter dateTimeParser()
    {
        org.joda.time.format.DateTimeParser r0, $r8, $r13;
        org.joda.time.format.DateTimeFormatter $r1, $r2, $r5, $r7, $r12, $r15;
        org.joda.time.format.DateTimeFormatterBuilder $r3, $r4, $r6, $r9, $r10, $r14;
        org.joda.time.format.DateTimeParser[] $r11;

        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dtp>;

        if $r1 != null goto label1;

        $r3 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter timeElementParser()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r8 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r9 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r8);

        r0 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r10 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r11 = newarray (org.joda.time.format.DateTimeParser)[2];

        $r11[0] = r0;

        $r12 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateOptionalTimeParser()>();

        $r13 = virtualinvoke $r12.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r11[1] = $r13;

        $r14 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])>(null, $r11);

        $r15 = virtualinvoke $r14.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r15;

     label1:
        $r2 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dtp>;

        return $r2;
    }

    private static org.joda.time.format.DateTimeFormatter dateOptionalTimeParser()
    {
        org.joda.time.format.DateTimeParser r0, $r6, $r9;
        org.joda.time.format.DateTimeFormatter $r1, $r2, $r5, $r8, $r12, $r15;
        org.joda.time.format.DateTimeFormatterBuilder $r3, $r4, $r7, $r10, $r11, $r13, $r14;

        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dotp>;

        if $r1 != null goto label1;

        $r3 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter timeElementParser()>();

        $r6 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r7 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r6);

        $r8 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r10 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r9);

        r0 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r11 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r11.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r12 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateElementParser()>();

        $r13 = virtualinvoke $r11.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r12);

        $r14 = virtualinvoke $r13.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>(r0);

        $r15 = virtualinvoke $r14.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r15;

     label1:
        $r2 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dotp>;

        return $r2;
    }

    private static org.joda.time.format.DateTimeFormatter localDateOptionalTimeParser()
    {
        org.joda.time.format.DateTimeParser r0;
        org.joda.time.format.DateTimeFormatter $r1, $r2, $r5, $r8, $r11, $r12;
        org.joda.time.format.DateTimeFormatterBuilder $r3, $r4, $r6, $r7, $r9, $r10;

        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ldotp>;

        if $r1 != null goto label1;

        $r3 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter timeElementParser()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        r0 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r7 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r8 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateElementParser()>();

        $r9 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r8);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>(r0);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        $r12 = virtualinvoke $r11.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZoneUTC()>();

        return $r12;

     label1:
        $r2 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ldotp>;

        return $r2;
    }

    private static org.joda.time.format.DateTimeFormatter time()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter t>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter t>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter timeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourMinuteSecond()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tx>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter tTime()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter time()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tt>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter tTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ttx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter timeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ttx>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dt>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dtx>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter ordinalDate()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter od>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter yearElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dayOfYearElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter od>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter ordinalDateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter odt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ordinalDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter odt>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter ordinalDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter odtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ordinalDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter odtx>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter weekDateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wdt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wdt>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter weekDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wdtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wdtx>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicDate()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r8;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r5, $r7;
        org.joda.time.DateTimeFieldType $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bd>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendYear(int,int)>(4, 4);

        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        $r5 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r4, 2);

        $r6 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $r7 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r6, 2);

        $r8 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r8;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bd>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicTime()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r12;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8, $r9, $r10, $r11;
        org.joda.time.DateTimeFieldType $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType hourOfDay()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r3, 2);

        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType minuteOfHour()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r5, 2);

        $r7 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType secondOfMinute()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r7, 2);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(46);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfSecond(int,int)>(3, 9);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneOffset(java.lang.String,boolean,int,int)>("Z", 0, 2, 2);

        $r12 = virtualinvoke $r11.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r12;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bt>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r10;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8, $r9;
        org.joda.time.DateTimeFieldType $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter btx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType hourOfDay()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r3, 2);

        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType minuteOfHour()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r5, 2);

        $r7 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType secondOfMinute()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r7, 2);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneOffset(java.lang.String,boolean,int,int)>("Z", 0, 2, 2);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r10;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter btx>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicTTime()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter btt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter btt>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicTTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bttx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bttx>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicDateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bdt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bdt>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bdtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bdtx>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicOrdinalDate()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r6;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r5;
        org.joda.time.DateTimeFieldType $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bod>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendYear(int,int)>(4, 4);

        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>();

        $r5 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r4, 3);

        $r6 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r6;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bod>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicOrdinalDateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bodt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicOrdinalDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bodt>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicOrdinalDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bodtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicOrdinalDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bodtx>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicWeekDate()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r9;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4, $r6, $r8;
        org.joda.time.DateTimeFieldType $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwd>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendWeekyear(int,int)>(4, 4);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(87);

        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekOfWeekyear()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r5, 2);

        $r7 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r7, 1);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwd>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicWeekDateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwdt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicWeekDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwdt>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter basicWeekDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwdtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicWeekDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwdtx>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter yearMonth()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ym>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter yearElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter monthElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ym>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter yearMonthDay()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ymd>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter yearElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter monthElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dayOfMonthElement()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ymd>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter weekyearWeek()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ww>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekyearElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ww>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter weekyearWeekDay()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wwd>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekyearElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dayOfWeekElement()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wwd>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter hourMinute()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hm>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter minuteElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hm>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter hourMinuteSecond()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hms>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter minuteElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter secondElement()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hms>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter hourMinuteSecondMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r11;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8, $r9, $r10;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hmsl>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter minuteElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter secondElement()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(46);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfSecond(int,int)>(3, 3);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r11;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hmsl>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9, $r11;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8, $r10;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hmsf>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter minuteElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter secondElement()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter fractionElement()>();

        $r10 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r9);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r11;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hmsf>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dateHour()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dh>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hour()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dh>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dateHourMinute()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhm>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourMinute()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhm>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dateHourMinuteSecond()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhms>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourMinuteSecond()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhms>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dateHourMinuteSecondMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhmsl>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourMinuteSecondMillis()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhmsl>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dateHourMinuteSecondFraction()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhmsf>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhmsf>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter yearElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ye>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendYear(int,int)>(4, 9);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r4;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ye>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter monthElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter mye>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMonthOfYear(int)>(2);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter mye>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dayOfMonthElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dme>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfMonth(int)>(2);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dme>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter weekyearElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter we>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendWeekyear(int,int)>(4, 9);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r4;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter we>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter weekElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wwe>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(java.lang.String)>("-W");

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendWeekOfWeekyear(int)>(2);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wwe>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dayOfWeekElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dwe>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeek(int)>(1);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dwe>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dayOfYearElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dye>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfYear(int)>(3);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dye>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter literalTElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter lte>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r4;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter lte>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter hourElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hde>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendHourOfDay(int)>(2);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r4;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hde>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter minuteElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter mhe>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(58);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMinuteOfHour(int)>(2);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter mhe>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter secondElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter sme>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(58);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendSecondOfMinute(int)>(2);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter sme>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter fractionElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter fse>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(46);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfSecond(int,int)>(3, 9);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter fse>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter offsetElement()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ze>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneOffset(java.lang.String,boolean,int,int)>("Z", 1, 2, 4);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r4;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ze>;

        return $r1;
    }

    static org.joda.time.format.DateTimeFormatter access$000()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ye>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$100()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter we>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$200()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dp>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$300()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ldp>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$400()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dpe>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$500()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tp>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$600()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ltp>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$700()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tpe>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$800()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dtp>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$900()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dotp>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$1000()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ldotp>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$1100()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter t>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$1200()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tx>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$1300()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tt>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$1400()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ttx>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$1500()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dt>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$1600()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dtx>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$1700()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter od>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$1800()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter odt>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$1900()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter odtx>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$2000()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wwd>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$2100()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wdt>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$2200()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wdtx>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$2300()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bd>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$2400()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bt>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$2500()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter btx>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$2600()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter btt>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$2700()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bttx>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$2800()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bdt>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$2900()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bdtx>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$3000()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bod>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$3100()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bodt>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$3200()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bodtx>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$3300()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwd>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$3400()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwdt>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$3500()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwdtx>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$3600()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ym>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$3700()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ymd>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$3800()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ww>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$3900()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hde>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$4000()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hm>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$4100()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hms>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$4200()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hmsl>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$4300()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hmsf>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$4400()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dh>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$4500()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhm>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$4600()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhms>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$4700()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhmsl>;

        return $r0;
    }

    static org.joda.time.format.DateTimeFormatter access$4800()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhmsf>;

        return $r0;
    }

    static void <clinit>()
    {
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter yearElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ye> = $r0;

        $r1 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter monthElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter mye> = $r1;

        $r2 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dayOfMonthElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dme> = $r2;

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekyearElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter we> = $r3;

        $r4 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wwe> = $r4;

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dayOfWeekElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dwe> = $r5;

        $r6 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dayOfYearElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dye> = $r6;

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hde> = $r7;

        $r8 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter minuteElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter mhe> = $r8;

        $r9 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter secondElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter sme> = $r9;

        $r10 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter fractionElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter fse> = $r10;

        $r11 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter offsetElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ze> = $r11;

        $r12 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter literalTElement()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter lte> = $r12;

        $r13 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter yearMonth()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ym> = $r13;

        $r14 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter yearMonthDay()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ymd> = $r14;

        $r15 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekyearWeek()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ww> = $r15;

        $r16 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekyearWeekDay()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wwd> = $r16;

        $r17 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourMinute()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hm> = $r17;

        $r18 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourMinuteSecond()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hms> = $r18;

        $r19 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourMinuteSecondMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hmsl> = $r19;

        $r20 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter hmsf> = $r20;

        $r21 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateHour()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dh> = $r21;

        $r22 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateHourMinute()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhm> = $r22;

        $r23 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateHourMinuteSecond()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhms> = $r23;

        $r24 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateHourMinuteSecondMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhmsl> = $r24;

        $r25 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateHourMinuteSecondFraction()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dhmsf> = $r25;

        $r26 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter time()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter t> = $r26;

        $r27 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter timeNoMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tx> = $r27;

        $r28 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tTime()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tt> = $r28;

        $r29 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tTimeNoMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ttx> = $r29;

        $r30 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateTime()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dt> = $r30;

        $r31 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateTimeNoMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dtx> = $r31;

        $r32 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekDateTime()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wdt> = $r32;

        $r33 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter weekDateTimeNoMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter wdtx> = $r33;

        $r34 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ordinalDate()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter od> = $r34;

        $r35 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ordinalDateTime()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter odt> = $r35;

        $r36 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ordinalDateTimeNoMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter odtx> = $r36;

        $r37 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicDate()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bd> = $r37;

        $r38 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTime()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bt> = $r38;

        $r39 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTimeNoMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter btx> = $r39;

        $r40 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTTime()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter btt> = $r40;

        $r41 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicTTimeNoMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bttx> = $r41;

        $r42 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicDateTime()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bdt> = $r42;

        $r43 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicDateTimeNoMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bdtx> = $r43;

        $r44 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicOrdinalDate()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bod> = $r44;

        $r45 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicOrdinalDateTime()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bodt> = $r45;

        $r46 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicOrdinalDateTimeNoMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bodtx> = $r46;

        $r47 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicWeekDate()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwd> = $r47;

        $r48 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicWeekDateTime()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwdt> = $r48;

        $r49 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter basicWeekDateTimeNoMillis()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter bwdtx> = $r49;

        $r50 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateElementParser()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dpe> = $r50;

        $r51 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter timeElementParser()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tpe> = $r51;

        $r52 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateParser()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dp> = $r52;

        $r53 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter localDateParser()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ldp> = $r53;

        $r54 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter timeParser()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter tp> = $r54;

        $r55 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter localTimeParser()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ltp> = $r55;

        $r56 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateTimeParser()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dtp> = $r56;

        $r57 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dateOptionalTimeParser()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter dotp> = $r57;

        $r58 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter localDateOptionalTimeParser()>();

        <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter ldotp> = $r58;

        return;
    }
}
