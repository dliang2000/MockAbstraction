public final class org.apache.flink.api.java.typeutils.runtime.MaskUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.MaskUtils r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.MaskUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void writeMask(boolean[], org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        boolean[] r0;
        org.apache.flink.core.memory.DataOutputView r1;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        boolean $z0;

        r0 := @parameter0: boolean[];

        r1 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        i0 = lengthof r0;

        i4 = 0;

     label1:
        if i4 >= i0 goto label5;

        i5 = 0;

        i6 = 0;

        $i1 = i0 - i4;

        i7 = staticinvoke <java.lang.Math: int min(int,int)>(8, $i1);

     label2:
        if i6 >= i7 goto label4;

        i5 = i5 << 1;

        $i3 = i4 + i6;

        $z0 = r0[$i3];

        if $z0 == 0 goto label3;

        i5 = i5 | 1;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        i4 = i4 + i7;

        $i2 = 8 - i6;

        i8 = i5 << $i2;

        interfaceinvoke r1.<org.apache.flink.core.memory.DataOutputView: void writeByte(int)>(i8);

        goto label1;

     label5:
        return;
    }

    public static void readIntoMask(org.apache.flink.core.memory.DataInputView, boolean[]) throws java.io.IOException
    {
        org.apache.flink.core.memory.DataInputView r0;
        boolean[] r1;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7;
        boolean $z3;

        r0 := @parameter0: org.apache.flink.core.memory.DataInputView;

        r1 := @parameter1: boolean[];

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label6;

        i5 = interfaceinvoke r0.<org.apache.flink.core.memory.DataInputView: int readUnsignedByte()>();

        i6 = 0;

        $i1 = i0 - i4;

        i7 = staticinvoke <java.lang.Math: int min(int,int)>(8, $i1);

     label2:
        if i6 >= i7 goto label5;

        $i3 = i4 + i6;

        $i2 = i5 & 128;

        if $i2 <= 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r1[$i3] = $z3;

        i5 = i5 << 1;

        i6 = i6 + 1;

        goto label2;

     label5:
        i4 = i4 + i7;

        goto label1;

     label6:
        return;
    }

    public static void readIntoAndCopyMask(org.apache.flink.core.memory.DataInputView, org.apache.flink.core.memory.DataOutputView, boolean[]) throws java.io.IOException
    {
        org.apache.flink.core.memory.DataInputView r0;
        org.apache.flink.core.memory.DataOutputView r1;
        boolean[] r2;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7;
        boolean $z3;

        r0 := @parameter0: org.apache.flink.core.memory.DataInputView;

        r1 := @parameter1: org.apache.flink.core.memory.DataOutputView;

        r2 := @parameter2: boolean[];

        i0 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i0 goto label6;

        i5 = interfaceinvoke r0.<org.apache.flink.core.memory.DataInputView: int readUnsignedByte()>();

        interfaceinvoke r1.<org.apache.flink.core.memory.DataOutputView: void writeByte(int)>(i5);

        i6 = 0;

        $i1 = i0 - i4;

        i7 = staticinvoke <java.lang.Math: int min(int,int)>(8, $i1);

     label2:
        if i6 >= i7 goto label5;

        $i3 = i4 + i6;

        $i2 = i5 & 128;

        if $i2 <= 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r2[$i3] = $z3;

        i5 = i5 << 1;

        i6 = i6 + 1;

        goto label2;

     label5:
        i4 = i4 + i7;

        goto label1;

     label6:
        return;
    }
}
