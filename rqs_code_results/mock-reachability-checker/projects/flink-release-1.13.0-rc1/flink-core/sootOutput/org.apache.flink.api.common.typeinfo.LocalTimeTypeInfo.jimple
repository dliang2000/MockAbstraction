public class org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo extends org.apache.flink.api.common.typeinfo.TypeInformation implements org.apache.flink.api.common.typeinfo.AtomicType
{
    private static final long serialVersionUID;
    public static final org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo LOCAL_DATE;
    public static final org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo LOCAL_TIME;
    public static final org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo LOCAL_DATE_TIME;
    private final java.lang.Class clazz;
    private final org.apache.flink.api.common.typeutils.TypeSerializer serializer;
    private final java.lang.Class comparatorClass;

    protected void <init>(java.lang.Class, org.apache.flink.api.common.typeutils.TypeSerializer, java.lang.Class)
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;
        java.lang.Class r1, r3, $r5, $r9;
        org.apache.flink.api.common.typeutils.TypeSerializer r2, $r7;
        java.lang.Object $r4, $r6, $r8;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.api.common.typeutils.TypeSerializer;

        r3 := @parameter2: java.lang.Class;

        specialinvoke r0.<org.apache.flink.api.common.typeinfo.TypeInformation: void <init>()>();

        $r4 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (java.lang.Class) $r4;

        r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: java.lang.Class clazz> = $r5;

        $r6 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = (org.apache.flink.api.common.typeutils.TypeSerializer) $r6;

        r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeutils.TypeSerializer serializer> = $r7;

        $r8 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r9 = (java.lang.Class) $r8;

        r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: java.lang.Class comparatorClass> = $r9;

        return;
    }

    public boolean isBasicType()
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        return 0;
    }

    public boolean isTupleType()
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        return 0;
    }

    public int getArity()
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        return 1;
    }

    public int getTotalFields()
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        return 1;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        $r1 = r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: java.lang.Class clazz>;

        return $r1;
    }

    public boolean isKeyType()
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        return 1;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;
        org.apache.flink.api.common.ExecutionConfig r1;
        org.apache.flink.api.common.typeutils.TypeSerializer $r2;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        r1 := @parameter0: org.apache.flink.api.common.ExecutionConfig;

        $r2 = r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeutils.TypeSerializer serializer>;

        return $r2;
    }

    public org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean, org.apache.flink.api.common.ExecutionConfig)
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;
        boolean z0;
        org.apache.flink.api.common.ExecutionConfig r1;
        java.lang.Class $r2;
        org.apache.flink.api.common.typeutils.TypeComparator $r3;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.flink.api.common.ExecutionConfig;

        $r2 = r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: java.lang.Class comparatorClass>;

        $r3 = staticinvoke <org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeutils.TypeComparator instantiateComparator(java.lang.Class,boolean)>($r2, z0);

        return $r3;
    }

    public int hashCode()
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;
        java.lang.Object[] $r1;
        java.lang.Class $r2, $r4;
        org.apache.flink.api.common.typeutils.TypeSerializer $r3;
        int $i0;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: java.lang.Class clazz>;

        $r1[0] = $r2;

        $r3 = r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeutils.TypeSerializer serializer>;

        $r1[1] = $r3;

        $r4 = r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: java.lang.Class comparatorClass>;

        $r1[2] = $r4;

        $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    public boolean canEqual(java.lang.Object)
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class $r3, $r4, $r7, $r8;
        org.apache.flink.api.common.typeutils.TypeSerializer $r5, $r6;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        if $z0 == 0 goto label3;

        r2 = (org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo) r1;

        $z1 = virtualinvoke r2.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: boolean canEqual(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $r4 = r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: java.lang.Class clazz>;

        $r3 = r2.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: java.lang.Class clazz>;

        if $r4 != $r3 goto label1;

        $r6 = r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeutils.TypeSerializer serializer>;

        $r5 = r2.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeutils.TypeSerializer serializer>;

        $z2 = virtualinvoke $r6.<org.apache.flink.api.common.typeutils.TypeSerializer: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        $r8 = r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: java.lang.Class comparatorClass>;

        $r7 = r2.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: java.lang.Class comparatorClass>;

        if $r8 != $r7 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        $r1 = r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: java.lang.Class clazz>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r2;
    }

    private static org.apache.flink.api.common.typeutils.TypeComparator instantiateComparator(java.lang.Class, boolean)
    {
        java.lang.Class r0, $r2;
        boolean z0;
        java.lang.Class[] $r1;
        java.lang.Object[] $r3;
        java.lang.Boolean $r4;
        java.lang.Object $r5;
        org.apache.flink.api.common.typeutils.TypeComparator $r6;
        java.lang.Exception $r7;
        java.lang.RuntimeException $r8;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r13;
        java.lang.reflect.Constructor r14;

        r0 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

     label1:
        $r1 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r1[0] = $r2;

        r14 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r3[0] = $r4;

        $r5 = virtualinvoke r14.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

        $r6 = (org.apache.flink.api.common.typeutils.TypeComparator) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not initialize comparator ");

        $r11 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r7);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo getInfoFor(java.lang.Class)
    {
        java.lang.Class r0;
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo $r2, $r3, $r4;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        if r0 != class "Ljava/time/LocalDate;" goto label1;

        $r4 = <org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo LOCAL_DATE>;

        return $r4;

     label1:
        if r0 != class "Ljava/time/LocalTime;" goto label2;

        $r3 = <org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo LOCAL_TIME>;

        return $r3;

     label2:
        if r0 != class "Ljava/time/LocalDateTime;" goto label3;

        $r2 = <org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo LOCAL_DATE_TIME>;

        return $r2;

     label3:
        return null;
    }

    static void <clinit>()
    {
        org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo $r0, $r2, $r4;
        org.apache.flink.api.common.typeutils.base.LocalDateSerializer $r1;
        org.apache.flink.api.common.typeutils.base.LocalTimeSerializer $r3;
        org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializer $r5;

        <org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: long serialVersionUID> = 1L;

        $r0 = new org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        $r1 = <org.apache.flink.api.common.typeutils.base.LocalDateSerializer: org.apache.flink.api.common.typeutils.base.LocalDateSerializer INSTANCE>;

        specialinvoke $r0.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class)>(class "Ljava/time/LocalDate;", $r1, class "Lorg/apache/flink/api/common/typeutils/base/LocalDateComparator;");

        <org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo LOCAL_DATE> = $r0;

        $r2 = new org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        $r3 = <org.apache.flink.api.common.typeutils.base.LocalTimeSerializer: org.apache.flink.api.common.typeutils.base.LocalTimeSerializer INSTANCE>;

        specialinvoke $r2.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class)>(class "Ljava/time/LocalTime;", $r3, class "Lorg/apache/flink/api/common/typeutils/base/LocalTimeComparator;");

        <org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo LOCAL_TIME> = $r2;

        $r4 = new org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo;

        $r5 = <org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializer: org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializer INSTANCE>;

        specialinvoke $r4.<org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: void <init>(java.lang.Class,org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class)>(class "Ljava/time/LocalDateTime;", $r5, class "Lorg/apache/flink/api/common/typeutils/base/LocalDateTimeComparator;");

        <org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo: org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo LOCAL_DATE_TIME> = $r4;

        return;
    }
}
