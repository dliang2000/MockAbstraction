public class org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification extends java.lang.Object implements org.powermock.api.mockito.verification.ConstructorArgumentsVerification
{
    private final org.powermock.api.mockito.internal.invocation.MockitoNewInvocationControl invocationControl;
    private final java.lang.Class type;

    public void <init>(org.powermock.core.spi.NewInvocationControl, java.lang.Class)
    {
        org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification r0;
        org.powermock.core.spi.NewInvocationControl r1;
        java.lang.Class r2;
        org.powermock.api.mockito.internal.invocation.MockitoNewInvocationControl $r3;

        r0 := @this: org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification;

        r1 := @parameter0: org.powermock.core.spi.NewInvocationControl;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification: java.lang.Class type> = r2;

        $r3 = (org.powermock.api.mockito.internal.invocation.MockitoNewInvocationControl) r1;

        r0.<org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification: org.powermock.api.mockito.internal.invocation.MockitoNewInvocationControl invocationControl> = $r3;

        return;
    }

    public transient void withArguments(java.lang.Object, java.lang.Object[]) throws java.lang.Exception
    {
        org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification r0;
        java.lang.Object r1;
        java.lang.Object[] r2, $r3, r4;
        int $i0, $i1, $i2;

        r0 := @this: org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        if r2 != null goto label1;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r1;

        $r3[1] = null;

        r4 = $r3;

        goto label2;

     label1:
        $i0 = lengthof r2;

        $i1 = $i0 + 1;

        r4 = newarray (java.lang.Object)[$i1];

        r4[0] = r1;

        $i2 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 1, $i2);

     label2:
        specialinvoke r0.<org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification: void invokeSubstitute(java.lang.Object[])>(r4);

        return;
    }

    private transient void invokeSubstitute(java.lang.Object[]) throws java.lang.Exception
    {
        org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification r0;
        java.lang.Object[] r1;
        org.powermock.api.mockito.internal.invocation.MockitoNewInvocationControl $r3;
        org.powermock.core.spi.support.InvocationSubstitute $r4;
        org.mockito.exceptions.base.MockitoAssertionError $r6;
        java.lang.Class $r7;

        r0 := @this: org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification;

        r1 := @parameter0: java.lang.Object[];

     label1:
        $r3 = r0.<org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification: org.powermock.api.mockito.internal.invocation.MockitoNewInvocationControl invocationControl>;

        $r4 = virtualinvoke $r3.<org.powermock.api.mockito.internal.invocation.MockitoNewInvocationControl: org.powermock.core.spi.support.InvocationSubstitute getSubstitute()>();

        interfaceinvoke $r4.<org.powermock.core.spi.support.InvocationSubstitute: java.lang.Object performSubstitutionLogic(java.lang.Object[])>(r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = r0.<org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification: java.lang.Class type>;

        staticinvoke <org.powermock.api.mockito.internal.invocation.InvocationControlAssertionError: void throwAssertionErrorForNewSubstitutionFailure(java.lang.AssertionError,java.lang.Class)>($r6, $r7);

     label4:
        return;

        catch org.mockito.exceptions.base.MockitoAssertionError from label1 to label2 with label3;
    }

    public void withNoArguments() throws java.lang.Exception
    {
        org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification r0;
        java.lang.Object[] $r1;

        r0 := @this: org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification;

        $r1 = newarray (java.lang.Object)[0];

        specialinvoke r0.<org.powermock.api.mockito.internal.verification.DefaultConstructorArgumentsVerification: void invokeSubstitute(java.lang.Object[])>($r1);

        return;
    }
}
