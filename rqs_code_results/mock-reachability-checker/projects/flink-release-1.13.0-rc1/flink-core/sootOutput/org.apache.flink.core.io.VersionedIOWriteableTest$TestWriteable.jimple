class org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable extends org.apache.flink.core.io.VersionedIOReadableWritable
{
    private final int version;
    private java.lang.String data;

    public void <init>(int)
    {
        org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable r0;
        int i0;

        r0 := @this: org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable: void <init>(int,java.lang.String)>(i0, null);

        return;
    }

    public void <init>(int, java.lang.String)
    {
        org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.flink.core.io.VersionedIOReadableWritable: void <init>()>();

        r0.<org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable: int version> = i0;

        r0.<org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable: java.lang.String data> = r1;

        return;
    }

    public int getVersion()
    {
        org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable r0;
        int $i0;

        r0 := @this: org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable;

        $i0 = r0.<org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable: int version>;

        return $i0;
    }

    public void write(org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable r0;
        org.apache.flink.core.memory.DataOutputView r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable;

        r1 := @parameter0: org.apache.flink.core.memory.DataOutputView;

        specialinvoke r0.<org.apache.flink.core.io.VersionedIOReadableWritable: void write(org.apache.flink.core.memory.DataOutputView)>(r1);

        $r2 = r0.<org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable: java.lang.String data>;

        interfaceinvoke r1.<org.apache.flink.core.memory.DataOutputView: void writeUTF(java.lang.String)>($r2);

        return;
    }

    public void read(org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable r0;
        org.apache.flink.core.memory.DataInputView r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        specialinvoke r0.<org.apache.flink.core.io.VersionedIOReadableWritable: void read(org.apache.flink.core.memory.DataInputView)>(r1);

        $r2 = interfaceinvoke r1.<org.apache.flink.core.memory.DataInputView: java.lang.String readUTF()>();

        r0.<org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable: java.lang.String data> = $r2;

        return;
    }

    public java.lang.String getData()
    {
        org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable;

        $r1 = r0.<org.apache.flink.core.io.VersionedIOWriteableTest$TestWriteable: java.lang.String data>;

        return $r1;
    }
}
