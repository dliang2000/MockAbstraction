class org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters extends org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters
{
    private final java.util.Map properties;

    private void <init>(java.util.Map)
    {
        org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters r0;
        java.util.Map r1;

        r0 := @this: org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters: void <init>()>();

        r0.<org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters: java.util.Map properties> = r1;

        return;
    }

    public java.util.Map toMap()
    {
        org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters r0;
        java.util.Map $r1;

        r0 := @this: org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters;

        $r1 = r0.<org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters: java.util.Map properties>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters r0;
        java.lang.Object r1;
        org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters r2;
        boolean $z0, $z1;
        java.util.Map $r3, $r4;

        r0 := @this: org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters) r1;

        $r3 = r0.<org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters: java.util.Map properties>;

        $r4 = virtualinvoke r2.<org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters: java.util.Map toMap()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        return $z1;
    }

    public int hashCode()
    {
        org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Integer $r2;
        java.util.Map $r3;

        r0 := @this: org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = specialinvoke r0.<org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters: int hashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = r0.<org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters: java.util.Map properties>;

        $r1[1] = $r3;

        $i1 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i1;
    }

    void <init>(java.util.Map, org.apache.flink.api.common.ExecutionConfig$1)
    {
        org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters r0;
        java.util.Map r1;
        org.apache.flink.api.common.ExecutionConfig$1 r2;

        r0 := @this: org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.flink.api.common.ExecutionConfig$1;

        specialinvoke r0.<org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters: void <init>(java.util.Map)>(r1);

        return;
    }
}
