final class org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader extends java.io.Reader
{
    private java.lang.CharSequence seq;
    private int pos;
    private int mark;

    public void <init>(java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;
        java.lang.CharSequence r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.CharSequence) $r2;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: java.lang.CharSequence seq> = $r3;

        return;
    }

    private void checkOpen() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;
        java.lang.CharSequence $r1;
        java.io.IOException $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: java.lang.CharSequence seq>;

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("reader closed");

        throw $r2;

     label1:
        return;
    }

    private boolean hasRemaining()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        $i0 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int remaining()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int remaining()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: java.lang.CharSequence seq>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int pos>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    public synchronized int read(java.nio.CharBuffer) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;
        java.nio.CharBuffer r1;
        int i0, $i1, $i2, $i3, $i4, i6;
        boolean $z0;
        java.lang.CharSequence $r3;
        char $c5;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        r1 := @parameter0: java.nio.CharBuffer;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: void checkOpen()>();

        $z0 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: boolean hasRemaining()>();

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $i1 = virtualinvoke r1.<java.nio.CharBuffer: int remaining()>();

        $i2 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int remaining()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        i6 = 0;

     label2:
        if i6 >= i0 goto label3;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: java.lang.CharSequence seq>;

        $i3 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int pos>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int pos> = $i4;

        $c5 = interfaceinvoke $r3.<java.lang.CharSequence: char charAt(int)>($i3);

        virtualinvoke r1.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>($c5);

        i6 = i6 + 1;

        goto label2;

     label3:
        return i0;
    }

    public synchronized int read() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: void checkOpen()>();

        $z0 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: boolean hasRemaining()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: java.lang.CharSequence seq>;

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int pos>;

        $i1 = $i0 + 1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int pos> = $i1;

        $i2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        goto label2;

     label1:
        $i2 = -1;

     label2:
        return $i2;
    }

    public synchronized int read(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;
        char[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i10;
        boolean $z0;
        java.lang.CharSequence $r2;
        char $c9;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = i0 + i1;

        $i3 = lengthof r1;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>(i0, $i4, $i3);

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: void checkOpen()>();

        $z0 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: boolean hasRemaining()>();

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $i5 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int remaining()>();

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i5);

        i10 = 0;

     label2:
        if i10 >= i2 goto label3;

        $i8 = i0 + i10;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: java.lang.CharSequence seq>;

        $i6 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int pos>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int pos> = $i7;

        $c9 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i6);

        r1[$i8] = $c9;

        i10 = i10 + 1;

        goto label2;

     label3:
        return i2;
    }

    public synchronized long skip(long) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;
        long l0, $l4, $l5, $l8;
        int i1, $i3, $i6, $i7;
        byte $b2;
        java.lang.Object[] $r1;
        java.lang.Long $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        l0 := @parameter0: long;

        $b2 = l0 cmp 0L;

        if $b2 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r1[0] = $r2;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "n (%s) may not be negative", $r1);

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: void checkOpen()>();

        $i3 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int remaining()>();

        $l4 = (long) $i3;

        $l5 = staticinvoke <java.lang.Math: long min(long,long)>($l4, l0);

        i1 = (int) $l5;

        $i6 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int pos>;

        $i7 = $i6 + i1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int pos> = $i7;

        $l8 = (long) i1;

        return $l8;
    }

    public synchronized boolean ready() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: void checkOpen()>();

        return 1;
    }

    public boolean markSupported()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        return 1;
    }

    public synchronized void mark(int) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "readAheadLimit (%s) may not be negative", $r1);

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: void checkOpen()>();

        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int pos>;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int mark> = $i1;

        return;
    }

    public synchronized void reset() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: void checkOpen()>();

        $i0 = r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int mark>;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: int pos> = $i0;

        return;
    }

    public synchronized void close() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader;

        r0.<org.apache.flink.shaded.guava18.com.google.common.io.CharSequenceReader: java.lang.CharSequence seq> = null;

        return;
    }
}
