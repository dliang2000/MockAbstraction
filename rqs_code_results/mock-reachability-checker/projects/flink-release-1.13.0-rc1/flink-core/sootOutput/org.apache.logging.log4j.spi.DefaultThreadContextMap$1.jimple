final class org.apache.logging.log4j.spi.DefaultThreadContextMap$1 extends java.lang.InheritableThreadLocal
{
    final boolean val$isMapEnabled;

    void <init>(boolean)
    {
        org.apache.logging.log4j.spi.DefaultThreadContextMap$1 r0;
        boolean z0;

        r0 := @this: org.apache.logging.log4j.spi.DefaultThreadContextMap$1;

        z0 := @parameter0: boolean;

        r0.<org.apache.logging.log4j.spi.DefaultThreadContextMap$1: boolean val$isMapEnabled> = z0;

        specialinvoke r0.<java.lang.InheritableThreadLocal: void <init>()>();

        return;
    }

    protected java.util.Map childValue(java.util.Map)
    {
        org.apache.logging.log4j.spi.DefaultThreadContextMap$1 r0;
        java.util.Map r1, $r3;
        boolean $z0;
        java.util.HashMap $r2;

        r0 := @this: org.apache.logging.log4j.spi.DefaultThreadContextMap$1;

        r1 := @parameter0: java.util.Map;

        if r1 == null goto label1;

        $z0 = r0.<org.apache.logging.log4j.spi.DefaultThreadContextMap$1: boolean val$isMapEnabled>;

        if $z0 == 0 goto label1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>(r1);

        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    protected volatile java.lang.Object childValue(java.lang.Object)
    {
        org.apache.logging.log4j.spi.DefaultThreadContextMap$1 r0;
        java.lang.Object r1;
        java.util.Map $r2, $r3;

        r0 := @this: org.apache.logging.log4j.spi.DefaultThreadContextMap$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map) r1;

        $r3 = virtualinvoke r0.<org.apache.logging.log4j.spi.DefaultThreadContextMap$1: java.util.Map childValue(java.util.Map)>($r2);

        return $r3;
    }
}
