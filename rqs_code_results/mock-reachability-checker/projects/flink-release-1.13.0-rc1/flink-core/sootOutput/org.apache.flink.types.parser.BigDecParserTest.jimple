public class org.apache.flink.types.parser.BigDecParserTest extends org.apache.flink.types.parser.ParserTestBase
{

    public void <init>()
    {
        org.apache.flink.types.parser.BigDecParserTest r0;

        r0 := @this: org.apache.flink.types.parser.BigDecParserTest;

        specialinvoke r0.<org.apache.flink.types.parser.ParserTestBase: void <init>()>();

        return;
    }

    public java.lang.String[] getValidTestValues()
    {
        org.apache.flink.types.parser.BigDecParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.BigDecParserTest;

        $r1 = newarray (java.lang.String)[16];

        $r1[0] = "-12.5E1000";

        $r1[1] = "-12.5E100";

        $r1[2] = "-10000";

        $r1[3] = "-1.1";

        $r1[4] = "-1";

        $r1[5] = "-0.44";

        $r1[6] = "0";

        $r1[7] = "0000000";

        $r1[8] = "0e0";

        $r1[9] = "0.000000000000000000000000001";

        $r1[10] = "0.0000001";

        $r1[11] = "0.1234123413478523984729447";

        $r1[12] = "1";

        $r1[13] = "10000";

        $r1[14] = "10E100000";

        $r1[15] = "10E1000000000";

        return $r1;
    }

    public java.math.BigDecimal[] getValidTestResults()
    {
        org.apache.flink.types.parser.BigDecParserTest r0;
        java.math.BigDecimal[] $r1;
        java.math.BigDecimal $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        r0 := @this: org.apache.flink.types.parser.BigDecParserTest;

        $r1 = newarray (java.math.BigDecimal)[16];

        $r2 = new java.math.BigDecimal;

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String)>("-12.5E1000");

        $r1[0] = $r2;

        $r3 = new java.math.BigDecimal;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(java.lang.String)>("-12.5E100");

        $r1[1] = $r3;

        $r4 = new java.math.BigDecimal;

        specialinvoke $r4.<java.math.BigDecimal: void <init>(java.lang.String)>("-10000");

        $r1[2] = $r4;

        $r5 = new java.math.BigDecimal;

        specialinvoke $r5.<java.math.BigDecimal: void <init>(java.lang.String)>("-1.1");

        $r1[3] = $r5;

        $r6 = new java.math.BigDecimal;

        specialinvoke $r6.<java.math.BigDecimal: void <init>(java.lang.String)>("-1");

        $r1[4] = $r6;

        $r7 = new java.math.BigDecimal;

        specialinvoke $r7.<java.math.BigDecimal: void <init>(java.lang.String)>("-0.44");

        $r1[5] = $r7;

        $r8 = new java.math.BigDecimal;

        specialinvoke $r8.<java.math.BigDecimal: void <init>(java.lang.String)>("0");

        $r1[6] = $r8;

        $r9 = new java.math.BigDecimal;

        specialinvoke $r9.<java.math.BigDecimal: void <init>(java.lang.String)>("0");

        $r1[7] = $r9;

        $r10 = new java.math.BigDecimal;

        specialinvoke $r10.<java.math.BigDecimal: void <init>(java.lang.String)>("0e0");

        $r1[8] = $r10;

        $r11 = new java.math.BigDecimal;

        specialinvoke $r11.<java.math.BigDecimal: void <init>(java.lang.String)>("0.000000000000000000000000001");

        $r1[9] = $r11;

        $r12 = new java.math.BigDecimal;

        specialinvoke $r12.<java.math.BigDecimal: void <init>(java.lang.String)>("0.0000001");

        $r1[10] = $r12;

        $r13 = new java.math.BigDecimal;

        specialinvoke $r13.<java.math.BigDecimal: void <init>(java.lang.String)>("0.1234123413478523984729447");

        $r1[11] = $r13;

        $r14 = new java.math.BigDecimal;

        specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>("1");

        $r1[12] = $r14;

        $r15 = new java.math.BigDecimal;

        specialinvoke $r15.<java.math.BigDecimal: void <init>(java.lang.String)>("10000");

        $r1[13] = $r15;

        $r16 = new java.math.BigDecimal;

        specialinvoke $r16.<java.math.BigDecimal: void <init>(java.lang.String)>("10E100000");

        $r1[14] = $r16;

        $r17 = new java.math.BigDecimal;

        specialinvoke $r17.<java.math.BigDecimal: void <init>(java.lang.String)>("10E1000000000");

        $r1[15] = $r17;

        return $r1;
    }

    public java.lang.String[] getInvalidTestValues()
    {
        org.apache.flink.types.parser.BigDecParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.BigDecParserTest;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "a";

        $r1[1] = "123abc4";

        $r1[2] = "-57-6";

        $r1[3] = "7-877678";

        $r1[4] = " 1";

        $r1[5] = "2 ";

        $r1[6] = " ";

        $r1[7] = "\t";

        return $r1;
    }

    public boolean allowsEmptyField()
    {
        org.apache.flink.types.parser.BigDecParserTest r0;

        r0 := @this: org.apache.flink.types.parser.BigDecParserTest;

        return 0;
    }

    public org.apache.flink.types.parser.FieldParser getParser()
    {
        org.apache.flink.types.parser.BigDecParserTest r0;
        org.apache.flink.types.parser.BigDecParser $r1;

        r0 := @this: org.apache.flink.types.parser.BigDecParserTest;

        $r1 = new org.apache.flink.types.parser.BigDecParser;

        specialinvoke $r1.<org.apache.flink.types.parser.BigDecParser: void <init>()>();

        return $r1;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.types.parser.BigDecParserTest r0;

        r0 := @this: org.apache.flink.types.parser.BigDecParserTest;

        return class "Ljava/math/BigDecimal;";
    }

    public volatile java.lang.Object[] getValidTestResults()
    {
        org.apache.flink.types.parser.BigDecParserTest r0;
        java.math.BigDecimal[] $r1;

        r0 := @this: org.apache.flink.types.parser.BigDecParserTest;

        $r1 = virtualinvoke r0.<org.apache.flink.types.parser.BigDecParserTest: java.math.BigDecimal[] getValidTestResults()>();

        return $r1;
    }
}
