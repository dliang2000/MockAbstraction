public class org.apache.logging.log4j.util.PropertyFilePropertySource extends org.apache.logging.log4j.util.PropertiesPropertySource
{

    public void <init>(java.lang.String)
    {
        org.apache.logging.log4j.util.PropertyFilePropertySource r0;
        java.lang.String r1;
        java.util.Properties $r2;

        r0 := @this: org.apache.logging.log4j.util.PropertyFilePropertySource;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.logging.log4j.util.PropertyFilePropertySource: java.util.Properties loadPropertiesFile(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.logging.log4j.util.PropertiesPropertySource: void <init>(java.util.Properties)>($r2);

        return;
    }

    private static java.util.Properties loadPropertiesFile(java.lang.String)
    {
        java.lang.String r0, $r14;
        java.util.Iterator r2;
        java.net.URL r3;
        java.util.Properties $r6;
        java.util.Collection $r7;
        boolean $z0;
        java.lang.Object $r8;
        java.lang.Throwable $r9, $r15, $r17, r19;
        java.io.IOException $r10;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.io.InputStream r18;

        r0 := @parameter0: java.lang.String;

        $r6 = new java.util.Properties;

        specialinvoke $r6.<java.util.Properties: void <init>()>();

        $r7 = staticinvoke <org.apache.logging.log4j.util.LoaderUtil: java.util.Collection findResources(java.lang.String)>(r0);

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.net.URL) $r8;

     label02:
        r18 = virtualinvoke r3.<java.net.URL: java.io.InputStream openStream()>();

        r19 = null;

     label03:
        virtualinvoke $r6.<java.util.Properties: void load(java.io.InputStream)>(r18);

     label04:
        if r18 == null goto label14;

        goto label05;

     label05:
        virtualinvoke r18.<java.io.InputStream: void close()>();

        goto label14;

     label06:
        $r9 := @caughtexception;

        r19 = $r9;

        throw $r9;

     label07:
        $r17 := @caughtexception;

     label08:
        if r18 == null goto label13;

        if r19 == null goto label12;

     label09:
        virtualinvoke r18.<java.io.InputStream: void close()>();

     label10:
        goto label13;

     label11:
        $r15 := @caughtexception;

        virtualinvoke r19.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r15);

        goto label13;

     label12:
        virtualinvoke r18.<java.io.InputStream: void close()>();

     label13:
        throw $r17;

     label14:
        goto label16;

     label15:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.logging.log4j.util.LowLevelLogUtil: void logException(java.lang.String,java.lang.Throwable)>($r14, $r10);

     label16:
        goto label01;

     label17:
        return $r6;

        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label06 to label08 with label07;
        catch java.io.IOException from label02 to label14 with label15;
    }

    public int getPriority()
    {
        org.apache.logging.log4j.util.PropertyFilePropertySource r0;

        r0 := @this: org.apache.logging.log4j.util.PropertyFilePropertySource;

        return 0;
    }
}
