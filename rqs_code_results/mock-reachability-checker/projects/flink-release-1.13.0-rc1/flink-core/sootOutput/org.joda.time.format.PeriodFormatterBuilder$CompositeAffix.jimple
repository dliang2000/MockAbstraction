class org.joda.time.format.PeriodFormatterBuilder$CompositeAffix extends org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix
{
    private final org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft;
    private final org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight;
    private final java.lang.String[] iLeftRightCombinations;

    void <init>(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix, org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix r1, r2, $r9, $r13;
        java.lang.String[] r4, r6, $r10, $r12;
        int i0, i1, $i2, i3, i4;
        java.lang.String r5, r7, $r17;
        java.util.HashSet $r8;
        java.lang.Object[] $r11;
        java.lang.StringBuilder $r14, $r15, $r16;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        r1 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        r2 := @parameter1: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft> = r1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight> = r2;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        r4 = interfaceinvoke $r9.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: java.lang.String[] getAffixes()>();

        i0 = lengthof r4;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        r5 = r4[i3];

        $r13 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        r6 = interfaceinvoke $r13.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: java.lang.String[] getAffixes()>();

        i1 = lengthof r6;

        i4 = 0;

     label2:
        if i4 >= i1 goto label3;

        r7 = r6[i4];

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r17);

        i4 = i4 + 1;

        goto label2;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $i2 = interfaceinvoke $r8.<java.util.Set: int size()>();

        $r10 = newarray (java.lang.String)[$i2];

        $r11 = interfaceinvoke $r8.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r12 = (java.lang.String[]) $r11;

        r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: java.lang.String[] iLeftRightCombinations> = $r12;

        return;
    }

    public int calculatePrintedLength(int)
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        int i0, $i1, $i2, $i3;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r1, $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        $i1 = interfaceinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int calculatePrintedLength(int)>(i0);

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        $i2 = interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int calculatePrintedLength(int)>(i0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public void printTo(java.lang.StringBuffer, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        java.lang.StringBuffer r1;
        int i0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2, $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        r1 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.lang.StringBuffer,int)>(r1, i0);

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        interfaceinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.lang.StringBuffer,int)>(r1, i0);

        return;
    }

    public void printTo(java.io.Writer, int) throws java.io.IOException
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        java.io.Writer r1;
        int i0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2, $r3;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        r1 := @parameter0: java.io.Writer;

        i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.io.Writer,int)>(r1, i0);

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        interfaceinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.io.Writer,int)>(r1, i0);

        return;
    }

    public int parse(java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, i4;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2, $r3;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        i4 = interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r1, i0);

        if i4 < 0 goto label1;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        i4 = interfaceinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r1, i4);

        if i4 < 0 goto label1;

        $i1 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: int parse(java.lang.String,int)>(r1, i4);

        $i2 = $i1 - i4;

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i2, r1, i0);

        if $z0 == 0 goto label1;

        $i3 = i0 ^ -1;

        return $i3;

     label1:
        return i4;
    }

    public int scan(java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        java.lang.String r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        i1 = interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>(r1, i0);

        if i1 < 0 goto label3;

        $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        $i4 = interfaceinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r1, i1);

        i2 = interfaceinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>(r1, $i4);

        if i2 < 0 goto label1;

        $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        $i5 = interfaceinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r1, i2);

        $i6 = $i5 - i1;

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i6, r1, i0);

        if $z0 != 0 goto label3;

     label1:
        if i1 <= 0 goto label2;

        return i1;

     label2:
        return i2;

     label3:
        $i3 = i0 ^ -1;

        return $i3;
    }

    public java.lang.String[] getAffixes()
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        java.lang.String[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: java.lang.String[] iLeftRightCombinations>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        return $r3;
    }
}
