class org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable extends org.apache.flink.core.io.PostVersionedIOReadableWritable
{
    private static final int VERSION;
    private byte[] data;

    void <init>(int)
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable r0;
        int i0;
        byte[] $r1;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.flink.core.io.PostVersionedIOReadableWritable: void <init>()>();

        $r1 = newarray (byte)[i0];

        r0.<org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable: byte[] data> = $r1;

        return;
    }

    void <init>(byte[])
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable r0;
        byte[] r1;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.flink.core.io.PostVersionedIOReadableWritable: void <init>()>();

        r0.<org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable: byte[] data> = r1;

        return;
    }

    public int getVersion()
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable r0;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable;

        return 1;
    }

    public void write(org.apache.flink.core.memory.DataOutputView) throws java.io.IOException
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable r0;
        org.apache.flink.core.memory.DataOutputView r1;
        byte[] $r2;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable;

        r1 := @parameter0: org.apache.flink.core.memory.DataOutputView;

        specialinvoke r0.<org.apache.flink.core.io.PostVersionedIOReadableWritable: void write(org.apache.flink.core.memory.DataOutputView)>(r1);

        $r2 = r0.<org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable: byte[] data>;

        interfaceinvoke r1.<org.apache.flink.core.memory.DataOutputView: void write(byte[])>($r2);

        return;
    }

    protected void read(org.apache.flink.core.memory.DataInputView, boolean) throws java.io.IOException
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable r0;
        org.apache.flink.core.memory.DataInputView r1;
        boolean z0;
        byte[] $r2;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable;

        r1 := @parameter0: org.apache.flink.core.memory.DataInputView;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable: byte[] data>;

        interfaceinvoke r1.<org.apache.flink.core.memory.DataInputView: void readFully(byte[])>($r2);

        staticinvoke <org.apache.flink.core.io.PostVersionedIOReadableWritableTest: void access$000(org.apache.flink.core.memory.DataInputView)>(r1);

        return;
    }

    public byte[] getData()
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable r0;
        byte[] $r1;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable;

        $r1 = r0.<org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable: byte[] data>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestPostVersionedReadableWritable: int VERSION> = 1;

        return;
    }
}
