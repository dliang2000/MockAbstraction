public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer extends java.lang.Object
{
    static final char[] NO_CHARS;
    static final int MIN_SEGMENT_LEN;
    static final int MAX_SEGMENT_LEN;
    private final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _allocator;
    private char[] _inputBuffer;
    private int _inputStart;
    private int _inputLen;
    private java.util.ArrayList _segments;
    private boolean _hasSegments;
    private int _segmentSize;
    private char[] _currentSegment;
    private int _currentSize;
    private java.lang.String _resultString;
    private char[] _resultArray;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _allocator> = r1;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler, char[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler r1;
        char[] r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler;

        r2 := @parameter1: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _allocator> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = r2;

        $i0 = lengthof r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = $i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart> = -1;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[])
    {
        char[] r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer $r1;

        r0 := @parameter0: char[];

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler,char[])>(null, r0);

        return $r1;
    }

    public void releaseBuffers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char[] r1, $r3;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r2, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart> = -1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = null;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void clearSegments()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _allocator>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        if $r3 == null goto label2;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = null;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _allocator>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: void releaseCharBuffer(int,char[])>(2, r1);

     label2:
        return;
    }

    public void resetWithEmpty()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart> = -1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = null;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void clearSegments()>();

     label1:
        return;
    }

    public void resetWith(char)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char c0;
        boolean $z0;
        char[] $r1, $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        c0 := @parameter0: char;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart> = -1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = null;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void clearSegments()>();

        goto label2;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        if $r1 != null goto label2;

        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] buf(int)>(1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = $r2;

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $r3[0] = c0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize> = 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = 1;

        return;
    }

    public void resetWithShared(char[], int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char[] r1;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart> = i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen> = i1;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void clearSegments()>();

     label1:
        return;
    }

    public void resetWithCopy(char[], int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char[] r1, $r2, $r3;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart> = -1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = null;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void clearSegments()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        if $r2 != null goto label2;

        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] buf(int)>(i1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = $r3;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void resetWithCopy(java.lang.String, int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        java.lang.String r1;
        int i0, i1;
        boolean $z0;
        char[] $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart> = -1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = null;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void clearSegments()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        if $r2 != null goto label2;

        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] buf(int)>(i1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = $r3;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = 0;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void append(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    public void resetWithString(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart> = -1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = null;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void clearSegments()>();

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = 0;

        return;
    }

    public char[] getBufferWithoutReset()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        return $r1;
    }

    private char[] buf(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler $r1, $r3;
        char[] $r2, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _allocator>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler _allocator>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(int,int)>(2, i0);

        return $r4;

     label1:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(i0, 500);

        $r2 = newarray (char)[$i1];

        return $r2;
    }

    private void clearSegments()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments> = 0;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = 0;

        return;
    }

    public int size()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        char[] $r1, $r4;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i0 < 0 goto label1;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen>;

        return $i6;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        if $r1 == null goto label2;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        $i5 = lengthof $r4;

        return $i5;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        if $r2 == null goto label3;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        $i4 = virtualinvoke $r3.<java.lang.String: int length()>();

        return $i4;

     label3:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $i3 = $i2 + $i1;

        return $i3;
    }

    public int getTextOffset()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i0 < 0 goto label1;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    public boolean hasTextAsCharacters()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int $i0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i0 >= 0 goto label1;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        if $r1 == null goto label2;

     label1:
        return 1;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        if $r2 == null goto label3;

        return 0;

     label3:
        return 1;
    }

    public char[] getTextBuffer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int $i0;
        char[] $r1, $r3, $r4, $r6, $r7, $r8, $r9;
        java.lang.String $r2, $r5;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i0 < 0 goto label1;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        return $r8;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        if $r1 == null goto label2;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        return $r7;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        if $r2 == null goto label3;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = $r6;

        return $r6;

     label3:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments>;

        if $z0 != 0 goto label6;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        if $r4 != null goto label4;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] NO_CHARS>;

        goto label5;

     label4:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

     label5:
        return $r9;

     label6:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] contentsAsArray()>();

        return $r3;
    }

    public java.lang.String contentsAsString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        char[] r2, $r4, $r7, $r14, $r17, $r20;
        java.lang.String $r3, $r9, $r16, $r19, $r21, $r22;
        java.lang.StringBuilder $r5;
        java.util.ArrayList $r6, $r10, $r11;
        java.lang.Object $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        if $r3 != null goto label9;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        if $r4 == null goto label1;

        $r19 = new java.lang.String;

        $r20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r20);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = $r19;

        goto label9;

     label1:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i3 < 0 goto label3;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen>;

        if $i7 >= 1 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = "";

        return "";

     label2:
        $r16 = new java.lang.String;

        $r17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen>;

        specialinvoke $r16.<java.lang.String: void <init>(char[],int,int)>($r17, $i9, $i8);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = $r16;

        goto label9;

     label3:
        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize>;

        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        if i0 != 0 goto label6;

        if i1 != 0 goto label4;

        $r21 = "";

        goto label5;

     label4:
        $r21 = new java.lang.String;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        specialinvoke $r21.<java.lang.String: void <init>(char[],int,int)>($r14, 0, i1);

     label5:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = $r21;

        goto label9;

     label6:
        $r5 = new java.lang.StringBuilder;

        $i4 = i0 + i1;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i4);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        if $r6 == null goto label8;

        i10 = 0;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        i2 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

     label7:
        if i10 >= i2 goto label8;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r2 = (char[]) $r12;

        $i6 = lengthof r2;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r2, 0, $i6);

        i10 = i10 + 1;

        goto label7;

     label8:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r7, 0, $i5);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = $r9;

     label9:
        $r22 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        return $r22;
    }

    public char[] contentsAsArray()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char[] $r1, r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        if r2 != null goto label1;

        $r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] resultArray()>();

        r2 = $r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = $r1;

     label1:
        return r2;
    }

    public java.math.BigDecimal contentsAsDecimal() throws java.lang.NumberFormatException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char[] $r1, $r2, $r4, $r5, $r7, $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        java.math.BigDecimal $r3, $r6, $r9, $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        if $r1 == null goto label1;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        $r11 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.math.BigDecimal parseBigDecimal(char[])>($r10);

        return $r11;

     label1:
        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i0 < 0 goto label2;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        if $r7 == null goto label2;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen>;

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.math.BigDecimal parseBigDecimal(char[],int,int)>($r8, $i4, $i3);

        return $r9;

     label2:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize>;

        if $i1 != 0 goto label3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        if $r4 == null goto label3;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.math.BigDecimal parseBigDecimal(char[],int,int)>($r5, 0, $i2);

        return $r6;

     label3:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] contentsAsArray()>();

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: java.math.BigDecimal parseBigDecimal(char[])>($r2);

        return $r3;
    }

    public double contentsAsDouble() throws java.lang.NumberFormatException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        java.lang.String $r1;
        double $d0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        $d0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String)>($r1);

        return $d0;
    }

    public int contentsAsInt(boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        char[] $r1, $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        z0 := @parameter0: boolean;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i0 < 0 goto label2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        if $r3 == null goto label2;

        if z0 == 0 goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        $i13 = $i10 + 1;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen>;

        $i12 = $i11 - 1;

        $i14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: int parseInt(char[],int,int)>($r5, $i13, $i12);

        $i15 = neg $i14;

        return $i15;

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen>;

        $i9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: int parseInt(char[],int,int)>($r4, $i8, $i7);

        return $i9;

     label2:
        if z0 == 0 goto label3;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $i4 = $i3 - 1;

        $i5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: int parseInt(char[],int,int)>($r2, 1, $i4);

        $i6 = neg $i5;

        return $i6;

     label3:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $i2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: int parseInt(char[],int,int)>($r1, 0, $i1);

        return $i2;
    }

    public long contentsAsLong(boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        boolean z0;
        int $i0, $i1, $i3, $i4, $i7, $i8, $i10, $i11, $i12, $i13;
        char[] $r1, $r2, $r3, $r4, $r5;
        long $l2, $l5, $l6, $l9, $l14, $l15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        z0 := @parameter0: boolean;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i0 < 0 goto label2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        if $r3 == null goto label2;

        if z0 == 0 goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        $i13 = $i10 + 1;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen>;

        $i12 = $i11 - 1;

        $l14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: long parseLong(char[],int,int)>($r5, $i13, $i12);

        $l15 = neg $l14;

        return $l15;

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen>;

        $l9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: long parseLong(char[],int,int)>($r4, $i8, $i7);

        return $l9;

     label2:
        if z0 == 0 goto label3;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $i4 = $i3 - 1;

        $l5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: long parseLong(char[],int,int)>($r2, 1, $i4);

        $l6 = neg $l5;

        return $l6;

     label3:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $l2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberInput: long parseLong(char[],int,int)>($r1, 0, $i1);

        return $l2;
    }

    public int contentsToWriter(java.io.Writer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        java.io.Writer r1;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        char[] r2, $r3, $r6, $r10, $r13, $r14;
        java.lang.String $r4, $r11, $r12;
        java.util.ArrayList $r5, $r7, $r8;
        java.lang.Object $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r1 := @parameter0: java.io.Writer;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        if $r3 == null goto label1;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        virtualinvoke r1.<java.io.Writer: void write(char[])>($r13);

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray>;

        $i5 = lengthof $r14;

        return $i5;

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        if $r4 == null goto label2;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r11);

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        $i4 = virtualinvoke $r12.<java.lang.String: int length()>();

        return $i4;

     label2:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i2 < 0 goto label4;

        i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen>;

        if i6 <= 0 goto label3;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r10, $i3, i6);

     label3:
        return i6;

     label4:
        i7 = 0;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        if $r5 == null goto label6;

        i8 = 0;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

     label5:
        if i8 >= i0 goto label6;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r2 = (char[]) $r9;

        i1 = lengthof r2;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>(r2, 0, i1);

        i7 = i7 + i1;

        i8 = i8 + 1;

        goto label5;

     label6:
        i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        if i9 <= 0 goto label7;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r6, 0, i9);

        i7 = i7 + i9;

     label7:
        return i7;
    }

    public void ensureNotShared()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i0 < 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void unshare(int)>(16);

     label1:
        return;
    }

    public void append(char)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char c0;
        int $i1, $i2, $i3, $i4, $i5;
        char[] r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        c0 := @parameter0: char;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i1 < 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void unshare(int)>(16);

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = null;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $i2 = lengthof r2;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void expand(int)>(1);

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

     label2:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = $i5;

        r2[$i4] = c0;

        return;
    }

    public void append(char[], int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char[] r1, r2, $r3, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, $i12, $i13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r1 := @parameter0: char[];

        i9 := @parameter1: int;

        i10 := @parameter2: int;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i2 < 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void unshare(int)>(i10);

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = null;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i4 = lengthof r2;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        i0 = $i4 - $i3;

        if i0 < i10 goto label2;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i9, r2, $i6, i10);

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $i8 = $i7 + i10;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = $i8;

        return;

     label2:
        if i0 <= 0 goto label3;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i9, r2, $i5, i0);

        i9 = i9 + i0;

        i10 = i10 - i0;

     label3:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void expand(int)>(i10);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i11 = lengthof $r3;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i11, i10);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i9, $r4, 0, i1);

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $i13 = $i12 + i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = $i13;

        i9 = i9 + i1;

        i10 = i10 - i1;

        if i10 > 0 goto label3;

        return;
    }

    public void append(java.lang.String, int, int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        java.lang.String r1;
        char[] r2, $r3, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13, $i14, $i15, $i16;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r1 := @parameter0: java.lang.String;

        i11 := @parameter1: int;

        i12 := @parameter2: int;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i2 < 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void unshare(int)>(i12);

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = null;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i4 = lengthof r2;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        i0 = $i4 - $i3;

        if i0 < i12 goto label2;

        $i8 = i11 + i12;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i11, $i8, r2, $i7);

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $i10 = $i9 + i12;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = $i10;

        return;

     label2:
        if i0 <= 0 goto label3;

        $i6 = i11 + i0;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i11, $i6, r2, $i5);

        i12 = i12 - i0;

        i11 = i11 + i0;

     label3:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void expand(int)>(i12);

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i13 = lengthof $r3;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i13, i12);

        $i14 = i11 + i1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i11, $i14, $r4, 0);

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $i16 = $i15 + i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = $i16;

        i11 = i11 + i1;

        i12 = i12 - i1;

        if i12 > 0 goto label3;

        return;
    }

    public char[] getCurrentSegment()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char[] r1, $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i0 < 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void unshare(int)>(1);

        goto label3;

     label1:
        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        if r1 != null goto label2;

        $r2 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] buf(int)>(0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = $r2;

        goto label3;

     label2:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        $i1 = lengthof r1;

        if $i2 < $i1 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void expand(int)>(1);

     label3:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        return $r3;
    }

    public char[] emptyAndGetCurrentSegment()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        boolean $z0;
        char[] $r1, r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart> = -1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _resultArray> = null;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: void clearSegments()>();

     label1:
        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        if r2 != null goto label2;

        $r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] buf(int)>(0);

        r2 = $r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = $r1;

     label2:
        return r2;
    }

    public int getCurrentSegmentSize()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        return $i0;
    }

    public void setCurrentLength(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        i0 := @parameter0: int;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = i0;

        return;
    }

    public java.lang.String setCurrentAndReturn(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int i0, i1, $i2;
        char[] $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        i0 := @parameter0: int;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = i0;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize>;

        if $i2 <= 0 goto label1;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r3;

     label1:
        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        if i1 != 0 goto label2;

        $r4 = "";

        goto label3;

     label2:
        $r4 = new java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r2, 0, i1);

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString> = $r4;

        return $r4;
    }

    public char[] finishCurrentSegment()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int i0, $i1, $i2, $i3, i4;
        char[] r1, $r3, $r5;
        java.util.ArrayList $r2, $r4, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        if $r2 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments> = $r6;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments> = 1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        i0 = lengthof $r5;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize>;

        $i2 = $i1 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize> = $i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = 0;

        $i3 = i0 >> 1;

        i4 = i0 + $i3;

        if i4 >= 500 goto label2;

        i4 = 500;

        goto label3;

     label2:
        if i4 <= 65536 goto label3;

        i4 = 65536;

     label3:
        r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] carr(int)>(i4);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = r1;

        return r1;
    }

    public char[] expandCurrentSegment()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char[] r1, $r2;
        int i0, $i1, $i2, i3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        i0 = lengthof r1;

        $i1 = i0 >> 1;

        i3 = i0 + $i1;

        if i3 <= 65536 goto label1;

        $i2 = i0 >> 2;

        i3 = i0 + $i2;

     label1:
        $r2 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(r1, i3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = $r2;

        return $r2;
    }

    public char[] expandCurrentSegment(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int i0, $i1;
        char[] $r1, r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        i0 := @parameter0: int;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i1 = lengthof r2;

        if $i1 < i0 goto label1;

        return r2;

     label1:
        $r1 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(r2, i0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = $r1;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>();

        return $r1;
    }

    private void unshare(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int i0, i1, i2, i3, $i4;
        char[] r1, $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        i0 := @parameter0: int;

        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen> = 0;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer> = null;

        i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart> = -1;

        i3 = i1 + i0;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        if $r2 == null goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i4 = lengthof $r5;

        if i3 <= $i4 goto label2;

     label1:
        $r3 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] buf(int)>(i3);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = $r3;

     label2:
        if i1 <= 0 goto label3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i2, $r4, 0, i1);

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = i1;

        return;
    }

    private void expand(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        char[] r1, $r6;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments> = $r4;

     label1:
        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: boolean _hasSegments> = 1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize>;

        $i2 = lengthof r1;

        $i4 = $i3 + $i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _segmentSize> = $i4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize> = 0;

        i1 = lengthof r1;

        $i5 = i1 >> 1;

        i6 = i1 + $i5;

        if i6 >= 500 goto label2;

        i6 = 500;

        goto label3;

     label2:
        if i6 <= 65536 goto label3;

        i6 = 65536;

     label3:
        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] carr(int)>(i6);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment> = $r6;

        return;
    }

    private char[] resultArray()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        char[] r1, r2, $r5, $r9, $r10, $r11, $r12, $r13, $r14, $r16;
        int i0, i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        java.lang.String $r3, $r15;
        java.util.ArrayList $r4, $r6, $r7;
        java.lang.Object $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        if $r3 == null goto label1;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.lang.String _resultString>;

        $r16 = virtualinvoke $r15.<java.lang.String: char[] toCharArray()>();

        return $r16;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if $i2 < 0 goto label4;

        i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputLen>;

        if i5 >= 1 goto label2;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] NO_CHARS>;

        return $r14;

     label2:
        i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _inputStart>;

        if i6 != 0 goto label3;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        $r13 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>($r12, i5);

        return $r13;

     label3:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _inputBuffer>;

        $i4 = i6 + i5;

        $r11 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($r10, i6, $i4);

        return $r11;

     label4:
        i7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int size()>();

        if i7 >= 1 goto label5;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] NO_CHARS>;

        return $r9;

     label5:
        i8 = 0;

        r1 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] carr(int)>(i7);

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        if $r4 == null goto label7;

        i9 = 0;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label6:
        if i9 >= i0 goto label7;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: java.util.ArrayList _segments>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r2 = (char[]) $r8;

        i1 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, i8, i1);

        i8 = i8 + i1;

        i9 = i9 + 1;

        goto label6;

     label7:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] _currentSegment>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int _currentSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r1, i8, $i3);

        return r1;
    }

    private char[] carr(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer r0;
        int i0;
        char[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer;

        i0 := @parameter0: int;

        $r1 = newarray (char)[i0];

        return $r1;
    }

    static void <clinit>()
    {
        char[] $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int MAX_SEGMENT_LEN> = 65536;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: int MIN_SEGMENT_LEN> = 500;

        $r0 = newarray (char)[0];

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.TextBuffer: char[] NO_CHARS> = $r0;

        return;
    }
}
