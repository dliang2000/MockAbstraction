final class org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer extends java.lang.Object
{
    private final org.apache.flink.util.clock.Clock clock;
    private long counter;
    private long lastCounter;
    private long startOfInactivityNanos;
    private final long maxIdleTimeNanos;

    void <init>(org.apache.flink.util.clock.Clock, java.time.Duration)
    {
        org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer r0;
        org.apache.flink.util.clock.Clock r1;
        java.time.Duration r2;
        java.lang.ArithmeticException $r4;
        long l0;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer;

        r1 := @parameter0: org.apache.flink.util.clock.Clock;

        r2 := @parameter1: java.time.Duration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: org.apache.flink.util.clock.Clock clock> = r1;

     label1:
        l0 = virtualinvoke r2.<java.time.Duration: long toNanos()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        l0 = 9223372036854775807L;

     label4:
        r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long maxIdleTimeNanos> = l0;

        return;

        catch java.lang.ArithmeticException from label1 to label2 with label3;
    }

    public void activity()
    {
        org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer r0;
        long $l0, $l1;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer;

        $l0 = r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long counter>;

        $l1 = $l0 + 1L;

        r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long counter> = $l1;

        return;
    }

    public boolean checkIfIdle()
    {
        org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer r0;
        long $l0, $l1, $l3, $l5, $l6, $l7, $l8, $l10, $l11;
        byte $b2, $b4, $b9;
        org.apache.flink.util.clock.Clock $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer;

        $l1 = r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long counter>;

        $l0 = r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long lastCounter>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label1;

        $l11 = r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long counter>;

        r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long lastCounter> = $l11;

        r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long startOfInactivityNanos> = 0L;

        return 0;

     label1:
        $l3 = r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long startOfInactivityNanos>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label2;

        $r2 = r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: org.apache.flink.util.clock.Clock clock>;

        $l10 = virtualinvoke $r2.<org.apache.flink.util.clock.Clock: long relativeTimeNanos()>();

        r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long startOfInactivityNanos> = $l10;

        return 0;

     label2:
        $r1 = r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: org.apache.flink.util.clock.Clock clock>;

        $l5 = virtualinvoke $r1.<org.apache.flink.util.clock.Clock: long relativeTimeNanos()>();

        $l6 = r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long startOfInactivityNanos>;

        $l8 = $l5 - $l6;

        $l7 = r0.<org.apache.flink.api.common.eventtime.WatermarksWithIdleness$IdlenessTimer: long maxIdleTimeNanos>;

        $b9 = $l8 cmp $l7;

        if $b9 <= 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }
}
