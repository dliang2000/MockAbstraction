class org.apache.flink.api.dag.TransformationTest$TestTransformation extends org.apache.flink.api.dag.Transformation
{

    public void <init>(java.lang.String, org.apache.flink.api.common.typeinfo.TypeInformation, int)
    {
        org.apache.flink.api.dag.TransformationTest$TestTransformation r0;
        java.lang.String r1;
        org.apache.flink.api.common.typeinfo.TypeInformation r2;
        int i0;

        r0 := @this: org.apache.flink.api.dag.TransformationTest$TestTransformation;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.flink.api.common.typeinfo.TypeInformation;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.flink.api.dag.Transformation: void <init>(java.lang.String,org.apache.flink.api.common.typeinfo.TypeInformation,int)>(r1, r2, i0);

        return;
    }

    public java.util.List getTransitivePredecessors()
    {
        org.apache.flink.api.dag.TransformationTest$TestTransformation r0;
        java.util.List $r1;

        r0 := @this: org.apache.flink.api.dag.TransformationTest$TestTransformation;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;
    }

    public java.util.List getInputs()
    {
        org.apache.flink.api.dag.TransformationTest$TestTransformation r0;
        java.util.List $r1;

        r0 := @this: org.apache.flink.api.dag.TransformationTest$TestTransformation;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;
    }
}
