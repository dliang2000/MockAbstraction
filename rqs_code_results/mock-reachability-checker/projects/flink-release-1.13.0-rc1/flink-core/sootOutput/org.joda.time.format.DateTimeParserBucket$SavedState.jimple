class org.joda.time.format.DateTimeParserBucket$SavedState extends java.lang.Object
{
    final org.joda.time.DateTimeZone iZone;
    final java.lang.Integer iOffset;
    final org.joda.time.format.DateTimeParserBucket$SavedField[] iSavedFields;
    final int iSavedFieldsCount;
    final org.joda.time.format.DateTimeParserBucket this$0;

    void <init>(org.joda.time.format.DateTimeParserBucket)
    {
        org.joda.time.format.DateTimeParserBucket$SavedState r0;
        org.joda.time.format.DateTimeParserBucket r1;
        org.joda.time.DateTimeZone $r2;
        java.lang.Integer $r3;
        org.joda.time.format.DateTimeParserBucket$SavedField[] $r4;
        int $i0;

        r0 := @this: org.joda.time.format.DateTimeParserBucket$SavedState;

        r1 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedState: org.joda.time.format.DateTimeParserBucket this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.joda.time.format.DateTimeParserBucket: org.joda.time.DateTimeZone access$000(org.joda.time.format.DateTimeParserBucket)>(r1);

        r0.<org.joda.time.format.DateTimeParserBucket$SavedState: org.joda.time.DateTimeZone iZone> = $r2;

        $r3 = staticinvoke <org.joda.time.format.DateTimeParserBucket: java.lang.Integer access$100(org.joda.time.format.DateTimeParserBucket)>(r1);

        r0.<org.joda.time.format.DateTimeParserBucket$SavedState: java.lang.Integer iOffset> = $r3;

        $r4 = staticinvoke <org.joda.time.format.DateTimeParserBucket: org.joda.time.format.DateTimeParserBucket$SavedField[] access$200(org.joda.time.format.DateTimeParserBucket)>(r1);

        r0.<org.joda.time.format.DateTimeParserBucket$SavedState: org.joda.time.format.DateTimeParserBucket$SavedField[] iSavedFields> = $r4;

        $i0 = staticinvoke <org.joda.time.format.DateTimeParserBucket: int access$300(org.joda.time.format.DateTimeParserBucket)>(r1);

        r0.<org.joda.time.format.DateTimeParserBucket$SavedState: int iSavedFieldsCount> = $i0;

        return;
    }

    boolean restoreState(org.joda.time.format.DateTimeParserBucket)
    {
        org.joda.time.format.DateTimeParserBucket$SavedState r0;
        org.joda.time.format.DateTimeParserBucket r1, $r2;
        org.joda.time.DateTimeZone $r3;
        java.lang.Integer $r5;
        org.joda.time.format.DateTimeParserBucket$SavedField[] $r7;
        int $i0, $i1, $i2;

        r0 := @this: org.joda.time.format.DateTimeParserBucket$SavedState;

        r1 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        $r2 = r0.<org.joda.time.format.DateTimeParserBucket$SavedState: org.joda.time.format.DateTimeParserBucket this$0>;

        if r1 == $r2 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.joda.time.format.DateTimeParserBucket$SavedState: org.joda.time.DateTimeZone iZone>;

        staticinvoke <org.joda.time.format.DateTimeParserBucket: org.joda.time.DateTimeZone access$002(org.joda.time.format.DateTimeParserBucket,org.joda.time.DateTimeZone)>(r1, $r3);

        $r5 = r0.<org.joda.time.format.DateTimeParserBucket$SavedState: java.lang.Integer iOffset>;

        staticinvoke <org.joda.time.format.DateTimeParserBucket: java.lang.Integer access$102(org.joda.time.format.DateTimeParserBucket,java.lang.Integer)>(r1, $r5);

        $r7 = r0.<org.joda.time.format.DateTimeParserBucket$SavedState: org.joda.time.format.DateTimeParserBucket$SavedField[] iSavedFields>;

        staticinvoke <org.joda.time.format.DateTimeParserBucket: org.joda.time.format.DateTimeParserBucket$SavedField[] access$202(org.joda.time.format.DateTimeParserBucket,org.joda.time.format.DateTimeParserBucket$SavedField[])>(r1, $r7);

        $i0 = r0.<org.joda.time.format.DateTimeParserBucket$SavedState: int iSavedFieldsCount>;

        $i1 = staticinvoke <org.joda.time.format.DateTimeParserBucket: int access$300(org.joda.time.format.DateTimeParserBucket)>(r1);

        if $i0 >= $i1 goto label2;

        staticinvoke <org.joda.time.format.DateTimeParserBucket: boolean access$402(org.joda.time.format.DateTimeParserBucket,boolean)>(r1, 1);

     label2:
        $i2 = r0.<org.joda.time.format.DateTimeParserBucket$SavedState: int iSavedFieldsCount>;

        staticinvoke <org.joda.time.format.DateTimeParserBucket: int access$302(org.joda.time.format.DateTimeParserBucket,int)>(r1, $i2);

        return 1;
    }
}
