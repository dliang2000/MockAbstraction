public class org.mockito.ArgumentCaptor extends java.lang.Object
{
    private final org.mockito.internal.matchers.CapturingMatcher capturingMatcher;
    private final java.lang.Class clazz;

    private void <init>(java.lang.Class)
    {
        org.mockito.ArgumentCaptor r0;
        java.lang.Class r1;
        org.mockito.internal.matchers.CapturingMatcher $r2;

        r0 := @this: org.mockito.ArgumentCaptor;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.mockito.internal.matchers.CapturingMatcher;

        specialinvoke $r2.<org.mockito.internal.matchers.CapturingMatcher: void <init>()>();

        r0.<org.mockito.ArgumentCaptor: org.mockito.internal.matchers.CapturingMatcher capturingMatcher> = $r2;

        r0.<org.mockito.ArgumentCaptor: java.lang.Class clazz> = r1;

        return;
    }

    public java.lang.Object capture()
    {
        org.mockito.ArgumentCaptor r0;
        org.mockito.internal.matchers.CapturingMatcher $r1;
        java.lang.Class $r3;
        java.lang.Object $r4;

        r0 := @this: org.mockito.ArgumentCaptor;

        $r1 = r0.<org.mockito.ArgumentCaptor: org.mockito.internal.matchers.CapturingMatcher capturingMatcher>;

        staticinvoke <org.mockito.Mockito: java.lang.Object argThat(org.mockito.ArgumentMatcher)>($r1);

        $r3 = r0.<org.mockito.ArgumentCaptor: java.lang.Class clazz>;

        $r4 = staticinvoke <org.mockito.internal.util.Primitives: java.lang.Object defaultValue(java.lang.Class)>($r3);

        return $r4;
    }

    public java.lang.Object getValue()
    {
        org.mockito.ArgumentCaptor r0;
        org.mockito.internal.matchers.CapturingMatcher $r1;
        java.lang.Object $r2;

        r0 := @this: org.mockito.ArgumentCaptor;

        $r1 = r0.<org.mockito.ArgumentCaptor: org.mockito.internal.matchers.CapturingMatcher capturingMatcher>;

        $r2 = virtualinvoke $r1.<org.mockito.internal.matchers.CapturingMatcher: java.lang.Object getLastValue()>();

        return $r2;
    }

    public java.util.List getAllValues()
    {
        org.mockito.ArgumentCaptor r0;
        org.mockito.internal.matchers.CapturingMatcher $r1;
        java.util.List $r2;

        r0 := @this: org.mockito.ArgumentCaptor;

        $r1 = r0.<org.mockito.ArgumentCaptor: org.mockito.internal.matchers.CapturingMatcher capturingMatcher>;

        $r2 = virtualinvoke $r1.<org.mockito.internal.matchers.CapturingMatcher: java.util.List getAllValues()>();

        return $r2;
    }

    public static org.mockito.ArgumentCaptor forClass(java.lang.Class)
    {
        java.lang.Class r0;
        org.mockito.ArgumentCaptor $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new org.mockito.ArgumentCaptor;

        specialinvoke $r1.<org.mockito.ArgumentCaptor: void <init>(java.lang.Class)>(r0);

        return $r1;
    }
}
