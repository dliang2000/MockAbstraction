class org.joda.time.chrono.LimitChronology$LimitDateTimeField extends org.joda.time.field.DecoratedDateTimeField
{
    private static final long serialVersionUID;
    private final org.joda.time.DurationField iDurationField;
    private final org.joda.time.DurationField iRangeDurationField;
    private final org.joda.time.DurationField iLeapDurationField;
    final org.joda.time.chrono.LimitChronology this$0;

    void <init>(org.joda.time.chrono.LimitChronology, org.joda.time.DateTimeField, org.joda.time.DurationField, org.joda.time.DurationField, org.joda.time.DurationField)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        org.joda.time.chrono.LimitChronology r1;
        org.joda.time.DateTimeField r2;
        org.joda.time.DurationField r3, r4, r5;
        org.joda.time.DateTimeFieldType $r6;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        r1 := @parameter0: org.joda.time.chrono.LimitChronology;

        r2 := @parameter1: org.joda.time.DateTimeField;

        r3 := @parameter2: org.joda.time.DurationField;

        r4 := @parameter3: org.joda.time.DurationField;

        r5 := @parameter4: org.joda.time.DurationField;

        r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0> = r1;

        $r6 = virtualinvoke r2.<org.joda.time.DateTimeField: org.joda.time.DateTimeFieldType getType()>();

        specialinvoke r0.<org.joda.time.field.DecoratedDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)>(r2, $r6);

        r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DurationField iDurationField> = r3;

        r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DurationField iRangeDurationField> = r4;

        r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DurationField iLeapDurationField> = r5;

        return;
    }

    public int get(long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0;
        org.joda.time.chrono.LimitChronology $r1;
        org.joda.time.DateTimeField $r2;
        int $i1;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i1 = virtualinvoke $r2.<org.joda.time.DateTimeField: int get(long)>(l0);

        return $i1;
    }

    public java.lang.String getAsText(long, java.util.Locale)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0;
        java.util.Locale r1;
        org.joda.time.chrono.LimitChronology $r2;
        org.joda.time.DateTimeField $r3;
        java.lang.String $r4;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.Locale;

        $r2 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r2.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r3 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $r4 = virtualinvoke $r3.<org.joda.time.DateTimeField: java.lang.String getAsText(long,java.util.Locale)>(l0, r1);

        return $r4;
    }

    public java.lang.String getAsShortText(long, java.util.Locale)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0;
        java.util.Locale r1;
        org.joda.time.chrono.LimitChronology $r2;
        org.joda.time.DateTimeField $r3;
        java.lang.String $r4;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.Locale;

        $r2 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r2.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r3 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $r4 = virtualinvoke $r3.<org.joda.time.DateTimeField: java.lang.String getAsShortText(long,java.util.Locale)>(l0, r1);

        return $r4;
    }

    public long add(long, int)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l2;
        int i1;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        l2 = virtualinvoke $r2.<org.joda.time.DateTimeField: long add(long,int)>(l0, i1);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l2, "resulting");

        return l2;
    }

    public long add(long, long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l1, l2;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        l2 = virtualinvoke $r2.<org.joda.time.DateTimeField: long add(long,long)>(l0, l1);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l2, "resulting");

        return l2;
    }

    public long addWrapField(long, int)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l2;
        int i1;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        l2 = virtualinvoke $r2.<org.joda.time.DateTimeField: long addWrapField(long,int)>(l0, i1);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l2, "resulting");

        return l2;
    }

    public int getDifference(long, long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l1;
        org.joda.time.chrono.LimitChronology $r1, $r2;
        org.joda.time.DateTimeField $r3;
        int $i2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, "minuend");

        $r2 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r2.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, "subtrahend");

        $r3 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i2 = virtualinvoke $r3.<org.joda.time.DateTimeField: int getDifference(long,long)>(l0, l1);

        return $i2;
    }

    public long getDifferenceAsLong(long, long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l1, $l2;
        org.joda.time.chrono.LimitChronology $r1, $r2;
        org.joda.time.DateTimeField $r3;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, "minuend");

        $r2 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r2.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, "subtrahend");

        $r3 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $l2 = virtualinvoke $r3.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>(l0, l1);

        return $l2;
    }

    public long set(long, int)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l2;
        int i1;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        l2 = virtualinvoke $r2.<org.joda.time.DateTimeField: long set(long,int)>(l0, i1);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l2, "resulting");

        return l2;
    }

    public long set(long, java.lang.String, java.util.Locale)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l1;
        java.lang.String r1;
        java.util.Locale r2;
        org.joda.time.chrono.LimitChronology $r3, $r5;
        org.joda.time.DateTimeField $r4;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Locale;

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r4 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        l1 = virtualinvoke $r4.<org.joda.time.DateTimeField: long set(long,java.lang.String,java.util.Locale)>(l0, r1, r2);

        $r5 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r5.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, "resulting");

        return l1;
    }

    public final org.joda.time.DurationField getDurationField()
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DurationField iDurationField>;

        return $r1;
    }

    public final org.joda.time.DurationField getRangeDurationField()
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DurationField iRangeDurationField>;

        return $r1;
    }

    public boolean isLeap(long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0;
        org.joda.time.chrono.LimitChronology $r1;
        org.joda.time.DateTimeField $r2;
        boolean $z0;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $z0 = virtualinvoke $r2.<org.joda.time.DateTimeField: boolean isLeap(long)>(l0);

        return $z0;
    }

    public int getLeapAmount(long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0;
        org.joda.time.chrono.LimitChronology $r1;
        org.joda.time.DateTimeField $r2;
        int $i1;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i1 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getLeapAmount(long)>(l0);

        return $i1;
    }

    public final org.joda.time.DurationField getLeapDurationField()
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DurationField iLeapDurationField>;

        return $r1;
    }

    public long roundFloor(long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l1;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        l1 = virtualinvoke $r2.<org.joda.time.DateTimeField: long roundFloor(long)>(l0);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, "resulting");

        return l1;
    }

    public long roundCeiling(long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l1;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        l1 = virtualinvoke $r2.<org.joda.time.DateTimeField: long roundCeiling(long)>(l0);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, "resulting");

        return l1;
    }

    public long roundHalfFloor(long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l1;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        l1 = virtualinvoke $r2.<org.joda.time.DateTimeField: long roundHalfFloor(long)>(l0);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, "resulting");

        return l1;
    }

    public long roundHalfCeiling(long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l1;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        l1 = virtualinvoke $r2.<org.joda.time.DateTimeField: long roundHalfCeiling(long)>(l0);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, "resulting");

        return l1;
    }

    public long roundHalfEven(long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l1;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        l1 = virtualinvoke $r2.<org.joda.time.DateTimeField: long roundHalfEven(long)>(l0);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, "resulting");

        return l1;
    }

    public long remainder(long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0, l1;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        l1 = virtualinvoke $r2.<org.joda.time.DateTimeField: long remainder(long)>(l0);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, "resulting");

        return l1;
    }

    public int getMinimumValue(long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0;
        org.joda.time.chrono.LimitChronology $r1;
        org.joda.time.DateTimeField $r2;
        int $i1;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i1 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getMinimumValue(long)>(l0);

        return $i1;
    }

    public int getMaximumValue(long)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        long l0;
        org.joda.time.chrono.LimitChronology $r1;
        org.joda.time.DateTimeField $r2;
        int $i1;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i1 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getMaximumValue(long)>(l0);

        return $i1;
    }

    public int getMaximumTextLength(java.util.Locale)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        java.util.Locale r1;
        org.joda.time.DateTimeField $r2;
        int $i0;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        r1 := @parameter0: java.util.Locale;

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i0 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getMaximumTextLength(java.util.Locale)>(r1);

        return $i0;
    }

    public int getMaximumShortTextLength(java.util.Locale)
    {
        org.joda.time.chrono.LimitChronology$LimitDateTimeField r0;
        java.util.Locale r1;
        org.joda.time.DateTimeField $r2;
        int $i0;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDateTimeField;

        r1 := @parameter0: java.util.Locale;

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

        $i0 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getMaximumShortTextLength(java.util.Locale)>(r1);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.LimitChronology$LimitDateTimeField: long serialVersionUID> = -2435306746995699312L;

        return;
    }
}
