public final class org.joda.time.chrono.LenientChronology extends org.joda.time.chrono.AssembledChronology
{
    private static final long serialVersionUID;
    private transient org.joda.time.Chronology iWithUTC;

    public static org.joda.time.chrono.LenientChronology getInstance(org.joda.time.Chronology)
    {
        org.joda.time.Chronology r0;
        org.joda.time.chrono.LenientChronology $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.joda.time.Chronology;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply a chronology");

        throw $r2;

     label1:
        $r1 = new org.joda.time.chrono.LenientChronology;

        specialinvoke $r1.<org.joda.time.chrono.LenientChronology: void <init>(org.joda.time.Chronology)>(r0);

        return $r1;
    }

    private void <init>(org.joda.time.Chronology)
    {
        org.joda.time.chrono.LenientChronology r0;
        org.joda.time.Chronology r1;

        r0 := @this: org.joda.time.chrono.LenientChronology;

        r1 := @parameter0: org.joda.time.Chronology;

        specialinvoke r0.<org.joda.time.chrono.AssembledChronology: void <init>(org.joda.time.Chronology,java.lang.Object)>(r1, null);

        return;
    }

    public org.joda.time.Chronology withUTC()
    {
        org.joda.time.chrono.LenientChronology r0, $r6;
        org.joda.time.Chronology $r1, $r4, $r5, $r7;
        org.joda.time.DateTimeZone $r2, $r3;

        r0 := @this: org.joda.time.chrono.LenientChronology;

        $r1 = r0.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology iWithUTC>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeZone getZone()>();

        $r3 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>;

        if $r2 != $r3 goto label1;

        r0.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology iWithUTC> = r0;

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology getBase()>();

        $r5 = virtualinvoke $r4.<org.joda.time.Chronology: org.joda.time.Chronology withUTC()>();

        $r6 = staticinvoke <org.joda.time.chrono.LenientChronology: org.joda.time.chrono.LenientChronology getInstance(org.joda.time.Chronology)>($r5);

        r0.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology iWithUTC> = $r6;

     label2:
        $r7 = r0.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology iWithUTC>;

        return $r7;
    }

    public org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)
    {
        org.joda.time.chrono.LenientChronology r0, $r5;
        org.joda.time.DateTimeZone $r1, $r2, r7;
        org.joda.time.Chronology $r3, $r4, $r6;

        r0 := @this: org.joda.time.chrono.LenientChronology;

        r7 := @parameter0: org.joda.time.DateTimeZone;

        if r7 != null goto label1;

        r7 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>();

     label1:
        $r1 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>;

        if r7 != $r1 goto label2;

        $r6 = virtualinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology withUTC()>();

        return $r6;

     label2:
        $r2 = virtualinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeZone getZone()>();

        if r7 != $r2 goto label3;

        return r0;

     label3:
        $r3 = virtualinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology getBase()>();

        $r4 = virtualinvoke $r3.<org.joda.time.Chronology: org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)>(r7);

        $r5 = staticinvoke <org.joda.time.chrono.LenientChronology: org.joda.time.chrono.LenientChronology getInstance(org.joda.time.Chronology)>($r4);

        return $r5;
    }

    protected void assemble(org.joda.time.chrono.AssembledChronology$Fields)
    {
        org.joda.time.chrono.LenientChronology r0;
        org.joda.time.chrono.AssembledChronology$Fields r1;
        org.joda.time.DateTimeField $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47;

        r0 := @this: org.joda.time.chrono.LenientChronology;

        r1 := @parameter0: org.joda.time.chrono.AssembledChronology$Fields;

        $r2 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year>;

        $r3 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r2);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year> = $r3;

        $r4 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra>;

        $r5 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r4);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra> = $r5;

        $r6 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfCentury>;

        $r7 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r6);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfCentury> = $r7;

        $r8 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra>;

        $r9 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r8);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> = $r9;

        $r10 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField era>;

        $r11 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r10);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField era> = $r11;

        $r12 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfWeek>;

        $r13 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r12);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfWeek> = $r13;

        $r14 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfMonth>;

        $r15 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r14);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfMonth> = $r15;

        $r16 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfYear>;

        $r17 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r16);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfYear> = $r17;

        $r18 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField monthOfYear>;

        $r19 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r18);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField monthOfYear> = $r19;

        $r20 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekOfWeekyear>;

        $r21 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r20);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekOfWeekyear> = $r21;

        $r22 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear>;

        $r23 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r22);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear> = $r23;

        $r24 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyearOfCentury>;

        $r25 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r24);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyearOfCentury> = $r25;

        $r26 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfSecond>;

        $r27 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r26);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfSecond> = $r27;

        $r28 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfDay>;

        $r29 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r28);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfDay> = $r29;

        $r30 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfMinute>;

        $r31 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r30);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfMinute> = $r31;

        $r32 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfDay>;

        $r33 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r32);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfDay> = $r33;

        $r34 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfHour>;

        $r35 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r34);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfHour> = $r35;

        $r36 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfDay>;

        $r37 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r36);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfDay> = $r37;

        $r38 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfDay>;

        $r39 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r38);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfDay> = $r39;

        $r40 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfHalfday>;

        $r41 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r40);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfHalfday> = $r41;

        $r42 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfDay>;

        $r43 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r42);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfDay> = $r43;

        $r44 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfHalfday>;

        $r45 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r44);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfHalfday> = $r45;

        $r46 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField halfdayOfDay>;

        $r47 = specialinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r46);

        r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField halfdayOfDay> = $r47;

        return;
    }

    private final org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)
    {
        org.joda.time.chrono.LenientChronology r0;
        org.joda.time.DateTimeField r1, $r3;
        org.joda.time.Chronology $r2;

        r0 := @this: org.joda.time.chrono.LenientChronology;

        r1 := @parameter0: org.joda.time.DateTimeField;

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology getBase()>();

        $r3 = staticinvoke <org.joda.time.field.LenientDateTimeField: org.joda.time.DateTimeField getInstance(org.joda.time.DateTimeField,org.joda.time.Chronology)>(r1, $r2);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        org.joda.time.chrono.LenientChronology r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.joda.time.Chronology $r3, $r4;

        r0 := @this: org.joda.time.chrono.LenientChronology;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.joda.time.chrono.LenientChronology;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.joda.time.chrono.LenientChronology) r1;

        $r3 = virtualinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology getBase()>();

        $r4 = virtualinvoke r2.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology getBase()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public int hashCode()
    {
        org.joda.time.chrono.LenientChronology r0;
        org.joda.time.Chronology $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.joda.time.chrono.LenientChronology;

        $r1 = virtualinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology getBase()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = $i0 * 7;

        $i2 = 236548278 + $i1;

        return $i2;
    }

    public java.lang.String toString()
    {
        org.joda.time.chrono.LenientChronology r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        org.joda.time.Chronology $r3;
        java.lang.String $r4, $r7;

        r0 := @this: org.joda.time.chrono.LenientChronology;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LenientChronology[");

        $r3 = virtualinvoke r0.<org.joda.time.chrono.LenientChronology: org.joda.time.Chronology getBase()>();

        $r4 = virtualinvoke $r3.<org.joda.time.Chronology: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.LenientChronology: long serialVersionUID> = -3148237568046877177L;

        return;
    }
}
