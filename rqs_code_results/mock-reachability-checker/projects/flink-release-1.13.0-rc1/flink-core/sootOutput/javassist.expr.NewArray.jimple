public class javassist.expr.NewArray extends javassist.expr.Expr
{
    int opcode;

    protected void <init>(int, javassist.bytecode.CodeIterator, javassist.CtClass, javassist.bytecode.MethodInfo, int)
    {
        javassist.expr.NewArray r0;
        int i0, i1;
        javassist.bytecode.CodeIterator r1;
        javassist.CtClass r2;
        javassist.bytecode.MethodInfo r3;

        r0 := @this: javassist.expr.NewArray;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.bytecode.CodeIterator;

        r2 := @parameter2: javassist.CtClass;

        r3 := @parameter3: javassist.bytecode.MethodInfo;

        i1 := @parameter4: int;

        specialinvoke r0.<javassist.expr.Expr: void <init>(int,javassist.bytecode.CodeIterator,javassist.CtClass,javassist.bytecode.MethodInfo)>(i0, r1, r2, r3);

        r0.<javassist.expr.NewArray: int opcode> = i1;

        return;
    }

    public javassist.CtBehavior where()
    {
        javassist.expr.NewArray r0;
        javassist.CtBehavior $r1;

        r0 := @this: javassist.expr.NewArray;

        $r1 = specialinvoke r0.<javassist.expr.Expr: javassist.CtBehavior where()>();

        return $r1;
    }

    public int getLineNumber()
    {
        javassist.expr.NewArray r0;
        int $i0;

        r0 := @this: javassist.expr.NewArray;

        $i0 = specialinvoke r0.<javassist.expr.Expr: int getLineNumber()>();

        return $i0;
    }

    public java.lang.String getFileName()
    {
        javassist.expr.NewArray r0;
        java.lang.String $r1;

        r0 := @this: javassist.expr.NewArray;

        $r1 = specialinvoke r0.<javassist.expr.Expr: java.lang.String getFileName()>();

        return $r1;
    }

    public javassist.CtClass[] mayThrow()
    {
        javassist.expr.NewArray r0;
        javassist.CtClass[] $r1;

        r0 := @this: javassist.expr.NewArray;

        $r1 = specialinvoke r0.<javassist.expr.Expr: javassist.CtClass[] mayThrow()>();

        return $r1;
    }

    public javassist.CtClass getComponentType() throws javassist.NotFoundException
    {
        javassist.expr.NewArray r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        javassist.bytecode.CodeIterator $r1, $r11;
        javassist.bytecode.ConstPool $r2;
        javassist.CtClass $r3, $r5, $r12;
        javassist.ClassPool $r4;
        java.lang.RuntimeException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10, r13, r14;

        r0 := @this: javassist.expr.NewArray;

        $i1 = r0.<javassist.expr.NewArray: int opcode>;

        if $i1 != 188 goto label1;

        $r11 = r0.<javassist.expr.NewArray: javassist.bytecode.CodeIterator iterator>;

        $i7 = r0.<javassist.expr.NewArray: int currentPos>;

        $i8 = $i7 + 1;

        i9 = virtualinvoke $r11.<javassist.bytecode.CodeIterator: int byteAt(int)>($i8);

        $r12 = virtualinvoke r0.<javassist.expr.NewArray: javassist.CtClass getPrimitiveType(int)>(i9);

        return $r12;

     label1:
        $i2 = r0.<javassist.expr.NewArray: int opcode>;

        if $i2 == 189 goto label2;

        $i5 = r0.<javassist.expr.NewArray: int opcode>;

        if $i5 != 197 goto label3;

     label2:
        $r1 = r0.<javassist.expr.NewArray: javassist.bytecode.CodeIterator iterator>;

        $i3 = r0.<javassist.expr.NewArray: int currentPos>;

        $i4 = $i3 + 1;

        i10 = virtualinvoke $r1.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i4);

        $r2 = virtualinvoke r0.<javassist.expr.NewArray: javassist.bytecode.ConstPool getConstPool()>();

        r13 = virtualinvoke $r2.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>(i10);

        i0 = staticinvoke <javassist.bytecode.Descriptor: int arrayDimension(java.lang.String)>(r13);

        r14 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String toArrayComponent(java.lang.String,int)>(r13, i0);

        $r3 = r0.<javassist.expr.NewArray: javassist.CtClass thisClass>;

        $r4 = virtualinvoke $r3.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r5 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass toCtClass(java.lang.String,javassist.ClassPool)>(r14, $r4);

        return $r5;

     label3:
        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad opcode: ");

        $i6 = r0.<javassist.expr.NewArray: int opcode>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    javassist.CtClass getPrimitiveType(int)
    {
        javassist.expr.NewArray r0;
        int i0;
        javassist.CtClass $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.RuntimeException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: javassist.expr.NewArray;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 4: goto label1;
            case 5: goto label2;
            case 6: goto label3;
            case 7: goto label4;
            case 8: goto label5;
            case 9: goto label6;
            case 10: goto label7;
            case 11: goto label8;
            default: goto label9;
        };

     label1:
        $r8 = <javassist.CtClass: javassist.CtClass booleanType>;

        return $r8;

     label2:
        $r7 = <javassist.CtClass: javassist.CtClass charType>;

        return $r7;

     label3:
        $r6 = <javassist.CtClass: javassist.CtClass floatType>;

        return $r6;

     label4:
        $r5 = <javassist.CtClass: javassist.CtClass doubleType>;

        return $r5;

     label5:
        $r4 = <javassist.CtClass: javassist.CtClass byteType>;

        return $r4;

     label6:
        $r3 = <javassist.CtClass: javassist.CtClass shortType>;

        return $r3;

     label7:
        $r2 = <javassist.CtClass: javassist.CtClass intType>;

        return $r2;

     label8:
        $r1 = <javassist.CtClass: javassist.CtClass longType>;

        return $r1;

     label9:
        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad atype: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r9;
    }

    public int getDimension()
    {
        javassist.expr.NewArray r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r1, $r8;
        javassist.bytecode.CodeIterator $r2;
        javassist.bytecode.ConstPool $r3;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        byte $b10;

        r0 := @this: javassist.expr.NewArray;

        $i1 = r0.<javassist.expr.NewArray: int opcode>;

        if $i1 != 188 goto label1;

        return 1;

     label1:
        $i2 = r0.<javassist.expr.NewArray: int opcode>;

        if $i2 == 189 goto label2;

        $i8 = r0.<javassist.expr.NewArray: int opcode>;

        if $i8 != 197 goto label5;

     label2:
        $r2 = r0.<javassist.expr.NewArray: javassist.bytecode.CodeIterator iterator>;

        $i3 = r0.<javassist.expr.NewArray: int currentPos>;

        $i4 = $i3 + 1;

        i0 = virtualinvoke $r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i4);

        $r3 = virtualinvoke r0.<javassist.expr.NewArray: javassist.bytecode.ConstPool getConstPool()>();

        r1 = virtualinvoke $r3.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>(i0);

        $i5 = staticinvoke <javassist.bytecode.Descriptor: int arrayDimension(java.lang.String)>(r1);

        $i6 = r0.<javassist.expr.NewArray: int opcode>;

        if $i6 != 189 goto label3;

        $b10 = 1;

        goto label4;

     label3:
        $b10 = 0;

     label4:
        $i7 = $i5 + $b10;

        return $i7;

     label5:
        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad opcode: ");

        $i9 = r0.<javassist.expr.NewArray: int opcode>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }

    public int getCreatedDimensions()
    {
        javassist.expr.NewArray r0;
        int $i0, $i1, $i2, $i3;
        javassist.bytecode.CodeIterator $r1;

        r0 := @this: javassist.expr.NewArray;

        $i0 = r0.<javassist.expr.NewArray: int opcode>;

        if $i0 != 197 goto label1;

        $r1 = r0.<javassist.expr.NewArray: javassist.bytecode.CodeIterator iterator>;

        $i1 = r0.<javassist.expr.NewArray: int currentPos>;

        $i2 = $i1 + 3;

        $i3 = virtualinvoke $r1.<javassist.bytecode.CodeIterator: int byteAt(int)>($i2);

        return $i3;

     label1:
        return 1;
    }

    public void replace(java.lang.String) throws javassist.CannotCompileException
    {
        javassist.expr.NewArray r0;
        java.lang.String r1;
        javassist.compiler.CompileError $r2;
        javassist.CannotCompileException $r3, $r5, $r7;
        javassist.bytecode.BadBytecode $r4;
        javassist.NotFoundException $r6;

        r0 := @this: javassist.expr.NewArray;

        r1 := @parameter0: java.lang.String;

     label1:
        specialinvoke r0.<javassist.expr.NewArray: void replace2(java.lang.String)>(r1);

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

        $r3 = new javassist.CannotCompileException;

        specialinvoke $r3.<javassist.CannotCompileException: void <init>(javassist.compiler.CompileError)>($r2);

        throw $r3;

     label4:
        $r6 := @caughtexception;

        $r7 = new javassist.CannotCompileException;

        specialinvoke $r7.<javassist.CannotCompileException: void <init>(javassist.NotFoundException)>($r6);

        throw $r7;

     label5:
        $r4 := @caughtexception;

        $r5 = new javassist.CannotCompileException;

        specialinvoke $r5.<javassist.CannotCompileException: void <init>(java.lang.String)>("broken method");

        throw $r5;

     label6:
        return;

        catch javassist.compiler.CompileError from label1 to label2 with label3;
        catch javassist.NotFoundException from label1 to label2 with label4;
        catch javassist.bytecode.BadBytecode from label1 to label2 with label5;
    }

    private void replace2(java.lang.String) throws javassist.compiler.CompileError, javassist.NotFoundException, javassist.bytecode.BadBytecode, javassist.CannotCompileException
    {
        javassist.expr.NewArray r0;
        java.lang.String r1, $r13, r32, r33;
        javassist.bytecode.ConstPool r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, i16, i17, i19, i20;
        javassist.CtClass r3, $r7, $r17, $r27, $r34, $r37;
        javassist.bytecode.CodeAttribute r4;
        javassist.CtClass[] r5;
        javassist.bytecode.Bytecode r6;
        java.lang.RuntimeException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r28, $r29, $r30;
        javassist.bytecode.CodeIterator $r14, $r15, $r18, $r26, $r39;
        boolean $z0, $z3;
        javassist.expr.NewArray$ProceedForArray $r16;
        char $c15;
        javassist.CtPrimitiveType r31;
        byte b18;
        javassist.ClassPool $r35;
        javassist.compiler.Javac $r36;

        r0 := @this: javassist.expr.NewArray;

        r1 := @parameter0: java.lang.String;

        $r7 = r0.<javassist.expr.NewArray: javassist.CtClass thisClass>;

        virtualinvoke $r7.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile()>();

        r2 = virtualinvoke r0.<javassist.expr.NewArray: javassist.bytecode.ConstPool getConstPool()>();

        i0 = r0.<javassist.expr.NewArray: int currentPos>;

        i16 = 1;

        $i2 = r0.<javassist.expr.NewArray: int opcode>;

        if $i2 != 188 goto label1;

        $r26 = r0.<javassist.expr.NewArray: javassist.bytecode.CodeIterator iterator>;

        $i13 = r0.<javassist.expr.NewArray: int currentPos>;

        $i14 = $i13 + 1;

        i17 = virtualinvoke $r26.<javassist.bytecode.CodeIterator: int byteAt(int)>($i14);

        $r27 = virtualinvoke r0.<javassist.expr.NewArray: javassist.CtClass getPrimitiveType(int)>(i17);

        r31 = (javassist.CtPrimitiveType) $r27;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $c15 = virtualinvoke r31.<javassist.CtPrimitiveType: char getDescriptor()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c15);

        r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        b18 = 2;

        goto label6;

     label1:
        $i3 = r0.<javassist.expr.NewArray: int opcode>;

        if $i3 != 189 goto label4;

        $r18 = r0.<javassist.expr.NewArray: javassist.bytecode.CodeIterator iterator>;

        $i12 = i0 + 1;

        i17 = virtualinvoke $r18.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i12);

        r33 = virtualinvoke r2.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>(i17);

        $z3 = virtualinvoke r33.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z3 == 0 goto label2;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        r32 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[L");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r32 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        b18 = 3;

        goto label6;

     label4:
        $i4 = r0.<javassist.expr.NewArray: int opcode>;

        if $i4 != 197 goto label5;

        $r14 = r0.<javassist.expr.NewArray: javassist.bytecode.CodeIterator iterator>;

        $i6 = r0.<javassist.expr.NewArray: int currentPos>;

        $i7 = $i6 + 1;

        i17 = virtualinvoke $r14.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i7);

        r32 = virtualinvoke r2.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>(i17);

        $r15 = r0.<javassist.expr.NewArray: javassist.bytecode.CodeIterator iterator>;

        $i8 = r0.<javassist.expr.NewArray: int currentPos>;

        $i9 = $i8 + 3;

        i16 = virtualinvoke $r15.<javassist.bytecode.CodeIterator: int byteAt(int)>($i9);

        b18 = 4;

        goto label6;

     label5:
        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad opcode: ");

        $i5 = r0.<javassist.expr.NewArray: int opcode>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label6:
        $r34 = r0.<javassist.expr.NewArray: javassist.CtClass thisClass>;

        $r35 = virtualinvoke $r34.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        r3 = staticinvoke <javassist.bytecode.Descriptor: javassist.CtClass toCtClass(java.lang.String,javassist.ClassPool)>(r32, $r35);

        $r36 = new javassist.compiler.Javac;

        $r37 = r0.<javassist.expr.NewArray: javassist.CtClass thisClass>;

        specialinvoke $r36.<javassist.compiler.Javac: void <init>(javassist.CtClass)>($r37);

        $r39 = r0.<javassist.expr.NewArray: javassist.bytecode.CodeIterator iterator>;

        r4 = virtualinvoke $r39.<javassist.bytecode.CodeIterator: javassist.bytecode.CodeAttribute get()>();

        r5 = newarray (javassist.CtClass)[i16];

        i19 = 0;

     label7:
        if i19 >= i16 goto label8;

        $r17 = <javassist.CtClass: javassist.CtClass intType>;

        r5[i19] = $r17;

        i19 = i19 + 1;

        goto label7;

     label8:
        i20 = virtualinvoke r4.<javassist.bytecode.CodeAttribute: int getMaxLocals()>();

        $z0 = virtualinvoke r0.<javassist.expr.NewArray: boolean withinStatic()>();

        virtualinvoke $r36.<javassist.compiler.Javac: int recordParams(java.lang.String,javassist.CtClass[],boolean,int,boolean)>("java.lang.Object", r5, 1, i20, $z0);

        staticinvoke <javassist.expr.NewArray: boolean checkResultValue(javassist.CtClass,java.lang.String)>(r3, r1);

        i1 = virtualinvoke $r36.<javassist.compiler.Javac: int recordReturnType(javassist.CtClass,boolean)>(r3, 1);

        $r16 = new javassist.expr.NewArray$ProceedForArray;

        $i11 = r0.<javassist.expr.NewArray: int opcode>;

        specialinvoke $r16.<javassist.expr.NewArray$ProceedForArray: void <init>(javassist.CtClass,int,int,int)>(r3, $i11, i17, i16);

        virtualinvoke $r36.<javassist.compiler.Javac: void recordProceed(javassist.compiler.ProceedHandler)>($r16);

        r6 = virtualinvoke $r36.<javassist.compiler.Javac: javassist.bytecode.Bytecode getBytecode()>();

        staticinvoke <javassist.expr.NewArray: void storeStack(javassist.CtClass[],boolean,int,javassist.bytecode.Bytecode)>(r5, 1, i20, r6);

        virtualinvoke $r36.<javassist.compiler.Javac: boolean recordLocalVariables(javassist.bytecode.CodeAttribute,int)>(r4, i0);

        virtualinvoke r6.<javassist.bytecode.Bytecode: void addOpcode(int)>(1);

        virtualinvoke r6.<javassist.bytecode.Bytecode: void addAstore(int)>(i1);

        virtualinvoke $r36.<javassist.compiler.Javac: void compileStmnt(java.lang.String)>(r1);

        virtualinvoke r6.<javassist.bytecode.Bytecode: void addAload(int)>(i1);

        virtualinvoke r0.<javassist.expr.NewArray: void replace0(int,javassist.bytecode.Bytecode,int)>(i0, r6, b18);

        return;
    }
}
