public class org.apache.flink.util.StringUtilsTest extends org.apache.flink.util.TestLogger
{

    public void <init>()
    {
        org.apache.flink.util.StringUtilsTest r0;

        r0 := @this: org.apache.flink.util.StringUtilsTest;

        specialinvoke r0.<org.apache.flink.util.TestLogger: void <init>()>();

        return;
    }

    public void testControlCharacters()
    {
        org.apache.flink.util.StringUtilsTest r0;
        java.lang.String r2;

        r0 := @this: org.apache.flink.util.StringUtilsTest;

        r2 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String showControlCharacters(java.lang.String)>("\u0008 \t \n \f \r default");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\\b \\t \\n \\f \\r default", r2);

        return;
    }

    public void testArrayAwareToString()
    {
        org.apache.flink.util.StringUtilsTest r0;
        java.lang.String $r1, $r3, $r5, $r9, $r16;
        java.time.DayOfWeek $r2, $r15;
        int[] $r4;
        byte[][] $r6;
        byte[] $r7, $r8;
        java.lang.Object[] $r10;
        java.lang.Integer[] $r11;
        java.lang.Integer $r12, $r13, $r14;

        r0 := @this: org.apache.flink.util.StringUtilsTest;

        $r1 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String arrayAwareToString(java.lang.Object)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("null", $r1);

        $r2 = <java.time.DayOfWeek: java.time.DayOfWeek MONDAY>;

        $r3 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String arrayAwareToString(java.lang.Object)>($r2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("MONDAY", $r3);

        $r4 = newarray (int)[3];

        $r4[0] = 1;

        $r4[1] = 2;

        $r4[2] = 3;

        $r5 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String arrayAwareToString(java.lang.Object)>($r4);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[1, 2, 3]", $r5);

        $r6 = newarray (byte[])[3];

        $r7 = newarray (byte)[3];

        $r7[0] = 4;

        $r7[1] = 5;

        $r7[2] = 6;

        $r6[0] = $r7;

        $r6[1] = null;

        $r8 = newarray (byte)[0];

        $r6[2] = $r8;

        $r9 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String arrayAwareToString(java.lang.Object)>($r6);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[[4, 5, 6], null, []]", $r9);

        $r10 = newarray (java.lang.Object)[3];

        $r11 = newarray (java.lang.Integer)[3];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r11[0] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r11[1] = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r11[2] = $r14;

        $r10[0] = $r11;

        $r10[1] = null;

        $r15 = <java.time.DayOfWeek: java.time.DayOfWeek MONDAY>;

        $r10[2] = $r15;

        $r16 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String arrayAwareToString(java.lang.Object)>($r10);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[[4, 5, 6], null, MONDAY]", $r16);

        return;
    }

    public void testStringToHexArray()
    {
        org.apache.flink.util.StringUtilsTest r0;
        byte[] r2, $r4;

        r0 := @this: org.apache.flink.util.StringUtilsTest;

        r2 = staticinvoke <org.apache.flink.util.StringUtils: byte[] hexStringToByte(java.lang.String)>("019f314a");

        $r4 = newarray (byte)[4];

        $r4[0] = 1;

        $r4[1] = -97;

        $r4[2] = 49;

        $r4[3] = 74;

        staticinvoke <org.junit.Assert: void assertArrayEquals(byte[],byte[])>($r4, r2);

        return;
    }

    public void testHexArrayToString()
    {
        org.apache.flink.util.StringUtilsTest r0;
        java.lang.String r2;
        byte[] $r3;

        r0 := @this: org.apache.flink.util.StringUtilsTest;

        $r3 = newarray (byte)[4];

        $r3[0] = 1;

        $r3[1] = -97;

        $r3[2] = 49;

        $r3[3] = 74;

        r2 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String byteToHexString(byte[])>($r3);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("019f314a", r2);

        return;
    }

    public void testGenerateAlphanumeric()
    {
        org.apache.flink.util.StringUtilsTest r0;
        java.lang.String r1, $r6;
        java.util.Random $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: org.apache.flink.util.StringUtilsTest;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        r1 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String generateRandomAlphanumericString(java.util.Random,int)>($r2, 256);

        $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("[a-zA-Z0-9]{256}");

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not alphanumeric: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r6);

     label1:
        return;
    }
}
