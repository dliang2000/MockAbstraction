public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserMinimalBase
{
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor;
    protected boolean _closed;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>(r1, null);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor$RootCursor $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.base.ParserMinimalBase: void <init>(int)>(0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r2;

        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor$RootCursor;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor$RootCursor: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor)>(r1, null);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = $r3;

        return;
    }

    public void setCodec(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec> = r1;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec getCodec()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec _objectCodec>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version version()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.PackageVersion: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version VERSION>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_READ_CAPABILITIES>;

        return $r1;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed>;

        if $z0 != 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed> = 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = null;

     label1:
        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor $r1, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r12;
        int[] $r5;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken nextToken()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        if $r3 != null goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed> = 1;

        return null;

     label1:
        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $i0 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label4;
            default: goto label5;
        };

     label2:
        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        $r11 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor startObject()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = $r11;

        goto label5;

     label3:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor startArray()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = $r9;

        goto label5;

     label4:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor getParent()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = $r7;

     label5:
        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        return $r12;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser skipChildren() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3, $r4, $r7, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor $r5, $r6, $r8, $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r2 != $r1 goto label1;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor getParent()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = $r9;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_OBJECT>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r10;

        goto label2;

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if $r4 != $r3 goto label2;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor getParent()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor> = $r6;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken END_ARRAY>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken> = $r7;

     label2:
        return r0;
    }

    public boolean isClosed()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed>;

        return $z0;
    }

    public java.lang.String getCurrentName()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r1, $r2, $r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor r5;
        java.lang.String $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if $r4 != $r3 goto label2;

     label1:
        r5 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor getParent()>();

     label2:
        if r5 != null goto label3;

        $r6 = null;

        goto label4;

     label3:
        $r6 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: java.lang.String getCurrentName()>();

     label4:
        return $r6;
    }

    public void overrideCurrentName(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        java.lang.String r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r3, $r4, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        r1 := @parameter0: java.lang.String;

        r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_OBJECT>;

        if $r3 == $r2 goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken START_ARRAY>;

        if $r5 != $r4 goto label2;

     label1:
        r6 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor getParent()>();

     label2:
        if r6 == null goto label3;

        virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: void overrideCurrentName(java.lang.String)>(r1);

     label3:
        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext getParsingContext()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation getTokenLocation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation NA>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation getCurrentLocation()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonLocation NA>;

        return $r1;
    }

    public java.lang.String getText()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r1, $r6, $r9;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r2, $r4, $r13;
        int[] $r3;
        int $i0, $i1;
        java.lang.String $r5, $r8, $r10, $r12, $r14;
        java.lang.Number $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $i0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 5: goto label2;
            case 6: goto label3;
            case 7: goto label4;
            case 8: goto label4;
            case 9: goto label5;
            default: goto label6;
        };

     label2:
        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: java.lang.String getCurrentName()>();

        return $r12;

     label3:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNode()>();

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: java.lang.String textValue()>();

        return $r10;

     label4:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNode()>();

        $r7 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: java.lang.Number numberValue()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        return $r8;

     label5:
        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNode()>();

        if r1 == null goto label6;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: boolean isBinary()>();

        if $z1 == 0 goto label6;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>();

        return $r5;

     label6:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        if $r13 != null goto label7;

        $r14 = null;

        goto label8;

     label7:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken _currToken>;

        $r14 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken: java.lang.String asString()>();

     label8:
        return $r14;
    }

    public char[] getTextCharacters() throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: java.lang.String getText()>();

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        return $r2;
    }

    public int getTextLength() throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: java.lang.String getText()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public int getTextOffset() throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        return 0;
    }

    public boolean hasTextCharacters()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        return 0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser$NumberType numberType()>();

     label2:
        return $r2;
    }

    public java.math.BigInteger getBigIntegerValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r1;
        java.math.BigInteger $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: java.math.BigInteger bigIntegerValue()>();

        return $r2;
    }

    public java.math.BigDecimal getDecimalValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r1;
        java.math.BigDecimal $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: java.math.BigDecimal decimalValue()>();

        return $r2;
    }

    public double getDoubleValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r1;
        double $d0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();

        $d0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: double doubleValue()>();

        return $d0;
    }

    public float getFloatValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r1;
        double $d0;
        float $f0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();

        $d0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: double doubleValue()>();

        $f0 = (float) $d0;

        return $f0;
    }

    public int getIntValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r2;
        boolean $z0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();

        r1 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode) $r2;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: boolean canConvertToInt()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: void reportOverflowInt()>();

     label1:
        $i0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: int intValue()>();

        return $i0;
    }

    public long getLongValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r2;
        boolean $z0;
        long $l0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();

        r1 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode) $r2;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: boolean canConvertToLong()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: void reportOverflowLong()>();

     label1:
        $l0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: long longValue()>();

        return $l0;
    }

    public java.lang.Number getNumberValue() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r1;
        java.lang.Number $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNumericNode()>();

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: java.lang.Number numberValue()>();

        return $r2;
    }

    public java.lang.Object getEmbeddedObject()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r1;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode $r2;
        byte[] $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.POJONode $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed>;

        if $z0 != 0 goto label2;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNode()>();

        if r1 == null goto label2;

        $z1 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: boolean isPojo()>();

        if $z1 == 0 goto label1;

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.POJONode) r1;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.POJONode: java.lang.Object getPojo()>();

        return $r5;

     label1:
        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: boolean isBinary()>();

        if $z2 == 0 goto label2;

        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode) r1;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.BinaryNode: byte[] binaryValue()>();

        return $r3;

     label2:
        return null;
    }

    public boolean isNaN()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r1;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed>;

        if $z0 != 0 goto label1;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNode()>();

        $z1 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode;

        if $z1 == 0 goto label1;

        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode) r1;

        $z2 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NumericNode: boolean isNaN()>();

        return $z2;

     label1:
        return 0;
    }

    public byte[] getBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r2;
        boolean $z0;
        byte[] $r3, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TextNode $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNode()>();

        if r2 == null goto label2;

        $z0 = r2 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TextNode;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TextNode) r2;

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TextNode: byte[] getBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        return $r5;

     label1:
        $r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: byte[] binaryValue()>();

        return $r3;

     label2:
        return null;
    }

    public int readBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.OutputStream r2;
        byte[] r3;
        int $i0, $i1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.OutputStream;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: byte[] getBinaryValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant)>(r1);

        if r3 == null goto label1;

        $i0 = lengthof r3;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, $i0);

        $i1 = lengthof r3;

        return $i1;

     label1:
        return 0;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNode()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: boolean _closed>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        if $r1 != null goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.NodeCursor: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNode()>();

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNumericNode() throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException $r8;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode currentNode()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: boolean isNumber()>();

        if $z0 != 0 goto label4;

     label1:
        if r1 != null goto label2;

        $r9 = null;

        goto label3;

     label2:
        $r9 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonToken asToken()>();

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current token (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not numeric, cannot use numeric value accessors");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String)>($r7);

        throw $r8;

     label4:
        return r1;
    }

    protected void _handleEOF() throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParseException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TreeTraversingParser: void _throwInternal()>();

        return;
    }
}
