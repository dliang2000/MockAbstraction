public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil extends java.lang.Object
{
    private static final java.util.regex.Pattern V_SEP;

    protected void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version version()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version unknownVersion()>();

        return $r1;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version versionFor(java.lang.Class)
    {
        java.lang.Class r0, r1;
        java.lang.StringBuilder $r3, $r6, $r7, $r17, $r18, $r19;
        java.lang.Package $r4;
        java.lang.String $r5, $r20, r22;
        java.lang.ClassLoader $r8;
        java.lang.Class[] $r9;
        java.lang.reflect.Constructor $r10;
        java.lang.Object[] $r11;
        java.lang.Object $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Versioned $r13;
        java.lang.Exception $r14, $r15;
        java.lang.IllegalArgumentException $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version r21, $r24;

        r0 := @parameter0: java.lang.Class;

        r21 = null;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.Package getPackage()>();

        $r5 = virtualinvoke $r4.<java.lang.Package: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".PackageVersion");

        r22 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r22, 1, $r8);

     label2:
        $r9 = newarray (java.lang.Class)[0];

        $r10 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r9);

        $r11 = newarray (java.lang.Object)[0];

        $r12 = virtualinvoke $r10.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r11);

        $r13 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Versioned) $r12;

        r21 = interfaceinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Versioned: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version version()>();

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get Versioned out of ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

     label7:
        if r21 != null goto label8;

        $r24 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version unknownVersion()>();

        goto label9;

     label8:
        $r24 = r21;

     label9:
        return $r24;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Exception from label1 to label5 with label6;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version packageVersionFor(java.lang.Class)
    {
        java.lang.Class r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version versionFor(java.lang.Class)>(r0);

        return $r1;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version mavenVersionFor(java.lang.ClassLoader, java.lang.String, java.lang.String)
    {
        java.lang.ClassLoader r0;
        java.lang.String r1, r2, r4, r5, r6, $r11, $r16;
        java.io.InputStream r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version r7, $r17;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14, $r15;
        java.util.Properties $r18;
        java.io.IOException $r19;
        java.lang.Throwable $r20;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/maven/");

        $r11 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.", "/");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/pom.properties");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = virtualinvoke r0.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r16);

        if r3 == null goto label7;

     label1:
        $r18 = new java.util.Properties;

        specialinvoke $r18.<java.util.Properties: void <init>()>();

        virtualinvoke $r18.<java.util.Properties: void load(java.io.InputStream)>(r3);

        r4 = virtualinvoke $r18.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("version");

        r5 = virtualinvoke $r18.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("artifactId");

        r6 = virtualinvoke $r18.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("groupId");

        r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version parseVersion(java.lang.String,java.lang.String,java.lang.String)>(r4, r6, r5);

     label2:
        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: void _close(java.io.Closeable)>(r3);

        return r7;

     label3:
        $r19 := @caughtexception;

     label4:
        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: void _close(java.io.Closeable)>(r3);

        goto label7;

     label5:
        $r20 := @caughtexception;

     label6:
        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: void _close(java.io.Closeable)>(r3);

        throw $r20;

     label7:
        $r17 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version unknownVersion()>();

        return $r17;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version parseVersion(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4, $r6, $r7, $r8, r9, $r12;
        java.lang.String[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version $r3, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i9, $i13, $i14;
        java.util.regex.Pattern $r5;

        r9 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        if r9 == null goto label7;

        $r4 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label7;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: java.util.regex.Pattern V_SEP>;

        r2 = virtualinvoke $r5.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>($r4);

        $r11 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version;

        $r6 = r2[0];

        $i5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: int parseVersionPart(java.lang.String)>($r6);

        $i1 = lengthof r2;

        if $i1 <= 1 goto label1;

        $r8 = r2[1];

        $i4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: int parseVersionPart(java.lang.String)>($r8);

        $i9 = $i4;

        goto label2;

     label1:
        $i9 = 0;

     label2:
        $i2 = lengthof r2;

        if $i2 <= 2 goto label3;

        $r7 = r2[2];

        $i3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: int parseVersionPart(java.lang.String)>($r7);

        $i13 = $i3;

        goto label4;

     label3:
        $i13 = 0;

     label4:
        $i14 = lengthof r2;

        if $i14 <= 3 goto label5;

        $r12 = r2[3];

        goto label6;

     label5:
        $r12 = null;

     label6:
        specialinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version: void <init>(int,int,int,java.lang.String,java.lang.String,java.lang.String)>($i5, $i9, $i13, $r12, r0, r1);

        return $r11;

     label7:
        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Version unknownVersion()>();

        return $r3;
    }

    protected static int parseVersionPart(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i2, $i3, i4, i5;
        char c1;

        r0 := @parameter0: java.lang.String;

        i4 = 0;

        i5 = 0;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i5 >= i0 goto label3;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        if c1 > 57 goto label3;

        if c1 >= 48 goto label2;

        goto label3;

     label2:
        $i3 = i4 * 10;

        $i2 = c1 - 48;

        i4 = $i3 + $i2;

        i5 = i5 + 1;

        goto label1;

     label3:
        return i4;
    }

    private static final void _close(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.io.IOException $r2;

        r0 := @parameter0: java.io.Closeable;

     label1:
        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static final void throwInternal()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error: this code path should never get executed");

        throw $r0;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[-_./;:]");

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.VersionUtil: java.util.regex.Pattern V_SEP> = $r0;

        return;
    }
}
