public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache extends java.util.concurrent.ConcurrentHashMap
{
    private static final long serialVersionUID;
    private static final int MAX_ENTRIES;
    public static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache instance;
    private final java.lang.Object lock;

    private void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache;

        specialinvoke r0.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(180, 0.8F, 4);

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache: java.lang.Object lock> = $r1;

        return;
    }

    public java.lang.String intern(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache r0;
        java.lang.String r1, r8, r9;
        java.lang.Object $r4, $r6;
        int $i0, $i1;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache;

        r1 := @parameter0: java.lang.String;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (java.lang.String) $r4;

        if r8 == null goto label1;

        return r8;

     label1:
        $i0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache: int size()>();

        if $i0 < 180 goto label7;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache: java.lang.Object lock>;

        entermonitor $r6;

     label2:
        $i1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache: int size()>();

        if $i1 < 180 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache: void clear()>();

     label3:
        exitmonitor $r6;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r6;

     label6:
        throw $r7;

     label7:
        r9 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r9);

        return r9;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache $r0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache: int MAX_ENTRIES> = 180;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache: long serialVersionUID> = 1L;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.InternCache instance> = $r0;

        return;
    }
}
