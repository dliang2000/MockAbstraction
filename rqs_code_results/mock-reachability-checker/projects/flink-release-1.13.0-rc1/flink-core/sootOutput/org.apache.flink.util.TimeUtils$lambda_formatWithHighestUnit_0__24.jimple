public final class org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24 extends java.lang.Object implements java.util.function.IntPredicate
{
    long cap0;
    java.util.List cap1;

    public static java.util.function.IntPredicate bootstrap$(long, java.util.List)
    {
        long $l0;
        java.util.List $r0;
        org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24 $r1;

        $l0 := @parameter0: long;

        $r0 := @parameter1: java.util.List;

        $r1 = new org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24;

        specialinvoke $r1.<org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24: void <init>(long,java.util.List)>($l0, $r0);

        return $r1;
    }

    public void <init>(long, java.util.List)
    {
        org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24 $r0;
        long $l0;
        java.util.List $r1;

        $r0 := @this: org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.List;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24: long cap0> = $l0;

        $r0.<org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24: java.util.List cap1> = $r1;

        return;
    }

    public boolean test(int)
    {
        org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24 $r0;
        int $i0;
        long $l1;
        java.util.List $r1;
        boolean $z0;

        $r0 := @this: org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24;

        $i0 := @parameter0: int;

        $l1 = $r0.<org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24: long cap0>;

        $r1 = $r0.<org.apache.flink.util.TimeUtils$lambda_formatWithHighestUnit_0__24: java.util.List cap1>;

        $z0 = staticinvoke <org.apache.flink.util.TimeUtils: boolean lambda$formatWithHighestUnit$0(long,java.util.List,int)>($l1, $r1, $i0);

        return $z0;
    }
}
