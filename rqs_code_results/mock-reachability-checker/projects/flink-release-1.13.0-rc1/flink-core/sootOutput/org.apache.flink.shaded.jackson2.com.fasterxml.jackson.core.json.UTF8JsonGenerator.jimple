public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonGeneratorImpl
{
    private static final byte BYTE_u;
    private static final byte BYTE_0;
    private static final byte BYTE_LBRACKET;
    private static final byte BYTE_RBRACKET;
    private static final byte BYTE_LCURLY;
    private static final byte BYTE_RCURLY;
    private static final byte BYTE_BACKSLASH;
    private static final byte BYTE_COMMA;
    private static final byte BYTE_COLON;
    private static final int MAX_BYTES_TO_BUFFER;
    private static final byte[] HEX_CHARS;
    private static final byte[] NULL_BYTES;
    private static final byte[] TRUE_BYTES;
    private static final byte[] FALSE_BYTES;
    protected final java.io.OutputStream _outputStream;
    protected byte _quoteChar;
    protected byte[] _outputBuffer;
    protected int _outputTail;
    protected final int _outputEnd;
    protected final int _outputMaxContiguous;
    protected char[] _charBuffer;
    protected final int _charBufferLength;
    protected byte[] _entityBuffer;
    protected boolean _bufferRecyclable;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, char)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        int i0, $i3, $i4, $i5, $i6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r2;
        java.io.OutputStream r3;
        char c1;
        byte $b2;
        byte[] $r4, $r5;
        char[] $r6, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r8;
        boolean $z0;
        int[] $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r3 := @parameter3: java.io.OutputStream;

        c1 := @parameter4: char;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonGeneratorImpl: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>(r1, i0, r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream> = r3;

        $b2 = (byte) c1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar> = $b2;

        if c1 == 34 goto label1;

        $r10 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes(int)>(c1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes> = $r10;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _bufferRecyclable> = 1;

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] allocWriteEncodingBuffer()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer> = $r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i3 = lengthof $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd> = $i3;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        $i5 = $i4 >> 3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMaxContiguous> = $i5;

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] allocConcatBuffer()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer> = $r6;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer>;

        $i6 = lengthof $r7;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _charBufferLength> = $i6;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r8);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)>(127);

     label2:
        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, char, byte[], int, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        int i0, i2, $i4, $i5, $i6, $i7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r2;
        java.io.OutputStream r3;
        char c1;
        byte[] r4, $r5;
        boolean z0;
        byte $b3;
        char[] $r6, $r7;
        int[] $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r3 := @parameter3: java.io.OutputStream;

        c1 := @parameter4: char;

        r4 := @parameter5: byte[];

        i2 := @parameter6: int;

        z0 := @parameter7: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonGeneratorImpl: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec)>(r1, i0, r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream> = r3;

        $b3 = (byte) c1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar> = $b3;

        if c1 == 34 goto label1;

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes(int)>(c1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes> = $r8;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _bufferRecyclable> = z0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer> = r4;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = lengthof $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd> = $i4;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        $i6 = $i5 >> 3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMaxContiguous> = $i6;

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: char[] allocConcatBuffer()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer> = $r6;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer>;

        $i7 = lengthof $r7;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _charBufferLength> = $i7;

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r2;
        java.io.OutputStream r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r3 := @parameter3: java.io.OutputStream;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream,char)>(r1, i0, r2, r3, 34);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext, int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext r1;
        int i0, i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec r2;
        java.io.OutputStream r3;
        byte[] r4;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec;

        r3 := @parameter3: java.io.OutputStream;

        r4 := @parameter4: byte[];

        i1 := @parameter5: int;

        z0 := @parameter6: boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext,int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream,char,byte[],int,boolean)>(r1, i0, r2, r3, 34, r4, i1, z0);

        return;
    }

    public java.lang.Object getOutputTarget()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.io.OutputStream $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream>;

        return $r1;
    }

    public int getOutputBuffered()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        return $i0;
    }

    public void writeFieldName(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r3;
        byte[] $r4, $r5, $r8;
        byte $b7, $b13;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writePPFieldName(java.lang.String)>(r1);

        return;

     label01:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        i0 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(r1);

        if i0 != 4 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");

     label02:
        if i0 != 1 goto label04;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i18 < $i17 goto label03;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label03:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i20 = $i19 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i20;

        $r8[$i19] = 44;

     label04:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgUnqNames>;

        if $z0 == 0 goto label05;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(java.lang.String,boolean)>(r1, 0);

        return;

     label05:
        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _charBufferLength>;

        if i1 <= $i2 goto label06;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(java.lang.String,boolean)>(r1, 1);

        return;

     label06:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i4 < $i3 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label07:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i6;

        $b7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r4[$i5] = $b7;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMaxContiguous>;

        if i1 > $i8 goto label09;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i16 = $i14 + i1;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i16 <= $i15 goto label08;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label08:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment(java.lang.String,int,int)>(r1, 0, i1);

        goto label10;

     label09:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(java.lang.String,int,int)>(r1, 0, i1);

     label10:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i10 < $i9 goto label11;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label11:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i12;

        $b13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r5[$i11] = $b13;

        return;
    }

    public void writeFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r3;
        java.lang.String $r4;
        byte[] $r5, $r6, $r7, $r9, $r11;
        byte $b6, $b14;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writePPFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>(r1);

        return;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r4 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        i0 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>($r4);

        if i0 != 4 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");

     label2:
        if i0 != 1 goto label4;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i16 < $i15 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label3:
        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i18 = $i17 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i18;

        $r11[$i17] = 44;

     label4:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgUnqNames>;

        if $z0 == 0 goto label5;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeUnq(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>(r1);

        return;

     label5:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label6;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label6:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r5[$i4] = $b6;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        i1 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: int appendQuotedUTF8(byte[],int)>($r6, $i7);

        if i1 >= 0 goto label7;

        $r9 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: byte[] asQuotedUTF8()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeBytes(byte[])>($r9);

        goto label8;

     label7:
        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i9 = $i8 + i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i9;

     label8:
        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i11 < $i10 goto label9;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label9:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i13;

        $b14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r7[$i12] = $b14;

        return;
    }

    private final void _writeUnq(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        int i0, $i1, $i2, $i3;
        byte[] $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        i0 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: int appendQuotedUTF8(byte[],int)>($r2, $i1);

        if i0 >= 0 goto label1;

        $r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: byte[] asQuotedUTF8()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeBytes(byte[])>($r3);

        goto label2;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i2 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i3;

     label2:
        return;
    }

    public final void writeStartArray() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r3, $r6;
        int $i0, $i1, $i2, $i3;
        byte[] $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("start an array");

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r3 == null goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeStartArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label3;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i3;

        $r4[$i2] = 91;

     label3:
        return;
    }

    public final void writeStartArray(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r4, $r7;
        int $i0, $i1, $i2, $i3;
        byte[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("start an array");

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r4 == null goto label1;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeStartArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label3;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i3;

        $r5[$i2] = 91;

     label3:
        return;
    }

    public void writeStartArray(java.lang.Object, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r4, $r7;
        byte[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("start an array");

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r4 == null goto label1;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeStartArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label3;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i4;

        $r5[$i3] = 91;

     label3:
        return;
    }

    public final void writeEndArray() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1, $r5, $r9, $r13, $r14;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r2, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r3;
        java.lang.StringBuilder $r7, $r8, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: boolean inArray()>();

        if $z0 != 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current context not Array but ");

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.String typeDesc()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>($r12);

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label2;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $i4 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int getEntryCount()>();

        interfaceinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeEndArray(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,int)>(r0, $i4);

        goto label4;

     label2:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label3:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i3;

        $r3[$i2] = 93;

     label4:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext clearAndGetParent()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r14;

        return;
    }

    public final void writeStartObject() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r3, $r6;
        int $i0, $i1, $i2, $i3;
        byte[] $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("start an object");

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r2;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r3 == null goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeStartObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label3;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i3;

        $r4[$i2] = 123;

     label3:
        return;
    }

    public void writeStartObject(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext r2, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r4, $r7;
        int $i0, $i1, $i2, $i3;
        byte[] $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("start an object");

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        r2 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext(java.lang.Object)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = r2;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r4 == null goto label1;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeStartObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label3;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i3;

        $r5[$i2] = 123;

     label3:
        return;
    }

    public final void writeEndObject() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r1, $r5, $r9, $r13, $r14;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r2, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r3;
        java.lang.StringBuilder $r7, $r8, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: boolean inObject()>();

        if $z0 != 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current context not Object but ");

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.String typeDesc()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>($r12);

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label2;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $i4 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int getEntryCount()>();

        interfaceinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeEndObject(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,int)>(r0, $i4);

        goto label4;

     label2:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label3:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i3;

        $r3[$i2] = 125;

     label4:
        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r14 = virtualinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext clearAndGetParent()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $r14;

        return;
    }

    protected final void _writePPFieldName(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r3, $r11;
        boolean $z0;
        byte[] $r4, $r7;
        byte $b7, $b13;
        char[] $r5, $r6, $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        i0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(r1);

        if i0 != 4 goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");

     label01:
        if i0 != 1 goto label02;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeObjectEntrySeparator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label03;

     label02:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void beforeObjectEntries(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

     label03:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgUnqNames>;

        if $z0 == 0 goto label04;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(java.lang.String,boolean)>(r1, 0);

        return;

     label04:
        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _charBufferLength>;

        if i1 <= $i2 goto label05;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(java.lang.String,boolean)>(r1, 1);

        return;

     label05:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i4 < $i3 goto label06;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label06:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i6;

        $b7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r4[$i5] = $b7;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i1, $r5, 0);

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMaxContiguous>;

        if i1 > $i8 goto label08;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i16 = $i14 + i1;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i16 <= $i15 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label07:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment(char[],int,int)>($r9, 0, i1);

        goto label09;

     label08:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(char[],int,int)>($r6, 0, i1);

     label09:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i10 < $i9 goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label10:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i12;

        $b13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r7[$i11] = $b13;

        return;
    }

    protected final void _writePPFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i14;
        boolean z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r2;
        java.lang.String $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r4, $r10;
        byte[] $r5, $r7, $r8, $r11;
        byte $b8, $b13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        $r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();

        i0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>($r3);

        if i0 != 4 goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");

     label01:
        if i0 != 1 goto label02;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void writeObjectEntrySeparator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

        goto label03;

     label02:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter: void beforeObjectEntries(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r0);

     label03:
        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgUnqNames>;

        if $z1 != 0 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        z0 = $z2;

        if $z2 == 0 goto label07;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i10 < $i9 goto label06;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label06:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i12;

        $b13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r8[$i11] = $b13;

     label07:
        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        i1 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: int appendQuotedUTF8(byte[],int)>($r11, $i14);

        if i1 >= 0 goto label08;

        $r7 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: byte[] asQuotedUTF8()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeBytes(byte[])>($r7);

        goto label09;

     label08:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i2 + i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i3;

     label09:
        if z0 == 0 goto label11;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i5 < $i4 goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label10:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i7;

        $b8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r5[$i6] = $b8;

     label11:
        return;
    }

    public void writeString(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11;
        byte[] $r2, $r3;
        byte $b7, $b12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");

        if r1 != null goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeNull()>();

        return;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMaxContiguous>;

        if i0 <= $i1 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(java.lang.String,boolean)>(r1, 1);

        return;

     label2:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i4 = $i2 + i0;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i4 < $i3 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label3:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i6;

        $b7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r2[$i5] = $b7;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment(java.lang.String,int,int)>(r1, 0, i0);

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i9 < $i8 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label4:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i11;

        $b12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r3[$i10] = $b12;

        return;
    }

    public void writeString(java.io.Reader, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.io.Reader r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, i18;
        char[] r2;
        byte[] $r3, $r4;
        byte $b7, $b12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");

        if r1 != null goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>("null reader");

        return;

     label01:
        if i0 < 0 goto label02;

        $i17 = i0;

        goto label03;

     label02:
        $i17 = 2147483647;

     label03:
        i18 = $i17;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i4 < $i3 goto label04;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label04:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i6;

        $b7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r3[$i5] = $b7;

     label05:
        if i18 <= 0 goto label08;

        $i13 = lengthof r2;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i18, $i13);

        i2 = virtualinvoke r1.<java.io.Reader: int read(char[],int,int)>(r2, 0, i1);

        if i2 > 0 goto label06;

        goto label08;

     label06:
        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i16 = $i14 + i0;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i16 < $i15 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label07:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(char[],int,int)>(r2, 0, i2);

        i18 = i18 - i2;

        goto label05;

     label08:
        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i9 < $i8 goto label09;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label09:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i11;

        $b12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r4[$i10] = $b12;

        if i18 <= 0 goto label10;

        if i0 < 0 goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>("Didn\'t read enough from reader");

     label10:
        return;
    }

    public void writeString(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15;
        byte[] $r2, $r3;
        byte $b6, $b12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r2[$i4] = $b6;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMaxContiguous>;

        if i1 > $i7 goto label3;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i15 = $i13 + i1;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i15 <= $i14 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment(char[],int,int)>(r1, i0, i1);

        goto label4;

     label3:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(char[],int,int)>(r1, i0, i1);

     label4:
        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i9 < $i8 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label5:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i11;

        $b12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r3[$i10] = $b12;

        return;
    }

    public final void writeString(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        byte[] $r2, $r3, $r4, $r6;
        byte $b5, $b13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i4;

        $b5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r2[$i3] = $b5;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        i0 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: int appendQuotedUTF8(byte[],int)>($r3, $i6);

        if i0 >= 0 goto label2;

        $r6 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: byte[] asQuotedUTF8()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeBytes(byte[])>($r6);

        goto label3;

     label2:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i8 = $i7 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i8;

     label3:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i10 < $i9 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label4:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i12;

        $b13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r4[$i11] = $b13;

        return;
    }

    public void writeRawUTF8String(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        byte[] r1, $r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        byte $b6, $b11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r2[$i4] = $b6;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeBytes(byte[],int,int)>(r1, i0, i1);

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i8 < $i7 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i10;

        $b11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r3[$i9] = $b11;

        return;
    }

    public void writeUTF8String(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        byte[] r1, $r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11;
        byte $b6, $b12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r2[$i4] = $b6;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMaxContiguous>;

        if i1 > $i7 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeUTF8Segment(byte[],int,int)>(r1, i0, i1);

        goto label3;

     label2:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeUTF8Segments(byte[],int,int)>(r1, i0, i1);

     label3:
        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i9 < $i8 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label4:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i11;

        $b12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r3[$i10] = $b12;

        return;
    }

    public void writeRaw(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        int i0, $i1;
        char[] r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer>;

        $i1 = lengthof r2;

        if i0 > $i1 goto label1;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, r2, 0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(char[],int,int)>(r2, 0, i0);

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(java.lang.String,int,int)>(r1, 0, i0);

     label2:
        return;
    }

    public void writeRaw(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        char[] r2;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17;
        char c3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        i15 := @parameter1: int;

        i16 := @parameter2: int;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer>;

        i0 = lengthof r2;

        if i16 > i0 goto label1;

        $i14 = i15 + i16;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i15, $i14, r2, 0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(char[],int,int)>(r2, 0, i16);

        return;

     label1:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        $i7 = $i4 >> 2;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        $i6 = $i5 >> 4;

        $i8 = $i7 + $i6;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i8);

        i2 = i1 * 3;

     label2:
        if i16 <= 0 goto label5;

        i17 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i16);

        $i9 = i15 + i17;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i15, $i9, r2, 0);

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i12 = $i10 + i2;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i12 <= $i11 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label3:
        if i17 <= 1 goto label4;

        $i13 = i17 - 1;

        c3 = r2[$i13];

        if c3 < 55296 goto label4;

        if c3 > 56319 goto label4;

        i17 = i17 + -1;

     label4:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeRawSegment(char[],int,int)>(r2, 0, i17);

        i15 = i15 + i17;

        i16 = i16 - i17;

        goto label2;

     label5:
        return;
    }

    public void writeRaw(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        int i0, $i1, $i2, $i3;
        byte[] $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        i0 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: int appendUnquotedUTF8(byte[],int)>($r2, $i1);

        if i0 >= 0 goto label1;

        $r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: byte[] asUnquotedUTF8()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeBytes(byte[])>($r3);

        goto label2;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i2 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i3;

     label2:
        return;
    }

    public void writeRawValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r1;
        int i0, $i1, $i2, $i3;
        byte[] $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a raw (unencoded) value");

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        i0 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: int appendUnquotedUTF8(byte[],int)>($r2, $i1);

        if i0 >= 0 goto label1;

        $r3 = interfaceinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: byte[] asUnquotedUTF8()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeBytes(byte[])>($r3);

        goto label2;

     label1:
        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i2 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i3;

     label2:
        return;
    }

    public final void writeRaw(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char[] r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i13, $i14, $i18, i19, i20, i21, i22;
        byte[] $r2, $r3, $r4;
        byte $b6, $b12, $b17;
        char $c10, $c11, $c15, $c16, c23, c24;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: char[];

        i19 := @parameter1: int;

        i20 := @parameter2: int;

        $i0 = i20 + i20;

        i21 = $i0 + i20;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i1 + i21;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 <= $i2 goto label02;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i18 >= i21 goto label01;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeSegmentedRaw(char[],int,int)>(r1, i19, i20);

        return;

     label01:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label02:
        i22 = i20 + i19;

     label03:
        if i19 >= i22 goto label10;

     label04:
        c23 = r1[i19];

        if c23 <= 127 goto label05;

        goto label07;

     label05:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = (byte) c23;

        $r2[$i4] = $b6;

        i19 = i19 + 1;

        if i19 < i22 goto label06;

        goto label10;

     label06:
        goto label04;

     label07:
        $i7 = i19;

        i19 = i19 + 1;

        c24 = r1[$i7];

        if c24 >= 2048 goto label08;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i9 = $i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i9;

        $c10 = c24 >> 6;

        $c11 = 192 | $c10;

        $b12 = (byte) $c11;

        $r3[$i8] = $b12;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i14 = $i13 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i14;

        $c15 = c24 & 63;

        $c16 = 128 | $c15;

        $b17 = (byte) $c16;

        $r4[$i13] = $b17;

        goto label09;

     label08:
        i19 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputRawMultiByteChar(int,char[],int,int)>(c24, r1, i19, i22);

     label09:
        goto label03;

     label10:
        return;
    }

    public void writeRaw(char) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char c0, $c7, $c8, $c12, $c13;
        byte[] r1;
        int $i1, $i2, $i3, $i5, $i6, $i10, $i11, $i15, $i16;
        byte $b9, $b14, $b17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        c0 := @parameter0: char;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i1 + 3;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        if c0 > 127 goto label2;

        $i15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i16 = $i15 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i16;

        $b17 = (byte) c0;

        r1[$i15] = $b17;

        goto label4;

     label2:
        if c0 >= 2048 goto label3;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i6;

        $c7 = c0 >> 6;

        $c8 = 192 | $c7;

        $b9 = (byte) $c8;

        r1[$i5] = $b9;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i11;

        $c12 = c0 & 63;

        $c13 = 128 | $c12;

        $b14 = (byte) $c13;

        r1[$i10] = $b14;

        goto label4;

     label3:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputRawMultiByteChar(int,char[],int,int)>(c0, null, 0, 0);

     label4:
        return;
    }

    private final void _writeSegmentedRaw(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i16, $i17, i21;
        byte[] r2;
        byte $b6, $b15, $b20;
        char $c13, $c14, $c18, $c19, c22, c23;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: char[];

        i21 := @parameter1: int;

        i0 := @parameter2: int;

        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        i2 = i21 + i0;

     label01:
        if i21 >= i2 goto label10;

     label02:
        c22 = r1[i21];

        if c22 < 128 goto label03;

        goto label06;

     label03:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        if $i3 < i1 goto label04;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label04:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = (byte) c22;

        r2[$i4] = $b6;

        i21 = i21 + 1;

        if i21 < i2 goto label05;

        goto label10;

     label05:
        goto label02;

     label06:
        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i9 = $i7 + 3;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i9 < $i8 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label07:
        $i10 = i21;

        i21 = i21 + 1;

        c23 = r1[$i10];

        if c23 >= 2048 goto label08;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i12;

        $c13 = c23 >> 6;

        $c14 = 192 | $c13;

        $b15 = (byte) $c14;

        r2[$i11] = $b15;

        $i16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i17 = $i16 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i17;

        $c18 = c23 & 63;

        $c19 = 128 | $c18;

        $b20 = (byte) $c19;

        r2[$i16] = $b20;

        goto label09;

     label08:
        i21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputRawMultiByteChar(int,char[],int,int)>(c23, r1, i21, i2);

     label09:
        goto label01;

     label10:
        return;
    }

    private void _writeRawSegment(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char[] r1;
        int i0, $i1, $i2, $i4, $i5, $i6, $i10, $i11, i15;
        byte[] $r2, $r3, $r4;
        byte $b3, $b9, $b14;
        char $c7, $c8, $c12, $c13, c16, c17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: char[];

        i15 := @parameter1: int;

        i0 := @parameter2: int;

     label1:
        if i15 >= i0 goto label8;

     label2:
        c16 = r1[i15];

        if c16 <= 127 goto label3;

        goto label5;

     label3:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i2;

        $b3 = (byte) c16;

        $r2[$i1] = $b3;

        i15 = i15 + 1;

        if i15 < i0 goto label4;

        goto label8;

     label4:
        goto label2;

     label5:
        $i4 = i15;

        i15 = i15 + 1;

        c17 = r1[$i4];

        if c17 >= 2048 goto label6;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i6 = $i5 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i6;

        $c7 = c17 >> 6;

        $c8 = 192 | $c7;

        $b9 = (byte) $c8;

        $r3[$i5] = $b9;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i11;

        $c12 = c17 & 63;

        $c13 = 128 | $c12;

        $b14 = (byte) $c13;

        $r4[$i10] = $b14;

        goto label7;

     label6:
        i15 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputRawMultiByteChar(int,char[],int,int)>(c17, r1, i15, i0);

     label7:
        goto label1;

     label8:
        return;
    }

    public void writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        byte[] r2, $r3, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11;
        byte $b6, $b12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a binary value");

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r3[$i4] = $b6;

        $i7 = i0 + i1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,byte[],int,int)>(r1, r2, i0, $i7);

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i9 < $i8 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i11 = $i10 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i11;

        $b12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r4[$i10] = $b12;

        return;
    }

    public int writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.InputStream r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, i12;
        byte[] r3, $r5, $r7;
        byte $b6, $b11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r6, $r18, $r19;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r15;
        java.lang.Throwable $r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.InputStream;

        i0 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a binary value");

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r5[$i4] = $b6;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        r3 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: byte[] allocBase64Buffer()>();

     label2:
        if i0 >= 0 goto label3;

        i12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[])>(r1, r2, r3);

        goto label5;

     label3:
        i1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int)>(r1, r2, r3, i0);

        if i1 <= 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too few bytes available: missing ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes (out of ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>($r15);

     label4:
        i12 = i0;

     label5:
        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseBase64Buffer(byte[])>(r3);

        goto label8;

     label6:
        $r17 := @caughtexception;

     label7:
        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseBase64Buffer(byte[])>(r3);

        throw $r17;

     label8:
        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i8 < $i7 goto label9;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label9:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i10;

        $b11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r7[$i9] = $b11;

        return i12;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void writeNumber(short) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        short s0;
        int $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        byte[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        s0 := @parameter0: short;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i1 + 6;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeQuotedShort(short)>(s0);

        return;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,byte[],int)>(s0, $r1, $i4);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        return;
    }

    private final void _writeQuotedShort(short) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        short s0;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        byte[] $r1, $r2, $r3;
        byte $b6, $b11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        s0 := @parameter0: short;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i1 + 8;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r1[$i4] = $b6;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,byte[],int)>(s0, $r2, $i7);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i8;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i10;

        $b11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r3[$i9] = $b11;

        return;
    }

    public void writeNumber(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        byte[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i1 + 11;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeQuotedInt(int)>(i0);

        return;

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,byte[],int)>(i0, $r1, $i4);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        return;
    }

    private final void _writeQuotedInt(int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        byte[] $r1, $r2, $r3;
        byte $b6, $b11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i1 + 13;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r1[$i4] = $b6;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,byte[],int)>(i0, $r2, $i7);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i8;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i10;

        $b11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r3[$i9] = $b11;

        return;
    }

    public void writeNumber(long) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        long l0;
        boolean $z0;
        int $i1, $i2, $i3, $i4, $i5;
        byte[] $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        l0 := @parameter0: long;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeQuotedLong(long)>(l0);

        return;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i1 + 21;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputLong(long,byte[],int)>(l0, $r1, $i4);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        return;
    }

    private final void _writeQuotedLong(long) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        long l0;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        byte[] $r1, $r2, $r3;
        byte $b6, $b11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        l0 := @parameter0: long;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i1 + 23;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r1[$i4] = $b6;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: int outputLong(long,byte[],int)>(l0, $r2, $i7);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i8;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i10;

        $b11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r3[$i9] = $b11;

        return;
    }

    public void writeNumber(java.math.BigInteger) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.math.BigInteger r1;
        boolean $z0;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.math.BigInteger;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        if r1 != null goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeNull()>();

        goto label3;

     label1:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r1.<java.math.BigInteger: java.lang.String toString()>();

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeQuotedRaw(java.lang.String)>($r3);

        goto label3;

     label2:
        $r2 = virtualinvoke r1.<java.math.BigInteger: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(java.lang.String)>($r2);

     label3:
        return;
    }

    public void writeNumber(double) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        double d0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r2;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        d0 := @parameter0: double;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: boolean notFinite(double)>(d0);

        if $z1 == 0 goto label2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _features>;

        $z2 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>($i0);

        if $z2 == 0 goto label2;

     label1:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeString(java.lang.String)>($r1);

        return;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(java.lang.String)>($r2);

        return;
    }

    public void writeNumber(float) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        float f0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r2;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        f0 := @parameter0: float;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.NumberOutput: boolean notFinite(float)>(f0);

        if $z1 == 0 goto label2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _features>;

        $z2 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>($i0);

        if $z2 == 0 goto label2;

     label1:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeString(java.lang.String)>($r1);

        return;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(java.lang.String)>($r2);

        return;
    }

    public void writeNumber(java.math.BigDecimal) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.math.BigDecimal r1;
        boolean $z0;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.math.BigDecimal;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        if r1 != null goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeNull()>();

        goto label3;

     label1:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.lang.String _asString(java.math.BigDecimal)>(r1);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeQuotedRaw(java.lang.String)>($r3);

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.lang.String _asString(java.math.BigDecimal)>(r1);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(java.lang.String)>($r2);

     label3:
        return;
    }

    public void writeNumber(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        if r1 != null goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeNull()>();

        goto label3;

     label1:
        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeQuotedRaw(java.lang.String)>(r1);

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(java.lang.String)>(r1);

     label3:
        return;
    }

    public void writeNumber(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char[] r1;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeQuotedRaw(char[],int,int)>(r1, i0, i1);

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(char[],int,int)>(r1, i0, i1);

     label2:
        return;
    }

    private final void _writeQuotedRaw(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        byte[] $r2, $r3;
        byte $b4, $b9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i3;

        $b4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r2[$i2] = $b4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(java.lang.String)>(r1);

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i6 < $i5 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i8 = $i7 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i8;

        $b9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r3[$i7] = $b9;

        return;
    }

    private void _writeQuotedRaw(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        byte[] $r2, $r3;
        byte $b6, $b11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $b6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r2[$i4] = $b6;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(char[],int,int)>(r1, i0, i1);

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i8 < $i7 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i10;

        $b11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r3[$i9] = $b11;

        return;
    }

    public void writeBoolean(boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        byte[] $r2, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a boolean value");

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i1 + 5;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        if z0 == 0 goto label2;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] TRUE_BYTES>;

        goto label3;

     label2:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] FALSE_BYTES>;

     label3:
        i0 = lengthof $r4;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r2, $i4, i0);

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i6 = $i5 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i6;

        return;
    }

    public void writeNull() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>("write a null");

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeNull()>();

        return;
    }

    protected final void _verifyValueWrite(java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        byte[] r2, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r5, $r6;
        byte b6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;

        i0 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;

        if $r4 == null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyPrettyValueWrite(java.lang.String,int)>(r1, i0);

        return;

     label1:
        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label2;
            case 5: goto label7;
            default: goto label2;
        };

     label2:
        return;

     label3:
        b6 = 44;

        goto label8;

     label4:
        b6 = 58;

        goto label8;

     label5:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;

        if $r5 == null goto label6;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;

        r2 = interfaceinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: byte[] asUnquotedUTF8()>();

        $i1 = lengthof r2;

        if $i1 <= 0 goto label6;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeBytes(byte[])>(r2);

     label6:
        return;

     label7:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportCantWriteValueExpectName(java.lang.String)>(r1);

        return;

     label8:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 < $i2 goto label9;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label9:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        $r7[$i4] = b6;

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.io.OutputStream $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream>;

        if $r1 == null goto label1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream>;

        virtualinvoke $r3.<java.io.OutputStream: void flush()>();

     label1:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext r1;
        byte[] $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.OutputStream $r4, $r7, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature $r5, $r6, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.JsonGeneratorImpl: void close()>();

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        if $r2 == null goto label4;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT>;

        $z3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r8);

        if $z3 == 0 goto label4;

     label1:
        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext getOutputContext()>();

        $z4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: boolean inArray()>();

        if $z4 == 0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeEndArray()>();

        goto label3;

     label2:
        $z5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonStreamContext: boolean inObject()>();

        if $z5 == 0 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeEndObject()>();

     label3:
        goto label1;

     label4:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = 0;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream>;

        if $r9 == null goto label7;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        $z0 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: boolean isResourceManaged()>();

        if $z0 != 0 goto label5;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET>;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r5);

        if $z1 == 0 goto label6;

     label5:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream>;

        virtualinvoke $r4.<java.io.OutputStream: void close()>();

        goto label7;

     label6:
        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>;

        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator$Feature)>($r6);

        if $z2 == 0 goto label7;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream>;

        virtualinvoke $r7.<java.io.OutputStream: void flush()>();

     label7:
        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _releaseBuffers()>();

        return;
    }

    protected void _releaseBuffers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        byte[] r1;
        char[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        if r1 == null goto label1;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: boolean _bufferRecyclable>;

        if $z0 == 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer> = null;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseWriteEncodingBuffer(byte[])>(r1);

     label1:
        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer>;

        if r2 == null goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: char[] _charBuffer> = null;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext _ioContext>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.IOContext: void releaseConcatBuffer(char[])>(r2);

     label2:
        return;
    }

    private final void _writeBytes(byte[]) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        byte[] r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.io.OutputStream $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: byte[];

        i0 = lengthof r1;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = $i1 + i0;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i3 <= $i2 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

        if i0 <= 512 goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, i0);

        return;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r2, $i4, i0);

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i6 = $i5 + i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i6;

        return;
    }

    private final void _writeBytes(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        byte[] r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.io.OutputStream $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i4 = $i2 + i1;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i4 <= $i3 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

        if i1 <= 512 goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r2, $i5, i1);

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i7 = $i6 + i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i7;

        return;
    }

    private final void _writeStringSegments(java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i15, i16;
        byte[] $r2, $r4;
        byte $b5, $b14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i11 < $i10 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i13;

        $b14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r4[$i12] = $b14;

     label2:
        i15 = virtualinvoke r1.<java.lang.String: int length()>();

        i16 = 0;

     label3:
        if i15 <= 0 goto label5;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMaxContiguous>;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i6, i15);

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i9 = $i7 + i0;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i9 <= $i8 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label4:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment(java.lang.String,int,int)>(r1, i16, i0);

        i16 = i16 + i0;

        i15 = i15 - i0;

        goto label3;

     label5:
        if z0 == 0 goto label7;

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label6;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label6:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i4;

        $b5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte _quoteChar>;

        $r2[$i3] = $b5;

     label7:
        return;
    }

    private final void _writeStringSegments(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char[] r1;
        int i0, $i1, $i2, $i3, $i4, i5, i6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: char[];

        i5 := @parameter1: int;

        i6 := @parameter2: int;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMaxContiguous>;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i6);

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i4 = $i2 + i0;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i4 <= $i3 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment(char[],int,int)>(r1, i5, i0);

        i5 = i5 + i0;

        i6 = i6 - i0;

        if i6 > 0 goto label1;

        return;
    }

    private final void _writeStringSegments(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, i5, i6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        i5 := @parameter1: int;

        i6 := @parameter2: int;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMaxContiguous>;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i6);

        $i2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i4 = $i2 + i0;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i4 <= $i3 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment(java.lang.String,int,int)>(r1, i5, i0);

        i5 = i5 + i0;

        i6 = i6 - i0;

        if i6 > 0 goto label1;

        return;
    }

    private final void _writeStringSegment(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char[] r1;
        byte[] r2;
        int[] r3;
        char c0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r4;
        int $i1, $i2, $i3, i5, i6, i7, i8;
        byte $b4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: char[];

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        i7 = i6 + i5;

        i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes>;

     label1:
        if i5 >= i7 goto label3;

        c0 = r1[i5];

        if c0 > 127 goto label3;

        $i2 = r3[c0];

        if $i2 == 0 goto label2;

        goto label3;

     label2:
        $i3 = i8;

        i8 = i8 + 1;

        $b4 = (byte) c0;

        r2[$i3] = $b4;

        i5 = i5 + 1;

        goto label1;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i8;

        if i5 >= i7 goto label6;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        if $r4 == null goto label4;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeCustomStringSegment2(char[],int,int)>(r1, i5, i7);

        goto label6;

     label4:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _maximumNonEscapedChar>;

        if $i1 != 0 goto label5;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment2(char[],int,int)>(r1, i5, i7);

        goto label6;

     label5:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegmentASCII2(char[],int,int)>(r1, i5, i7);

     label6:
        return;
    }

    private final void _writeStringSegment(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        byte[] r2;
        int[] r3;
        char c0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes $r4;
        int $i1, $i2, $i3, i5, i6, i7, i8;
        byte $b4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        i7 = i6 + i5;

        i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes>;

     label1:
        if i5 >= i7 goto label3;

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        if c0 > 127 goto label3;

        $i2 = r3[c0];

        if $i2 == 0 goto label2;

        goto label3;

     label2:
        $i3 = i8;

        i8 = i8 + 1;

        $b4 = (byte) c0;

        r2[$i3] = $b4;

        i5 = i5 + 1;

        goto label1;

     label3:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i8;

        if i5 >= i7 goto label6;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

        if $r4 == null goto label4;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeCustomStringSegment2(java.lang.String,int,int)>(r1, i5, i7);

        goto label6;

     label4:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _maximumNonEscapedChar>;

        if $i1 != 0 goto label5;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment2(java.lang.String,int,int)>(r1, i5, i7);

        goto label6;

     label5:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegmentASCII2(java.lang.String,int,int)>(r1, i5, i7);

     label6:
        return;
    }

    private final void _writeStringSegment2(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char[] r1;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i15, $i17, i19, i20, i21, i22;
        byte[] r2;
        int[] r3;
        char c1, $c9, $c10, $c12, $c13;
        byte $b11, $b14, $b16, $b18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: char[];

        i19 := @parameter1: int;

        i0 := @parameter2: int;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = i0 - i19;

        $i4 = 6 * $i3;

        $i7 = $i5 + $i4;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i7 <= $i6 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes>;

     label2:
        if i19 >= i0 goto label8;

        $i8 = i19;

        i19 = i19 + 1;

        c1 = r1[$i8];

        if c1 > 127 goto label5;

        $i15 = r3[c1];

        if $i15 != 0 goto label3;

        $i17 = i20;

        i20 = i20 + 1;

        $b18 = (byte) c1;

        r2[$i17] = $b18;

        goto label2;

     label3:
        i2 = r3[c1];

        if i2 <= 0 goto label4;

        i21 = i20 + 1;

        r2[i20] = 92;

        i20 = i21 + 1;

        $b16 = (byte) i2;

        r2[i21] = $b16;

        goto label2;

     label4:
        i20 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>(c1, i20);

        goto label2;

     label5:
        if c1 > 2047 goto label6;

        i22 = i20 + 1;

        $c9 = c1 >> 6;

        $c10 = 192 | $c9;

        $b11 = (byte) $c10;

        r2[i20] = $b11;

        i20 = i22 + 1;

        $c12 = c1 & 63;

        $c13 = 128 | $c12;

        $b14 = (byte) $c13;

        r2[i22] = $b14;

        goto label7;

     label6:
        i20 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMultiByteChar(int,int)>(c1, i20);

     label7:
        goto label2;

     label8:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i20;

        return;
    }

    private final void _writeStringSegment2(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i15, $i17, i19, i20, i21, i22;
        byte[] r2;
        int[] r3;
        char c1, $c9, $c10, $c12, $c13;
        byte $b11, $b14, $b16, $b18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        i19 := @parameter1: int;

        i0 := @parameter2: int;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = i0 - i19;

        $i4 = 6 * $i3;

        $i7 = $i5 + $i4;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i7 <= $i6 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes>;

     label2:
        if i19 >= i0 goto label8;

        $i8 = i19;

        i19 = i19 + 1;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i8);

        if c1 > 127 goto label5;

        $i15 = r3[c1];

        if $i15 != 0 goto label3;

        $i17 = i20;

        i20 = i20 + 1;

        $b18 = (byte) c1;

        r2[$i17] = $b18;

        goto label2;

     label3:
        i2 = r3[c1];

        if i2 <= 0 goto label4;

        i21 = i20 + 1;

        r2[i20] = 92;

        i20 = i21 + 1;

        $b16 = (byte) i2;

        r2[i21] = $b16;

        goto label2;

     label4:
        i20 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>(c1, i20);

        goto label2;

     label5:
        if c1 > 2047 goto label6;

        i22 = i20 + 1;

        $c9 = c1 >> 6;

        $c10 = 192 | $c9;

        $b11 = (byte) $c10;

        r2[i20] = $b11;

        i20 = i22 + 1;

        $c12 = c1 & 63;

        $c13 = 128 | $c12;

        $b14 = (byte) $c13;

        r2[i22] = $b14;

        goto label7;

     label6:
        i20 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMultiByteChar(int,int)>(c1, i20);

     label7:
        goto label2;

     label8:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i20;

        return;
    }

    private final void _writeStringSegmentASCII2(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char[] r1;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i16, $i18, i20, i21, i22, i23;
        byte[] r2;
        int[] r3;
        char c2, $c10, $c11, $c13, $c14;
        byte $b12, $b15, $b17, $b19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: char[];

        i20 := @parameter1: int;

        i0 := @parameter2: int;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i4 = i0 - i20;

        $i5 = 6 * $i4;

        $i8 = $i6 + $i5;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i8 <= $i7 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes>;

        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _maximumNonEscapedChar>;

     label2:
        if i20 >= i0 goto label9;

        $i9 = i20;

        i20 = i20 + 1;

        c2 = r1[$i9];

        if c2 > 127 goto label5;

        $i16 = r3[c2];

        if $i16 != 0 goto label3;

        $i18 = i21;

        i21 = i21 + 1;

        $b19 = (byte) c2;

        r2[$i18] = $b19;

        goto label2;

     label3:
        i3 = r3[c2];

        if i3 <= 0 goto label4;

        i22 = i21 + 1;

        r2[i21] = 92;

        i21 = i22 + 1;

        $b17 = (byte) i3;

        r2[i22] = $b17;

        goto label2;

     label4:
        i21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>(c2, i21);

        goto label2;

     label5:
        if c2 <= i1 goto label6;

        i21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>(c2, i21);

        goto label2;

     label6:
        if c2 > 2047 goto label7;

        i23 = i21 + 1;

        $c10 = c2 >> 6;

        $c11 = 192 | $c10;

        $b12 = (byte) $c11;

        r2[i21] = $b12;

        i21 = i23 + 1;

        $c13 = c2 & 63;

        $c14 = 128 | $c13;

        $b15 = (byte) $c14;

        r2[i23] = $b15;

        goto label8;

     label7:
        i21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMultiByteChar(int,int)>(c2, i21);

     label8:
        goto label2;

     label9:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i21;

        return;
    }

    private final void _writeStringSegmentASCII2(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i16, $i18, i20, i21, i22, i23;
        byte[] r2;
        int[] r3;
        char c2, $c10, $c11, $c13, $c14;
        byte $b12, $b15, $b17, $b19;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        i20 := @parameter1: int;

        i0 := @parameter2: int;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i4 = i0 - i20;

        $i5 = 6 * $i4;

        $i8 = $i6 + $i5;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i8 <= $i7 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes>;

        i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _maximumNonEscapedChar>;

     label2:
        if i20 >= i0 goto label9;

        $i9 = i20;

        i20 = i20 + 1;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);

        if c2 > 127 goto label5;

        $i16 = r3[c2];

        if $i16 != 0 goto label3;

        $i18 = i21;

        i21 = i21 + 1;

        $b19 = (byte) c2;

        r2[$i18] = $b19;

        goto label2;

     label3:
        i3 = r3[c2];

        if i3 <= 0 goto label4;

        i22 = i21 + 1;

        r2[i21] = 92;

        i21 = i22 + 1;

        $b17 = (byte) i3;

        r2[i22] = $b17;

        goto label2;

     label4:
        i21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>(c2, i21);

        goto label2;

     label5:
        if c2 <= i1 goto label6;

        i21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>(c2, i21);

        goto label2;

     label6:
        if c2 > 2047 goto label7;

        i23 = i21 + 1;

        $c10 = c2 >> 6;

        $c11 = 192 | $c10;

        $b12 = (byte) $c11;

        r2[i21] = $b12;

        i21 = i23 + 1;

        $c13 = c2 & 63;

        $c14 = 128 | $c13;

        $b15 = (byte) $c14;

        r2[i23] = $b15;

        goto label8;

     label7:
        i21 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMultiByteChar(int,int)>(c2, i21);

     label8:
        goto label2;

     label9:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i21;

        return;
    }

    private final void _writeCustomStringSegment2(char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        char[] r1;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i16, $i17, $i18, $i20, i22, i23, $i24, i25, i26, i27;
        byte[] r2;
        int[] r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes r4;
        char c2, $c10, $c11, $c13, $c14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r5, r12;
        byte $b12, $b15, $b19, $b21;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.String $r8, $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: char[];

        i22 := @parameter1: int;

        i0 := @parameter2: int;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = i0 - i22;

        $i4 = 6 * $i3;

        $i7 = $i5 + $i4;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i7 <= $i6 goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label01:
        i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _maximumNonEscapedChar>;

        if $i8 > 0 goto label02;

        $i24 = 65535;

        goto label03;

     label02:
        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _maximumNonEscapedChar>;

     label03:
        i1 = $i24;

        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

     label04:
        if i22 >= i0 goto label14;

        $i9 = i22;

        i22 = i22 + 1;

        c2 = r1[$i9];

        if c2 > 127 goto label09;

        $i17 = r3[c2];

        if $i17 != 0 goto label05;

        $i20 = i23;

        i23 = i23 + 1;

        $b21 = (byte) c2;

        r2[$i20] = $b21;

        goto label04;

     label05:
        i25 = r3[c2];

        if i25 <= 0 goto label06;

        i26 = i23 + 1;

        r2[i23] = 92;

        i23 = i26 + 1;

        $b19 = (byte) i25;

        r2[i26] = $b19;

        goto label04;

     label06:
        if i25 != -2 goto label08;

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(c2);

        if r5 != null goto label07;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid custom escape definitions; custom escape not found for character code 0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", although was supposed to have one");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>($r11);

     label07:
        $i18 = i0 - i22;

        i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeCustomEscape(byte[],int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString,int)>(r2, i23, r5, $i18);

        goto label04;

     label08:
        i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>(c2, i23);

        goto label04;

     label09:
        if c2 <= i1 goto label10;

        i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>(c2, i23);

        goto label04;

     label10:
        r12 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(c2);

        if r12 == null goto label11;

        $i16 = i0 - i22;

        i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeCustomEscape(byte[],int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString,int)>(r2, i23, r12, $i16);

        goto label04;

     label11:
        if c2 > 2047 goto label12;

        i27 = i23 + 1;

        $c10 = c2 >> 6;

        $c11 = 192 | $c10;

        $b12 = (byte) $c11;

        r2[i23] = $b12;

        i23 = i27 + 1;

        $c13 = c2 & 63;

        $c14 = 128 | $c13;

        $b15 = (byte) $c14;

        r2[i27] = $b15;

        goto label13;

     label12:
        i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMultiByteChar(int,int)>(c2, i23);

     label13:
        goto label04;

     label14:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i23;

        return;
    }

    private final void _writeCustomStringSegment2(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.lang.String r1, $r8, $r11;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i16, $i17, $i18, $i20, i22, i23, $i24, i25, i26, i27;
        byte[] r2;
        int[] r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes r4;
        char c2, $c10, $c11, $c13, $c14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r5, r12;
        byte $b12, $b15, $b19, $b21;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.lang.String;

        i22 := @parameter1: int;

        i0 := @parameter2: int;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = i0 - i22;

        $i4 = 6 * $i3;

        $i7 = $i5 + $i4;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i7 <= $i6 goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label01:
        i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes>;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _maximumNonEscapedChar>;

        if $i8 > 0 goto label02;

        $i24 = 65535;

        goto label03;

     label02:
        $i24 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _maximumNonEscapedChar>;

     label03:
        i1 = $i24;

        r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;

     label04:
        if i22 >= i0 goto label14;

        $i9 = i22;

        i22 = i22 + 1;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);

        if c2 > 127 goto label09;

        $i17 = r3[c2];

        if $i17 != 0 goto label05;

        $i20 = i23;

        i23 = i23 + 1;

        $b21 = (byte) c2;

        r2[$i20] = $b21;

        goto label04;

     label05:
        i25 = r3[c2];

        if i25 <= 0 goto label06;

        i26 = i23 + 1;

        r2[i23] = 92;

        i23 = i26 + 1;

        $b19 = (byte) i25;

        r2[i26] = $b19;

        goto label04;

     label06:
        if i25 != -2 goto label08;

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(c2);

        if r5 != null goto label07;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid custom escape definitions; custom escape not found for character code 0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", although was supposed to have one");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>($r11);

     label07:
        $i18 = i0 - i22;

        i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeCustomEscape(byte[],int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString,int)>(r2, i23, r5, $i18);

        goto label04;

     label08:
        i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>(c2, i23);

        goto label04;

     label09:
        if c2 <= i1 goto label10;

        i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>(c2, i23);

        goto label04;

     label10:
        r12 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharacterEscapes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(c2);

        if r12 == null goto label11;

        $i16 = i0 - i22;

        i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeCustomEscape(byte[],int,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString,int)>(r2, i23, r12, $i16);

        goto label04;

     label11:
        if c2 > 2047 goto label12;

        i27 = i23 + 1;

        $c10 = c2 >> 6;

        $c11 = 192 | $c10;

        $b12 = (byte) $c11;

        r2[i23] = $b12;

        i23 = i27 + 1;

        $c13 = c2 & 63;

        $c14 = 128 | $c13;

        $b15 = (byte) $c14;

        r2[i27] = $b15;

        goto label13;

     label12:
        i23 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMultiByteChar(int,int)>(c2, i23);

     label13:
        goto label04;

     label14:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i23;

        return;
    }

    private final int _writeCustomEscape(byte[], int, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        byte[] r1, r3;
        int i0, i1, i2, $i3, $i4, $i5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString;

        i1 := @parameter3: int;

        r3 = interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString: byte[] asUnquotedUTF8()>();

        i2 = lengthof r3;

        if i2 <= 6 goto label1;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        $i5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _handleLongCustomEscape(byte[],int,int,byte[],int)>(r1, i0, $i4, r3, i1);

        return $i5;

     label1:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r1, i0, i2);

        $i3 = i0 + i2;

        return $i3;
    }

    private final int _handleLongCustomEscape(byte[], int, int, byte[], int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        byte[] r1, r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.io.OutputStream $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: byte[];

        i8 := @parameter1: int;

        i0 := @parameter2: int;

        r2 := @parameter3: byte[];

        i1 := @parameter4: int;

        i2 = lengthof r2;

        $i3 = i8 + i2;

        if $i3 <= i0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i8;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

        i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i7 = lengthof r1;

        if i2 <= $i7 goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, i2);

        return i8;

     label1:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, i8, i2);

        i9 = i8 + i2;

        $i4 = 6 * i1;

        $i5 = i9 + $i4;

        if $i5 <= i0 goto label2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i9;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        return $i6;

     label2:
        return i9;
    }

    private final void _writeUTF8Segments(byte[], int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        byte[] r1;
        int i0, $i1, i2, i3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: byte[];

        i2 := @parameter1: int;

        i3 := @parameter2: int;

     label1:
        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMaxContiguous>;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i3);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeUTF8Segment(byte[],int,int)>(r1, i2, i0);

        i2 = i2 + i0;

        i3 = i3 - i0;

        if i3 > 0 goto label1;

        return;
    }

    private final void _writeUTF8Segment(byte[], int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        byte[] r1, $r3;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        int[] r2;
        byte b3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes>;

        i12 = i0;

        i2 = i0 + i1;

     label1:
        if i12 >= i2 goto label3;

        $i10 = i12;

        i12 = i12 + 1;

        b3 = r1[$i10];

        if b3 < 0 goto label2;

        $i11 = r2[b3];

        if $i11 == 0 goto label2;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeUTF8Segment2(byte[],int,int)>(r1, i0, i1);

        return;

     label2:
        goto label1;

     label3:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i6 = $i4 + i1;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i6 <= $i5 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label4:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r3, $i7, i1);

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i9 = $i8 + i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i9;

        return;
    }

    private final void _writeUTF8Segment2(byte[], int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        byte[] r1, r2;
        int[] r3;
        byte b0, $b9;
        int i2, $i3, $i4, $i5, $i6, $i7, $i8, i10, i11, i12, i13, i14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: byte[];

        i10 := @parameter1: int;

        i11 := @parameter2: int;

        i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i3 = i11 * 6;

        $i5 = i12 + $i3;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i5 <= $i4 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

        i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

     label1:
        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int[] _outputEscapes>;

        i13 = i11 + i10;

     label2:
        if i10 >= i13 goto label7;

        $i6 = i10;

        i10 = i10 + 1;

        b0 = r1[$i6];

        if b0 < 0 goto label3;

        $i8 = r3[b0];

        if $i8 != 0 goto label4;

     label3:
        $i7 = i12;

        i12 = i12 + 1;

        r2[$i7] = b0;

        goto label2;

     label4:
        i2 = r3[b0];

        if i2 <= 0 goto label5;

        i14 = i12 + 1;

        r2[i12] = 92;

        i12 = i14 + 1;

        $b9 = (byte) i2;

        r2[i14] = $b9;

        goto label6;

     label5:
        i12 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>(b0, i12);

     label6:
        goto label2;

     label7:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = i12;

        return;
    }

    protected final void _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        byte[] r2, $r3, $r4, $r5, $r6;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i11, $i12, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35;
        byte $b6, $b9, $b13, $b14, $b16;
        short $s10, $s15, $s17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: byte[];

        i26 := @parameter2: int;

        i0 := @parameter3: int;

        i1 = i0 - 3;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        i2 = $i3 - 6;

        $i4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i27 = $i4 >> 2;

     label1:
        if i26 > i1 goto label4;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        if $i12 <= i2 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label2:
        i28 = i26 + 1;

        $b13 = r2[i26];

        i29 = $b13 << 8;

        i30 = i28 + 1;

        $b14 = r2[i28];

        $s15 = $b14 & 255;

        i31 = i29 | $s15;

        $i18 = i31 << 8;

        i26 = i30 + 1;

        $b16 = r2[i30];

        $s17 = $b16 & 255;

        i32 = $i18 | $s17;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i20 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Chunk(int,byte[],int)>(i32, $r4, $i19);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i20;

        i27 = i27 + -1;

        if i27 > 0 goto label3;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i22 = $i21 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i22;

        $r5[$i21] = 92;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i24 = $i23 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i24;

        $r6[$i23] = 110;

        $i25 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i27 = $i25 >> 2;

     label3:
        goto label1;

     label4:
        i33 = i0 - i26;

        if i33 <= 0 goto label7;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        if $i5 <= i2 goto label5;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label5:
        i34 = i26 + 1;

        $b6 = r2[i26];

        i35 = $b6 << 16;

        if i33 != 2 goto label6;

        $b9 = r2[i34];

        $s10 = $b9 & 255;

        $i11 = $s10 << 8;

        i35 = i35 | $i11;

     label6:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Partial(int,int,byte[],int)>(i35, i33, $r3, $i7);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i8;

     label7:
        return;
    }

    protected final int _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.InputStream r2;
        byte[] r3, $r4, $r5, $r6, $r7;
        int i0, $i1, $i2, $i3, $i5, $i6, $i9, $i10, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i36, i37;
        byte $b4, $b7, $b11, $b12, $b14, b38;
        short $s8, $s13, $s15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: byte[];

        i24 := @parameter3: int;

        i25 = 0;

        i26 = 0;

        i27 = -3;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        i0 = $i1 - 6;

        $i2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i28 = $i2 >> 2;

     label01:
        if i24 <= 2 goto label06;

        if i25 <= i27 goto label03;

        i26 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _readMore(java.io.InputStream,byte[],int,int,int)>(r2, r3, i25, i26, i24);

        i25 = 0;

        if i26 >= 3 goto label02;

        goto label06;

     label02:
        i27 = i26 - 3;

     label03:
        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        if $i10 <= i0 goto label04;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label04:
        i29 = i25 + 1;

        $b11 = r3[i25];

        i30 = $b11 << 8;

        i31 = i29 + 1;

        $b12 = r3[i29];

        $s13 = $b12 & 255;

        i32 = i30 | $s13;

        $i16 = i32 << 8;

        i25 = i31 + 1;

        $b14 = r3[i31];

        $s15 = $b14 & 255;

        i33 = $i16 | $s15;

        i24 = i24 + -3;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i18 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Chunk(int,byte[],int)>(i33, $r5, $i17);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i18;

        i28 = i28 + -1;

        if i28 > 0 goto label05;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i20 = $i19 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i20;

        $r6[$i19] = 92;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i22 = $i21 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i22;

        $r7[$i21] = 110;

        $i23 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i28 = $i23 >> 2;

     label05:
        goto label01;

     label06:
        if i24 <= 0 goto label10;

        i34 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _readMore(java.io.InputStream,byte[],int,int,int)>(r2, r3, i25, i26, i24);

        if i34 <= 0 goto label10;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        if $i3 <= i0 goto label07;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label07:
        i36 = 0 + 1;

        $b4 = r3[0];

        i37 = $b4 << 16;

        if i36 >= i34 goto label08;

        $b7 = r3[i36];

        $s8 = $b7 & 255;

        $i9 = $s8 << 8;

        i37 = i37 | $i9;

        b38 = 2;

        goto label09;

     label08:
        b38 = 1;

     label09:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i6 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Partial(int,int,byte[],int)>(i37, b38, $r4, $i5);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i6;

        i24 = i24 - b38;

     label10:
        return i24;
    }

    protected final int _writeBinary(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[]) throws java.io.IOException, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerationException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant r1;
        java.io.InputStream r2;
        byte[] r3, $r4, $r5, $r6, $r7;
        int i0, $i1, $i2, $i3, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36;
        byte $b4, $b5, $b7, $b19, $b22, b37;
        short $s6, $s8, $s23;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: byte[];

        i25 = 0;

        i26 = 0;

        i27 = -3;

        i28 = 0;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        i0 = $i1 - 6;

        $i2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i29 = $i2 >> 2;

     label1:
        if i25 <= i27 goto label3;

        $i17 = lengthof r3;

        i26 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _readMore(java.io.InputStream,byte[],int,int,int)>(r2, r3, i25, i26, $i17);

        i25 = 0;

        if i26 >= 3 goto label2;

        goto label6;

     label2:
        i27 = i26 - 3;

     label3:
        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        if $i3 <= i0 goto label4;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label4:
        i30 = i25 + 1;

        $b4 = r3[i25];

        i31 = $b4 << 8;

        i32 = i30 + 1;

        $b5 = r3[i30];

        $s6 = $b5 & 255;

        i33 = i31 | $s6;

        $i9 = i33 << 8;

        i25 = i32 + 1;

        $b7 = r3[i32];

        $s8 = $b7 & 255;

        i34 = $i9 | $s8;

        i28 = i28 + 3;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i11 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Chunk(int,byte[],int)>(i34, $r4, $i10);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i11;

        i29 = i29 + -1;

        if i29 > 0 goto label5;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i13;

        $r5[$i12] = 92;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i15 = $i14 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i15;

        $r6[$i14] = 110;

        $i16 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();

        i29 = $i16 >> 2;

     label5:
        goto label1;

     label6:
        if 0 >= i26 goto label9;

        $i18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        if $i18 <= i0 goto label7;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label7:
        i35 = 0 + 1;

        $b19 = r3[0];

        i36 = $b19 << 16;

        b37 = 1;

        if i35 >= i26 goto label8;

        $b22 = r3[i35];

        $s23 = $b22 & 255;

        $i24 = $s23 << 8;

        i36 = i36 | $i24;

        b37 = 2;

     label8:
        i28 = i28 + b37;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i20 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i21 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.Base64Variant: int encodeBase64Partial(int,int,byte[],int)>(i36, b37, $r7, $i20);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i21;

     label9:
        return i28;
    }

    private final int _readMore(java.io.InputStream, byte[], int, int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        java.io.InputStream r1;
        byte[] r2;
        int i0, i1, $i2, $i3, $i4, i6, i7, i8, i9, i10, i11;
        byte $b5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

        i6 := @parameter2: int;

        i7 := @parameter3: int;

        i8 := @parameter4: int;

        i9 = 0;

     label1:
        if i6 >= i7 goto label2;

        $i3 = i9;

        i9 = i9 + 1;

        $i4 = i6;

        i6 = i6 + 1;

        $b5 = r2[$i4];

        r2[$i3] = $b5;

        goto label1;

     label2:
        i10 = i9;

        $i2 = lengthof r2;

        i11 = staticinvoke <java.lang.Math: int min(int,int)>(i8, $i2);

     label3:
        i0 = i11 - i10;

        if i0 != 0 goto label4;

        goto label6;

     label4:
        i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, i10, i0);

        if i1 >= 0 goto label5;

        return i10;

     label5:
        i10 = i10 + i1;

        if i10 < 3 goto label3;

     label6:
        return i10;
    }

    private final int _outputRawMultiByteChar(int, char[], int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i19;
        char[] r1;
        byte[] r2;
        byte $b7, $b13, $b18;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;
        java.lang.String $r8;
        char $c20;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        i0 := @parameter0: int;

        r1 := @parameter1: char[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i0 < 55296 goto label4;

        if i0 > 57343 goto label4;

        if i1 >= i2 goto label1;

        if r1 != null goto label2;

     label1:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Split surrogate on writeRaw() input (last character): first character 0x%4x", $r6);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _reportError(java.lang.String)>($r8);

        goto label3;

     label2:
        $c20 = r1[i1];

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _outputSurrogates(int,int)>(i0, $c20);

     label3:
        $i19 = i1 + 1;

        return $i19;

     label4:
        r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i4;

        $i5 = i0 >> 12;

        $i6 = 224 | $i5;

        $b7 = (byte) $i6;

        r2[$i3] = $b7;

        $i8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i9 = $i8 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i9;

        $i10 = i0 >> 6;

        $i11 = $i10 & 63;

        $i12 = 128 | $i11;

        $b13 = (byte) $i12;

        r2[$i8] = $b13;

        $i14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i15 = $i14 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i15;

        $i16 = i0 & 63;

        $i17 = 128 | $i16;

        $b18 = (byte) $i17;

        r2[$i14] = $b18;

        return i1;
    }

    protected final void _outputSurrogates(int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26;
        byte[] r1;
        byte $b10, $b16, $b22, $b27;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _decodeSurrogate(int,int)>(i0, i1);

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i3 + 4;

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i5 <= $i4 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i7 = $i6 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i7;

        $i8 = i2 >> 18;

        $i9 = 240 | $i8;

        $b10 = (byte) $i9;

        r1[$i6] = $b10;

        $i11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i12 = $i11 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i12;

        $i13 = i2 >> 12;

        $i14 = $i13 & 63;

        $i15 = 128 | $i14;

        $b16 = (byte) $i15;

        r1[$i11] = $b16;

        $i17 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i18 = $i17 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i18;

        $i19 = i2 >> 6;

        $i20 = $i19 & 63;

        $i21 = 128 | $i20;

        $b22 = (byte) $i21;

        r1[$i17] = $b22;

        $i23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i24 = $i23 + 1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i24;

        $i25 = i2 & 63;

        $i26 = 128 | $i25;

        $b27 = (byte) $i26;

        r1[$i23] = $b27;

        return;
    }

    private final int _outputMultiByteChar(int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        int i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i14, $i15, $i17, $i18, $i20, i22, i23, i24, i25, i26, i27, i28, i29, i30;
        byte[] r1, $r2, $r3, $r4, $r5;
        byte $b3, $b7, $b10, $b13, $b16, $b19, $b21;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        i0 := @parameter0: int;

        i22 := @parameter1: int;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        if i0 < 55296 goto label1;

        if i0 > 57343 goto label1;

        i23 = i22 + 1;

        r1[i22] = 92;

        i24 = i23 + 1;

        r1[i23] = 117;

        i25 = i24 + 1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] HEX_CHARS>;

        $i11 = i0 >> 12;

        $i12 = $i11 & 15;

        $b13 = $r2[$i12];

        r1[i24] = $b13;

        i26 = i25 + 1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] HEX_CHARS>;

        $i14 = i0 >> 8;

        $i15 = $i14 & 15;

        $b16 = $r3[$i15];

        r1[i25] = $b16;

        i27 = i26 + 1;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] HEX_CHARS>;

        $i17 = i0 >> 4;

        $i18 = $i17 & 15;

        $b19 = $r4[$i18];

        r1[i26] = $b19;

        i28 = i27 + 1;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] HEX_CHARS>;

        $i20 = i0 & 15;

        $b21 = $r5[$i20];

        r1[i27] = $b21;

        goto label2;

     label1:
        i29 = i22 + 1;

        $i1 = i0 >> 12;

        $i2 = 224 | $i1;

        $b3 = (byte) $i2;

        r1[i22] = $b3;

        i30 = i29 + 1;

        $i4 = i0 >> 6;

        $i5 = $i4 & 63;

        $i6 = 128 | $i5;

        $b7 = (byte) $i6;

        r1[i29] = $b7;

        i28 = i30 + 1;

        $i8 = i0 & 63;

        $i9 = 128 | $i8;

        $b10 = (byte) $i9;

        r1[i30] = $b10;

     label2:
        return i28;
    }

    private final void _writeNull() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        byte[] $r1, $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i2 = $i0 + 4;

        $i1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>();

     label1:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] NULL_BYTES>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i3, 4);

        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        $i5 = $i4 + 4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = $i5;

        return;
    }

    private int _writeGenericEscape(int, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        byte[] r1, $r2, $r3, $r4, $r5;
        int i0, $i1, $i3, $i5, $i6, $i8, i10, i11, i12, i13, i14, i15, i16, i17, i18;
        byte $b2, $b4, $b7, $b9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        i10 := @parameter0: int;

        i11 := @parameter1: int;

        r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        i12 = i11 + 1;

        r1[i11] = 92;

        i13 = i12 + 1;

        r1[i12] = 117;

        if i10 <= 255 goto label1;

        $i5 = i10 >> 8;

        i0 = $i5 & 255;

        i14 = i13 + 1;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] HEX_CHARS>;

        $i6 = i0 >> 4;

        $b7 = $r4[$i6];

        r1[i13] = $b7;

        i15 = i14 + 1;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] HEX_CHARS>;

        $i8 = i0 & 15;

        $b9 = $r5[$i8];

        r1[i14] = $b9;

        i10 = i10 & 255;

        goto label2;

     label1:
        i16 = i13 + 1;

        r1[i13] = 48;

        i15 = i16 + 1;

        r1[i16] = 48;

     label2:
        i17 = i15 + 1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] HEX_CHARS>;

        $i1 = i10 >> 4;

        $b2 = $r2[$i1];

        r1[i15] = $b2;

        i18 = i17 + 1;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] HEX_CHARS>;

        $i3 = i10 & 15;

        $b4 = $r3[$i3];

        r1[i17] = $b4;

        return i18;
    }

    protected final void _flushBuffer() throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator r0;
        int i0;
        byte[] $r1;
        java.io.OutputStream $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator;

        i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail>;

        if i0 <= 0 goto label1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputTail> = 0;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: java.io.OutputStream _outputStream>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] _outputBuffer>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, i0);

     label1:
        return;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: int MAX_BYTES_TO_BUFFER> = 512;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte BYTE_COLON> = 58;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte BYTE_COMMA> = 44;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte BYTE_BACKSLASH> = 92;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte BYTE_RCURLY> = 125;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte BYTE_LCURLY> = 123;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte BYTE_RBRACKET> = 93;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte BYTE_LBRACKET> = 91;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte BYTE_0> = 48;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte BYTE_u> = 117;

        $r0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: byte[] copyHexBytes()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] HEX_CHARS> = $r0;

        $r1 = newarray (byte)[4];

        $r1[0] = 110;

        $r1[1] = 117;

        $r1[2] = 108;

        $r1[3] = 108;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] NULL_BYTES> = $r1;

        $r2 = newarray (byte)[4];

        $r2[0] = 116;

        $r2[1] = 114;

        $r2[2] = 117;

        $r2[3] = 101;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] TRUE_BYTES> = $r2;

        $r3 = newarray (byte)[5];

        $r3[0] = 102;

        $r3[1] = 97;

        $r3[2] = 108;

        $r3[3] = 115;

        $r3[4] = 101;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.json.UTF8JsonGenerator: byte[] FALSE_BYTES> = $r3;

        return;
    }
}
