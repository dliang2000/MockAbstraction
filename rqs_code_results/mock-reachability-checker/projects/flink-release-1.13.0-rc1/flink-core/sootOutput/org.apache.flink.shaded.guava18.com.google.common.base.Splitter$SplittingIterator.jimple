abstract class org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator extends org.apache.flink.shaded.guava18.com.google.common.base.AbstractIterator
{
    final java.lang.CharSequence toSplit;
    final org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher trimmer;
    final boolean omitEmptyStrings;
    int offset;
    int limit;

    abstract int separatorStart(int);

    abstract int separatorEnd(int);

    protected void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Splitter, java.lang.CharSequence)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Splitter r1;
        java.lang.CharSequence r2;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r3;
        boolean $z0;
        int $i0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.Splitter;

        r2 := @parameter1: java.lang.CharSequence;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.AbstractIterator: void <init>()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset> = 0;

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Splitter: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher access$200(org.apache.flink.shaded.guava18.com.google.common.base.Splitter)>(r1);

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher trimmer> = $r3;

        $z0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Splitter: boolean access$300(org.apache.flink.shaded.guava18.com.google.common.base.Splitter)>(r1);

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: boolean omitEmptyStrings> = $z0;

        $i0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Splitter: int access$400(org.apache.flink.shaded.guava18.com.google.common.base.Splitter)>(r1);

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int limit> = $i0;

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: java.lang.CharSequence toSplit> = r2;

        return;
    }

    protected java.lang.String computeNext()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i12, $i13, $i14, $i15, i16, $i17, i18, i19;
        java.lang.Object $r1;
        java.lang.String $r2, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.CharSequence $r3, $r4, $r6, $r8, $r10, $r11, $r12, $r13;
        org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher $r5, $r7, $r9;
        char $c8, $c10, $c11;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator;

        i16 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset>;

     label01:
        $i17 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset>;

        if $i17 == -1 goto label11;

        i18 = i16;

        $i1 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset>;

        i0 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int separatorStart(int)>($i1);

        if i0 != -1 goto label02;

        $r11 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: java.lang.CharSequence toSplit>;

        i19 = interfaceinvoke $r11.<java.lang.CharSequence: int length()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset> = -1;

        goto label03;

     label02:
        i19 = i0;

        $i2 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int separatorEnd(int)>(i0);

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset> = $i2;

     label03:
        $i3 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset>;

        if $i3 != i16 goto label04;

        $i12 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset>;

        $i13 = $i12 + 1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset> = $i13;

        $i14 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset>;

        $r10 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: java.lang.CharSequence toSplit>;

        $i15 = interfaceinvoke $r10.<java.lang.CharSequence: int length()>();

        if $i14 < $i15 goto label01;

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset> = -1;

        goto label01;

     label04:
        if i18 >= i19 goto label05;

        $r9 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher trimmer>;

        $r8 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: java.lang.CharSequence toSplit>;

        $c11 = interfaceinvoke $r8.<java.lang.CharSequence: char charAt(int)>(i18);

        $z3 = virtualinvoke $r9.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c11);

        if $z3 == 0 goto label05;

        i18 = i18 + 1;

        goto label04;

     label05:
        if i19 <= i18 goto label06;

        $r7 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher trimmer>;

        $r6 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: java.lang.CharSequence toSplit>;

        $i9 = i19 - 1;

        $c10 = interfaceinvoke $r6.<java.lang.CharSequence: char charAt(int)>($i9);

        $z2 = virtualinvoke $r7.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c10);

        if $z2 == 0 goto label06;

        i19 = i19 + -1;

        goto label05;

     label06:
        $z0 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: boolean omitEmptyStrings>;

        if $z0 == 0 goto label07;

        if i18 != i19 goto label07;

        i16 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset>;

        goto label01;

     label07:
        $i4 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int limit>;

        if $i4 != 1 goto label09;

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: java.lang.CharSequence toSplit>;

        i19 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int offset> = -1;

     label08:
        if i19 <= i18 goto label10;

        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher trimmer>;

        $r4 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: java.lang.CharSequence toSplit>;

        $i7 = i19 - 1;

        $c8 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>($i7);

        $z1 = virtualinvoke $r5.<org.apache.flink.shaded.guava18.com.google.common.base.CharMatcher: boolean matches(char)>($c8);

        if $z1 == 0 goto label10;

        i19 = i19 + -1;

        goto label08;

     label09:
        $i5 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int limit>;

        $i6 = $i5 - 1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: int limit> = $i6;

     label10:
        $r12 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: java.lang.CharSequence toSplit>;

        $r13 = interfaceinvoke $r12.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i18, i19);

        $r14 = interfaceinvoke $r13.<java.lang.CharSequence: java.lang.String toString()>();

        return $r14;

     label11:
        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: java.lang.Object endOfData()>();

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

    protected volatile java.lang.Object computeNext()
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Splitter$SplittingIterator: java.lang.String computeNext()>();

        return $r1;
    }
}
