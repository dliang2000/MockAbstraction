public class com.esotericsoftware.kryo.util.Util extends java.lang.Object
{
    public static boolean isAndroid;

    public void <init>()
    {
        com.esotericsoftware.kryo.util.Util r0;

        r0 := @this: com.esotericsoftware.kryo.util.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Class getWrapperClass(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r1 goto label1;

        return class "Ljava/lang/Integer;";

     label1:
        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r2 goto label2;

        return class "Ljava/lang/Float;";

     label2:
        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r3 goto label3;

        return class "Ljava/lang/Boolean;";

     label3:
        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r4 goto label4;

        return class "Ljava/lang/Long;";

     label4:
        $r5 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r5 goto label5;

        return class "Ljava/lang/Byte;";

     label5:
        $r6 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r6 goto label6;

        return class "Ljava/lang/Character;";

     label6:
        $r7 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r7 goto label7;

        return class "Ljava/lang/Short;";

     label7:
        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r8 goto label8;

        return class "Ljava/lang/Double;";

     label8:
        return class "Ljava/lang/Void;";
    }

    public static java.lang.Class getPrimitiveClass(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @parameter0: java.lang.Class;

        if r0 != class "Ljava/lang/Integer;" goto label1;

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        return $r9;

     label1:
        if r0 != class "Ljava/lang/Float;" goto label2;

        $r8 = <java.lang.Float: java.lang.Class TYPE>;

        return $r8;

     label2:
        if r0 != class "Ljava/lang/Boolean;" goto label3;

        $r7 = <java.lang.Boolean: java.lang.Class TYPE>;

        return $r7;

     label3:
        if r0 != class "Ljava/lang/Long;" goto label4;

        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        return $r6;

     label4:
        if r0 != class "Ljava/lang/Byte;" goto label5;

        $r5 = <java.lang.Byte: java.lang.Class TYPE>;

        return $r5;

     label5:
        if r0 != class "Ljava/lang/Character;" goto label6;

        $r4 = <java.lang.Character: java.lang.Class TYPE>;

        return $r4;

     label6:
        if r0 != class "Ljava/lang/Short;" goto label7;

        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        return $r3;

     label7:
        if r0 != class "Ljava/lang/Double;" goto label8;

        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        return $r2;

     label8:
        if r0 != class "Ljava/lang/Void;" goto label9;

        $r1 = <java.lang.Void: java.lang.Class TYPE>;

        return $r1;

     label9:
        return r0;
    }

    public static boolean isWrapperClass(java.lang.Class)
    {
        java.lang.Class r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        if r0 == class "Ljava/lang/Integer;" goto label1;

        if r0 == class "Ljava/lang/Float;" goto label1;

        if r0 == class "Ljava/lang/Boolean;" goto label1;

        if r0 == class "Ljava/lang/Long;" goto label1;

        if r0 == class "Ljava/lang/Byte;" goto label1;

        if r0 == class "Ljava/lang/Character;" goto label1;

        if r0 == class "Ljava/lang/Short;" goto label1;

        if r0 != class "Ljava/lang/Double;" goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static void log(java.lang.String, java.lang.Object)
    {
        java.lang.String r0, $r6, $r8, $r12, $r14, $r18;
        java.lang.Object r1;
        java.lang.Class r2;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r9, $r10, $r11, $r13, $r15, $r16, $r17;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        if r1 != null goto label2;

        $z1 = <com.esotericsoftware.minlog.Log: boolean TRACE>;

        if $z1 == 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": null");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.esotericsoftware.minlog.Log: void trace(java.lang.String,java.lang.String)>("kryo", $r18);

     label1:
        return;

     label2:
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label3;

        if r2 == class "Ljava/lang/Boolean;" goto label3;

        if r2 == class "Ljava/lang/Byte;" goto label3;

        if r2 == class "Ljava/lang/Character;" goto label3;

        if r2 == class "Ljava/lang/Short;" goto label3;

        if r2 == class "Ljava/lang/Integer;" goto label3;

        if r2 == class "Ljava/lang/Long;" goto label3;

        if r2 == class "Ljava/lang/Float;" goto label3;

        if r2 == class "Ljava/lang/Double;" goto label3;

        if r2 != class "Ljava/lang/String;" goto label4;

     label3:
        $z2 = <com.esotericsoftware.minlog.Log: boolean TRACE>;

        if $z2 == 0 goto label5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = staticinvoke <com.esotericsoftware.kryo.util.Util: java.lang.String string(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.esotericsoftware.minlog.Log: void trace(java.lang.String,java.lang.String)>("kryo", $r8);

        goto label5;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = staticinvoke <com.esotericsoftware.kryo.util.Util: java.lang.String string(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.esotericsoftware.minlog.Log: void debug(java.lang.String,java.lang.String)>("kryo", $r14);

     label5:
        return;
    }

    public static java.lang.String string(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class r1, $r5;
        boolean $z0, $z1;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.String $r6, $r7, $r9;
        java.lang.Exception $r8;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return "null";

     label1:
        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label2;

        $r7 = staticinvoke <com.esotericsoftware.kryo.util.Util: java.lang.String className(java.lang.Class)>(r1);

        return $r7;

     label2:
        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("toString", $r3);

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        if $r5 != class "Ljava/lang/Object;" goto label5;

        $z1 = <com.esotericsoftware.minlog.Log: boolean TRACE>;

        if $z1 == 0 goto label3;

        $r9 = staticinvoke <com.esotericsoftware.kryo.util.Util: java.lang.String className(java.lang.Class)>(r1);

        goto label4;

     label3:
        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

     label4:
        return $r9;

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

     label7:
        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        return $r6;

        catch java.lang.Exception from label2 to label4 with label6;
    }

    public static java.lang.String className(java.lang.Class)
    {
        java.lang.Class r0, r1;
        int i0, i1;
        boolean $z0, $z1;
        java.lang.String $r3, $r6, $r9, $r11;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label3;

        r1 = staticinvoke <com.esotericsoftware.kryo.util.Util: java.lang.Class getElementClass(java.lang.Class)>(r0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(16);

        i1 = 0;

        i0 = staticinvoke <com.esotericsoftware.kryo.util.Util: int getDimensionCount(java.lang.Class)>(r0);

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <com.esotericsoftware.kryo.util.Util: java.lang.String className(java.lang.Class)>(r1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label3:
        $z1 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z1 != 0 goto label4;

        if r0 == class "Ljava/lang/Object;" goto label4;

        if r0 == class "Ljava/lang/Boolean;" goto label4;

        if r0 == class "Ljava/lang/Byte;" goto label4;

        if r0 == class "Ljava/lang/Character;" goto label4;

        if r0 == class "Ljava/lang/Short;" goto label4;

        if r0 == class "Ljava/lang/Integer;" goto label4;

        if r0 == class "Ljava/lang/Long;" goto label4;

        if r0 == class "Ljava/lang/Float;" goto label4;

        if r0 == class "Ljava/lang/Double;" goto label4;

        if r0 != class "Ljava/lang/String;" goto label5;

     label4:
        $r11 = virtualinvoke r0.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r11;

     label5:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        return $r3;
    }

    public static int getDimensionCount(java.lang.Class)
    {
        java.lang.Class r0, r1;
        int i0;

        r0 := @parameter0: java.lang.Class;

        i0 = 0;

        r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>();

     label1:
        if r1 == null goto label2;

        i0 = i0 + 1;

        r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();

        goto label1;

     label2:
        return i0;
    }

    public static java.lang.Class getElementClass(java.lang.Class)
    {
        java.lang.Class r0, $r1, r2;

        r0 := @parameter0: java.lang.Class;

        r2 = r0;

     label1:
        $r1 = virtualinvoke r2.<java.lang.Class: java.lang.Class getComponentType()>();

        if $r1 == null goto label2;

        r2 = virtualinvoke r2.<java.lang.Class: java.lang.Class getComponentType()>();

        goto label1;

     label2:
        return r2;
    }

    public static int swapInt(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        i0 := @parameter0: int;

        $i1 = i0 & 255;

        $i4 = $i1 << 24;

        $i2 = i0 & 65280;

        $i3 = $i2 << 8;

        $i7 = $i4 | $i3;

        $i5 = i0 & 16711680;

        $i6 = $i5 >> 8;

        $i10 = $i7 | $i6;

        $i8 = i0 >> 24;

        $i9 = $i8 & 255;

        $i11 = $i10 | $i9;

        return $i11;
    }

    public static long swapLong(long)
    {
        long l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31;

        l0 := @parameter0: long;

        $l1 = l0 >> 0;

        $l2 = $l1 & 255L;

        $l6 = $l2 << 56;

        $l3 = l0 >> 8;

        $l4 = $l3 & 255L;

        $l5 = $l4 << 48;

        $l10 = $l6 | $l5;

        $l7 = l0 >> 16;

        $l8 = $l7 & 255L;

        $l9 = $l8 << 40;

        $l14 = $l10 | $l9;

        $l11 = l0 >> 24;

        $l12 = $l11 & 255L;

        $l13 = $l12 << 32;

        $l18 = $l14 | $l13;

        $l15 = l0 >> 32;

        $l16 = $l15 & 255L;

        $l17 = $l16 << 24;

        $l22 = $l18 | $l17;

        $l19 = l0 >> 40;

        $l20 = $l19 & 255L;

        $l21 = $l20 << 16;

        $l26 = $l22 | $l21;

        $l23 = l0 >> 48;

        $l24 = $l23 & 255L;

        $l25 = $l24 << 8;

        $l30 = $l26 | $l25;

        $l27 = l0 >> 56;

        $l28 = $l27 & 255L;

        $l29 = $l28 << 0;

        $l31 = $l30 | $l29;

        return $l31;
    }

    static void <clinit>()
    {
        java.lang.Exception $r2;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.Process");

        <com.esotericsoftware.kryo.util.Util: boolean isAndroid> = 1;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
