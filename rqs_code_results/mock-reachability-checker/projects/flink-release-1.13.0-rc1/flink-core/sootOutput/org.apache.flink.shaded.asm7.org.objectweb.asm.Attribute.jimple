public class org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute extends java.lang.Object
{
    public final java.lang.String type;
    private byte[] content;
    org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute nextAttribute;

    protected void <init>(java.lang.String)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: java.lang.String type> = r1;

        return;
    }

    public boolean isUnknown()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        return 1;
    }

    public boolean isCodeAttribute()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        return 0;
    }

    protected org.apache.flink.shaded.asm7.org.objectweb.asm.Label[] getLabels()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label[] $r1;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        $r1 = newarray (org.apache.flink.shaded.asm7.org.objectweb.asm.Label)[0];

        return $r1;
    }

    protected org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute read(org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader, int, int, char[], int, org.apache.flink.shaded.asm7.org.objectweb.asm.Label[])
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r0, $r5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader r1;
        int i0, i1, i2;
        char[] r2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.Label[] r3;
        java.lang.String $r6;
        byte[] $r7, $r8, $r9;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: char[];

        i2 := @parameter4: int;

        r3 := @parameter5: org.apache.flink.shaded.asm7.org.objectweb.asm.Label[];

        $r5 = new org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        $r6 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: java.lang.String type>;

        specialinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: void <init>(java.lang.String)>($r6);

        $r7 = newarray (byte)[i1];

        $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: byte[] content> = $r7;

        $r9 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ClassReader: byte[] classFileBuffer>;

        $r8 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: byte[] content>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, i0, $r8, 0, i1);

        return $r5;
    }

    protected org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector write(org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter, byte[], int, int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r1;
        byte[] r2, $r4;
        int i0, i1, i2;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r3;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r3 = new org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        $r4 = r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: byte[] content>;

        specialinvoke $r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: void <init>(byte[])>($r4);

        return $r3;
    }

    final int getAttributeCount()
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r0, r1;
        int i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        i0 = 0;

        r1 = r0;

     label1:
        if r1 == null goto label2;

        i0 = i0 + 1;

        r1 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute nextAttribute>;

        goto label1;

     label2:
        return i0;
    }

    final int computeAttributesSize(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable;

        $i0 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: int computeAttributesSize(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,byte[],int,int,int)>(r1, null, 0, -1, -1);

        return $i0;
    }

    final int computeAttributesSize(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable, byte[], int, int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r0, r6;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable r1;
        byte[] r2;
        int i0, i1, i2, $i4, $i5, i6;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r3;
        java.lang.String $r4;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector $r5;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter classWriter>;

        i6 = 0;

        r6 = r0;

     label1:
        if r6 == null goto label2;

        $r4 = r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: java.lang.String type>;

        virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>($r4);

        $r5 = virtualinvoke r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector write(org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter,byte[],int,int,int)>(r3, r2, i0, i1, i2);

        $i4 = $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        $i5 = 6 + $i4;

        i6 = i6 + $i5;

        r6 = r6.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute nextAttribute>;

        goto label1;

     label2:
        return i6;
    }

    static int computeAttributesSize(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable, int, int)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable r0;
        int i0, i1, $i2, $i3, $i6, i8;

        r0 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i8 = 0;

        $i2 = i0 & 4096;

        if $i2 == 0 goto label1;

        $i6 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int getMajorVersion()>();

        if $i6 >= 49 goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Synthetic");

        i8 = 0 + 6;

     label1:
        if i1 == 0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Signature");

        i8 = i8 + 8;

     label2:
        $i3 = i0 & 131072;

        if $i3 == 0 goto label3;

        virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Deprecated");

        i8 = i8 + 6;

     label3:
        return i8;
    }

    final void putAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable, org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r0;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable r1;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector r2;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable;

        r2 := @parameter1: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: void putAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable,byte[],int,int,int,org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)>(r1, null, 0, -1, -1, r2);

        return;
    }

    final void putAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable, byte[], int, int, int, org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute r0, r11;
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable r1;
        byte[] r2, $r9;
        int i0, i1, i2, $i3, $i4, $i5;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector r3, r5, $r7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter r4;
        java.lang.String $r6;

        r0 := @this: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute;

        r1 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        r4 = r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter classWriter>;

        r11 = r0;

     label1:
        if r11 == null goto label2;

        r5 = virtualinvoke r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector write(org.apache.flink.shaded.asm7.org.objectweb.asm.ClassWriter,byte[],int,int,int)>(r4, r2, i0, i1, i2);

        $r6 = r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: java.lang.String type>;

        $i3 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>($r6);

        $r7 = virtualinvoke r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i3);

        $i4 = r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>($i4);

        $r9 = r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: byte[] data>;

        $i5 = r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke r3.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r9, 0, $i5);

        r11 = r11.<org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute: org.apache.flink.shaded.asm7.org.objectweb.asm.Attribute nextAttribute>;

        goto label1;

     label2:
        return;
    }

    static void putAttributes(org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable, int, int, org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector)
    {
        org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector r1, $r2, $r4, $r5, $r7;

        r0 := @parameter0: org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector;

        $i2 = i0 & 4096;

        if $i2 == 0 goto label1;

        $i6 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int getMajorVersion()>();

        if $i6 >= 49 goto label1;

        $i7 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Synthetic");

        $r7 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i7);

        virtualinvoke $r7.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(0);

     label1:
        if i1 == 0 goto label2;

        $i5 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Signature");

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i5);

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(2);

        virtualinvoke $r5.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>(i1);

     label2:
        $i3 = i0 & 131072;

        if $i3 == 0 goto label3;

        $i4 = virtualinvoke r0.<org.apache.flink.shaded.asm7.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Deprecated");

        $r2 = virtualinvoke r1.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putShort(int)>($i4);

        virtualinvoke $r2.<org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector: org.apache.flink.shaded.asm7.org.objectweb.asm.ByteVector putInt(int)>(0);

     label3:
        return;
    }
}
