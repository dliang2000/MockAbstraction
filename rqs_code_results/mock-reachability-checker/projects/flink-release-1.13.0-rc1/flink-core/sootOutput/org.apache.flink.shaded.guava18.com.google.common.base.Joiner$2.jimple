class org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2 extends org.apache.flink.shaded.guava18.com.google.common.base.Joiner
{
    final org.apache.flink.shaded.guava18.com.google.common.base.Joiner this$0;

    void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Joiner, org.apache.flink.shaded.guava18.com.google.common.base.Joiner)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2 r0;
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner r1, r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.base.Joiner;

        r2 := @parameter1: org.apache.flink.shaded.guava18.com.google.common.base.Joiner;

        r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2: org.apache.flink.shaded.guava18.com.google.common.base.Joiner this$0> = r1;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Joiner,org.apache.flink.shaded.guava18.com.google.common.base.Joiner$1)>(r2, null);

        return;
    }

    public java.lang.Appendable appendTo(java.lang.Appendable, java.util.Iterator) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2 r0;
        java.lang.Appendable r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner $r5, $r8, $r11;
        java.lang.String $r6;
        java.lang.CharSequence $r9, $r12;
        java.lang.Object r14, r15;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: java.util.Iterator;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "appendable");

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "parts");

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        if r14 == null goto label2;

        $r11 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2: org.apache.flink.shaded.guava18.com.google.common.base.Joiner this$0>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>(r14);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r12);

        goto label3;

     label2:
        goto label1;

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        if r15 == null goto label4;

        $r5 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2: org.apache.flink.shaded.guava18.com.google.common.base.Joiner this$0>;

        $r6 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Joiner: java.lang.String access$100(org.apache.flink.shaded.guava18.com.google.common.base.Joiner)>($r5);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $r8 = r0.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2: org.apache.flink.shaded.guava18.com.google.common.base.Joiner this$0>;

        $r9 = virtualinvoke $r8.<org.apache.flink.shaded.guava18.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>(r15);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r9);

     label4:
        goto label3;

     label5:
        return r1;
    }

    public org.apache.flink.shaded.guava18.com.google.common.base.Joiner useForNull(java.lang.String)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2 r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("already specified skipNulls");

        throw $r2;
    }

    public org.apache.flink.shaded.guava18.com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String)
    {
        org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2 r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.base.Joiner$2;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("can\'t use .skipNulls() with maps");

        throw $r2;
    }
}
