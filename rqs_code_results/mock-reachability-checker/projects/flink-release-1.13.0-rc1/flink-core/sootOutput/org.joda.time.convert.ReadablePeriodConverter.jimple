class org.joda.time.convert.ReadablePeriodConverter extends org.joda.time.convert.AbstractConverter implements org.joda.time.convert.PeriodConverter
{
    static final org.joda.time.convert.ReadablePeriodConverter INSTANCE;

    protected void <init>()
    {
        org.joda.time.convert.ReadablePeriodConverter r0;

        r0 := @this: org.joda.time.convert.ReadablePeriodConverter;

        specialinvoke r0.<org.joda.time.convert.AbstractConverter: void <init>()>();

        return;
    }

    public void setInto(org.joda.time.ReadWritablePeriod, java.lang.Object, org.joda.time.Chronology)
    {
        org.joda.time.convert.ReadablePeriodConverter r0;
        org.joda.time.ReadWritablePeriod r1;
        java.lang.Object r2;
        org.joda.time.Chronology r3;
        org.joda.time.ReadablePeriod $r4;

        r0 := @this: org.joda.time.convert.ReadablePeriodConverter;

        r1 := @parameter0: org.joda.time.ReadWritablePeriod;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.joda.time.Chronology;

        $r4 = (org.joda.time.ReadablePeriod) r2;

        interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: void setPeriod(org.joda.time.ReadablePeriod)>($r4);

        return;
    }

    public org.joda.time.PeriodType getPeriodType(java.lang.Object)
    {
        org.joda.time.convert.ReadablePeriodConverter r0;
        java.lang.Object r1;
        org.joda.time.ReadablePeriod r2;
        org.joda.time.PeriodType $r3;

        r0 := @this: org.joda.time.convert.ReadablePeriodConverter;

        r1 := @parameter0: java.lang.Object;

        r2 = (org.joda.time.ReadablePeriod) r1;

        $r3 = interfaceinvoke r2.<org.joda.time.ReadablePeriod: org.joda.time.PeriodType getPeriodType()>();

        return $r3;
    }

    public java.lang.Class getSupportedType()
    {
        org.joda.time.convert.ReadablePeriodConverter r0;

        r0 := @this: org.joda.time.convert.ReadablePeriodConverter;

        return class "Lorg/joda/time/ReadablePeriod;";
    }

    static void <clinit>()
    {
        org.joda.time.convert.ReadablePeriodConverter $r0;

        $r0 = new org.joda.time.convert.ReadablePeriodConverter;

        specialinvoke $r0.<org.joda.time.convert.ReadablePeriodConverter: void <init>()>();

        <org.joda.time.convert.ReadablePeriodConverter: org.joda.time.convert.ReadablePeriodConverter INSTANCE> = $r0;

        return;
    }
}
