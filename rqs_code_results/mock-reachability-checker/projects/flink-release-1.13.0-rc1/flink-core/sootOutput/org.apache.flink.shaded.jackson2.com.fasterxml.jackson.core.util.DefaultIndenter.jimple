public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter
{
    private static final long serialVersionUID;
    public static final java.lang.String SYS_LF;
    public static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter SYSTEM_LINEFEED_INSTANCE;
    private static final int INDENT_LEVELS;
    private final char[] indents;
    private final int charsPerLevel;
    private final java.lang.String eol;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String SYS_LF>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: void <init>(java.lang.String,java.lang.String)>("  ", $r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter r0;
        java.lang.String r1, r2;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        char[] $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: int charsPerLevel> = $i0;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 * 16;

        $r3 = newarray (char)[$i2];

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents> = $r3;

        i5 = 0;

        i6 = 0;

     label1:
        if i6 >= 16 goto label2;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, $i3, $r4, i5);

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        i5 = i5 + $i4;

        i6 = i6 + 1;

        goto label1;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String eol> = r2;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter withLinefeed(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter r0, $r3;
        java.lang.String r1, $r2, $r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String eol>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String getIndent()>();

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: void <init>(java.lang.String,java.lang.String)>($r4, r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter withIndent(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter r0, $r3;
        java.lang.String r1, $r2, $r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String getIndent()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String eol>;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: void <init>(java.lang.String,java.lang.String)>(r1, $r4);

        return $r3;
    }

    public boolean isInline()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter;

        return 0;
    }

    public void writeIndentation(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, int) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.String $r2;
        int $i0, $i1, $i2, $i3, i4, i5;
        char[] $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        i4 := @parameter1: int;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String eol>;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeRaw(java.lang.String)>($r2);

        if i4 <= 0 goto label3;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: int charsPerLevel>;

        i5 = i4 * $i0;

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;

        $i1 = lengthof $r3;

        if i5 <= $i1 goto label2;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;

        $i2 = lengthof $r5;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char[],int,int)>($r6, 0, $i2);

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;

        $i3 = lengthof $r7;

        i5 = i5 - $i3;

        goto label1;

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char[],int,int)>($r4, 0, i5);

     label3:
        return;
    }

    public java.lang.String getEol()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String eol>;

        return $r1;
    }

    public java.lang.String getIndent()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter r0;
        java.lang.String $r1;
        int $i0;
        char[] $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter;

        $r1 = new java.lang.String;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: char[] indents>;

        $i0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: int charsPerLevel>;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i0);

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter $r1;
        java.lang.String $r2, r4;
        java.lang.Throwable $r3;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: int INDENT_LEVELS> = 16;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: long serialVersionUID> = 1L;

     label1:
        r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r4 = "\n";

     label4:
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String SYS_LF> = r4;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: java.lang.String SYS_LF>;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: void <init>(java.lang.String,java.lang.String)>("  ", $r2);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.util.DefaultIndenter SYSTEM_LINEFEED_INSTANCE> = $r1;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
