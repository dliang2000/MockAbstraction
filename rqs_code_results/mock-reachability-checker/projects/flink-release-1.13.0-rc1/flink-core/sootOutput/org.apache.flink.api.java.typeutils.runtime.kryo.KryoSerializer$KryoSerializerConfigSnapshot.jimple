public final class org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer$KryoSerializerConfigSnapshot extends org.apache.flink.api.java.typeutils.runtime.KryoRegistrationSerializerConfigSnapshot
{
    private static final int VERSION;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer$KryoSerializerConfigSnapshot r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer$KryoSerializerConfigSnapshot;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistrationSerializerConfigSnapshot: void <init>()>();

        return;
    }

    public void <init>(java.lang.Class, java.util.LinkedHashMap)
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer$KryoSerializerConfigSnapshot r0;
        java.lang.Class r1;
        java.util.LinkedHashMap r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer$KryoSerializerConfigSnapshot;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.util.LinkedHashMap;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistrationSerializerConfigSnapshot: void <init>(java.lang.Class,java.util.LinkedHashMap)>(r1, r2);

        return;
    }

    public int getVersion()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer$KryoSerializerConfigSnapshot r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer$KryoSerializerConfigSnapshot;

        return 1;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility resolveSchemaCompatibility(org.apache.flink.api.common.typeutils.TypeSerializer)
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer$KryoSerializerConfigSnapshot r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r1, $r4;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer r2;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshot $r5;
        java.lang.Class $r6;
        java.util.LinkedHashMap $r7, $r8, $r9;
        org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility $r10;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer$KryoSerializerConfigSnapshot;

        r1 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializer;

        $r4 = specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.KryoRegistrationSerializerConfigSnapshot: org.apache.flink.api.common.typeutils.TypeSerializer restoreSerializer()>();

        r2 = (org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer) $r4;

        $r5 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshot;

        $r6 = virtualinvoke r2.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: java.lang.Class getType()>();

        $r7 = virtualinvoke r2.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: java.util.LinkedHashMap getDefaultKryoSerializers()>();

        $r8 = virtualinvoke r2.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: java.util.LinkedHashMap getDefaultKryoSerializerClasses()>();

        $r9 = virtualinvoke r2.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: java.util.LinkedHashMap getKryoRegistrations()>();

        specialinvoke $r5.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshot: void <init>(java.lang.Class,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap)>($r6, $r7, $r8, $r9);

        $r10 = virtualinvoke $r5.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshot: org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility resolveSchemaCompatibility(org.apache.flink.api.common.typeutils.TypeSerializer)>(r1);

        return $r10;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer$KryoSerializerConfigSnapshot: int VERSION> = 1;

        return;
    }
}
