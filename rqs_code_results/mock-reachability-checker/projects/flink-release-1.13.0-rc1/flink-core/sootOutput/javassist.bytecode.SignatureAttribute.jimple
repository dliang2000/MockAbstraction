public class javassist.bytecode.SignatureAttribute extends javassist.bytecode.AttributeInfo
{
    public static final java.lang.String tag;

    void <init>(javassist.bytecode.ConstPool, int, java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.SignatureAttribute r0;
        javassist.bytecode.ConstPool r1;
        int i0;
        java.io.DataInputStream r2;

        r0 := @this: javassist.bytecode.SignatureAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.DataInputStream;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,int,java.io.DataInputStream)>(r1, i0, r2);

        return;
    }

    public void <init>(javassist.bytecode.ConstPool, java.lang.String)
    {
        javassist.bytecode.SignatureAttribute r0;
        javassist.bytecode.ConstPool r1;
        java.lang.String r2;
        int i0, $i1;
        byte[] r3;
        byte $b2, $b3;

        r0 := @this: javassist.bytecode.SignatureAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<javassist.bytecode.AttributeInfo: void <init>(javassist.bytecode.ConstPool,java.lang.String)>(r1, "Signature");

        i0 = virtualinvoke r1.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r2);

        r3 = newarray (byte)[2];

        $i1 = i0 >>> 8;

        $b2 = (byte) $i1;

        r3[0] = $b2;

        $b3 = (byte) i0;

        r3[1] = $b3;

        virtualinvoke r0.<javassist.bytecode.SignatureAttribute: void set(byte[])>(r3);

        return;
    }

    public java.lang.String getSignature()
    {
        javassist.bytecode.SignatureAttribute r0;
        javassist.bytecode.ConstPool $r1;
        byte[] $r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: javassist.bytecode.SignatureAttribute;

        $r1 = virtualinvoke r0.<javassist.bytecode.SignatureAttribute: javassist.bytecode.ConstPool getConstPool()>();

        $r2 = virtualinvoke r0.<javassist.bytecode.SignatureAttribute: byte[] get()>();

        $i0 = staticinvoke <javassist.bytecode.ByteArray: int readU16bit(byte[],int)>($r2, 0);

        $r3 = virtualinvoke $r1.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i0);

        return $r3;
    }

    public void setSignature(java.lang.String)
    {
        javassist.bytecode.SignatureAttribute r0;
        java.lang.String r1;
        int i0;
        javassist.bytecode.ConstPool $r2;
        byte[] $r3;

        r0 := @this: javassist.bytecode.SignatureAttribute;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<javassist.bytecode.SignatureAttribute: javassist.bytecode.ConstPool getConstPool()>();

        i0 = virtualinvoke $r2.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r1);

        $r3 = r0.<javassist.bytecode.SignatureAttribute: byte[] info>;

        staticinvoke <javassist.bytecode.ByteArray: void write16bit(int,byte[],int)>(i0, $r3, 0);

        return;
    }

    public javassist.bytecode.AttributeInfo copy(javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.SignatureAttribute r0, $r3;
        javassist.bytecode.ConstPool r1;
        java.util.Map r2;
        java.lang.String $r4;

        r0 := @this: javassist.bytecode.SignatureAttribute;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: java.util.Map;

        $r3 = new javassist.bytecode.SignatureAttribute;

        $r4 = virtualinvoke r0.<javassist.bytecode.SignatureAttribute: java.lang.String getSignature()>();

        specialinvoke $r3.<javassist.bytecode.SignatureAttribute: void <init>(javassist.bytecode.ConstPool,java.lang.String)>(r1, $r4);

        return $r3;
    }

    void renameClass(java.lang.String, java.lang.String)
    {
        javassist.bytecode.SignatureAttribute r0;
        java.lang.String r1, r2, r3, $r4;

        r0 := @this: javassist.bytecode.SignatureAttribute;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r0.<javassist.bytecode.SignatureAttribute: java.lang.String getSignature()>();

        r3 = staticinvoke <javassist.bytecode.SignatureAttribute: java.lang.String renameClass(java.lang.String,java.lang.String,java.lang.String)>($r4, r1, r2);

        virtualinvoke r0.<javassist.bytecode.SignatureAttribute: void setSignature(java.lang.String)>(r3);

        return;
    }

    void renameClass(java.util.Map)
    {
        javassist.bytecode.SignatureAttribute r0;
        java.util.Map r1;
        java.lang.String r2, $r3;

        r0 := @this: javassist.bytecode.SignatureAttribute;

        r1 := @parameter0: java.util.Map;

        $r3 = virtualinvoke r0.<javassist.bytecode.SignatureAttribute: java.lang.String getSignature()>();

        r2 = staticinvoke <javassist.bytecode.SignatureAttribute: java.lang.String renameClass(java.lang.String,java.util.Map)>($r3, r1);

        virtualinvoke r0.<javassist.bytecode.SignatureAttribute: void setSignature(java.lang.String)>(r2);

        return;
    }

    static java.lang.String renameClass(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r6;
        java.util.HashMap $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r6 = staticinvoke <javassist.bytecode.SignatureAttribute: java.lang.String renameClass(java.lang.String,java.util.Map)>(r0, $r4);

        return $r6;
    }

    static java.lang.String renameClass(java.lang.String, java.util.Map)
    {
        java.lang.String r0, r4, $r8, $r16, $r17, r21;
        java.util.Map r1;
        java.lang.StringBuilder $r5, $r6;
        java.lang.Object $r7;
        char $c0, $c5;
        java.lang.IndexOutOfBoundsException $r19;
        int i1, i2, i3, i4, i8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        if r1 != null goto label01;

        return r0;

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

        i2 = 0;

     label02:
        i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(76, i2);

        if i3 >= 0 goto label03;

        goto label11;

     label03:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        i4 = i3;

     label04:
        i4 = i4 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        if $c5 == 59 goto label07;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        if $c5 != 60 goto label04;

     label05:
        i4 = i4 + 1;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        if $c0 == 62 goto label06;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        goto label05;

     label06:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        goto label04;

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

        goto label11;

     label09:
        i2 = i4 + 1;

        r21 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r21);

        r4 = (java.lang.String) $r7;

        if r4 == null goto label10;

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(76);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        i1 = i2;

     label10:
        goto label02;

     label11:
        if i1 != 0 goto label12;

        return r0;

     label12:
        i8 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= i8 goto label13;

        $r17 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label13:
        $r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

        catch java.lang.IndexOutOfBoundsException from label04 to label07 with label08;
    }

    private static boolean isNamePart(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 59 goto label1;

        if i0 == 60 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static javassist.bytecode.SignatureAttribute$ClassSignature toClassSignature(java.lang.String) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$ClassSignature $r2;
        java.lang.IndexOutOfBoundsException $r3;
        javassist.bytecode.BadBytecode $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ClassSignature parseSig(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.BadBytecode error(java.lang.String)>(r0);

        throw $r4;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public static javassist.bytecode.SignatureAttribute$MethodSignature toMethodSignature(java.lang.String) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$MethodSignature $r2;
        java.lang.IndexOutOfBoundsException $r3;
        javassist.bytecode.BadBytecode $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$MethodSignature parseMethodSig(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.BadBytecode error(java.lang.String)>(r0);

        throw $r4;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public static javassist.bytecode.SignatureAttribute$ObjectType toFieldSignature(java.lang.String) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$Cursor $r2;
        javassist.bytecode.SignatureAttribute$ObjectType $r3;
        java.lang.IndexOutOfBoundsException $r4;
        javassist.bytecode.BadBytecode $r5;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = new javassist.bytecode.SignatureAttribute$Cursor;

        specialinvoke $r2.<javassist.bytecode.SignatureAttribute$Cursor: void <init>(javassist.bytecode.SignatureAttribute$1)>(null);

        $r3 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ObjectType parseObjectType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor,boolean)>(r0, $r2, 0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.BadBytecode error(java.lang.String)>(r0);

        throw $r5;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public static javassist.bytecode.SignatureAttribute$Type toTypeSignature(java.lang.String) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$Cursor $r2;
        javassist.bytecode.SignatureAttribute$Type $r3;
        java.lang.IndexOutOfBoundsException $r4;
        javassist.bytecode.BadBytecode $r5;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = new javassist.bytecode.SignatureAttribute$Cursor;

        specialinvoke $r2.<javassist.bytecode.SignatureAttribute$Cursor: void <init>(javassist.bytecode.SignatureAttribute$1)>(null);

        $r3 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$Type parseType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor)>(r0, $r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.BadBytecode error(java.lang.String)>(r0);

        throw $r5;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    private static javassist.bytecode.SignatureAttribute$ClassSignature parseSig(java.lang.String) throws javassist.bytecode.BadBytecode, java.lang.IndexOutOfBoundsException
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$TypeParameter[] r2;
        javassist.bytecode.SignatureAttribute$ClassType r3, $r11;
        int i0, $i1, $i2, $i3;
        javassist.bytecode.SignatureAttribute$ClassType[] r5, $r8;
        javassist.bytecode.SignatureAttribute$Cursor $r6;
        java.util.ArrayList $r7;
        java.lang.Object[] $r9;
        javassist.bytecode.SignatureAttribute$ClassSignature $r10;
        char $c4;

        r0 := @parameter0: java.lang.String;

        $r6 = new javassist.bytecode.SignatureAttribute$Cursor;

        specialinvoke $r6.<javassist.bytecode.SignatureAttribute$Cursor: void <init>(javassist.bytecode.SignatureAttribute$1)>(null);

        r2 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$TypeParameter[] parseTypeParams(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor)>(r0, $r6);

        r3 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ClassType parseClassType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor)>(r0, $r6);

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label1:
        $i1 = $r6.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        if $i1 >= i0 goto label2;

        $i3 = $r6.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        if $c4 != 76 goto label2;

        $r11 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ClassType parseClassType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor)>(r0, $r6);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r8 = newarray (javassist.bytecode.SignatureAttribute$ClassType)[$i2];

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        r5 = (javassist.bytecode.SignatureAttribute$ClassType[]) $r9;

        $r10 = new javassist.bytecode.SignatureAttribute$ClassSignature;

        specialinvoke $r10.<javassist.bytecode.SignatureAttribute$ClassSignature: void <init>(javassist.bytecode.SignatureAttribute$TypeParameter[],javassist.bytecode.SignatureAttribute$ClassType,javassist.bytecode.SignatureAttribute$ClassType[])>(r2, r3, r5);

        return $r10;
    }

    private static javassist.bytecode.SignatureAttribute$MethodSignature parseMethodSig(java.lang.String) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$TypeParameter[] r2;
        int i0, $i1, $i2, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14;
        javassist.bytecode.SignatureAttribute$ObjectType[] r5, $r11;
        javassist.bytecode.SignatureAttribute$Cursor $r6;
        char $c3, $c5, $c12;
        java.util.ArrayList $r7, $r8;
        javassist.bytecode.SignatureAttribute$Type[] $r9, r19;
        java.lang.Object[] $r10, $r12;
        javassist.bytecode.SignatureAttribute$MethodSignature $r13;
        boolean $z0;
        javassist.bytecode.BadBytecode $r14, $r15;
        javassist.bytecode.SignatureAttribute$Type r16, r17;
        javassist.bytecode.SignatureAttribute$ObjectType r18;

        r0 := @parameter0: java.lang.String;

        $r6 = new javassist.bytecode.SignatureAttribute$Cursor;

        specialinvoke $r6.<javassist.bytecode.SignatureAttribute$Cursor: void <init>(javassist.bytecode.SignatureAttribute$1)>(null);

        r2 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$TypeParameter[] parseTypeParams(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor)>(r0, $r6);

        $i1 = $r6.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i2 = $i1 + 1;

        $r6.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i2;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1);

        if $c3 == 40 goto label1;

        $r15 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.BadBytecode error(java.lang.String)>(r0);

        throw $r15;

     label1:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label2:
        $i4 = $r6.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        if $c5 == 41 goto label3;

        r16 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$Type parseType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor)>(r0, $r6);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r16);

        goto label2;

     label3:
        $i6 = $r6.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i7 = $i6 + 1;

        $r6.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i7;

        r17 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$Type parseType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor)>(r0, $r6);

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

     label4:
        $i8 = $r6.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        if $i8 >= i0 goto label6;

        $i11 = $r6.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i11);

        if $c12 != 94 goto label6;

        $i13 = $r6.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i14 = $i13 + 1;

        $r6.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i14;

        r18 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ObjectType parseObjectType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor,boolean)>(r0, $r6, 0);

        $z0 = r18 instanceof javassist.bytecode.SignatureAttribute$ArrayType;

        if $z0 == 0 goto label5;

        $r14 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.BadBytecode error(java.lang.String)>(r0);

        throw $r14;

     label5:
        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r18);

        goto label4;

     label6:
        $i9 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r9 = newarray (javassist.bytecode.SignatureAttribute$Type)[$i9];

        $r10 = interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        r19 = (javassist.bytecode.SignatureAttribute$Type[]) $r10;

        $i10 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r11 = newarray (javassist.bytecode.SignatureAttribute$ObjectType)[$i10];

        $r12 = interfaceinvoke $r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        r5 = (javassist.bytecode.SignatureAttribute$ObjectType[]) $r12;

        $r13 = new javassist.bytecode.SignatureAttribute$MethodSignature;

        specialinvoke $r13.<javassist.bytecode.SignatureAttribute$MethodSignature: void <init>(javassist.bytecode.SignatureAttribute$TypeParameter[],javassist.bytecode.SignatureAttribute$Type[],javassist.bytecode.SignatureAttribute$Type,javassist.bytecode.SignatureAttribute$ObjectType[])>(r2, r19, r17, r5);

        return $r13;
    }

    private static javassist.bytecode.SignatureAttribute$TypeParameter[] parseTypeParams(java.lang.String, javassist.bytecode.SignatureAttribute$Cursor) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$Cursor r1;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i13, $i14, $i15;
        javassist.bytecode.SignatureAttribute$ObjectType r3, r14;
        java.util.ArrayList $r5, $r9;
        char $c3, $c8, $c12;
        javassist.bytecode.SignatureAttribute$TypeParameter[] $r6, $r8;
        java.lang.Object[] $r7, $r12;
        javassist.bytecode.SignatureAttribute$TypeParameter $r10;
        javassist.bytecode.SignatureAttribute$ObjectType[] $r11, $r13;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javassist.bytecode.SignatureAttribute$Cursor;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $i2 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 60 goto label5;

        $i5 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i6 = $i5 + 1;

        r1.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i6;

     label1:
        $i7 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        if $c8 == 62 goto label4;

        i0 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        i1 = virtualinvoke r1.<javassist.bytecode.SignatureAttribute$Cursor: int indexOf(java.lang.String,int)>(r0, 58);

        r3 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ObjectType parseObjectType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor,boolean)>(r0, r1, 1);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

     label2:
        $i11 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i11);

        if $c12 != 58 goto label3;

        $i14 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i15 = $i14 + 1;

        r1.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i15;

        r14 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ObjectType parseObjectType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor,boolean)>(r0, r1, 0);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r14);

        goto label2;

     label3:
        $r10 = new javassist.bytecode.SignatureAttribute$TypeParameter;

        $i13 = interfaceinvoke $r9.<java.util.List: int size()>();

        $r11 = newarray (javassist.bytecode.SignatureAttribute$ObjectType)[$i13];

        $r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        $r13 = (javassist.bytecode.SignatureAttribute$ObjectType[]) $r12;

        specialinvoke $r10.<javassist.bytecode.SignatureAttribute$TypeParameter: void <init>(java.lang.String,int,int,javassist.bytecode.SignatureAttribute$ObjectType,javassist.bytecode.SignatureAttribute$ObjectType[])>(r0, i0, i1, r3, $r13);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label4:
        $i9 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i10 = $i9 + 1;

        r1.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i10;

     label5:
        $i4 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = newarray (javassist.bytecode.SignatureAttribute$TypeParameter)[$i4];

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (javassist.bytecode.SignatureAttribute$TypeParameter[]) $r7;

        return $r8;
    }

    private static javassist.bytecode.SignatureAttribute$ObjectType parseObjectType(java.lang.String, javassist.bytecode.SignatureAttribute$Cursor, boolean) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$Cursor r1;
        boolean z0;
        int i0, i1, $i3;
        char $c2;
        javassist.bytecode.SignatureAttribute$ObjectType $r2;
        javassist.bytecode.SignatureAttribute$TypeVariable $r3;
        javassist.bytecode.SignatureAttribute$ClassType $r4;
        javassist.bytecode.BadBytecode $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javassist.bytecode.SignatureAttribute$Cursor;

        z0 := @parameter2: boolean;

        i1 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        lookupswitch($c2)
        {
            case 76: goto label1;
            case 84: goto label2;
            case 91: goto label3;
            default: goto label4;
        };

     label1:
        $r4 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ClassType parseClassType2(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor,javassist.bytecode.SignatureAttribute$ClassType)>(r0, r1, null);

        return $r4;

     label2:
        i0 = virtualinvoke r1.<javassist.bytecode.SignatureAttribute$Cursor: int indexOf(java.lang.String,int)>(r0, 59);

        $r3 = new javassist.bytecode.SignatureAttribute$TypeVariable;

        $i3 = i1 + 1;

        specialinvoke $r3.<javassist.bytecode.SignatureAttribute$TypeVariable: void <init>(java.lang.String,int,int)>(r0, $i3, i0);

        return $r3;

     label3:
        $r2 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ObjectType parseArray(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor)>(r0, r1);

        return $r2;

     label4:
        if z0 == 0 goto label5;

        return null;

     label5:
        $r5 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.BadBytecode error(java.lang.String)>(r0);

        throw $r5;
    }

    private static javassist.bytecode.SignatureAttribute$ClassType parseClassType(java.lang.String, javassist.bytecode.SignatureAttribute$Cursor) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$Cursor r1;
        int $i0;
        char $c1;
        javassist.bytecode.BadBytecode $r2;
        javassist.bytecode.SignatureAttribute$ClassType $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javassist.bytecode.SignatureAttribute$Cursor;

        $i0 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i0);

        if $c1 != 76 goto label1;

        $r3 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ClassType parseClassType2(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor,javassist.bytecode.SignatureAttribute$ClassType)>(r0, r1, null);

        return $r3;

     label1:
        $r2 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.BadBytecode error(java.lang.String)>(r0);

        throw $r2;
    }

    private static javassist.bytecode.SignatureAttribute$ClassType parseClassType2(java.lang.String, javassist.bytecode.SignatureAttribute$Cursor, javassist.bytecode.SignatureAttribute$ClassType) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$Cursor r1;
        javassist.bytecode.SignatureAttribute$ClassType r2, r3, $r4;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        char c10;
        javassist.bytecode.SignatureAttribute$TypeArgument[] r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javassist.bytecode.SignatureAttribute$Cursor;

        r2 := @parameter2: javassist.bytecode.SignatureAttribute$ClassType;

        $i2 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i3 = $i2 + 1;

        r1.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i3;

     label1:
        $i4 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i5 = $i4 + 1;

        r1.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i5;

        c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        if c10 == 36 goto label2;

        if c10 == 60 goto label2;

        if c10 != 59 goto label1;

     label2:
        $i11 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        i1 = $i11 - 1;

        if c10 != 60 goto label3;

        r7 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$TypeArgument[] parseTypeArgs(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor)>(r0, r1);

        $i8 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i9 = $i8 + 1;

        r1.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i9;

        c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i8);

        goto label4;

     label3:
        r7 = null;

     label4:
        r3 = staticinvoke <javassist.bytecode.SignatureAttribute$ClassType: javassist.bytecode.SignatureAttribute$ClassType make(java.lang.String,int,int,javassist.bytecode.SignatureAttribute$TypeArgument[],javassist.bytecode.SignatureAttribute$ClassType)>(r0, $i3, i1, r7, r2);

        if c10 == 36 goto label5;

        if c10 != 46 goto label6;

     label5:
        $i6 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i7 = $i6 - 1;

        r1.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i7;

        $r4 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ClassType parseClassType2(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor,javassist.bytecode.SignatureAttribute$ClassType)>(r0, r1, r3);

        return $r4;

     label6:
        return r3;
    }

    private static javassist.bytecode.SignatureAttribute$TypeArgument[] parseTypeArgs(java.lang.String, javassist.bytecode.SignatureAttribute$Cursor) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$Cursor r1;
        java.util.ArrayList $r3;
        int $i0, $i1, $i3, $i4, $i5;
        char $c2, c6;
        javassist.bytecode.SignatureAttribute$TypeArgument[] $r4, $r6;
        java.lang.Object[] $r5;
        javassist.bytecode.SignatureAttribute$TypeArgument $r8, r9, $r10;
        javassist.bytecode.SignatureAttribute$ObjectType $r11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javassist.bytecode.SignatureAttribute$Cursor;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        $i0 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i1 = $i0 + 1;

        r1.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i0);

        c6 = $c2;

        if $c2 == 62 goto label5;

        if $c2 != 42 goto label2;

        $r8 = new javassist.bytecode.SignatureAttribute$TypeArgument;

        specialinvoke $r8.<javassist.bytecode.SignatureAttribute$TypeArgument: void <init>(javassist.bytecode.SignatureAttribute$ObjectType,char)>(null, 42);

        r9 = $r8;

        goto label4;

     label2:
        if $c2 == 43 goto label3;

        if $c2 == 45 goto label3;

        c6 = 32;

        $i4 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i5 = $i4 - 1;

        r1.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i5;

     label3:
        $r10 = new javassist.bytecode.SignatureAttribute$TypeArgument;

        $r11 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ObjectType parseObjectType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor,boolean)>(r0, r1, 0);

        specialinvoke $r10.<javassist.bytecode.SignatureAttribute$TypeArgument: void <init>(javassist.bytecode.SignatureAttribute$ObjectType,char)>($r11, c6);

        r9 = $r10;

     label4:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r9);

        goto label1;

     label5:
        $i3 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = newarray (javassist.bytecode.SignatureAttribute$TypeArgument)[$i3];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (javassist.bytecode.SignatureAttribute$TypeArgument[]) $r5;

        return $r6;
    }

    private static javassist.bytecode.SignatureAttribute$ObjectType parseArray(java.lang.String, javassist.bytecode.SignatureAttribute$Cursor) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$Cursor r1;
        int $i0, $i1, i3;
        char $c2;
        javassist.bytecode.SignatureAttribute$ArrayType $r2;
        javassist.bytecode.SignatureAttribute$Type $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javassist.bytecode.SignatureAttribute$Cursor;

        i3 = 1;

     label1:
        $i0 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i1 = $i0 + 1;

        r1.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1);

        if $c2 != 91 goto label2;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = new javassist.bytecode.SignatureAttribute$ArrayType;

        $r3 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$Type parseType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor)>(r0, r1);

        specialinvoke $r2.<javassist.bytecode.SignatureAttribute$ArrayType: void <init>(int,javassist.bytecode.SignatureAttribute$Type)>(i3, $r3);

        return $r2;
    }

    private static javassist.bytecode.SignatureAttribute$Type parseType(java.lang.String, javassist.bytecode.SignatureAttribute$Cursor) throws javassist.bytecode.BadBytecode
    {
        java.lang.String r0;
        javassist.bytecode.SignatureAttribute$Cursor r1;
        javassist.bytecode.SignatureAttribute$BaseType $r2;
        int $i0, $i1;
        char $c2;
        javassist.bytecode.SignatureAttribute$Type r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javassist.bytecode.SignatureAttribute$Cursor;

        r3 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.SignatureAttribute$ObjectType parseObjectType(java.lang.String,javassist.bytecode.SignatureAttribute$Cursor,boolean)>(r0, r1, 1);

        if r3 != null goto label1;

        $r2 = new javassist.bytecode.SignatureAttribute$BaseType;

        $i0 = r1.<javassist.bytecode.SignatureAttribute$Cursor: int position>;

        $i1 = $i0 + 1;

        r1.<javassist.bytecode.SignatureAttribute$Cursor: int position> = $i1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i0);

        specialinvoke $r2.<javassist.bytecode.SignatureAttribute$BaseType: void <init>(char)>($c2);

        r3 = $r2;

     label1:
        return r3;
    }

    private static javassist.bytecode.BadBytecode error(java.lang.String)
    {
        java.lang.String r0, $r5;
        javassist.bytecode.BadBytecode $r1;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        $r1 = new javassist.bytecode.BadBytecode;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad signature: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<javassist.bytecode.BadBytecode: void <init>(java.lang.String)>($r5);

        return $r1;
    }

    static javassist.bytecode.BadBytecode access$000(java.lang.String)
    {
        java.lang.String r0;
        javassist.bytecode.BadBytecode $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <javassist.bytecode.SignatureAttribute: javassist.bytecode.BadBytecode error(java.lang.String)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <javassist.bytecode.SignatureAttribute: java.lang.String tag> = "Signature";

        return;
    }
}
